GAS LISTING fasm.s 			page 1


   1              	# --------------------------------------------------------------------------
   2              	
   3              	               .global main
   4              	
   5              	# --------------------------------------------------------------------------
   6              	               .data
   7              	               .align 2
   8              	
   9 0000 0000     	DSP:           .word 0
  10              	data_stack:
  11 0002 00000000 	.skip 256
  11      00000000 
  11      00000000 
  11      00000000 
  11      00000000 
  12              	
  13 0102 0000     	RSP:           .word 0
  14              	return_stack:
  15 0104 00000000 	.skip 256
  15      00000000 
  15      00000000 
  15      00000000 
  15      00000000 
  16              	
  17 0204 00000000 	STDIN:         .int 0
  18              	
  19              	buf:
  20 0208 00000000 	.skip 256
  20      00000000 
  20      00000000 
  20      00000000 
  20      00000000 
  21              	
  22              	# --------------------------------------------------------------------------
  23              	               .text
  24              	
  25              	sys_init:
  26 0000 C7050000 	               movl $data_stack, DSP
  26      00000200 
  26      0000
  27 000a C7050201 	               movl $return_stack, RSP
  27      00000401 
  27      0000
  28 0014 8B2D0000 	               movl DSP, %ebp
  28      0000
  29 001a C3       	               ret
  30              	
  31              	sys_reset:
  32 001b E8E0FFFF 	              call sys_init
  32      FF
  33              	
  34              	main_loop:
  35 0020 83C504   	               add $4, %ebp
  36 0023 C745002E 	               movl $'.', (%ebp)
  36      000000
  37 002a 83C504   	               add $4, %ebp
  38 002d C745006B 	               movl $'k', (%ebp)
GAS LISTING fasm.s 			page 2


  38      000000
  39 0034 83C504   	               add $4, %ebp
  40 0037 C745004F 	               movl $'O', (%ebp)
  40      000000
  41              	
  42 003e E8F80000 	               call func_EMIT            
  42      00
  43 0043 E8F30000 	               call func_EMIT            
  43      00
  44 0048 E8EE0000 	               call func_EMIT            
  44      00
  45 004d E8F20600 	               call L00000372
  45      00
  46 0052 E8D00100 	               call func_BYE
  46      00
  47 0057 EBC7     	               jmp main_loop
  48 0059 C3       	               ret
  49              	main:
  50              	               /* handle = GetStdHandle(-11) */
  51 005a 6AF5     	               pushl   $-11
  52 005c E8000000 	               call    _GetStdHandle@4
  52      00
  53 0061 A3040200 	               mov     %eax, STDIN
  53      00
  54              	               
  55 0066 EBB3     	               jmp sys_reset
  56              	
  57              	# -------------------------------------------------------------------------------------
  58              	func_PUSH_doesntwork:                                        # Implementation of PUSH
  59 0068 50       	              pushl %eax
  60 0069 8B4424F8 	              movl -8(%esp), %eax
  61 006d 83C504   	              addl $4, %ebp
  62 0070 894500   	              mov %eax, (%ebp)
  63 0073 58       	              popl %eax
  64 0074 C3       	              ret
  65              	
  66              	# -------------------------------------------------------------------------------------
  67              	func_EQ:                                        # Implementation of EQ
  68 0075 8B4500   	               movl (%ebp), %eax                # POP to %eax
  69 0078 83ED04   	               subl $4, %ebp
  70 007b 8B5D00   	               movl (%ebp), %ebx                # get TOS to %ebx
  71 007e 39D8     	               cmpl %ebx, %eax
  72 0080 7407     	               jz EQ_true
  73 0082 B8000000 	               movl $0, %eax
  73      00
  74 0087 EB05     	               jmp EQ_done
  75 0089 B8010000 	EQ_true:       movl $1, %eax
  75      00
  76 008e 894500   	EQ_done:       movl %eax, (%ebp)                # set TOS from %eax
  77 0091 C3       	               ret
  78              	               
  79              	# -------------------------------------------------------------------------------------
  80              	func_NEQ:                                       # Implementation of NEQ
  81 0092 8B4500   	               movl (%ebp), %eax                # POP to %eax
  82 0095 83ED04   	               subl $4, %ebp
  83 0098 8B5D00   	               movl (%ebp), %ebx                # get TOS to %ebx
  84 009b 39D8     	               cmpl %ebx, %eax
GAS LISTING fasm.s 			page 3


  85 009d 7507     	               jnz NEQ_true
  86 009f B8000000 	               movl $0, %eax
  86      00
  87 00a4 EB05     	               jmp NEQ_done
  88 00a6 B8010000 	NEQ_true:      movl $1, %eax
  88      00
  89 00ab 894500   	NEQ_done:      movl %eax, (%ebp)                # set TOS from %eax
  90 00ae C3       	               ret
  91              	               
  92              	# -------------------------------------------------------------------------------------
  93              	func_LT:                                        # Implementation of LT
  94 00af 8B4500   	               movl (%ebp), %eax                # POP to %eax
  95 00b2 83ED04   	               subl $4, %ebp
  96 00b5 8B5D00   	               movl (%ebp), %ebx                # POP to %ebx
  97 00b8 83ED04   	               subl $4, %ebp
  98 00bb 39D8     	               cmpl %ebx, %eax
  99 00bd 7C07     	               jl LT_true
 100 00bf B8000000 	               movl $0, %eax
 100      00
 101 00c4 EB05     	               jmp LT_done
 102 00c6 B8010000 	LT_true:       movl $1, %eax
 102      00
 103 00cb 83C504   	LT_done:       addl $4, %ebp                    # PUSH %eax
 104 00ce 894500   	               movl %eax, (%ebp)
 105 00d1 C3       	               ret
 106              	               
 107              	# -------------------------------------------------------------------------------------
 108              	func_GT:                                        # Implementation of GT
 109 00d2 8B4500   	               movl (%ebp), %eax                # POP to %eax
 110 00d5 83ED04   	               subl $4, %ebp
 111 00d8 8B5D00   	               movl (%ebp), %ebx                # POP to %ebx
 112 00db 83ED04   	               subl $4, %ebp
 113 00de 39D8     	               cmpl %ebx, %eax
 114 00e0 7F07     	               jg GT_true
 115 00e2 B8000000 	               movl $0, %eax
 115      00
 116 00e7 EB05     	               jmp GT_done
 117 00e9 B8010000 	GT_true:       movl $1, %eax
 117      00
 118 00ee 83C504   	GT_done:       addl $4, %ebp                    # PUSH %eax
 119 00f1 894500   	               movl %eax, (%ebp)
 120 00f4 C3       	               ret
 121              	               
 122              	# -------------------------------------------------------------------------------------
 123              	func_LTE:                                       # Implementation of LTE
 124 00f5 8B4500   	               movl (%ebp), %eax                # POP to %eax
 125 00f8 83ED04   	               subl $4, %ebp
 126 00fb 8B5D00   	               movl (%ebp), %ebx                # POP to %ebx
 127 00fe 83ED04   	               subl $4, %ebp
 128 0101 39D8     	               cmpl %ebx, %eax
 129 0103 7E07     	               jle LTE_true
 130 0105 B8000000 	               movl $0, %eax
 130      00
 131 010a EB05     	               jmp LTE_done
 132 010c B8010000 	LTE_true:      movl $1, %eax
 132      00
 133 0111 83C504   	LTE_done:      addl $4, %ebp                    # PUSH %eax
GAS LISTING fasm.s 			page 4


 134 0114 894500   	               movl %eax, (%ebp)
 135 0117 C3       	               ret
 136              	               
 137              	# -------------------------------------------------------------------------------------
 138              	func_GTE:                                       # Implementation of GTE
 139 0118 8B4500   	               movl (%ebp), %eax                # POP to %eax
 140 011b 83ED04   	               subl $4, %ebp
 141 011e 8B5D00   	               movl (%ebp), %ebx                # POP to %ebx
 142 0121 83ED04   	               subl $4, %ebp
 143 0124 39D8     	               cmpl %ebx, %eax
 144 0126 7D07     	               jge GTE_true
 145 0128 B8000000 	               movl $0, %eax
 145      00
 146 012d EB05     	               jmp GTE_done
 147 012f B8010000 	GTE_true:      movl $1, %eax
 147      00
 148 0134 83C504   	GTE_done:      addl $4, %ebp                    # PUSH %eax
 149 0137 894500   	               movl %eax, (%ebp)
 150 013a C3       	               ret
 151              	               
 152              	# -------------------------------------------------------------------------------------
 153              	func_EMIT:                                      # Implementation of EMIT
 154 013b 8B4500   	               movl (%ebp), %eax                # POP to %edi
 155 013e 83ED04   	               subl $4, %ebp
 156              	
 157 0141 A2080200 	               mov %al, buf
 157      00
 158              	
 159              	               /* WriteConsole(handle, &msg[0], num_chars, &written, 0) */
 160 0146 6A00     	               pushl   $0
 161 0148 6A00     	               pushl   $0
 162 014a 6A01     	               pushl   $1
 163 014c 68080200 	               pushl   $buf
 163      00
 164 0151 FF350402 	               pushl   STDIN
 164      0000
 165 0157 E8000000 	               call    _WriteConsoleA@20
 165      00
 166              	
 167 015c C3       	               ret
 168              	               
 169              	# -------------------------------------------------------------------------------------
 170              	func_FETCH:                                     # Implementation of FETCH
 171 015d 8B5500   	               movl (%ebp), %edx
 172 0160 8B02     	               movl (%edx), %eax
 173 0162 894500   	               movl %eax, (%ebp)
 174 0165 C3       	               ret
 175              	               
 176              	# -------------------------------------------------------------------------------------
 177              	func_CFETCH:                                    # Implementation of CFETCH
 178 0166 8B5500   	               movl (%ebp), %edx
 179 0169 31C0     	               xor %eax, %eax
 180 016b 8A02     	               movb (%edx), %al
 181 016d 894500   	               movl %eax, (%ebp)
 182 0170 C3       	               ret
 183              	               
 184              	func_STORE:                                     # Implementation of STORE
GAS LISTING fasm.s 			page 5


 185 0171 8B5500   	               movl (%ebp), %edx                # POP to %edx
 186 0174 83ED04   	               subl $4, %ebp
 187 0177 8B4500   	               movl (%ebp), %eax                # POP to %eax
 188 017a 83ED04   	               subl $4, %ebp
 189 017d 8902     	               movl %eax, (%edx)
 190 017f C3       	               ret
 191              	               
 192              	# -------------------------------------------------------------------------------------
 193              	func_CSTORE:                                    # Implementation of CSTORE
 194 0180 8B5500   	               movl (%ebp), %edx                # POP to %edx
 195 0183 83ED04   	               subl $4, %ebp
 196 0186 8B4500   	               movl (%ebp), %eax                # POP to %eax
 197 0189 83ED04   	               subl $4, %ebp
 198 018c 8802     	               movb %al, (%edx)
 199 018e C3       	               ret
 200              	               
 201              	# -------------------------------------------------------------------------------------
 202              	func_DUP:                                       # Implementation of DUP
 203 018f 8B4500   	               movl (%ebp), %eax
 204 0192 83C504   	               addl $4, %ebp                    # PUSH %eax
 205 0195 894500   	               movl %eax, (%ebp)
 206 0198 C3       	               ret
 207              	               
 208              	# -------------------------------------------------------------------------------------
 209              	func_SWAP:                                      # Implementation of SWAP
 210 0199 8B4500   	               movl (%ebp), %eax                # POP to %eax
 211 019c 83ED04   	               subl $4, %ebp
 212 019f 8B5D00   	               movl (%ebp), %ebx
 213 01a2 894500   	               movl %eax, (%ebp)
 214 01a5 83C504   	               addl $4, %ebp                    # PUSH %ebx
 215 01a8 895D00   	               movl %ebx, (%ebp)
 216 01ab C3       	               ret
 217              	               
 218              	# -------------------------------------------------------------------------------------
 219              	func_OVER:                                      # Implementation of OVER
 220 01ac 8B4500   	               movl (%ebp), %eax                # POP to %eax
 221 01af 83ED04   	               subl $4, %ebp
 222 01b2 8B5500   	               movl (%ebp), %edx
 223 01b5 83C504   	               addl $4, %ebp                    # PUSH %eax
 224 01b8 894500   	               movl %eax, (%ebp)
 225 01bb 83C504   	               addl $4, %ebp                    # PUSH %edx
 226 01be 895500   	               movl %edx, (%ebp)
 227 01c1 C3       	               ret
 228              	               
 229              	# -------------------------------------------------------------------------------------
 230              	func_ADD:                                       # Implementation of ADD
 231 01c2 8B5D00   	               movl (%ebp), %ebx                # POP to %ebx
 232 01c5 83ED04   	               subl $4, %ebp
 233 01c8 8B4500   	               movl (%ebp), %eax
 234 01cb 01D8     	               addl %ebx, %eax
 235 01cd 894500   	               movl %eax, (%ebp)
 236 01d0 C3       	               ret
 237              	               
 238              	# -------------------------------------------------------------------------------------
 239              	func_SUB:                                       # Implementation of SUB
 240 01d1 8B5D00   	               movl (%ebp), %ebx                # POP to %ebx
 241 01d4 83ED04   	               subl $4, %ebp
GAS LISTING fasm.s 			page 6


 242 01d7 8B4500   	               movl (%ebp), %eax
 243 01da 29D8     	               subl %ebx, %eax
 244 01dc 894500   	               movl %eax, (%ebp)
 245 01df C3       	               ret
 246              	               
 247              	# -------------------------------------------------------------------------------------
 248              	func_MUL:                                       # Implementation of MUL
 249 01e0 8B5D00   	               movl (%ebp), %ebx                # POP to %ebx
 250 01e3 83ED04   	               subl $4, %ebp
 251 01e6 8B4500   	               movl (%ebp), %eax
 252 01e9 F7E3     	               mull %ebx
 253 01eb 894500   	               movl %eax, (%ebp)
 254 01ee C3       	               ret
 255              	               
 256              	# -------------------------------------------------------------------------------------
 257              	func_DTOR:                                      # Implementation of DTOR
 258 01ef 50       	               push %eax
 259 01f0 53       	               push %ebx
 260              	
 261              	               # Get the value to move (into %eax) ...
 262 01f1 8B4500   	               movl (%ebp), %eax
 263 01f4 83ED04   	               subl $4, %ebp
 264              	
 265              	               # Put the value onto the RETURN stack ...
 266 01f7 8B1D0201 	               mov RSP, %ebx                    # Get the RETURN SP
 266      0000
 267 01fd 83C304   	               addl $4, %ebx
 268 0200 8B03     	               movl (%ebx), %eax
 269 0202 891D0201 	               mov %ebx, RSP                    # Save it back
 269      0000
 270              	
 271 0208 5B       	               pop %ebx
 272 0209 58       	               pop %eax
 273 020a C3       	               ret
 274              	               
 275              	# -------------------------------------------------------------------------------------
 276              	func_RTOD:                                      # Implementation of RTOD
 277 020b 50       	               push %eax
 278 020c 53       	               push %ebx
 279              	
 280              	               # Get the value to move (into %eax) ...
 281 020d 8B1D0201 	               mov RSP, %ebx                    # Get the RETURN SP
 281      0000
 282 0213 83EB04   	               subl $4, %ebx
 283 0216 8B03     	               movl (%ebx), %eax
 284 0218 891D0201 	               mov %ebx, RSP                    # Save the RETURN SP
 284      0000
 285              	
 286              	               # Put the value onto the DATA stack ...
 287 021e 83C504   	               addl $4, %ebp                    # PUSH %eax
 288 0221 894500   	               movl %eax, (%ebp)
 289              	
 290 0224 5B       	               pop %ebx
 291 0225 58       	               pop %eax
 292 0226 C3       	               ret
 293              	               
 294              	# -------------------------------------------------------------------------------------
GAS LISTING fasm.s 			page 7


 295              	func_BYE:                                      # Implementation of BYE
 296              	
 297 0227 83C504   	               add $4, %ebp
 298 022a C7450045 	               movl $'E', (%ebp)
 298      000000
 299 0231 83C504   	               add $4, %ebp
 300 0234 C7450059 	               movl $'Y', (%ebp)
 300      000000
 301 023b 83C504   	               add $4, %ebp
 302 023e C7450042 	               movl $'B', (%ebp)
 302      000000
 303              	
 304 0245 E8F1FEFF 	               call func_EMIT            
 304      FF
 305 024a E8ECFEFF 	               call func_EMIT            
 305      FF
 306 024f E8E7FEFF 	               call func_EMIT            
 306      FF
 307              	
 308 0254 6A00     	               pushl $0
 309 0256 E8000000 	               call _ExitProcess@4
 309      00
 310 025b C3       	               ret
 311              	               
 312              	# -------------------------------------------------------------------------------------
 313              	/**************************************************************************************
 314              	************************* end of file forth_inc.s *************************************
 315              	***************************************************************************************/
 316              	
 317              	L00000040:                                      # WORD (HERE) (FDEB)
 318 025c 83C504   	               addl $4, %ebp                    # PUSH $16, CLITERAL 16
 319 025f C7450010 	               movl $16, (%ebp)
 319      000000
 320 0266 C3       	               ret
 321              	L00000048:                                      # WORD (LAST) (FDDA)
 322 0267 83C504   	               addl $4, %ebp                    # PUSH $20, CLITERAL 20
 323 026a C7450014 	               movl $20, (%ebp)
 323      000000
 324 0271 C3       	               ret
 325              	L00000050:                                      # WORD CELL (FDCB)
 326 0272 83C504   	               addl $4, %ebp                    # PUSH $4, CLITERAL 4
 327 0275 C7450004 	               movl $4, (%ebp)
 327      000000
 328 027c C3       	               ret
 329              	L00000058:                                      # WORD BASE (FDBC)
 330 027d 83C504   	               addl $4, %ebp                    # PUSH $6, CLITERAL 6
 331 0280 C7450006 	               movl $6, (%ebp)
 331      000000
 332 0287 C3       	               ret
 333              	L00000060:                                      # WORD STATE (FDAC)
 334 0288 83C504   	               addl $4, %ebp                    # PUSH $32, CLITERAL 32
 335 028b C7450020 	               movl $32, (%ebp)
 335      000000
 336 0292 C3       	               ret
 337              	L00000068:                                      # WORD C, (FD9F)
 338 0293 83C504   	               addl $4, %ebp                    # PUSH $16, CLITERAL 16
 339 0296 C7450010 	               movl $16, (%ebp)
GAS LISTING fasm.s 			page 8


 339      000000
 340 029d E8BBFEFF 	               call func_FETCH
 340      FF
 341 02a2 E8D9FEFF 	               call func_CSTORE
 341      FF
 342 02a7 83C504   	               addl $4, %ebp                    # PUSH $16, CLITERAL 16
 343 02aa C7450010 	               movl $16, (%ebp)
 343      000000
 344 02b1 E8A7FEFF 	               call func_FETCH
 344      FF
 345 02b6 83C504   	               addl $4, %ebp                    # PUSH $1, CLITERAL 1
 346 02b9 C7450001 	               movl $1, (%ebp)
 346      000000
 347 02c0 E8FDFEFF 	               call func_ADD
 347      FF
 348 02c5 83C504   	               addl $4, %ebp                    # PUSH $16, CLITERAL 16
 349 02c8 C7450010 	               movl $16, (%ebp)
 349      000000
 350 02cf E89DFEFF 	               call func_STORE
 350      FF
 351 02d4 C3       	               ret
 352              	L0000007B:                                      # WORD , (FD93)
 353 02d5 83C504   	               addl $4, %ebp                    # PUSH $16, CLITERAL 16
 354 02d8 C7450010 	               movl $16, (%ebp)
 354      000000
 355 02df E879FEFF 	               call func_FETCH
 355      FF
 356 02e4 E888FEFF 	               call func_STORE
 356      FF
 357 02e9 83C504   	               addl $4, %ebp                    # PUSH $16, CLITERAL 16
 358 02ec C7450010 	               movl $16, (%ebp)
 358      000000
 359 02f3 E865FEFF 	               call func_FETCH
 359      FF
 360 02f8 83C504   	               addl $4, %ebp                    # PUSH $4, CLITERAL 4
 361 02fb C7450004 	               movl $4, (%ebp)
 361      000000
 362 0302 E8BBFEFF 	               call func_ADD
 362      FF
 363 0307 83C504   	               addl $4, %ebp                    # PUSH $16, CLITERAL 16
 364 030a C7450010 	               movl $16, (%ebp)
 364      000000
 365 0311 E85BFEFF 	               call func_STORE
 365      FF
 366 0316 C3       	               ret
 367              	L0000008E:                                      # WORD [ (FD87)
 368 0317 83C504   	               addl $4, %ebp                    # PUSH $0, CLITERAL 0
 369 031a C7450000 	               movl $0, (%ebp)
 369      000000
 370 0321 83C504   	               addl $4, %ebp                    # PUSH $32, CLITERAL 32
 371 0324 C7450020 	               movl $32, (%ebp)
 371      000000
 372 032b E841FEFF 	               call func_STORE
 372      FF
 373 0330 C3       	               ret
 374              	L00000099:                                      # WORD ] (FD7B)
 375 0331 83C504   	               addl $4, %ebp                    # PUSH $1, CLITERAL 1
GAS LISTING fasm.s 			page 9


 376 0334 C7450001 	               movl $1, (%ebp)
 376      000000
 377 033b 83C504   	               addl $4, %ebp                    # PUSH $32, CLITERAL 32
 378 033e C7450020 	               movl $32, (%ebp)
 378      000000
 379 0345 E827FEFF 	               call func_STORE
 379      FF
 380 034a C3       	               ret
 381              	L000000A4:                                      # WORD LITERAL (FD69)
 382 034b 83C504   	               addl $4, %ebp                    # PUSH $1, CLITERAL 1
 383 034e C7450001 	               movl $1, (%ebp)
 383      000000
 384 0355 E839FFFF 	               call L00000068
 384      FF
 385 035a C3       	               ret
 386              	L000000B1:                                      # WORD @ (FD5D)
 387 035b E8FDFDFF 	               call func_FETCH
 387      FF
 388 0360 C3       	               ret
 389              	L000000B8:                                      # WORD ! (FD51)
 390 0361 E80BFEFF 	               call func_STORE
 390      FF
 391 0366 C3       	               ret
 392              	L000000BF:                                      # WORD SWAP (FD42)
 393 0367 E82DFEFF 	               call func_SWAP
 393      FF
 394 036c C3       	               ret
 395              	L000000C6:                                      # WORD DROP (FD33)
 396 036d 83ED04   	               subl $4, %ebp                    # DROP
 397 0370 C3       	               ret
 398              	L000000CD:                                      # WORD DUP (FD25)
 399 0371 E819FEFF 	               call func_DUP
 399      FF
 400 0376 C3       	               ret
 401              	L000000D4:                                      # WORD SLITERAL (FD12)
 402 0377 83C504   	               addl $4, %ebp                    # PUSH $7, CLITERAL 7
 403 037a C7450007 	               movl $7, (%ebp)
 403      000000
 404 0381 E80DFFFF 	               call L00000068
 404      FF
 405 0386 C3       	               ret
 406              	L000000E1:                                      # WORD JMP (FD04)
 407 0387 83C504   	               addl $4, %ebp                    # PUSH $8, CLITERAL 8
 408 038a C7450008 	               movl $8, (%ebp)
 408      000000
 409 0391 E8FDFEFF 	               call L00000068
 409      FF
 410 0396 C3       	               ret
 411              	L000000EE:                                      # WORD JMPZ (FCF5)
 412 0397 83C504   	               addl $4, %ebp                    # PUSH $9, CLITERAL 9
 413 039a C7450009 	               movl $9, (%ebp)
 413      000000
 414 03a1 E8EDFEFF 	               call L00000068
 414      FF
 415 03a6 C3       	               ret
 416              	L000000FB:                                      # WORD JMPNZ (FCE5)
 417 03a7 83C504   	               addl $4, %ebp                    # PUSH $10, CLITERAL 10
GAS LISTING fasm.s 			page 10


 418 03aa C745000A 	               movl $10, (%ebp)
 418      000000
 419 03b1 E8DDFEFF 	               call L00000068
 419      FF
 420 03b6 C3       	               ret
 421              	L00000108:                                      # WORD CALL (FCD6)
 422 03b7 83C504   	               addl $4, %ebp                    # PUSH $11, CLITERAL 11
 423 03ba C745000B 	               movl $11, (%ebp)
 423      000000
 424 03c1 E8CDFEFF 	               call L00000068
 424      FF
 425 03c6 C3       	               ret
 426              	L00000115:                                      # WORD RET (FCC8)
 427 03c7 83C504   	               addl $4, %ebp                    # PUSH $12, CLITERAL 12
 428 03ca C745000C 	               movl $12, (%ebp)
 428      000000
 429 03d1 E8BDFEFF 	               call L00000068
 429      FF
 430 03d6 C3       	               ret
 431              	L00000122:                                      # WORD OR (FCBB)
 432              	                                                # OR (TODO)
 433 03d7 C3       	               ret
 434              	L00000129:                                      # WORD CLITERAL (FCA8)
 435 03d8 83C504   	               addl $4, %ebp                    # PUSH $14, CLITERAL 14
 436 03db C745000E 	               movl $14, (%ebp)
 436      000000
 437 03e2 E8ACFEFF 	               call L00000068
 437      FF
 438 03e7 C3       	               ret
 439              	L00000136:                                      # WORD C@ (FC9B)
 440 03e8 E879FDFF 	               call func_CFETCH
 440      FF
 441 03ed C3       	               ret
 442              	L0000013D:                                      # WORD C! (FC8E)
 443 03ee E88DFDFF 	               call func_CSTORE
 443      FF
 444 03f3 C3       	               ret
 445              	L00000144:                                      # WORD + (FC82)
 446 03f4 E8C9FDFF 	               call func_ADD
 446      FF
 447 03f9 C3       	               ret
 448              	L0000014B:                                      # WORD - (FC76)
 449 03fa E8D2FDFF 	               call func_SUB
 449      FF
 450 03ff C3       	               ret
 451              	L00000152:                                      # WORD * (FC6A)
 452 0400 E8DBFDFF 	               call func_MUL
 452      FF
 453 0405 C3       	               ret
 454              	L00000159:                                      # WORD / (FC5E)
 455 0406 8B5D00   	               movl (%ebp), %ebx                # POP to %ebx, ADD
 456 0409 83ED04   	               subl $4, %ebp
 457 040c 8B4500   	               movl (%ebp), %eax                # POP to %eax
 458 040f 83ED04   	               subl $4, %ebp
 459 0412 F7F3     	               divl %ebx
 460 0414 83C504   	               addl $4, %ebp                    # PUSH %eax
 461 0417 894500   	               movl %eax, (%ebp)
GAS LISTING fasm.s 			page 11


 462 041a C3       	               ret
 463              	L00000160:                                      # WORD < (FC52)
 464 041b E88FFCFF 	               call func_LT                     # LT
 464      FF
 465 0420 C3       	               ret
 466              	L00000167:                                      # WORD = (FC46)
 467 0421 E84FFCFF 	               call func_EQ                     # EQ
 467      FF
 468 0426 C3       	               ret
 469              	L0000016E:                                      # WORD > (FC3A)
 470 0427 E8A6FCFF 	               call func_GT                     # GT
 470      FF
 471 042c C3       	               ret
 472              	L00000175:                                      # WORD DICTP (FC2A)
 473 042d 83C504   	               addl $4, %ebp                    # PUSH $24, CLITERAL 24
 474 0430 C7450018 	               movl $24, (%ebp)
 474      000000
 475 0437 E857FEFF 	               call L00000068
 475      FF
 476 043c C3       	               ret
 477              	L00000182:                                      # WORD EMIT (FC1B)
 478 043d E8F9FCFF 	               call func_EMIT                   # EMIT
 478      FF
 479 0442 C3       	               ret
 480              	L00000189:                                      # WORD OVER (FC0C)
 481 0443 E864FDFF 	               call func_OVER
 481      FF
 482 0448 C3       	               ret
 483              	L00000190:                                      # WORD COMPARE (FBFA)
 484 0449 8B4500   	               movl (%ebp), %eax                # POP to %eax
 485 044c 83ED04   	               subl $4, %ebp
 486 044f 8B5D00   	               movl (%ebp), %ebx                # POP to %ebx
 487 0452 83ED04   	               subl $4, %ebp
 488              	               # COMPARE %eax, %ebx
 489 0455 83C504   	               addl $4, %ebp                    # PUSH %ebx
 490 0458 895D00   	               movl %ebx, (%ebp)
 491 045b C3       	               ret
 492              	L00000197:                                      # WORD FOPEN (FBEA)
 493              	                                                # FOPEN (TODO)
 494 045c C3       	               ret
 495              	L0000019E:                                      # WORD FREAD (FBDA)
 496              	                                                # FREAD (TODO)
 497 045d C3       	               ret
 498              	L000001A5:                                      # WORD FREADLINE (FBC6)
 499              	                                                # FREADLINE (TODO)
 500 045e C3       	               ret
 501              	L000001AC:                                      # WORD FWRITE (FBB5)
 502              	                                                # FWRITE (TODO)
 503 045f C3       	               ret
 504              	L000001B3:                                      # WORD FCLOSE (FBA4)
 505              	                                                # FCLOSE (TODO)
 506 0460 C3       	               ret
 507              	L000001BA:                                      # WORD >R (FB97)
 508 0461 E889FDFF 	               call func_DTOR                   # DTOR
 508      FF
 509 0466 C3       	               ret
 510              	L000001C1:                                      # WORD R> (FB8A)
GAS LISTING fasm.s 			page 12


 511 0467 E89FFDFF 	               call func_RTOD                   # RTOD
 511      FF
 512 046c C3       	               ret
 513              	L000001C8:                                      # WORD LOGLEVEL (FB77)
 514              	               # LOGLEVEL
 515 046d C3       	               ret
 516              	L000001CF:                                      # WORD AND (FB69)
 517              	                                                # AND (TODO)
 518 046e C3       	               ret
 519              	L000001D6:                                      # WORD PICK (FB5A)
 520              	               # PICK
 521 046f C3       	               ret
 522              	L000001DD:                                      # WORD DEPTH (FB4A)
 523              	                                                # DEPTH (TODO)
 524 0470 C3       	               ret
 525              	L000001E4:                                      # WORD GETCH (FB3A)
 526              	                                                # GETCH (TODO)
 527 0471 C3       	               ret
 528              	L000001EB:                                      # WORD COMPAREI (FB27)
 529 0472 8B4500   	               movl (%ebp), %eax                # POP to %eax
 530 0475 83ED04   	               subl $4, %ebp
 531 0478 8B5D00   	               movl (%ebp), %ebx                # POP to %ebx
 532 047b 83ED04   	               subl $4, %ebp
 533              	               # COMPAREI %eax, %ebx
 534 047e 83C504   	               addl $4, %ebp                    # PUSH %ebx
 535 0481 895D00   	               movl %ebx, (%ebp)
 536 0484 C3       	               ret
 537              	L000001F2:                                      # WORD USINIT (FB16)
 538              	                                                # USINIT (TODO)
 539 0485 C3       	               ret
 540              	L000001F9:                                      # WORD USPUSH (FB05)
 541              	                                                # USPUSH (TODO)
 542 0486 C3       	               ret
 543              	L00000200:                                      # WORD USPOP (FAF5)
 544              	                                                # USPOP (TODO)
 545 0487 C3       	               ret
 546              	L00000207:                                      # WORD BREAK (FAE5)
 547              	                                                # BREAK (TODO)
 548 0488 C3       	               ret
 549              	L0000020E:                                      # WORD RESET (FAD5)
 550              	                                                # RESET (TODO)
 551 0489 C3       	               ret
 552              	L00000215:                                      # WORD BYE (FAC7)
 553              	                                                # BYE (TODO)
 554 048a C3       	               ret
 555              	L0000021C:                                      # WORD R@ (FABA)
 556 048b E87BFDFF 	               call func_RTOD                   # RTOD
 556      FF
 557 0490 E8FAFCFF 	               call func_DUP
 557      FF
 558 0495 E855FDFF 	               call func_DTOR                   # DTOR
 558      FF
 559 049a C3       	               ret
 560              	L00000225:                                      # WORD INLINE (FAA9)
 561 049b 83C504   	               addl $4, %ebp                    # PUSH $20, CLITERAL 20
 562 049e C7450014 	               movl $20, (%ebp)
 562      000000
GAS LISTING fasm.s 			page 13


 563 04a5 E8B3FCFF 	               call func_FETCH
 563      FF
 564 04aa 83C504   	               addl $4, %ebp                    # PUSH $2, CLITERAL 2
 565 04ad C7450002 	               movl $2, (%ebp)
 565      000000
 566 04b4 83C504   	               addl $4, %ebp                    # PUSH $4, CLITERAL 4
 567 04b7 C7450004 	               movl $4, (%ebp)
 567      000000
 568 04be E81DFDFF 	               call func_MUL
 568      FF
 569 04c3 E8FAFCFF 	               call func_ADD
 569      FF
 570 04c8 E8C2FCFF 	               call func_DUP
 570      FF
 571 04cd E894FCFF 	               call func_CFETCH
 571      FF
 572 04d2 83C504   	               addl $4, %ebp                    # PUSH $2, CLITERAL 2
 573 04d5 C7450002 	               movl $2, (%ebp)
 573      000000
 574              	                                                # OR (TODO)
 575 04dc E8B8FCFF 	               call func_SWAP
 575      FF
 576 04e1 E89AFCFF 	               call func_CSTORE
 576      FF
 577 04e6 C3       	               ret
 578              	L0000023B:                                      # WORD IMMEDIATE (FA95)
 579 04e7 83C504   	               addl $4, %ebp                    # PUSH $20, CLITERAL 20
 580 04ea C7450014 	               movl $20, (%ebp)
 580      000000
 581 04f1 E867FCFF 	               call func_FETCH
 581      FF
 582 04f6 83C504   	               addl $4, %ebp                    # PUSH $2, CLITERAL 2
 583 04f9 C7450002 	               movl $2, (%ebp)
 583      000000
 584 0500 83C504   	               addl $4, %ebp                    # PUSH $4, CLITERAL 4
 585 0503 C7450004 	               movl $4, (%ebp)
 585      000000
 586 050a E8D1FCFF 	               call func_MUL
 586      FF
 587 050f E8AEFCFF 	               call func_ADD
 587      FF
 588 0514 E876FCFF 	               call func_DUP
 588      FF
 589 0519 E848FCFF 	               call func_CFETCH
 589      FF
 590 051e 83C504   	               addl $4, %ebp                    # PUSH $1, CLITERAL 1
 591 0521 C7450001 	               movl $1, (%ebp)
 591      000000
 592              	                                                # OR (TODO)
 593 0528 E86CFCFF 	               call func_SWAP
 593      FF
 594 052d E84EFCFF 	               call func_CSTORE
 594      FF
 595 0532 C3       	               ret
 596              	L00000251:                                      # WORD CELLS (FA85)
 597 0533 83C504   	               addl $4, %ebp                    # PUSH $4, CLITERAL 4
 598 0536 C7450004 	               movl $4, (%ebp)
GAS LISTING fasm.s 			page 14


 598      000000
 599 053d E89EFCFF 	               call func_MUL
 599      FF
 600 0542 C3       	               ret
 601              	L0000025A:                                      # WORD LAST (FA76)
 602 0543 83C504   	               addl $4, %ebp                    # PUSH $20, CLITERAL 20
 603 0546 C7450014 	               movl $20, (%ebp)
 603      000000
 604 054d E80BFCFF 	               call func_FETCH
 604      FF
 605 0552 C3       	               ret
 606              	L00000263:                                      # WORD HERE (FA67)
 607 0553 83C504   	               addl $4, %ebp                    # PUSH $16, CLITERAL 16
 608 0556 C7450010 	               movl $16, (%ebp)
 608      000000
 609 055d E8FBFBFF 	               call func_FETCH
 609      FF
 610 0562 C3       	               ret
 611              	L0000026C:                                      # WORD ?COMPILING (FA52)
 612 0563 83C504   	               addl $4, %ebp                    # PUSH $32, CLITERAL 32
 613 0566 C7450020 	               movl $32, (%ebp)
 613      000000
 614 056d E8EBFBFF 	               call func_FETCH
 614      FF
 615 0572 C3       	               ret
 616              	L00000275:                                      # WORD IF (FA45)
 617 0573 E8EBFFFF 	               call L0000026C
 617      FF
 618 0578 8B4500   	               movl (%ebp), %eax                # POP to %eax, JMPZ
 619 057b 83ED04   	               subl $4, %ebp
 620 057e 39050000 	               cmp %eax, 0
 620      0000
 621 0584 7423     	               jz L00000293
 622 0586 E80CFEFF 	               call L000000EE
 622      FF
 623 058b 83C504   	               addl $4, %ebp                    # PUSH $16, CLITERAL 16
 624 058e C7450010 	               movl $16, (%ebp)
 624      000000
 625 0595 E8C3FBFF 	               call func_FETCH
 625      FF
 626 059a 83C504   	               addl $4, %ebp                    # PUSH $0, CLITERAL 0
 627 059d C7450000 	               movl $0, (%ebp)
 627      000000
 628 05a4 E82CFDFF 	               call L0000007B
 628      FF
 629 05a9 C3       	L00000293:     ret
 630              	L00000294:                                      # WORD ELSE (FA36)
 631 05aa E8B4FFFF 	               call L0000026C
 631      FF
 632 05af 8B4500   	               movl (%ebp), %eax                # POP to %eax, JMPZ
 633 05b2 83ED04   	               subl $4, %ebp
 634 05b5 39050000 	               cmp %eax, 0
 634      0000
 635 05bb 7441     	               jz L000002B8
 636 05bd E8C5FDFF 	               call L000000E1
 636      FF
 637 05c2 83C504   	               addl $4, %ebp                    # PUSH $16, CLITERAL 16
GAS LISTING fasm.s 			page 15


 638 05c5 C7450010 	               movl $16, (%ebp)
 638      000000
 639 05cc E88CFBFF 	               call func_FETCH
 639      FF
 640 05d1 E8C3FBFF 	               call func_SWAP
 640      FF
 641 05d6 83C504   	               addl $4, %ebp                    # PUSH $0, CLITERAL 0
 642 05d9 C7450000 	               movl $0, (%ebp)
 642      000000
 643 05e0 E8F0FCFF 	               call L0000007B
 643      FF
 644 05e5 83C504   	               addl $4, %ebp                    # PUSH $16, CLITERAL 16
 645 05e8 C7450010 	               movl $16, (%ebp)
 645      000000
 646 05ef E869FBFF 	               call func_FETCH
 646      FF
 647 05f4 E8A0FBFF 	               call func_SWAP
 647      FF
 648 05f9 E873FBFF 	               call func_STORE
 648      FF
 649 05fe C3       	L000002B8:     ret
 650              	L000002B9:                                      # WORD THEN (FA27)
 651 05ff E85FFFFF 	               call L0000026C
 651      FF
 652 0604 8B4500   	               movl (%ebp), %eax                # POP to %eax, JMPZ
 653 0607 83ED04   	               subl $4, %ebp
 654 060a 39050000 	               cmp %eax, 0
 654      0000
 655 0610 7419     	               jz L000002CD
 656 0612 83C504   	               addl $4, %ebp                    # PUSH $16, CLITERAL 16
 657 0615 C7450010 	               movl $16, (%ebp)
 657      000000
 658 061c E83CFBFF 	               call func_FETCH
 658      FF
 659 0621 E873FBFF 	               call func_SWAP
 659      FF
 660 0626 E846FBFF 	               call func_STORE
 660      FF
 661 062b C3       	L000002CD:     ret
 662              	L000002CE:                                      # WORD BEGIN (FA17)
 663 062c E832FFFF 	               call L0000026C
 663      FF
 664 0631 8B4500   	               movl (%ebp), %eax                # POP to %eax, JMPZ
 665 0634 83ED04   	               subl $4, %ebp
 666 0637 39050000 	               cmp %eax, 0
 666      0000
 667 063d 740F     	               jz L000002E0
 668 063f 83C504   	               addl $4, %ebp                    # PUSH $16, CLITERAL 16
 669 0642 C7450010 	               movl $16, (%ebp)
 669      000000
 670 0649 E80FFBFF 	               call func_FETCH
 670      FF
 671 064e C3       	L000002E0:     ret
 672              	L000002E1:                                      # WORD AGAIN (FA07)
 673 064f E80FFFFF 	               call L0000026C
 673      FF
 674 0654 8B4500   	               movl (%ebp), %eax                # POP to %eax, JMPZ
GAS LISTING fasm.s 			page 16


 675 0657 83ED04   	               subl $4, %ebp
 676 065a 39050000 	               cmp %eax, 0
 676      0000
 677 0660 740A     	               jz L000002FA
 678 0662 E820FDFF 	               call L000000E1
 678      FF
 679 0667 E869FCFF 	               call L0000007B
 679      FF
 680 066c C3       	L000002FA:     ret
 681              	L000002FB:                                      # WORD WHILE (F9F7)
 682 066d E8F1FEFF 	               call L0000026C
 682      FF
 683 0672 8B4500   	               movl (%ebp), %eax                # POP to %eax, JMPZ
 684 0675 83ED04   	               subl $4, %ebp
 685 0678 39050000 	               cmp %eax, 0
 685      0000
 686 067e 740A     	               jz L00000314
 687 0680 E822FDFF 	               call L000000FB
 687      FF
 688 0685 E84BFCFF 	               call L0000007B
 688      FF
 689 068a C3       	L00000314:     ret
 690              	L00000315:                                      # WORD UNTIL (F9E7)
 691 068b E8D3FEFF 	               call L0000026C
 691      FF
 692 0690 8B4500   	               movl (%ebp), %eax                # POP to %eax, JMPZ
 693 0693 83ED04   	               subl $4, %ebp
 694 0696 39050000 	               cmp %eax, 0
 694      0000
 695 069c 740A     	               jz L0000032E
 696 069e E8F4FCFF 	               call L000000EE
 696      FF
 697 06a3 E82DFCFF 	               call L0000007B
 697      FF
 698 06a8 C3       	L0000032E:     ret
 699              	L0000032F:                                      # WORD LEAVE (F9D7)
 700 06a9 E8B5FEFF 	               call L0000026C
 700      FF
 701 06ae 8B4500   	               movl (%ebp), %eax                # POP to %eax, JMPZ
 702 06b1 83ED04   	               subl $4, %ebp
 703 06b4 39050000 	               cmp %eax, 0
 703      0000
 704 06ba 7405     	               jz L00000343
 705 06bc E806FDFF 	               call L00000115
 705      FF
 706 06c1 C3       	L00000343:     ret
 707              	L00000344:                                      # WORD COUNT (F9C7)
 708 06c2 E8C8FAFF 	               call func_DUP
 708      FF
 709 06c7 83C504   	               addl $4, %ebp                    # PUSH $1, CLITERAL 1
 710 06ca C7450001 	               movl $1, (%ebp)
 710      000000
 711 06d1 E8ECFAFF 	               call func_ADD
 711      FF
 712 06d6 E8BEFAFF 	               call func_SWAP
 712      FF
 713 06db E886FAFF 	               call func_CFETCH
GAS LISTING fasm.s 			page 17


 713      FF
 714 06e0 C3       	               ret
 715              	L00000350:                                      # WORD TYPE (F9B8)
 716 06e1 E8C6FAFF 	               call func_OVER
 716      FF
 717 06e6 E8D7FAFF 	               call func_ADD
 717      FF
 718 06eb 83C504   	               addl $4, %ebp                    # PUSH $1, CLITERAL 1
 719 06ee C7450001 	               movl $1, (%ebp)
 719      000000
 720 06f5 E8D7FAFF 	               call func_SUB
 720      FF
 721 06fa E89AFAFF 	               call func_SWAP
 721      FF
 722 06ff E8A8FAFF 	L0000035B:     call func_OVER
 722      FF
 723 0704 E8A3FAFF 	               call func_OVER
 723      FF
 724 0709 E8A1F9FF 	               call func_LT                     # LT
 724      FF
 725 070e 8B4500   	               movl (%ebp), %eax                # POP to %eax, JMPZ
 726 0711 83ED04   	               subl $4, %ebp
 727 0714 39050000 	               cmp %eax, 0
 727      0000
 728 071a 7407     	               jz L00000366
 729 071c 83ED04   	               subl $4, %ebp                    # DROP
 730 071f 83ED04   	               subl $4, %ebp                    # DROP
 731 0722 C3       	               ret
 732 0723 E867FAFF 	L00000366:     call func_DUP
 732      FF
 733 0728 E839FAFF 	               call func_CFETCH
 733      FF
 734 072d E809FAFF 	               call func_EMIT                   # EMIT
 734      FF
 735 0732 83C504   	               addl $4, %ebp                    # PUSH $1, CLITERAL 1
 736 0735 C7450001 	               movl $1, (%ebp)
 736      000000
 737 073c E881FAFF 	               call func_ADD
 737      FF
 738 0741 EBBC     	               jmp L0000035B                    # JMP
 739 0743 C3       	               ret
 740              	L00000372:                                      # WORD CR (F9AB)
 741 0744 83C504   	               addl $4, %ebp                    # PUSH $13, CLITERAL 13
 742 0747 C745000D 	               movl $13, (%ebp)
 742      000000
 743 074e E8E8F9FF 	               call func_EMIT                   # EMIT
 743      FF
 744 0753 83C504   	               addl $4, %ebp                    # PUSH $10, CLITERAL 10
 745 0756 C745000A 	               movl $10, (%ebp)
 745      000000
 746 075d E8D9F9FF 	               call func_EMIT                   # EMIT
 746      FF
 747 0762 C3       	               ret
 748              	L0000037E:                                      # WORD INPUT-FP (F998)
 749 0763 83C504   	               addl $4, %ebp                    # PUSH $905, LITERAL 905
 750 0766 C7450089 	               movl $905, (%ebp)
 750      030000
GAS LISTING fasm.s 			page 18


 751 076d C3       	               ret
 752 076e 00       	               .byte 0x00
 753 076f 00       	               .byte 0x00
 754 0770 00       	               .byte 0x00
 755 0771 00       	               .byte 0x00
 756 0772 C3       	               ret
 757              	L0000038E:                                      # WORD PAD (F98A)
 758 0773 83C504   	               addl $4, %ebp                    # PUSH $20, CLITERAL 20
 759 0776 C7450014 	               movl $20, (%ebp)
 759      000000
 760 077d E8DBF9FF 	               call func_FETCH
 760      FF
 761 0782 83C504   	               addl $4, %ebp                    # PUSH $256, LITERAL 256
 762 0785 C7450000 	               movl $256, (%ebp)
 762      010000
 763 078c E840FAFF 	               call func_SUB
 763      FF
 764 0791 C3       	               ret
 765              	L0000039D:                                      # WORD string-nullterm (F970)
 766 0792 83C504   	               addl $4, %ebp                    # PUSH $0, CLITERAL 0
 767 0795 C7450000 	               movl $0, (%ebp)
 767      000000
 768 079c E8F8F9FF 	               call func_SWAP
 768      FF
 769 07a1 E8E9F9FF 	               call func_DUP
 769      FF
 770 07a6 E8BBF9FF 	               call func_CFETCH
 770      FF
 771 07ab E812FAFF 	               call func_ADD
 771      FF
 772 07b0 83C504   	               addl $4, %ebp                    # PUSH $1, CLITERAL 1
 773 07b3 C7450001 	               movl $1, (%ebp)
 773      000000
 774 07ba E803FAFF 	               call func_ADD
 774      FF
 775 07bf E8BCF9FF 	               call func_CSTORE
 775      FF
 776 07c4 C3       	               ret
 777              	L000003AD:                                      # WORD string-catc (F95A)
 778 07c5 E8CFF9FF 	               call func_SWAP
 778      FF
 779 07ca E8DDF9FF 	               call func_OVER
 779      FF
 780 07cf E8BBF9FF 	               call func_DUP
 780      FF
 781 07d4 E88DF9FF 	               call func_CFETCH
 781      FF
 782 07d9 E8E4F9FF 	               call func_ADD
 782      FF
 783 07de 83C504   	               addl $4, %ebp                    # PUSH $1, CLITERAL 1
 784 07e1 C7450001 	               movl $1, (%ebp)
 784      000000
 785 07e8 E8D5F9FF 	               call func_ADD
 785      FF
 786 07ed E88EF9FF 	               call func_CSTORE
 786      FF
 787 07f2 E898F9FF 	               call func_DUP
GAS LISTING fasm.s 			page 19


 787      FF
 788 07f7 E86AF9FF 	               call func_CFETCH
 788      FF
 789 07fc 83C504   	               addl $4, %ebp                    # PUSH $1, CLITERAL 1
 790 07ff C7450001 	               movl $1, (%ebp)
 790      000000
 791 0806 E8B7F9FF 	               call func_ADD
 791      FF
 792 080b E889F9FF 	               call func_SWAP
 792      FF
 793 0810 E86BF9FF 	               call func_CSTORE
 793      FF
 794 0815 C3       	               ret
 795              	L000003C3:                                      # WORD string-copy (F944)
 796 0816 E8D4F9FF 	               call func_DTOR                   # DTOR
 796      FF
 797 081b E86FF9FF 	               call func_DUP
 797      FF
 798 0820 E841F9FF 	               call func_CFETCH
 798      FF
 799 0825 E882F9FF 	               call func_OVER
 799      FF
 800 082a E893F9FF 	               call func_ADD
 800      FF
 801 082f 83C504   	               addl $4, %ebp                    # PUSH $1, CLITERAL 1
 802 0832 C7450001 	               movl $1, (%ebp)
 802      000000
 803 0839 E884F9FF 	               call func_ADD
 803      FF
 804 083e E856F9FF 	               call func_SWAP
 804      FF
 805 0843 E864F9FF 	L000003D1:     call func_OVER
 805      FF
 806 0848 E85FF9FF 	               call func_OVER
 806      FF
 807 084d E823F8FF 	               call func_EQ                     # EQ
 807      FF
 808 0852 8B4500   	               movl (%ebp), %eax                # POP to %eax, JMPZ
 809 0855 83ED04   	               subl $4, %ebp
 810 0858 39050000 	               cmp %eax, 0
 810      0000
 811 085e 7411     	               jz L000003E3
 812 0860 83ED04   	               subl $4, %ebp                    # DROP
 813 0863 83ED04   	               subl $4, %ebp                    # DROP
 814 0866 E8A0F9FF 	               call func_RTOD                   # RTOD
 814      FF
 815 086b 83ED04   	               subl $4, %ebp                    # DROP
 816 086e C3       	               ret
 817 086f EB46     	               jmp L000003F1                    # JMP
 818 0871 E819F9FF 	L000003E3:     call func_DUP
 818      FF
 819 0876 E8EBF8FF 	               call func_CFETCH
 819      FF
 820 087b E88BF9FF 	               call func_RTOD                   # RTOD
 820      FF
 821 0880 E80AF9FF 	               call func_DUP
 821      FF
GAS LISTING fasm.s 			page 20


 822 0885 E865F9FF 	               call func_DTOR                   # DTOR
 822      FF
 823 088a E8F1F8FF 	               call func_CSTORE
 823      FF
 824 088f E877F9FF 	               call func_RTOD                   # RTOD
 824      FF
 825 0894 83C504   	               addl $4, %ebp                    # PUSH $1, CLITERAL 1
 826 0897 C7450001 	               movl $1, (%ebp)
 826      000000
 827 089e E81FF9FF 	               call func_ADD
 827      FF
 828 08a3 E847F9FF 	               call func_DTOR                   # DTOR
 828      FF
 829 08a8 83C504   	               addl $4, %ebp                    # PUSH $1, CLITERAL 1
 830 08ab C7450001 	               movl $1, (%ebp)
 830      000000
 831 08b2 E80BF9FF 	               call func_ADD
 831      FF
 832 08b7 EB8A     	L000003F1:     jmp L000003D1                    # JMP
 833 08b9 C3       	               ret
 834              	L000003F7:                                      # WORD string-popc (F92E)
 835 08ba E8D0F8FF 	               call func_DUP
 835      FF
 836 08bf E8A2F8FF 	               call func_CFETCH
 836      FF
 837 08c4 8B4500   	               movl (%ebp), %eax                # POP to %eax, JMPZ
 838 08c7 83ED04   	               subl $4, %ebp
 839 08ca 39050000 	               cmp %eax, 0
 839      0000
 840 08d0 7448     	               jz L00000416
 841 08d2 E8B8F8FF 	               call func_DUP
 841      FF
 842 08d7 E88AF8FF 	               call func_CFETCH
 842      FF
 843 08dc 83C504   	               addl $4, %ebp                    # PUSH $1, CLITERAL 1
 844 08df C7450001 	               movl $1, (%ebp)
 844      000000
 845 08e6 E8E6F8FF 	               call func_SUB
 845      FF
 846 08eb E8BCF8FF 	               call func_OVER
 846      FF
 847 08f0 E88BF8FF 	               call func_CSTORE
 847      FF
 848 08f5 E895F8FF 	               call func_DUP
 848      FF
 849 08fa E867F8FF 	               call func_CFETCH
 849      FF
 850 08ff E8BEF8FF 	               call func_ADD
 850      FF
 851 0904 83C504   	               addl $4, %ebp                    # PUSH $1, CLITERAL 1
 852 0907 C7450001 	               movl $1, (%ebp)
 852      000000
 853 090e E8AFF8FF 	               call func_ADD
 853      FF
 854 0913 E84EF8FF 	               call func_CFETCH
 854      FF
 855 0918 EB0D     	               jmp L00000419                    # JMP
GAS LISTING fasm.s 			page 21


 856 091a 83ED04   	L00000416:     subl $4, %ebp                    # DROP
 857 091d 83C504   	               addl $4, %ebp                    # PUSH $0, CLITERAL 0
 858 0920 C7450000 	               movl $0, (%ebp)
 858      000000
 859 0927 C3       	L00000419:     ret
 860              	L0000041A:                                      # WORD BETWEEN (F91C)
 861 0928 83C504   	               addl $4, %ebp                    # PUSH $2, CLITERAL 2
 862 092b C7450002 	               movl $2, (%ebp)
 862      000000
 863              	               # PICK
 864 0932 E878F7FF 	               call func_LT                     # LT
 864      FF
 865 0937 8B4500   	               movl (%ebp), %eax                # POP to %eax, JMPZ
 866 093a 83ED04   	               subl $4, %ebp
 867 093d 39050000 	               cmp %eax, 0
 867      0000
 868 0943 7411     	               jz L0000042D
 869 0945 83ED04   	               subl $4, %ebp                    # DROP
 870 0948 83ED04   	               subl $4, %ebp                    # DROP
 871 094b 83C504   	               addl $4, %ebp                    # PUSH $0, CLITERAL 0
 872 094e C7450000 	               movl $0, (%ebp)
 872      000000
 873 0955 C3       	               ret
 874 0956 E854F7FF 	L0000042D:     call func_LT                     # LT
 874      FF
 875 095b 83C504   	               addl $4, %ebp                    # PUSH $0, CLITERAL 0
 876 095e C7450000 	               movl $0, (%ebp)
 876      000000
 877 0965 E80BF7FF 	               call func_EQ                     # EQ
 877      FF
 878 096a C3       	               ret
 879              	L00000432:                                      # WORD stdin-getline (F904)
 880 096b E803FEFF 	               call L0000038E
 880      FF
 881 0970 83C504   	               addl $4, %ebp                    # PUSH $0, CLITERAL 0
 882 0973 C7450000 	               movl $0, (%ebp)
 882      000000
 883 097a E82DF8FF 	               call func_OVER
 883      FF
 884 097f E8EDF7FF 	               call func_STORE
 884      FF
 885 0984 E866F8FF 	               call func_DTOR                   # DTOR
 885      FF
 886              	L00000441:                                      # GETCH (TODO)
 887 0989 E801F8FF 	               call func_DUP
 887      FF
 888 098e 83C504   	               addl $4, %ebp                    # PUSH $3, CLITERAL 3
 889 0991 C7450003 	               movl $3, (%ebp)
 889      000000
 890 0998 E8D8F6FF 	               call func_EQ                     # EQ
 890      FF
 891 099d 8B4500   	               movl (%ebp), %eax                # POP to %eax, JMPZ
 892 09a0 83ED04   	               subl $4, %ebp
 893 09a3 39050000 	               cmp %eax, 0
 893      0000
 894 09a9 740A     	               jz L00000461
 895              	                                                # SLITERAL (044c) [<CTRL>-C]
GAS LISTING fasm.s 			page 22


 896 09ab E812FDFF 	               call L00000344
 896      FF
 897 09b0 E82CFDFF 	               call L00000350
 897      FF
 898              	                                                # BYE (TODO)
 899 09b5 E8D5F7FF 	L00000461:     call func_DUP
 899      FF
 900 09ba 83C504   	               addl $4, %ebp                    # PUSH $13, CLITERAL 13
 901 09bd C745000D 	               movl $13, (%ebp)
 901      000000
 902 09c4 E8ACF6FF 	               call func_EQ                     # EQ
 902      FF
 903 09c9 8B4500   	               movl (%ebp), %eax                # POP to %eax, JMPZ
 904 09cc 83ED04   	               subl $4, %ebp
 905 09cf 39050000 	               cmp %eax, 0
 905      0000
 906 09d5 7418     	               jz L00000470
 907 09d7 83ED04   	               subl $4, %ebp                    # DROP
 908 09da E82CF8FF 	               call func_RTOD                   # RTOD
 908      FF
 909 09df 83C504   	               addl $4, %ebp                    # PUSH $32, CLITERAL 32
 910 09e2 C7450020 	               movl $32, (%ebp)
 910      000000
 911 09e9 E84DF7FF 	               call func_EMIT                   # EMIT
 911      FF
 912 09ee C3       	               ret
 913 09ef E89BF7FF 	L00000470:     call func_DUP
 913      FF
 914 09f4 83C504   	               addl $4, %ebp                    # PUSH $9, CLITERAL 9
 915 09f7 C7450009 	               movl $9, (%ebp)
 915      000000
 916 09fe E872F6FF 	               call func_EQ                     # EQ
 916      FF
 917 0a03 8B4500   	               movl (%ebp), %eax                # POP to %eax, JMPZ
 918 0a06 83ED04   	               subl $4, %ebp
 919 0a09 39050000 	               cmp %eax, 0
 919      0000
 920 0a0f 740D     	               jz L0000047C
 921 0a11 83ED04   	               subl $4, %ebp                    # DROP
 922 0a14 83C504   	               addl $4, %ebp                    # PUSH $32, CLITERAL 32
 923 0a17 C7450020 	               movl $32, (%ebp)
 923      000000
 924 0a1e E86CF7FF 	L0000047C:     call func_DUP
 924      FF
 925 0a23 83C504   	               addl $4, %ebp                    # PUSH $8, CLITERAL 8
 926 0a26 C7450008 	               movl $8, (%ebp)
 926      000000
 927 0a2d E843F6FF 	               call func_EQ                     # EQ
 927      FF
 928 0a32 8B4500   	               movl (%ebp), %eax                # POP to %eax, JMPZ
 929 0a35 83ED04   	               subl $4, %ebp
 930 0a38 39050000 	               cmp %eax, 0
 930      0000
 931 0a3e 7437     	               jz L00000499
 932 0a40 E8C6F7FF 	               call func_RTOD                   # RTOD
 932      FF
 933 0a45 E845F7FF 	               call func_DUP
GAS LISTING fasm.s 			page 23


 933      FF
 934 0a4a E8A0F7FF 	               call func_DTOR                   # DTOR
 934      FF
 935 0a4f E866FEFF 	               call L000003F7
 935      FF
 936 0a54 83ED04   	               subl $4, %ebp                    # DROP
 937 0a57 E833F7FF 	               call func_DUP
 937      FF
 938 0a5c E8DAF6FF 	               call func_EMIT                   # EMIT
 938      FF
 939 0a61 83C504   	               addl $4, %ebp                    # PUSH $32, CLITERAL 32
 940 0a64 C7450020 	               movl $32, (%ebp)
 940      000000
 941 0a6b E8CBF6FF 	               call func_EMIT                   # EMIT
 941      FF
 942 0a70 E8C6F6FF 	               call func_EMIT                   # EMIT
 942      FF
 943 0a75 EB4F     	               jmp L000004B8                    # JMP
 944 0a77 E813F7FF 	L00000499:     call func_DUP
 944      FF
 945 0a7c 83C504   	               addl $4, %ebp                    # PUSH $32, CLITERAL 32
 946 0a7f C7450020 	               movl $32, (%ebp)
 946      000000
 947 0a86 83C504   	               addl $4, %ebp                    # PUSH $127, CLITERAL 127
 948 0a89 C745007F 	               movl $127, (%ebp)
 948      000000
 949 0a90 E893FEFF 	               call L0000041A
 949      FF
 950 0a95 8B4500   	               movl (%ebp), %eax                # POP to %eax, JMPZ
 951 0a98 83ED04   	               subl $4, %ebp
 952 0a9b 39050000 	               cmp %eax, 0
 952      0000
 953 0aa1 7420     	               jz L000004B7
 954 0aa3 E8E7F6FF 	               call func_DUP
 954      FF
 955 0aa8 E88EF6FF 	               call func_EMIT                   # EMIT
 955      FF
 956 0aad E859F7FF 	               call func_RTOD                   # RTOD
 956      FF
 957 0ab2 E8D8F6FF 	               call func_DUP
 957      FF
 958 0ab7 E833F7FF 	               call func_DTOR                   # DTOR
 958      FF
 959 0abc E804FDFF 	               call L000003AD
 959      FF
 960 0ac1 EB03     	               jmp L000004B8                    # JMP
 961 0ac3 83ED04   	L000004B7:     subl $4, %ebp                    # DROP
 962 0ac6 E9BEFEFF 	L000004B8:     jmp L00000441                    # JMP
 962      FF
 963 0acb C3       	               ret
 964              	L000004BE:                                      # WORD file-getLine (F8ED)
 965 0acc E8A2FCFF 	               call L0000038E
 965      FF
 966 0ad1 83C504   	               addl $4, %ebp                    # PUSH $200, CLITERAL 200
 967 0ad4 C74500C8 	               movl $200, (%ebp)
 967      000000
 968 0adb E883FCFF 	               call L0000037E
GAS LISTING fasm.s 			page 24


 968      FF
 969 0ae0 E878F6FF 	               call func_FETCH
 969      FF
 970              	                                                # FREADLINE (TODO)
 971 0ae5 83C504   	               addl $4, %ebp                    # PUSH $0, CLITERAL 0
 972 0ae8 C7450000 	               movl $0, (%ebp)
 972      000000
 973 0aef E881F5FF 	               call func_EQ                     # EQ
 973      FF
 974 0af4 8B4500   	               movl (%ebp), %eax                # POP to %eax, JMPZ
 975 0af7 83ED04   	               subl $4, %ebp
 976 0afa 39050000 	               cmp %eax, 0
 976      0000
 977 0b00 7420     	               jz L000004ED
 978 0b02 E85CFCFF 	               call L0000037E
 978      FF
 979 0b07 E851F6FF 	               call func_FETCH
 979      FF
 980              	                                                # FCLOSE (TODO)
 981 0b0c 83C504   	               addl $4, %ebp                    # PUSH $0, CLITERAL 0
 982 0b0f C7450000 	               movl $0, (%ebp)
 982      000000
 983 0b16 E848FCFF 	               call L0000037E
 983      FF
 984 0b1b E851F6FF 	               call func_STORE
 984      FF
 985 0b20 EB1E     	               jmp L000004FF                    # JMP
 986 0b22 83C504   	L000004ED:     addl $4, %ebp                    # PUSH $46, CLITERAL 46
 987 0b25 C745002E 	               movl $46, (%ebp)
 987      000000
 988 0b2c E80AF6FF 	               call func_EMIT                   # EMIT
 988      FF
 989 0b31 E83DFCFF 	               call L0000038E
 989      FF
 990 0b36 E887FBFF 	               call L00000344
 990      FF
 991 0b3b E8A1FBFF 	               call L00000350
 991      FF
 992 0b40 E82EFCFF 	L000004FF:     call L0000038E
 992      FF
 993 0b45 C3       	               ret
 994              	L00000505:                                      # WORD get-line (F8DA)
 995 0b46 E818FCFF 	               call L0000037E
 995      FF
 996 0b4b E80DF6FF 	               call func_FETCH
 996      FF
 997 0b50 8B4500   	               movl (%ebp), %eax                # POP to %eax, JMPZ
 998 0b53 83ED04   	               subl $4, %ebp
 999 0b56 39050000 	               cmp %eax, 0
 999      0000
 1000 0b5c 7407     	               jz L0000051F
 1001 0b5e E869FFFF 	               call L000004BE
 1001      FF
 1002 0b63 EB05     	               jmp L00000524                    # JMP
 1003 0b65 E801FEFF 	L0000051F:     call L00000432
 1003      FF
 1004 0b6a C3       	L00000524:     ret
GAS LISTING fasm.s 			page 25


 1005              	L00000525:                                      # WORD skip-ws (F8C8)
 1006 0b6b E81FF6FF 	L0000052A:     call func_DUP
 1006      FF
 1007 0b70 E8F1F5FF 	               call func_CFETCH
 1007      FF
 1008 0b75 83C504   	               addl $4, %ebp                    # PUSH $1, CLITERAL 1
 1009 0b78 C7450001 	               movl $1, (%ebp)
 1009      000000
 1010 0b7f 83C504   	               addl $4, %ebp                    # PUSH $32, CLITERAL 32
 1011 0b82 C7450020 	               movl $32, (%ebp)
 1011      000000
 1012 0b89 E89AFDFF 	               call L0000041A
 1012      FF
 1013 0b8e 8B4500   	               movl (%ebp), %eax                # POP to %eax, JMPZ
 1014 0b91 83ED04   	               subl $4, %ebp
 1015 0b94 39050000 	               cmp %eax, 0
 1015      0000
 1016 0b9a 7411     	               jz L00000542
 1017 0b9c 83C504   	               addl $4, %ebp                    # PUSH $1, CLITERAL 1
 1018 0b9f C7450001 	               movl $1, (%ebp)
 1018      000000
 1019 0ba6 E817F6FF 	               call func_ADD
 1019      FF
 1020 0bab EB01     	               jmp L00000543                    # JMP
 1021 0bad C3       	L00000542:     ret
 1022 0bae EBBB     	L00000543:     jmp L0000052A                    # JMP
 1023 0bb0 C3       	               ret
 1024              	L00000549:                                      # WORD get-word (F8B5)
 1025 0bb1 83C504   	               addl $4, %ebp                    # PUSH $16, CLITERAL 16
 1026 0bb4 C7450010 	               movl $16, (%ebp)
 1026      000000
 1027 0bbb E89DF5FF 	               call func_FETCH
 1027      FF
 1028 0bc0 83C504   	               addl $4, %ebp                    # PUSH $256, LITERAL 256
 1029 0bc3 C7450000 	               movl $256, (%ebp)
 1029      010000
 1030 0bca E8F3F5FF 	               call func_ADD
 1030      FF
 1031 0bcf E8BBF5FF 	               call func_DUP
 1031      FF
 1032 0bd4 E816F6FF 	               call func_DTOR                   # DTOR
 1032      FF
 1033 0bd9 83C504   	               addl $4, %ebp                    # PUSH $0, CLITERAL 0
 1034 0bdc C7450000 	               movl $0, (%ebp)
 1034      000000
 1035 0be3 E8B1F5FF 	               call func_SWAP
 1035      FF
 1036 0be8 E884F5FF 	               call func_STORE
 1036      FF
 1037 0bed E89DF5FF 	L0000055D:     call func_DUP
 1037      FF
 1038 0bf2 E86FF5FF 	               call func_CFETCH
 1038      FF
 1039 0bf7 E893F5FF 	               call func_DUP
 1039      FF
 1040 0bfc 83C504   	               addl $4, %ebp                    # PUSH $33, CLITERAL 33
 1041 0bff C7450021 	               movl $33, (%ebp)
GAS LISTING fasm.s 			page 26


 1041      000000
 1042 0c06 E8A4F4FF 	               call func_LT                     # LT
 1042      FF
 1043 0c0b 8B4500   	               movl (%ebp), %eax                # POP to %eax, JMPZ
 1044 0c0e 83ED04   	               subl $4, %ebp
 1045 0c11 39050000 	               cmp %eax, 0
 1045      0000
 1046 0c17 7424     	               jz L00000579
 1047 0c19 83ED04   	               subl $4, %ebp                    # DROP
 1048 0c1c E8EAF5FF 	               call func_RTOD                   # RTOD
 1048      FF
 1049 0c21 E869F5FF 	               call func_DUP
 1049      FF
 1050 0c26 E8C4F5FF 	               call func_DTOR                   # DTOR
 1050      FF
 1051 0c2b E862FBFF 	               call L0000039D
 1051      FF
 1052 0c30 E8D6F5FF 	               call func_RTOD                   # RTOD
 1052      FF
 1053 0c35 E85FF5FF 	               call func_SWAP
 1053      FF
 1054 0c3a C3       	               ret
 1055 0c3b EB23     	               jmp L00000584                    # JMP
 1056 0c3d E8C9F5FF 	L00000579:     call func_RTOD                   # RTOD
 1056      FF
 1057 0c42 E848F5FF 	               call func_DUP
 1057      FF
 1058 0c47 E8A3F5FF 	               call func_DTOR                   # DTOR
 1058      FF
 1059 0c4c E874FBFF 	               call L000003AD
 1059      FF
 1060 0c51 83C504   	               addl $4, %ebp                    # PUSH $1, CLITERAL 1
 1061 0c54 C7450001 	               movl $1, (%ebp)
 1061      000000
 1062 0c5b E862F5FF 	               call func_ADD
 1062      FF
 1063 0c60 EB8B     	L00000584:     jmp L0000055D                    # JMP
 1064 0c62 C3       	               ret
 1065              	L0000058A:                                      # WORD DICT>NEXT (F8A1)
 1066 0c63 C3       	               ret
 1067              	L00000590:                                      # WORD DICT>XT (F88F)
 1068 0c64 83C504   	               addl $4, %ebp                    # PUSH $4, CLITERAL 4
 1069 0c67 C7450004 	               movl $4, (%ebp)
 1069      000000
 1070 0c6e E84FF5FF 	               call func_ADD
 1070      FF
 1071 0c73 C3       	               ret
 1072              	L00000599:                                      # WORD DICT>FLAGS (F87A)
 1073 0c74 83C504   	               addl $4, %ebp                    # PUSH $2, CLITERAL 2
 1074 0c77 C7450002 	               movl $2, (%ebp)
 1074      000000
 1075 0c7e 83C504   	               addl $4, %ebp                    # PUSH $4, CLITERAL 4
 1076 0c81 C7450004 	               movl $4, (%ebp)
 1076      000000
 1077 0c88 E853F5FF 	               call func_MUL
 1077      FF
 1078 0c8d E830F5FF 	               call func_ADD
GAS LISTING fasm.s 			page 27


 1078      FF
 1079 0c92 C3       	               ret
 1080              	L000005A5:                                      # WORD DICT>NAME (F866)
 1081 0c93 83C504   	               addl $4, %ebp                    # PUSH $2, CLITERAL 2
 1082 0c96 C7450002 	               movl $2, (%ebp)
 1082      000000
 1083 0c9d 83C504   	               addl $4, %ebp                    # PUSH $4, CLITERAL 4
 1084 0ca0 C7450004 	               movl $4, (%ebp)
 1084      000000
 1085 0ca7 E834F5FF 	               call func_MUL
 1085      FF
 1086 0cac E811F5FF 	               call func_ADD
 1086      FF
 1087 0cb1 83C504   	               addl $4, %ebp                    # PUSH $1, CLITERAL 1
 1088 0cb4 C7450001 	               movl $1, (%ebp)
 1088      000000
 1089 0cbb E802F5FF 	               call func_ADD
 1089      FF
 1090 0cc0 C3       	               ret
 1091              	L000005B4:                                      # WORD FLAG_IMMEDIATE (F84D)
 1092 0cc1 83C504   	               addl $4, %ebp                    # PUSH $1, CLITERAL 1
 1093 0cc4 C7450001 	               movl $1, (%ebp)
 1093      000000
 1094 0ccb C3       	               ret
 1095              	L000005BC:                                      # WORD FLAG_INLINE (F837)
 1096 0ccc 83C504   	               addl $4, %ebp                    # PUSH $2, CLITERAL 2
 1097 0ccf C7450002 	               movl $2, (%ebp)
 1097      000000
 1098 0cd6 C3       	               ret
 1099              	L000005C4:                                      # WORD find-word (F823)
 1100 0cd7 E8B3F4FF 	               call func_DUP
 1100      FF
 1101 0cdc E8B1FAFF 	               call L0000039D
 1101      FF
 1102 0ce1 83C504   	               addl $4, %ebp                    # PUSH $20, CLITERAL 20
 1103 0ce4 C7450014 	               movl $20, (%ebp)
 1103      000000
 1104 0ceb E86DF4FF 	               call func_FETCH
 1104      FF
 1105 0cf0 E8FAF4FF 	               call func_DTOR                   # DTOR
 1105      FF
 1106 0cf5 E811F5FF 	L000005D3:     call func_RTOD                   # RTOD
 1106      FF
 1107 0cfa E890F4FF 	               call func_DUP
 1107      FF
 1108 0cff E8EBF4FF 	               call func_DTOR                   # DTOR
 1108      FF
 1109 0d04 E886F4FF 	               call func_DUP
 1109      FF
 1110 0d09 8B4500   	               movl (%ebp), %eax                # POP to %eax, JMPZ
 1111 0d0c 83ED04   	               subl $4, %ebp
 1112 0d0f 39050000 	               cmp %eax, 0
 1112      0000
 1113 0d15 7467     	               jz L000005F6
 1114 0d17 83C504   	               addl $4, %ebp                    # PUSH $2, CLITERAL 2
 1115 0d1a C7450002 	               movl $2, (%ebp)
 1115      000000
GAS LISTING fasm.s 			page 28


 1116 0d21 83C504   	               addl $4, %ebp                    # PUSH $4, CLITERAL 4
 1117 0d24 C7450004 	               movl $4, (%ebp)
 1117      000000
 1118 0d2b E8B0F4FF 	               call func_MUL
 1118      FF
 1119 0d30 E88DF4FF 	               call func_ADD
 1119      FF
 1120 0d35 83C504   	               addl $4, %ebp                    # PUSH $1, CLITERAL 1
 1121 0d38 C7450001 	               movl $1, (%ebp)
 1121      000000
 1122 0d3f E87EF4FF 	               call func_ADD
 1122      FF
 1123 0d44 E863F4FF 	               call func_OVER
 1123      FF
 1124 0d49 8B4500   	               movl (%ebp), %eax                # POP to %eax
 1125 0d4c 83ED04   	               subl $4, %ebp
 1126 0d4f 8B5D00   	               movl (%ebp), %ebx                # POP to %ebx
 1127 0d52 83ED04   	               subl $4, %ebp
 1128              	               # COMPAREI %eax, %ebx
 1129 0d55 83C504   	               addl $4, %ebp                    # PUSH %ebx
 1130 0d58 895D00   	               movl %ebx, (%ebp)
 1131 0d5b 8B4500   	               movl (%ebp), %eax                # POP to %eax, JMPZ
 1132 0d5e 83ED04   	               subl $4, %ebp
 1133 0d61 39050000 	               cmp %eax, 0
 1133      0000
 1134 0d67 7413     	               jz L000005F1
 1135 0d69 83ED04   	               subl $4, %ebp                    # DROP
 1136 0d6c E89AF4FF 	               call func_RTOD                   # RTOD
 1136      FF
 1137 0d71 83C504   	               addl $4, %ebp                    # PUSH $1, CLITERAL 1
 1138 0d74 C7450001 	               movl $1, (%ebp)
 1138      000000
 1139 0d7b C3       	               ret
 1140 0d7c EB19     	L000005F1:     jmp L000005FD                    # JMP
 1141 0d7e 83ED04   	L000005F6:     subl $4, %ebp                    # DROP
 1142 0d81 83ED04   	               subl $4, %ebp                    # DROP
 1143 0d84 E882F4FF 	               call func_RTOD                   # RTOD
 1143      FF
 1144 0d89 83ED04   	               subl $4, %ebp                    # DROP
 1145 0d8c 83C504   	               addl $4, %ebp                    # PUSH $0, CLITERAL 0
 1146 0d8f C7450000 	               movl $0, (%ebp)
 1146      000000
 1147 0d96 C3       	               ret
 1148 0d97 E86FF4FF 	L000005FD:     call func_RTOD                   # RTOD
 1148      FF
 1149 0d9c E8BCF3FF 	               call func_FETCH
 1149      FF
 1150 0da1 E849F4FF 	               call func_DTOR                   # DTOR
 1150      FF
 1151 0da6 E94AFFFF 	               jmp L000005D3                    # JMP
 1151      FF
 1152 0dab C3       	               ret
 1153              	L00000606:                                      # WORD define-word (F80D)
 1154 0dac 83C504   	               addl $4, %ebp                    # PUSH $20, CLITERAL 20
 1155 0daf C7450014 	               movl $20, (%ebp)
 1155      000000
 1156 0db6 E8A2F3FF 	               call func_FETCH
GAS LISTING fasm.s 			page 29


 1156      FF
 1157 0dbb E8ECF3FF 	               call func_OVER
 1157      FF
 1158 0dc0 E8A1F3FF 	               call func_CFETCH
 1158      FF
 1159 0dc5 83C504   	               addl $4, %ebp                    # PUSH $2, CLITERAL 2
 1160 0dc8 C7450002 	               movl $2, (%ebp)
 1160      000000
 1161 0dcf 83C504   	               addl $4, %ebp                    # PUSH $4, CLITERAL 4
 1162 0dd2 C7450004 	               movl $4, (%ebp)
 1162      000000
 1163 0dd9 E802F4FF 	               call func_MUL
 1163      FF
 1164 0dde 83C504   	               addl $4, %ebp                    # PUSH $3, CLITERAL 3
 1165 0de1 C7450003 	               movl $3, (%ebp)
 1165      000000
 1166 0de8 E8D5F3FF 	               call func_ADD
 1166      FF
 1167 0ded E8D0F3FF 	               call func_ADD
 1167      FF
 1168 0df2 E8DAF3FF 	               call func_SUB
 1168      FF
 1169 0df7 E893F3FF 	               call func_DUP
 1169      FF
 1170 0dfc E8EEF3FF 	               call func_DTOR                   # DTOR
 1170      FF
 1171 0e01 E8E9F3FF 	               call func_DTOR                   # DTOR
 1171      FF
 1172 0e06 83C504   	               addl $4, %ebp                    # PUSH $20, CLITERAL 20
 1173 0e09 C7450014 	               movl $20, (%ebp)
 1173      000000
 1174 0e10 E848F3FF 	               call func_FETCH
 1174      FF
 1175 0e15 E8F1F3FF 	               call func_RTOD                   # RTOD
 1175      FF
 1176 0e1a E870F3FF 	               call func_DUP
 1176      FF
 1177 0e1f E8CBF3FF 	               call func_DTOR                   # DTOR
 1177      FF
 1178 0e24 E848F3FF 	               call func_STORE
 1178      FF
 1179 0e29 E8DDF3FF 	               call func_RTOD                   # RTOD
 1179      FF
 1180 0e2e 83C504   	               addl $4, %ebp                    # PUSH $4, CLITERAL 4
 1181 0e31 C7450004 	               movl $4, (%ebp)
 1181      000000
 1182 0e38 E885F3FF 	               call func_ADD
 1182      FF
 1183 0e3d E8ADF3FF 	               call func_DTOR                   # DTOR
 1183      FF
 1184 0e42 83C504   	               addl $4, %ebp                    # PUSH $16, CLITERAL 16
 1185 0e45 C7450010 	               movl $16, (%ebp)
 1185      000000
 1186 0e4c E80CF3FF 	               call func_FETCH
 1186      FF
 1187 0e51 E8B5F3FF 	               call func_RTOD                   # RTOD
 1187      FF
GAS LISTING fasm.s 			page 30


 1188 0e56 E834F3FF 	               call func_DUP
 1188      FF
 1189 0e5b E88FF3FF 	               call func_DTOR                   # DTOR
 1189      FF
 1190 0e60 E80CF3FF 	               call func_STORE
 1190      FF
 1191 0e65 E8A1F3FF 	               call func_RTOD                   # RTOD
 1191      FF
 1192 0e6a 83C504   	               addl $4, %ebp                    # PUSH $4, CLITERAL 4
 1193 0e6d C7450004 	               movl $4, (%ebp)
 1193      000000
 1194 0e74 E849F3FF 	               call func_ADD
 1194      FF
 1195 0e79 E871F3FF 	               call func_DTOR                   # DTOR
 1195      FF
 1196 0e7e 83C504   	               addl $4, %ebp                    # PUSH $0, CLITERAL 0
 1197 0e81 C7450000 	               movl $0, (%ebp)
 1197      000000
 1198 0e88 E87EF3FF 	               call func_RTOD                   # RTOD
 1198      FF
 1199 0e8d E8FDF2FF 	               call func_DUP
 1199      FF
 1200 0e92 E858F3FF 	               call func_DTOR                   # DTOR
 1200      FF
 1201 0e97 E8E4F2FF 	               call func_CSTORE
 1201      FF
 1202 0e9c E86AF3FF 	               call func_RTOD                   # RTOD
 1202      FF
 1203 0ea1 83C504   	               addl $4, %ebp                    # PUSH $1, CLITERAL 1
 1204 0ea4 C7450001 	               movl $1, (%ebp)
 1204      000000
 1205 0eab E812F3FF 	               call func_ADD
 1205      FF
 1206 0eb0 E83AF3FF 	               call func_DTOR                   # DTOR
 1206      FF
 1207 0eb5 E851F3FF 	               call func_RTOD                   # RTOD
 1207      FF
 1208 0eba E857F9FF 	               call L000003C3
 1208      FF
 1209 0ebf E847F3FF 	               call func_RTOD                   # RTOD
 1209      FF
 1210 0ec4 83C504   	               addl $4, %ebp                    # PUSH $20, CLITERAL 20
 1211 0ec7 C7450014 	               movl $20, (%ebp)
 1211      000000
 1212 0ece E89EF2FF 	               call func_STORE
 1212      FF
 1213 0ed3 C3       	               ret
 1214              	L0000064B:                                      # WORD is-num-char? (F7F6)
 1215 0ed4 E8B6F2FF 	               call func_DUP
 1215      FF
 1216 0ed9 83C504   	               addl $4, %ebp                    # PUSH $48, CLITERAL 48
 1217 0edc C7450030 	               movl $48, (%ebp)
 1217      000000
 1218 0ee3 83C504   	               addl $4, %ebp                    # PUSH $57, CLITERAL 57
 1219 0ee6 C7450039 	               movl $57, (%ebp)
 1219      000000
 1220 0eed E836FAFF 	               call L0000041A
GAS LISTING fasm.s 			page 31


 1220      FF
 1221 0ef2 8B4500   	               movl (%ebp), %eax                # POP to %eax, JMPZ
 1222 0ef5 83ED04   	               subl $4, %ebp
 1223 0ef8 39050000 	               cmp %eax, 0
 1223      0000
 1224 0efe 741A     	               jz L00000665
 1225 0f00 83C504   	               addl $4, %ebp                    # PUSH $48, CLITERAL 48
 1226 0f03 C7450030 	               movl $48, (%ebp)
 1226      000000
 1227 0f0a E8C2F2FF 	               call func_SUB
 1227      FF
 1228 0f0f 83C504   	               addl $4, %ebp                    # PUSH $1, CLITERAL 1
 1229 0f12 C7450001 	               movl $1, (%ebp)
 1229      000000
 1230 0f19 C3       	               ret
 1231 0f1a 83C504   	L00000665:     addl $4, %ebp                    # PUSH $6, CLITERAL 6
 1232 0f1d C7450006 	               movl $6, (%ebp)
 1232      000000
 1233 0f24 E83DF2FF 	               call func_CFETCH
 1233      FF
 1234 0f29 83C504   	               addl $4, %ebp                    # PUSH $16, CLITERAL 16
 1235 0f2c C7450010 	               movl $16, (%ebp)
 1235      000000
 1236 0f33 E83DF1FF 	               call func_EQ                     # EQ
 1236      FF
 1237 0f38 8B4500   	               movl (%ebp), %eax                # POP to %eax, JMPZ
 1238 0f3b 83ED04   	               subl $4, %ebp
 1239 0f3e 39050000 	               cmp %eax, 0
 1239      0000
 1240 0f44 0F848C00 	               jz L0000069A
 1240      0000
 1241 0f4a E840F2FF 	               call func_DUP
 1241      FF
 1242 0f4f 83C504   	               addl $4, %ebp                    # PUSH $65, CLITERAL 65
 1243 0f52 C7450041 	               movl $65, (%ebp)
 1243      000000
 1244 0f59 83C504   	               addl $4, %ebp                    # PUSH $70, CLITERAL 70
 1245 0f5c C7450046 	               movl $70, (%ebp)
 1245      000000
 1246 0f63 E8C0F9FF 	               call L0000041A
 1246      FF
 1247 0f68 8B4500   	               movl (%ebp), %eax                # POP to %eax, JMPZ
 1248 0f6b 83ED04   	               subl $4, %ebp
 1249 0f6e 39050000 	               cmp %eax, 0
 1249      0000
 1250 0f74 741A     	               jz L00000685
 1251 0f76 83C504   	               addl $4, %ebp                    # PUSH $55, CLITERAL 55
 1252 0f79 C7450037 	               movl $55, (%ebp)
 1252      000000
 1253 0f80 E84CF2FF 	               call func_SUB
 1253      FF
 1254 0f85 83C504   	               addl $4, %ebp                    # PUSH $1, CLITERAL 1
 1255 0f88 C7450001 	               movl $1, (%ebp)
 1255      000000
 1256 0f8f C3       	               ret
 1257 0f90 E8FAF1FF 	L00000685:     call func_DUP
 1257      FF
GAS LISTING fasm.s 			page 32


 1258 0f95 83C504   	               addl $4, %ebp                    # PUSH $97, CLITERAL 97
 1259 0f98 C7450061 	               movl $97, (%ebp)
 1259      000000
 1260 0f9f 83C504   	               addl $4, %ebp                    # PUSH $102, CLITERAL 102
 1261 0fa2 C7450066 	               movl $102, (%ebp)
 1261      000000
 1262 0fa9 E87AF9FF 	               call L0000041A
 1262      FF
 1263 0fae 8B4500   	               movl (%ebp), %eax                # POP to %eax, JMPZ
 1264 0fb1 83ED04   	               subl $4, %ebp
 1265 0fb4 39050000 	               cmp %eax, 0
 1265      0000
 1266 0fba 741A     	               jz L0000069A
 1267 0fbc 83C504   	               addl $4, %ebp                    # PUSH $87, CLITERAL 87
 1268 0fbf C7450057 	               movl $87, (%ebp)
 1268      000000
 1269 0fc6 E806F2FF 	               call func_SUB
 1269      FF
 1270 0fcb 83C504   	               addl $4, %ebp                    # PUSH $1, CLITERAL 1
 1271 0fce C7450001 	               movl $1, (%ebp)
 1271      000000
 1272 0fd5 C3       	               ret
 1273 0fd6 83ED04   	L0000069A:     subl $4, %ebp                    # DROP
 1274 0fd9 83C504   	               addl $4, %ebp                    # PUSH $0, CLITERAL 0
 1275 0fdc C7450000 	               movl $0, (%ebp)
 1275      000000
 1276 0fe3 C3       	               ret
 1277              	L0000069E:                                      # WORD is-number? (F7E1)
 1278 0fe4 E8A6F1FF 	               call func_DUP
 1278      FF
 1279 0fe9 E8A4F7FF 	               call L0000039D
 1279      FF
 1280 0fee 83C504   	               addl $4, %ebp                    # PUSH $1, CLITERAL 1
 1281 0ff1 C7450001 	               movl $1, (%ebp)
 1281      000000
 1282 0ff8 E8C5F1FF 	               call func_ADD
 1282      FF
 1283 0ffd E88DF1FF 	               call func_DUP
 1283      FF
 1284 1002 E85FF1FF 	               call func_CFETCH
 1284      FF
 1285 1007 83C504   	               addl $4, %ebp                    # PUSH $45, CLITERAL 45
 1286 100a C745002D 	               movl $45, (%ebp)
 1286      000000
 1287 1011 E85FF0FF 	               call func_EQ                     # EQ
 1287      FF
 1288 1016 8B4500   	               movl (%ebp), %eax                # POP to %eax, JMPZ
 1289 1019 83ED04   	               subl $4, %ebp
 1290 101c 39050000 	               cmp %eax, 0
 1290      0000
 1291 1022 7420     	               jz L000006C1
 1292 1024 83C504   	               addl $4, %ebp                    # PUSH $1, CLITERAL 1
 1293 1027 C7450001 	               movl $1, (%ebp)
 1293      000000
 1294 102e E8BCF1FF 	               call func_DTOR                   # DTOR
 1294      FF
 1295 1033 83C504   	               addl $4, %ebp                    # PUSH $1, CLITERAL 1
GAS LISTING fasm.s 			page 33


 1296 1036 C7450001 	               movl $1, (%ebp)
 1296      000000
 1297 103d E880F1FF 	               call func_ADD
 1297      FF
 1298 1042 EB0F     	               jmp L000006C4                    # JMP
 1299 1044 83C504   	L000006C1:     addl $4, %ebp                    # PUSH $0, CLITERAL 0
 1300 1047 C7450000 	               movl $0, (%ebp)
 1300      000000
 1301 104e E89CF1FF 	               call func_DTOR                   # DTOR
 1301      FF
 1302 1053 E837F1FF 	L000006C4:     call func_DUP
 1302      FF
 1303 1058 E809F1FF 	               call func_CFETCH
 1303      FF
 1304 105d 83C504   	               addl $4, %ebp                    # PUSH $0, CLITERAL 0
 1305 1060 C7450000 	               movl $0, (%ebp)
 1305      000000
 1306 1067 E809F0FF 	               call func_EQ                     # EQ
 1306      FF
 1307 106c 8B4500   	               movl (%ebp), %eax                # POP to %eax, JMPZ
 1308 106f 83ED04   	               subl $4, %ebp
 1309 1072 39050000 	               cmp %eax, 0
 1309      0000
 1310 1078 7416     	               jz L000006D4
 1311 107a 83ED04   	               subl $4, %ebp                    # DROP
 1312 107d E889F1FF 	               call func_RTOD                   # RTOD
 1312      FF
 1313 1082 83ED04   	               subl $4, %ebp                    # DROP
 1314 1085 83C504   	               addl $4, %ebp                    # PUSH $0, CLITERAL 0
 1315 1088 C7450000 	               movl $0, (%ebp)
 1315      000000
 1316 108f C3       	               ret
 1317 1090 83C504   	L000006D4:     addl $4, %ebp                    # PUSH $0, CLITERAL 0
 1318 1093 C7450000 	               movl $0, (%ebp)
 1318      000000
 1319 109a E850F1FF 	               call func_DTOR                   # DTOR
 1319      FF
 1320 109f E8EBF0FF 	L000006D7:     call func_DUP
 1320      FF
 1321 10a4 E8BDF0FF 	               call func_CFETCH
 1321      FF
 1322 10a9 E8E1F0FF 	               call func_DUP
 1322      FF
 1323 10ae 83C504   	               addl $4, %ebp                    # PUSH $0, CLITERAL 0
 1324 10b1 C7450000 	               movl $0, (%ebp)
 1324      000000
 1325 10b8 E8B8EFFF 	               call func_EQ                     # EQ
 1325      FF
 1326 10bd 8B4500   	               movl (%ebp), %eax                # POP to %eax, JMPZ
 1327 10c0 83ED04   	               subl $4, %ebp
 1328 10c3 39050000 	               cmp %eax, 0
 1328      0000
 1329 10c9 743D     	               jz L000006F2
 1330 10cb 83ED04   	               subl $4, %ebp                    # DROP
 1331 10ce 83ED04   	               subl $4, %ebp                    # DROP
 1332 10d1 E835F1FF 	               call func_RTOD                   # RTOD
 1332      FF
GAS LISTING fasm.s 			page 34


 1333 10d6 E830F1FF 	               call func_RTOD                   # RTOD
 1333      FF
 1334 10db 8B4500   	               movl (%ebp), %eax                # POP to %eax, JMPZ
 1335 10de 83ED04   	               subl $4, %ebp
 1336 10e1 39050000 	               cmp %eax, 0
 1336      0000
 1337 10e7 7414     	               jz L000006EF
 1338 10e9 83C504   	               addl $4, %ebp                    # PUSH $0, CLITERAL 0
 1339 10ec C7450000 	               movl $0, (%ebp)
 1339      000000
 1340 10f3 E8A1F0FF 	               call func_SWAP
 1340      FF
 1341 10f8 E8D4F0FF 	               call func_SUB
 1341      FF
 1342 10fd 83C504   	L000006EF:     addl $4, %ebp                    # PUSH $1, CLITERAL 1
 1343 1100 C7450001 	               movl $1, (%ebp)
 1343      000000
 1344 1107 C3       	               ret
 1345 1108 E8C7FDFF 	L000006F2:     call L0000064B
 1345      FF
 1346 110d 8B4500   	               movl (%ebp), %eax                # POP to %eax, JMPZ
 1347 1110 83ED04   	               subl $4, %ebp
 1348 1113 39050000 	               cmp %eax, 0
 1348      0000
 1349 1119 7434     	               jz L0000070B
 1350 111b E8EBF0FF 	               call func_RTOD                   # RTOD
 1350      FF
 1351 1120 83C504   	               addl $4, %ebp                    # PUSH $6, CLITERAL 6
 1352 1123 C7450006 	               movl $6, (%ebp)
 1352      000000
 1353 112a E837F0FF 	               call func_CFETCH
 1353      FF
 1354 112f E8ACF0FF 	               call func_MUL
 1354      FF
 1355 1134 E889F0FF 	               call func_ADD
 1355      FF
 1356 1139 E8B1F0FF 	               call func_DTOR                   # DTOR
 1356      FF
 1357 113e 83C504   	               addl $4, %ebp                    # PUSH $1, CLITERAL 1
 1358 1141 C7450001 	               movl $1, (%ebp)
 1358      000000
 1359 1148 E875F0FF 	               call func_ADD
 1359      FF
 1360 114d EB1E     	               jmp L00000713                    # JMP
 1361 114f 83ED04   	L0000070B:     subl $4, %ebp                    # DROP
 1362 1152 E8B4F0FF 	               call func_RTOD                   # RTOD
 1362      FF
 1363 1157 83ED04   	               subl $4, %ebp                    # DROP
 1364 115a E8ACF0FF 	               call func_RTOD                   # RTOD
 1364      FF
 1365 115f 83ED04   	               subl $4, %ebp                    # DROP
 1366 1162 83C504   	               addl $4, %ebp                    # PUSH $0, CLITERAL 0
 1367 1165 C7450000 	               movl $0, (%ebp)
 1367      000000
 1368 116c C3       	               ret
 1369 116d E92DFFFF 	L00000713:     jmp L000006D7                    # JMP
 1369      FF
GAS LISTING fasm.s 			page 35


 1370 1172 C3       	               ret
 1371              	L00000719:                                      # WORD >IN (F7D3)
 1372 1173 83C504   	               addl $4, %ebp                    # PUSH $1828, LITERAL 1828
 1373 1176 C7450024 	               movl $1828, (%ebp)
 1373      070000
 1374 117d C3       	               ret
 1375 117e 00       	               .byte 0x00
 1376 117f 00       	               .byte 0x00
 1377 1180 00       	               .byte 0x00
 1378 1181 00       	               .byte 0x00
 1379 1182 C3       	               ret
 1380              	L00000729:                                      # WORD CREATE-NAME (F7BD)
 1381 1183 E8EBFFFF 	               call L00000719
 1381      FF
 1382 1188 E8D0EFFF 	               call func_FETCH
 1382      FF
 1383 118d E8D9F9FF 	               call L00000525
 1383      FF
 1384 1192 E8DCFFFF 	               call L00000719
 1384      FF
 1385 1197 E8D5EFFF 	               call func_STORE
 1385      FF
 1386 119c E8D2FFFF 	               call L00000719
 1386      FF
 1387 11a1 E8B7EFFF 	               call func_FETCH
 1387      FF
 1388 11a6 E8BBEFFF 	               call func_CFETCH
 1388      FF
 1389 11ab 83C504   	               addl $4, %ebp                    # PUSH $0, CLITERAL 0
 1390 11ae C7450000 	               movl $0, (%ebp)
 1390      000000
 1391 11b5 E8BBEEFF 	               call func_EQ                     # EQ
 1391      FF
 1392 11ba 8B4500   	               movl (%ebp), %eax                # POP to %eax, JMPZ
 1393 11bd 83ED04   	               subl $4, %ebp
 1394 11c0 39050000 	               cmp %eax, 0
 1394      0000
 1395 11c6 7401     	               jz L0000074F
 1396 11c8 C3       	               ret
 1397 11c9 E8A5FFFF 	L0000074F:     call L00000719
 1397      FF
 1398 11ce E88AEFFF 	               call func_FETCH
 1398      FF
 1399 11d3 E8D9F9FF 	               call L00000549
 1399      FF
 1400 11d8 E896FFFF 	               call L00000719
 1400      FF
 1401 11dd E88FEFFF 	               call func_STORE
 1401      FF
 1402 11e2 E8C5FBFF 	               call L00000606
 1402      FF
 1403 11e7 83C504   	               addl $4, %ebp                    # PUSH $24, CLITERAL 24
 1404 11ea C7450018 	               movl $24, (%ebp)
 1404      000000
 1405 11f1 E89DF0FF 	               call L00000068
 1405      FF
 1406 11f6 83C504   	               addl $4, %ebp                    # PUSH $20, CLITERAL 20
GAS LISTING fasm.s 			page 36


 1407 11f9 C7450014 	               movl $20, (%ebp)
 1407      000000
 1408 1200 E858EFFF 	               call func_FETCH
 1408      FF
 1409 1205 E8CBF0FF 	               call L0000007B
 1409      FF
 1410 120a C3       	               ret
 1411              	L00000775:                                      # WORD : (F7B1)
 1412 120b E873FFFF 	               call L00000729
 1412      FF
 1413 1210 83C504   	               addl $4, %ebp                    # PUSH $1, CLITERAL 1
 1414 1213 C7450001 	               movl $1, (%ebp)
 1414      000000
 1415 121a 83C504   	               addl $4, %ebp                    # PUSH $32, CLITERAL 32
 1416 121d C7450020 	               movl $32, (%ebp)
 1416      000000
 1417 1224 E848EFFF 	               call func_STORE
 1417      FF
 1418 1229 C3       	               ret
 1419              	L00000785:                                      # WORD ; (F7A5)
 1420 122a E898F1FF 	               call L00000115
 1420      FF
 1421 122f 83C504   	               addl $4, %ebp                    # PUSH $0, CLITERAL 0
 1422 1232 C7450000 	               movl $0, (%ebp)
 1422      000000
 1423 1239 83C504   	               addl $4, %ebp                    # PUSH $32, CLITERAL 32
 1424 123c C7450020 	               movl $32, (%ebp)
 1424      000000
 1425 1243 E829EFFF 	               call func_STORE
 1425      FF
 1426 1248 C3       	               ret
 1427              	L00000795:                                      # WORD execute-word (F78E)
 1428 1249 E841EFFF 	               call func_DUP
 1428      FF
 1429 124e E891FDFF 	               call L0000069E
 1429      FF
 1430 1253 8B4500   	               movl (%ebp), %eax                # POP to %eax, JMPZ
 1431 1256 83ED04   	               subl $4, %ebp
 1432 1259 39050000 	               cmp %eax, 0
 1432      0000
 1433 125f 745E     	               jz L000007D6
 1434 1261 E833EFFF 	               call func_SWAP
 1434      FF
 1435 1266 83ED04   	               subl $4, %ebp                    # DROP
 1436 1269 E8F5F2FF 	               call L0000026C
 1436      FF
 1437 126e 8B4500   	               movl (%ebp), %eax                # POP to %eax, JMPZ
 1438 1271 83ED04   	               subl $4, %ebp
 1439 1274 39050000 	               cmp %eax, 0
 1439      0000
 1440 127a 7442     	               jz L000007D5
 1441 127c E80EEFFF 	               call func_DUP
 1441      FF
 1442 1281 83C504   	               addl $4, %ebp                    # PUSH $255, CLITERAL 255
 1443 1284 C74500FF 	               movl $255, (%ebp)
 1443      000000
 1444 128b E842EEFF 	               call func_GT                     # GT
GAS LISTING fasm.s 			page 37


 1444      FF
 1445 1290 8B4500   	               movl (%ebp), %eax                # POP to %eax, JMPZ
 1446 1293 83ED04   	               subl $4, %ebp
 1447 1296 39050000 	               cmp %eax, 0
 1447      0000
 1448 129c 740C     	               jz L000007C9
 1449 129e E8A8F0FF 	               call L000000A4
 1449      FF
 1450 12a3 E82DF0FF 	               call L0000007B
 1450      FF
 1451 12a8 EB14     	               jmp L000007D5                    # JMP
 1452 12aa 83C504   	L000007C9:     addl $4, %ebp                    # PUSH $14, CLITERAL 14
 1453 12ad C745000E 	               movl $14, (%ebp)
 1453      000000
 1454 12b4 E8DAEFFF 	               call L00000068
 1454      FF
 1455 12b9 E8D5EFFF 	               call L00000068
 1455      FF
 1456 12be C3       	L000007D5:     ret
 1457 12bf E8CBEEFF 	L000007D6:     call func_DUP
 1457      FF
 1458 12c4 E80EFAFF 	               call L000005C4
 1458      FF
 1459 12c9 8B4500   	               movl (%ebp), %eax                # POP to %eax, JMPZ
 1460 12cc 83ED04   	               subl $4, %ebp
 1461 12cf 39050000 	               cmp %eax, 0
 1461      0000
 1462 12d5 0F842301 	               jz L00000845
 1462      0000
 1463 12db E8B9EEFF 	               call func_SWAP
 1463      FF
 1464 12e0 83ED04   	               subl $4, %ebp                    # DROP
 1465 12e3 E87BF2FF 	               call L0000026C
 1465      FF
 1466 12e8 8B4500   	               movl (%ebp), %eax                # POP to %eax, JMPZ
 1467 12eb 83ED04   	               subl $4, %ebp
 1468 12ee 39050000 	               cmp %eax, 0
 1468      0000
 1469 12f4 0F84E900 	               jz L0000083E
 1469      0000
 1470 12fa E890EEFF 	               call func_DUP
 1470      FF
 1471 12ff 83C504   	               addl $4, %ebp                    # PUSH $2, CLITERAL 2
 1472 1302 C7450002 	               movl $2, (%ebp)
 1472      000000
 1473 1309 83C504   	               addl $4, %ebp                    # PUSH $4, CLITERAL 4
 1474 130c C7450004 	               movl $4, (%ebp)
 1474      000000
 1475 1313 E8C8EEFF 	               call func_MUL
 1475      FF
 1476 1318 E8A5EEFF 	               call func_ADD
 1476      FF
 1477 131d E844EEFF 	               call func_CFETCH
 1477      FF
 1478 1322 83C504   	               addl $4, %ebp                    # PUSH $1, CLITERAL 1
 1479 1325 C7450001 	               movl $1, (%ebp)
 1479      000000
GAS LISTING fasm.s 			page 38


 1480 132c E844EDFF 	               call func_EQ                     # EQ
 1480      FF
 1481 1331 8B4500   	               movl (%ebp), %eax                # POP to %eax, JMPZ
 1482 1334 83ED04   	               subl $4, %ebp
 1483 1337 39050000 	               cmp %eax, 0
 1483      0000
 1484 133d 741F     	               jz L00000808
 1485 133f 83C504   	               addl $4, %ebp                    # PUSH $4, CLITERAL 4
 1486 1342 C7450004 	               movl $4, (%ebp)
 1486      000000
 1487 1349 E874EEFF 	               call func_ADD
 1487      FF
 1488 134e E80AEEFF 	               call func_FETCH
 1488      FF
 1489 1353 E897EEFF 	               call func_DTOR                   # DTOR
 1489      FF
 1490 1358 C3       	               ret
 1491 1359 E9830000 	               jmp L00000839                    # JMP
 1491      00
 1492 135e E82CEEFF 	L00000808:     call func_DUP
 1492      FF
 1493 1363 83C504   	               addl $4, %ebp                    # PUSH $2, CLITERAL 2
 1494 1366 C7450002 	               movl $2, (%ebp)
 1494      000000
 1495 136d 83C504   	               addl $4, %ebp                    # PUSH $4, CLITERAL 4
 1496 1370 C7450004 	               movl $4, (%ebp)
 1496      000000
 1497 1377 E864EEFF 	               call func_MUL
 1497      FF
 1498 137c E841EEFF 	               call func_ADD
 1498      FF
 1499 1381 E8E0EDFF 	               call func_CFETCH
 1499      FF
 1500 1386 83C504   	               addl $4, %ebp                    # PUSH $2, CLITERAL 2
 1501 1389 C7450002 	               movl $2, (%ebp)
 1501      000000
 1502 1390 E8E0ECFF 	               call func_EQ                     # EQ
 1502      FF
 1503 1395 8B4500   	               movl (%ebp), %eax                # POP to %eax, JMPZ
 1504 1398 83ED04   	               subl $4, %ebp
 1505 139b 39050000 	               cmp %eax, 0
 1505      0000
 1506 13a1 7420     	               jz L0000082B
 1507 13a3 E80FF0FF 	               call L00000108
 1507      FF
 1508 13a8 83C504   	               addl $4, %ebp                    # PUSH $4, CLITERAL 4
 1509 13ab C7450004 	               movl $4, (%ebp)
 1509      000000
 1510 13b2 E80BEEFF 	               call func_ADD
 1510      FF
 1511 13b7 E8A1EDFF 	               call func_FETCH
 1511      FF
 1512 13bc E814EFFF 	               call L0000007B
 1512      FF
 1513 13c1 EB1E     	               jmp L00000839                    # JMP
 1514 13c3 E8EFEFFF 	L0000082B:     call L00000108
 1514      FF
GAS LISTING fasm.s 			page 39


 1515 13c8 83C504   	               addl $4, %ebp                    # PUSH $4, CLITERAL 4
 1516 13cb C7450004 	               movl $4, (%ebp)
 1516      000000
 1517 13d2 E8EBEDFF 	               call func_ADD
 1517      FF
 1518 13d7 E881EDFF 	               call func_FETCH
 1518      FF
 1519 13dc E8F4EEFF 	               call L0000007B
 1519      FF
 1520 13e1 EB1A     	L00000839:     jmp L00000844                    # JMP
 1521 13e3 83C504   	L0000083E:     addl $4, %ebp                    # PUSH $4, CLITERAL 4
 1522 13e6 C7450004 	               movl $4, (%ebp)
 1522      000000
 1523 13ed E8D0EDFF 	               call func_ADD
 1523      FF
 1524 13f2 E866EDFF 	               call func_FETCH
 1524      FF
 1525 13f7 E8F3EDFF 	               call func_DTOR                   # DTOR
 1525      FF
 1526 13fc C3       	               ret
 1527 13fd C3       	L00000844:     ret
 1528 13fe E8BFF2FF 	L00000845:     call L00000344
 1528      FF
 1529 1403 E8D9F2FF 	               call L00000350
 1529      FF
 1530 1408 83C504   	               addl $4, %ebp                    # PUSH $63, CLITERAL 63
 1531 140b C745003F 	               movl $63, (%ebp)
 1531      000000
 1532 1412 E878EDFF 	               call func_DUP
 1532      FF
 1533 1417 E81FEDFF 	               call func_EMIT                   # EMIT
 1533      FF
 1534 141c E81AEDFF 	               call func_EMIT                   # EMIT
 1534      FF
 1535 1421 E83DF3FF 	               call L0000037E
 1535      FF
 1536 1426 E832EDFF 	               call func_FETCH
 1536      FF
 1537 142b 8B4500   	               movl (%ebp), %eax                # POP to %eax, JMPZ
 1538 142e 83ED04   	               subl $4, %ebp
 1539 1431 39050000 	               cmp %eax, 0
 1539      0000
 1540 1437 741E     	               jz L0000086E
 1541 1439 E825F3FF 	               call L0000037E
 1541      FF
 1542 143e E81AEDFF 	               call func_FETCH
 1542      FF
 1543              	                                                # FCLOSE (TODO)
 1544 1443 83C504   	               addl $4, %ebp                    # PUSH $0, CLITERAL 0
 1545 1446 C7450000 	               movl $0, (%ebp)
 1545      000000
 1546 144d E811F3FF 	               call L0000037E
 1546      FF
 1547 1452 E81AEDFF 	               call func_STORE
 1547      FF
 1548 1457 83C504   	L0000086E:     addl $4, %ebp                    # PUSH $0, CLITERAL 0
 1549 145a C7450000 	               movl $0, (%ebp)
GAS LISTING fasm.s 			page 40


 1549      000000
 1550 1461 83C504   	               addl $4, %ebp                    # PUSH $32, CLITERAL 32
 1551 1464 C7450020 	               movl $32, (%ebp)
 1551      000000
 1552 146b E801EDFF 	               call func_STORE
 1552      FF
 1553 1470 C3       	               ret
 1554              	L00000874:                                      # WORD execute-line (F777)
 1555 1471 E8FDFCFF 	L00000879:     call L00000719
 1555      FF
 1556 1476 E8E2ECFF 	               call func_FETCH
 1556      FF
 1557 147b E8EBF6FF 	               call L00000525
 1557      FF
 1558 1480 E8EEFCFF 	               call L00000719
 1558      FF
 1559 1485 E8E7ECFF 	               call func_STORE
 1559      FF
 1560 148a E8E4FCFF 	               call L00000719
 1560      FF
 1561 148f E8C9ECFF 	               call func_FETCH
 1561      FF
 1562 1494 E8CDECFF 	               call func_CFETCH
 1562      FF
 1563 1499 83C504   	               addl $4, %ebp                    # PUSH $0, CLITERAL 0
 1564 149c C7450000 	               movl $0, (%ebp)
 1564      000000
 1565 14a3 E8CDEBFF 	               call func_EQ                     # EQ
 1565      FF
 1566 14a8 8B4500   	               movl (%ebp), %eax                # POP to %eax, JMPZ
 1567 14ab 83ED04   	               subl $4, %ebp
 1568 14ae 39050000 	               cmp %eax, 0
 1568      0000
 1569 14b4 7401     	               jz L0000089A
 1570 14b6 C3       	               ret
 1571 14b7 E8B7FCFF 	L0000089A:     call L00000719
 1571      FF
 1572 14bc E89CECFF 	               call func_FETCH
 1572      FF
 1573 14c1 E8EBF6FF 	               call L00000549
 1573      FF
 1574 14c6 E8A8FCFF 	               call L00000719
 1574      FF
 1575 14cb E8A1ECFF 	               call func_STORE
 1575      FF
 1576 14d0 E874FDFF 	               call L00000795
 1576      FF
 1577 14d5 EB9A     	               jmp L00000879                    # JMP
 1578 14d7 C3       	               ret
 1579              	L000008B6:                                      # WORD ok (F76A)
 1580 14d8 83C504   	               addl $4, %ebp                    # PUSH $32, CLITERAL 32
 1581 14db C7450020 	               movl $32, (%ebp)
 1581      000000
 1582 14e2 E876ECFF 	               call func_FETCH
 1582      FF
 1583 14e7 83C504   	               addl $4, %ebp                    # PUSH $0, CLITERAL 0
 1584 14ea C7450000 	               movl $0, (%ebp)
GAS LISTING fasm.s 			page 41


 1584      000000
 1585 14f1 E87FEBFF 	               call func_EQ                     # EQ
 1585      FF
 1586 14f6 8B4500   	               movl (%ebp), %eax                # POP to %eax, JMPZ
 1587 14f9 83ED04   	               subl $4, %ebp
 1588 14fc 39050000 	               cmp %eax, 0
 1588      0000
 1589 1502 7456     	               jz L00000904
 1590 1504 E85AF2FF 	               call L0000037E
 1590      FF
 1591 1509 E84FECFF 	               call func_FETCH
 1591      FF
 1592 150e 83C504   	               addl $4, %ebp                    # PUSH $0, CLITERAL 0
 1593 1511 C7450000 	               movl $0, (%ebp)
 1593      000000
 1594 1518 E858EBFF 	               call func_EQ                     # EQ
 1594      FF
 1595 151d 8B4500   	               movl (%ebp), %eax                # POP to %eax, JMPZ
 1596 1520 83ED04   	               subl $4, %ebp
 1597 1523 39050000 	               cmp %eax, 0
 1597      0000
 1598 1529 7419     	               jz L000008EE
 1599              	                                                # SLITERAL (08d5) [ Ok]
 1600 152b E841ECFF 	               call func_STORE
 1600      FF
 1601              	                                                # FCLOSE (TODO)
 1602 1530 4F       	               .byte 0x4f
 1603 1531 6B       	               .byte 0x6b
 1604 1532 00       	               .byte 0x00
 1605 1533 E88AF1FF 	               call L00000344
 1605      FF
 1606 1538 E8A4F1FF 	               call L00000350
 1606      FF
 1607 153d E802F2FF 	               call L00000372
 1607      FF
 1608 1542 EB14     	               jmp L000008FF                    # JMP
 1609              	L000008EE:                                      # SLITERAL (08ef) [.ok.]
 1610 1544 E850ECFF 	               call func_SWAP
 1610      FF
 1611 1549 2E       	               .byte 0x2e
 1612 154a 6F       	               .byte 0x6f
 1613 154b 6B       	               .byte 0x6b
 1614 154c 2E       	               .byte 0x2e
 1615 154d 00       	               .byte 0x00
 1616 154e E86FF1FF 	               call L00000344
 1616      FF
 1617 1553 E889F1FF 	               call L00000350
 1617      FF
 1618 1558 EB24     	L000008FF:     jmp L00000915                    # JMP
 1619              	L00000904:                                      # SLITERAL (0905) [(ok)]
 1620 155a E83AECFF 	               call func_SWAP
 1620      FF
 1621 155f 8B4500   	               movl (%ebp), %eax                # POP to %eax
 1622 1562 83ED04   	               subl $4, %ebp
 1623 1565 8B5D00   	               movl (%ebp), %ebx                # POP to %ebx
 1624 1568 83ED04   	               subl $4, %ebp
 1625              	               # COMPAREI %eax, %ebx
GAS LISTING fasm.s 			page 42


 1626 156b 83C504   	               addl $4, %ebp                    # PUSH %ebx
 1627 156e 895D00   	               movl %ebx, (%ebp)
 1628 1571 6F       	               .byte 0x6f
 1629 1572 6B       	               .byte 0x6b
 1630              	                                                # USINIT (TODO)
 1631 1573 00       	               .byte 0x00
 1632 1574 E849F1FF 	               call L00000344
 1632      FF
 1633 1579 E863F1FF 	               call L00000350
 1633      FF
 1634 157e C3       	L00000915:     ret
 1635              	L00000916:                                      # WORD mainloop (F757)
 1636 157f 83C504   	               addl $4, %ebp                    # PUSH $0, CLITERAL 0
 1637 1582 C7450000 	               movl $0, (%ebp)
 1637      000000
 1638 1589 83C504   	               addl $4, %ebp                    # PUSH $32, CLITERAL 32
 1639 158c C7450020 	               movl $32, (%ebp)
 1639      000000
 1640 1593 E8D9EBFF 	               call func_STORE
 1640      FF
 1641 1598 E83BFFFF 	L00000920:     call L000008B6
 1641      FF
 1642 159d E8A4F5FF 	               call L00000505
 1642      FF
 1643 15a2 E8E8EBFF 	               call func_DUP
 1643      FF
 1644 15a7 E8BAEBFF 	               call func_CFETCH
 1644      FF
 1645 15ac 8B4500   	               movl (%ebp), %eax                # POP to %eax, JMPZ
 1646 15af 83ED04   	               subl $4, %ebp
 1647 15b2 39050000 	               cmp %eax, 0
 1647      0000
 1648 15b8 742A     	               jz L0000094A
 1649 15ba E8D0EBFF 	               call func_DUP
 1649      FF
 1650 15bf E8CEF1FF 	               call L0000039D
 1650      FF
 1651 15c4 83C504   	               addl $4, %ebp                    # PUSH $1, CLITERAL 1
 1652 15c7 C7450001 	               movl $1, (%ebp)
 1652      000000
 1653 15ce E8EFEBFF 	               call func_ADD
 1653      FF
 1654 15d3 E89BFBFF 	               call L00000719
 1654      FF
 1655 15d8 E894EBFF 	               call func_STORE
 1655      FF
 1656 15dd E88FFEFF 	               call L00000874
 1656      FF
 1657 15e2 EB39     	               jmp L00000965                    # JMP
 1658 15e4 83ED04   	L0000094A:     subl $4, %ebp                    # DROP
 1659 15e7 E877F1FF 	               call L0000037E
 1659      FF
 1660 15ec E86CEBFF 	               call func_FETCH
 1660      FF
 1661 15f1 8B4500   	               movl (%ebp), %eax                # POP to %eax, JMPZ
 1662 15f4 83ED04   	               subl $4, %ebp
 1663 15f7 39050000 	               cmp %eax, 0
GAS LISTING fasm.s 			page 43


 1663      0000
 1664 15fd 741E     	               jz L00000965
 1665 15ff E85FF1FF 	               call L0000037E
 1665      FF
 1666 1604 E854EBFF 	               call func_FETCH
 1666      FF
 1667              	                                                # FCLOSE (TODO)
 1668 1609 83C504   	               addl $4, %ebp                    # PUSH $0, CLITERAL 0
 1669 160c C7450000 	               movl $0, (%ebp)
 1669      000000
 1670 1613 E84BF1FF 	               call L0000037E
 1670      FF
 1671 1618 E854EBFF 	               call func_STORE
 1671      FF
 1672 161d E976FFFF 	L00000965:     jmp L00000920                    # JMP
 1672      FF
 1673 1622 C3       	               ret
 1674              	L0000096B:                                      # WORD main (F748)
 1675              	                                                # SLITERAL (0971) [Hello.]
 1676 1623 E867EBFF 	               call func_DUP
 1676      FF
 1677 1628 48       	               .byte 0x48
 1678 1629 65       	               .byte 0x65
 1679 162a 6C       	               .byte 0x6c
 1680 162b 6C       	               .byte 0x6c
 1681 162c 6F       	               .byte 0x6f
 1682 162d 2E       	               .byte 0x2e
 1683 162e 00       	               .byte 0x00
 1684 162f E88EF0FF 	               call L00000344
 1684      FF
 1685 1634 E8A8F0FF 	               call L00000350
 1685      FF
 1686 1639 83C504   	               addl $4, %ebp                    # PUSH $0, CLITERAL 0
 1687 163c C7450000 	               movl $0, (%ebp)
 1687      000000
 1688 1643 E81BF1FF 	               call L0000037E
 1688      FF
 1689 1648 E824EBFF 	               call func_STORE
 1689      FF
 1690 164d 83C504   	               addl $4, %ebp                    # PUSH $20, CLITERAL 20
 1691 1650 C7450014 	               movl $20, (%ebp)
 1691      000000
 1692 1657 E801EBFF 	               call func_FETCH
 1692      FF
 1693 165c 83C504   	               addl $4, %ebp                    # PUSH $4, CLITERAL 4
 1694 165f C7450004 	               movl $4, (%ebp)
 1694      000000
 1695 1666 E857EBFF 	               call func_ADD
 1695      FF
 1696 166b E8EDEAFF 	               call func_FETCH
 1696      FF
 1697 1670 83C504   	               addl $4, %ebp                    # PUSH $1, CLITERAL 1
 1698 1673 C7450001 	               movl $1, (%ebp)
 1698      000000
 1699 167a E8F2EAFF 	               call func_STORE
 1699      FF
 1700 167f E8FBFEFF 	               call L00000916
GAS LISTING fasm.s 			page 44


 1700      FF
 1701 1684 C3       	               ret
 1702              	L0000099B:                                      # WORD reset-data-stack (F72D)
 1703              	L000009A0:                                      # DEPTH (TODO)
 1704 1685 8B4500   	               movl (%ebp), %eax                # POP to %eax, JMPZ
 1705 1688 83ED04   	               subl $4, %ebp
 1706 168b 39050000 	               cmp %eax, 0
 1706      0000
 1707 1691 7405     	               jz L000009AC
 1708 1693 83ED04   	               subl $4, %ebp                    # DROP
 1709 1696 EB01     	               jmp L000009AD                    # JMP
 1710 1698 C3       	L000009AC:     ret
 1711 1699 EBEA     	L000009AD:     jmp L000009A0                    # JMP
 1712 169b C3       	               ret
 1713              	L000009B3:                                      # WORD RDEPTH (F71C)
 1714 169c 83C504   	               addl $4, %ebp                    # PUSH $0, CLITERAL 0
 1715 169f C7450000 	               movl $0, (%ebp)
 1715      000000
 1716 16a6 C3       	               ret
 1717              	L000009BB:                                      # WORD reset-return-stack (F6FF)
 1718 16a7 E85FEBFF 	               call func_RTOD                   # RTOD
 1718      FF
 1719 16ac E8EBFFFF 	L000009C1:     call L000009B3
 1719      FF
 1720 16b1 8B4500   	               movl (%ebp), %eax                # POP to %eax, JMPZ
 1721 16b4 83ED04   	               subl $4, %ebp
 1722 16b7 39050000 	               cmp %eax, 0
 1722      0000
 1723 16bd 740A     	               jz L000009D2
 1724 16bf E847EBFF 	               call func_RTOD                   # RTOD
 1724      FF
 1725 16c4 83ED04   	               subl $4, %ebp                    # DROP
 1726 16c7 EB06     	               jmp L000009D4                    # JMP
 1727 16c9 E821EBFF 	L000009D2:     call func_DTOR                   # DTOR
 1727      FF
 1728 16ce C3       	               ret
 1729 16cf EBDB     	L000009D4:     jmp L000009C1                    # JMP
 1730 16d1 C3       	               ret
 1731              	L000009DA:                                      # WORD \ (F6F3)
 1732 16d2 83C504   	               addl $4, %ebp                    # PUSH $0, CLITERAL 0
 1733 16d5 C7450000 	               movl $0, (%ebp)
 1733      000000
 1734 16dc E892FAFF 	               call L00000719
 1734      FF
 1735 16e1 E877EAFF 	               call func_FETCH
 1735      FF
 1736 16e6 E886EAFF 	               call func_STORE
 1736      FF
 1737 16eb C3       	               ret
 1738              	L000009E9:                                      # WORD /MOD (F6E4)
 1739 16ec E8BBEAFF 	               call func_OVER
 1739      FF
 1740 16f1 E8B6EAFF 	               call func_OVER
 1740      FF
 1741 16f6 8B5D00   	               movl (%ebp), %ebx                # POP to %ebx, ADD
 1742 16f9 83ED04   	               subl $4, %ebp
 1743 16fc 8B4500   	               movl (%ebp), %eax                # POP to %eax
GAS LISTING fasm.s 			page 45


 1744 16ff 83ED04   	               subl $4, %ebp
 1745 1702 F7F3     	               divl %ebx
 1746 1704 83C504   	               addl $4, %ebp                    # PUSH %eax
 1747 1707 894500   	               movl %eax, (%ebp)
 1748 170a E880EAFF 	               call func_DUP
 1748      FF
 1749 170f E8DBEAFF 	               call func_DTOR                   # DTOR
 1749      FF
 1750 1714 E8C7EAFF 	               call func_MUL
 1750      FF
 1751 1719 E8B3EAFF 	               call func_SUB
 1751      FF
 1752 171e E8E8EAFF 	               call func_RTOD                   # RTOD
 1752      FF
 1753 1723 E871EAFF 	               call func_SWAP
 1753      FF
 1754 1728 C3       	               ret
 1755              	L000009F8:                                      # WORD (.) (F6D6)
 1756 1729 E861EAFF 	               call func_DUP
 1756      FF
 1757 172e 83C504   	               addl $4, %ebp                    # PUSH $0, CLITERAL 0
 1758 1731 C7450000 	               movl $0, (%ebp)
 1758      000000
 1759 1738 E838E9FF 	               call func_EQ                     # EQ
 1759      FF
 1760 173d 8B4500   	               movl (%ebp), %eax                # POP to %eax, JMPZ
 1761 1740 83ED04   	               subl $4, %ebp
 1762 1743 39050000 	               cmp %eax, 0
 1762      0000
 1763 1749 7413     	               jz L00000A0B
 1764 174b 83ED04   	               subl $4, %ebp                    # DROP
 1765 174e 83C504   	               addl $4, %ebp                    # PUSH $48, CLITERAL 48
 1766 1751 C7450030 	               movl $48, (%ebp)
 1766      000000
 1767 1758 E8DEE9FF 	               call func_EMIT                   # EMIT
 1767      FF
 1768 175d C3       	               ret
 1769 175e E82CEAFF 	L00000A0B:     call func_DUP
 1769      FF
 1770 1763 83C504   	               addl $4, %ebp                    # PUSH $0, CLITERAL 0
 1771 1766 C7450000 	               movl $0, (%ebp)
 1771      000000
 1772 176d E83DE9FF 	               call func_LT                     # LT
 1772      FF
 1773 1772 8B4500   	               movl (%ebp), %eax                # POP to %eax, JMPZ
 1774 1775 83ED04   	               subl $4, %ebp
 1775 1778 39050000 	               cmp %eax, 0
 1775      0000
 1776 177e 741B     	               jz L00000A1E
 1777 1780 83C504   	               addl $4, %ebp                    # PUSH $0, CLITERAL 0
 1778 1783 C7450000 	               movl $0, (%ebp)
 1778      000000
 1779 178a E842EAFF 	               call func_SUB
 1779      FF
 1780 178f 83C504   	               addl $4, %ebp                    # PUSH $1, CLITERAL 1
 1781 1792 C7450001 	               movl $1, (%ebp)
 1781      000000
GAS LISTING fasm.s 			page 46


 1782 1799 EB0A     	               jmp L00000A20                    # JMP
 1783 179b 83C504   	L00000A1E:     addl $4, %ebp                    # PUSH $0, CLITERAL 0
 1784 179e C7450000 	               movl $0, (%ebp)
 1784      000000
 1785 17a5 E845EAFF 	L00000A20:     call func_DTOR                   # DTOR
 1785      FF
 1786 17aa 83C504   	               addl $4, %ebp                    # PUSH $0, CLITERAL 0
 1787 17ad C7450000 	               movl $0, (%ebp)
 1787      000000
 1788 17b4 E8E0E9FF 	               call func_SWAP
 1788      FF
 1789 17b9 E8D1E9FF 	L00000A24:     call func_DUP
 1789      FF
 1790 17be 8B4500   	               movl (%ebp), %eax                # POP to %eax, JMPZ
 1791 17c1 83ED04   	               subl $4, %ebp
 1792 17c4 39050000 	               cmp %eax, 0
 1792      0000
 1793 17ca 745B     	               jz L00000A47
 1794 17cc 83C504   	               addl $4, %ebp                    # PUSH $6, CLITERAL 6
 1795 17cf C7450006 	               movl $6, (%ebp)
 1795      000000
 1796 17d6 E88BE9FF 	               call func_CFETCH
 1796      FF
 1797 17db E80CFFFF 	               call L000009E9
 1797      FF
 1798 17e0 83C504   	               addl $4, %ebp                    # PUSH $48, CLITERAL 48
 1799 17e3 C7450030 	               movl $48, (%ebp)
 1799      000000
 1800 17ea E8BDE9FF 	               call func_OVER
 1800      FF
 1801 17ef 83C504   	               addl $4, %ebp                    # PUSH $9, CLITERAL 9
 1802 17f2 C7450009 	               movl $9, (%ebp)
 1802      000000
 1803 17f9 E8D4E8FF 	               call func_GT                     # GT
 1803      FF
 1804 17fe 8B4500   	               movl (%ebp), %eax                # POP to %eax, JMPZ
 1805 1801 83ED04   	               subl $4, %ebp
 1806 1804 39050000 	               cmp %eax, 0
 1806      0000
 1807 180a 740F     	               jz L00000A40
 1808 180c 83C504   	               addl $4, %ebp                    # PUSH $7, CLITERAL 7
 1809 180f C7450007 	               movl $7, (%ebp)
 1809      000000
 1810 1816 E8A7E9FF 	               call func_ADD
 1810      FF
 1811 181b E8A2E9FF 	L00000A40:     call func_ADD
 1811      FF
 1812 1820 E874E9FF 	               call func_SWAP
 1812      FF
 1813 1825 EB45     	               jmp L00000A64                    # JMP
 1814 1827 83ED04   	L00000A47:     subl $4, %ebp                    # DROP
 1815 182a E8DCE9FF 	               call func_RTOD                   # RTOD
 1815      FF
 1816 182f 8B4500   	               movl (%ebp), %eax                # POP to %eax, JMPZ
 1817 1832 83ED04   	               subl $4, %ebp
 1818 1835 39050000 	               cmp %eax, 0
 1818      0000
GAS LISTING fasm.s 			page 47


 1819 183b 740F     	               jz L00000A51
 1820 183d 83C504   	               addl $4, %ebp                    # PUSH $45, CLITERAL 45
 1821 1840 C745002D 	               movl $45, (%ebp)
 1821      000000
 1822 1847 E8EFE8FF 	               call func_EMIT                   # EMIT
 1822      FF
 1823 184c E83EE9FF 	L00000A51:     call func_DUP
 1823      FF
 1824 1851 8B4500   	               movl (%ebp), %eax                # POP to %eax, JMPZ
 1825 1854 83ED04   	               subl $4, %ebp
 1826 1857 39050000 	               cmp %eax, 0
 1826      0000
 1827 185d 7407     	               jz L00000A5D
 1828 185f E8D7E8FF 	               call func_EMIT                   # EMIT
 1828      FF
 1829 1864 EB04     	               jmp L00000A5F                    # JMP
 1830 1866 83ED04   	L00000A5D:     subl $4, %ebp                    # DROP
 1831 1869 C3       	               ret
 1832 186a EBE0     	L00000A5F:     jmp L00000A51                    # JMP
 1833 186c E948FFFF 	L00000A64:     jmp L00000A24                    # JMP
 1833      FF
 1834 1871 C3       	               ret
 1835              	L00000A6A:                                      # WORD BL (F6C9)
 1836 1872 83C504   	               addl $4, %ebp                    # PUSH $32, CLITERAL 32
 1837 1875 C7450020 	               movl $32, (%ebp)
 1837      000000
 1838 187c E8BAE8FF 	               call func_EMIT                   # EMIT
 1838      FF
 1839 1881 C3       	               ret
 1840              	L00000A73:                                      # WORD . (F6BD)
 1841 1882 83C504   	               addl $4, %ebp                    # PUSH $32, CLITERAL 32
 1842 1885 C7450020 	               movl $32, (%ebp)
 1842      000000
 1843 188c E8AAE8FF 	               call func_EMIT                   # EMIT
 1843      FF
 1844 1891 E893FEFF 	               call L000009F8
 1844      FF
 1845 1896 C3       	               ret
 1846              	L00000A81:                                      # WORD LOAD (F6AE)
 1847 1897 E8F3E8FF 	               call func_DUP
 1847      FF
 1848 189c E8F1EEFF 	               call L0000039D
 1848      FF
 1849 18a1 83C504   	               addl $4, %ebp                    # PUSH $0, CLITERAL 0
 1850 18a4 C7450000 	               movl $0, (%ebp)
 1850      000000
 1851 18ab 83C504   	               addl $4, %ebp                    # PUSH $0, CLITERAL 0
 1852 18ae C7450000 	               movl $0, (%ebp)
 1852      000000
 1853              	                                                # FOPEN (TODO)
 1854 18b5 8B4500   	               movl (%ebp), %eax                # POP to %eax, JMPZ
 1855 18b8 83ED04   	               subl $4, %ebp
 1856 18bb 39050000 	               cmp %eax, 0
 1856      0000
 1857 18c1 740C     	               jz L00000AA1
 1858 18c3 E89BEEFF 	               call L0000037E
 1858      FF
GAS LISTING fasm.s 			page 48


 1859 18c8 E8A4E8FF 	               call func_STORE
 1859      FF
 1860 18cd EB27     	               jmp L00000AC8                    # JMP
 1861 18cf 83ED04   	L00000AA1:     subl $4, %ebp                    # DROP
 1862              	                                                # SLITERAL (0aa3) [ unable to open the file.]
 1863 18d2 E864E8FF 	               call func_EMIT                   # EMIT
 1863      FF
 1864              	                                                # FCLOSE (TODO)
 1865 18d7 75       	               .byte 0x75
 1866 18d8 6E       	               .byte 0x6e
 1867 18d9 61       	               .byte 0x61
 1868 18da 62       	               .byte 0x62
 1869 18db 6C       	               .byte 0x6c
 1870 18dc 65       	               .byte 0x65
 1871              	                                                # FCLOSE (TODO)
 1872 18dd 74       	               .byte 0x74
 1873 18de 6F       	               .byte 0x6f
 1874              	                                                # FCLOSE (TODO)
 1875 18df 6F       	               .byte 0x6f
 1876 18e0 70       	               .byte 0x70
 1877 18e1 65       	               .byte 0x65
 1878 18e2 6E       	               .byte 0x6e
 1879              	                                                # FCLOSE (TODO)
 1880 18e3 74       	               .byte 0x74
 1881 18e4 68       	               .byte 0x68
 1882 18e5 65       	               .byte 0x65
 1883              	                                                # FCLOSE (TODO)
 1884 18e6 66       	               .byte 0x66
 1885 18e7 69       	               .byte 0x69
 1886 18e8 6C       	               .byte 0x6c
 1887 18e9 65       	               .byte 0x65
 1888 18ea 2E       	               .byte 0x2e
 1889 18eb 00       	               .byte 0x00
 1890 18ec E8D1EDFF 	               call L00000344
 1890      FF
 1891 18f1 E8EBEDFF 	               call L00000350
 1891      FF
 1892 18f6 C3       	L00000AC8:     ret
 1893              	L00000AC9:                                      # WORD LL (F6A1)
 1894              	                                                # SLITERAL (0acf) [words.4th]
 1895 18f7 8B4500   	               movl (%ebp), %eax                # POP to %eax, JMPZ
 1896 18fa 83ED04   	               subl $4, %ebp
 1897 18fd 39050000 	               cmp %eax, 0
 1897      0000
 1898 1903 E88FFFFF 	               call L00000A81
 1898      FF
 1899 1908 C3       	               ret
 1900              	L00000AE0:                                      # WORD exception (F68D)
 1901              	                                                # SLITERAL (0ae6) [ (exception) ]
 1902              	                                                # OR (TODO)
 1903              	                                                # FCLOSE (TODO)
 1904 1909 8B4500   	               movl (%ebp), %eax                # POP to %eax
 1905 190c 83ED04   	               subl $4, %ebp
 1906 190f 8B5D00   	               movl (%ebp), %ebx                # POP to %ebx
 1907 1912 83ED04   	               subl $4, %ebp
 1908              	               # COMPAREI %eax, %ebx
 1909 1915 83C504   	               addl $4, %ebp                    # PUSH %ebx
GAS LISTING fasm.s 			page 49


 1910 1918 895D00   	               movl %ebx, (%ebp)
 1911 191b 65       	               .byte 0x65
 1912 191c 78       	               .byte 0x78
 1913 191d 63       	               .byte 0x63
 1914 191e 65       	               .byte 0x65
 1915 191f 70       	               .byte 0x70
 1916 1920 74       	               .byte 0x74
 1917 1921 69       	               .byte 0x69
 1918 1922 6F       	               .byte 0x6f
 1919 1923 6E       	               .byte 0x6e
 1920              	                                                # USINIT (TODO)
 1921              	                                                # FCLOSE (TODO)
 1922 1924 00       	               .byte 0x00
 1923 1925 E898EDFF 	               call L00000344
 1923      FF
 1924 192a E8B2EDFF 	               call L00000350
 1924      FF
 1925 192f 83C504   	               addl $4, %ebp                    # PUSH $0, CLITERAL 0
 1926 1932 C7450000 	               movl $0, (%ebp)
 1926      000000
 1927 1939 83C504   	               addl $4, %ebp                    # PUSH $32, CLITERAL 32
 1928 193c C7450020 	               movl $32, (%ebp)
 1928      000000
 1929 1943 E829E8FF 	               call func_STORE
 1929      FF
 1930 1948 E838FDFF 	               call L0000099B
 1930      FF
 1931 194d E855FDFF 	               call L000009BB
 1931      FF
 1932 1952 E828FCFF 	               call L00000916
 1932      FF
 1933 1957 C3       	               ret
 1934              	                                                # 
 1935              	# End of code, Dictionary:
 1936              	#
 1937              	
 1938              	L0000F68D:     # Next: 0000f6a1                 # # WORD: exception
 1939              	               # XT: 00000ae0                   # Flags: 0
 1940              	               # Len: 2784                      #  09 65 78 63 65 70 74 69 6f 6e
 1941              	L0000F6A1:     # Next: 0000f6ae                 # # WORD: LL
 1942              	               # XT: 00000ac9                   # Flags: 0
 1943              	               # Len: 2761                      #  02 4c 4c
 1944              	L0000F6AE:     # Next: 0000f6bd                 # # WORD: LOAD
 1945              	               # XT: 00000a81                   # Flags: 0
 1946              	               # Len: 2689                      #  04 4c 4f 41 44
 1947              	L0000F6BD:     # Next: 0000f6c9                 # # WORD: .
 1948              	               # XT: 00000a73                   # Flags: 0
 1949              	               # Len: 2675                      #  01 2e
 1950              	L0000F6C9:     # Next: 0000f6d6                 # # WORD: BL
 1951              	               # XT: 00000a6a                   # Flags: 2
 1952              	               # Len: 2666                      #  02 42 4c
 1953              	L0000F6D6:     # Next: 0000f6e4                 # # WORD: (.)
 1954              	               # XT: 000009f8                   # Flags: 0
 1955              	               # Len: 2552                      #  03 28 2e 29
 1956              	L0000F6E4:     # Next: 0000f6f3                 # # WORD: /MOD
 1957              	               # XT: 000009e9                   # Flags: 0
 1958              	               # Len: 2537                      #  04 2f 4d 4f 44
GAS LISTING fasm.s 			page 50


 1959              	L0000F6F3:     # Next: 0000f6ff                 # # WORD: \
 1960              	               # XT: 000009da                   # Flags: 1
 1961              	               # Len: 2522                      #  01 5c
 1962              	L0000F6FF:     # Next: 0000f71c                 # # WORD: reset-return-stack
 1963              	               # XT: 000009bb                   # Flags: 0
 1964              	               # Len: 2491                      #  12 72 65 73 65 74 2d 72 65 74 75 72 6e 2d 73 74 
 1965              	L0000F71C:     # Next: 0000f72d                 # # WORD: RDEPTH
 1966              	               # XT: 000009b3                   # Flags: 0
 1967              	               # Len: 2483                      #  06 52 44 45 50 54 48
 1968              	L0000F72D:     # Next: 0000f748                 # # WORD: reset-data-stack
 1969              	               # XT: 0000099b                   # Flags: 0
 1970              	               # Len: 2459                      #  10 72 65 73 65 74 2d 64 61 74 61 2d 73 74 61 63 
 1971              	L0000F748:     # Next: 0000f757                 # # WORD: main
 1972              	               # XT: 0000096b                   # Flags: 0
 1973              	               # Len: 2411                      #  04 6d 61 69 6e
 1974              	L0000F757:     # Next: 0000f76a                 # # WORD: mainloop
 1975              	               # XT: 00000916                   # Flags: 0
 1976              	               # Len: 2326                      #  08 6d 61 69 6e 6c 6f 6f 70
 1977              	L0000F76A:     # Next: 0000f777                 # # WORD: ok
 1978              	               # XT: 000008b6                   # Flags: 0
 1979              	               # Len: 2230                      #  02 6f 6b
 1980              	L0000F777:     # Next: 0000f78e                 # # WORD: execute-line
 1981              	               # XT: 00000874                   # Flags: 0
 1982              	               # Len: 2164                      #  0c 65 78 65 63 75 74 65 2d 6c 69 6e 65
 1983              	L0000F78E:     # Next: 0000f7a5                 # # WORD: execute-word
 1984              	               # XT: 00000795                   # Flags: 0
 1985              	               # Len: 1941                      #  0c 65 78 65 63 75 74 65 2d 77 6f 72 64
 1986              	L0000F7A5:     # Next: 0000f7b1                 # # WORD: ;
 1987              	               # XT: 00000785                   # Flags: 1
 1988              	               # Len: 1925                      #  01 3b
 1989              	L0000F7B1:     # Next: 0000f7bd                 # # WORD: :
 1990              	               # XT: 00000775                   # Flags: 0
 1991              	               # Len: 1909                      #  01 3a
 1992              	L0000F7BD:     # Next: 0000f7d3                 # # WORD: CREATE-NAME
 1993              	               # XT: 00000729                   # Flags: 0
 1994              	               # Len: 1833                      #  0b 43 52 45 41 54 45 2d 4e 41 4d 45
 1995              	L0000F7D3:     # Next: 0000f7e1                 # # WORD: >IN
 1996              	               # XT: 00000719                   # Flags: 0
 1997              	               # Len: 1817                      #  03 3e 49 4e
 1998              	L0000F7E1:     # Next: 0000f7f6                 # # WORD: is-number?
 1999              	               # XT: 0000069e                   # Flags: 0
 2000              	               # Len: 1694                      #  0a 69 73 2d 6e 75 6d 62 65 72 3f
 2001              	L0000F7F6:     # Next: 0000f80d                 # # WORD: is-num-char?
 2002              	               # XT: 0000064b                   # Flags: 0
 2003              	               # Len: 1611                      #  0c 69 73 2d 6e 75 6d 2d 63 68 61 72 3f
 2004              	L0000F80D:     # Next: 0000f823                 # # WORD: define-word
 2005              	               # XT: 00000606                   # Flags: 0
 2006              	               # Len: 1542                      #  0b 64 65 66 69 6e 65 2d 77 6f 72 64
 2007              	L0000F823:     # Next: 0000f837                 # # WORD: find-word
 2008              	               # XT: 000005c4                   # Flags: 0
 2009              	               # Len: 1476                      #  09 66 69 6e 64 2d 77 6f 72 64
 2010              	L0000F837:     # Next: 0000f84d                 # # WORD: FLAG_INLINE
 2011              	               # XT: 000005bc                   # Flags: 2
 2012              	               # Len: 1468                      #  0b 46 4c 41 47 5f 49 4e 4c 49 4e 45
 2013              	L0000F84D:     # Next: 0000f866                 # # WORD: FLAG_IMMEDIATE
 2014              	               # XT: 000005b4                   # Flags: 2
 2015              	               # Len: 1460                      #  0e 46 4c 41 47 5f 49 4d 4d 45 44 49 41 54 45
GAS LISTING fasm.s 			page 51


 2016              	L0000F866:     # Next: 0000f87a                 # # WORD: DICT>NAME
 2017              	               # XT: 000005a5                   # Flags: 2
 2018              	               # Len: 1445                      #  09 44 49 43 54 3e 4e 41 4d 45
 2019              	L0000F87A:     # Next: 0000f88f                 # # WORD: DICT>FLAGS
 2020              	               # XT: 00000599                   # Flags: 2
 2021              	               # Len: 1433                      #  0a 44 49 43 54 3e 46 4c 41 47 53
 2022              	L0000F88F:     # Next: 0000f8a1                 # # WORD: DICT>XT
 2023              	               # XT: 00000590                   # Flags: 2
 2024              	               # Len: 1424                      #  07 44 49 43 54 3e 58 54
 2025              	L0000F8A1:     # Next: 0000f8b5                 # # WORD: DICT>NEXT
 2026              	               # XT: 0000058a                   # Flags: 2
 2027              	               # Len: 1418                      #  09 44 49 43 54 3e 4e 45 58 54
 2028              	L0000F8B5:     # Next: 0000f8c8                 # # WORD: get-word
 2029              	               # XT: 00000549                   # Flags: 0
 2030              	               # Len: 1353                      #  08 67 65 74 2d 77 6f 72 64
 2031              	L0000F8C8:     # Next: 0000f8da                 # # WORD: skip-ws
 2032              	               # XT: 00000525                   # Flags: 0
 2033              	               # Len: 1317                      #  07 73 6b 69 70 2d 77 73
 2034              	L0000F8DA:     # Next: 0000f8ed                 # # WORD: get-line
 2035              	               # XT: 00000505                   # Flags: 0
 2036              	               # Len: 1285                      #  08 67 65 74 2d 6c 69 6e 65
 2037              	L0000F8ED:     # Next: 0000f904                 # # WORD: file-getLine
 2038              	               # XT: 000004be                   # Flags: 0
 2039              	               # Len: 1214                      #  0c 66 69 6c 65 2d 67 65 74 4c 69 6e 65
 2040              	L0000F904:     # Next: 0000f91c                 # # WORD: stdin-getline
 2041              	               # XT: 00000432                   # Flags: 0
 2042              	               # Len: 1074                      #  0d 73 74 64 69 6e 2d 67 65 74 6c 69 6e 65
 2043              	L0000F91C:     # Next: 0000f92e                 # # WORD: BETWEEN
 2044              	               # XT: 0000041a                   # Flags: 0
 2045              	               # Len: 1050                      #  07 42 45 54 57 45 45 4e
 2046              	L0000F92E:     # Next: 0000f944                 # # WORD: string-popc
 2047              	               # XT: 000003f7                   # Flags: 0
 2048              	               # Len: 1015                      #  0b 73 74 72 69 6e 67 2d 70 6f 70 63
 2049              	L0000F944:     # Next: 0000f95a                 # # WORD: string-copy
 2050              	               # XT: 000003c3                   # Flags: 0
 2051              	               # Len: 963                       #  0b 73 74 72 69 6e 67 2d 63 6f 70 79
 2052              	L0000F95A:     # Next: 0000f970                 # # WORD: string-catc
 2053              	               # XT: 000003ad                   # Flags: 0
 2054              	               # Len: 941                       #  0b 73 74 72 69 6e 67 2d 63 61 74 63
 2055              	L0000F970:     # Next: 0000f98a                 # # WORD: string-nullterm
 2056              	               # XT: 0000039d                   # Flags: 0
 2057              	               # Len: 925                       #  0f 73 74 72 69 6e 67 2d 6e 75 6c 6c 74 65 72 6d
 2058              	L0000F98A:     # Next: 0000f998                 # # WORD: PAD
 2059              	               # XT: 0000038e                   # Flags: 0
 2060              	               # Len: 910                       #  03 50 41 44
 2061              	L0000F998:     # Next: 0000f9ab                 # # WORD: INPUT-FP
 2062              	               # XT: 0000037e                   # Flags: 0
 2063              	               # Len: 894                       #  08 49 4e 50 55 54 2d 46 50
 2064              	L0000F9AB:     # Next: 0000f9b8                 # # WORD: CR
 2065              	               # XT: 00000372                   # Flags: 0
 2066              	               # Len: 882                       #  02 43 52
 2067              	L0000F9B8:     # Next: 0000f9c7                 # # WORD: TYPE
 2068              	               # XT: 00000350                   # Flags: 0
 2069              	               # Len: 848                       #  04 54 59 50 45
 2070              	L0000F9C7:     # Next: 0000f9d7                 # # WORD: COUNT
 2071              	               # XT: 00000344                   # Flags: 0
 2072              	               # Len: 836                       #  05 43 4f 55 4e 54
GAS LISTING fasm.s 			page 52


 2073              	L0000F9D7:     # Next: 0000f9e7                 # # WORD: LEAVE
 2074              	               # XT: 0000032f                   # Flags: 1
 2075              	               # Len: 815                       #  05 4c 45 41 56 45
 2076              	L0000F9E7:     # Next: 0000f9f7                 # # WORD: UNTIL
 2077              	               # XT: 00000315                   # Flags: 1
 2078              	               # Len: 789                       #  05 55 4e 54 49 4c
 2079              	L0000F9F7:     # Next: 0000fa07                 # # WORD: WHILE
 2080              	               # XT: 000002fb                   # Flags: 1
 2081              	               # Len: 763                       #  05 57 48 49 4c 45
 2082              	L0000FA07:     # Next: 0000fa17                 # # WORD: AGAIN
 2083              	               # XT: 000002e1                   # Flags: 1
 2084              	               # Len: 737                       #  05 41 47 41 49 4e
 2085              	L0000FA17:     # Next: 0000fa27                 # # WORD: BEGIN
 2086              	               # XT: 000002ce                   # Flags: 1
 2087              	               # Len: 718                       #  05 42 45 47 49 4e
 2088              	L0000FA27:     # Next: 0000fa36                 # # WORD: THEN
 2089              	               # XT: 000002b9                   # Flags: 1
 2090              	               # Len: 697                       #  04 54 48 45 4e
 2091              	L0000FA36:     # Next: 0000fa45                 # # WORD: ELSE
 2092              	               # XT: 00000294                   # Flags: 1
 2093              	               # Len: 660                       #  04 45 4c 53 45
 2094              	L0000FA45:     # Next: 0000fa52                 # # WORD: IF
 2095              	               # XT: 00000275                   # Flags: 1
 2096              	               # Len: 629                       #  02 49 46
 2097              	L0000FA52:     # Next: 0000fa67                 # # WORD: ?COMPILING
 2098              	               # XT: 0000026c                   # Flags: 0
 2099              	               # Len: 620                       #  0a 3f 43 4f 4d 50 49 4c 49 4e 47
 2100              	L0000FA67:     # Next: 0000fa76                 # # WORD: HERE
 2101              	               # XT: 00000263                   # Flags: 2
 2102              	               # Len: 611                       #  04 48 45 52 45
 2103              	L0000FA76:     # Next: 0000fa85                 # # WORD: LAST
 2104              	               # XT: 0000025a                   # Flags: 2
 2105              	               # Len: 602                       #  04 4c 41 53 54
 2106              	L0000FA85:     # Next: 0000fa95                 # # WORD: CELLS
 2107              	               # XT: 00000251                   # Flags: 2
 2108              	               # Len: 593                       #  05 43 45 4c 4c 53
 2109              	L0000FA95:     # Next: 0000faa9                 # # WORD: IMMEDIATE
 2110              	               # XT: 0000023b                   # Flags: 0
 2111              	               # Len: 571                       #  09 49 4d 4d 45 44 49 41 54 45
 2112              	L0000FAA9:     # Next: 0000faba                 # # WORD: INLINE
 2113              	               # XT: 00000225                   # Flags: 0
 2114              	               # Len: 549                       #  06 49 4e 4c 49 4e 45
 2115              	L0000FABA:     # Next: 0000fac7                 # # WORD: R@
 2116              	               # XT: 0000021c                   # Flags: 2
 2117              	               # Len: 540                       #  02 52 40
 2118              	L0000FAC7:     # Next: 0000fad5                 # # WORD: BYE
 2119              	               # XT: 00000215                   # Flags: 2
 2120              	               # Len: 533                       #  03 42 59 45
 2121              	L0000FAD5:     # Next: 0000fae5                 # # WORD: RESET
 2122              	               # XT: 0000020e                   # Flags: 2
 2123              	               # Len: 526                       #  05 52 45 53 45 54
 2124              	L0000FAE5:     # Next: 0000faf5                 # # WORD: BREAK
 2125              	               # XT: 00000207                   # Flags: 2
 2126              	               # Len: 519                       #  05 42 52 45 41 4b
 2127              	L0000FAF5:     # Next: 0000fb05                 # # WORD: USPOP
 2128              	               # XT: 00000200                   # Flags: 2
 2129              	               # Len: 512                       #  05 55 53 50 4f 50
GAS LISTING fasm.s 			page 53


 2130              	L0000FB05:     # Next: 0000fb16                 # # WORD: USPUSH
 2131              	               # XT: 000001f9                   # Flags: 2
 2132              	               # Len: 505                       #  06 55 53 50 55 53 48
 2133              	L0000FB16:     # Next: 0000fb27                 # # WORD: USINIT
 2134              	               # XT: 000001f2                   # Flags: 2
 2135              	               # Len: 498                       #  06 55 53 49 4e 49 54
 2136              	L0000FB27:     # Next: 0000fb3a                 # # WORD: COMPAREI
 2137              	               # XT: 000001eb                   # Flags: 2
 2138              	               # Len: 491                       #  08 43 4f 4d 50 41 52 45 49
 2139              	L0000FB3A:     # Next: 0000fb4a                 # # WORD: GETCH
 2140              	               # XT: 000001e4                   # Flags: 2
 2141              	               # Len: 484                       #  05 47 45 54 43 48
 2142              	L0000FB4A:     # Next: 0000fb5a                 # # WORD: DEPTH
 2143              	               # XT: 000001dd                   # Flags: 2
 2144              	               # Len: 477                       #  05 44 45 50 54 48
 2145              	L0000FB5A:     # Next: 0000fb69                 # # WORD: PICK
 2146              	               # XT: 000001d6                   # Flags: 2
 2147              	               # Len: 470                       #  04 50 49 43 4b
 2148              	L0000FB69:     # Next: 0000fb77                 # # WORD: AND
 2149              	               # XT: 000001cf                   # Flags: 2
 2150              	               # Len: 463                       #  03 41 4e 44
 2151              	L0000FB77:     # Next: 0000fb8a                 # # WORD: LOGLEVEL
 2152              	               # XT: 000001c8                   # Flags: 2
 2153              	               # Len: 456                       #  08 4c 4f 47 4c 45 56 45 4c
 2154              	L0000FB8A:     # Next: 0000fb97                 # # WORD: R>
 2155              	               # XT: 000001c1                   # Flags: 2
 2156              	               # Len: 449                       #  02 52 3e
 2157              	L0000FB97:     # Next: 0000fba4                 # # WORD: >R
 2158              	               # XT: 000001ba                   # Flags: 2
 2159              	               # Len: 442                       #  02 3e 52
 2160              	L0000FBA4:     # Next: 0000fbb5                 # # WORD: FCLOSE
 2161              	               # XT: 000001b3                   # Flags: 2
 2162              	               # Len: 435                       #  06 46 43 4c 4f 53 45
 2163              	L0000FBB5:     # Next: 0000fbc6                 # # WORD: FWRITE
 2164              	               # XT: 000001ac                   # Flags: 2
 2165              	               # Len: 428                       #  06 46 57 52 49 54 45
 2166              	L0000FBC6:     # Next: 0000fbda                 # # WORD: FREADLINE
 2167              	               # XT: 000001a5                   # Flags: 2
 2168              	               # Len: 421                       #  09 46 52 45 41 44 4c 49 4e 45
 2169              	L0000FBDA:     # Next: 0000fbea                 # # WORD: FREAD
 2170              	               # XT: 0000019e                   # Flags: 2
 2171              	               # Len: 414                       #  05 46 52 45 41 44
 2172              	L0000FBEA:     # Next: 0000fbfa                 # # WORD: FOPEN
 2173              	               # XT: 00000197                   # Flags: 2
 2174              	               # Len: 407                       #  05 46 4f 50 45 4e
 2175              	L0000FBFA:     # Next: 0000fc0c                 # # WORD: COMPARE
 2176              	               # XT: 00000190                   # Flags: 2
 2177              	               # Len: 400                       #  07 43 4f 4d 50 41 52 45
 2178              	L0000FC0C:     # Next: 0000fc1b                 # # WORD: OVER
 2179              	               # XT: 00000189                   # Flags: 2
 2180              	               # Len: 393                       #  04 4f 56 45 52
 2181              	L0000FC1B:     # Next: 0000fc2a                 # # WORD: EMIT
 2182              	               # XT: 00000182                   # Flags: 2
 2183              	               # Len: 386                       #  04 45 4d 49 54
 2184              	L0000FC2A:     # Next: 0000fc3a                 # # WORD: DICTP
 2185              	               # XT: 00000175                   # Flags: 2
 2186              	               # Len: 373                       #  05 44 49 43 54 50
GAS LISTING fasm.s 			page 54


 2187              	L0000FC3A:     # Next: 0000fc46                 # # WORD: >
 2188              	               # XT: 0000016e                   # Flags: 2
 2189              	               # Len: 366                       #  01 3e
 2190              	L0000FC46:     # Next: 0000fc52                 # # WORD: =
 2191              	               # XT: 00000167                   # Flags: 2
 2192              	               # Len: 359                       #  01 3d
 2193              	L0000FC52:     # Next: 0000fc5e                 # # WORD: <
 2194              	               # XT: 00000160                   # Flags: 2
 2195              	               # Len: 352                       #  01 3c
 2196              	L0000FC5E:     # Next: 0000fc6a                 # # WORD: /
 2197              	               # XT: 00000159                   # Flags: 2
 2198              	               # Len: 345                       #  01 2f
 2199              	L0000FC6A:     # Next: 0000fc76                 # # WORD: *
 2200              	               # XT: 00000152                   # Flags: 2
 2201              	               # Len: 338                       #  01 2a
 2202              	L0000FC76:     # Next: 0000fc82                 # # WORD: -
 2203              	               # XT: 0000014b                   # Flags: 2
 2204              	               # Len: 331                       #  01 2d
 2205              	L0000FC82:     # Next: 0000fc8e                 # # WORD: +
 2206              	               # XT: 00000144                   # Flags: 2
 2207              	               # Len: 324                       #  01 2b
 2208              	L0000FC8E:     # Next: 0000fc9b                 # # WORD: C!
 2209              	               # XT: 0000013d                   # Flags: 2
 2210              	               # Len: 317                       #  02 43 21
 2211              	L0000FC9B:     # Next: 0000fca8                 # # WORD: C@
 2212              	               # XT: 00000136                   # Flags: 2
 2213              	               # Len: 310                       #  02 43 40
 2214              	L0000FCA8:     # Next: 0000fcbb                 # # WORD: CLITERAL
 2215              	               # XT: 00000129                   # Flags: 2
 2216              	               # Len: 297                       #  08 43 4c 49 54 45 52 41 4c
 2217              	L0000FCBB:     # Next: 0000fcc8                 # # WORD: OR
 2218              	               # XT: 00000122                   # Flags: 2
 2219              	               # Len: 290                       #  02 4f 52
 2220              	L0000FCC8:     # Next: 0000fcd6                 # # WORD: RET
 2221              	               # XT: 00000115                   # Flags: 0
 2222              	               # Len: 277                       #  03 52 45 54
 2223              	L0000FCD6:     # Next: 0000fce5                 # # WORD: CALL
 2224              	               # XT: 00000108                   # Flags: 0
 2225              	               # Len: 264                       #  04 43 41 4c 4c
 2226              	L0000FCE5:     # Next: 0000fcf5                 # # WORD: JMPNZ
 2227              	               # XT: 000000fb                   # Flags: 0
 2228              	               # Len: 251                       #  05 4a 4d 50 4e 5a
 2229              	L0000FCF5:     # Next: 0000fd04                 # # WORD: JMPZ
 2230              	               # XT: 000000ee                   # Flags: 0
 2231              	               # Len: 238                       #  04 4a 4d 50 5a
 2232              	L0000FD04:     # Next: 0000fd12                 # # WORD: JMP
 2233              	               # XT: 000000e1                   # Flags: 0
 2234              	               # Len: 225                       #  03 4a 4d 50
 2235              	L0000FD12:     # Next: 0000fd25                 # # WORD: SLITERAL
 2236              	               # XT: 000000d4                   # Flags: 0
 2237              	               # Len: 212                       #  08 53 4c 49 54 45 52 41 4c
 2238              	L0000FD25:     # Next: 0000fd33                 # # WORD: DUP
 2239              	               # XT: 000000cd                   # Flags: 2
 2240              	               # Len: 205                       #  03 44 55 50
 2241              	L0000FD33:     # Next: 0000fd42                 # # WORD: DROP
 2242              	               # XT: 000000c6                   # Flags: 2
 2243              	               # Len: 198                       #  04 44 52 4f 50
GAS LISTING fasm.s 			page 55


 2244              	L0000FD42:     # Next: 0000fd51                 # # WORD: SWAP
 2245              	               # XT: 000000bf                   # Flags: 2
 2246              	               # Len: 191                       #  04 53 57 41 50
 2247              	L0000FD51:     # Next: 0000fd5d                 # # WORD: !
 2248              	               # XT: 000000b8                   # Flags: 2
 2249              	               # Len: 184                       #  01 21
 2250              	L0000FD5D:     # Next: 0000fd69                 # # WORD: @
 2251              	               # XT: 000000b1                   # Flags: 2
 2252              	               # Len: 177                       #  01 40
 2253              	L0000FD69:     # Next: 0000fd7b                 # # WORD: LITERAL
 2254              	               # XT: 000000a4                   # Flags: 0
 2255              	               # Len: 164                       #  07 4c 49 54 45 52 41 4c
 2256              	L0000FD7B:     # Next: 0000fd87                 # # WORD: ]
 2257              	               # XT: 00000099                   # Flags: 1
 2258              	               # Len: 153                       #  01 5d
 2259              	L0000FD87:     # Next: 0000fd93                 # # WORD: [
 2260              	               # XT: 0000008e                   # Flags: 1
 2261              	               # Len: 142                       #  01 5b
 2262              	L0000FD93:     # Next: 0000fd9f                 # # WORD: ,
 2263              	               # XT: 0000007b                   # Flags: 0
 2264              	               # Len: 123                       #  01 2c
 2265              	L0000FD9F:     # Next: 0000fdac                 # # WORD: C,
 2266              	               # XT: 00000068                   # Flags: 0
 2267              	               # Len: 104                       #  02 43 2c
 2268              	L0000FDAC:     # Next: 0000fdbc                 # # WORD: STATE
 2269              	               # XT: 00000060                   # Flags: 2
 2270              	               # Len: 96                        #  05 53 54 41 54 45
 2271              	L0000FDBC:     # Next: 0000fdcb                 # # WORD: BASE
 2272              	               # XT: 00000058                   # Flags: 2
 2273              	               # Len: 88                        #  04 42 41 53 45
 2274              	L0000FDCB:     # Next: 0000fdda                 # # WORD: CELL
 2275              	               # XT: 00000050                   # Flags: 2
 2276              	               # Len: 80                        #  04 43 45 4c 4c
 2277              	L0000FDDA:     # Next: 0000fdeb                 # # WORD: (LAST)
 2278              	               # XT: 00000048                   # Flags: 2
 2279              	               # Len: 72                        #  06 28 4c 41 53 54 29
 2280              	L0000FDEB:     # Next: 0000fdfc                 # # WORD: (HERE)
 2281              	               # XT: 00000040                   # Flags: 2
 2282              	               # Len: 64                        #  06 28 48 45 52 45 29
 2283              	L0000FDFC:                                      # End.
GAS LISTING fasm.s 			page 56


DEFINED SYMBOLS
                            *ABS*:00000000 fake
              fasm.s:49     .text:0000005a main
              fasm.s:9      .data:00000000 DSP
              fasm.s:10     .data:00000002 data_stack
              fasm.s:13     .data:00000102 RSP
              fasm.s:14     .data:00000104 return_stack
              fasm.s:17     .data:00000204 STDIN
              fasm.s:19     .data:00000208 buf
              fasm.s:25     .text:00000000 sys_init
              fasm.s:31     .text:0000001b sys_reset
              fasm.s:34     .text:00000020 main_loop
              fasm.s:153    .text:0000013b func_EMIT
              fasm.s:295    .text:00000227 func_BYE
              fasm.s:58     .text:00000068 func_PUSH_doesntwork
              fasm.s:67     .text:00000075 func_EQ
              fasm.s:75     .text:00000089 EQ_true
              fasm.s:76     .text:0000008e EQ_done
              fasm.s:80     .text:00000092 func_NEQ
              fasm.s:88     .text:000000a6 NEQ_true
              fasm.s:89     .text:000000ab NEQ_done
              fasm.s:93     .text:000000af func_LT
              fasm.s:108    .text:000000d2 func_GT
              fasm.s:117    .text:000000e9 GT_true
              fasm.s:118    .text:000000ee GT_done
              fasm.s:123    .text:000000f5 func_LTE
              fasm.s:138    .text:00000118 func_GTE
              fasm.s:147    .text:0000012f GTE_true
              fasm.s:148    .text:00000134 GTE_done
              fasm.s:170    .text:0000015d func_FETCH
              fasm.s:177    .text:00000166 func_CFETCH
              fasm.s:184    .text:00000171 func_STORE
              fasm.s:193    .text:00000180 func_CSTORE
              fasm.s:202    .text:0000018f func_DUP
              fasm.s:209    .text:00000199 func_SWAP
              fasm.s:219    .text:000001ac func_OVER
              fasm.s:230    .text:000001c2 func_ADD
              fasm.s:239    .text:000001d1 func_SUB
              fasm.s:248    .text:000001e0 func_MUL
              fasm.s:257    .text:000001ef func_DTOR
              fasm.s:276    .text:0000020b func_RTOD

UNDEFINED SYMBOLS
_GetStdHandle@4
_WriteConsoleA@20
_ExitProcess@4
