GAS LISTING fasm.s 			page 1


   1              	               .global main
   2              	
   3              	               .data
   4              	               .align 2
   5              	
   6 0000 0000     	DSP:           .word 0
   7              	data_stack:
   8 0002 00000000 	.skip 256
   8      00000000 
   8      00000000 
   8      00000000 
   8      00000000 
   9              	
  10 0102 0000     	RSP:           .word 0
  11              	return_stack:
  12 0104 00000000 	.skip 256
  12      00000000 
  12      00000000 
  12      00000000 
  12      00000000 
  13              	
  14              	buf:
  15 0204 00000000 	.skip 256
  15      00000000 
  15      00000000 
  15      00000000 
  15      00000000 
  16              	
  17 0304 00000000 	stdin:          .int 0
  18              	
  19              	               .text
  20              	
  21              	main_loop:
  22 0000 C3       	              ret
  23              	main:
  24 0001 C7050000 	               movl $data_stack, DSP
  24      00000200 
  24      0000
  25 000b C7050201 	               movl $return_stack, RSP
  25      00000401 
  25      0000
  26 0015 8B2D0000 	               movl DSP, %ebp
  26      0000
  27              	
  28              	               /* handle = GetStdHandle(-11) */
  29 001b 6AF5     	               pushl   $-11
  30 001d E8000000 	               call    _GetStdHandle@4
  30      00
  31 0022 A3040300 	               mov     %eax, stdin
  31      00
  32              	               
  33 0027 C745002E 	               movl $46, (%ebp)
  33      000000
  34 002e 83C504   	               add $4, %ebp
  35 0031 C745006B 	               movl $107, (%ebp)
  35      000000
  36 0038 83C504   	               add $4, %ebp
GAS LISTING fasm.s 			page 2


  37 003b C745004F 	               movl $79, (%ebp)
  37      000000
  38              	
  39 0042 E8E40000 	               call func_EMIT            
  39      00
  40 0047 E8DF0000 	               call func_EMIT            
  40      00
  41 004c E8DA0000 	               call func_EMIT            
  41      00
  42              	
  43 0051 6A00     	               pushl $0
  44 0053 E8000000 	               call _ExitProcess@4
  44      00
  45              	
  46              	# -------------------------------------------------------------------------------------
  47              	func_PUSH_NOTWORKING:                                        # Implementation of PUSH
  48 0058 50       	              pushl %eax
  49 0059 8B4424F8 	              movl -8(%esp), %eax
  50 005d 83C504   	              addl $4, %ebp
  51 0060 894500   	              mov %eax, (%ebp)
  52 0063 58       	              popl %eax
  53 0064 C3       	              ret
  54              	
  55              	# -------------------------------------------------------------------------------------
  56              	func_EQ:                                        # Implementation of EQ
  57 0065 8B4500   	               movl (%ebp), %eax                # POP to %eax
  58 0068 83ED04   	               subl $4, %ebp
  59 006b 8B5D00   	               movl (%ebp), %ebx                # get TOS to %ebx
  60 006e 39D8     	               cmpl %ebx, %eax
  61 0070 7407     	               jz EQ_true
  62 0072 B8000000 	               movl $0, %eax
  62      00
  63 0077 EB05     	               jmp EQ_done
  64 0079 B8010000 	EQ_true:       movl $1, %eax
  64      00
  65 007e 894500   	EQ_done:       movl %eax, (%ebp)                # set TOS from %eax
  66 0081 C3       	               ret
  67              	               
  68              	# -------------------------------------------------------------------------------------
  69              	func_NEQ:                                       # Implementation of NEQ
  70 0082 8B4500   	               movl (%ebp), %eax                # POP to %eax
  71 0085 83ED04   	               subl $4, %ebp
  72 0088 8B5D00   	               movl (%ebp), %ebx                # get TOS to %ebx
  73 008b 39D8     	               cmpl %ebx, %eax
  74 008d 7507     	               jnz NEQ_true
  75 008f B8000000 	               movl $0, %eax
  75      00
  76 0094 EB05     	               jmp NEQ_done
  77 0096 B8010000 	NEQ_true:      movl $1, %eax
  77      00
  78 009b 894500   	NEQ_done:      movl %eax, (%ebp)                # set TOS from %eax
  79 009e C3       	               ret
  80              	               
  81              	# -------------------------------------------------------------------------------------
  82              	func_LT:                                        # Implementation of LT
  83 009f 8B4500   	               movl (%ebp), %eax                # POP to %eax
  84 00a2 83ED04   	               subl $4, %ebp
GAS LISTING fasm.s 			page 3


  85 00a5 8B5D00   	               movl (%ebp), %ebx                # POP to %ebx
  86 00a8 83ED04   	               subl $4, %ebp
  87 00ab 39D8     	               cmpl %ebx, %eax
  88 00ad 7C07     	               jl LT_true
  89 00af B8000000 	               movl $0, %eax
  89      00
  90 00b4 EB05     	               jmp LT_done
  91 00b6 B8010000 	LT_true:       movl $1, %eax
  91      00
  92 00bb 83C504   	LT_done:       addl $4, %ebp                    # PUSH %eax
  93 00be 894500   	               movl %eax, (%ebp)
  94 00c1 C3       	               ret
  95              	               
  96              	# -------------------------------------------------------------------------------------
  97              	func_GT:                                        # Implementation of GT
  98 00c2 8B4500   	               movl (%ebp), %eax                # POP to %eax
  99 00c5 83ED04   	               subl $4, %ebp
 100 00c8 8B5D00   	               movl (%ebp), %ebx                # POP to %ebx
 101 00cb 83ED04   	               subl $4, %ebp
 102 00ce 39D8     	               cmpl %ebx, %eax
 103 00d0 7F07     	               jg GT_true
 104 00d2 B8000000 	               movl $0, %eax
 104      00
 105 00d7 EB05     	               jmp GT_done
 106 00d9 B8010000 	GT_true:       movl $1, %eax
 106      00
 107 00de 83C504   	GT_done:       addl $4, %ebp                    # PUSH %eax
 108 00e1 894500   	               movl %eax, (%ebp)
 109 00e4 C3       	               ret
 110              	               
 111              	# -------------------------------------------------------------------------------------
 112              	func_LTE:                                       # Implementation of LTE
 113 00e5 8B4500   	               movl (%ebp), %eax                # POP to %eax
 114 00e8 83ED04   	               subl $4, %ebp
 115 00eb 8B5D00   	               movl (%ebp), %ebx                # POP to %ebx
 116 00ee 83ED04   	               subl $4, %ebp
 117 00f1 39D8     	               cmpl %ebx, %eax
 118 00f3 7E07     	               jle LTE_true
 119 00f5 B8000000 	               movl $0, %eax
 119      00
 120 00fa EB05     	               jmp LTE_done
 121 00fc B8010000 	LTE_true:      movl $1, %eax
 121      00
 122 0101 83C504   	LTE_done:      addl $4, %ebp                    # PUSH %eax
 123 0104 894500   	               movl %eax, (%ebp)
 124 0107 C3       	               ret
 125              	               
 126              	# -------------------------------------------------------------------------------------
 127              	func_GTE:                                       # Implementation of GTE
 128 0108 8B4500   	               movl (%ebp), %eax                # POP to %eax
 129 010b 83ED04   	               subl $4, %ebp
 130 010e 8B5D00   	               movl (%ebp), %ebx                # POP to %ebx
 131 0111 83ED04   	               subl $4, %ebp
 132 0114 39D8     	               cmpl %ebx, %eax
 133 0116 7D07     	               jge GTE_true
 134 0118 B8000000 	               movl $0, %eax
 134      00
GAS LISTING fasm.s 			page 4


 135 011d EB05     	               jmp GTE_done
 136 011f B8010000 	GTE_true:      movl $1, %eax
 136      00
 137 0124 83C504   	GTE_done:      addl $4, %ebp                    # PUSH %eax
 138 0127 894500   	               movl %eax, (%ebp)
 139 012a C3       	               ret
 140              	               
 141              	# -------------------------------------------------------------------------------------
 142              	func_EMIT:                                      # Implementation of EMIT
 143 012b 8B4500   	               movl (%ebp), %eax                # POP to %edi
 144 012e 83ED04   	               subl $4, %ebp
 145              	
 146 0131 A2040200 	               mov %al, buf
 146      00
 147              	
 148              	               /* WriteConsole(handle, &msg[0], num_chars, &written, 0) */
 149 0136 6A00     	               pushl   $0
 150 0138 6A00     	               pushl   $0
 151 013a 6A01     	               pushl   $1
 152 013c 68040200 	               pushl   $buf
 152      00
 153 0141 FF350403 	               pushl   stdin
 153      0000
 154 0147 E8000000 	               call    _WriteConsoleA@20
 154      00
 155              	
 156 014c C3       	               ret
 157              	               
 158              	# -------------------------------------------------------------------------------------
 159              	func_FETCH:                                     # Implementation of FETCH
 160 014d 8B5500   	               movl (%ebp), %edx
 161 0150 8B02     	               movl (%edx), %eax
 162 0152 894500   	               movl %eax, (%ebp)
 163 0155 C3       	               ret
 164              	               
 165              	# -------------------------------------------------------------------------------------
 166              	func_CFETCH:                                    # Implementation of CFETCH
 167 0156 8B5500   	               movl (%ebp), %edx
 168 0159 31C0     	               xor %eax, %eax
 169 015b 8A02     	               movb (%edx), %al
 170 015d 894500   	               movl %eax, (%ebp)
 171 0160 C3       	               ret
 172              	               
 173              	func_STORE:                                     # Implementation of STORE
 174 0161 8B5500   	               movl (%ebp), %edx                # POP to %edx
 175 0164 83ED04   	               subl $4, %ebp
 176 0167 8B4500   	               movl (%ebp), %eax                # POP to %eax
 177 016a 83ED04   	               subl $4, %ebp
 178 016d 8902     	               movl %eax, (%edx)
 179 016f C3       	               ret
 180              	               
 181              	# -------------------------------------------------------------------------------------
 182              	func_CSTORE:                                    # Implementation of CSTORE
 183 0170 8B5500   	               movl (%ebp), %edx                # POP to %edx
 184 0173 83ED04   	               subl $4, %ebp
 185 0176 8B4500   	               movl (%ebp), %eax                # POP to %eax
 186 0179 83ED04   	               subl $4, %ebp
GAS LISTING fasm.s 			page 5


 187 017c 8802     	               movb %al, (%edx)
 188 017e C3       	               ret
 189              	               
 190              	# -------------------------------------------------------------------------------------
 191              	func_DUP:                                       # Implementation of DUP
 192 017f 8B4500   	               movl (%ebp), %eax
 193 0182 83C504   	               addl $4, %ebp                    # PUSH %eax
 194 0185 894500   	               movl %eax, (%ebp)
 195 0188 C3       	               ret
 196              	               
 197              	# -------------------------------------------------------------------------------------
 198              	func_SWAP:                                      # Implementation of SWAP
 199 0189 8B4500   	               movl (%ebp), %eax                # POP to %eax
 200 018c 83ED04   	               subl $4, %ebp
 201 018f 8B5D00   	               movl (%ebp), %ebx
 202 0192 894500   	               movl %eax, (%ebp)
 203 0195 83C504   	               addl $4, %ebp                    # PUSH %ebx
 204 0198 895D00   	               movl %ebx, (%ebp)
 205 019b C3       	               ret
 206              	               
 207              	# -------------------------------------------------------------------------------------
 208              	func_OVER:                                      # Implementation of OVER
 209 019c 8B4500   	               movl (%ebp), %eax                # POP to %eax
 210 019f 83ED04   	               subl $4, %ebp
 211 01a2 8B5500   	               movl (%ebp), %edx
 212 01a5 83C504   	               addl $4, %ebp                    # PUSH %eax
 213 01a8 894500   	               movl %eax, (%ebp)
 214 01ab 83C504   	               addl $4, %ebp                    # PUSH %edx
 215 01ae 895500   	               movl %edx, (%ebp)
 216 01b1 C3       	               ret
 217              	               
 218              	# -------------------------------------------------------------------------------------
 219              	func_ADD:                                       # Implementation of ADD
 220 01b2 8B5D00   	               movl (%ebp), %ebx                # POP to %ebx
 221 01b5 83ED04   	               subl $4, %ebp
 222 01b8 8B4500   	               movl (%ebp), %eax
 223 01bb 01D8     	               addl %ebx, %eax
 224 01bd 894500   	               movl %eax, (%ebp)
 225 01c0 C3       	               ret
 226              	               
 227              	# -------------------------------------------------------------------------------------
 228              	func_SUB:                                       # Implementation of SUB
 229 01c1 8B5D00   	               movl (%ebp), %ebx                # POP to %ebx
 230 01c4 83ED04   	               subl $4, %ebp
 231 01c7 8B4500   	               movl (%ebp), %eax
 232 01ca 29D8     	               subl %ebx, %eax
 233 01cc 894500   	               movl %eax, (%ebp)
 234 01cf C3       	               ret
 235              	               
 236              	# -------------------------------------------------------------------------------------
 237              	func_MUL:                                       # Implementation of MUL
 238 01d0 8B5D00   	               movl (%ebp), %ebx                # POP to %ebx
 239 01d3 83ED04   	               subl $4, %ebp
 240 01d6 8B4500   	               movl (%ebp), %eax
 241 01d9 F7E3     	               mull %ebx
 242 01db 894500   	               movl %eax, (%ebp)
 243 01de C3       	               ret
GAS LISTING fasm.s 			page 6


 244              	               
 245              	# -------------------------------------------------------------------------------------
 246              	func_DTOR:                                      # Implementation of DTOR
 247 01df 8B4500   	               movl (%ebp), %eax                # POP to %eax
 248 01e2 83ED04   	               subl $4, %ebp
 249 01e5 892D0000 	               mov %ebp, DSP
 249      0000
 250 01eb 8B2D0201 	               mov RSP, %ebp
 250      0000
 251 01f1 83C504   	               addl $4, %ebp                    # PUSH %eax
 252 01f4 894500   	               movl %eax, (%ebp)
 253 01f7 892D0201 	               mov %ebp, RSP
 253      0000
 254 01fd 8B2D0000 	               mov DSP, %ebp
 254      0000
 255 0203 C3       	               ret
 256              	               
 257              	# -------------------------------------------------------------------------------------
 258              	func_RTOD:                                      # Implementation of RTOD
 259 0204 892D0000 	               mov %ebp, DSP
 259      0000
 260 020a 8B2D0201 	               mov RSP, %ebp
 260      0000
 261 0210 8B4500   	               movl (%ebp), %eax                # POP to %eax
 262 0213 83ED04   	               subl $4, %ebp
 263 0216 892D0201 	               mov %ebp, RSP
 263      0000
 264 021c 8B2D0000 	               mov DSP, %ebp
 264      0000
 265 0222 83C504   	               addl $4, %ebp                    # PUSH %eax
 266 0225 894500   	               movl %eax, (%ebp)
 267 0228 C3       	               ret
 268              	               
 269              	# -------------------------------------------------------------------------------------
 270              	
 271              	/**************************************************************************************
 272              	************************* end of file forth_inc.s *************************************
 273              	***************************************************************************************/
 274              	
 275              	L00000040:                                      # WORD (HERE) (FDEB)
 276 0229 83C504   	               addl $4, %ebp                    # PUSH $16, CLITERAL 16
 277 022c C7450010 	               movl $16, (%ebp)
 277      000000
 278 0233 C3       	               ret
 279              	L00000048:                                      # WORD (LAST) (FDDA)
 280 0234 83C504   	               addl $4, %ebp                    # PUSH $20, CLITERAL 20
 281 0237 C7450014 	               movl $20, (%ebp)
 281      000000
 282 023e C3       	               ret
 283              	L00000050:                                      # WORD CELL (FDCB)
 284 023f 83C504   	               addl $4, %ebp                    # PUSH $4, CLITERAL 4
 285 0242 C7450004 	               movl $4, (%ebp)
 285      000000
 286 0249 C3       	               ret
 287              	L00000058:                                      # WORD BASE (FDBC)
 288 024a 83C504   	               addl $4, %ebp                    # PUSH $6, CLITERAL 6
 289 024d C7450006 	               movl $6, (%ebp)
GAS LISTING fasm.s 			page 7


 289      000000
 290 0254 C3       	               ret
 291              	L00000060:                                      # WORD STATE (FDAC)
 292 0255 83C504   	               addl $4, %ebp                    # PUSH $32, CLITERAL 32
 293 0258 C7450020 	               movl $32, (%ebp)
 293      000000
 294 025f C3       	               ret
 295              	L00000068:                                      # WORD C, (FD9F)
 296 0260 83C504   	               addl $4, %ebp                    # PUSH $16, CLITERAL 16
 297 0263 C7450010 	               movl $16, (%ebp)
 297      000000
 298 026a E8DEFEFF 	               call func_FETCH
 298      FF
 299 026f E8FCFEFF 	               call func_CSTORE
 299      FF
 300 0274 83C504   	               addl $4, %ebp                    # PUSH $16, CLITERAL 16
 301 0277 C7450010 	               movl $16, (%ebp)
 301      000000
 302 027e E8CAFEFF 	               call func_FETCH
 302      FF
 303 0283 83C504   	               addl $4, %ebp                    # PUSH $1, CLITERAL 1
 304 0286 C7450001 	               movl $1, (%ebp)
 304      000000
 305 028d E820FFFF 	               call func_ADD
 305      FF
 306 0292 83C504   	               addl $4, %ebp                    # PUSH $16, CLITERAL 16
 307 0295 C7450010 	               movl $16, (%ebp)
 307      000000
 308 029c E8C0FEFF 	               call func_STORE
 308      FF
 309 02a1 C3       	               ret
 310              	L0000007B:                                      # WORD , (FD93)
 311 02a2 83C504   	               addl $4, %ebp                    # PUSH $16, CLITERAL 16
 312 02a5 C7450010 	               movl $16, (%ebp)
 312      000000
 313 02ac E89CFEFF 	               call func_FETCH
 313      FF
 314 02b1 E8ABFEFF 	               call func_STORE
 314      FF
 315 02b6 83C504   	               addl $4, %ebp                    # PUSH $16, CLITERAL 16
 316 02b9 C7450010 	               movl $16, (%ebp)
 316      000000
 317 02c0 E888FEFF 	               call func_FETCH
 317      FF
 318 02c5 83C504   	               addl $4, %ebp                    # PUSH $4, CLITERAL 4
 319 02c8 C7450004 	               movl $4, (%ebp)
 319      000000
 320 02cf E8DEFEFF 	               call func_ADD
 320      FF
 321 02d4 83C504   	               addl $4, %ebp                    # PUSH $16, CLITERAL 16
 322 02d7 C7450010 	               movl $16, (%ebp)
 322      000000
 323 02de E87EFEFF 	               call func_STORE
 323      FF
 324 02e3 C3       	               ret
 325              	L0000008E:                                      # WORD [ (FD87)
 326 02e4 83C504   	               addl $4, %ebp                    # PUSH $0, CLITERAL 0
GAS LISTING fasm.s 			page 8


 327 02e7 C7450000 	               movl $0, (%ebp)
 327      000000
 328 02ee 83C504   	               addl $4, %ebp                    # PUSH $32, CLITERAL 32
 329 02f1 C7450020 	               movl $32, (%ebp)
 329      000000
 330 02f8 E864FEFF 	               call func_STORE
 330      FF
 331 02fd C3       	               ret
 332              	L00000099:                                      # WORD ] (FD7B)
 333 02fe 83C504   	               addl $4, %ebp                    # PUSH $1, CLITERAL 1
 334 0301 C7450001 	               movl $1, (%ebp)
 334      000000
 335 0308 83C504   	               addl $4, %ebp                    # PUSH $32, CLITERAL 32
 336 030b C7450020 	               movl $32, (%ebp)
 336      000000
 337 0312 E84AFEFF 	               call func_STORE
 337      FF
 338 0317 C3       	               ret
 339              	L000000A4:                                      # WORD LITERAL (FD69)
 340 0318 83C504   	               addl $4, %ebp                    # PUSH $1, CLITERAL 1
 341 031b C7450001 	               movl $1, (%ebp)
 341      000000
 342 0322 E839FFFF 	               call L00000068
 342      FF
 343 0327 C3       	               ret
 344              	L000000B1:                                      # WORD @ (FD5D)
 345 0328 E820FEFF 	               call func_FETCH
 345      FF
 346 032d C3       	               ret
 347              	L000000B8:                                      # WORD ! (FD51)
 348 032e E82EFEFF 	               call func_STORE
 348      FF
 349 0333 C3       	               ret
 350              	L000000BF:                                      # WORD SWAP (FD42)
 351 0334 E850FEFF 	               call func_SWAP
 351      FF
 352 0339 C3       	               ret
 353              	L000000C6:                                      # WORD DROP (FD33)
 354 033a 83ED04   	               subl $4, %ebp                    # DROP
 355 033d C3       	               ret
 356              	L000000CD:                                      # WORD DUP (FD25)
 357 033e E83CFEFF 	               call func_DUP
 357      FF
 358 0343 C3       	               ret
 359              	L000000D4:                                      # WORD SLITERAL (FD12)
 360 0344 83C504   	               addl $4, %ebp                    # PUSH $7, CLITERAL 7
 361 0347 C7450007 	               movl $7, (%ebp)
 361      000000
 362 034e E80DFFFF 	               call L00000068
 362      FF
 363 0353 C3       	               ret
 364              	L000000E1:                                      # WORD JMP (FD04)
 365 0354 83C504   	               addl $4, %ebp                    # PUSH $8, CLITERAL 8
 366 0357 C7450008 	               movl $8, (%ebp)
 366      000000
 367 035e E8FDFEFF 	               call L00000068
 367      FF
GAS LISTING fasm.s 			page 9


 368 0363 C3       	               ret
 369              	L000000EE:                                      # WORD JMPZ (FCF5)
 370 0364 83C504   	               addl $4, %ebp                    # PUSH $9, CLITERAL 9
 371 0367 C7450009 	               movl $9, (%ebp)
 371      000000
 372 036e E8EDFEFF 	               call L00000068
 372      FF
 373 0373 C3       	               ret
 374              	L000000FB:                                      # WORD JMPNZ (FCE5)
 375 0374 83C504   	               addl $4, %ebp                    # PUSH $10, CLITERAL 10
 376 0377 C745000A 	               movl $10, (%ebp)
 376      000000
 377 037e E8DDFEFF 	               call L00000068
 377      FF
 378 0383 C3       	               ret
 379              	L00000108:                                      # WORD CALL (FCD6)
 380 0384 83C504   	               addl $4, %ebp                    # PUSH $11, CLITERAL 11
 381 0387 C745000B 	               movl $11, (%ebp)
 381      000000
 382 038e E8CDFEFF 	               call L00000068
 382      FF
 383 0393 C3       	               ret
 384              	L00000115:                                      # WORD RET (FCC8)
 385 0394 83C504   	               addl $4, %ebp                    # PUSH $12, CLITERAL 12
 386 0397 C745000C 	               movl $12, (%ebp)
 386      000000
 387 039e E8BDFEFF 	               call L00000068
 387      FF
 388 03a3 C3       	               ret
 389              	L00000122:                                      # WORD OR (FCBB)
 390              	                                                # OR (TODO)
 391 03a4 C3       	               ret
 392              	L00000129:                                      # WORD CLITERAL (FCA8)
 393 03a5 83C504   	               addl $4, %ebp                    # PUSH $14, CLITERAL 14
 394 03a8 C745000E 	               movl $14, (%ebp)
 394      000000
 395 03af E8ACFEFF 	               call L00000068
 395      FF
 396 03b4 C3       	               ret
 397              	L00000136:                                      # WORD C@ (FC9B)
 398 03b5 E89CFDFF 	               call func_CFETCH
 398      FF
 399 03ba C3       	               ret
 400              	L0000013D:                                      # WORD C! (FC8E)
 401 03bb E8B0FDFF 	               call func_CSTORE
 401      FF
 402 03c0 C3       	               ret
 403              	L00000144:                                      # WORD + (FC82)
 404 03c1 E8ECFDFF 	               call func_ADD
 404      FF
 405 03c6 C3       	               ret
 406              	L0000014B:                                      # WORD - (FC76)
 407 03c7 E8F5FDFF 	               call func_SUB
 407      FF
 408 03cc C3       	               ret
 409              	L00000152:                                      # WORD * (FC6A)
 410 03cd E8FEFDFF 	               call func_MUL
GAS LISTING fasm.s 			page 10


 410      FF
 411 03d2 C3       	               ret
 412              	L00000159:                                      # WORD / (FC5E)
 413 03d3 8B5D00   	               movl (%ebp), %ebx                # POP to %ebx, ADD
 414 03d6 83ED04   	               subl $4, %ebp
 415 03d9 8B4500   	               movl (%ebp), %eax                # POP to %eax
 416 03dc 83ED04   	               subl $4, %ebp
 417 03df F7F3     	               divl %ebx
 418 03e1 83C504   	               addl $4, %ebp                    # PUSH %eax
 419 03e4 894500   	               movl %eax, (%ebp)
 420 03e7 C3       	               ret
 421              	L00000160:                                      # WORD < (FC52)
 422 03e8 E8B2FCFF 	               call func_LT                     # LT
 422      FF
 423 03ed C3       	               ret
 424              	L00000167:                                      # WORD = (FC46)
 425 03ee E872FCFF 	               call func_EQ                     # EQ
 425      FF
 426 03f3 C3       	               ret
 427              	L0000016E:                                      # WORD > (FC3A)
 428 03f4 E8C9FCFF 	               call func_GT                     # GT
 428      FF
 429 03f9 C3       	               ret
 430              	L00000175:                                      # WORD DICTP (FC2A)
 431 03fa 83C504   	               addl $4, %ebp                    # PUSH $24, CLITERAL 24
 432 03fd C7450018 	               movl $24, (%ebp)
 432      000000
 433 0404 E857FEFF 	               call L00000068
 433      FF
 434 0409 C3       	               ret
 435              	L00000182:                                      # WORD EMIT (FC1B)
 436 040a E81CFDFF 	               call func_EMIT                   # EMIT
 436      FF
 437 040f C3       	               ret
 438              	L00000189:                                      # WORD OVER (FC0C)
 439 0410 E887FDFF 	               call func_OVER
 439      FF
 440 0415 C3       	               ret
 441              	L00000190:                                      # WORD COMPARE (FBFA)
 442 0416 8B4500   	               movl (%ebp), %eax                # POP to %eax
 443 0419 83ED04   	               subl $4, %ebp
 444 041c 8B5D00   	               movl (%ebp), %ebx                # POP to %ebx
 445 041f 83ED04   	               subl $4, %ebp
 446              	               # COMPARE %eax, %ebx
 447 0422 83C504   	               addl $4, %ebp                    # PUSH %ebx
 448 0425 895D00   	               movl %ebx, (%ebp)
 449 0428 C3       	               ret
 450              	L00000197:                                      # WORD FOPEN (FBEA)
 451              	                                                # FOPEN (TODO)
 452 0429 C3       	               ret
 453              	L0000019E:                                      # WORD FREAD (FBDA)
 454              	                                                # FREAD (TODO)
 455 042a C3       	               ret
 456              	L000001A5:                                      # WORD FREADLINE (FBC6)
 457              	                                                # FREADLINE (TODO)
 458 042b C3       	               ret
 459              	L000001AC:                                      # WORD FWRITE (FBB5)
GAS LISTING fasm.s 			page 11


 460              	                                                # FWRITE (TODO)
 461 042c C3       	               ret
 462              	L000001B3:                                      # WORD FCLOSE (FBA4)
 463              	                                                # FCLOSE (TODO)
 464 042d C3       	               ret
 465              	L000001BA:                                      # WORD >R (FB97)
 466 042e E8ACFDFF 	               call func_DTOR                   # DTOR
 466      FF
 467 0433 C3       	               ret
 468              	L000001C1:                                      # WORD R> (FB8A)
 469 0434 E8CBFDFF 	               call func_RTOD                   # RTOD
 469      FF
 470 0439 C3       	               ret
 471              	L000001C8:                                      # WORD LOGLEVEL (FB77)
 472              	               # LOGLEVEL
 473 043a C3       	               ret
 474              	L000001CF:                                      # WORD AND (FB69)
 475              	                                                # AND (TODO)
 476 043b C3       	               ret
 477              	L000001D6:                                      # WORD PICK (FB5A)
 478              	               # PICK
 479 043c C3       	               ret
 480              	L000001DD:                                      # WORD DEPTH (FB4A)
 481              	                                                # DEPTH (TODO)
 482 043d C3       	               ret
 483              	L000001E4:                                      # WORD GETCH (FB3A)
 484              	                                                # GETCH (TODO)
 485 043e C3       	               ret
 486              	L000001EB:                                      # WORD COMPAREI (FB27)
 487 043f 8B4500   	               movl (%ebp), %eax                # POP to %eax
 488 0442 83ED04   	               subl $4, %ebp
 489 0445 8B5D00   	               movl (%ebp), %ebx                # POP to %ebx
 490 0448 83ED04   	               subl $4, %ebp
 491              	               # COMPAREI %eax, %ebx
 492 044b 83C504   	               addl $4, %ebp                    # PUSH %ebx
 493 044e 895D00   	               movl %ebx, (%ebp)
 494 0451 C3       	               ret
 495              	L000001F2:                                      # WORD USINIT (FB16)
 496              	                                                # USINIT (TODO)
 497 0452 C3       	               ret
 498              	L000001F9:                                      # WORD USPUSH (FB05)
 499              	                                                # USPUSH (TODO)
 500 0453 C3       	               ret
 501              	L00000200:                                      # WORD USPOP (FAF5)
 502              	                                                # USPOP (TODO)
 503 0454 C3       	               ret
 504              	L00000207:                                      # WORD BREAK (FAE5)
 505              	                                                # BREAK (TODO)
 506 0455 C3       	               ret
 507              	L0000020E:                                      # WORD RESET (FAD5)
 508              	                                                # RESET (TODO)
 509 0456 C3       	               ret
 510              	L00000215:                                      # WORD BYE (FAC7)
 511              	                                                # BYE (TODO)
 512 0457 C3       	               ret
 513              	L0000021C:                                      # WORD R@ (FABA)
 514 0458 E8A7FDFF 	               call func_RTOD                   # RTOD
GAS LISTING fasm.s 			page 12


 514      FF
 515 045d E81DFDFF 	               call func_DUP
 515      FF
 516 0462 E878FDFF 	               call func_DTOR                   # DTOR
 516      FF
 517 0467 C3       	               ret
 518              	L00000225:                                      # WORD INLINE (FAA9)
 519 0468 83C504   	               addl $4, %ebp                    # PUSH $20, CLITERAL 20
 520 046b C7450014 	               movl $20, (%ebp)
 520      000000
 521 0472 E8D6FCFF 	               call func_FETCH
 521      FF
 522 0477 83C504   	               addl $4, %ebp                    # PUSH $2, CLITERAL 2
 523 047a C7450002 	               movl $2, (%ebp)
 523      000000
 524 0481 83C504   	               addl $4, %ebp                    # PUSH $4, CLITERAL 4
 525 0484 C7450004 	               movl $4, (%ebp)
 525      000000
 526 048b E840FDFF 	               call func_MUL
 526      FF
 527 0490 E81DFDFF 	               call func_ADD
 527      FF
 528 0495 E8E5FCFF 	               call func_DUP
 528      FF
 529 049a E8B7FCFF 	               call func_CFETCH
 529      FF
 530 049f 83C504   	               addl $4, %ebp                    # PUSH $2, CLITERAL 2
 531 04a2 C7450002 	               movl $2, (%ebp)
 531      000000
 532              	                                                # OR (TODO)
 533 04a9 E8DBFCFF 	               call func_SWAP
 533      FF
 534 04ae E8BDFCFF 	               call func_CSTORE
 534      FF
 535 04b3 C3       	               ret
 536              	L0000023B:                                      # WORD IMMEDIATE (FA95)
 537 04b4 83C504   	               addl $4, %ebp                    # PUSH $20, CLITERAL 20
 538 04b7 C7450014 	               movl $20, (%ebp)
 538      000000
 539 04be E88AFCFF 	               call func_FETCH
 539      FF
 540 04c3 83C504   	               addl $4, %ebp                    # PUSH $2, CLITERAL 2
 541 04c6 C7450002 	               movl $2, (%ebp)
 541      000000
 542 04cd 83C504   	               addl $4, %ebp                    # PUSH $4, CLITERAL 4
 543 04d0 C7450004 	               movl $4, (%ebp)
 543      000000
 544 04d7 E8F4FCFF 	               call func_MUL
 544      FF
 545 04dc E8D1FCFF 	               call func_ADD
 545      FF
 546 04e1 E899FCFF 	               call func_DUP
 546      FF
 547 04e6 E86BFCFF 	               call func_CFETCH
 547      FF
 548 04eb 83C504   	               addl $4, %ebp                    # PUSH $1, CLITERAL 1
 549 04ee C7450001 	               movl $1, (%ebp)
GAS LISTING fasm.s 			page 13


 549      000000
 550              	                                                # OR (TODO)
 551 04f5 E88FFCFF 	               call func_SWAP
 551      FF
 552 04fa E871FCFF 	               call func_CSTORE
 552      FF
 553 04ff C3       	               ret
 554              	L00000251:                                      # WORD CELLS (FA85)
 555 0500 83C504   	               addl $4, %ebp                    # PUSH $4, CLITERAL 4
 556 0503 C7450004 	               movl $4, (%ebp)
 556      000000
 557 050a E8C1FCFF 	               call func_MUL
 557      FF
 558 050f C3       	               ret
 559              	L0000025A:                                      # WORD LAST (FA76)
 560 0510 83C504   	               addl $4, %ebp                    # PUSH $20, CLITERAL 20
 561 0513 C7450014 	               movl $20, (%ebp)
 561      000000
 562 051a E82EFCFF 	               call func_FETCH
 562      FF
 563 051f C3       	               ret
 564              	L00000263:                                      # WORD HERE (FA67)
 565 0520 83C504   	               addl $4, %ebp                    # PUSH $16, CLITERAL 16
 566 0523 C7450010 	               movl $16, (%ebp)
 566      000000
 567 052a E81EFCFF 	               call func_FETCH
 567      FF
 568 052f C3       	               ret
 569              	L0000026C:                                      # WORD ?COMPILING (FA52)
 570 0530 83C504   	               addl $4, %ebp                    # PUSH $32, CLITERAL 32
 571 0533 C7450020 	               movl $32, (%ebp)
 571      000000
 572 053a E80EFCFF 	               call func_FETCH
 572      FF
 573 053f C3       	               ret
 574              	L00000275:                                      # WORD IF (FA45)
 575 0540 E8EBFFFF 	               call L0000026C
 575      FF
 576 0545 8B4500   	               movl (%ebp), %eax                # POP to %eax, JMPZ
 577 0548 83ED04   	               subl $4, %ebp
 578 054b 39050000 	               cmp %eax, 0
 578      0000
 579 0551 7423     	               jz L00000293
 580 0553 E80CFEFF 	               call L000000EE
 580      FF
 581 0558 83C504   	               addl $4, %ebp                    # PUSH $16, CLITERAL 16
 582 055b C7450010 	               movl $16, (%ebp)
 582      000000
 583 0562 E8E6FBFF 	               call func_FETCH
 583      FF
 584 0567 83C504   	               addl $4, %ebp                    # PUSH $0, CLITERAL 0
 585 056a C7450000 	               movl $0, (%ebp)
 585      000000
 586 0571 E82CFDFF 	               call L0000007B
 586      FF
 587 0576 C3       	L00000293:     ret
 588              	L00000294:                                      # WORD ELSE (FA36)
GAS LISTING fasm.s 			page 14


 589 0577 E8B4FFFF 	               call L0000026C
 589      FF
 590 057c 8B4500   	               movl (%ebp), %eax                # POP to %eax, JMPZ
 591 057f 83ED04   	               subl $4, %ebp
 592 0582 39050000 	               cmp %eax, 0
 592      0000
 593 0588 7441     	               jz L000002B8
 594 058a E8C5FDFF 	               call L000000E1
 594      FF
 595 058f 83C504   	               addl $4, %ebp                    # PUSH $16, CLITERAL 16
 596 0592 C7450010 	               movl $16, (%ebp)
 596      000000
 597 0599 E8AFFBFF 	               call func_FETCH
 597      FF
 598 059e E8E6FBFF 	               call func_SWAP
 598      FF
 599 05a3 83C504   	               addl $4, %ebp                    # PUSH $0, CLITERAL 0
 600 05a6 C7450000 	               movl $0, (%ebp)
 600      000000
 601 05ad E8F0FCFF 	               call L0000007B
 601      FF
 602 05b2 83C504   	               addl $4, %ebp                    # PUSH $16, CLITERAL 16
 603 05b5 C7450010 	               movl $16, (%ebp)
 603      000000
 604 05bc E88CFBFF 	               call func_FETCH
 604      FF
 605 05c1 E8C3FBFF 	               call func_SWAP
 605      FF
 606 05c6 E896FBFF 	               call func_STORE
 606      FF
 607 05cb C3       	L000002B8:     ret
 608              	L000002B9:                                      # WORD THEN (FA27)
 609 05cc E85FFFFF 	               call L0000026C
 609      FF
 610 05d1 8B4500   	               movl (%ebp), %eax                # POP to %eax, JMPZ
 611 05d4 83ED04   	               subl $4, %ebp
 612 05d7 39050000 	               cmp %eax, 0
 612      0000
 613 05dd 7419     	               jz L000002CD
 614 05df 83C504   	               addl $4, %ebp                    # PUSH $16, CLITERAL 16
 615 05e2 C7450010 	               movl $16, (%ebp)
 615      000000
 616 05e9 E85FFBFF 	               call func_FETCH
 616      FF
 617 05ee E896FBFF 	               call func_SWAP
 617      FF
 618 05f3 E869FBFF 	               call func_STORE
 618      FF
 619 05f8 C3       	L000002CD:     ret
 620              	L000002CE:                                      # WORD BEGIN (FA17)
 621 05f9 E832FFFF 	               call L0000026C
 621      FF
 622 05fe 8B4500   	               movl (%ebp), %eax                # POP to %eax, JMPZ
 623 0601 83ED04   	               subl $4, %ebp
 624 0604 39050000 	               cmp %eax, 0
 624      0000
 625 060a 740F     	               jz L000002E0
GAS LISTING fasm.s 			page 15


 626 060c 83C504   	               addl $4, %ebp                    # PUSH $16, CLITERAL 16
 627 060f C7450010 	               movl $16, (%ebp)
 627      000000
 628 0616 E832FBFF 	               call func_FETCH
 628      FF
 629 061b C3       	L000002E0:     ret
 630              	L000002E1:                                      # WORD AGAIN (FA07)
 631 061c E80FFFFF 	               call L0000026C
 631      FF
 632 0621 8B4500   	               movl (%ebp), %eax                # POP to %eax, JMPZ
 633 0624 83ED04   	               subl $4, %ebp
 634 0627 39050000 	               cmp %eax, 0
 634      0000
 635 062d 740A     	               jz L000002FA
 636 062f E820FDFF 	               call L000000E1
 636      FF
 637 0634 E869FCFF 	               call L0000007B
 637      FF
 638 0639 C3       	L000002FA:     ret
 639              	L000002FB:                                      # WORD WHILE (F9F7)
 640 063a E8F1FEFF 	               call L0000026C
 640      FF
 641 063f 8B4500   	               movl (%ebp), %eax                # POP to %eax, JMPZ
 642 0642 83ED04   	               subl $4, %ebp
 643 0645 39050000 	               cmp %eax, 0
 643      0000
 644 064b 740A     	               jz L00000314
 645 064d E822FDFF 	               call L000000FB
 645      FF
 646 0652 E84BFCFF 	               call L0000007B
 646      FF
 647 0657 C3       	L00000314:     ret
 648              	L00000315:                                      # WORD UNTIL (F9E7)
 649 0658 E8D3FEFF 	               call L0000026C
 649      FF
 650 065d 8B4500   	               movl (%ebp), %eax                # POP to %eax, JMPZ
 651 0660 83ED04   	               subl $4, %ebp
 652 0663 39050000 	               cmp %eax, 0
 652      0000
 653 0669 740A     	               jz L0000032E
 654 066b E8F4FCFF 	               call L000000EE
 654      FF
 655 0670 E82DFCFF 	               call L0000007B
 655      FF
 656 0675 C3       	L0000032E:     ret
 657              	L0000032F:                                      # WORD LEAVE (F9D7)
 658 0676 E8B5FEFF 	               call L0000026C
 658      FF
 659 067b 8B4500   	               movl (%ebp), %eax                # POP to %eax, JMPZ
 660 067e 83ED04   	               subl $4, %ebp
 661 0681 39050000 	               cmp %eax, 0
 661      0000
 662 0687 7405     	               jz L00000343
 663 0689 E806FDFF 	               call L00000115
 663      FF
 664 068e C3       	L00000343:     ret
 665              	L00000344:                                      # WORD COUNT (F9C7)
GAS LISTING fasm.s 			page 16


 666 068f E8EBFAFF 	               call func_DUP
 666      FF
 667 0694 83C504   	               addl $4, %ebp                    # PUSH $1, CLITERAL 1
 668 0697 C7450001 	               movl $1, (%ebp)
 668      000000
 669 069e E80FFBFF 	               call func_ADD
 669      FF
 670 06a3 E8E1FAFF 	               call func_SWAP
 670      FF
 671 06a8 E8A9FAFF 	               call func_CFETCH
 671      FF
 672 06ad C3       	               ret
 673              	L00000350:                                      # WORD TYPE (F9B8)
 674 06ae E8E9FAFF 	               call func_OVER
 674      FF
 675 06b3 E8FAFAFF 	               call func_ADD
 675      FF
 676 06b8 83C504   	               addl $4, %ebp                    # PUSH $1, CLITERAL 1
 677 06bb C7450001 	               movl $1, (%ebp)
 677      000000
 678 06c2 E8FAFAFF 	               call func_SUB
 678      FF
 679 06c7 E8BDFAFF 	               call func_SWAP
 679      FF
 680 06cc E8CBFAFF 	L0000035B:     call func_OVER
 680      FF
 681 06d1 E8C6FAFF 	               call func_OVER
 681      FF
 682 06d6 E8C4F9FF 	               call func_LT                     # LT
 682      FF
 683 06db 8B4500   	               movl (%ebp), %eax                # POP to %eax, JMPZ
 684 06de 83ED04   	               subl $4, %ebp
 685 06e1 39050000 	               cmp %eax, 0
 685      0000
 686 06e7 7407     	               jz L00000366
 687 06e9 83ED04   	               subl $4, %ebp                    # DROP
 688 06ec 83ED04   	               subl $4, %ebp                    # DROP
 689 06ef C3       	               ret
 690 06f0 E88AFAFF 	L00000366:     call func_DUP
 690      FF
 691 06f5 E85CFAFF 	               call func_CFETCH
 691      FF
 692 06fa E82CFAFF 	               call func_EMIT                   # EMIT
 692      FF
 693 06ff 83C504   	               addl $4, %ebp                    # PUSH $1, CLITERAL 1
 694 0702 C7450001 	               movl $1, (%ebp)
 694      000000
 695 0709 E8A4FAFF 	               call func_ADD
 695      FF
 696 070e EBBC     	               jmp L0000035B                    # JMP
 697 0710 C3       	               ret
 698              	L00000372:                                      # WORD CR (F9AB)
 699 0711 83C504   	               addl $4, %ebp                    # PUSH $13, CLITERAL 13
 700 0714 C745000D 	               movl $13, (%ebp)
 700      000000
 701 071b E80BFAFF 	               call func_EMIT                   # EMIT
 701      FF
GAS LISTING fasm.s 			page 17


 702 0720 83C504   	               addl $4, %ebp                    # PUSH $10, CLITERAL 10
 703 0723 C745000A 	               movl $10, (%ebp)
 703      000000
 704 072a E8FCF9FF 	               call func_EMIT                   # EMIT
 704      FF
 705 072f C3       	               ret
 706              	L0000037E:                                      # WORD INPUT-FP (F998)
 707 0730 83C504   	               addl $4, %ebp                    # PUSH $905, LITERAL 905
 708 0733 C7450089 	               movl $905, (%ebp)
 708      030000
 709 073a C3       	               ret
 710 073b 00       	               .byte 0x00
 711 073c 00       	               .byte 0x00
 712 073d 00       	               .byte 0x00
 713 073e 00       	               .byte 0x00
 714 073f C3       	               ret
 715              	L0000038E:                                      # WORD PAD (F98A)
 716 0740 83C504   	               addl $4, %ebp                    # PUSH $20, CLITERAL 20
 717 0743 C7450014 	               movl $20, (%ebp)
 717      000000
 718 074a E8FEF9FF 	               call func_FETCH
 718      FF
 719 074f 83C504   	               addl $4, %ebp                    # PUSH $256, LITERAL 256
 720 0752 C7450000 	               movl $256, (%ebp)
 720      010000
 721 0759 E863FAFF 	               call func_SUB
 721      FF
 722 075e C3       	               ret
 723              	L0000039D:                                      # WORD string-nullterm (F970)
 724 075f 83C504   	               addl $4, %ebp                    # PUSH $0, CLITERAL 0
 725 0762 C7450000 	               movl $0, (%ebp)
 725      000000
 726 0769 E81BFAFF 	               call func_SWAP
 726      FF
 727 076e E80CFAFF 	               call func_DUP
 727      FF
 728 0773 E8DEF9FF 	               call func_CFETCH
 728      FF
 729 0778 E835FAFF 	               call func_ADD
 729      FF
 730 077d 83C504   	               addl $4, %ebp                    # PUSH $1, CLITERAL 1
 731 0780 C7450001 	               movl $1, (%ebp)
 731      000000
 732 0787 E826FAFF 	               call func_ADD
 732      FF
 733 078c E8DFF9FF 	               call func_CSTORE
 733      FF
 734 0791 C3       	               ret
 735              	L000003AD:                                      # WORD string-catc (F95A)
 736 0792 E8F2F9FF 	               call func_SWAP
 736      FF
 737 0797 E800FAFF 	               call func_OVER
 737      FF
 738 079c E8DEF9FF 	               call func_DUP
 738      FF
 739 07a1 E8B0F9FF 	               call func_CFETCH
 739      FF
GAS LISTING fasm.s 			page 18


 740 07a6 E807FAFF 	               call func_ADD
 740      FF
 741 07ab 83C504   	               addl $4, %ebp                    # PUSH $1, CLITERAL 1
 742 07ae C7450001 	               movl $1, (%ebp)
 742      000000
 743 07b5 E8F8F9FF 	               call func_ADD
 743      FF
 744 07ba E8B1F9FF 	               call func_CSTORE
 744      FF
 745 07bf E8BBF9FF 	               call func_DUP
 745      FF
 746 07c4 E88DF9FF 	               call func_CFETCH
 746      FF
 747 07c9 83C504   	               addl $4, %ebp                    # PUSH $1, CLITERAL 1
 748 07cc C7450001 	               movl $1, (%ebp)
 748      000000
 749 07d3 E8DAF9FF 	               call func_ADD
 749      FF
 750 07d8 E8ACF9FF 	               call func_SWAP
 750      FF
 751 07dd E88EF9FF 	               call func_CSTORE
 751      FF
 752 07e2 C3       	               ret
 753              	L000003C3:                                      # WORD string-copy (F944)
 754 07e3 E8F7F9FF 	               call func_DTOR                   # DTOR
 754      FF
 755 07e8 E892F9FF 	               call func_DUP
 755      FF
 756 07ed E864F9FF 	               call func_CFETCH
 756      FF
 757 07f2 E8A5F9FF 	               call func_OVER
 757      FF
 758 07f7 E8B6F9FF 	               call func_ADD
 758      FF
 759 07fc 83C504   	               addl $4, %ebp                    # PUSH $1, CLITERAL 1
 760 07ff C7450001 	               movl $1, (%ebp)
 760      000000
 761 0806 E8A7F9FF 	               call func_ADD
 761      FF
 762 080b E879F9FF 	               call func_SWAP
 762      FF
 763 0810 E887F9FF 	L000003D1:     call func_OVER
 763      FF
 764 0815 E882F9FF 	               call func_OVER
 764      FF
 765 081a E846F8FF 	               call func_EQ                     # EQ
 765      FF
 766 081f 8B4500   	               movl (%ebp), %eax                # POP to %eax, JMPZ
 767 0822 83ED04   	               subl $4, %ebp
 768 0825 39050000 	               cmp %eax, 0
 768      0000
 769 082b 7411     	               jz L000003E3
 770 082d 83ED04   	               subl $4, %ebp                    # DROP
 771 0830 83ED04   	               subl $4, %ebp                    # DROP
 772 0833 E8CCF9FF 	               call func_RTOD                   # RTOD
 772      FF
 773 0838 83ED04   	               subl $4, %ebp                    # DROP
GAS LISTING fasm.s 			page 19


 774 083b C3       	               ret
 775 083c EB46     	               jmp L000003F1                    # JMP
 776 083e E83CF9FF 	L000003E3:     call func_DUP
 776      FF
 777 0843 E80EF9FF 	               call func_CFETCH
 777      FF
 778 0848 E8B7F9FF 	               call func_RTOD                   # RTOD
 778      FF
 779 084d E82DF9FF 	               call func_DUP
 779      FF
 780 0852 E888F9FF 	               call func_DTOR                   # DTOR
 780      FF
 781 0857 E814F9FF 	               call func_CSTORE
 781      FF
 782 085c E8A3F9FF 	               call func_RTOD                   # RTOD
 782      FF
 783 0861 83C504   	               addl $4, %ebp                    # PUSH $1, CLITERAL 1
 784 0864 C7450001 	               movl $1, (%ebp)
 784      000000
 785 086b E842F9FF 	               call func_ADD
 785      FF
 786 0870 E86AF9FF 	               call func_DTOR                   # DTOR
 786      FF
 787 0875 83C504   	               addl $4, %ebp                    # PUSH $1, CLITERAL 1
 788 0878 C7450001 	               movl $1, (%ebp)
 788      000000
 789 087f E82EF9FF 	               call func_ADD
 789      FF
 790 0884 EB8A     	L000003F1:     jmp L000003D1                    # JMP
 791 0886 C3       	               ret
 792              	L000003F7:                                      # WORD string-popc (F92E)
 793 0887 E8F3F8FF 	               call func_DUP
 793      FF
 794 088c E8C5F8FF 	               call func_CFETCH
 794      FF
 795 0891 8B4500   	               movl (%ebp), %eax                # POP to %eax, JMPZ
 796 0894 83ED04   	               subl $4, %ebp
 797 0897 39050000 	               cmp %eax, 0
 797      0000
 798 089d 7448     	               jz L00000416
 799 089f E8DBF8FF 	               call func_DUP
 799      FF
 800 08a4 E8ADF8FF 	               call func_CFETCH
 800      FF
 801 08a9 83C504   	               addl $4, %ebp                    # PUSH $1, CLITERAL 1
 802 08ac C7450001 	               movl $1, (%ebp)
 802      000000
 803 08b3 E809F9FF 	               call func_SUB
 803      FF
 804 08b8 E8DFF8FF 	               call func_OVER
 804      FF
 805 08bd E8AEF8FF 	               call func_CSTORE
 805      FF
 806 08c2 E8B8F8FF 	               call func_DUP
 806      FF
 807 08c7 E88AF8FF 	               call func_CFETCH
 807      FF
GAS LISTING fasm.s 			page 20


 808 08cc E8E1F8FF 	               call func_ADD
 808      FF
 809 08d1 83C504   	               addl $4, %ebp                    # PUSH $1, CLITERAL 1
 810 08d4 C7450001 	               movl $1, (%ebp)
 810      000000
 811 08db E8D2F8FF 	               call func_ADD
 811      FF
 812 08e0 E871F8FF 	               call func_CFETCH
 812      FF
 813 08e5 EB0D     	               jmp L00000419                    # JMP
 814 08e7 83ED04   	L00000416:     subl $4, %ebp                    # DROP
 815 08ea 83C504   	               addl $4, %ebp                    # PUSH $0, CLITERAL 0
 816 08ed C7450000 	               movl $0, (%ebp)
 816      000000
 817 08f4 C3       	L00000419:     ret
 818              	L0000041A:                                      # WORD BETWEEN (F91C)
 819 08f5 83C504   	               addl $4, %ebp                    # PUSH $2, CLITERAL 2
 820 08f8 C7450002 	               movl $2, (%ebp)
 820      000000
 821              	               # PICK
 822 08ff E89BF7FF 	               call func_LT                     # LT
 822      FF
 823 0904 8B4500   	               movl (%ebp), %eax                # POP to %eax, JMPZ
 824 0907 83ED04   	               subl $4, %ebp
 825 090a 39050000 	               cmp %eax, 0
 825      0000
 826 0910 7411     	               jz L0000042D
 827 0912 83ED04   	               subl $4, %ebp                    # DROP
 828 0915 83ED04   	               subl $4, %ebp                    # DROP
 829 0918 83C504   	               addl $4, %ebp                    # PUSH $0, CLITERAL 0
 830 091b C7450000 	               movl $0, (%ebp)
 830      000000
 831 0922 C3       	               ret
 832 0923 E877F7FF 	L0000042D:     call func_LT                     # LT
 832      FF
 833 0928 83C504   	               addl $4, %ebp                    # PUSH $0, CLITERAL 0
 834 092b C7450000 	               movl $0, (%ebp)
 834      000000
 835 0932 E82EF7FF 	               call func_EQ                     # EQ
 835      FF
 836 0937 C3       	               ret
 837              	L00000432:                                      # WORD stdin-getline (F904)
 838 0938 E803FEFF 	               call L0000038E
 838      FF
 839 093d 83C504   	               addl $4, %ebp                    # PUSH $0, CLITERAL 0
 840 0940 C7450000 	               movl $0, (%ebp)
 840      000000
 841 0947 E850F8FF 	               call func_OVER
 841      FF
 842 094c E810F8FF 	               call func_STORE
 842      FF
 843 0951 E889F8FF 	               call func_DTOR                   # DTOR
 843      FF
 844              	L00000441:                                      # GETCH (TODO)
 845 0956 E824F8FF 	               call func_DUP
 845      FF
 846 095b 83C504   	               addl $4, %ebp                    # PUSH $3, CLITERAL 3
GAS LISTING fasm.s 			page 21


 847 095e C7450003 	               movl $3, (%ebp)
 847      000000
 848 0965 E8FBF6FF 	               call func_EQ                     # EQ
 848      FF
 849 096a 8B4500   	               movl (%ebp), %eax                # POP to %eax, JMPZ
 850 096d 83ED04   	               subl $4, %ebp
 851 0970 39050000 	               cmp %eax, 0
 851      0000
 852 0976 740A     	               jz L00000461
 853              	                                                # SLITERAL (044c) [<CTRL>-C]
 854 0978 E812FDFF 	               call L00000344
 854      FF
 855 097d E82CFDFF 	               call L00000350
 855      FF
 856              	                                                # BYE (TODO)
 857 0982 E8F8F7FF 	L00000461:     call func_DUP
 857      FF
 858 0987 83C504   	               addl $4, %ebp                    # PUSH $13, CLITERAL 13
 859 098a C745000D 	               movl $13, (%ebp)
 859      000000
 860 0991 E8CFF6FF 	               call func_EQ                     # EQ
 860      FF
 861 0996 8B4500   	               movl (%ebp), %eax                # POP to %eax, JMPZ
 862 0999 83ED04   	               subl $4, %ebp
 863 099c 39050000 	               cmp %eax, 0
 863      0000
 864 09a2 7418     	               jz L00000470
 865 09a4 83ED04   	               subl $4, %ebp                    # DROP
 866 09a7 E858F8FF 	               call func_RTOD                   # RTOD
 866      FF
 867 09ac 83C504   	               addl $4, %ebp                    # PUSH $32, CLITERAL 32
 868 09af C7450020 	               movl $32, (%ebp)
 868      000000
 869 09b6 E870F7FF 	               call func_EMIT                   # EMIT
 869      FF
 870 09bb C3       	               ret
 871 09bc E8BEF7FF 	L00000470:     call func_DUP
 871      FF
 872 09c1 83C504   	               addl $4, %ebp                    # PUSH $9, CLITERAL 9
 873 09c4 C7450009 	               movl $9, (%ebp)
 873      000000
 874 09cb E895F6FF 	               call func_EQ                     # EQ
 874      FF
 875 09d0 8B4500   	               movl (%ebp), %eax                # POP to %eax, JMPZ
 876 09d3 83ED04   	               subl $4, %ebp
 877 09d6 39050000 	               cmp %eax, 0
 877      0000
 878 09dc 740D     	               jz L0000047C
 879 09de 83ED04   	               subl $4, %ebp                    # DROP
 880 09e1 83C504   	               addl $4, %ebp                    # PUSH $32, CLITERAL 32
 881 09e4 C7450020 	               movl $32, (%ebp)
 881      000000
 882 09eb E88FF7FF 	L0000047C:     call func_DUP
 882      FF
 883 09f0 83C504   	               addl $4, %ebp                    # PUSH $8, CLITERAL 8
 884 09f3 C7450008 	               movl $8, (%ebp)
 884      000000
GAS LISTING fasm.s 			page 22


 885 09fa E866F6FF 	               call func_EQ                     # EQ
 885      FF
 886 09ff 8B4500   	               movl (%ebp), %eax                # POP to %eax, JMPZ
 887 0a02 83ED04   	               subl $4, %ebp
 888 0a05 39050000 	               cmp %eax, 0
 888      0000
 889 0a0b 7437     	               jz L00000499
 890 0a0d E8F2F7FF 	               call func_RTOD                   # RTOD
 890      FF
 891 0a12 E868F7FF 	               call func_DUP
 891      FF
 892 0a17 E8C3F7FF 	               call func_DTOR                   # DTOR
 892      FF
 893 0a1c E866FEFF 	               call L000003F7
 893      FF
 894 0a21 83ED04   	               subl $4, %ebp                    # DROP
 895 0a24 E856F7FF 	               call func_DUP
 895      FF
 896 0a29 E8FDF6FF 	               call func_EMIT                   # EMIT
 896      FF
 897 0a2e 83C504   	               addl $4, %ebp                    # PUSH $32, CLITERAL 32
 898 0a31 C7450020 	               movl $32, (%ebp)
 898      000000
 899 0a38 E8EEF6FF 	               call func_EMIT                   # EMIT
 899      FF
 900 0a3d E8E9F6FF 	               call func_EMIT                   # EMIT
 900      FF
 901 0a42 EB4F     	               jmp L000004B8                    # JMP
 902 0a44 E836F7FF 	L00000499:     call func_DUP
 902      FF
 903 0a49 83C504   	               addl $4, %ebp                    # PUSH $32, CLITERAL 32
 904 0a4c C7450020 	               movl $32, (%ebp)
 904      000000
 905 0a53 83C504   	               addl $4, %ebp                    # PUSH $127, CLITERAL 127
 906 0a56 C745007F 	               movl $127, (%ebp)
 906      000000
 907 0a5d E893FEFF 	               call L0000041A
 907      FF
 908 0a62 8B4500   	               movl (%ebp), %eax                # POP to %eax, JMPZ
 909 0a65 83ED04   	               subl $4, %ebp
 910 0a68 39050000 	               cmp %eax, 0
 910      0000
 911 0a6e 7420     	               jz L000004B7
 912 0a70 E80AF7FF 	               call func_DUP
 912      FF
 913 0a75 E8B1F6FF 	               call func_EMIT                   # EMIT
 913      FF
 914 0a7a E885F7FF 	               call func_RTOD                   # RTOD
 914      FF
 915 0a7f E8FBF6FF 	               call func_DUP
 915      FF
 916 0a84 E856F7FF 	               call func_DTOR                   # DTOR
 916      FF
 917 0a89 E804FDFF 	               call L000003AD
 917      FF
 918 0a8e EB03     	               jmp L000004B8                    # JMP
 919 0a90 83ED04   	L000004B7:     subl $4, %ebp                    # DROP
GAS LISTING fasm.s 			page 23


 920 0a93 E9BEFEFF 	L000004B8:     jmp L00000441                    # JMP
 920      FF
 921 0a98 C3       	               ret
 922              	L000004BE:                                      # WORD file-getLine (F8ED)
 923 0a99 E8A2FCFF 	               call L0000038E
 923      FF
 924 0a9e 83C504   	               addl $4, %ebp                    # PUSH $200, CLITERAL 200
 925 0aa1 C74500C8 	               movl $200, (%ebp)
 925      000000
 926 0aa8 E883FCFF 	               call L0000037E
 926      FF
 927 0aad E89BF6FF 	               call func_FETCH
 927      FF
 928              	                                                # FREADLINE (TODO)
 929 0ab2 83C504   	               addl $4, %ebp                    # PUSH $0, CLITERAL 0
 930 0ab5 C7450000 	               movl $0, (%ebp)
 930      000000
 931 0abc E8A4F5FF 	               call func_EQ                     # EQ
 931      FF
 932 0ac1 8B4500   	               movl (%ebp), %eax                # POP to %eax, JMPZ
 933 0ac4 83ED04   	               subl $4, %ebp
 934 0ac7 39050000 	               cmp %eax, 0
 934      0000
 935 0acd 7420     	               jz L000004ED
 936 0acf E85CFCFF 	               call L0000037E
 936      FF
 937 0ad4 E874F6FF 	               call func_FETCH
 937      FF
 938              	                                                # FCLOSE (TODO)
 939 0ad9 83C504   	               addl $4, %ebp                    # PUSH $0, CLITERAL 0
 940 0adc C7450000 	               movl $0, (%ebp)
 940      000000
 941 0ae3 E848FCFF 	               call L0000037E
 941      FF
 942 0ae8 E874F6FF 	               call func_STORE
 942      FF
 943 0aed EB1E     	               jmp L000004FF                    # JMP
 944 0aef 83C504   	L000004ED:     addl $4, %ebp                    # PUSH $46, CLITERAL 46
 945 0af2 C745002E 	               movl $46, (%ebp)
 945      000000
 946 0af9 E82DF6FF 	               call func_EMIT                   # EMIT
 946      FF
 947 0afe E83DFCFF 	               call L0000038E
 947      FF
 948 0b03 E887FBFF 	               call L00000344
 948      FF
 949 0b08 E8A1FBFF 	               call L00000350
 949      FF
 950 0b0d E82EFCFF 	L000004FF:     call L0000038E
 950      FF
 951 0b12 C3       	               ret
 952              	L00000505:                                      # WORD get-line (F8DA)
 953 0b13 E818FCFF 	               call L0000037E
 953      FF
 954 0b18 E830F6FF 	               call func_FETCH
 954      FF
 955 0b1d 8B4500   	               movl (%ebp), %eax                # POP to %eax, JMPZ
GAS LISTING fasm.s 			page 24


 956 0b20 83ED04   	               subl $4, %ebp
 957 0b23 39050000 	               cmp %eax, 0
 957      0000
 958 0b29 7407     	               jz L0000051F
 959 0b2b E869FFFF 	               call L000004BE
 959      FF
 960 0b30 EB05     	               jmp L00000524                    # JMP
 961 0b32 E801FEFF 	L0000051F:     call L00000432
 961      FF
 962 0b37 C3       	L00000524:     ret
 963              	L00000525:                                      # WORD skip-ws (F8C8)
 964 0b38 E842F6FF 	L0000052A:     call func_DUP
 964      FF
 965 0b3d E814F6FF 	               call func_CFETCH
 965      FF
 966 0b42 83C504   	               addl $4, %ebp                    # PUSH $1, CLITERAL 1
 967 0b45 C7450001 	               movl $1, (%ebp)
 967      000000
 968 0b4c 83C504   	               addl $4, %ebp                    # PUSH $32, CLITERAL 32
 969 0b4f C7450020 	               movl $32, (%ebp)
 969      000000
 970 0b56 E89AFDFF 	               call L0000041A
 970      FF
 971 0b5b 8B4500   	               movl (%ebp), %eax                # POP to %eax, JMPZ
 972 0b5e 83ED04   	               subl $4, %ebp
 973 0b61 39050000 	               cmp %eax, 0
 973      0000
 974 0b67 7411     	               jz L00000542
 975 0b69 83C504   	               addl $4, %ebp                    # PUSH $1, CLITERAL 1
 976 0b6c C7450001 	               movl $1, (%ebp)
 976      000000
 977 0b73 E83AF6FF 	               call func_ADD
 977      FF
 978 0b78 EB01     	               jmp L00000543                    # JMP
 979 0b7a C3       	L00000542:     ret
 980 0b7b EBBB     	L00000543:     jmp L0000052A                    # JMP
 981 0b7d C3       	               ret
 982              	L00000549:                                      # WORD get-word (F8B5)
 983 0b7e 83C504   	               addl $4, %ebp                    # PUSH $16, CLITERAL 16
 984 0b81 C7450010 	               movl $16, (%ebp)
 984      000000
 985 0b88 E8C0F5FF 	               call func_FETCH
 985      FF
 986 0b8d 83C504   	               addl $4, %ebp                    # PUSH $256, LITERAL 256
 987 0b90 C7450000 	               movl $256, (%ebp)
 987      010000
 988 0b97 E816F6FF 	               call func_ADD
 988      FF
 989 0b9c E8DEF5FF 	               call func_DUP
 989      FF
 990 0ba1 E839F6FF 	               call func_DTOR                   # DTOR
 990      FF
 991 0ba6 83C504   	               addl $4, %ebp                    # PUSH $0, CLITERAL 0
 992 0ba9 C7450000 	               movl $0, (%ebp)
 992      000000
 993 0bb0 E8D4F5FF 	               call func_SWAP
 993      FF
GAS LISTING fasm.s 			page 25


 994 0bb5 E8A7F5FF 	               call func_STORE
 994      FF
 995 0bba E8C0F5FF 	L0000055D:     call func_DUP
 995      FF
 996 0bbf E892F5FF 	               call func_CFETCH
 996      FF
 997 0bc4 E8B6F5FF 	               call func_DUP
 997      FF
 998 0bc9 83C504   	               addl $4, %ebp                    # PUSH $33, CLITERAL 33
 999 0bcc C7450021 	               movl $33, (%ebp)
 999      000000
 1000 0bd3 E8C7F4FF 	               call func_LT                     # LT
 1000      FF
 1001 0bd8 8B4500   	               movl (%ebp), %eax                # POP to %eax, JMPZ
 1002 0bdb 83ED04   	               subl $4, %ebp
 1003 0bde 39050000 	               cmp %eax, 0
 1003      0000
 1004 0be4 7424     	               jz L00000579
 1005 0be6 83ED04   	               subl $4, %ebp                    # DROP
 1006 0be9 E816F6FF 	               call func_RTOD                   # RTOD
 1006      FF
 1007 0bee E88CF5FF 	               call func_DUP
 1007      FF
 1008 0bf3 E8E7F5FF 	               call func_DTOR                   # DTOR
 1008      FF
 1009 0bf8 E862FBFF 	               call L0000039D
 1009      FF
 1010 0bfd E802F6FF 	               call func_RTOD                   # RTOD
 1010      FF
 1011 0c02 E882F5FF 	               call func_SWAP
 1011      FF
 1012 0c07 C3       	               ret
 1013 0c08 EB23     	               jmp L00000584                    # JMP
 1014 0c0a E8F5F5FF 	L00000579:     call func_RTOD                   # RTOD
 1014      FF
 1015 0c0f E86BF5FF 	               call func_DUP
 1015      FF
 1016 0c14 E8C6F5FF 	               call func_DTOR                   # DTOR
 1016      FF
 1017 0c19 E874FBFF 	               call L000003AD
 1017      FF
 1018 0c1e 83C504   	               addl $4, %ebp                    # PUSH $1, CLITERAL 1
 1019 0c21 C7450001 	               movl $1, (%ebp)
 1019      000000
 1020 0c28 E885F5FF 	               call func_ADD
 1020      FF
 1021 0c2d EB8B     	L00000584:     jmp L0000055D                    # JMP
 1022 0c2f C3       	               ret
 1023              	L0000058A:                                      # WORD DICT>NEXT (F8A1)
 1024 0c30 C3       	               ret
 1025              	L00000590:                                      # WORD DICT>XT (F88F)
 1026 0c31 83C504   	               addl $4, %ebp                    # PUSH $4, CLITERAL 4
 1027 0c34 C7450004 	               movl $4, (%ebp)
 1027      000000
 1028 0c3b E872F5FF 	               call func_ADD
 1028      FF
 1029 0c40 C3       	               ret
GAS LISTING fasm.s 			page 26


 1030              	L00000599:                                      # WORD DICT>FLAGS (F87A)
 1031 0c41 83C504   	               addl $4, %ebp                    # PUSH $2, CLITERAL 2
 1032 0c44 C7450002 	               movl $2, (%ebp)
 1032      000000
 1033 0c4b 83C504   	               addl $4, %ebp                    # PUSH $4, CLITERAL 4
 1034 0c4e C7450004 	               movl $4, (%ebp)
 1034      000000
 1035 0c55 E876F5FF 	               call func_MUL
 1035      FF
 1036 0c5a E853F5FF 	               call func_ADD
 1036      FF
 1037 0c5f C3       	               ret
 1038              	L000005A5:                                      # WORD DICT>NAME (F866)
 1039 0c60 83C504   	               addl $4, %ebp                    # PUSH $2, CLITERAL 2
 1040 0c63 C7450002 	               movl $2, (%ebp)
 1040      000000
 1041 0c6a 83C504   	               addl $4, %ebp                    # PUSH $4, CLITERAL 4
 1042 0c6d C7450004 	               movl $4, (%ebp)
 1042      000000
 1043 0c74 E857F5FF 	               call func_MUL
 1043      FF
 1044 0c79 E834F5FF 	               call func_ADD
 1044      FF
 1045 0c7e 83C504   	               addl $4, %ebp                    # PUSH $1, CLITERAL 1
 1046 0c81 C7450001 	               movl $1, (%ebp)
 1046      000000
 1047 0c88 E825F5FF 	               call func_ADD
 1047      FF
 1048 0c8d C3       	               ret
 1049              	L000005B4:                                      # WORD FLAG_IMMEDIATE (F84D)
 1050 0c8e 83C504   	               addl $4, %ebp                    # PUSH $1, CLITERAL 1
 1051 0c91 C7450001 	               movl $1, (%ebp)
 1051      000000
 1052 0c98 C3       	               ret
 1053              	L000005BC:                                      # WORD FLAG_INLINE (F837)
 1054 0c99 83C504   	               addl $4, %ebp                    # PUSH $2, CLITERAL 2
 1055 0c9c C7450002 	               movl $2, (%ebp)
 1055      000000
 1056 0ca3 C3       	               ret
 1057              	L000005C4:                                      # WORD find-word (F823)
 1058 0ca4 E8D6F4FF 	               call func_DUP
 1058      FF
 1059 0ca9 E8B1FAFF 	               call L0000039D
 1059      FF
 1060 0cae 83C504   	               addl $4, %ebp                    # PUSH $20, CLITERAL 20
 1061 0cb1 C7450014 	               movl $20, (%ebp)
 1061      000000
 1062 0cb8 E890F4FF 	               call func_FETCH
 1062      FF
 1063 0cbd E81DF5FF 	               call func_DTOR                   # DTOR
 1063      FF
 1064 0cc2 E83DF5FF 	L000005D3:     call func_RTOD                   # RTOD
 1064      FF
 1065 0cc7 E8B3F4FF 	               call func_DUP
 1065      FF
 1066 0ccc E80EF5FF 	               call func_DTOR                   # DTOR
 1066      FF
GAS LISTING fasm.s 			page 27


 1067 0cd1 E8A9F4FF 	               call func_DUP
 1067      FF
 1068 0cd6 8B4500   	               movl (%ebp), %eax                # POP to %eax, JMPZ
 1069 0cd9 83ED04   	               subl $4, %ebp
 1070 0cdc 39050000 	               cmp %eax, 0
 1070      0000
 1071 0ce2 7467     	               jz L000005F6
 1072 0ce4 83C504   	               addl $4, %ebp                    # PUSH $2, CLITERAL 2
 1073 0ce7 C7450002 	               movl $2, (%ebp)
 1073      000000
 1074 0cee 83C504   	               addl $4, %ebp                    # PUSH $4, CLITERAL 4
 1075 0cf1 C7450004 	               movl $4, (%ebp)
 1075      000000
 1076 0cf8 E8D3F4FF 	               call func_MUL
 1076      FF
 1077 0cfd E8B0F4FF 	               call func_ADD
 1077      FF
 1078 0d02 83C504   	               addl $4, %ebp                    # PUSH $1, CLITERAL 1
 1079 0d05 C7450001 	               movl $1, (%ebp)
 1079      000000
 1080 0d0c E8A1F4FF 	               call func_ADD
 1080      FF
 1081 0d11 E886F4FF 	               call func_OVER
 1081      FF
 1082 0d16 8B4500   	               movl (%ebp), %eax                # POP to %eax
 1083 0d19 83ED04   	               subl $4, %ebp
 1084 0d1c 8B5D00   	               movl (%ebp), %ebx                # POP to %ebx
 1085 0d1f 83ED04   	               subl $4, %ebp
 1086              	               # COMPAREI %eax, %ebx
 1087 0d22 83C504   	               addl $4, %ebp                    # PUSH %ebx
 1088 0d25 895D00   	               movl %ebx, (%ebp)
 1089 0d28 8B4500   	               movl (%ebp), %eax                # POP to %eax, JMPZ
 1090 0d2b 83ED04   	               subl $4, %ebp
 1091 0d2e 39050000 	               cmp %eax, 0
 1091      0000
 1092 0d34 7413     	               jz L000005F1
 1093 0d36 83ED04   	               subl $4, %ebp                    # DROP
 1094 0d39 E8C6F4FF 	               call func_RTOD                   # RTOD
 1094      FF
 1095 0d3e 83C504   	               addl $4, %ebp                    # PUSH $1, CLITERAL 1
 1096 0d41 C7450001 	               movl $1, (%ebp)
 1096      000000
 1097 0d48 C3       	               ret
 1098 0d49 EB19     	L000005F1:     jmp L000005FD                    # JMP
 1099 0d4b 83ED04   	L000005F6:     subl $4, %ebp                    # DROP
 1100 0d4e 83ED04   	               subl $4, %ebp                    # DROP
 1101 0d51 E8AEF4FF 	               call func_RTOD                   # RTOD
 1101      FF
 1102 0d56 83ED04   	               subl $4, %ebp                    # DROP
 1103 0d59 83C504   	               addl $4, %ebp                    # PUSH $0, CLITERAL 0
 1104 0d5c C7450000 	               movl $0, (%ebp)
 1104      000000
 1105 0d63 C3       	               ret
 1106 0d64 E89BF4FF 	L000005FD:     call func_RTOD                   # RTOD
 1106      FF
 1107 0d69 E8DFF3FF 	               call func_FETCH
 1107      FF
GAS LISTING fasm.s 			page 28


 1108 0d6e E86CF4FF 	               call func_DTOR                   # DTOR
 1108      FF
 1109 0d73 E94AFFFF 	               jmp L000005D3                    # JMP
 1109      FF
 1110 0d78 C3       	               ret
 1111              	L00000606:                                      # WORD define-word (F80D)
 1112 0d79 83C504   	               addl $4, %ebp                    # PUSH $20, CLITERAL 20
 1113 0d7c C7450014 	               movl $20, (%ebp)
 1113      000000
 1114 0d83 E8C5F3FF 	               call func_FETCH
 1114      FF
 1115 0d88 E80FF4FF 	               call func_OVER
 1115      FF
 1116 0d8d E8C4F3FF 	               call func_CFETCH
 1116      FF
 1117 0d92 83C504   	               addl $4, %ebp                    # PUSH $2, CLITERAL 2
 1118 0d95 C7450002 	               movl $2, (%ebp)
 1118      000000
 1119 0d9c 83C504   	               addl $4, %ebp                    # PUSH $4, CLITERAL 4
 1120 0d9f C7450004 	               movl $4, (%ebp)
 1120      000000
 1121 0da6 E825F4FF 	               call func_MUL
 1121      FF
 1122 0dab 83C504   	               addl $4, %ebp                    # PUSH $3, CLITERAL 3
 1123 0dae C7450003 	               movl $3, (%ebp)
 1123      000000
 1124 0db5 E8F8F3FF 	               call func_ADD
 1124      FF
 1125 0dba E8F3F3FF 	               call func_ADD
 1125      FF
 1126 0dbf E8FDF3FF 	               call func_SUB
 1126      FF
 1127 0dc4 E8B6F3FF 	               call func_DUP
 1127      FF
 1128 0dc9 E811F4FF 	               call func_DTOR                   # DTOR
 1128      FF
 1129 0dce E80CF4FF 	               call func_DTOR                   # DTOR
 1129      FF
 1130 0dd3 83C504   	               addl $4, %ebp                    # PUSH $20, CLITERAL 20
 1131 0dd6 C7450014 	               movl $20, (%ebp)
 1131      000000
 1132 0ddd E86BF3FF 	               call func_FETCH
 1132      FF
 1133 0de2 E81DF4FF 	               call func_RTOD                   # RTOD
 1133      FF
 1134 0de7 E893F3FF 	               call func_DUP
 1134      FF
 1135 0dec E8EEF3FF 	               call func_DTOR                   # DTOR
 1135      FF
 1136 0df1 E86BF3FF 	               call func_STORE
 1136      FF
 1137 0df6 E809F4FF 	               call func_RTOD                   # RTOD
 1137      FF
 1138 0dfb 83C504   	               addl $4, %ebp                    # PUSH $4, CLITERAL 4
 1139 0dfe C7450004 	               movl $4, (%ebp)
 1139      000000
 1140 0e05 E8A8F3FF 	               call func_ADD
GAS LISTING fasm.s 			page 29


 1140      FF
 1141 0e0a E8D0F3FF 	               call func_DTOR                   # DTOR
 1141      FF
 1142 0e0f 83C504   	               addl $4, %ebp                    # PUSH $16, CLITERAL 16
 1143 0e12 C7450010 	               movl $16, (%ebp)
 1143      000000
 1144 0e19 E82FF3FF 	               call func_FETCH
 1144      FF
 1145 0e1e E8E1F3FF 	               call func_RTOD                   # RTOD
 1145      FF
 1146 0e23 E857F3FF 	               call func_DUP
 1146      FF
 1147 0e28 E8B2F3FF 	               call func_DTOR                   # DTOR
 1147      FF
 1148 0e2d E82FF3FF 	               call func_STORE
 1148      FF
 1149 0e32 E8CDF3FF 	               call func_RTOD                   # RTOD
 1149      FF
 1150 0e37 83C504   	               addl $4, %ebp                    # PUSH $4, CLITERAL 4
 1151 0e3a C7450004 	               movl $4, (%ebp)
 1151      000000
 1152 0e41 E86CF3FF 	               call func_ADD
 1152      FF
 1153 0e46 E894F3FF 	               call func_DTOR                   # DTOR
 1153      FF
 1154 0e4b 83C504   	               addl $4, %ebp                    # PUSH $0, CLITERAL 0
 1155 0e4e C7450000 	               movl $0, (%ebp)
 1155      000000
 1156 0e55 E8AAF3FF 	               call func_RTOD                   # RTOD
 1156      FF
 1157 0e5a E820F3FF 	               call func_DUP
 1157      FF
 1158 0e5f E87BF3FF 	               call func_DTOR                   # DTOR
 1158      FF
 1159 0e64 E807F3FF 	               call func_CSTORE
 1159      FF
 1160 0e69 E896F3FF 	               call func_RTOD                   # RTOD
 1160      FF
 1161 0e6e 83C504   	               addl $4, %ebp                    # PUSH $1, CLITERAL 1
 1162 0e71 C7450001 	               movl $1, (%ebp)
 1162      000000
 1163 0e78 E835F3FF 	               call func_ADD
 1163      FF
 1164 0e7d E85DF3FF 	               call func_DTOR                   # DTOR
 1164      FF
 1165 0e82 E87DF3FF 	               call func_RTOD                   # RTOD
 1165      FF
 1166 0e87 E857F9FF 	               call L000003C3
 1166      FF
 1167 0e8c E873F3FF 	               call func_RTOD                   # RTOD
 1167      FF
 1168 0e91 83C504   	               addl $4, %ebp                    # PUSH $20, CLITERAL 20
 1169 0e94 C7450014 	               movl $20, (%ebp)
 1169      000000
 1170 0e9b E8C1F2FF 	               call func_STORE
 1170      FF
 1171 0ea0 C3       	               ret
GAS LISTING fasm.s 			page 30


 1172              	L0000064B:                                      # WORD is-num-char? (F7F6)
 1173 0ea1 E8D9F2FF 	               call func_DUP
 1173      FF
 1174 0ea6 83C504   	               addl $4, %ebp                    # PUSH $48, CLITERAL 48
 1175 0ea9 C7450030 	               movl $48, (%ebp)
 1175      000000
 1176 0eb0 83C504   	               addl $4, %ebp                    # PUSH $57, CLITERAL 57
 1177 0eb3 C7450039 	               movl $57, (%ebp)
 1177      000000
 1178 0eba E836FAFF 	               call L0000041A
 1178      FF
 1179 0ebf 8B4500   	               movl (%ebp), %eax                # POP to %eax, JMPZ
 1180 0ec2 83ED04   	               subl $4, %ebp
 1181 0ec5 39050000 	               cmp %eax, 0
 1181      0000
 1182 0ecb 741A     	               jz L00000665
 1183 0ecd 83C504   	               addl $4, %ebp                    # PUSH $48, CLITERAL 48
 1184 0ed0 C7450030 	               movl $48, (%ebp)
 1184      000000
 1185 0ed7 E8E5F2FF 	               call func_SUB
 1185      FF
 1186 0edc 83C504   	               addl $4, %ebp                    # PUSH $1, CLITERAL 1
 1187 0edf C7450001 	               movl $1, (%ebp)
 1187      000000
 1188 0ee6 C3       	               ret
 1189 0ee7 83C504   	L00000665:     addl $4, %ebp                    # PUSH $6, CLITERAL 6
 1190 0eea C7450006 	               movl $6, (%ebp)
 1190      000000
 1191 0ef1 E860F2FF 	               call func_CFETCH
 1191      FF
 1192 0ef6 83C504   	               addl $4, %ebp                    # PUSH $16, CLITERAL 16
 1193 0ef9 C7450010 	               movl $16, (%ebp)
 1193      000000
 1194 0f00 E860F1FF 	               call func_EQ                     # EQ
 1194      FF
 1195 0f05 8B4500   	               movl (%ebp), %eax                # POP to %eax, JMPZ
 1196 0f08 83ED04   	               subl $4, %ebp
 1197 0f0b 39050000 	               cmp %eax, 0
 1197      0000
 1198 0f11 0F848C00 	               jz L0000069A
 1198      0000
 1199 0f17 E863F2FF 	               call func_DUP
 1199      FF
 1200 0f1c 83C504   	               addl $4, %ebp                    # PUSH $65, CLITERAL 65
 1201 0f1f C7450041 	               movl $65, (%ebp)
 1201      000000
 1202 0f26 83C504   	               addl $4, %ebp                    # PUSH $70, CLITERAL 70
 1203 0f29 C7450046 	               movl $70, (%ebp)
 1203      000000
 1204 0f30 E8C0F9FF 	               call L0000041A
 1204      FF
 1205 0f35 8B4500   	               movl (%ebp), %eax                # POP to %eax, JMPZ
 1206 0f38 83ED04   	               subl $4, %ebp
 1207 0f3b 39050000 	               cmp %eax, 0
 1207      0000
 1208 0f41 741A     	               jz L00000685
 1209 0f43 83C504   	               addl $4, %ebp                    # PUSH $55, CLITERAL 55
GAS LISTING fasm.s 			page 31


 1210 0f46 C7450037 	               movl $55, (%ebp)
 1210      000000
 1211 0f4d E86FF2FF 	               call func_SUB
 1211      FF
 1212 0f52 83C504   	               addl $4, %ebp                    # PUSH $1, CLITERAL 1
 1213 0f55 C7450001 	               movl $1, (%ebp)
 1213      000000
 1214 0f5c C3       	               ret
 1215 0f5d E81DF2FF 	L00000685:     call func_DUP
 1215      FF
 1216 0f62 83C504   	               addl $4, %ebp                    # PUSH $97, CLITERAL 97
 1217 0f65 C7450061 	               movl $97, (%ebp)
 1217      000000
 1218 0f6c 83C504   	               addl $4, %ebp                    # PUSH $102, CLITERAL 102
 1219 0f6f C7450066 	               movl $102, (%ebp)
 1219      000000
 1220 0f76 E87AF9FF 	               call L0000041A
 1220      FF
 1221 0f7b 8B4500   	               movl (%ebp), %eax                # POP to %eax, JMPZ
 1222 0f7e 83ED04   	               subl $4, %ebp
 1223 0f81 39050000 	               cmp %eax, 0
 1223      0000
 1224 0f87 741A     	               jz L0000069A
 1225 0f89 83C504   	               addl $4, %ebp                    # PUSH $87, CLITERAL 87
 1226 0f8c C7450057 	               movl $87, (%ebp)
 1226      000000
 1227 0f93 E829F2FF 	               call func_SUB
 1227      FF
 1228 0f98 83C504   	               addl $4, %ebp                    # PUSH $1, CLITERAL 1
 1229 0f9b C7450001 	               movl $1, (%ebp)
 1229      000000
 1230 0fa2 C3       	               ret
 1231 0fa3 83ED04   	L0000069A:     subl $4, %ebp                    # DROP
 1232 0fa6 83C504   	               addl $4, %ebp                    # PUSH $0, CLITERAL 0
 1233 0fa9 C7450000 	               movl $0, (%ebp)
 1233      000000
 1234 0fb0 C3       	               ret
 1235              	L0000069E:                                      # WORD is-number? (F7E1)
 1236 0fb1 E8C9F1FF 	               call func_DUP
 1236      FF
 1237 0fb6 E8A4F7FF 	               call L0000039D
 1237      FF
 1238 0fbb 83C504   	               addl $4, %ebp                    # PUSH $1, CLITERAL 1
 1239 0fbe C7450001 	               movl $1, (%ebp)
 1239      000000
 1240 0fc5 E8E8F1FF 	               call func_ADD
 1240      FF
 1241 0fca E8B0F1FF 	               call func_DUP
 1241      FF
 1242 0fcf E882F1FF 	               call func_CFETCH
 1242      FF
 1243 0fd4 83C504   	               addl $4, %ebp                    # PUSH $45, CLITERAL 45
 1244 0fd7 C745002D 	               movl $45, (%ebp)
 1244      000000
 1245 0fde E882F0FF 	               call func_EQ                     # EQ
 1245      FF
 1246 0fe3 8B4500   	               movl (%ebp), %eax                # POP to %eax, JMPZ
GAS LISTING fasm.s 			page 32


 1247 0fe6 83ED04   	               subl $4, %ebp
 1248 0fe9 39050000 	               cmp %eax, 0
 1248      0000
 1249 0fef 7420     	               jz L000006C1
 1250 0ff1 83C504   	               addl $4, %ebp                    # PUSH $1, CLITERAL 1
 1251 0ff4 C7450001 	               movl $1, (%ebp)
 1251      000000
 1252 0ffb E8DFF1FF 	               call func_DTOR                   # DTOR
 1252      FF
 1253 1000 83C504   	               addl $4, %ebp                    # PUSH $1, CLITERAL 1
 1254 1003 C7450001 	               movl $1, (%ebp)
 1254      000000
 1255 100a E8A3F1FF 	               call func_ADD
 1255      FF
 1256 100f EB0F     	               jmp L000006C4                    # JMP
 1257 1011 83C504   	L000006C1:     addl $4, %ebp                    # PUSH $0, CLITERAL 0
 1258 1014 C7450000 	               movl $0, (%ebp)
 1258      000000
 1259 101b E8BFF1FF 	               call func_DTOR                   # DTOR
 1259      FF
 1260 1020 E85AF1FF 	L000006C4:     call func_DUP
 1260      FF
 1261 1025 E82CF1FF 	               call func_CFETCH
 1261      FF
 1262 102a 83C504   	               addl $4, %ebp                    # PUSH $0, CLITERAL 0
 1263 102d C7450000 	               movl $0, (%ebp)
 1263      000000
 1264 1034 E82CF0FF 	               call func_EQ                     # EQ
 1264      FF
 1265 1039 8B4500   	               movl (%ebp), %eax                # POP to %eax, JMPZ
 1266 103c 83ED04   	               subl $4, %ebp
 1267 103f 39050000 	               cmp %eax, 0
 1267      0000
 1268 1045 7416     	               jz L000006D4
 1269 1047 83ED04   	               subl $4, %ebp                    # DROP
 1270 104a E8B5F1FF 	               call func_RTOD                   # RTOD
 1270      FF
 1271 104f 83ED04   	               subl $4, %ebp                    # DROP
 1272 1052 83C504   	               addl $4, %ebp                    # PUSH $0, CLITERAL 0
 1273 1055 C7450000 	               movl $0, (%ebp)
 1273      000000
 1274 105c C3       	               ret
 1275 105d 83C504   	L000006D4:     addl $4, %ebp                    # PUSH $0, CLITERAL 0
 1276 1060 C7450000 	               movl $0, (%ebp)
 1276      000000
 1277 1067 E873F1FF 	               call func_DTOR                   # DTOR
 1277      FF
 1278 106c E80EF1FF 	L000006D7:     call func_DUP
 1278      FF
 1279 1071 E8E0F0FF 	               call func_CFETCH
 1279      FF
 1280 1076 E804F1FF 	               call func_DUP
 1280      FF
 1281 107b 83C504   	               addl $4, %ebp                    # PUSH $0, CLITERAL 0
 1282 107e C7450000 	               movl $0, (%ebp)
 1282      000000
 1283 1085 E8DBEFFF 	               call func_EQ                     # EQ
GAS LISTING fasm.s 			page 33


 1283      FF
 1284 108a 8B4500   	               movl (%ebp), %eax                # POP to %eax, JMPZ
 1285 108d 83ED04   	               subl $4, %ebp
 1286 1090 39050000 	               cmp %eax, 0
 1286      0000
 1287 1096 743D     	               jz L000006F2
 1288 1098 83ED04   	               subl $4, %ebp                    # DROP
 1289 109b 83ED04   	               subl $4, %ebp                    # DROP
 1290 109e E861F1FF 	               call func_RTOD                   # RTOD
 1290      FF
 1291 10a3 E85CF1FF 	               call func_RTOD                   # RTOD
 1291      FF
 1292 10a8 8B4500   	               movl (%ebp), %eax                # POP to %eax, JMPZ
 1293 10ab 83ED04   	               subl $4, %ebp
 1294 10ae 39050000 	               cmp %eax, 0
 1294      0000
 1295 10b4 7414     	               jz L000006EF
 1296 10b6 83C504   	               addl $4, %ebp                    # PUSH $0, CLITERAL 0
 1297 10b9 C7450000 	               movl $0, (%ebp)
 1297      000000
 1298 10c0 E8C4F0FF 	               call func_SWAP
 1298      FF
 1299 10c5 E8F7F0FF 	               call func_SUB
 1299      FF
 1300 10ca 83C504   	L000006EF:     addl $4, %ebp                    # PUSH $1, CLITERAL 1
 1301 10cd C7450001 	               movl $1, (%ebp)
 1301      000000
 1302 10d4 C3       	               ret
 1303 10d5 E8C7FDFF 	L000006F2:     call L0000064B
 1303      FF
 1304 10da 8B4500   	               movl (%ebp), %eax                # POP to %eax, JMPZ
 1305 10dd 83ED04   	               subl $4, %ebp
 1306 10e0 39050000 	               cmp %eax, 0
 1306      0000
 1307 10e6 7434     	               jz L0000070B
 1308 10e8 E817F1FF 	               call func_RTOD                   # RTOD
 1308      FF
 1309 10ed 83C504   	               addl $4, %ebp                    # PUSH $6, CLITERAL 6
 1310 10f0 C7450006 	               movl $6, (%ebp)
 1310      000000
 1311 10f7 E85AF0FF 	               call func_CFETCH
 1311      FF
 1312 10fc E8CFF0FF 	               call func_MUL
 1312      FF
 1313 1101 E8ACF0FF 	               call func_ADD
 1313      FF
 1314 1106 E8D4F0FF 	               call func_DTOR                   # DTOR
 1314      FF
 1315 110b 83C504   	               addl $4, %ebp                    # PUSH $1, CLITERAL 1
 1316 110e C7450001 	               movl $1, (%ebp)
 1316      000000
 1317 1115 E898F0FF 	               call func_ADD
 1317      FF
 1318 111a EB1E     	               jmp L00000713                    # JMP
 1319 111c 83ED04   	L0000070B:     subl $4, %ebp                    # DROP
 1320 111f E8E0F0FF 	               call func_RTOD                   # RTOD
 1320      FF
GAS LISTING fasm.s 			page 34


 1321 1124 83ED04   	               subl $4, %ebp                    # DROP
 1322 1127 E8D8F0FF 	               call func_RTOD                   # RTOD
 1322      FF
 1323 112c 83ED04   	               subl $4, %ebp                    # DROP
 1324 112f 83C504   	               addl $4, %ebp                    # PUSH $0, CLITERAL 0
 1325 1132 C7450000 	               movl $0, (%ebp)
 1325      000000
 1326 1139 C3       	               ret
 1327 113a E92DFFFF 	L00000713:     jmp L000006D7                    # JMP
 1327      FF
 1328 113f C3       	               ret
 1329              	L00000719:                                      # WORD >IN (F7D3)
 1330 1140 83C504   	               addl $4, %ebp                    # PUSH $1828, LITERAL 1828
 1331 1143 C7450024 	               movl $1828, (%ebp)
 1331      070000
 1332 114a C3       	               ret
 1333 114b 00       	               .byte 0x00
 1334 114c 00       	               .byte 0x00
 1335 114d 00       	               .byte 0x00
 1336 114e 00       	               .byte 0x00
 1337 114f C3       	               ret
 1338              	L00000729:                                      # WORD CREATE-NAME (F7BD)
 1339 1150 E8EBFFFF 	               call L00000719
 1339      FF
 1340 1155 E8F3EFFF 	               call func_FETCH
 1340      FF
 1341 115a E8D9F9FF 	               call L00000525
 1341      FF
 1342 115f E8DCFFFF 	               call L00000719
 1342      FF
 1343 1164 E8F8EFFF 	               call func_STORE
 1343      FF
 1344 1169 E8D2FFFF 	               call L00000719
 1344      FF
 1345 116e E8DAEFFF 	               call func_FETCH
 1345      FF
 1346 1173 E8DEEFFF 	               call func_CFETCH
 1346      FF
 1347 1178 83C504   	               addl $4, %ebp                    # PUSH $0, CLITERAL 0
 1348 117b C7450000 	               movl $0, (%ebp)
 1348      000000
 1349 1182 E8DEEEFF 	               call func_EQ                     # EQ
 1349      FF
 1350 1187 8B4500   	               movl (%ebp), %eax                # POP to %eax, JMPZ
 1351 118a 83ED04   	               subl $4, %ebp
 1352 118d 39050000 	               cmp %eax, 0
 1352      0000
 1353 1193 7401     	               jz L0000074F
 1354 1195 C3       	               ret
 1355 1196 E8A5FFFF 	L0000074F:     call L00000719
 1355      FF
 1356 119b E8ADEFFF 	               call func_FETCH
 1356      FF
 1357 11a0 E8D9F9FF 	               call L00000549
 1357      FF
 1358 11a5 E896FFFF 	               call L00000719
 1358      FF
GAS LISTING fasm.s 			page 35


 1359 11aa E8B2EFFF 	               call func_STORE
 1359      FF
 1360 11af E8C5FBFF 	               call L00000606
 1360      FF
 1361 11b4 83C504   	               addl $4, %ebp                    # PUSH $24, CLITERAL 24
 1362 11b7 C7450018 	               movl $24, (%ebp)
 1362      000000
 1363 11be E89DF0FF 	               call L00000068
 1363      FF
 1364 11c3 83C504   	               addl $4, %ebp                    # PUSH $20, CLITERAL 20
 1365 11c6 C7450014 	               movl $20, (%ebp)
 1365      000000
 1366 11cd E87BEFFF 	               call func_FETCH
 1366      FF
 1367 11d2 E8CBF0FF 	               call L0000007B
 1367      FF
 1368 11d7 C3       	               ret
 1369              	L00000775:                                      # WORD : (F7B1)
 1370 11d8 E873FFFF 	               call L00000729
 1370      FF
 1371 11dd 83C504   	               addl $4, %ebp                    # PUSH $1, CLITERAL 1
 1372 11e0 C7450001 	               movl $1, (%ebp)
 1372      000000
 1373 11e7 83C504   	               addl $4, %ebp                    # PUSH $32, CLITERAL 32
 1374 11ea C7450020 	               movl $32, (%ebp)
 1374      000000
 1375 11f1 E86BEFFF 	               call func_STORE
 1375      FF
 1376 11f6 C3       	               ret
 1377              	L00000785:                                      # WORD ; (F7A5)
 1378 11f7 E898F1FF 	               call L00000115
 1378      FF
 1379 11fc 83C504   	               addl $4, %ebp                    # PUSH $0, CLITERAL 0
 1380 11ff C7450000 	               movl $0, (%ebp)
 1380      000000
 1381 1206 83C504   	               addl $4, %ebp                    # PUSH $32, CLITERAL 32
 1382 1209 C7450020 	               movl $32, (%ebp)
 1382      000000
 1383 1210 E84CEFFF 	               call func_STORE
 1383      FF
 1384 1215 C3       	               ret
 1385              	L00000795:                                      # WORD execute-word (F78E)
 1386 1216 E864EFFF 	               call func_DUP
 1386      FF
 1387 121b E891FDFF 	               call L0000069E
 1387      FF
 1388 1220 8B4500   	               movl (%ebp), %eax                # POP to %eax, JMPZ
 1389 1223 83ED04   	               subl $4, %ebp
 1390 1226 39050000 	               cmp %eax, 0
 1390      0000
 1391 122c 745E     	               jz L000007D6
 1392 122e E856EFFF 	               call func_SWAP
 1392      FF
 1393 1233 83ED04   	               subl $4, %ebp                    # DROP
 1394 1236 E8F5F2FF 	               call L0000026C
 1394      FF
 1395 123b 8B4500   	               movl (%ebp), %eax                # POP to %eax, JMPZ
GAS LISTING fasm.s 			page 36


 1396 123e 83ED04   	               subl $4, %ebp
 1397 1241 39050000 	               cmp %eax, 0
 1397      0000
 1398 1247 7442     	               jz L000007D5
 1399 1249 E831EFFF 	               call func_DUP
 1399      FF
 1400 124e 83C504   	               addl $4, %ebp                    # PUSH $255, CLITERAL 255
 1401 1251 C74500FF 	               movl $255, (%ebp)
 1401      000000
 1402 1258 E865EEFF 	               call func_GT                     # GT
 1402      FF
 1403 125d 8B4500   	               movl (%ebp), %eax                # POP to %eax, JMPZ
 1404 1260 83ED04   	               subl $4, %ebp
 1405 1263 39050000 	               cmp %eax, 0
 1405      0000
 1406 1269 740C     	               jz L000007C9
 1407 126b E8A8F0FF 	               call L000000A4
 1407      FF
 1408 1270 E82DF0FF 	               call L0000007B
 1408      FF
 1409 1275 EB14     	               jmp L000007D5                    # JMP
 1410 1277 83C504   	L000007C9:     addl $4, %ebp                    # PUSH $14, CLITERAL 14
 1411 127a C745000E 	               movl $14, (%ebp)
 1411      000000
 1412 1281 E8DAEFFF 	               call L00000068
 1412      FF
 1413 1286 E8D5EFFF 	               call L00000068
 1413      FF
 1414 128b C3       	L000007D5:     ret
 1415 128c E8EEEEFF 	L000007D6:     call func_DUP
 1415      FF
 1416 1291 E80EFAFF 	               call L000005C4
 1416      FF
 1417 1296 8B4500   	               movl (%ebp), %eax                # POP to %eax, JMPZ
 1418 1299 83ED04   	               subl $4, %ebp
 1419 129c 39050000 	               cmp %eax, 0
 1419      0000
 1420 12a2 0F842301 	               jz L00000845
 1420      0000
 1421 12a8 E8DCEEFF 	               call func_SWAP
 1421      FF
 1422 12ad 83ED04   	               subl $4, %ebp                    # DROP
 1423 12b0 E87BF2FF 	               call L0000026C
 1423      FF
 1424 12b5 8B4500   	               movl (%ebp), %eax                # POP to %eax, JMPZ
 1425 12b8 83ED04   	               subl $4, %ebp
 1426 12bb 39050000 	               cmp %eax, 0
 1426      0000
 1427 12c1 0F84E900 	               jz L0000083E
 1427      0000
 1428 12c7 E8B3EEFF 	               call func_DUP
 1428      FF
 1429 12cc 83C504   	               addl $4, %ebp                    # PUSH $2, CLITERAL 2
 1430 12cf C7450002 	               movl $2, (%ebp)
 1430      000000
 1431 12d6 83C504   	               addl $4, %ebp                    # PUSH $4, CLITERAL 4
 1432 12d9 C7450004 	               movl $4, (%ebp)
GAS LISTING fasm.s 			page 37


 1432      000000
 1433 12e0 E8EBEEFF 	               call func_MUL
 1433      FF
 1434 12e5 E8C8EEFF 	               call func_ADD
 1434      FF
 1435 12ea E867EEFF 	               call func_CFETCH
 1435      FF
 1436 12ef 83C504   	               addl $4, %ebp                    # PUSH $1, CLITERAL 1
 1437 12f2 C7450001 	               movl $1, (%ebp)
 1437      000000
 1438 12f9 E867EDFF 	               call func_EQ                     # EQ
 1438      FF
 1439 12fe 8B4500   	               movl (%ebp), %eax                # POP to %eax, JMPZ
 1440 1301 83ED04   	               subl $4, %ebp
 1441 1304 39050000 	               cmp %eax, 0
 1441      0000
 1442 130a 741F     	               jz L00000808
 1443 130c 83C504   	               addl $4, %ebp                    # PUSH $4, CLITERAL 4
 1444 130f C7450004 	               movl $4, (%ebp)
 1444      000000
 1445 1316 E897EEFF 	               call func_ADD
 1445      FF
 1446 131b E82DEEFF 	               call func_FETCH
 1446      FF
 1447 1320 E8BAEEFF 	               call func_DTOR                   # DTOR
 1447      FF
 1448 1325 C3       	               ret
 1449 1326 E9830000 	               jmp L00000839                    # JMP
 1449      00
 1450 132b E84FEEFF 	L00000808:     call func_DUP
 1450      FF
 1451 1330 83C504   	               addl $4, %ebp                    # PUSH $2, CLITERAL 2
 1452 1333 C7450002 	               movl $2, (%ebp)
 1452      000000
 1453 133a 83C504   	               addl $4, %ebp                    # PUSH $4, CLITERAL 4
 1454 133d C7450004 	               movl $4, (%ebp)
 1454      000000
 1455 1344 E887EEFF 	               call func_MUL
 1455      FF
 1456 1349 E864EEFF 	               call func_ADD
 1456      FF
 1457 134e E803EEFF 	               call func_CFETCH
 1457      FF
 1458 1353 83C504   	               addl $4, %ebp                    # PUSH $2, CLITERAL 2
 1459 1356 C7450002 	               movl $2, (%ebp)
 1459      000000
 1460 135d E803EDFF 	               call func_EQ                     # EQ
 1460      FF
 1461 1362 8B4500   	               movl (%ebp), %eax                # POP to %eax, JMPZ
 1462 1365 83ED04   	               subl $4, %ebp
 1463 1368 39050000 	               cmp %eax, 0
 1463      0000
 1464 136e 7420     	               jz L0000082B
 1465 1370 E80FF0FF 	               call L00000108
 1465      FF
 1466 1375 83C504   	               addl $4, %ebp                    # PUSH $4, CLITERAL 4
 1467 1378 C7450004 	               movl $4, (%ebp)
GAS LISTING fasm.s 			page 38


 1467      000000
 1468 137f E82EEEFF 	               call func_ADD
 1468      FF
 1469 1384 E8C4EDFF 	               call func_FETCH
 1469      FF
 1470 1389 E814EFFF 	               call L0000007B
 1470      FF
 1471 138e EB1E     	               jmp L00000839                    # JMP
 1472 1390 E8EFEFFF 	L0000082B:     call L00000108
 1472      FF
 1473 1395 83C504   	               addl $4, %ebp                    # PUSH $4, CLITERAL 4
 1474 1398 C7450004 	               movl $4, (%ebp)
 1474      000000
 1475 139f E80EEEFF 	               call func_ADD
 1475      FF
 1476 13a4 E8A4EDFF 	               call func_FETCH
 1476      FF
 1477 13a9 E8F4EEFF 	               call L0000007B
 1477      FF
 1478 13ae EB1A     	L00000839:     jmp L00000844                    # JMP
 1479 13b0 83C504   	L0000083E:     addl $4, %ebp                    # PUSH $4, CLITERAL 4
 1480 13b3 C7450004 	               movl $4, (%ebp)
 1480      000000
 1481 13ba E8F3EDFF 	               call func_ADD
 1481      FF
 1482 13bf E889EDFF 	               call func_FETCH
 1482      FF
 1483 13c4 E816EEFF 	               call func_DTOR                   # DTOR
 1483      FF
 1484 13c9 C3       	               ret
 1485 13ca C3       	L00000844:     ret
 1486 13cb E8BFF2FF 	L00000845:     call L00000344
 1486      FF
 1487 13d0 E8D9F2FF 	               call L00000350
 1487      FF
 1488 13d5 83C504   	               addl $4, %ebp                    # PUSH $63, CLITERAL 63
 1489 13d8 C745003F 	               movl $63, (%ebp)
 1489      000000
 1490 13df E89BEDFF 	               call func_DUP
 1490      FF
 1491 13e4 E842EDFF 	               call func_EMIT                   # EMIT
 1491      FF
 1492 13e9 E83DEDFF 	               call func_EMIT                   # EMIT
 1492      FF
 1493 13ee E83DF3FF 	               call L0000037E
 1493      FF
 1494 13f3 E855EDFF 	               call func_FETCH
 1494      FF
 1495 13f8 8B4500   	               movl (%ebp), %eax                # POP to %eax, JMPZ
 1496 13fb 83ED04   	               subl $4, %ebp
 1497 13fe 39050000 	               cmp %eax, 0
 1497      0000
 1498 1404 741E     	               jz L0000086E
 1499 1406 E825F3FF 	               call L0000037E
 1499      FF
 1500 140b E83DEDFF 	               call func_FETCH
 1500      FF
GAS LISTING fasm.s 			page 39


 1501              	                                                # FCLOSE (TODO)
 1502 1410 83C504   	               addl $4, %ebp                    # PUSH $0, CLITERAL 0
 1503 1413 C7450000 	               movl $0, (%ebp)
 1503      000000
 1504 141a E811F3FF 	               call L0000037E
 1504      FF
 1505 141f E83DEDFF 	               call func_STORE
 1505      FF
 1506 1424 83C504   	L0000086E:     addl $4, %ebp                    # PUSH $0, CLITERAL 0
 1507 1427 C7450000 	               movl $0, (%ebp)
 1507      000000
 1508 142e 83C504   	               addl $4, %ebp                    # PUSH $32, CLITERAL 32
 1509 1431 C7450020 	               movl $32, (%ebp)
 1509      000000
 1510 1438 E824EDFF 	               call func_STORE
 1510      FF
 1511 143d C3       	               ret
 1512              	L00000874:                                      # WORD execute-line (F777)
 1513 143e E8FDFCFF 	L00000879:     call L00000719
 1513      FF
 1514 1443 E805EDFF 	               call func_FETCH
 1514      FF
 1515 1448 E8EBF6FF 	               call L00000525
 1515      FF
 1516 144d E8EEFCFF 	               call L00000719
 1516      FF
 1517 1452 E80AEDFF 	               call func_STORE
 1517      FF
 1518 1457 E8E4FCFF 	               call L00000719
 1518      FF
 1519 145c E8ECECFF 	               call func_FETCH
 1519      FF
 1520 1461 E8F0ECFF 	               call func_CFETCH
 1520      FF
 1521 1466 83C504   	               addl $4, %ebp                    # PUSH $0, CLITERAL 0
 1522 1469 C7450000 	               movl $0, (%ebp)
 1522      000000
 1523 1470 E8F0EBFF 	               call func_EQ                     # EQ
 1523      FF
 1524 1475 8B4500   	               movl (%ebp), %eax                # POP to %eax, JMPZ
 1525 1478 83ED04   	               subl $4, %ebp
 1526 147b 39050000 	               cmp %eax, 0
 1526      0000
 1527 1481 7401     	               jz L0000089A
 1528 1483 C3       	               ret
 1529 1484 E8B7FCFF 	L0000089A:     call L00000719
 1529      FF
 1530 1489 E8BFECFF 	               call func_FETCH
 1530      FF
 1531 148e E8EBF6FF 	               call L00000549
 1531      FF
 1532 1493 E8A8FCFF 	               call L00000719
 1532      FF
 1533 1498 E8C4ECFF 	               call func_STORE
 1533      FF
 1534 149d E874FDFF 	               call L00000795
 1534      FF
GAS LISTING fasm.s 			page 40


 1535 14a2 EB9A     	               jmp L00000879                    # JMP
 1536 14a4 C3       	               ret
 1537              	L000008B6:                                      # WORD ok (F76A)
 1538 14a5 83C504   	               addl $4, %ebp                    # PUSH $32, CLITERAL 32
 1539 14a8 C7450020 	               movl $32, (%ebp)
 1539      000000
 1540 14af E899ECFF 	               call func_FETCH
 1540      FF
 1541 14b4 83C504   	               addl $4, %ebp                    # PUSH $0, CLITERAL 0
 1542 14b7 C7450000 	               movl $0, (%ebp)
 1542      000000
 1543 14be E8A2EBFF 	               call func_EQ                     # EQ
 1543      FF
 1544 14c3 8B4500   	               movl (%ebp), %eax                # POP to %eax, JMPZ
 1545 14c6 83ED04   	               subl $4, %ebp
 1546 14c9 39050000 	               cmp %eax, 0
 1546      0000
 1547 14cf 7456     	               jz L00000904
 1548 14d1 E85AF2FF 	               call L0000037E
 1548      FF
 1549 14d6 E872ECFF 	               call func_FETCH
 1549      FF
 1550 14db 83C504   	               addl $4, %ebp                    # PUSH $0, CLITERAL 0
 1551 14de C7450000 	               movl $0, (%ebp)
 1551      000000
 1552 14e5 E87BEBFF 	               call func_EQ                     # EQ
 1552      FF
 1553 14ea 8B4500   	               movl (%ebp), %eax                # POP to %eax, JMPZ
 1554 14ed 83ED04   	               subl $4, %ebp
 1555 14f0 39050000 	               cmp %eax, 0
 1555      0000
 1556 14f6 7419     	               jz L000008EE
 1557              	                                                # SLITERAL (08d5) [ Ok]
 1558 14f8 E864ECFF 	               call func_STORE
 1558      FF
 1559              	                                                # FCLOSE (TODO)
 1560 14fd 4F       	               .byte 0x4f
 1561 14fe 6B       	               .byte 0x6b
 1562 14ff 00       	               .byte 0x00
 1563 1500 E88AF1FF 	               call L00000344
 1563      FF
 1564 1505 E8A4F1FF 	               call L00000350
 1564      FF
 1565 150a E802F2FF 	               call L00000372
 1565      FF
 1566 150f EB14     	               jmp L000008FF                    # JMP
 1567              	L000008EE:                                      # SLITERAL (08ef) [.ok.]
 1568 1511 E873ECFF 	               call func_SWAP
 1568      FF
 1569 1516 2E       	               .byte 0x2e
 1570 1517 6F       	               .byte 0x6f
 1571 1518 6B       	               .byte 0x6b
 1572 1519 2E       	               .byte 0x2e
 1573 151a 00       	               .byte 0x00
 1574 151b E86FF1FF 	               call L00000344
 1574      FF
 1575 1520 E889F1FF 	               call L00000350
GAS LISTING fasm.s 			page 41


 1575      FF
 1576 1525 EB24     	L000008FF:     jmp L00000915                    # JMP
 1577              	L00000904:                                      # SLITERAL (0905) [(ok)]
 1578 1527 E85DECFF 	               call func_SWAP
 1578      FF
 1579 152c 8B4500   	               movl (%ebp), %eax                # POP to %eax
 1580 152f 83ED04   	               subl $4, %ebp
 1581 1532 8B5D00   	               movl (%ebp), %ebx                # POP to %ebx
 1582 1535 83ED04   	               subl $4, %ebp
 1583              	               # COMPAREI %eax, %ebx
 1584 1538 83C504   	               addl $4, %ebp                    # PUSH %ebx
 1585 153b 895D00   	               movl %ebx, (%ebp)
 1586 153e 6F       	               .byte 0x6f
 1587 153f 6B       	               .byte 0x6b
 1588              	                                                # USINIT (TODO)
 1589 1540 00       	               .byte 0x00
 1590 1541 E849F1FF 	               call L00000344
 1590      FF
 1591 1546 E863F1FF 	               call L00000350
 1591      FF
 1592 154b C3       	L00000915:     ret
 1593              	L00000916:                                      # WORD mainloop (F757)
 1594 154c 83C504   	               addl $4, %ebp                    # PUSH $0, CLITERAL 0
 1595 154f C7450000 	               movl $0, (%ebp)
 1595      000000
 1596 1556 83C504   	               addl $4, %ebp                    # PUSH $32, CLITERAL 32
 1597 1559 C7450020 	               movl $32, (%ebp)
 1597      000000
 1598 1560 E8FCEBFF 	               call func_STORE
 1598      FF
 1599 1565 E83BFFFF 	L00000920:     call L000008B6
 1599      FF
 1600 156a E8A4F5FF 	               call L00000505
 1600      FF
 1601 156f E80BECFF 	               call func_DUP
 1601      FF
 1602 1574 E8DDEBFF 	               call func_CFETCH
 1602      FF
 1603 1579 8B4500   	               movl (%ebp), %eax                # POP to %eax, JMPZ
 1604 157c 83ED04   	               subl $4, %ebp
 1605 157f 39050000 	               cmp %eax, 0
 1605      0000
 1606 1585 742A     	               jz L0000094A
 1607 1587 E8F3EBFF 	               call func_DUP
 1607      FF
 1608 158c E8CEF1FF 	               call L0000039D
 1608      FF
 1609 1591 83C504   	               addl $4, %ebp                    # PUSH $1, CLITERAL 1
 1610 1594 C7450001 	               movl $1, (%ebp)
 1610      000000
 1611 159b E812ECFF 	               call func_ADD
 1611      FF
 1612 15a0 E89BFBFF 	               call L00000719
 1612      FF
 1613 15a5 E8B7EBFF 	               call func_STORE
 1613      FF
 1614 15aa E88FFEFF 	               call L00000874
GAS LISTING fasm.s 			page 42


 1614      FF
 1615 15af EB39     	               jmp L00000965                    # JMP
 1616 15b1 83ED04   	L0000094A:     subl $4, %ebp                    # DROP
 1617 15b4 E877F1FF 	               call L0000037E
 1617      FF
 1618 15b9 E88FEBFF 	               call func_FETCH
 1618      FF
 1619 15be 8B4500   	               movl (%ebp), %eax                # POP to %eax, JMPZ
 1620 15c1 83ED04   	               subl $4, %ebp
 1621 15c4 39050000 	               cmp %eax, 0
 1621      0000
 1622 15ca 741E     	               jz L00000965
 1623 15cc E85FF1FF 	               call L0000037E
 1623      FF
 1624 15d1 E877EBFF 	               call func_FETCH
 1624      FF
 1625              	                                                # FCLOSE (TODO)
 1626 15d6 83C504   	               addl $4, %ebp                    # PUSH $0, CLITERAL 0
 1627 15d9 C7450000 	               movl $0, (%ebp)
 1627      000000
 1628 15e0 E84BF1FF 	               call L0000037E
 1628      FF
 1629 15e5 E877EBFF 	               call func_STORE
 1629      FF
 1630 15ea E976FFFF 	L00000965:     jmp L00000920                    # JMP
 1630      FF
 1631 15ef C3       	               ret
 1632              	L0000096B:                                      # WORD main (F748)
 1633              	                                                # SLITERAL (0971) [Hello.]
 1634 15f0 E88AEBFF 	               call func_DUP
 1634      FF
 1635 15f5 48       	               .byte 0x48
 1636 15f6 65       	               .byte 0x65
 1637 15f7 6C       	               .byte 0x6c
 1638 15f8 6C       	               .byte 0x6c
 1639 15f9 6F       	               .byte 0x6f
 1640 15fa 2E       	               .byte 0x2e
 1641 15fb 00       	               .byte 0x00
 1642 15fc E88EF0FF 	               call L00000344
 1642      FF
 1643 1601 E8A8F0FF 	               call L00000350
 1643      FF
 1644 1606 83C504   	               addl $4, %ebp                    # PUSH $0, CLITERAL 0
 1645 1609 C7450000 	               movl $0, (%ebp)
 1645      000000
 1646 1610 E81BF1FF 	               call L0000037E
 1646      FF
 1647 1615 E847EBFF 	               call func_STORE
 1647      FF
 1648 161a 83C504   	               addl $4, %ebp                    # PUSH $20, CLITERAL 20
 1649 161d C7450014 	               movl $20, (%ebp)
 1649      000000
 1650 1624 E824EBFF 	               call func_FETCH
 1650      FF
 1651 1629 83C504   	               addl $4, %ebp                    # PUSH $4, CLITERAL 4
 1652 162c C7450004 	               movl $4, (%ebp)
 1652      000000
GAS LISTING fasm.s 			page 43


 1653 1633 E87AEBFF 	               call func_ADD
 1653      FF
 1654 1638 E810EBFF 	               call func_FETCH
 1654      FF
 1655 163d 83C504   	               addl $4, %ebp                    # PUSH $1, CLITERAL 1
 1656 1640 C7450001 	               movl $1, (%ebp)
 1656      000000
 1657 1647 E815EBFF 	               call func_STORE
 1657      FF
 1658 164c E8FBFEFF 	               call L00000916
 1658      FF
 1659 1651 C3       	               ret
 1660              	L0000099B:                                      # WORD reset-data-stack (F72D)
 1661              	L000009A0:                                      # DEPTH (TODO)
 1662 1652 8B4500   	               movl (%ebp), %eax                # POP to %eax, JMPZ
 1663 1655 83ED04   	               subl $4, %ebp
 1664 1658 39050000 	               cmp %eax, 0
 1664      0000
 1665 165e 7405     	               jz L000009AC
 1666 1660 83ED04   	               subl $4, %ebp                    # DROP
 1667 1663 EB01     	               jmp L000009AD                    # JMP
 1668 1665 C3       	L000009AC:     ret
 1669 1666 EBEA     	L000009AD:     jmp L000009A0                    # JMP
 1670 1668 C3       	               ret
 1671              	L000009B3:                                      # WORD RDEPTH (F71C)
 1672 1669 83C504   	               addl $4, %ebp                    # PUSH $0, CLITERAL 0
 1673 166c C7450000 	               movl $0, (%ebp)
 1673      000000
 1674 1673 C3       	               ret
 1675              	L000009BB:                                      # WORD reset-return-stack (F6FF)
 1676 1674 E88BEBFF 	               call func_RTOD                   # RTOD
 1676      FF
 1677 1679 E8EBFFFF 	L000009C1:     call L000009B3
 1677      FF
 1678 167e 8B4500   	               movl (%ebp), %eax                # POP to %eax, JMPZ
 1679 1681 83ED04   	               subl $4, %ebp
 1680 1684 39050000 	               cmp %eax, 0
 1680      0000
 1681 168a 740A     	               jz L000009D2
 1682 168c E873EBFF 	               call func_RTOD                   # RTOD
 1682      FF
 1683 1691 83ED04   	               subl $4, %ebp                    # DROP
 1684 1694 EB06     	               jmp L000009D4                    # JMP
 1685 1696 E844EBFF 	L000009D2:     call func_DTOR                   # DTOR
 1685      FF
 1686 169b C3       	               ret
 1687 169c EBDB     	L000009D4:     jmp L000009C1                    # JMP
 1688 169e C3       	               ret
 1689              	L000009DA:                                      # WORD \ (F6F3)
 1690 169f 83C504   	               addl $4, %ebp                    # PUSH $0, CLITERAL 0
 1691 16a2 C7450000 	               movl $0, (%ebp)
 1691      000000
 1692 16a9 E892FAFF 	               call L00000719
 1692      FF
 1693 16ae E89AEAFF 	               call func_FETCH
 1693      FF
 1694 16b3 E8A9EAFF 	               call func_STORE
GAS LISTING fasm.s 			page 44


 1694      FF
 1695 16b8 C3       	               ret
 1696              	L000009E9:                                      # WORD /MOD (F6E4)
 1697 16b9 E8DEEAFF 	               call func_OVER
 1697      FF
 1698 16be E8D9EAFF 	               call func_OVER
 1698      FF
 1699 16c3 8B5D00   	               movl (%ebp), %ebx                # POP to %ebx, ADD
 1700 16c6 83ED04   	               subl $4, %ebp
 1701 16c9 8B4500   	               movl (%ebp), %eax                # POP to %eax
 1702 16cc 83ED04   	               subl $4, %ebp
 1703 16cf F7F3     	               divl %ebx
 1704 16d1 83C504   	               addl $4, %ebp                    # PUSH %eax
 1705 16d4 894500   	               movl %eax, (%ebp)
 1706 16d7 E8A3EAFF 	               call func_DUP
 1706      FF
 1707 16dc E8FEEAFF 	               call func_DTOR                   # DTOR
 1707      FF
 1708 16e1 E8EAEAFF 	               call func_MUL
 1708      FF
 1709 16e6 E8D6EAFF 	               call func_SUB
 1709      FF
 1710 16eb E814EBFF 	               call func_RTOD                   # RTOD
 1710      FF
 1711 16f0 E894EAFF 	               call func_SWAP
 1711      FF
 1712 16f5 C3       	               ret
 1713              	L000009F8:                                      # WORD (.) (F6D6)
 1714 16f6 E884EAFF 	               call func_DUP
 1714      FF
 1715 16fb 83C504   	               addl $4, %ebp                    # PUSH $0, CLITERAL 0
 1716 16fe C7450000 	               movl $0, (%ebp)
 1716      000000
 1717 1705 E85BE9FF 	               call func_EQ                     # EQ
 1717      FF
 1718 170a 8B4500   	               movl (%ebp), %eax                # POP to %eax, JMPZ
 1719 170d 83ED04   	               subl $4, %ebp
 1720 1710 39050000 	               cmp %eax, 0
 1720      0000
 1721 1716 7413     	               jz L00000A0B
 1722 1718 83ED04   	               subl $4, %ebp                    # DROP
 1723 171b 83C504   	               addl $4, %ebp                    # PUSH $48, CLITERAL 48
 1724 171e C7450030 	               movl $48, (%ebp)
 1724      000000
 1725 1725 E801EAFF 	               call func_EMIT                   # EMIT
 1725      FF
 1726 172a C3       	               ret
 1727 172b E84FEAFF 	L00000A0B:     call func_DUP
 1727      FF
 1728 1730 83C504   	               addl $4, %ebp                    # PUSH $0, CLITERAL 0
 1729 1733 C7450000 	               movl $0, (%ebp)
 1729      000000
 1730 173a E860E9FF 	               call func_LT                     # LT
 1730      FF
 1731 173f 8B4500   	               movl (%ebp), %eax                # POP to %eax, JMPZ
 1732 1742 83ED04   	               subl $4, %ebp
 1733 1745 39050000 	               cmp %eax, 0
GAS LISTING fasm.s 			page 45


 1733      0000
 1734 174b 741B     	               jz L00000A1E
 1735 174d 83C504   	               addl $4, %ebp                    # PUSH $0, CLITERAL 0
 1736 1750 C7450000 	               movl $0, (%ebp)
 1736      000000
 1737 1757 E865EAFF 	               call func_SUB
 1737      FF
 1738 175c 83C504   	               addl $4, %ebp                    # PUSH $1, CLITERAL 1
 1739 175f C7450001 	               movl $1, (%ebp)
 1739      000000
 1740 1766 EB0A     	               jmp L00000A20                    # JMP
 1741 1768 83C504   	L00000A1E:     addl $4, %ebp                    # PUSH $0, CLITERAL 0
 1742 176b C7450000 	               movl $0, (%ebp)
 1742      000000
 1743 1772 E868EAFF 	L00000A20:     call func_DTOR                   # DTOR
 1743      FF
 1744 1777 83C504   	               addl $4, %ebp                    # PUSH $0, CLITERAL 0
 1745 177a C7450000 	               movl $0, (%ebp)
 1745      000000
 1746 1781 E803EAFF 	               call func_SWAP
 1746      FF
 1747 1786 E8F4E9FF 	L00000A24:     call func_DUP
 1747      FF
 1748 178b 8B4500   	               movl (%ebp), %eax                # POP to %eax, JMPZ
 1749 178e 83ED04   	               subl $4, %ebp
 1750 1791 39050000 	               cmp %eax, 0
 1750      0000
 1751 1797 745B     	               jz L00000A47
 1752 1799 83C504   	               addl $4, %ebp                    # PUSH $6, CLITERAL 6
 1753 179c C7450006 	               movl $6, (%ebp)
 1753      000000
 1754 17a3 E8AEE9FF 	               call func_CFETCH
 1754      FF
 1755 17a8 E80CFFFF 	               call L000009E9
 1755      FF
 1756 17ad 83C504   	               addl $4, %ebp                    # PUSH $48, CLITERAL 48
 1757 17b0 C7450030 	               movl $48, (%ebp)
 1757      000000
 1758 17b7 E8E0E9FF 	               call func_OVER
 1758      FF
 1759 17bc 83C504   	               addl $4, %ebp                    # PUSH $9, CLITERAL 9
 1760 17bf C7450009 	               movl $9, (%ebp)
 1760      000000
 1761 17c6 E8F7E8FF 	               call func_GT                     # GT
 1761      FF
 1762 17cb 8B4500   	               movl (%ebp), %eax                # POP to %eax, JMPZ
 1763 17ce 83ED04   	               subl $4, %ebp
 1764 17d1 39050000 	               cmp %eax, 0
 1764      0000
 1765 17d7 740F     	               jz L00000A40
 1766 17d9 83C504   	               addl $4, %ebp                    # PUSH $7, CLITERAL 7
 1767 17dc C7450007 	               movl $7, (%ebp)
 1767      000000
 1768 17e3 E8CAE9FF 	               call func_ADD
 1768      FF
 1769 17e8 E8C5E9FF 	L00000A40:     call func_ADD
 1769      FF
GAS LISTING fasm.s 			page 46


 1770 17ed E897E9FF 	               call func_SWAP
 1770      FF
 1771 17f2 EB45     	               jmp L00000A64                    # JMP
 1772 17f4 83ED04   	L00000A47:     subl $4, %ebp                    # DROP
 1773 17f7 E808EAFF 	               call func_RTOD                   # RTOD
 1773      FF
 1774 17fc 8B4500   	               movl (%ebp), %eax                # POP to %eax, JMPZ
 1775 17ff 83ED04   	               subl $4, %ebp
 1776 1802 39050000 	               cmp %eax, 0
 1776      0000
 1777 1808 740F     	               jz L00000A51
 1778 180a 83C504   	               addl $4, %ebp                    # PUSH $45, CLITERAL 45
 1779 180d C745002D 	               movl $45, (%ebp)
 1779      000000
 1780 1814 E812E9FF 	               call func_EMIT                   # EMIT
 1780      FF
 1781 1819 E861E9FF 	L00000A51:     call func_DUP
 1781      FF
 1782 181e 8B4500   	               movl (%ebp), %eax                # POP to %eax, JMPZ
 1783 1821 83ED04   	               subl $4, %ebp
 1784 1824 39050000 	               cmp %eax, 0
 1784      0000
 1785 182a 7407     	               jz L00000A5D
 1786 182c E8FAE8FF 	               call func_EMIT                   # EMIT
 1786      FF
 1787 1831 EB04     	               jmp L00000A5F                    # JMP
 1788 1833 83ED04   	L00000A5D:     subl $4, %ebp                    # DROP
 1789 1836 C3       	               ret
 1790 1837 EBE0     	L00000A5F:     jmp L00000A51                    # JMP
 1791 1839 E948FFFF 	L00000A64:     jmp L00000A24                    # JMP
 1791      FF
 1792 183e C3       	               ret
 1793              	L00000A6A:                                      # WORD BL (F6C9)
 1794 183f 83C504   	               addl $4, %ebp                    # PUSH $32, CLITERAL 32
 1795 1842 C7450020 	               movl $32, (%ebp)
 1795      000000
 1796 1849 E8DDE8FF 	               call func_EMIT                   # EMIT
 1796      FF
 1797 184e C3       	               ret
 1798              	L00000A73:                                      # WORD . (F6BD)
 1799 184f 83C504   	               addl $4, %ebp                    # PUSH $32, CLITERAL 32
 1800 1852 C7450020 	               movl $32, (%ebp)
 1800      000000
 1801 1859 E8CDE8FF 	               call func_EMIT                   # EMIT
 1801      FF
 1802 185e E893FEFF 	               call L000009F8
 1802      FF
 1803 1863 C3       	               ret
 1804              	L00000A81:                                      # WORD LOAD (F6AE)
 1805 1864 E816E9FF 	               call func_DUP
 1805      FF
 1806 1869 E8F1EEFF 	               call L0000039D
 1806      FF
 1807 186e 83C504   	               addl $4, %ebp                    # PUSH $0, CLITERAL 0
 1808 1871 C7450000 	               movl $0, (%ebp)
 1808      000000
 1809 1878 83C504   	               addl $4, %ebp                    # PUSH $0, CLITERAL 0
GAS LISTING fasm.s 			page 47


 1810 187b C7450000 	               movl $0, (%ebp)
 1810      000000
 1811              	                                                # FOPEN (TODO)
 1812 1882 8B4500   	               movl (%ebp), %eax                # POP to %eax, JMPZ
 1813 1885 83ED04   	               subl $4, %ebp
 1814 1888 39050000 	               cmp %eax, 0
 1814      0000
 1815 188e 740C     	               jz L00000AA1
 1816 1890 E89BEEFF 	               call L0000037E
 1816      FF
 1817 1895 E8C7E8FF 	               call func_STORE
 1817      FF
 1818 189a EB27     	               jmp L00000AC8                    # JMP
 1819 189c 83ED04   	L00000AA1:     subl $4, %ebp                    # DROP
 1820              	                                                # SLITERAL (0aa3) [ unable to open the file.]
 1821 189f E887E8FF 	               call func_EMIT                   # EMIT
 1821      FF
 1822              	                                                # FCLOSE (TODO)
 1823 18a4 75       	               .byte 0x75
 1824 18a5 6E       	               .byte 0x6e
 1825 18a6 61       	               .byte 0x61
 1826 18a7 62       	               .byte 0x62
 1827 18a8 6C       	               .byte 0x6c
 1828 18a9 65       	               .byte 0x65
 1829              	                                                # FCLOSE (TODO)
 1830 18aa 74       	               .byte 0x74
 1831 18ab 6F       	               .byte 0x6f
 1832              	                                                # FCLOSE (TODO)
 1833 18ac 6F       	               .byte 0x6f
 1834 18ad 70       	               .byte 0x70
 1835 18ae 65       	               .byte 0x65
 1836 18af 6E       	               .byte 0x6e
 1837              	                                                # FCLOSE (TODO)
 1838 18b0 74       	               .byte 0x74
 1839 18b1 68       	               .byte 0x68
 1840 18b2 65       	               .byte 0x65
 1841              	                                                # FCLOSE (TODO)
 1842 18b3 66       	               .byte 0x66
 1843 18b4 69       	               .byte 0x69
 1844 18b5 6C       	               .byte 0x6c
 1845 18b6 65       	               .byte 0x65
 1846 18b7 2E       	               .byte 0x2e
 1847 18b8 00       	               .byte 0x00
 1848 18b9 E8D1EDFF 	               call L00000344
 1848      FF
 1849 18be E8EBEDFF 	               call L00000350
 1849      FF
 1850 18c3 C3       	L00000AC8:     ret
 1851              	L00000AC9:                                      # WORD LL (F6A1)
 1852              	                                                # SLITERAL (0acf) [words.4th]
 1853 18c4 8B4500   	               movl (%ebp), %eax                # POP to %eax, JMPZ
 1854 18c7 83ED04   	               subl $4, %ebp
 1855 18ca 39050000 	               cmp %eax, 0
 1855      0000
 1856 18d0 E88FFFFF 	               call L00000A81
 1856      FF
 1857 18d5 C3       	               ret
GAS LISTING fasm.s 			page 48


 1858              	L00000AE0:                                      # WORD exception (F68D)
 1859              	                                                # SLITERAL (0ae6) [ (exception) ]
 1860              	                                                # OR (TODO)
 1861              	                                                # FCLOSE (TODO)
 1862 18d6 8B4500   	               movl (%ebp), %eax                # POP to %eax
 1863 18d9 83ED04   	               subl $4, %ebp
 1864 18dc 8B5D00   	               movl (%ebp), %ebx                # POP to %ebx
 1865 18df 83ED04   	               subl $4, %ebp
 1866              	               # COMPAREI %eax, %ebx
 1867 18e2 83C504   	               addl $4, %ebp                    # PUSH %ebx
 1868 18e5 895D00   	               movl %ebx, (%ebp)
 1869 18e8 65       	               .byte 0x65
 1870 18e9 78       	               .byte 0x78
 1871 18ea 63       	               .byte 0x63
 1872 18eb 65       	               .byte 0x65
 1873 18ec 70       	               .byte 0x70
 1874 18ed 74       	               .byte 0x74
 1875 18ee 69       	               .byte 0x69
 1876 18ef 6F       	               .byte 0x6f
 1877 18f0 6E       	               .byte 0x6e
 1878              	                                                # USINIT (TODO)
 1879              	                                                # FCLOSE (TODO)
 1880 18f1 00       	               .byte 0x00
 1881 18f2 E898EDFF 	               call L00000344
 1881      FF
 1882 18f7 E8B2EDFF 	               call L00000350
 1882      FF
 1883 18fc 83C504   	               addl $4, %ebp                    # PUSH $0, CLITERAL 0
 1884 18ff C7450000 	               movl $0, (%ebp)
 1884      000000
 1885 1906 83C504   	               addl $4, %ebp                    # PUSH $32, CLITERAL 32
 1886 1909 C7450020 	               movl $32, (%ebp)
 1886      000000
 1887 1910 E84CE8FF 	               call func_STORE
 1887      FF
 1888 1915 E838FDFF 	               call L0000099B
 1888      FF
 1889 191a E855FDFF 	               call L000009BB
 1889      FF
 1890 191f E828FCFF 	               call L00000916
 1890      FF
 1891 1924 C3       	               ret
 1892              	                                                # 
 1893              	# End of code, Dictionary:
 1894              	#
 1895              	
 1896              	L0000F68D:     # Next: 0000f6a1                 # # WORD: exception
 1897              	               # XT: 00000ae0                   # Flags: 0
 1898              	               # Len: 2784                      #  09 65 78 63 65 70 74 69 6f 6e
 1899              	L0000F6A1:     # Next: 0000f6ae                 # # WORD: LL
 1900              	               # XT: 00000ac9                   # Flags: 0
 1901              	               # Len: 2761                      #  02 4c 4c
 1902              	L0000F6AE:     # Next: 0000f6bd                 # # WORD: LOAD
 1903              	               # XT: 00000a81                   # Flags: 0
 1904              	               # Len: 2689                      #  04 4c 4f 41 44
 1905              	L0000F6BD:     # Next: 0000f6c9                 # # WORD: .
 1906              	               # XT: 00000a73                   # Flags: 0
GAS LISTING fasm.s 			page 49


 1907              	               # Len: 2675                      #  01 2e
 1908              	L0000F6C9:     # Next: 0000f6d6                 # # WORD: BL
 1909              	               # XT: 00000a6a                   # Flags: 2
 1910              	               # Len: 2666                      #  02 42 4c
 1911              	L0000F6D6:     # Next: 0000f6e4                 # # WORD: (.)
 1912              	               # XT: 000009f8                   # Flags: 0
 1913              	               # Len: 2552                      #  03 28 2e 29
 1914              	L0000F6E4:     # Next: 0000f6f3                 # # WORD: /MOD
 1915              	               # XT: 000009e9                   # Flags: 0
 1916              	               # Len: 2537                      #  04 2f 4d 4f 44
 1917              	L0000F6F3:     # Next: 0000f6ff                 # # WORD: \
 1918              	               # XT: 000009da                   # Flags: 1
 1919              	               # Len: 2522                      #  01 5c
 1920              	L0000F6FF:     # Next: 0000f71c                 # # WORD: reset-return-stack
 1921              	               # XT: 000009bb                   # Flags: 0
 1922              	               # Len: 2491                      #  12 72 65 73 65 74 2d 72 65 74 75 72 6e 2d 73 74 
 1923              	L0000F71C:     # Next: 0000f72d                 # # WORD: RDEPTH
 1924              	               # XT: 000009b3                   # Flags: 0
 1925              	               # Len: 2483                      #  06 52 44 45 50 54 48
 1926              	L0000F72D:     # Next: 0000f748                 # # WORD: reset-data-stack
 1927              	               # XT: 0000099b                   # Flags: 0
 1928              	               # Len: 2459                      #  10 72 65 73 65 74 2d 64 61 74 61 2d 73 74 61 63 
 1929              	L0000F748:     # Next: 0000f757                 # # WORD: main
 1930              	               # XT: 0000096b                   # Flags: 0
 1931              	               # Len: 2411                      #  04 6d 61 69 6e
 1932              	L0000F757:     # Next: 0000f76a                 # # WORD: mainloop
 1933              	               # XT: 00000916                   # Flags: 0
 1934              	               # Len: 2326                      #  08 6d 61 69 6e 6c 6f 6f 70
 1935              	L0000F76A:     # Next: 0000f777                 # # WORD: ok
 1936              	               # XT: 000008b6                   # Flags: 0
 1937              	               # Len: 2230                      #  02 6f 6b
 1938              	L0000F777:     # Next: 0000f78e                 # # WORD: execute-line
 1939              	               # XT: 00000874                   # Flags: 0
 1940              	               # Len: 2164                      #  0c 65 78 65 63 75 74 65 2d 6c 69 6e 65
 1941              	L0000F78E:     # Next: 0000f7a5                 # # WORD: execute-word
 1942              	               # XT: 00000795                   # Flags: 0
 1943              	               # Len: 1941                      #  0c 65 78 65 63 75 74 65 2d 77 6f 72 64
 1944              	L0000F7A5:     # Next: 0000f7b1                 # # WORD: ;
 1945              	               # XT: 00000785                   # Flags: 1
 1946              	               # Len: 1925                      #  01 3b
 1947              	L0000F7B1:     # Next: 0000f7bd                 # # WORD: :
 1948              	               # XT: 00000775                   # Flags: 0
 1949              	               # Len: 1909                      #  01 3a
 1950              	L0000F7BD:     # Next: 0000f7d3                 # # WORD: CREATE-NAME
 1951              	               # XT: 00000729                   # Flags: 0
 1952              	               # Len: 1833                      #  0b 43 52 45 41 54 45 2d 4e 41 4d 45
 1953              	L0000F7D3:     # Next: 0000f7e1                 # # WORD: >IN
 1954              	               # XT: 00000719                   # Flags: 0
 1955              	               # Len: 1817                      #  03 3e 49 4e
 1956              	L0000F7E1:     # Next: 0000f7f6                 # # WORD: is-number?
 1957              	               # XT: 0000069e                   # Flags: 0
 1958              	               # Len: 1694                      #  0a 69 73 2d 6e 75 6d 62 65 72 3f
 1959              	L0000F7F6:     # Next: 0000f80d                 # # WORD: is-num-char?
 1960              	               # XT: 0000064b                   # Flags: 0
 1961              	               # Len: 1611                      #  0c 69 73 2d 6e 75 6d 2d 63 68 61 72 3f
 1962              	L0000F80D:     # Next: 0000f823                 # # WORD: define-word
 1963              	               # XT: 00000606                   # Flags: 0
GAS LISTING fasm.s 			page 50


 1964              	               # Len: 1542                      #  0b 64 65 66 69 6e 65 2d 77 6f 72 64
 1965              	L0000F823:     # Next: 0000f837                 # # WORD: find-word
 1966              	               # XT: 000005c4                   # Flags: 0
 1967              	               # Len: 1476                      #  09 66 69 6e 64 2d 77 6f 72 64
 1968              	L0000F837:     # Next: 0000f84d                 # # WORD: FLAG_INLINE
 1969              	               # XT: 000005bc                   # Flags: 2
 1970              	               # Len: 1468                      #  0b 46 4c 41 47 5f 49 4e 4c 49 4e 45
 1971              	L0000F84D:     # Next: 0000f866                 # # WORD: FLAG_IMMEDIATE
 1972              	               # XT: 000005b4                   # Flags: 2
 1973              	               # Len: 1460                      #  0e 46 4c 41 47 5f 49 4d 4d 45 44 49 41 54 45
 1974              	L0000F866:     # Next: 0000f87a                 # # WORD: DICT>NAME
 1975              	               # XT: 000005a5                   # Flags: 2
 1976              	               # Len: 1445                      #  09 44 49 43 54 3e 4e 41 4d 45
 1977              	L0000F87A:     # Next: 0000f88f                 # # WORD: DICT>FLAGS
 1978              	               # XT: 00000599                   # Flags: 2
 1979              	               # Len: 1433                      #  0a 44 49 43 54 3e 46 4c 41 47 53
 1980              	L0000F88F:     # Next: 0000f8a1                 # # WORD: DICT>XT
 1981              	               # XT: 00000590                   # Flags: 2
 1982              	               # Len: 1424                      #  07 44 49 43 54 3e 58 54
 1983              	L0000F8A1:     # Next: 0000f8b5                 # # WORD: DICT>NEXT
 1984              	               # XT: 0000058a                   # Flags: 2
 1985              	               # Len: 1418                      #  09 44 49 43 54 3e 4e 45 58 54
 1986              	L0000F8B5:     # Next: 0000f8c8                 # # WORD: get-word
 1987              	               # XT: 00000549                   # Flags: 0
 1988              	               # Len: 1353                      #  08 67 65 74 2d 77 6f 72 64
 1989              	L0000F8C8:     # Next: 0000f8da                 # # WORD: skip-ws
 1990              	               # XT: 00000525                   # Flags: 0
 1991              	               # Len: 1317                      #  07 73 6b 69 70 2d 77 73
 1992              	L0000F8DA:     # Next: 0000f8ed                 # # WORD: get-line
 1993              	               # XT: 00000505                   # Flags: 0
 1994              	               # Len: 1285                      #  08 67 65 74 2d 6c 69 6e 65
 1995              	L0000F8ED:     # Next: 0000f904                 # # WORD: file-getLine
 1996              	               # XT: 000004be                   # Flags: 0
 1997              	               # Len: 1214                      #  0c 66 69 6c 65 2d 67 65 74 4c 69 6e 65
 1998              	L0000F904:     # Next: 0000f91c                 # # WORD: stdin-getline
 1999              	               # XT: 00000432                   # Flags: 0
 2000              	               # Len: 1074                      #  0d 73 74 64 69 6e 2d 67 65 74 6c 69 6e 65
 2001              	L0000F91C:     # Next: 0000f92e                 # # WORD: BETWEEN
 2002              	               # XT: 0000041a                   # Flags: 0
 2003              	               # Len: 1050                      #  07 42 45 54 57 45 45 4e
 2004              	L0000F92E:     # Next: 0000f944                 # # WORD: string-popc
 2005              	               # XT: 000003f7                   # Flags: 0
 2006              	               # Len: 1015                      #  0b 73 74 72 69 6e 67 2d 70 6f 70 63
 2007              	L0000F944:     # Next: 0000f95a                 # # WORD: string-copy
 2008              	               # XT: 000003c3                   # Flags: 0
 2009              	               # Len: 963                       #  0b 73 74 72 69 6e 67 2d 63 6f 70 79
 2010              	L0000F95A:     # Next: 0000f970                 # # WORD: string-catc
 2011              	               # XT: 000003ad                   # Flags: 0
 2012              	               # Len: 941                       #  0b 73 74 72 69 6e 67 2d 63 61 74 63
 2013              	L0000F970:     # Next: 0000f98a                 # # WORD: string-nullterm
 2014              	               # XT: 0000039d                   # Flags: 0
 2015              	               # Len: 925                       #  0f 73 74 72 69 6e 67 2d 6e 75 6c 6c 74 65 72 6d
 2016              	L0000F98A:     # Next: 0000f998                 # # WORD: PAD
 2017              	               # XT: 0000038e                   # Flags: 0
 2018              	               # Len: 910                       #  03 50 41 44
 2019              	L0000F998:     # Next: 0000f9ab                 # # WORD: INPUT-FP
 2020              	               # XT: 0000037e                   # Flags: 0
GAS LISTING fasm.s 			page 51


 2021              	               # Len: 894                       #  08 49 4e 50 55 54 2d 46 50
 2022              	L0000F9AB:     # Next: 0000f9b8                 # # WORD: CR
 2023              	               # XT: 00000372                   # Flags: 0
 2024              	               # Len: 882                       #  02 43 52
 2025              	L0000F9B8:     # Next: 0000f9c7                 # # WORD: TYPE
 2026              	               # XT: 00000350                   # Flags: 0
 2027              	               # Len: 848                       #  04 54 59 50 45
 2028              	L0000F9C7:     # Next: 0000f9d7                 # # WORD: COUNT
 2029              	               # XT: 00000344                   # Flags: 0
 2030              	               # Len: 836                       #  05 43 4f 55 4e 54
 2031              	L0000F9D7:     # Next: 0000f9e7                 # # WORD: LEAVE
 2032              	               # XT: 0000032f                   # Flags: 1
 2033              	               # Len: 815                       #  05 4c 45 41 56 45
 2034              	L0000F9E7:     # Next: 0000f9f7                 # # WORD: UNTIL
 2035              	               # XT: 00000315                   # Flags: 1
 2036              	               # Len: 789                       #  05 55 4e 54 49 4c
 2037              	L0000F9F7:     # Next: 0000fa07                 # # WORD: WHILE
 2038              	               # XT: 000002fb                   # Flags: 1
 2039              	               # Len: 763                       #  05 57 48 49 4c 45
 2040              	L0000FA07:     # Next: 0000fa17                 # # WORD: AGAIN
 2041              	               # XT: 000002e1                   # Flags: 1
 2042              	               # Len: 737                       #  05 41 47 41 49 4e
 2043              	L0000FA17:     # Next: 0000fa27                 # # WORD: BEGIN
 2044              	               # XT: 000002ce                   # Flags: 1
 2045              	               # Len: 718                       #  05 42 45 47 49 4e
 2046              	L0000FA27:     # Next: 0000fa36                 # # WORD: THEN
 2047              	               # XT: 000002b9                   # Flags: 1
 2048              	               # Len: 697                       #  04 54 48 45 4e
 2049              	L0000FA36:     # Next: 0000fa45                 # # WORD: ELSE
 2050              	               # XT: 00000294                   # Flags: 1
 2051              	               # Len: 660                       #  04 45 4c 53 45
 2052              	L0000FA45:     # Next: 0000fa52                 # # WORD: IF
 2053              	               # XT: 00000275                   # Flags: 1
 2054              	               # Len: 629                       #  02 49 46
 2055              	L0000FA52:     # Next: 0000fa67                 # # WORD: ?COMPILING
 2056              	               # XT: 0000026c                   # Flags: 0
 2057              	               # Len: 620                       #  0a 3f 43 4f 4d 50 49 4c 49 4e 47
 2058              	L0000FA67:     # Next: 0000fa76                 # # WORD: HERE
 2059              	               # XT: 00000263                   # Flags: 2
 2060              	               # Len: 611                       #  04 48 45 52 45
 2061              	L0000FA76:     # Next: 0000fa85                 # # WORD: LAST
 2062              	               # XT: 0000025a                   # Flags: 2
 2063              	               # Len: 602                       #  04 4c 41 53 54
 2064              	L0000FA85:     # Next: 0000fa95                 # # WORD: CELLS
 2065              	               # XT: 00000251                   # Flags: 2
 2066              	               # Len: 593                       #  05 43 45 4c 4c 53
 2067              	L0000FA95:     # Next: 0000faa9                 # # WORD: IMMEDIATE
 2068              	               # XT: 0000023b                   # Flags: 0
 2069              	               # Len: 571                       #  09 49 4d 4d 45 44 49 41 54 45
 2070              	L0000FAA9:     # Next: 0000faba                 # # WORD: INLINE
 2071              	               # XT: 00000225                   # Flags: 0
 2072              	               # Len: 549                       #  06 49 4e 4c 49 4e 45
 2073              	L0000FABA:     # Next: 0000fac7                 # # WORD: R@
 2074              	               # XT: 0000021c                   # Flags: 2
 2075              	               # Len: 540                       #  02 52 40
 2076              	L0000FAC7:     # Next: 0000fad5                 # # WORD: BYE
 2077              	               # XT: 00000215                   # Flags: 2
GAS LISTING fasm.s 			page 52


 2078              	               # Len: 533                       #  03 42 59 45
 2079              	L0000FAD5:     # Next: 0000fae5                 # # WORD: RESET
 2080              	               # XT: 0000020e                   # Flags: 2
 2081              	               # Len: 526                       #  05 52 45 53 45 54
 2082              	L0000FAE5:     # Next: 0000faf5                 # # WORD: BREAK
 2083              	               # XT: 00000207                   # Flags: 2
 2084              	               # Len: 519                       #  05 42 52 45 41 4b
 2085              	L0000FAF5:     # Next: 0000fb05                 # # WORD: USPOP
 2086              	               # XT: 00000200                   # Flags: 2
 2087              	               # Len: 512                       #  05 55 53 50 4f 50
 2088              	L0000FB05:     # Next: 0000fb16                 # # WORD: USPUSH
 2089              	               # XT: 000001f9                   # Flags: 2
 2090              	               # Len: 505                       #  06 55 53 50 55 53 48
 2091              	L0000FB16:     # Next: 0000fb27                 # # WORD: USINIT
 2092              	               # XT: 000001f2                   # Flags: 2
 2093              	               # Len: 498                       #  06 55 53 49 4e 49 54
 2094              	L0000FB27:     # Next: 0000fb3a                 # # WORD: COMPAREI
 2095              	               # XT: 000001eb                   # Flags: 2
 2096              	               # Len: 491                       #  08 43 4f 4d 50 41 52 45 49
 2097              	L0000FB3A:     # Next: 0000fb4a                 # # WORD: GETCH
 2098              	               # XT: 000001e4                   # Flags: 2
 2099              	               # Len: 484                       #  05 47 45 54 43 48
 2100              	L0000FB4A:     # Next: 0000fb5a                 # # WORD: DEPTH
 2101              	               # XT: 000001dd                   # Flags: 2
 2102              	               # Len: 477                       #  05 44 45 50 54 48
 2103              	L0000FB5A:     # Next: 0000fb69                 # # WORD: PICK
 2104              	               # XT: 000001d6                   # Flags: 2
 2105              	               # Len: 470                       #  04 50 49 43 4b
 2106              	L0000FB69:     # Next: 0000fb77                 # # WORD: AND
 2107              	               # XT: 000001cf                   # Flags: 2
 2108              	               # Len: 463                       #  03 41 4e 44
 2109              	L0000FB77:     # Next: 0000fb8a                 # # WORD: LOGLEVEL
 2110              	               # XT: 000001c8                   # Flags: 2
 2111              	               # Len: 456                       #  08 4c 4f 47 4c 45 56 45 4c
 2112              	L0000FB8A:     # Next: 0000fb97                 # # WORD: R>
 2113              	               # XT: 000001c1                   # Flags: 2
 2114              	               # Len: 449                       #  02 52 3e
 2115              	L0000FB97:     # Next: 0000fba4                 # # WORD: >R
 2116              	               # XT: 000001ba                   # Flags: 2
 2117              	               # Len: 442                       #  02 3e 52
 2118              	L0000FBA4:     # Next: 0000fbb5                 # # WORD: FCLOSE
 2119              	               # XT: 000001b3                   # Flags: 2
 2120              	               # Len: 435                       #  06 46 43 4c 4f 53 45
 2121              	L0000FBB5:     # Next: 0000fbc6                 # # WORD: FWRITE
 2122              	               # XT: 000001ac                   # Flags: 2
 2123              	               # Len: 428                       #  06 46 57 52 49 54 45
 2124              	L0000FBC6:     # Next: 0000fbda                 # # WORD: FREADLINE
 2125              	               # XT: 000001a5                   # Flags: 2
 2126              	               # Len: 421                       #  09 46 52 45 41 44 4c 49 4e 45
 2127              	L0000FBDA:     # Next: 0000fbea                 # # WORD: FREAD
 2128              	               # XT: 0000019e                   # Flags: 2
 2129              	               # Len: 414                       #  05 46 52 45 41 44
 2130              	L0000FBEA:     # Next: 0000fbfa                 # # WORD: FOPEN
 2131              	               # XT: 00000197                   # Flags: 2
 2132              	               # Len: 407                       #  05 46 4f 50 45 4e
 2133              	L0000FBFA:     # Next: 0000fc0c                 # # WORD: COMPARE
 2134              	               # XT: 00000190                   # Flags: 2
GAS LISTING fasm.s 			page 53


 2135              	               # Len: 400                       #  07 43 4f 4d 50 41 52 45
 2136              	L0000FC0C:     # Next: 0000fc1b                 # # WORD: OVER
 2137              	               # XT: 00000189                   # Flags: 2
 2138              	               # Len: 393                       #  04 4f 56 45 52
 2139              	L0000FC1B:     # Next: 0000fc2a                 # # WORD: EMIT
 2140              	               # XT: 00000182                   # Flags: 2
 2141              	               # Len: 386                       #  04 45 4d 49 54
 2142              	L0000FC2A:     # Next: 0000fc3a                 # # WORD: DICTP
 2143              	               # XT: 00000175                   # Flags: 2
 2144              	               # Len: 373                       #  05 44 49 43 54 50
 2145              	L0000FC3A:     # Next: 0000fc46                 # # WORD: >
 2146              	               # XT: 0000016e                   # Flags: 2
 2147              	               # Len: 366                       #  01 3e
 2148              	L0000FC46:     # Next: 0000fc52                 # # WORD: =
 2149              	               # XT: 00000167                   # Flags: 2
 2150              	               # Len: 359                       #  01 3d
 2151              	L0000FC52:     # Next: 0000fc5e                 # # WORD: <
 2152              	               # XT: 00000160                   # Flags: 2
 2153              	               # Len: 352                       #  01 3c
 2154              	L0000FC5E:     # Next: 0000fc6a                 # # WORD: /
 2155              	               # XT: 00000159                   # Flags: 2
 2156              	               # Len: 345                       #  01 2f
 2157              	L0000FC6A:     # Next: 0000fc76                 # # WORD: *
 2158              	               # XT: 00000152                   # Flags: 2
 2159              	               # Len: 338                       #  01 2a
 2160              	L0000FC76:     # Next: 0000fc82                 # # WORD: -
 2161              	               # XT: 0000014b                   # Flags: 2
 2162              	               # Len: 331                       #  01 2d
 2163              	L0000FC82:     # Next: 0000fc8e                 # # WORD: +
 2164              	               # XT: 00000144                   # Flags: 2
 2165              	               # Len: 324                       #  01 2b
 2166              	L0000FC8E:     # Next: 0000fc9b                 # # WORD: C!
 2167              	               # XT: 0000013d                   # Flags: 2
 2168              	               # Len: 317                       #  02 43 21
 2169              	L0000FC9B:     # Next: 0000fca8                 # # WORD: C@
 2170              	               # XT: 00000136                   # Flags: 2
 2171              	               # Len: 310                       #  02 43 40
 2172              	L0000FCA8:     # Next: 0000fcbb                 # # WORD: CLITERAL
 2173              	               # XT: 00000129                   # Flags: 2
 2174              	               # Len: 297                       #  08 43 4c 49 54 45 52 41 4c
 2175              	L0000FCBB:     # Next: 0000fcc8                 # # WORD: OR
 2176              	               # XT: 00000122                   # Flags: 2
 2177              	               # Len: 290                       #  02 4f 52
 2178              	L0000FCC8:     # Next: 0000fcd6                 # # WORD: RET
 2179              	               # XT: 00000115                   # Flags: 0
 2180              	               # Len: 277                       #  03 52 45 54
 2181              	L0000FCD6:     # Next: 0000fce5                 # # WORD: CALL
 2182              	               # XT: 00000108                   # Flags: 0
 2183              	               # Len: 264                       #  04 43 41 4c 4c
 2184              	L0000FCE5:     # Next: 0000fcf5                 # # WORD: JMPNZ
 2185              	               # XT: 000000fb                   # Flags: 0
 2186              	               # Len: 251                       #  05 4a 4d 50 4e 5a
 2187              	L0000FCF5:     # Next: 0000fd04                 # # WORD: JMPZ
 2188              	               # XT: 000000ee                   # Flags: 0
 2189              	               # Len: 238                       #  04 4a 4d 50 5a
 2190              	L0000FD04:     # Next: 0000fd12                 # # WORD: JMP
 2191              	               # XT: 000000e1                   # Flags: 0
GAS LISTING fasm.s 			page 54


 2192              	               # Len: 225                       #  03 4a 4d 50
 2193              	L0000FD12:     # Next: 0000fd25                 # # WORD: SLITERAL
 2194              	               # XT: 000000d4                   # Flags: 0
 2195              	               # Len: 212                       #  08 53 4c 49 54 45 52 41 4c
 2196              	L0000FD25:     # Next: 0000fd33                 # # WORD: DUP
 2197              	               # XT: 000000cd                   # Flags: 2
 2198              	               # Len: 205                       #  03 44 55 50
 2199              	L0000FD33:     # Next: 0000fd42                 # # WORD: DROP
 2200              	               # XT: 000000c6                   # Flags: 2
 2201              	               # Len: 198                       #  04 44 52 4f 50
 2202              	L0000FD42:     # Next: 0000fd51                 # # WORD: SWAP
 2203              	               # XT: 000000bf                   # Flags: 2
 2204              	               # Len: 191                       #  04 53 57 41 50
 2205              	L0000FD51:     # Next: 0000fd5d                 # # WORD: !
 2206              	               # XT: 000000b8                   # Flags: 2
 2207              	               # Len: 184                       #  01 21
 2208              	L0000FD5D:     # Next: 0000fd69                 # # WORD: @
 2209              	               # XT: 000000b1                   # Flags: 2
 2210              	               # Len: 177                       #  01 40
 2211              	L0000FD69:     # Next: 0000fd7b                 # # WORD: LITERAL
 2212              	               # XT: 000000a4                   # Flags: 0
 2213              	               # Len: 164                       #  07 4c 49 54 45 52 41 4c
 2214              	L0000FD7B:     # Next: 0000fd87                 # # WORD: ]
 2215              	               # XT: 00000099                   # Flags: 1
 2216              	               # Len: 153                       #  01 5d
 2217              	L0000FD87:     # Next: 0000fd93                 # # WORD: [
 2218              	               # XT: 0000008e                   # Flags: 1
 2219              	               # Len: 142                       #  01 5b
 2220              	L0000FD93:     # Next: 0000fd9f                 # # WORD: ,
 2221              	               # XT: 0000007b                   # Flags: 0
 2222              	               # Len: 123                       #  01 2c
 2223              	L0000FD9F:     # Next: 0000fdac                 # # WORD: C,
 2224              	               # XT: 00000068                   # Flags: 0
 2225              	               # Len: 104                       #  02 43 2c
 2226              	L0000FDAC:     # Next: 0000fdbc                 # # WORD: STATE
 2227              	               # XT: 00000060                   # Flags: 2
 2228              	               # Len: 96                        #  05 53 54 41 54 45
 2229              	L0000FDBC:     # Next: 0000fdcb                 # # WORD: BASE
 2230              	               # XT: 00000058                   # Flags: 2
 2231              	               # Len: 88                        #  04 42 41 53 45
 2232              	L0000FDCB:     # Next: 0000fdda                 # # WORD: CELL
 2233              	               # XT: 00000050                   # Flags: 2
 2234              	               # Len: 80                        #  04 43 45 4c 4c
 2235              	L0000FDDA:     # Next: 0000fdeb                 # # WORD: (LAST)
 2236              	               # XT: 00000048                   # Flags: 2
 2237              	               # Len: 72                        #  06 28 4c 41 53 54 29
 2238              	L0000FDEB:     # Next: 0000fdfc                 # # WORD: (HERE)
 2239              	               # XT: 00000040                   # Flags: 2
 2240              	               # Len: 64                        #  06 28 48 45 52 45 29
 2241 1925 909090   	L0000FDFC:                                      # End.
GAS LISTING fasm.s 			page 55


DEFINED SYMBOLS
                            *ABS*:00000000 fake
              fasm.s:23     .text:00000001 main
              fasm.s:6      .data:00000000 DSP
              fasm.s:7      .data:00000002 data_stack
              fasm.s:10     .data:00000102 RSP
              fasm.s:11     .data:00000104 return_stack
              fasm.s:14     .data:00000204 buf
              fasm.s:17     .data:00000304 stdin
              fasm.s:21     .text:00000000 main_loop
              fasm.s:142    .text:0000012b func_EMIT
              fasm.s:47     .text:00000058 func_PUSH_NOTWORKING
              fasm.s:56     .text:00000065 func_EQ
              fasm.s:64     .text:00000079 EQ_true
              fasm.s:65     .text:0000007e EQ_done
              fasm.s:69     .text:00000082 func_NEQ
              fasm.s:77     .text:00000096 NEQ_true
              fasm.s:78     .text:0000009b NEQ_done
              fasm.s:82     .text:0000009f func_LT
              fasm.s:97     .text:000000c2 func_GT
              fasm.s:106    .text:000000d9 GT_true
              fasm.s:107    .text:000000de GT_done
              fasm.s:112    .text:000000e5 func_LTE
              fasm.s:127    .text:00000108 func_GTE
              fasm.s:136    .text:0000011f GTE_true
              fasm.s:137    .text:00000124 GTE_done
              fasm.s:159    .text:0000014d func_FETCH
              fasm.s:166    .text:00000156 func_CFETCH
              fasm.s:173    .text:00000161 func_STORE
              fasm.s:182    .text:00000170 func_CSTORE
              fasm.s:191    .text:0000017f func_DUP
              fasm.s:198    .text:00000189 func_SWAP
              fasm.s:208    .text:0000019c func_OVER
              fasm.s:219    .text:000001b2 func_ADD
              fasm.s:228    .text:000001c1 func_SUB
              fasm.s:237    .text:000001d0 func_MUL
              fasm.s:246    .text:000001df func_DTOR
              fasm.s:258    .text:00000204 func_RTOD

UNDEFINED SYMBOLS
_GetStdHandle@4
_ExitProcess@4
_WriteConsoleA@20
