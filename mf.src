-00000 JMP jump 
-0300C JMP T=0 
-33D4F in @
-3FD7F in !
-C0E83 in 2* 
-C328C in 2/ 
-FFFFF in drop 
-F33CC in dup 
-F3FCF in over 
-FC3F0 in >r 
-F03C0 in r> 
-FF3FC in nop 
-CC2B0 in xor 
-CCEB3 in and 
-CFEBF in + 
-00C03 in ; 
-0300C JMP until 
-C0280 in invert 
-0C030 JMP (:)
-03C0F JMP -until 
-03C0F JMP C=0 
-30D43 in @+ 
-3CD73 in !+ 
-C3E8F in +* 
-FCFF3 in a! 
-F0FC3 in a

.VARIABLE. (HERE)
.VARIABLE. (LAST)
.VARIABLE. BASE
.VARIABLE. STATE
.VARIABLE. (MEM_SZ)

.VARIABLE. #NEG
.VARIABLE. #LEN

.NOP. \ marks the end of the variables

: CELL 4 ; .INLINE.

: HERE (HERE) .FETCH. ;
: LAST (LAST) .FETCH. ;

: C, HERE .CSTORE. HERE      .INC. (HERE) .STORE. ;
: ,  HERE .STORE.  HERE CELL .ADD. (HERE) .STORE. ;

: [ 0 STATE .STORE. ; .IMMEDIATE.
: ] 1 STATE .STORE. ; .IMMEDIATE.

: LITERAL	    1 C,   ;
: @			[   2 C, ] ; .INLINE.
: !			[   3 C, ] ; .INLINE.
: SWAP		[   4 C, ] ; .INLINE.
: DROP		[   5 C, ] ; .INLINE.
: DUP		[   6 C, ] ; .INLINE.
: SLITERAL	    7 C,   ;
: JMP		    8 C,   ;
: JMPZ		    9 C,   ;
: JMPNZ		   10 C,   ;
: CALL		   11 C,   ;
: RET		   12 C,   ;
: OR		[  13 C, ] ; .INLINE.
: CLITERAL	   14 C,   ; .INLINE.
: C@		[  15 C, ] ; .INLINE.
: C!		[  16 C, ] ; .INLINE.
: +			[  17 C, ] ; .INLINE.
: -			[  18 C, ] ; .INLINE.
: *			[  19 C, ] ; .INLINE.
: /			[  20 C, ] ; .INLINE.
: <			[  21 C, ] ; .INLINE.
: =			[  22 C, ] ; .INLINE.
: >			[  23 C, ] ; .INLINE.
: DICTP		   24 C,   ; .INLINE.
: EMIT		[  25 C, ] ; .INLINE.
: OVER		[  26 C, ] ; .INLINE.
: COMPARE	[  27 C, ] ; .INLINE.
: FOPEN		[  28 C, ] ; .INLINE.
: FREAD		[  29 C, ] ; .INLINE.
: FREADLINE	[  30 C, ] ; .INLINE.
: FWRITE	[  31 C, ] ; .INLINE.
: FCLOSE	[  32 C, ] ; .INLINE.
: >R		[  33 C, ] ; .INLINE.
: R>		[  34 C, ] ; .INLINE.
: LOGLEVEL	[  35 C, ] ; .INLINE.
: AND		[  36 C, ] ; .INLINE.
: PICK		[  37 C, ] ; .INLINE.
: DEPTH		[  38 C, ] ; .INLINE.
: GETCH		[  39 C, ] ; .INLINE.
: COMPAREI	[  40 C, ] ; .INLINE.
: /MOD		[  41 C, ] ; .INLINE.	\ SLASHMOD ( n1 n2 -- r q )
: NOT		[  42 C, ] ; .INLINE.
: RFETCH	[  43 C, ] ; .INLINE.
: 1+		[  44 C, ] ; .INLINE.
: RDEPTH	[  45 C, ] ; .INLINE.
: 1-		[  46 C, ] ; .INLINE.
: GETTICK	[  47 C, ] ; .INLINE.
: <<		[  48 C, ] ; .INLINE.	\ SHIFTLEFT  ( n1 n2 -- n3 )
: >>		[  49 C, ] ; .INLINE.	\ SHIFTRIGHT ( n1 n2 -- n3 )
: +!        [  50 C, ] ; .INLINE.   \ ( n addr -- )
: OPEN-BLOCK [  51 C, ] ; .INLINE.   \ ( n -- fp bool )
: BRANCHF      90 C,   ;
: BRANCHFZ     91 C,   ;
: BRANCHFNZ    92 C,   ; 
: BRANCHB      93 C,   ;
: BRANCHBZ     94 C,   ;
: BRANCHBNZ    95 C,   ; 
: NOP		[ 252 C, ] ; .INLINE.
: BREAK		[ 253 C, ] ; .INLINE.
: RESET		[ 254 C, ] ; .INLINE.
: BYE		[ 255 C, ] ; .INLINE.

: CELLS CELL * ; .INLINE.
: ALLOT HERE + (HERE) ! ;

: ?COMPILING STATE @ ;

: IF   ?COMPILING .IF BRANCHFZ HERE 0 C,                          .THEN ; .IMMEDIATE.
: ELSE ?COMPILING .IF BRANCHF  HERE 0 C, SWAP HERE OVER - SWAP C! .THEN ; .IMMEDIATE.
: THEN ?COMPILING .IF                         HERE OVER - SWAP C! .THEN ; .IMMEDIATE.

: BEGIN ?COMPILING IF           HERE           THEN ;    .IMMEDIATE.
: AGAIN ?COMPILING IF BRANCHB   HERE SWAP - C, THEN ;    .IMMEDIATE.
: WHILE ?COMPILING IF BRANCHBNZ HERE SWAP - C, THEN ;    .IMMEDIATE.
: UNTIL ?COMPILING IF BRANCHBZ  HERE SWAP - C, THEN ;    .IMMEDIATE.
: LEAVE ?COMPILING IF RET     THEN ;    .IMMEDIATE.

\ ************************************
\ ** Machine Forth stuff
\ ************************************
.VARIABLE. addr 
: >a addr ! ;
: a  addr @ ;

:  @@ a  @ ;	: c@@ a C@ ;
:  !! a  ! ;    : c!! a C! ;

:  @+   @@  a CELL + >a ;
:  !+   !!  a CELL + >a ;
: c@+  c@@  a 1+     >a ;
: c!+  c!!  a 1+     >a ;

:  @-   @@  a CELL - >a ;
:  !-   !!  a CELL - >a ;
: c@-  c@@  a 1-     >a ;
: c!-  c!!  a 1-     >a ;

\ ************************************
.VARIABLE. tmp
: t  tmp @ ; 	: >t tmp ! ;
: t>a t >a ; 	: a>t a >t ;

\ ************************************
\ A circular stack
: sz  #8 ;  .INLINE.		\ stk buf size
: m  #31 ;  .INLINE.     	\ wrap-around mask

.VARIABLE. stk sz CELLS ALLOT
.VARIABLE. sr

: s+ sr @ CELL + m AND sr ! ;
: s- sr @ CELL - m AND sr ! ;

: sp stk sr @ + ;

: >s s+ sp ! ;
: s> sp @ s-  ;

\ ************************************
\ ** Machine Forth stuff (end)
\ ************************************


\ ------------------------------------
: bb 1
    begin
        dup >s
        1+ 2dup >
    while 
    2drop ;

: dd 1
    begin
        s> .
        1+ 2dup >
    while 
    2drop ;

: main 100 bb 100 dd ;
