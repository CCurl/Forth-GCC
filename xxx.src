\ -----------------------------------------------------------------------------------------------
\ This is the source code for the VM's boot loader.
\ This file is compiled by forth-compiler.exe and an image of the VM's initial state is created.
\ It then writes that image to a file specified by -i:<filename>. The default is forth.bin.
\ It also disassembles that image, creating a listing file named by the -o arg, forth.asm.
\ The image file is read by the VM when it boots.
\
\ The compiler does these things ...
\ - it generates the following word: C,
\ - it generates the opcodes as words, e.g. "a.JMPNZ"
\ - it generates the forth primitives as INLINE words, e.g. @, C@ !, C!, SWAP, DUP, ...
\ - it generates the forth constants as INLINE words, e.g. BASE, DP, ...
\
\ NB: don't inline anything with a 12 in it ... that is RET
\ -----------------------------------------------------------------------------------------------

: CR 13 EMIT 10 EMIT ;
: COUNT 1 + DUP 1 - C@ ;
: TYPE 
	0 .BEGIN
	OVER OVER = .IF
		DROP DROP DROP .LEAVE
	.THEN
	>R >R
	DUP C@ EMIT 1 +
	R> R>
	1 +
	.AGAIN ;

: CT COUNT TYPE ;

: ascii
	OVER OVER < .IF
		SWAP
	.THEN
	SWAP OVER
	.BEGIN
	OVER OVER = .IF
		DROP DROP DROP .LEAVE
	.THEN
	>R >R
	DUP EMIT 1 +
	R> R>
	1 +
	.AGAIN ;

: .w DUP 2 CELL * + 1 + COUNT TYPE 32 EMIT @ ;

: WORDS (LAST) @
	.BEGIN
		DUP @ 0 = .IF DROP .LEAVE .THEN
		.w
	.AGAIN ;

: count-to
    S" counting ..." CT
    1
    .BEGIN 
        OVER OVER < 
        .IF
            S"  DONE." CT
            DROP DROP .LEAVE
        .THEN 
        1 + 
    .AGAIN ;

: MAIN S" hello world!" COUNT TYPE 
	CR 65 77 ascii
	CR WORDS
	\ 100 million
	CR 100 100 100 100 * * * count-to
	BYE ;