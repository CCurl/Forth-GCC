; memory-size: 65536 bytes, (10000 hex)
; data-stack: fe00, grows up
; return-stack: fffc, grows down
;
0000: 08 06 11 00 00             ; JMP main (1106)
;
0005: 00 00 00
0008: 00000004 00000000
0010: 00001326 0000f12f 0000000a 00000000
0020: 00000000 00010000 00000000 00000000
0030: 00000000 00000000 00000000 00000000
;
0040: 18 eb ff 00 00             ; DICTP (HERE) (ffeb)
0045: 01 4b 00 00 00             ; LITERAL 75 (0x004b)
004a: 0c                         ; RET
004b: 26 13 00 00                ; dw 0x1326
;
004f: 18 da ff 00 00             ; DICTP (LAST) (ffda)
0054: 01 5a 00 00 00             ; LITERAL 90 (0x005a)
0059: 0c                         ; RET
005a: 2f f1 00 00                ; dw 0xf12f
;
005e: 18 cb ff 00 00             ; DICTP BASE (ffcb)
0063: 01 69 00 00 00             ; LITERAL 105 (0x0069)
0068: 0c                         ; RET
0069: 0a 00 00 00                ; dw 0x000a
;
006d: 18 bb ff 00 00             ; DICTP STATE (ffbb)
0072: 01 78 00 00 00             ; LITERAL 120 (0x0078)
0077: 0c                         ; RET
0078: 63 00 00 00                ; dw 0x0063
;
007c: 18 a8 ff 00 00             ; DICTP (MEM_SZ) (ffa8)
0081: 01 87 00 00 00             ; LITERAL 135 (0x0087)
0086: 0c                         ; RET
0087: 00 00 01 00                ; dw 0x10000
;
008b: 18 9a ff 00 00             ; DICTP >IN (ff9a)
0090: 01 96 00 00 00             ; LITERAL 150 (0x0096)
0095: 0c                         ; RET
0096: 00 00 00 00                ; dw 0x0000
;
009a: 18 8b ff 00 00             ; DICTP #NEG (ff8b)
009f: 01 a5 00 00 00             ; LITERAL 165 (0x00a5)
00a4: 0c                         ; RET
00a5: 00 00 00 00                ; dw 0x0000
;
00a9: 18 7c ff 00 00             ; DICTP #LEN (ff7c)
00ae: 01 b4 00 00 00             ; LITERAL 180 (0x00b4)
00b3: 0c                         ; RET
00b4: 05 00 00 00                ; dw 0x0005
;
00b8: 18 69 ff 00 00             ; DICTP INPUT-FP (ff69)
00bd: 01 c3 00 00 00             ; LITERAL 195 (0x00c3)
00c2: 0c                         ; RET
00c3: 00 00 00 00                ; dw 0x0000
;
00c7: 18 5c ff 00 00             ; DICTP T1 (ff5c)
00cc: 01 d2 00 00 00             ; LITERAL 210 (0x00d2)
00d1: 0c                         ; RET
00d2: 00 00 00 00                ; dw 0x0000
;
00d6: 18 4f ff 00 00             ; DICTP T2 (ff4f)
00db: 01 e1 00 00 00             ; LITERAL 225 (0x00e1)
00e0: 0c                         ; RET
00e1: 00 00 00 00                ; dw 0x0000
;
00e5: 18 42 ff 00 00             ; DICTP T3 (ff42)
00ea: 01 f0 00 00 00             ; LITERAL 240 (0x00f0)
00ef: 0c                         ; RET
00f0: 00 00 00 00                ; dw 0x0000
;
00f4: fc                         ; NOP
00f5: 18 33 ff 00 00             ; DICTP CELL (ff33)
00fa: 0e 04                      ; CLITERAL 4
00fc: 0c                         ; RET
;
00fd: 18 24 ff 00 00             ; DICTP HERE (ff24)
0102: 0b 40 00 00 00             ; CALL (HERE) (0040)
0107: 02                         ; FETCH
0108: 0c                         ; RET
;
0109: 18 15 ff 00 00             ; DICTP LAST (ff15)
010e: 0b 4f 00 00 00             ; CALL (LAST) (004f)
0113: 02                         ; FETCH
0114: 0c                         ; RET
;
0115: 18 08 ff 00 00             ; DICTP C, (ff08)
011a: 0b fd 00 00 00             ; CALL HERE (00fd)
011f: 10                         ; CSTORE
0120: 0b fd 00 00 00             ; CALL HERE (00fd)
0125: 2c                         ; INC
0126: 0b 40 00 00 00             ; CALL (HERE) (0040)
012b: 03                         ; STORE
012c: 0c                         ; RET
;
012d: 18 fc fe 00 00             ; DICTP , (fefc)
0132: 0b fd 00 00 00             ; CALL HERE (00fd)
0137: 03                         ; STORE
0138: 0b fd 00 00 00             ; CALL HERE (00fd)
013d: 0e 04                      ; CLITERAL 4
013f: 11                         ; ADD
0140: 0b 40 00 00 00             ; CALL (HERE) (0040)
0145: 03                         ; STORE
0146: 0c                         ; RET
;
0147: 18 f0 fe 00 00             ; DICTP [ (fef0)
014c: 0e 00                      ; CLITERAL 0
014e: 0b 6d 00 00 00             ; CALL STATE (006d)
0153: 03                         ; STORE
0154: 0c                         ; RET
;
0155: 18 e4 fe 00 00             ; DICTP ] (fee4)
015a: 0e 01                      ; CLITERAL 1
015c: 0b 6d 00 00 00             ; CALL STATE (006d)
0161: 03                         ; STORE
0162: 0c                         ; RET
;
0163: 18 d2 fe 00 00             ; DICTP LITERAL (fed2)
0168: 0e 01                      ; CLITERAL 1
016a: 0b 15 01 00 00             ; CALL C, (0115)
016f: 0c                         ; RET
;
0170: 18 c6 fe 00 00             ; DICTP @ (fec6)
0175: 02                         ; FETCH
0176: 0c                         ; RET
;
0177: 18 ba fe 00 00             ; DICTP ! (feba)
017c: 03                         ; STORE
017d: 0c                         ; RET
;
017e: 18 ab fe 00 00             ; DICTP SWAP (feab)
0183: 04                         ; SWAP
0184: 0c                         ; RET
;
0185: 18 9c fe 00 00             ; DICTP DROP (fe9c)
018a: 05                         ; DROP
018b: 0c                         ; RET
;
018c: 18 8e fe 00 00             ; DICTP DUP (fe8e)
0191: 06                         ; DUP
0192: 0c                         ; RET
;
0193: 18 7b fe 00 00             ; DICTP SLITERAL (fe7b)
0198: 0e 07                      ; CLITERAL 7
019a: 0b 15 01 00 00             ; CALL C, (0115)
019f: 0c                         ; RET
;
01a0: 18 6d fe 00 00             ; DICTP JMP (fe6d)
01a5: 0e 08                      ; CLITERAL 8
01a7: 0b 15 01 00 00             ; CALL C, (0115)
01ac: 0c                         ; RET
;
01ad: 18 5e fe 00 00             ; DICTP JMPZ (fe5e)
01b2: 0e 09                      ; CLITERAL 9
01b4: 0b 15 01 00 00             ; CALL C, (0115)
01b9: 0c                         ; RET
;
01ba: 18 4e fe 00 00             ; DICTP JMPNZ (fe4e)
01bf: 0e 0a                      ; CLITERAL 10
01c1: 0b 15 01 00 00             ; CALL C, (0115)
01c6: 0c                         ; RET
;
01c7: 18 3f fe 00 00             ; DICTP CALL (fe3f)
01cc: 0e 0b                      ; CLITERAL 11
01ce: 0b 15 01 00 00             ; CALL C, (0115)
01d3: 0c                         ; RET
;
01d4: 18 31 fe 00 00             ; DICTP RET (fe31)
01d9: 0e 0c                      ; CLITERAL 12
01db: 0b 15 01 00 00             ; CALL C, (0115)
01e0: 0c                         ; RET
;
01e1: 18 24 fe 00 00             ; DICTP OR (fe24)
01e6: 0d                         ; OR
01e7: 0c                         ; RET
;
01e8: 18 11 fe 00 00             ; DICTP CLITERAL (fe11)
01ed: 0e 0e                      ; CLITERAL 14
01ef: 0b 15 01 00 00             ; CALL C, (0115)
01f4: 0c                         ; RET
;
01f5: 18 04 fe 00 00             ; DICTP C@ (fe04)
01fa: 0f                         ; CFETCH
01fb: 0c                         ; RET
;
01fc: 18 f7 fd 00 00             ; DICTP C! (fdf7)
0201: 10                         ; CSTORE
0202: 0c                         ; RET
;
0203: 18 eb fd 00 00             ; DICTP + (fdeb)
0208: 11                         ; ADD
0209: 0c                         ; RET
;
020a: 18 df fd 00 00             ; DICTP - (fddf)
020f: 12                         ; SUB
0210: 0c                         ; RET
;
0211: 18 d3 fd 00 00             ; DICTP * (fdd3)
0216: 13                         ; MUL
0217: 0c                         ; RET
;
0218: 18 c7 fd 00 00             ; DICTP / (fdc7)
021d: 14                         ; DIV
021e: 0c                         ; RET
;
021f: 18 bb fd 00 00             ; DICTP < (fdbb)
0224: 15                         ; LT
0225: 0c                         ; RET
;
0226: 18 af fd 00 00             ; DICTP = (fdaf)
022b: 16                         ; EQ
022c: 0c                         ; RET
;
022d: 18 a3 fd 00 00             ; DICTP > (fda3)
0232: 17                         ; GT
0233: 0c                         ; RET
;
0234: 18 93 fd 00 00             ; DICTP DICTP (fd93)
0239: 0e 18                      ; CLITERAL 24
023b: 0b 15 01 00 00             ; CALL C, (0115)
0240: 0c                         ; RET
;
0241: 18 84 fd 00 00             ; DICTP EMIT (fd84)
0246: 19                         ; EMIT
0247: 0c                         ; RET
;
0248: 18 75 fd 00 00             ; DICTP OVER (fd75)
024d: 1a                         ; OVER
024e: 0c                         ; RET
;
024f: 18 63 fd 00 00             ; DICTP COMPARE (fd63)
0254: 1b                         ; COMPARE
0255: 0c                         ; RET
;
0256: 18 53 fd 00 00             ; DICTP FOPEN (fd53)
025b: 1c                         ; FOPEN
025c: 0c                         ; RET
;
025d: 18 43 fd 00 00             ; DICTP FREAD (fd43)
0262: 1d                         ; FREAD
0263: 0c                         ; RET
;
0264: 18 2f fd 00 00             ; DICTP FREADLINE (fd2f)
0269: 1e                         ; FREADLINE
026a: 0c                         ; RET
;
026b: 18 1e fd 00 00             ; DICTP FWRITE (fd1e)
0270: 1f                         ; FWRITE
0271: 0c                         ; RET
;
0272: 18 0d fd 00 00             ; DICTP FCLOSE (fd0d)
0277: 20                         ; FCLOSE
0278: 0c                         ; RET
;
0279: 18 00 fd 00 00             ; DICTP >R (fd00)
027e: 21                         ; DTOR
027f: 0c                         ; RET
;
0280: 18 f3 fc 00 00             ; DICTP R> (fcf3)
0285: 22                         ; RTOD
0286: 0c                         ; RET
;
0287: 18 e0 fc 00 00             ; DICTP LOGLEVEL (fce0)
028c: 23                         ; LOGLEVEL
028d: 0c                         ; RET
;
028e: 18 d2 fc 00 00             ; DICTP AND (fcd2)
0293: 24                         ; AND
0294: 0c                         ; RET
;
0295: 18 c3 fc 00 00             ; DICTP PICK (fcc3)
029a: 25                         ; PICK
029b: 0c                         ; RET
;
029c: 18 b3 fc 00 00             ; DICTP DEPTH (fcb3)
02a1: 26                         ; DEPTH
02a2: 0c                         ; RET
;
02a3: 18 a3 fc 00 00             ; DICTP GETCH (fca3)
02a8: 27                         ; GETCH
02a9: 0c                         ; RET
;
02aa: 18 90 fc 00 00             ; DICTP COMPAREI (fc90)
02af: 28                         ; COMPAREI
02b0: 0c                         ; RET
;
02b1: 18 81 fc 00 00             ; DICTP /MOD (fc81)
02b6: 29                         ; SLASHMOD
02b7: 0c                         ; RET
;
02b8: 18 73 fc 00 00             ; DICTP NOT (fc73)
02bd: 2a                         ; NOT
02be: 0c                         ; RET
;
02bf: 18 62 fc 00 00             ; DICTP RFETCH (fc62)
02c4: 2b                         ; RFETCH
02c5: 0c                         ; RET
;
02c6: 18 54 fc 00 00             ; DICTP INC (fc54)
02cb: 2c                         ; INC
02cc: 0c                         ; RET
;
02cd: 18 43 fc 00 00             ; DICTP RDEPTH (fc43)
02d2: 2d                         ; RDEPTH
02d3: 0c                         ; RET
;
02d4: 18 35 fc 00 00             ; DICTP DEC (fc35)
02d9: 2e                         ; DEC
02da: 0c                         ; RET
;
02db: 18 23 fc 00 00             ; DICTP GETTICK (fc23)
02e0: 2f                         ; GETTICK
02e1: 0c                         ; RET
;
02e2: 18 16 fc 00 00             ; DICTP << (fc16)
02e7: 30                         ; RESET
02e8: 0c                         ; RET
;
02e9: 18 09 fc 00 00             ; DICTP >> (fc09)
02ee: 31                         ; RESET
02ef: 0c                         ; RET
;
02f0: 18 f7 fb 00 00             ; DICTP BRANCHF (fbf7)
02f5: 0e 5a                      ; CLITERAL 90
02f7: 0b 15 01 00 00             ; CALL C, (0115)
02fc: 0c                         ; RET
;
02fd: 18 e4 fb 00 00             ; DICTP BRANCHFZ (fbe4)
0302: 0e 5b                      ; CLITERAL 91
0304: 0b 15 01 00 00             ; CALL C, (0115)
0309: 0c                         ; RET
;
030a: 18 d0 fb 00 00             ; DICTP BRANCHFNZ (fbd0)
030f: 0e 5c                      ; CLITERAL 92
0311: 0b 15 01 00 00             ; CALL C, (0115)
0316: 0c                         ; RET
;
0317: 18 be fb 00 00             ; DICTP BRANCHB (fbbe)
031c: 0e 5d                      ; CLITERAL 93
031e: 0b 15 01 00 00             ; CALL C, (0115)
0323: 0c                         ; RET
;
0324: 18 ab fb 00 00             ; DICTP BRANCHBZ (fbab)
0329: 0e 5e                      ; CLITERAL 94
032b: 0b 15 01 00 00             ; CALL C, (0115)
0330: 0c                         ; RET
;
0331: 18 97 fb 00 00             ; DICTP BRANCHBNZ (fb97)
0336: 0e 5f                      ; CLITERAL 95
0338: 0b 15 01 00 00             ; CALL C, (0115)
033d: 0c                         ; RET
;
033e: 18 89 fb 00 00             ; DICTP NOP (fb89)
0343: fc                         ; NOP
0344: 0c                         ; RET
;
0345: 18 79 fb 00 00             ; DICTP BREAK (fb79)
034a: fd                         ; BREAK
034b: 0c                         ; RET
;
034c: 18 69 fb 00 00             ; DICTP RESET (fb69)
0351: fe                         ; RESET
0352: 0c                         ; RET
;
0353: 18 5b fb 00 00             ; DICTP BYE (fb5b)
0358: ff                         ; BYE
0359: 0c                         ; RET
;
035a: 18 4a fb 00 00             ; DICTP INLINE (fb4a)
035f: 0b 09 01 00 00             ; CALL LAST (0109)
0364: 0e 02                      ; CLITERAL 2
0366: 0e 04                      ; CLITERAL 4
0368: 13                         ; MUL
0369: 11                         ; ADD
036a: 06                         ; DUP
036b: 0f                         ; CFETCH
036c: 0e 02                      ; CLITERAL 2
036e: 0d                         ; OR
036f: 04                         ; SWAP
0370: 10                         ; CSTORE
0371: 0c                         ; RET
;
0372: 18 36 fb 00 00             ; DICTP IMMEDIATE (fb36)
0377: 0b 09 01 00 00             ; CALL LAST (0109)
037c: 0e 02                      ; CLITERAL 2
037e: 0e 04                      ; CLITERAL 4
0380: 13                         ; MUL
0381: 11                         ; ADD
0382: 06                         ; DUP
0383: 0f                         ; CFETCH
0384: 0e 01                      ; CLITERAL 1
0386: 0d                         ; OR
0387: 04                         ; SWAP
0388: 10                         ; CSTORE
0389: 0c                         ; RET
;
038a: 18 26 fb 00 00             ; DICTP CELLS (fb26)
038f: 0e 04                      ; CLITERAL 4
0391: 13                         ; MUL
0392: 0c                         ; RET
;
0393: 18 0d fb 00 00             ; DICTP FLAG_IMMEDIATE (fb0d)
0398: 0e 01                      ; CLITERAL 1
039a: 0c                         ; RET
;
039b: 18 f7 fa 00 00             ; DICTP FLAG_INLINE (faf7)
03a0: 0e 02                      ; CLITERAL 2
03a2: 0c                         ; RET
;
03a3: 18 e9 fa 00 00             ; DICTP HEX (fae9)
03a8: 0e 10                      ; CLITERAL 16
03aa: 0b 5e 00 00 00             ; CALL BASE (005e)
03af: 03                         ; STORE
03b0: 0c                         ; RET
;
03b1: 18 d7 fa 00 00             ; DICTP DECIMAL (fad7)
03b6: 0e 0a                      ; CLITERAL 10
03b8: 0b 5e 00 00 00             ; CALL BASE (005e)
03bd: 03                         ; STORE
03be: 0c                         ; RET
;
03bf: 18 c7 fa 00 00             ; DICTP OCTAL (fac7)
03c4: 0e 08                      ; CLITERAL 8
03c6: 0b 5e 00 00 00             ; CALL BASE (005e)
03cb: 03                         ; STORE
03cc: 0c                         ; RET
;
03cd: 18 b6 fa 00 00             ; DICTP BINARY (fab6)
03d2: 0e 02                      ; CLITERAL 2
03d4: 0b 5e 00 00 00             ; CALL BASE (005e)
03d9: 03                         ; STORE
03da: 0c                         ; RET
;
03db: 18 a9 fa 00 00             ; DICTP ON (faa9)
03e0: 0e 01                      ; CLITERAL 1
03e2: 04                         ; SWAP
03e3: 03                         ; STORE
03e4: 0c                         ; RET
;
03e5: 18 9b fa 00 00             ; DICTP OFF (fa9b)
03ea: 0e 00                      ; CLITERAL 0
03ec: 04                         ; SWAP
03ed: 03                         ; STORE
03ee: 0c                         ; RET
;
03ef: 18 86 fa 00 00             ; DICTP ?COMPILING (fa86)
03f4: 0b 6d 00 00 00             ; CALL STATE (006d)
03f9: 02                         ; FETCH
03fa: 0c                         ; RET
;
03fb: 18 79 fa 00 00             ; DICTP IF (fa79)
0400: 0b ef 03 00 00             ; CALL ?COMPILING (03ef)
0405: 09 1b 04 00 00             ; JMPZ 041b
040a: 0b fd 02 00 00             ; CALL BRANCHFZ (02fd)
040f: 0b fd 00 00 00             ; CALL HERE (00fd)
0414: 0e 00                      ; CLITERAL 0
0416: 0b 15 01 00 00             ; CALL C, (0115)
041b: 0c                         ; RET
;
041c: 18 6a fa 00 00             ; DICTP ELSE (fa6a)
0421: 0b ef 03 00 00             ; CALL ?COMPILING (03ef)
0426: 09 46 04 00 00             ; JMPZ 0446
042b: 0b f0 02 00 00             ; CALL BRANCHF (02f0)
0430: 0b fd 00 00 00             ; CALL HERE (00fd)
0435: 0e 00                      ; CLITERAL 0
0437: 0b 15 01 00 00             ; CALL C, (0115)
043c: 04                         ; SWAP
043d: 0b fd 00 00 00             ; CALL HERE (00fd)
0442: 1a                         ; OVER
0443: 12                         ; SUB
0444: 04                         ; SWAP
0445: 10                         ; CSTORE
0446: 0c                         ; RET
;
0447: 18 5b fa 00 00             ; DICTP THEN (fa5b)
044c: 0b ef 03 00 00             ; CALL ?COMPILING (03ef)
0451: 09 5f 04 00 00             ; JMPZ 045f
0456: 0b fd 00 00 00             ; CALL HERE (00fd)
045b: 1a                         ; OVER
045c: 12                         ; SUB
045d: 04                         ; SWAP
045e: 10                         ; CSTORE
045f: 0c                         ; RET
;
0460: 18 4b fa 00 00             ; DICTP BEGIN (fa4b)
0465: 0b ef 03 00 00             ; CALL ?COMPILING (03ef)
046a: 5b 06                      ; BRANCHFZ 6 (0x0471)
046c: 0b fd 00 00 00             ; CALL HERE (00fd)
0471: 0c                         ; RET
;
0472: 18 3b fa 00 00             ; DICTP LEAVE (fa3b)
0477: 0b ef 03 00 00             ; CALL ?COMPILING (03ef)
047c: 5b 06                      ; BRANCHFZ 6 (0x0483)
047e: 0b d4 01 00 00             ; CALL RET (01d4)
0483: 0c                         ; RET
;
0484: 18 2b fa 00 00             ; DICTP AGAIN (fa2b)
0489: 0b ef 03 00 00             ; CALL ?COMPILING (03ef)
048e: 5b 12                      ; BRANCHFZ 18 (0x04a1)
0490: 0b 17 03 00 00             ; CALL BRANCHB (0317)
0495: 0b fd 00 00 00             ; CALL HERE (00fd)
049a: 04                         ; SWAP
049b: 12                         ; SUB
049c: 0b 15 01 00 00             ; CALL C, (0115)
04a1: 0c                         ; RET
;
04a2: 18 1b fa 00 00             ; DICTP WHILE (fa1b)
04a7: 0b ef 03 00 00             ; CALL ?COMPILING (03ef)
04ac: 5b 12                      ; BRANCHFZ 18 (0x04bf)
04ae: 0b 31 03 00 00             ; CALL BRANCHBNZ (0331)
04b3: 0b fd 00 00 00             ; CALL HERE (00fd)
04b8: 04                         ; SWAP
04b9: 12                         ; SUB
04ba: 0b 15 01 00 00             ; CALL C, (0115)
04bf: 0c                         ; RET
;
04c0: 18 0b fa 00 00             ; DICTP UNTIL (fa0b)
04c5: 0b ef 03 00 00             ; CALL ?COMPILING (03ef)
04ca: 5b 12                      ; BRANCHFZ 18 (0x04dd)
04cc: 0b 24 03 00 00             ; CALL BRANCHBZ (0324)
04d1: 0b fd 00 00 00             ; CALL HERE (00fd)
04d6: 04                         ; SWAP
04d7: 12                         ; SUB
04d8: 0b 15 01 00 00             ; CALL C, (0115)
04dd: 0c                         ; RET
;
04de: 18 fa f9 00 00             ; DICTP MEM_SZ (f9fa)
04e3: 0b 7c 00 00 00             ; CALL (MEM_SZ) (007c)
04e8: 02                         ; FETCH
04e9: 0c                         ; RET
;
04ea: 18 e7 f9 00 00             ; DICTP TRACE-ON (f9e7)
04ef: 0e 02                      ; CLITERAL 2
04f1: 23                         ; LOGLEVEL
04f2: 0c                         ; RET
;
04f3: 18 d3 f9 00 00             ; DICTP TRACE-OFF (f9d3)
04f8: 0e 00                      ; CLITERAL 0
04fa: 23                         ; LOGLEVEL
04fb: 0c                         ; RET
;
04fc: 18 c0 f9 00 00             ; DICTP DEBUG-ON (f9c0)
0501: 0e 01                      ; CLITERAL 1
0503: 23                         ; LOGLEVEL
0504: 0c                         ; RET
;
0505: 18 ac f9 00 00             ; DICTP DEBUG-OFF (f9ac)
050a: 0e 00                      ; CLITERAL 0
050c: 23                         ; LOGLEVEL
050d: 0c                         ; RET
;
050e: 18 9f f9 00 00             ; DICTP R@ (f99f)
0513: 2b                         ; RFETCH
0514: 0c                         ; RET
;
0515: 18 8f f9 00 00             ; DICTP RDROP (f98f)
051a: 22                         ; RTOD
051b: 05                         ; DROP
051c: 0c                         ; RET
;
051d: 18 80 f9 00 00             ; DICTP ?DUP (f980)
0522: 06                         ; DUP
0523: 5b 02                      ; BRANCHFZ 2 (0x0526)
0525: 06                         ; DUP
0526: 0c                         ; RET
;
0527: 18 71 f9 00 00             ; DICTP 2DUP (f971)
052c: 1a                         ; OVER
052d: 1a                         ; OVER
052e: 0c                         ; RET
;
052f: 18 61 f9 00 00             ; DICTP 2DROP (f961)
0534: 05                         ; DROP
0535: 05                         ; DROP
0536: 0c                         ; RET
;
0537: 18 52 f9 00 00             ; DICTP TUCK (f952)
053c: 04                         ; SWAP
053d: 1a                         ; OVER
053e: 0c                         ; RET
;
053f: 18 44 f9 00 00             ; DICTP NIP (f944)
0544: 04                         ; SWAP
0545: 05                         ; DROP
0546: 0c                         ; RET
;
0547: 18 36 f9 00 00             ; DICTP ROT (f936)
054c: 21                         ; DTOR
054d: 04                         ; SWAP
054e: 22                         ; RTOD
054f: 04                         ; SWAP
0550: 0c                         ; RET
;
0551: 18 27 f9 00 00             ; DICTP -ROT (f927)
0556: 04                         ; SWAP
0557: 21                         ; DTOR
0558: 04                         ; SWAP
0559: 22                         ; RTOD
055a: 0c                         ; RET
;
055b: 18 1b f9 00 00             ; DICTP / (f91b)
0560: 29                         ; SLASHMOD
0561: 04                         ; SWAP
0562: 05                         ; DROP
0563: 0c                         ; RET
;
0564: 18 0d f9 00 00             ; DICTP MOD (f90d)
0569: 29                         ; SLASHMOD
056a: 05                         ; DROP
056b: 0c                         ; RET
;
056c: 18 00 f9 00 00             ; DICTP 1+ (f900)
0571: 2c                         ; INC
0572: 0c                         ; RET
;
0573: 18 f3 f8 00 00             ; DICTP 1- (f8f3)
0578: 2e                         ; DEC
0579: 0c                         ; RET
;
057a: 18 e6 f8 00 00             ; DICTP 2* (f8e6)
057f: 0e 02                      ; CLITERAL 2
0581: 13                         ; MUL
0582: 0c                         ; RET
;
0583: 18 d9 f8 00 00             ; DICTP 2/ (f8d9)
0588: 0e 02                      ; CLITERAL 2
058a: 29                         ; SLASHMOD
058b: 04                         ; SWAP
058c: 05                         ; DROP
058d: 0c                         ; RET
;
058e: 18 cc f8 00 00             ; DICTP += (f8cc)
0593: 1a                         ; OVER
0594: 02                         ; FETCH
0595: 11                         ; ADD
0596: 04                         ; SWAP
0597: 03                         ; STORE
0598: 0c                         ; RET
;
0599: 18 bf f8 00 00             ; DICTP -= (f8bf)
059e: 1a                         ; OVER
059f: 02                         ; FETCH
05a0: 04                         ; SWAP
05a1: 12                         ; SUB
05a2: 04                         ; SWAP
05a3: 03                         ; STORE
05a4: 0c                         ; RET
;
05a5: 18 b2 f8 00 00             ; DICTP +! (f8b2)
05aa: 04                         ; SWAP
05ab: 1a                         ; OVER
05ac: 02                         ; FETCH
05ad: 11                         ; ADD
05ae: 04                         ; SWAP
05af: 03                         ; STORE
05b0: 0c                         ; RET
;
05b1: 18 a5 f8 00 00             ; DICTP -! (f8a5)
05b6: 04                         ; SWAP
05b7: 1a                         ; OVER
05b8: 02                         ; FETCH
05b9: 04                         ; SWAP
05ba: 12                         ; SUB
05bb: 04                         ; SWAP
05bc: 03                         ; STORE
05bd: 0c                         ; RET
;
05be: 18 98 f8 00 00             ; DICTP ++ (f898)
05c3: 06                         ; DUP
05c4: 02                         ; FETCH
05c5: 2c                         ; INC
05c6: 04                         ; SWAP
05c7: 03                         ; STORE
05c8: 0c                         ; RET
;
05c9: 18 8b f8 00 00             ; DICTP -- (f88b)
05ce: 06                         ; DUP
05cf: 02                         ; FETCH
05d0: 2e                         ; DEC
05d1: 04                         ; SWAP
05d2: 03                         ; STORE
05d3: 0c                         ; RET
;
05d4: 18 7d f8 00 00             ; DICTP C++ (f87d)
05d9: 06                         ; DUP
05da: 0f                         ; CFETCH
05db: 2c                         ; INC
05dc: 04                         ; SWAP
05dd: 10                         ; CSTORE
05de: 0c                         ; RET
;
05df: 18 6f f8 00 00             ; DICTP C-- (f86f)
05e4: 06                         ; DUP
05e5: 0f                         ; CFETCH
05e6: 2e                         ; DEC
05e7: 04                         ; SWAP
05e8: 10                         ; CSTORE
05e9: 0c                         ; RET
;
05ea: 18 62 f8 00 00             ; DICTP 0= (f862)
05ef: 2a                         ; NOT
05f0: 0c                         ; RET
;
05f1: 18 55 f8 00 00             ; DICTP <> (f855)
05f6: 16                         ; EQ
05f7: 2a                         ; NOT
05f8: 0c                         ; RET
;
05f9: 18 48 f8 00 00             ; DICTP <= (f848)
05fe: 17                         ; GT
05ff: 2a                         ; NOT
0600: 0c                         ; RET
;
0601: 18 3b f8 00 00             ; DICTP >= (f83b)
0606: 15                         ; LT
0607: 2a                         ; NOT
0608: 0c                         ; RET
;
0609: 18 2c f8 00 00             ; DICTP TRUE (f82c)
060e: 01 ff ff ff ff             ; LITERAL -1 (ffffffff)
0613: 0c                         ; RET
;
0614: 18 1c f8 00 00             ; DICTP FALSE (f81c)
0619: 0e 00                      ; CLITERAL 0
061b: 0c                         ; RET
;
061c: 18 0c f8 00 00             ; DICTP COUNT (f80c)
0621: 06                         ; DUP
0622: 2c                         ; INC
0623: 04                         ; SWAP
0624: 0f                         ; CFETCH
0625: 0c                         ; RET
;
0626: 18 fd f7 00 00             ; DICTP TYPE (f7fd)
062b: 06                         ; DUP
062c: 2a                         ; NOT
062d: 5b 04                      ; BRANCHFZ 4 (0x0632)
062f: 05                         ; DROP
0630: 05                         ; DROP
0631: 0c                         ; RET
0632: 04                         ; SWAP
0633: 06                         ; DUP
0634: 0f                         ; CFETCH
0635: 19                         ; EMIT
0636: 2c                         ; INC
0637: 04                         ; SWAP
0638: 2e                         ; DEC
0639: 5d 0f                      ; BRANCHB 15 (0x062b)
063b: 0c                         ; RET
;
063c: 18 f0 f7 00 00             ; DICTP CT (f7f0)
0641: 0b 1c 06 00 00             ; CALL COUNT (061c)
0646: 0b 26 06 00 00             ; CALL TYPE (0626)
064b: 0c                         ; RET
;
064c: 18 e4 f7 00 00             ; DICTP \ (f7e4)
0651: 0e 00                      ; CLITERAL 0
0653: 0b 8b 00 00 00             ; CALL >IN (008b)
0658: 02                         ; FETCH
0659: 10                         ; CSTORE
065a: 0c                         ; RET
;
065b: 18 d8 f7 00 00             ; DICTP ( (f7d8)
0660: 0b 8b 00 00 00             ; CALL >IN (008b)
0665: 02                         ; FETCH
0666: 0f                         ; CFETCH
0667: 06                         ; DUP
0668: 2a                         ; NOT
0669: 5b 1d                      ; BRANCHFZ 29 (0x0687)
066b: 07 13 6d 69 73 73 69 6e 67 20 63 6c 6f 73 69 6e 67 20 27 29 27 00 ; SLITERAL (066c) [missing closing ')']
0681: 0b 3c 06 00 00             ; CALL CT (063c)
0686: fe                         ; RESET
0687: 0b 8b 00 00 00             ; CALL >IN (008b)
068c: 06                         ; DUP
068d: 02                         ; FETCH
068e: 2c                         ; INC
068f: 04                         ; SWAP
0690: 03                         ; STORE
0691: 0e 29                      ; CLITERAL 41
0693: 16                         ; EQ
0694: 5b 02                      ; BRANCHFZ 2 (0x0697)
0696: 0c                         ; RET
0697: 5d 38                      ; BRANCHB 56 (0x0660)
0699: 0c                         ; RET
;
069a: 18 c8 f7 00 00             ; DICTP SPACE (f7c8)
069f: 0e 20                      ; CLITERAL 32
06a1: 19                         ; EMIT
06a2: 0c                         ; RET
;
06a3: 18 bb f7 00 00             ; DICTP BL (f7bb)
06a8: 0e 20                      ; CLITERAL 32
06aa: 19                         ; EMIT
06ab: 0c                         ; RET
;
06ac: 18 ac f7 00 00             ; DICTP CRLF (f7ac)
06b1: 0e 0d                      ; CLITERAL 13
06b3: 19                         ; EMIT
06b4: 0e 0a                      ; CLITERAL 10
06b6: 19                         ; EMIT
06b7: 0c                         ; RET
;
06b8: 18 9f f7 00 00             ; DICTP CR (f79f)
06bd: 0e 0d                      ; CLITERAL 13
06bf: 19                         ; EMIT
06c0: 0e 0a                      ; CLITERAL 10
06c2: 19                         ; EMIT
06c3: 0c                         ; RET
;
06c4: 18 8d f7 00 00             ; DICTP BETWEEN (f78d)
06c9: 0e 02                      ; CLITERAL 2
06cb: 25                         ; PICK
06cc: 15                         ; LT
06cd: 5b 06                      ; BRANCHFZ 6 (0x06d4)
06cf: 05                         ; DROP
06d0: 05                         ; DROP
06d1: 0e 00                      ; CLITERAL 0
06d3: 0c                         ; RET
06d4: 15                         ; LT
06d5: 2a                         ; NOT
06d6: 0c                         ; RET
;
06d7: 18 7c f7 00 00             ; DICTP skipWS (f77c)
06dc: 06                         ; DUP
06dd: 0f                         ; CFETCH
06de: 06                         ; DUP
06df: 5b 0c                      ; BRANCHFZ 12 (0x06ec)
06e1: 0e 20                      ; CLITERAL 32
06e3: 17                         ; GT
06e4: 5b 04                      ; BRANCHFZ 4 (0x06e9)
06e6: 0c                         ; RET
06e7: 5a 02                      ; BRANCHF 2 (0x06ea)
06e9: 2c                         ; INC
06ea: 5a 03                      ; BRANCHF 3 (0x06ee)
06ec: 05                         ; DROP
06ed: 0c                         ; RET
06ee: 5d 13                      ; BRANCHB 19 (0x06dc)
06f0: 0c                         ; RET
;
06f1: 18 67 f7 00 00             ; DICTP getOneWord (f767)
06f6: 06                         ; DUP
06f7: 21                         ; DTOR
06f8: 21                         ; DTOR
06f9: 2b                         ; RFETCH
06fa: 0f                         ; CFETCH
06fb: 0e 20                      ; CLITERAL 32
06fd: 17                         ; GT
06fe: 5b 06                      ; BRANCHFZ 6 (0x0705)
0700: 22                         ; RTOD
0701: 2c                         ; INC
0702: 21                         ; DTOR
0703: 5a 10                      ; BRANCHF 16 (0x0714)
0705: 2b                         ; RFETCH
0706: 0f                         ; CFETCH
0707: 5b 08                      ; BRANCHFZ 8 (0x0710)
0709: 0e 00                      ; CLITERAL 0
070b: 2b                         ; RFETCH
070c: 10                         ; CSTORE
070d: 22                         ; RTOD
070e: 2c                         ; INC
070f: 21                         ; DTOR
0710: 22                         ; RTOD
0711: 22                         ; RTOD
0712: 04                         ; SWAP
0713: 0c                         ; RET
0714: 5d 1c                      ; BRANCHB 28 (0x06f9)
0716: 0c                         ; RET
;
0717: 18 53 f7 00 00             ; DICTP DICT>NEXT (f753)
071c: 0c                         ; RET
;
071d: 18 41 f7 00 00             ; DICTP DICT>XT (f741)
0722: 0e 04                      ; CLITERAL 4
0724: 11                         ; ADD
0725: 0c                         ; RET
;
0726: 18 2c f7 00 00             ; DICTP DICT>FLAGS (f72c)
072b: 0e 02                      ; CLITERAL 2
072d: 0e 04                      ; CLITERAL 4
072f: 13                         ; MUL
0730: 11                         ; ADD
0731: 0c                         ; RET
;
0732: 18 18 f7 00 00             ; DICTP DICT>NAME (f718)
0737: 0b 26 07 00 00             ; CALL DICT>FLAGS (0726)
073c: 2c                         ; INC
073d: 0c                         ; RET
;
073e: 18 04 f7 00 00             ; DICTP NEXT>DICT (f704)
0743: 0c                         ; RET
;
0744: 18 f2 f6 00 00             ; DICTP XT>DICT (f6f2)
0749: 0e 04                      ; CLITERAL 4
074b: 12                         ; SUB
074c: 0c                         ; RET
;
074d: 18 dd f6 00 00             ; DICTP FLAGS>DICT (f6dd)
0752: 0e 02                      ; CLITERAL 2
0754: 0e 04                      ; CLITERAL 4
0756: 13                         ; MUL
0757: 12                         ; SUB
0758: 0c                         ; RET
;
0759: 18 c9 f6 00 00             ; DICTP NAME>DICT (f6c9)
075e: 2e                         ; DEC
075f: 0e 02                      ; CLITERAL 2
0761: 0e 04                      ; CLITERAL 4
0763: 13                         ; MUL
0764: 12                         ; SUB
0765: 0c                         ; RET
;
0766: 18 b4 f6 00 00             ; DICTP DICT.GetXT (f6b4)
076b: 0b 1d 07 00 00             ; CALL DICT>XT (071d)
0770: 02                         ; FETCH
0771: 0c                         ; RET
;
0772: 18 9c f6 00 00             ; DICTP DICT.GetFLAGS (f69c)
0777: 0b 26 07 00 00             ; CALL DICT>FLAGS (0726)
077c: 0f                         ; CFETCH
077d: 0c                         ; RET
;
077e: 18 87 f6 00 00             ; DICTP DICTP>NAME (f687)
0783: 2c                         ; INC
0784: 02                         ; FETCH
0785: 0b 32 07 00 00             ; CALL DICT>NAME (0732)
078a: 0c                         ; RET
;
078b: 18 71 f6 00 00             ; DICTP XT.GetDICTP (f671)
0790: 06                         ; DUP
0791: 0f                         ; CFETCH
0792: 0e 18                      ; CLITERAL 24
0794: 16                         ; EQ
0795: 5b 05                      ; BRANCHFZ 5 (0x079b)
0797: 2c                         ; INC
0798: 02                         ; FETCH
0799: 5a 03                      ; BRANCHF 3 (0x079d)
079b: 05                         ; DROP
079c: fe                         ; RESET
079d: 0c                         ; RET
;
079e: 18 54 f6 00 00             ; DICTP FLAGS.ISIMMEDIATE? (f654)
07a3: 0e 01                      ; CLITERAL 1
07a5: 24                         ; AND
07a6: 0c                         ; RET
;
07a7: 18 3a f6 00 00             ; DICTP FLAGS.ISINLINE? (f63a)
07ac: 0e 02                      ; CLITERAL 2
07ae: 24                         ; AND
07af: 0c                         ; RET
;
07b0: 18 1e f6 00 00             ; DICTP DICT.GetIMMEDIATE (f61e)
07b5: 0b 72 07 00 00             ; CALL DICT.GetFLAGS (0772)
07ba: 0b 9e 07 00 00             ; CALL FLAGS.ISIMMEDIATE? (079e)
07bf: 0c                         ; RET
;
07c0: 18 05 f6 00 00             ; DICTP DICT.GetINLINE (f605)
07c5: 0b 72 07 00 00             ; CALL DICT.GetFLAGS (0772)
07ca: 0b a7 07 00 00             ; CALL FLAGS.ISINLINE? (07a7)
07cf: 0c                         ; RET
;
07d0: 18 f0 f5 00 00             ; DICTP findInDict (f5f0)
07d5: 0b 09 01 00 00             ; CALL LAST (0109)
07da: 21                         ; DTOR
07db: 2b                         ; RFETCH
07dc: 06                         ; DUP
07dd: 5b 1d                      ; BRANCHFZ 29 (0x07fb)
07df: 0b 32 07 00 00             ; CALL DICT>NAME (0732)
07e4: 2c                         ; INC
07e5: 1a                         ; OVER
07e6: 28                         ; COMPAREI
07e7: 5b 11                      ; BRANCHFZ 17 (0x07f9)
07e9: 05                         ; DROP
07ea: 2b                         ; RFETCH
07eb: 0b 66 07 00 00             ; CALL DICT.GetXT (0766)
07f0: 22                         ; RTOD
07f1: 0b 72 07 00 00             ; CALL DICT.GetFLAGS (0772)
07f6: 0e 01                      ; CLITERAL 1
07f8: 0c                         ; RET
07f9: 5a 09                      ; BRANCHF 9 (0x0803)
07fb: 05                         ; DROP
07fc: 05                         ; DROP
07fd: 22                         ; RTOD
07fe: 0e 00                      ; CLITERAL 0
0800: 0e 00                      ; CLITERAL 0
0802: 0c                         ; RET
0803: 22                         ; RTOD
0804: 02                         ; FETCH
0805: 21                         ; DTOR
0806: 5d 2c                      ; BRANCHB 44 (0x07db)
0808: 0c                         ; RET
;
0809: 18 df f5 00 00             ; DICTP isHEX? (f5df)
080e: 0b 5e 00 00 00             ; CALL BASE (005e)
0813: 02                         ; FETCH
0814: 0e 10                      ; CLITERAL 16
0816: 16                         ; EQ
0817: 0c                         ; RET
;
0818: 18 ca f5 00 00             ; DICTP isNumChar? (f5ca)
081d: 06                         ; DUP
081e: 0e 30                      ; CLITERAL 48
0820: 0e 39                      ; CLITERAL 57
0822: 0b c4 06 00 00             ; CALL BETWEEN (06c4)
0827: 5b 07                      ; BRANCHFZ 7 (0x082f)
0829: 0e 30                      ; CLITERAL 48
082b: 12                         ; SUB
082c: 0e 01                      ; CLITERAL 1
082e: 0c                         ; RET
082f: 0b 09 08 00 00             ; CALL isHEX? (0809)
0834: 5b 25                      ; BRANCHFZ 37 (0x085a)
0836: 06                         ; DUP
0837: 0e 41                      ; CLITERAL 65
0839: 0e 46                      ; CLITERAL 70
083b: 0b c4 06 00 00             ; CALL BETWEEN (06c4)
0840: 5b 07                      ; BRANCHFZ 7 (0x0848)
0842: 0e 37                      ; CLITERAL 55
0844: 12                         ; SUB
0845: 0e 01                      ; CLITERAL 1
0847: 0c                         ; RET
0848: 06                         ; DUP
0849: 0e 61                      ; CLITERAL 97
084b: 0e 66                      ; CLITERAL 102
084d: 0b c4 06 00 00             ; CALL BETWEEN (06c4)
0852: 5b 07                      ; BRANCHFZ 7 (0x085a)
0854: 0e 57                      ; CLITERAL 87
0856: 12                         ; SUB
0857: 0e 01                      ; CLITERAL 1
0859: 0c                         ; RET
085a: 0e 00                      ; CLITERAL 0
085c: 0c                         ; RET
;
085d: 18 b9 f5 00 00             ; DICTP NEGATE (f5b9)
0862: 0e 00                      ; CLITERAL 0
0864: 04                         ; SWAP
0865: 12                         ; SUB
0866: 0c                         ; RET
;
0867: 18 ab f5 00 00             ; DICTP ABS (f5ab)
086c: 06                         ; DUP
086d: 0e 00                      ; CLITERAL 0
086f: 15                         ; LT
0870: 5b 06                      ; BRANCHFZ 6 (0x0877)
0872: 0b 5d 08 00 00             ; CALL NEGATE (085d)
0877: 0c                         ; RET
;
0878: 18 97 f5 00 00             ; DICTP isNumber? (f597)
087d: 06                         ; DUP
087e: 0f                         ; CFETCH
087f: 0e 2d                      ; CLITERAL 45
0881: 16                         ; EQ
0882: 06                         ; DUP
0883: 0b 9a 00 00 00             ; CALL #NEG (009a)
0888: 03                         ; STORE
0889: 5b 02                      ; BRANCHFZ 2 (0x088c)
088b: 2c                         ; INC
088c: 0e 00                      ; CLITERAL 0
088e: 21                         ; DTOR
088f: 06                         ; DUP
0890: 0f                         ; CFETCH
0891: 06                         ; DUP
0892: 0e 00                      ; CLITERAL 0
0894: 16                         ; EQ
0895: 5b 14                      ; BRANCHFZ 20 (0x08aa)
0897: 05                         ; DROP
0898: 05                         ; DROP
0899: 22                         ; RTOD
089a: 0b 9a 00 00 00             ; CALL #NEG (009a)
089f: 02                         ; FETCH
08a0: 5b 06                      ; BRANCHFZ 6 (0x08a7)
08a2: 0b 5d 08 00 00             ; CALL NEGATE (085d)
08a7: 0e 01                      ; CLITERAL 1
08a9: 0c                         ; RET
08aa: 0b 18 08 00 00             ; CALL isNumChar? (0818)
08af: 5b 0e                      ; BRANCHFZ 14 (0x08be)
08b1: 22                         ; RTOD
08b2: 0b 5e 00 00 00             ; CALL BASE (005e)
08b7: 02                         ; FETCH
08b8: 13                         ; MUL
08b9: 11                         ; ADD
08ba: 21                         ; DTOR
08bb: 2c                         ; INC
08bc: 5a 06                      ; BRANCHF 6 (0x08c3)
08be: 05                         ; DROP
08bf: 22                         ; RTOD
08c0: 0e 00                      ; CLITERAL 0
08c2: 0c                         ; RET
08c3: 5d 35                      ; BRANCHB 53 (0x088f)
08c5: 0c                         ; RET
;
08c6: 18 8a f5 00 00             ; DICTP <# (f58a)
08cb: 0b 9a 00 00 00             ; CALL #NEG (009a)
08d0: 0b e5 03 00 00             ; CALL OFF (03e5)
08d5: 0b a9 00 00 00             ; CALL #LEN (00a9)
08da: 0b e5 03 00 00             ; CALL OFF (03e5)
08df: 06                         ; DUP
08e0: 0e 00                      ; CLITERAL 0
08e2: 15                         ; LT
08e3: 5b 10                      ; BRANCHFZ 16 (0x08f4)
08e5: 0b 5d 08 00 00             ; CALL NEGATE (085d)
08ea: 0b 9a 00 00 00             ; CALL #NEG (009a)
08ef: 0b db 03 00 00             ; CALL ON (03db)
08f4: 0e 00                      ; CLITERAL 0
08f6: 04                         ; SWAP
08f7: 0c                         ; RET
;
08f8: 18 7e f5 00 00             ; DICTP # (f57e)
08fd: 0b 5e 00 00 00             ; CALL BASE (005e)
0902: 02                         ; FETCH
0903: 29                         ; SLASHMOD
0904: 04                         ; SWAP
0905: 0e 30                      ; CLITERAL 48
0907: 11                         ; ADD
0908: 06                         ; DUP
0909: 0e 39                      ; CLITERAL 57
090b: 17                         ; GT
090c: 5b 04                      ; BRANCHFZ 4 (0x0911)
090e: 0e 07                      ; CLITERAL 7
0910: 11                         ; ADD
0911: 0b a9 00 00 00             ; CALL #LEN (00a9)
0916: 06                         ; DUP
0917: 02                         ; FETCH
0918: 2c                         ; INC
0919: 04                         ; SWAP
091a: 03                         ; STORE
091b: 04                         ; SWAP
091c: 0c                         ; RET
;
091d: 18 71 f5 00 00             ; DICTP #S (f571)
0922: 0b f8 08 00 00             ; CALL # (08f8)
0927: 06                         ; DUP
0928: 2a                         ; NOT
0929: 5e 08                      ; BRANCHBZ 8 (0x0922)
092b: 0c                         ; RET
;
092c: 18 64 f5 00 00             ; DICTP #> (f564)
0931: 0c                         ; RET
;
0932: 18 56 f5 00 00             ; DICTP #P- (f556)
0937: 05                         ; DROP
0938: 0b 9a 00 00 00             ; CALL #NEG (009a)
093d: 02                         ; FETCH
093e: 5b 04                      ; BRANCHFZ 4 (0x0943)
0940: 0e 2d                      ; CLITERAL 45
0942: 19                         ; EMIT
0943: 0c                         ; RET
;
0944: 18 49 f5 00 00             ; DICTP #P (f549)
0949: 0b 32 09 00 00             ; CALL #P- (0932)
094e: 19                         ; EMIT
094f: 06                         ; DUP
0950: 2a                         ; NOT
0951: 5e 04                      ; BRANCHBZ 4 (0x094e)
0953: 05                         ; DROP
0954: 0c                         ; RET
;
0955: 18 3b f5 00 00             ; DICTP (.) (f53b)
095a: 0b c6 08 00 00             ; CALL <# (08c6)
095f: 0b 1d 09 00 00             ; CALL #S (091d)
0964: 0b 2c 09 00 00             ; CALL #> (092c)
0969: 0b 44 09 00 00             ; CALL #P (0944)
096e: 0c                         ; RET
;
096f: 18 2f f5 00 00             ; DICTP . (f52f)
0974: 0b 55 09 00 00             ; CALL (.) (0955)
0979: 0e 20                      ; CLITERAL 32
097b: 19                         ; EMIT
097c: 0c                         ; RET
;
097d: 18 22 f5 00 00             ; DICTP .2 (f522)
0982: 0b c6 08 00 00             ; CALL <# (08c6)
0987: 0b f8 08 00 00             ; CALL # (08f8)
098c: 0b f8 08 00 00             ; CALL # (08f8)
0991: 0b 2c 09 00 00             ; CALL #> (092c)
0996: 0b 44 09 00 00             ; CALL #P (0944)
099b: 0c                         ; RET
;
099c: 18 15 f5 00 00             ; DICTP .3 (f515)
09a1: 0b c6 08 00 00             ; CALL <# (08c6)
09a6: 0b f8 08 00 00             ; CALL # (08f8)
09ab: 0b f8 08 00 00             ; CALL # (08f8)
09b0: 0b f8 08 00 00             ; CALL # (08f8)
09b5: 0b 2c 09 00 00             ; CALL #> (092c)
09ba: 0b 44 09 00 00             ; CALL #P (0944)
09bf: 0c                         ; RET
;
09c0: 18 08 f5 00 00             ; DICTP .4 (f508)
09c5: 0b c6 08 00 00             ; CALL <# (08c6)
09ca: 0b f8 08 00 00             ; CALL # (08f8)
09cf: 0b f8 08 00 00             ; CALL # (08f8)
09d4: 0b f8 08 00 00             ; CALL # (08f8)
09d9: 0b f8 08 00 00             ; CALL # (08f8)
09de: 0b 2c 09 00 00             ; CALL #> (092c)
09e3: 0b 44 09 00 00             ; CALL #P (0944)
09e8: 0c                         ; RET
;
09e9: 18 f9 f4 00 00             ; DICTP HEX. (f4f9)
09ee: 0b 5e 00 00 00             ; CALL BASE (005e)
09f3: 02                         ; FETCH
09f4: 04                         ; SWAP
09f5: 0b a3 03 00 00             ; CALL HEX (03a3)
09fa: 0b 55 09 00 00             ; CALL (.) (0955)
09ff: 0b 5e 00 00 00             ; CALL BASE (005e)
0a04: 03                         ; STORE
0a05: 0c                         ; RET
;
0a06: 18 e9 f4 00 00             ; DICTP HEX.2 (f4e9)
0a0b: 0b 5e 00 00 00             ; CALL BASE (005e)
0a10: 02                         ; FETCH
0a11: 04                         ; SWAP
0a12: 0b a3 03 00 00             ; CALL HEX (03a3)
0a17: 0b 7d 09 00 00             ; CALL .2 (097d)
0a1c: 0b 5e 00 00 00             ; CALL BASE (005e)
0a21: 03                         ; STORE
0a22: 0c                         ; RET
;
0a23: 18 d9 f4 00 00             ; DICTP HEX.4 (f4d9)
0a28: 0b 5e 00 00 00             ; CALL BASE (005e)
0a2d: 02                         ; FETCH
0a2e: 04                         ; SWAP
0a2f: 0b a3 03 00 00             ; CALL HEX (03a3)
0a34: 0b c0 09 00 00             ; CALL .4 (09c0)
0a39: 0b 5e 00 00 00             ; CALL BASE (005e)
0a3e: 03                         ; STORE
0a3f: 0c                         ; RET
;
0a40: 18 c6 f4 00 00             ; DICTP DECIMAL. (f4c6)
0a45: 0b 5e 00 00 00             ; CALL BASE (005e)
0a4a: 02                         ; FETCH
0a4b: 04                         ; SWAP
0a4c: 0b b1 03 00 00             ; CALL DECIMAL (03b1)
0a51: 0b 55 09 00 00             ; CALL (.) (0955)
0a56: 0b 5e 00 00 00             ; CALL BASE (005e)
0a5b: 03                         ; STORE
0a5c: 0c                         ; RET
;
0a5d: 18 b2 f4 00 00             ; DICTP DECIMAL.3 (f4b2)
0a62: 0b 5e 00 00 00             ; CALL BASE (005e)
0a67: 02                         ; FETCH
0a68: 04                         ; SWAP
0a69: 0b b1 03 00 00             ; CALL DECIMAL (03b1)
0a6e: 0b 9c 09 00 00             ; CALL .3 (099c)
0a73: 0b 5e 00 00 00             ; CALL BASE (005e)
0a78: 03                         ; STORE
0a79: 0c                         ; RET
;
0a7a: 18 a0 f4 00 00             ; DICTP BINARY. (f4a0)
0a7f: 0b 5e 00 00 00             ; CALL BASE (005e)
0a84: 02                         ; FETCH
0a85: 04                         ; SWAP
0a86: 0b cd 03 00 00             ; CALL BINARY (03cd)
0a8b: 0b 55 09 00 00             ; CALL (.) (0955)
0a90: 0b 5e 00 00 00             ; CALL BASE (005e)
0a95: 03                         ; STORE
0a96: 0c                         ; RET
;
0a97: 18 92 f4 00 00             ; DICTP MIN (f492)
0a9c: 1a                         ; OVER
0a9d: 1a                         ; OVER
0a9e: 17                         ; GT
0a9f: 5b 02                      ; BRANCHFZ 2 (0x0aa2)
0aa1: 04                         ; SWAP
0aa2: 05                         ; DROP
0aa3: 0c                         ; RET
;
0aa4: 18 84 f4 00 00             ; DICTP MAX (f484)
0aa9: 1a                         ; OVER
0aaa: 1a                         ; OVER
0aab: 15                         ; LT
0aac: 5b 02                      ; BRANCHFZ 2 (0x0aaf)
0aae: 04                         ; SWAP
0aaf: 05                         ; DROP
0ab0: 0c                         ; RET
;
0ab1: 18 77 f4 00 00             ; DICTP .S (f477)
0ab6: 0e 20                      ; CLITERAL 32
0ab8: 19                         ; EMIT
0ab9: 26                         ; DEPTH
0aba: 0e 00                      ; CLITERAL 0
0abc: 15                         ; LT
0abd: 5b 1f                      ; BRANCHFZ 31 (0x0add)
0abf: 07 10 53 74 61 63 6b 20 75 6e 64 65 72 66 6c 6f 77 21 00 ; SLITERAL (0ac0) [Stack underflow!]
0ad2: 0b 1c 06 00 00             ; CALL COUNT (061c)
0ad7: 0b 26 06 00 00             ; CALL TYPE (0626)
0adc: fe                         ; RESET
0add: 26                         ; DEPTH
0ade: 0e 00                      ; CLITERAL 0
0ae0: 16                         ; EQ
0ae1: 5b 0b                      ; BRANCHFZ 11 (0x0aed)
0ae3: 0e 28                      ; CLITERAL 40
0ae5: 19                         ; EMIT
0ae6: 0e ed                      ; CLITERAL 237
0ae8: 19                         ; EMIT
0ae9: 0e 29                      ; CLITERAL 41
0aeb: 19                         ; EMIT
0aec: 0c                         ; RET
0aed: 0e 28                      ; CLITERAL 40
0aef: 19                         ; EMIT
0af0: 0e 20                      ; CLITERAL 32
0af2: 19                         ; EMIT
0af3: 26                         ; DEPTH
0af4: 2e                         ; DEC
0af5: 21                         ; DTOR
0af6: 2b                         ; RFETCH
0af7: 25                         ; PICK
0af8: 0b 6f 09 00 00             ; CALL . (096f)
0afd: 2b                         ; RFETCH
0afe: 5b 06                      ; BRANCHFZ 6 (0x0b05)
0b00: 22                         ; RTOD
0b01: 2e                         ; DEC
0b02: 21                         ; DTOR
0b03: 5a 07                      ; BRANCHF 7 (0x0b0b)
0b05: 22                         ; RTOD
0b06: 05                         ; DROP
0b07: 0e 29                      ; CLITERAL 41
0b09: 19                         ; EMIT
0b0a: 0c                         ; RET
0b0b: 5d 16                      ; BRANCHB 22 (0x0af6)
0b0d: 0c                         ; RET
;
0b0e: 18 63 f4 00 00             ; DICTP .(MEM_SZ) (f463)
0b13: 07 08 4d 65 6d 6f 72 79 3a 20 00 ; SLITERAL (0b14) [Memory: ]
0b1e: 0b 3c 06 00 00             ; CALL CT (063c)
0b23: 0b de 04 00 00             ; CALL MEM_SZ (04de)
0b28: 06                         ; DUP
0b29: 0b e9 09 00 00             ; CALL HEX. (09e9)
0b2e: 07 02 20 28 00             ; SLITERAL (0b2f) [ (]
0b33: 0b 3c 06 00 00             ; CALL CT (063c)
0b38: 0b 55 09 00 00             ; CALL (.) (0955)
0b3d: 07 01 29 00                ; SLITERAL (0b3e) [)]
0b41: 0b 3c 06 00 00             ; CALL CT (063c)
0b46: 0c                         ; RET
;
0b47: 18 51 f4 00 00             ; DICTP .(HERE) (f451)
0b4c: 07 06 48 45 52 45 3a 20 00 ; SLITERAL (0b4d) [HERE: ]
0b55: 0b 3c 06 00 00             ; CALL CT (063c)
0b5a: 0b fd 00 00 00             ; CALL HERE (00fd)
0b5f: 06                         ; DUP
0b60: 0b e9 09 00 00             ; CALL HEX. (09e9)
0b65: 07 02 20 28 00             ; SLITERAL (0b66) [ (]
0b6a: 0b 3c 06 00 00             ; CALL CT (063c)
0b6f: 0b 55 09 00 00             ; CALL (.) (0955)
0b74: 07 01 29 00                ; SLITERAL (0b75) [)]
0b78: 0b 3c 06 00 00             ; CALL CT (063c)
0b7d: 0c                         ; RET
;
0b7e: 18 3f f4 00 00             ; DICTP .(LAST) (f43f)
0b83: 07 06 4c 41 53 54 3a 20 00 ; SLITERAL (0b84) [LAST: ]
0b8c: 0b 3c 06 00 00             ; CALL CT (063c)
0b91: 0b 09 01 00 00             ; CALL LAST (0109)
0b96: 06                         ; DUP
0b97: 0b e9 09 00 00             ; CALL HEX. (09e9)
0b9c: 07 02 20 28 00             ; SLITERAL (0b9d) [ (]
0ba1: 0b 3c 06 00 00             ; CALL CT (063c)
0ba6: 0b 55 09 00 00             ; CALL (.) (0955)
0bab: 07 01 29 00                ; SLITERAL (0bac) [)]
0baf: 0b 3c 06 00 00             ; CALL CT (063c)
0bb4: 0c                         ; RET
;
0bb5: 18 29 f4 00 00             ; DICTP .WORD-SHORT (f429)
0bba: 06                         ; DUP
0bbb: 0b 32 07 00 00             ; CALL DICT>NAME (0732)
0bc0: 0b 3c 06 00 00             ; CALL CT (063c)
0bc5: 0e 20                      ; CLITERAL 32
0bc7: 19                         ; EMIT
0bc8: 02                         ; FETCH
0bc9: 0c                         ; RET
;
0bca: 18 19 f4 00 00             ; DICTP WORDS (f419)
0bcf: 0b 09 01 00 00             ; CALL LAST (0109)
0bd4: 06                         ; DUP
0bd5: 02                         ; FETCH
0bd6: 2a                         ; NOT
0bd7: 5b 09                      ; BRANCHFZ 9 (0x0be1)
0bd9: 05                         ; DROP
0bda: 0e 0d                      ; CLITERAL 13
0bdc: 19                         ; EMIT
0bdd: 0e 0a                      ; CLITERAL 10
0bdf: 19                         ; EMIT
0be0: 0c                         ; RET
0be1: 0b b5 0b 00 00             ; CALL .WORD-SHORT (0bb5)
0be6: 5d 13                      ; BRANCHB 19 (0x0bd4)
0be8: 0c                         ; RET
;
0be9: 18 04 f4 00 00             ; DICTP .WORD-LONG (f404)
0bee: 06                         ; DUP
0bef: 0b e9 09 00 00             ; CALL HEX. (09e9)
0bf4: 0e 3a                      ; CLITERAL 58
0bf6: 19                         ; EMIT
0bf7: 0e 20                      ; CLITERAL 32
0bf9: 19                         ; EMIT
0bfa: 06                         ; DUP
0bfb: 0b 32 07 00 00             ; CALL DICT>NAME (0732)
0c00: 0b 3c 06 00 00             ; CALL CT (063c)
0c05: 0e 20                      ; CLITERAL 32
0c07: 19                         ; EMIT
0c08: 06                         ; DUP
0c09: 0b 66 07 00 00             ; CALL DICT.GetXT (0766)
0c0e: 0e 28                      ; CLITERAL 40
0c10: 19                         ; EMIT
0c11: 0b 23 0a 00 00             ; CALL HEX.4 (0a23)
0c16: 0e 29                      ; CLITERAL 41
0c18: 19                         ; EMIT
0c19: 06                         ; DUP
0c1a: 0b 26 07 00 00             ; CALL DICT>FLAGS (0726)
0c1f: 0f                         ; CFETCH
0c20: 06                         ; DUP
0c21: 07 09 2c 20 46 6c 61 67 73 3a 20 00 ; SLITERAL (0c22) [, Flags: ]
0c2d: 0b 3c 06 00 00             ; CALL CT (063c)
0c32: 0b 06 0a 00 00             ; CALL HEX.2 (0a06)
0c37: 06                         ; DUP
0c38: 0b a7 07 00 00             ; CALL FLAGS.ISINLINE? (07a7)
0c3d: 5b 12                      ; BRANCHFZ 18 (0x0c50)
0c3f: 07 09 20 28 49 4e 4c 49 4e 45 29 00 ; SLITERAL (0c40) [ (INLINE)]
0c4b: 0b 3c 06 00 00             ; CALL CT (063c)
0c50: 0b 9e 07 00 00             ; CALL FLAGS.ISIMMEDIATE? (079e)
0c55: 5b 15                      ; BRANCHFZ 21 (0x0c6b)
0c57: 07 0c 20 28 49 4d 4d 45 44 49 41 54 45 29 00 ; SLITERAL (0c58) [ (IMMEDIATE)]
0c66: 0b 3c 06 00 00             ; CALL CT (063c)
0c6b: 0e 0d                      ; CLITERAL 13
0c6d: 19                         ; EMIT
0c6e: 0e 0a                      ; CLITERAL 10
0c70: 19                         ; EMIT
0c71: 02                         ; FETCH
0c72: 0c                         ; RET
;
0c73: 18 f3 f3 00 00             ; DICTP WORDSV (f3f3)
0c78: 0b 7e 0b 00 00             ; CALL .(LAST) (0b7e)
0c7d: 0e 0d                      ; CLITERAL 13
0c7f: 19                         ; EMIT
0c80: 0e 0a                      ; CLITERAL 10
0c82: 19                         ; EMIT
0c83: 0b 09 01 00 00             ; CALL LAST (0109)
0c88: 06                         ; DUP
0c89: 02                         ; FETCH
0c8a: 2a                         ; NOT
0c8b: 5b 09                      ; BRANCHFZ 9 (0x0c95)
0c8d: 05                         ; DROP
0c8e: 0e 0d                      ; CLITERAL 13
0c90: 19                         ; EMIT
0c91: 0e 0a                      ; CLITERAL 10
0c93: 19                         ; EMIT
0c94: 0c                         ; RET
0c95: 0b e9 0b 00 00             ; CALL .WORD-LONG (0be9)
0c9a: 5d 13                      ; BRANCHB 19 (0x0c88)
0c9c: 0c                         ; RET
;
0c9d: 18 df f3 00 00             ; DICTP NUM-WORDS (f3df)
0ca2: 0e 00                      ; CLITERAL 0
0ca4: 21                         ; DTOR
0ca5: 0b 09 01 00 00             ; CALL LAST (0109)
0caa: 06                         ; DUP
0cab: 02                         ; FETCH
0cac: 2a                         ; NOT
0cad: 5b 0a                      ; BRANCHFZ 10 (0x0cb8)
0caf: 05                         ; DROP
0cb0: 22                         ; RTOD
0cb1: 0e 0d                      ; CLITERAL 13
0cb3: 19                         ; EMIT
0cb4: 0e 0a                      ; CLITERAL 10
0cb6: 19                         ; EMIT
0cb7: 0c                         ; RET
0cb8: 22                         ; RTOD
0cb9: 2c                         ; INC
0cba: 21                         ; DTOR
0cbb: 02                         ; FETCH
0cbc: 5d 13                      ; BRANCHB 19 (0x0caa)
0cbe: 0c                         ; RET
;
0cbf: 18 ce f3 00 00             ; DICTP .lastx (f3ce)
0cc4: 0e 0d                      ; CLITERAL 13
0cc6: 19                         ; EMIT
0cc7: 0e 0a                      ; CLITERAL 10
0cc9: 19                         ; EMIT
0cca: 0b 09 01 00 00             ; CALL LAST (0109)
0ccf: 04                         ; SWAP
0cd0: 04                         ; SWAP
0cd1: 0b e9 0b 00 00             ; CALL .WORD-LONG (0be9)
0cd6: 04                         ; SWAP
0cd7: 2e                         ; DEC
0cd8: 06                         ; DUP
0cd9: 5f 0a                      ; BRANCHBNZ 10 (0x0cd0)
0cdb: 05                         ; DROP
0cdc: 05                         ; DROP
0cdd: 0c                         ; RET
;
0cde: 18 bc f3 00 00             ; DICTP EXECUTE (f3bc)
0ce3: 22                         ; RTOD
0ce4: 05                         ; DROP
0ce5: 21                         ; DTOR
0ce6: 0c                         ; RET
;
0ce7: 18 a9 f3 00 00             ; DICTP find.ret (f3a9)
0cec: 06                         ; DUP
0ced: 0f                         ; CFETCH
0cee: 0e 0c                      ; CLITERAL 12
0cf0: 16                         ; EQ
0cf1: 5b 02                      ; BRANCHFZ 2 (0x0cf4)
0cf3: 0c                         ; RET
0cf4: 2c                         ; INC
0cf5: 5d 0a                      ; BRANCHB 10 (0x0cec)
0cf7: 0c                         ; RET
;
0cf8: 18 96 f3 00 00             ; DICTP (inline) (f396)
0cfd: 1a                         ; OVER
0cfe: 1a                         ; OVER
0cff: 15                         ; LT
0d00: 5b 02                      ; BRANCHFZ 2 (0x0d03)
0d02: 04                         ; SWAP
0d03: 06                         ; DUP
0d04: 0f                         ; CFETCH
0d05: 0b 15 01 00 00             ; CALL C, (0115)
0d0a: 2c                         ; INC
0d0b: 1a                         ; OVER
0d0c: 1a                         ; OVER
0d0d: 17                         ; GT
0d0e: 5f 0c                      ; BRANCHBNZ 12 (0x0d03)
0d10: 05                         ; DROP
0d11: 05                         ; DROP
0d12: 0c                         ; RET
;
0d13: 18 86 f3 00 00             ; DICTP DOES> (f386)
0d18: 22                         ; RTOD
0d19: 06                         ; DUP
0d1a: 0b e7 0c 00 00             ; CALL find.ret (0ce7)
0d1f: 06                         ; DUP
0d20: 21                         ; DTOR
0d21: 2c                         ; INC
0d22: 0b f8 0c 00 00             ; CALL (inline) (0cf8)
0d27: 0c                         ; RET
;
0d28: 18 70 f3 00 00             ; DICTP Copy.INLINE (f370)
0d2d: 06                         ; DUP
0d2e: 0f                         ; CFETCH
0d2f: 0e 18                      ; CLITERAL 24
0d31: 16                         ; EQ
0d32: 5b 05                      ; BRANCHFZ 5 (0x0d38)
0d34: 2c                         ; INC
0d35: 0e 04                      ; CLITERAL 4
0d37: 11                         ; ADD
0d38: 06                         ; DUP
0d39: 0b e7 0c 00 00             ; CALL find.ret (0ce7)
0d3e: 0b f8 0c 00 00             ; CALL (inline) (0cf8)
0d43: 0c                         ; RET
;
0d44: 18 5f f3 00 00             ; DICTP strlen (f35f)
0d49: 0e 00                      ; CLITERAL 0
0d4b: 04                         ; SWAP
0d4c: 04                         ; SWAP
0d4d: 1a                         ; OVER
0d4e: 0f                         ; CFETCH
0d4f: 06                         ; DUP
0d50: 5b 07                      ; BRANCHFZ 7 (0x0d58)
0d52: 05                         ; DROP
0d53: 2c                         ; INC
0d54: 04                         ; SWAP
0d55: 2c                         ; INC
0d56: 0e 01                      ; CLITERAL 1
0d58: 5f 0d                      ; BRANCHBNZ 13 (0x0d4c)
0d5a: 04                         ; SWAP
0d5b: 05                         ; DROP
0d5c: 0c                         ; RET
;
0d5d: 18 4f f3 00 00             ; DICTP cstr, (f34f)
0d62: 06                         ; DUP
0d63: 0f                         ; CFETCH
0d64: 1a                         ; OVER
0d65: 11                         ; ADD
0d66: 2c                         ; INC
0d67: 2c                         ; INC
0d68: 0b f8 0c 00 00             ; CALL (inline) (0cf8)
0d6d: 0c                         ; RET
;
0d6e: 18 3b f3 00 00             ; DICTP [COMPILE] (f33b)
0d73: 0b a7 07 00 00             ; CALL FLAGS.ISINLINE? (07a7)
0d78: 5b 08                      ; BRANCHFZ 8 (0x0d81)
0d7a: 0b 28 0d 00 00             ; CALL Copy.INLINE (0d28)
0d7f: 5a 0b                      ; BRANCHF 11 (0x0d8b)
0d81: 0b c7 01 00 00             ; CALL CALL (01c7)
0d86: 0b 2d 01 00 00             ; CALL , (012d)
0d8b: 0c                         ; RET
;
0d8c: 18 25 f3 00 00             ; DICTP executeWord (f325)
0d91: 21                         ; DTOR
0d92: 2b                         ; RFETCH
0d93: 0b d0 07 00 00             ; CALL findInDict (07d0)
0d98: 5b 29                      ; BRANCHFZ 41 (0x0dc2)
0d9a: 22                         ; RTOD
0d9b: 05                         ; DROP
0d9c: 0b ef 03 00 00             ; CALL ?COMPILING (03ef)
0da1: 5b 18                      ; BRANCHFZ 24 (0x0dba)
0da3: 06                         ; DUP
0da4: 0b 9e 07 00 00             ; CALL FLAGS.ISIMMEDIATE? (079e)
0da9: 5b 09                      ; BRANCHFZ 9 (0x0db3)
0dab: 05                         ; DROP
0dac: 0b de 0c 00 00             ; CALL EXECUTE (0cde)
0db1: 5a 06                      ; BRANCHF 6 (0x0db8)
0db3: 0b 6e 0d 00 00             ; CALL [COMPILE] (0d6e)
0db8: 5a 07                      ; BRANCHF 7 (0x0dc0)
0dba: 05                         ; DROP
0dbb: 0b de 0c 00 00             ; CALL EXECUTE (0cde)
0dc0: 5a 46                      ; BRANCHF 70 (0x0e07)
0dc2: 05                         ; DROP
0dc3: 05                         ; DROP
0dc4: 2b                         ; RFETCH
0dc5: 0b 78 08 00 00             ; CALL isNumber? (0878)
0dca: 5b 2e                      ; BRANCHFZ 46 (0x0df9)
0dcc: 0b ef 03 00 00             ; CALL ?COMPILING (03ef)
0dd1: 5b 25                      ; BRANCHFZ 37 (0x0df7)
0dd3: 06                         ; DUP
0dd4: 0e 00                      ; CLITERAL 0
0dd6: 0e ff                      ; CLITERAL 255
0dd8: 0b c4 06 00 00             ; CALL BETWEEN (06c4)
0ddd: 5b 0f                      ; BRANCHFZ 15 (0x0ded)
0ddf: 0e 0e                      ; CLITERAL 14
0de1: 0b 15 01 00 00             ; CALL C, (0115)
0de6: 0b 15 01 00 00             ; CALL C, (0115)
0deb: 5a 0b                      ; BRANCHF 11 (0x0df7)
0ded: 0b 63 01 00 00             ; CALL LITERAL (0163)
0df2: 0b 2d 01 00 00             ; CALL , (012d)
0df7: 5a 0d                      ; BRANCHF 13 (0x0e05)
0df9: 05                         ; DROP
0dfa: 07 02 3f 3f 00             ; SLITERAL (0dfb) [??]
0dff: 0b 3c 06 00 00             ; CALL CT (063c)
0e04: fe                         ; RESET
0e05: 22                         ; RTOD
0e06: 05                         ; DROP
0e07: 0c                         ; RET
;
0e08: 18 0e f3 00 00             ; DICTP executeInput (f30e)
0e0d: 0b 8b 00 00 00             ; CALL >IN (008b)
0e12: 02                         ; FETCH
0e13: 0b d7 06 00 00             ; CALL skipWS (06d7)
0e18: 0b 8b 00 00 00             ; CALL >IN (008b)
0e1d: 03                         ; STORE
0e1e: 0b 8b 00 00 00             ; CALL >IN (008b)
0e23: 02                         ; FETCH
0e24: 0f                         ; CFETCH
0e25: 5b 19                      ; BRANCHFZ 25 (0x0e3f)
0e27: 0b 8b 00 00 00             ; CALL >IN (008b)
0e2c: 02                         ; FETCH
0e2d: 0b f1 06 00 00             ; CALL getOneWord (06f1)
0e32: 0b 8b 00 00 00             ; CALL >IN (008b)
0e37: 03                         ; STORE
0e38: 0b 8c 0d 00 00             ; CALL executeWord (0d8c)
0e3d: 5a 02                      ; BRANCHF 2 (0x0e40)
0e3f: 0c                         ; RET
0e40: 5d 34                      ; BRANCHB 52 (0x0e0d)
0e42: 0c                         ; RET
;
0e43: 18 00 f3 00 00             ; DICTP Pad (f300)
0e48: 0b 09 01 00 00             ; CALL LAST (0109)
0e4d: 0e c8                      ; CLITERAL 200
0e4f: 12                         ; SUB
0e50: 06                         ; DUP
0e51: 0b fd 00 00 00             ; CALL HERE (00fd)
0e56: 15                         ; LT
0e57: 5b 13                      ; BRANCHFZ 19 (0x0e6b)
0e59: 07 0e 4f 75 74 20 6f 66 20 4d 65 6d 6f 72 79 21 00 ; SLITERAL (0e5a) [Out of Memory!]
0e6a: fe                         ; RESET
0e6b: 0c                         ; RET
;
0e6c: 18 ee f2 00 00             ; DICTP getLine (f2ee)
0e71: 0e 00                      ; CLITERAL 0
0e73: 0b 43 0e 00 00             ; CALL Pad (0e43)
0e78: 06                         ; DUP
0e79: 2c                         ; INC
0e7a: 0b 8b 00 00 00             ; CALL >IN (008b)
0e7f: 03                         ; STORE
0e80: 10                         ; CSTORE
0e81: 0e 00                      ; CLITERAL 0
0e83: 0b 8b 00 00 00             ; CALL >IN (008b)
0e88: 02                         ; FETCH
0e89: 10                         ; CSTORE
0e8a: 27                         ; GETCH
0e8b: 06                         ; DUP
0e8c: 0e 0d                      ; CLITERAL 13
0e8e: 16                         ; EQ
0e8f: 5b 0b                      ; BRANCHFZ 11 (0x0e9b)
0e91: 05                         ; DROP
0e92: 0b 43 0e 00 00             ; CALL Pad (0e43)
0e97: 0e 20                      ; CLITERAL 32
0e99: 19                         ; EMIT
0e9a: 0c                         ; RET
0e9b: 06                         ; DUP
0e9c: 0e 09                      ; CLITERAL 9
0e9e: 16                         ; EQ
0e9f: 5b 04                      ; BRANCHFZ 4 (0x0ea4)
0ea1: 05                         ; DROP
0ea2: 0e 20                      ; CLITERAL 32
0ea4: 06                         ; DUP
0ea5: 0e 03                      ; CLITERAL 3
0ea7: 16                         ; EQ
0ea8: 5b 02                      ; BRANCHFZ 2 (0x0eab)
0eaa: ff                         ; BYE
0eab: 06                         ; DUP
0eac: 0e 08                      ; CLITERAL 8
0eae: 16                         ; EQ
0eaf: 5b 2b                      ; BRANCHFZ 43 (0x0edb)
0eb1: 0b 43 0e 00 00             ; CALL Pad (0e43)
0eb6: 0f                         ; CFETCH
0eb7: 0e 00                      ; CLITERAL 0
0eb9: 17                         ; GT
0eba: 5b 1d                      ; BRANCHFZ 29 (0x0ed8)
0ebc: 0b 43 0e 00 00             ; CALL Pad (0e43)
0ec1: 06                         ; DUP
0ec2: 0f                         ; CFETCH
0ec3: 2e                         ; DEC
0ec4: 04                         ; SWAP
0ec5: 10                         ; CSTORE
0ec6: 0b 8b 00 00 00             ; CALL >IN (008b)
0ecb: 06                         ; DUP
0ecc: 02                         ; FETCH
0ecd: 2e                         ; DEC
0ece: 04                         ; SWAP
0ecf: 03                         ; STORE
0ed0: 06                         ; DUP
0ed1: 19                         ; EMIT
0ed2: 0e 20                      ; CLITERAL 32
0ed4: 19                         ; EMIT
0ed5: 19                         ; EMIT
0ed6: 5a 02                      ; BRANCHF 2 (0x0ed9)
0ed8: 05                         ; DROP
0ed9: 5a 2d                      ; BRANCHF 45 (0x0f07)
0edb: 06                         ; DUP
0edc: 0e 20                      ; CLITERAL 32
0ede: 0e 7f                      ; CLITERAL 127
0ee0: 0b c4 06 00 00             ; CALL BETWEEN (06c4)
0ee5: 5b 20                      ; BRANCHFZ 32 (0x0f06)
0ee7: 06                         ; DUP
0ee8: 19                         ; EMIT
0ee9: 0b 8b 00 00 00             ; CALL >IN (008b)
0eee: 02                         ; FETCH
0eef: 10                         ; CSTORE
0ef0: 0b 8b 00 00 00             ; CALL >IN (008b)
0ef5: 06                         ; DUP
0ef6: 02                         ; FETCH
0ef7: 2c                         ; INC
0ef8: 04                         ; SWAP
0ef9: 03                         ; STORE
0efa: 0b 43 0e 00 00             ; CALL Pad (0e43)
0eff: 06                         ; DUP
0f00: 0f                         ; CFETCH
0f01: 2c                         ; INC
0f02: 04                         ; SWAP
0f03: 10                         ; CSTORE
0f04: 5a 02                      ; BRANCHF 2 (0x0f07)
0f06: 05                         ; DROP
0f07: 5d 87                      ; BRANCHB 135 (0x0e81)
0f09: 0c                         ; RET
;
0f0a: 18 db f2 00 00             ; DICTP strcpy2c (f2db)
0f0f: 06                         ; DUP
0f10: 21                         ; DTOR
0f11: 0e 00                      ; CLITERAL 0
0f13: 1a                         ; OVER
0f14: 10                         ; CSTORE
0f15: 2c                         ; INC
0f16: 04                         ; SWAP
0f17: 06                         ; DUP
0f18: 0f                         ; CFETCH
0f19: 06                         ; DUP
0f1a: 5b 11                      ; BRANCHFZ 17 (0x0f2c)
0f1c: 0e 02                      ; CLITERAL 2
0f1e: 25                         ; PICK
0f1f: 10                         ; CSTORE
0f20: 04                         ; SWAP
0f21: 2c                         ; INC
0f22: 04                         ; SWAP
0f23: 2c                         ; INC
0f24: 2b                         ; RFETCH
0f25: 06                         ; DUP
0f26: 0f                         ; CFETCH
0f27: 2c                         ; INC
0f28: 04                         ; SWAP
0f29: 10                         ; CSTORE
0f2a: 5a 0a                      ; BRANCHF 10 (0x0f35)
0f2c: 21                         ; DTOR
0f2d: 04                         ; SWAP
0f2e: 22                         ; RTOD
0f2f: 04                         ; SWAP
0f30: 10                         ; CSTORE
0f31: 05                         ; DROP
0f32: 22                         ; RTOD
0f33: 05                         ; DROP
0f34: 0c                         ; RET
0f35: 5d 1f                      ; BRANCHB 31 (0x0f17)
0f37: 0c                         ; RET
;
0f38: 18 c5 f2 00 00             ; DICTP Define-Word (f2c5)
0f3d: 0b 09 01 00 00             ; CALL LAST (0109)
0f42: 1a                         ; OVER
0f43: 0b 44 0d 00 00             ; CALL strlen (0d44)
0f48: 0e 02                      ; CLITERAL 2
0f4a: 0e 04                      ; CLITERAL 4
0f4c: 13                         ; MUL
0f4d: 0e 03                      ; CLITERAL 3
0f4f: 11                         ; ADD
0f50: 11                         ; ADD
0f51: 12                         ; SUB
0f52: 06                         ; DUP
0f53: 21                         ; DTOR
0f54: 21                         ; DTOR
0f55: 0b 09 01 00 00             ; CALL LAST (0109)
0f5a: 2b                         ; RFETCH
0f5b: 03                         ; STORE
0f5c: 22                         ; RTOD
0f5d: 0e 04                      ; CLITERAL 4
0f5f: 11                         ; ADD
0f60: 21                         ; DTOR
0f61: 0b fd 00 00 00             ; CALL HERE (00fd)
0f66: 2b                         ; RFETCH
0f67: 03                         ; STORE
0f68: 22                         ; RTOD
0f69: 0e 04                      ; CLITERAL 4
0f6b: 11                         ; ADD
0f6c: 21                         ; DTOR
0f6d: 0e 00                      ; CLITERAL 0
0f6f: 2b                         ; RFETCH
0f70: 10                         ; CSTORE
0f71: 22                         ; RTOD
0f72: 2c                         ; INC
0f73: 21                         ; DTOR
0f74: 22                         ; RTOD
0f75: 0b 0a 0f 00 00             ; CALL strcpy2c (0f0a)
0f7a: 22                         ; RTOD
0f7b: 0b 4f 00 00 00             ; CALL (LAST) (004f)
0f80: 03                         ; STORE
0f81: 0c                         ; RET
;
0f82: 18 af f2 00 00             ; DICTP CREATE-NAME (f2af)
0f87: 0b 8b 00 00 00             ; CALL >IN (008b)
0f8c: 02                         ; FETCH
0f8d: 0b d7 06 00 00             ; CALL skipWS (06d7)
0f92: 0b 8b 00 00 00             ; CALL >IN (008b)
0f97: 03                         ; STORE
0f98: 0b 8b 00 00 00             ; CALL >IN (008b)
0f9d: 02                         ; FETCH
0f9e: 0f                         ; CFETCH
0f9f: 5b 30                      ; BRANCHFZ 48 (0x0fd0)
0fa1: 0b 8b 00 00 00             ; CALL >IN (008b)
0fa6: 02                         ; FETCH
0fa7: 0b f1 06 00 00             ; CALL getOneWord (06f1)
0fac: 0b 8b 00 00 00             ; CALL >IN (008b)
0fb1: 03                         ; STORE
0fb2: 06                         ; DUP
0fb3: 0f                         ; CFETCH
0fb4: 5b 19                      ; BRANCHFZ 25 (0x0fce)
0fb6: 0b 38 0f 00 00             ; CALL Define-Word (0f38)
0fbb: 0e 18                      ; CLITERAL 24
0fbd: 0b 15 01 00 00             ; CALL C, (0115)
0fc2: 0b 09 01 00 00             ; CALL LAST (0109)
0fc7: 0b 2d 01 00 00             ; CALL , (012d)
0fcc: 5a 03                      ; BRANCHF 3 (0x0fd0)
0fce: 05                         ; DROP
0fcf: fe                         ; RESET
0fd0: 0c                         ; RET
;
0fd1: 18 a3 f2 00 00             ; DICTP : (f2a3)
0fd6: 0b 82 0f 00 00             ; CALL CREATE-NAME (0f82)
0fdb: 0b 6d 00 00 00             ; CALL STATE (006d)
0fe0: 0b db 03 00 00             ; CALL ON (03db)
0fe5: 0c                         ; RET
;
0fe6: 18 91 f2 00 00             ; DICTP :NONAME (f291)
0feb: 0b fd 00 00 00             ; CALL HERE (00fd)
0ff0: 0b 6d 00 00 00             ; CALL STATE (006d)
0ff5: 0b db 03 00 00             ; CALL ON (03db)
0ffa: 0c                         ; RET
;
0ffb: 18 85 f2 00 00             ; DICTP ; (f285)
1000: 0b d4 01 00 00             ; CALL RET (01d4)
1005: 0b 6d 00 00 00             ; CALL STATE (006d)
100a: 0b e5 03 00 00             ; CALL OFF (03e5)
100f: 0c                         ; RET
;
1010: 18 70 f2 00 00             ; DICTP ForgetLast (f270)
1015: 0b 09 01 00 00             ; CALL LAST (0109)
101a: 0e 04                      ; CLITERAL 4
101c: 11                         ; ADD
101d: 02                         ; FETCH
101e: 0b 40 00 00 00             ; CALL (HERE) (0040)
1023: 03                         ; STORE
1024: 0b 09 01 00 00             ; CALL LAST (0109)
1029: 02                         ; FETCH
102a: 0b 4f 00 00 00             ; CALL (LAST) (004f)
102f: 03                         ; STORE
1030: 0c                         ; RET
;
1031: 18 5b f2 00 00             ; DICTP resetState (f25b)
1036: 0b ef 03 00 00             ; CALL ?COMPILING (03ef)
103b: 5b 06                      ; BRANCHFZ 6 (0x1042)
103d: 0b 10 10 00 00             ; CALL ForgetLast (1010)
1042: 0b 6d 00 00 00             ; CALL STATE (006d)
1047: 0b e5 03 00 00             ; CALL OFF (03e5)
104c: 0b b1 03 00 00             ; CALL DECIMAL (03b1)
1051: 0b b8 00 00 00             ; CALL INPUT-FP (00b8)
1056: 02                         ; FETCH
1057: 0b 1d 05 00 00             ; CALL ?DUP (051d)
105c: 5b 0a                      ; BRANCHFZ 10 (0x1067)
105e: 20                         ; FCLOSE
105f: 0e 00                      ; CLITERAL 0
1061: 0b b8 00 00 00             ; CALL INPUT-FP (00b8)
1066: 03                         ; STORE
1067: 0c                         ; RET
;
1068: 18 4b f2 00 00             ; DICTP ALLOT (f24b)
106d: 0b fd 00 00 00             ; CALL HERE (00fd)
1072: 11                         ; ADD
1073: 0b 40 00 00 00             ; CALL (HERE) (0040)
1078: 03                         ; STORE
1079: 0c                         ; RET
;
107a: 18 3f f2 00 00             ; DICTP ? (f23f)
107f: 02                         ; FETCH
1080: 0b 6f 09 00 00             ; CALL . (096f)
1085: 0c                         ; RET
;
1086: 18 32 f2 00 00             ; DICTP C? (f232)
108b: 0f                         ; CFETCH
108c: 0b 6f 09 00 00             ; CALL . (096f)
1091: 0c                         ; RET
;
1092: 18 23 f2 00 00             ; DICTP FREE (f223)
1097: 0b 09 01 00 00             ; CALL LAST (0109)
109c: 0b fd 00 00 00             ; CALL HERE (00fd)
10a1: 12                         ; SUB
10a2: 0c                         ; RET
;
10a3: 18 13 f2 00 00             ; DICTP .FREE (f213)
10a8: 0b 92 10 00 00             ; CALL FREE (1092)
10ad: 0b 55 09 00 00             ; CALL (.) (0955)
10b2: 07 0c 20 62 79 74 65 73 20 66 72 65 65 2e 00 ; SLITERAL (10b3) [ bytes free.]
10c1: 0b 3c 06 00 00             ; CALL CT (063c)
10c6: 0c                         ; RET
;
10c7: 18 00 f2 00 00             ; DICTP mainLoop (f200)
10cc: 0b 31 10 00 00             ; CALL resetState (1031)
10d1: 0b ef 03 00 00             ; CALL ?COMPILING (03ef)
10d6: 2a                         ; NOT
10d7: 5b 11                      ; BRANCHFZ 17 (0x10e9)
10d9: 07 03 20 4f 4b 00          ; SLITERAL (10da) [ OK]
10df: 0b 3c 06 00 00             ; CALL CT (063c)
10e4: 0b b1 0a 00 00             ; CALL .S (0ab1)
10e9: 0e 0d                      ; CLITERAL 13
10eb: 19                         ; EMIT
10ec: 0e 0a                      ; CLITERAL 10
10ee: 19                         ; EMIT
10ef: 0b 6c 0e 00 00             ; CALL getLine (0e6c)
10f4: 2c                         ; INC
10f5: 0b 8b 00 00 00             ; CALL >IN (008b)
10fa: 03                         ; STORE
10fb: 0b 08 0e 00 00             ; CALL executeInput (0e08)
1100: 0e 20                      ; CLITERAL 32
1102: 19                         ; EMIT
1103: 5d 33                      ; BRANCHB 51 (0x10d1)
1105: 0c                         ; RET
;
1106: 18 f1 f1 00 00             ; DICTP main (f1f1)
110b: 0b 6d 00 00 00             ; CALL STATE (006d)
1110: 02                         ; FETCH
1111: 0e 63                      ; CLITERAL 99
1113: 16                         ; EQ
1114: 5b 19                      ; BRANCHFZ 25 (0x112e)
1116: 0b 6d 00 00 00             ; CALL STATE (006d)
111b: 0b e5 03 00 00             ; CALL OFF (03e5)
1120: 07 06 48 65 6c 6c 6f 2e 00 ; SLITERAL (1121) [Hello.]
1129: 0b 3c 06 00 00             ; CALL CT (063c)
112e: 0b c7 10 00 00             ; CALL mainLoop (10c7)
1133: 0c                         ; RET
;
1134: 18 da f1 00 00             ; DICTP file-getLine (f1da)
1139: 0b 43 0e 00 00             ; CALL Pad (0e43)
113e: 04                         ; SWAP
113f: 0e c8                      ; CLITERAL 200
1141: 04                         ; SWAP
1142: 1e                         ; FREADLINE
1143: 0b 43 0e 00 00             ; CALL Pad (0e43)
1148: 04                         ; SWAP
1149: 0c                         ; RET
;
114a: 18 cb f1 00 00             ; DICTP load (f1cb)
114f: 0e 00                      ; CLITERAL 0
1151: 0e 00                      ; CLITERAL 0
1153: 1c                         ; FOPEN
1154: 2a                         ; NOT
1155: 5b 1b                      ; BRANCHFZ 27 (0x1171)
1157: 07 11 43 61 6e 6e 6f 74 20 6f 70 65 6e 20 66 69 6c 65 2e 00 ; SLITERAL (1158) [Cannot open file.]
116b: 0b 3c 06 00 00             ; CALL CT (063c)
1170: 0c                         ; RET
1171: 0b b8 00 00 00             ; CALL INPUT-FP (00b8)
1176: 03                         ; STORE
1177: 0b b8 00 00 00             ; CALL INPUT-FP (00b8)
117c: 02                         ; FETCH
117d: 0b 34 11 00 00             ; CALL file-getLine (1134)
1182: 5b 0f                      ; BRANCHFZ 15 (0x1192)
1184: 2c                         ; INC
1185: 0b 8b 00 00 00             ; CALL >IN (008b)
118a: 03                         ; STORE
118b: 0b 08 0e 00 00             ; CALL executeInput (0e08)
1190: 5a 12                      ; BRANCHF 18 (0x11a3)
1192: 05                         ; DROP
1193: 0b b8 00 00 00             ; CALL INPUT-FP (00b8)
1198: 02                         ; FETCH
1199: 20                         ; FCLOSE
119a: 0e 00                      ; CLITERAL 0
119c: 0b b8 00 00 00             ; CALL INPUT-FP (00b8)
11a1: 03                         ; STORE
11a2: 0c                         ; RET
11a3: 5d 2d                      ; BRANCHB 45 (0x1177)
11a5: 0c                         ; RET
;
11a6: 18 b7 f1 00 00             ; DICTP STR.EMPTY (f1b7)
11ab: 0e 00                      ; CLITERAL 0
11ad: 1a                         ; OVER
11ae: 03                         ; STORE
11af: 0c                         ; RET
;
11b0: 18 a5 f1 00 00             ; DICTP STR.LEN (f1a5)
11b5: 06                         ; DUP
11b6: 0f                         ; CFETCH
11b7: 0c                         ; RET
;
11b8: 18 92 f1 00 00             ; DICTP STR.CATC (f192)
11bd: 1a                         ; OVER
11be: 06                         ; DUP
11bf: 06                         ; DUP
11c0: 0f                         ; CFETCH
11c1: 2c                         ; INC
11c2: 04                         ; SWAP
11c3: 10                         ; CSTORE
11c4: 06                         ; DUP
11c5: 0f                         ; CFETCH
11c6: 11                         ; ADD
11c7: 0e 00                      ; CLITERAL 0
11c9: 1a                         ; OVER
11ca: 2c                         ; INC
11cb: 10                         ; CSTORE
11cc: 10                         ; CSTORE
11cd: 0c                         ; RET
;
11ce: 18 7b f1 00 00             ; DICTP STR.NULLTERM (f17b)
11d3: 06                         ; DUP
11d4: 06                         ; DUP
11d5: 0f                         ; CFETCH
11d6: 11                         ; ADD
11d7: 2c                         ; INC
11d8: 0e 00                      ; CLITERAL 0
11da: 04                         ; SWAP
11db: 10                         ; CSTORE
11dc: 0c                         ; RET
;
11dd: 18 6e f1 00 00             ; DICTP I" (f16e)
11e2: 0b fd 00 00 00             ; CALL HERE (00fd)
11e7: 0e 64                      ; CLITERAL 100
11e9: 11                         ; ADD
11ea: 0e 00                      ; CLITERAL 0
11ec: 1a                         ; OVER
11ed: 03                         ; STORE
11ee: 0b 8b 00 00 00             ; CALL >IN (008b)
11f3: 02                         ; FETCH
11f4: 0f                         ; CFETCH
11f5: 06                         ; DUP
11f6: 2a                         ; NOT
11f7: 5b 1d                      ; BRANCHFZ 29 (0x1215)
11f9: 07 10 6d 69 73 73 69 6e 67 20 63 6c 6f 73 69 6e 67 20 00 ; SLITERAL (11fa) [missing closing ]
120c: 0b 3c 06 00 00             ; CALL CT (063c)
1211: 0e 22                      ; CLITERAL 34
1213: 19                         ; EMIT
1214: fe                         ; RESET
1215: 0b 8b 00 00 00             ; CALL >IN (008b)
121a: 06                         ; DUP
121b: 02                         ; FETCH
121c: 2c                         ; INC
121d: 04                         ; SWAP
121e: 03                         ; STORE
121f: 06                         ; DUP
1220: 0e 22                      ; CLITERAL 34
1222: 16                         ; EQ
1223: 5b 03                      ; BRANCHFZ 3 (0x1227)
1225: 05                         ; DROP
1226: 0c                         ; RET
1227: 0b b8 11 00 00             ; CALL STR.CATC (11b8)
122c: 5d 3f                      ; BRANCHB 63 (0x11ee)
122e: 0c                         ; RET
;
122f: 18 62 f1 00 00             ; DICTP " (f162)
1234: 0b ef 03 00 00             ; CALL ?COMPILING (03ef)
1239: 2a                         ; NOT
123a: 5b 07                      ; BRANCHFZ 7 (0x1242)
123c: 0b dd 11 00 00             ; CALL I" (11dd)
1241: 0c                         ; RET
1242: 0b 93 01 00 00             ; CALL SLITERAL (0193)
1247: 0b fd 00 00 00             ; CALL HERE (00fd)
124c: 0e 00                      ; CLITERAL 0
124e: 0b 15 01 00 00             ; CALL C, (0115)
1253: 0b 8b 00 00 00             ; CALL >IN (008b)
1258: 02                         ; FETCH
1259: 0f                         ; CFETCH
125a: 06                         ; DUP
125b: 2a                         ; NOT
125c: 5b 29                      ; BRANCHFZ 41 (0x1286)
125e: 05                         ; DROP
125f: 2e                         ; DEC
1260: 0b 40 00 00 00             ; CALL (HERE) (0040)
1265: 03                         ; STORE
1266: 07 11 6d 69 73 73 69 6e 67 20 63 6c 6f 73 69 6e 67 20 27 00 ; SLITERAL (1267) [missing closing ']
127a: 0b 3c 06 00 00             ; CALL CT (063c)
127f: 0e 22                      ; CLITERAL 34
1281: 19                         ; EMIT
1282: 0e 27                      ; CLITERAL 39
1284: 19                         ; EMIT
1285: fe                         ; RESET
1286: 0b 8b 00 00 00             ; CALL >IN (008b)
128b: 06                         ; DUP
128c: 02                         ; FETCH
128d: 2c                         ; INC
128e: 04                         ; SWAP
128f: 03                         ; STORE
1290: 06                         ; DUP
1291: 0e 22                      ; CLITERAL 34
1293: 16                         ; EQ
1294: 5b 14                      ; BRANCHFZ 20 (0x12a9)
1296: 05                         ; DROP
1297: 0b fd 00 00 00             ; CALL HERE (00fd)
129c: 0e 00                      ; CLITERAL 0
129e: 0b 15 01 00 00             ; CALL C, (0115)
12a3: 1a                         ; OVER
12a4: 12                         ; SUB
12a5: 2e                         ; DEC
12a6: 04                         ; SWAP
12a7: 10                         ; CSTORE
12a8: 0c                         ; RET
12a9: 0b 15 01 00 00             ; CALL C, (0115)
12ae: 5d 5c                      ; BRANCHB 92 (0x1253)
12b0: 0c                         ; RET
;
12b1: 18 55 f1 00 00             ; DICTP ll (f155)
12b6: 07 09 6c 6f 61 64 73 2e 34 74 68 00 ; SLITERAL (12b7) [loads.4th]
12c2: 0b 4a 11 00 00             ; CALL load (114a)
12c7: 0c                         ; RET
;
12c8: 18 42 f1 00 00             ; DICTP sys-info (f142)
12cd: 0b 0e 0b 00 00             ; CALL .(MEM_SZ) (0b0e)
12d2: 0e 2c                      ; CLITERAL 44
12d4: 19                         ; EMIT
12d5: 0e 20                      ; CLITERAL 32
12d7: 19                         ; EMIT
12d8: 0b 47 0b 00 00             ; CALL .(HERE) (0b47)
12dd: 0e 2c                      ; CLITERAL 44
12df: 19                         ; EMIT
12e0: 0e 20                      ; CLITERAL 32
12e2: 19                         ; EMIT
12e3: 0b 7e 0b 00 00             ; CALL .(LAST) (0b7e)
12e8: 0e 2c                      ; CLITERAL 44
12ea: 19                         ; EMIT
12eb: 0e 20                      ; CLITERAL 32
12ed: 19                         ; EMIT
12ee: 0b a3 10 00 00             ; CALL .FREE (10a3)
12f3: 0e 0d                      ; CLITERAL 13
12f5: 19                         ; EMIT
12f6: 0e 0a                      ; CLITERAL 10
12f8: 19                         ; EMIT
12f9: 0c                         ; RET
;
12fa: 18 2f f1 00 00             ; DICTP VARIABLE (f12f)
12ff: 0b 82 0f 00 00             ; CALL CREATE-NAME (0f82)
1304: 0b fd 00 00 00             ; CALL HERE (00fd)
1309: 0e 02                      ; CLITERAL 2
130b: 11                         ; ADD
130c: 0e 04                      ; CLITERAL 4
130e: 11                         ; ADD
130f: 0b 63 01 00 00             ; CALL LITERAL (0163)
1314: 0b 2d 01 00 00             ; CALL , (012d)
1319: 0b d4 01 00 00             ; CALL RET (01d4)
131e: 0e 00                      ; CLITERAL 0
1320: 0b 2d 01 00 00             ; CALL , (012d)
1325: 0c                         ; RET
;
; End of code, Dictionary:
;
f12f: 42 f1 00 00                ; VARIABLE - (next: f142 sys-info)
f133: fa 12 00 00 00             ; XT=12fa, flags=00
f138: 08 56 41 52 49 41 42 4c 45 00 ; 8, VARIABLE
;
f142: 55 f1 00 00                ; sys-info - (next: f155 ll)
f146: c8 12 00 00 00             ; XT=12c8, flags=00
f14b: 08 73 79 73 2d 69 6e 66 6f 00 ; 8, sys-info
;
f155: 62 f1 00 00                ; ll - (next: f162 ")
f159: b1 12 00 00 00             ; XT=12b1, flags=00
f15e: 02 6c 6c 00                ; 2, ll
;
f162: 6e f1 00 00                ; " - (next: f16e I")
f166: 2f 12 00 00 01             ; XT=122f, flags=01
f16b: 01 22 00                   ; 1, "
;
f16e: 7b f1 00 00                ; I" - (next: f17b STR.NULLTERM)
f172: dd 11 00 00 00             ; XT=11dd, flags=00
f177: 02 49 22 00                ; 2, I"
;
f17b: 92 f1 00 00                ; STR.NULLTERM - (next: f192 STR.CATC)
f17f: ce 11 00 00 00             ; XT=11ce, flags=00
f184: 0c 53 54 52 2e 4e 55 4c 4c 54 45 52 4d 00 ; 12, STR.NULLTERM
;
f192: a5 f1 00 00                ; STR.CATC - (next: f1a5 STR.LEN)
f196: b8 11 00 00 00             ; XT=11b8, flags=00
f19b: 08 53 54 52 2e 43 41 54 43 00 ; 8, STR.CATC
;
f1a5: b7 f1 00 00                ; STR.LEN - (next: f1b7 STR.EMPTY)
f1a9: b0 11 00 00 02             ; XT=11b0, flags=02
f1ae: 07 53 54 52 2e 4c 45 4e 00 ; 7, STR.LEN
;
f1b7: cb f1 00 00                ; STR.EMPTY - (next: f1cb load)
f1bb: a6 11 00 00 02             ; XT=11a6, flags=02
f1c0: 09 53 54 52 2e 45 4d 50 54 59 00 ; 9, STR.EMPTY
;
f1cb: da f1 00 00                ; load - (next: f1da file-getLine)
f1cf: 4a 11 00 00 00             ; XT=114a, flags=00
f1d4: 04 6c 6f 61 64 00          ; 4, load
;
f1da: f1 f1 00 00                ; file-getLine - (next: f1f1 main)
f1de: 34 11 00 00 00             ; XT=1134, flags=00
f1e3: 0c 66 69 6c 65 2d 67 65 74 4c 69 6e 65 00 ; 12, file-getLine
;
f1f1: 00 f2 00 00                ; main - (next: f200 mainLoop)
f1f5: 06 11 00 00 00             ; XT=1106, flags=00
f1fa: 04 6d 61 69 6e 00          ; 4, main
;
f200: 13 f2 00 00                ; mainLoop - (next: f213 .FREE)
f204: c7 10 00 00 00             ; XT=10c7, flags=00
f209: 08 6d 61 69 6e 4c 6f 6f 70 00 ; 8, mainLoop
;
f213: 23 f2 00 00                ; .FREE - (next: f223 FREE)
f217: a3 10 00 00 00             ; XT=10a3, flags=00
f21c: 05 2e 46 52 45 45 00       ; 5, .FREE
;
f223: 32 f2 00 00                ; FREE - (next: f232 C?)
f227: 92 10 00 00 00             ; XT=1092, flags=00
f22c: 04 46 52 45 45 00          ; 4, FREE
;
f232: 3f f2 00 00                ; C? - (next: f23f ?)
f236: 86 10 00 00 00             ; XT=1086, flags=00
f23b: 02 43 3f 00                ; 2, C?
;
f23f: 4b f2 00 00                ; ? - (next: f24b ALLOT)
f243: 7a 10 00 00 00             ; XT=107a, flags=00
f248: 01 3f 00                   ; 1, ?
;
f24b: 5b f2 00 00                ; ALLOT - (next: f25b resetState)
f24f: 68 10 00 00 00             ; XT=1068, flags=00
f254: 05 41 4c 4c 4f 54 00       ; 5, ALLOT
;
f25b: 70 f2 00 00                ; resetState - (next: f270 ForgetLast)
f25f: 31 10 00 00 00             ; XT=1031, flags=00
f264: 0a 72 65 73 65 74 53 74 61 74 65 00 ; 10, resetState
;
f270: 85 f2 00 00                ; ForgetLast - (next: f285 ;)
f274: 10 10 00 00 00             ; XT=1010, flags=00
f279: 0a 46 6f 72 67 65 74 4c 61 73 74 00 ; 10, ForgetLast
;
f285: 91 f2 00 00                ; ; - (next: f291 :NONAME)
f289: fb 0f 00 00 01             ; XT=0ffb, flags=01
f28e: 01 3b 00                   ; 1, ;
;
f291: a3 f2 00 00                ; :NONAME - (next: f2a3 :)
f295: e6 0f 00 00 00             ; XT=0fe6, flags=00
f29a: 07 3a 4e 4f 4e 41 4d 45 00 ; 7, :NONAME
;
f2a3: af f2 00 00                ; : - (next: f2af CREATE-NAME)
f2a7: d1 0f 00 00 00             ; XT=0fd1, flags=00
f2ac: 01 3a 00                   ; 1, :
;
f2af: c5 f2 00 00                ; CREATE-NAME - (next: f2c5 Define-Word)
f2b3: 82 0f 00 00 00             ; XT=0f82, flags=00
f2b8: 0b 43 52 45 41 54 45 2d 4e 41 4d 45 00 ; 11, CREATE-NAME
;
f2c5: db f2 00 00                ; Define-Word - (next: f2db strcpy2c)
f2c9: 38 0f 00 00 00             ; XT=0f38, flags=00
f2ce: 0b 44 65 66 69 6e 65 2d 57 6f 72 64 00 ; 11, Define-Word
;
f2db: ee f2 00 00                ; strcpy2c - (next: f2ee getLine)
f2df: 0a 0f 00 00 00             ; XT=0f0a, flags=00
f2e4: 08 73 74 72 63 70 79 32 63 00 ; 8, strcpy2c
;
f2ee: 00 f3 00 00                ; getLine - (next: f300 Pad)
f2f2: 6c 0e 00 00 00             ; XT=0e6c, flags=00
f2f7: 07 67 65 74 4c 69 6e 65 00 ; 7, getLine
;
f300: 0e f3 00 00                ; Pad - (next: f30e executeInput)
f304: 43 0e 00 00 00             ; XT=0e43, flags=00
f309: 03 50 61 64 00             ; 3, Pad
;
f30e: 25 f3 00 00                ; executeInput - (next: f325 executeWord)
f312: 08 0e 00 00 00             ; XT=0e08, flags=00
f317: 0c 65 78 65 63 75 74 65 49 6e 70 75 74 00 ; 12, executeInput
;
f325: 3b f3 00 00                ; executeWord - (next: f33b [COMPILE])
f329: 8c 0d 00 00 00             ; XT=0d8c, flags=00
f32e: 0b 65 78 65 63 75 74 65 57 6f 72 64 00 ; 11, executeWord
;
f33b: 4f f3 00 00                ; [COMPILE] - (next: f34f cstr,)
f33f: 6e 0d 00 00 00             ; XT=0d6e, flags=00
f344: 09 5b 43 4f 4d 50 49 4c 45 5d 00 ; 9, [COMPILE]
;
f34f: 5f f3 00 00                ; cstr, - (next: f35f strlen)
f353: 5d 0d 00 00 00             ; XT=0d5d, flags=00
f358: 05 63 73 74 72 2c 00       ; 5, cstr,
;
f35f: 70 f3 00 00                ; strlen - (next: f370 Copy.INLINE)
f363: 44 0d 00 00 00             ; XT=0d44, flags=00
f368: 06 73 74 72 6c 65 6e 00    ; 6, strlen
;
f370: 86 f3 00 00                ; Copy.INLINE - (next: f386 DOES>)
f374: 28 0d 00 00 00             ; XT=0d28, flags=00
f379: 0b 43 6f 70 79 2e 49 4e 4c 49 4e 45 00 ; 11, Copy.INLINE
;
f386: 96 f3 00 00                ; DOES> - (next: f396 (inline))
f38a: 13 0d 00 00 00             ; XT=0d13, flags=00
f38f: 05 44 4f 45 53 3e 00       ; 5, DOES>
;
f396: a9 f3 00 00                ; (inline) - (next: f3a9 find.ret)
f39a: f8 0c 00 00 00             ; XT=0cf8, flags=00
f39f: 08 28 69 6e 6c 69 6e 65 29 00 ; 8, (inline)
;
f3a9: bc f3 00 00                ; find.ret - (next: f3bc EXECUTE)
f3ad: e7 0c 00 00 00             ; XT=0ce7, flags=00
f3b2: 08 66 69 6e 64 2e 72 65 74 00 ; 8, find.ret
;
f3bc: ce f3 00 00                ; EXECUTE - (next: f3ce .lastx)
f3c0: de 0c 00 00 00             ; XT=0cde, flags=00
f3c5: 07 45 58 45 43 55 54 45 00 ; 7, EXECUTE
;
f3ce: df f3 00 00                ; .lastx - (next: f3df NUM-WORDS)
f3d2: bf 0c 00 00 00             ; XT=0cbf, flags=00
f3d7: 06 2e 6c 61 73 74 78 00    ; 6, .lastx
;
f3df: f3 f3 00 00                ; NUM-WORDS - (next: f3f3 WORDSV)
f3e3: 9d 0c 00 00 00             ; XT=0c9d, flags=00
f3e8: 09 4e 55 4d 2d 57 4f 52 44 53 00 ; 9, NUM-WORDS
;
f3f3: 04 f4 00 00                ; WORDSV - (next: f404 .WORD-LONG)
f3f7: 73 0c 00 00 00             ; XT=0c73, flags=00
f3fc: 06 57 4f 52 44 53 56 00    ; 6, WORDSV
;
f404: 19 f4 00 00                ; .WORD-LONG - (next: f419 WORDS)
f408: e9 0b 00 00 00             ; XT=0be9, flags=00
f40d: 0a 2e 57 4f 52 44 2d 4c 4f 4e 47 00 ; 10, .WORD-LONG
;
f419: 29 f4 00 00                ; WORDS - (next: f429 .WORD-SHORT)
f41d: ca 0b 00 00 00             ; XT=0bca, flags=00
f422: 05 57 4f 52 44 53 00       ; 5, WORDS
;
f429: 3f f4 00 00                ; .WORD-SHORT - (next: f43f .(LAST))
f42d: b5 0b 00 00 00             ; XT=0bb5, flags=00
f432: 0b 2e 57 4f 52 44 2d 53 48 4f 52 54 00 ; 11, .WORD-SHORT
;
f43f: 51 f4 00 00                ; .(LAST) - (next: f451 .(HERE))
f443: 7e 0b 00 00 00             ; XT=0b7e, flags=00
f448: 07 2e 28 4c 41 53 54 29 00 ; 7, .(LAST)
;
f451: 63 f4 00 00                ; .(HERE) - (next: f463 .(MEM_SZ))
f455: 47 0b 00 00 00             ; XT=0b47, flags=00
f45a: 07 2e 28 48 45 52 45 29 00 ; 7, .(HERE)
;
f463: 77 f4 00 00                ; .(MEM_SZ) - (next: f477 .S)
f467: 0e 0b 00 00 00             ; XT=0b0e, flags=00
f46c: 09 2e 28 4d 45 4d 5f 53 5a 29 00 ; 9, .(MEM_SZ)
;
f477: 84 f4 00 00                ; .S - (next: f484 MAX)
f47b: b1 0a 00 00 00             ; XT=0ab1, flags=00
f480: 02 2e 53 00                ; 2, .S
;
f484: 92 f4 00 00                ; MAX - (next: f492 MIN)
f488: a4 0a 00 00 00             ; XT=0aa4, flags=00
f48d: 03 4d 41 58 00             ; 3, MAX
;
f492: a0 f4 00 00                ; MIN - (next: f4a0 BINARY.)
f496: 97 0a 00 00 00             ; XT=0a97, flags=00
f49b: 03 4d 49 4e 00             ; 3, MIN
;
f4a0: b2 f4 00 00                ; BINARY. - (next: f4b2 DECIMAL.3)
f4a4: 7a 0a 00 00 00             ; XT=0a7a, flags=00
f4a9: 07 42 49 4e 41 52 59 2e 00 ; 7, BINARY.
;
f4b2: c6 f4 00 00                ; DECIMAL.3 - (next: f4c6 DECIMAL.)
f4b6: 5d 0a 00 00 00             ; XT=0a5d, flags=00
f4bb: 09 44 45 43 49 4d 41 4c 2e 33 00 ; 9, DECIMAL.3
;
f4c6: d9 f4 00 00                ; DECIMAL. - (next: f4d9 HEX.4)
f4ca: 40 0a 00 00 00             ; XT=0a40, flags=00
f4cf: 08 44 45 43 49 4d 41 4c 2e 00 ; 8, DECIMAL.
;
f4d9: e9 f4 00 00                ; HEX.4 - (next: f4e9 HEX.2)
f4dd: 23 0a 00 00 00             ; XT=0a23, flags=00
f4e2: 05 48 45 58 2e 34 00       ; 5, HEX.4
;
f4e9: f9 f4 00 00                ; HEX.2 - (next: f4f9 HEX.)
f4ed: 06 0a 00 00 00             ; XT=0a06, flags=00
f4f2: 05 48 45 58 2e 32 00       ; 5, HEX.2
;
f4f9: 08 f5 00 00                ; HEX. - (next: f508 .4)
f4fd: e9 09 00 00 00             ; XT=09e9, flags=00
f502: 04 48 45 58 2e 00          ; 4, HEX.
;
f508: 15 f5 00 00                ; .4 - (next: f515 .3)
f50c: c0 09 00 00 00             ; XT=09c0, flags=00
f511: 02 2e 34 00                ; 2, .4
;
f515: 22 f5 00 00                ; .3 - (next: f522 .2)
f519: 9c 09 00 00 00             ; XT=099c, flags=00
f51e: 02 2e 33 00                ; 2, .3
;
f522: 2f f5 00 00                ; .2 - (next: f52f .)
f526: 7d 09 00 00 00             ; XT=097d, flags=00
f52b: 02 2e 32 00                ; 2, .2
;
f52f: 3b f5 00 00                ; . - (next: f53b (.))
f533: 6f 09 00 00 00             ; XT=096f, flags=00
f538: 01 2e 00                   ; 1, .
;
f53b: 49 f5 00 00                ; (.) - (next: f549 #P)
f53f: 55 09 00 00 00             ; XT=0955, flags=00
f544: 03 28 2e 29 00             ; 3, (.)
;
f549: 56 f5 00 00                ; #P - (next: f556 #P-)
f54d: 44 09 00 00 00             ; XT=0944, flags=00
f552: 02 23 50 00                ; 2, #P
;
f556: 64 f5 00 00                ; #P- - (next: f564 #>)
f55a: 32 09 00 00 00             ; XT=0932, flags=00
f55f: 03 23 50 2d 00             ; 3, #P-
;
f564: 71 f5 00 00                ; #> - (next: f571 #S)
f568: 2c 09 00 00 00             ; XT=092c, flags=00
f56d: 02 23 3e 00                ; 2, #>
;
f571: 7e f5 00 00                ; #S - (next: f57e #)
f575: 1d 09 00 00 00             ; XT=091d, flags=00
f57a: 02 23 53 00                ; 2, #S
;
f57e: 8a f5 00 00                ; # - (next: f58a <#)
f582: f8 08 00 00 00             ; XT=08f8, flags=00
f587: 01 23 00                   ; 1, #
;
f58a: 97 f5 00 00                ; <# - (next: f597 isNumber?)
f58e: c6 08 00 00 00             ; XT=08c6, flags=00
f593: 02 3c 23 00                ; 2, <#
;
f597: ab f5 00 00                ; isNumber? - (next: f5ab ABS)
f59b: 78 08 00 00 00             ; XT=0878, flags=00
f5a0: 09 69 73 4e 75 6d 62 65 72 3f 00 ; 9, isNumber?
;
f5ab: b9 f5 00 00                ; ABS - (next: f5b9 NEGATE)
f5af: 67 08 00 00 00             ; XT=0867, flags=00
f5b4: 03 41 42 53 00             ; 3, ABS
;
f5b9: ca f5 00 00                ; NEGATE - (next: f5ca isNumChar?)
f5bd: 5d 08 00 00 00             ; XT=085d, flags=00
f5c2: 06 4e 45 47 41 54 45 00    ; 6, NEGATE
;
f5ca: df f5 00 00                ; isNumChar? - (next: f5df isHEX?)
f5ce: 18 08 00 00 00             ; XT=0818, flags=00
f5d3: 0a 69 73 4e 75 6d 43 68 61 72 3f 00 ; 10, isNumChar?
;
f5df: f0 f5 00 00                ; isHEX? - (next: f5f0 findInDict)
f5e3: 09 08 00 00 00             ; XT=0809, flags=00
f5e8: 06 69 73 48 45 58 3f 00    ; 6, isHEX?
;
f5f0: 05 f6 00 00                ; findInDict - (next: f605 DICT.GetINLINE)
f5f4: d0 07 00 00 00             ; XT=07d0, flags=00
f5f9: 0a 66 69 6e 64 49 6e 44 69 63 74 00 ; 10, findInDict
;
f605: 1e f6 00 00                ; DICT.GetINLINE - (next: f61e DICT.GetIMMEDIATE)
f609: c0 07 00 00 00             ; XT=07c0, flags=00
f60e: 0e 44 49 43 54 2e 47 65 74 49 4e 4c 49 4e 45 00 ; 14, DICT.GetINLINE
;
f61e: 3a f6 00 00                ; DICT.GetIMMEDIATE - (next: f63a FLAGS.ISINLINE?)
f622: b0 07 00 00 00             ; XT=07b0, flags=00
f627: 11 44 49 43 54 2e 47 65 74 49 4d 4d 45 44 49 41 54 45 00 ; 17, DICT.GetIMMEDIATE
;
f63a: 54 f6 00 00                ; FLAGS.ISINLINE? - (next: f654 FLAGS.ISIMMEDIATE?)
f63e: a7 07 00 00 00             ; XT=07a7, flags=00
f643: 0f 46 4c 41 47 53 2e 49 53 49 4e 4c 49 4e 45 3f 00 ; 15, FLAGS.ISINLINE?
;
f654: 71 f6 00 00                ; FLAGS.ISIMMEDIATE? - (next: f671 XT.GetDICTP)
f658: 9e 07 00 00 00             ; XT=079e, flags=00
f65d: 12 46 4c 41 47 53 2e 49 53 49 4d 4d 45 44 49 41 54 45 3f 00 ; 18, FLAGS.ISIMMEDIATE?
;
f671: 87 f6 00 00                ; XT.GetDICTP - (next: f687 DICTP>NAME)
f675: 8b 07 00 00 00             ; XT=078b, flags=00
f67a: 0b 58 54 2e 47 65 74 44 49 43 54 50 00 ; 11, XT.GetDICTP
;
f687: 9c f6 00 00                ; DICTP>NAME - (next: f69c DICT.GetFLAGS)
f68b: 7e 07 00 00 00             ; XT=077e, flags=00
f690: 0a 44 49 43 54 50 3e 4e 41 4d 45 00 ; 10, DICTP>NAME
;
f69c: b4 f6 00 00                ; DICT.GetFLAGS - (next: f6b4 DICT.GetXT)
f6a0: 72 07 00 00 00             ; XT=0772, flags=00
f6a5: 0d 44 49 43 54 2e 47 65 74 46 4c 41 47 53 00 ; 13, DICT.GetFLAGS
;
f6b4: c9 f6 00 00                ; DICT.GetXT - (next: f6c9 NAME>DICT)
f6b8: 66 07 00 00 00             ; XT=0766, flags=00
f6bd: 0a 44 49 43 54 2e 47 65 74 58 54 00 ; 10, DICT.GetXT
;
f6c9: dd f6 00 00                ; NAME>DICT - (next: f6dd FLAGS>DICT)
f6cd: 59 07 00 00 00             ; XT=0759, flags=00
f6d2: 09 4e 41 4d 45 3e 44 49 43 54 00 ; 9, NAME>DICT
;
f6dd: f2 f6 00 00                ; FLAGS>DICT - (next: f6f2 XT>DICT)
f6e1: 4d 07 00 00 00             ; XT=074d, flags=00
f6e6: 0a 46 4c 41 47 53 3e 44 49 43 54 00 ; 10, FLAGS>DICT
;
f6f2: 04 f7 00 00                ; XT>DICT - (next: f704 NEXT>DICT)
f6f6: 44 07 00 00 00             ; XT=0744, flags=00
f6fb: 07 58 54 3e 44 49 43 54 00 ; 7, XT>DICT
;
f704: 18 f7 00 00                ; NEXT>DICT - (next: f718 DICT>NAME)
f708: 3e 07 00 00 00             ; XT=073e, flags=00
f70d: 09 4e 45 58 54 3e 44 49 43 54 00 ; 9, NEXT>DICT
;
f718: 2c f7 00 00                ; DICT>NAME - (next: f72c DICT>FLAGS)
f71c: 32 07 00 00 00             ; XT=0732, flags=00
f721: 09 44 49 43 54 3e 4e 41 4d 45 00 ; 9, DICT>NAME
;
f72c: 41 f7 00 00                ; DICT>FLAGS - (next: f741 DICT>XT)
f730: 26 07 00 00 00             ; XT=0726, flags=00
f735: 0a 44 49 43 54 3e 46 4c 41 47 53 00 ; 10, DICT>FLAGS
;
f741: 53 f7 00 00                ; DICT>XT - (next: f753 DICT>NEXT)
f745: 1d 07 00 00 00             ; XT=071d, flags=00
f74a: 07 44 49 43 54 3e 58 54 00 ; 7, DICT>XT
;
f753: 67 f7 00 00                ; DICT>NEXT - (next: f767 getOneWord)
f757: 17 07 00 00 00             ; XT=0717, flags=00
f75c: 09 44 49 43 54 3e 4e 45 58 54 00 ; 9, DICT>NEXT
;
f767: 7c f7 00 00                ; getOneWord - (next: f77c skipWS)
f76b: f1 06 00 00 00             ; XT=06f1, flags=00
f770: 0a 67 65 74 4f 6e 65 57 6f 72 64 00 ; 10, getOneWord
;
f77c: 8d f7 00 00                ; skipWS - (next: f78d BETWEEN)
f780: d7 06 00 00 00             ; XT=06d7, flags=00
f785: 06 73 6b 69 70 57 53 00    ; 6, skipWS
;
f78d: 9f f7 00 00                ; BETWEEN - (next: f79f CR)
f791: c4 06 00 00 00             ; XT=06c4, flags=00
f796: 07 42 45 54 57 45 45 4e 00 ; 7, BETWEEN
;
f79f: ac f7 00 00                ; CR - (next: f7ac CRLF)
f7a3: b8 06 00 00 02             ; XT=06b8, flags=02
f7a8: 02 43 52 00                ; 2, CR
;
f7ac: bb f7 00 00                ; CRLF - (next: f7bb BL)
f7b0: ac 06 00 00 02             ; XT=06ac, flags=02
f7b5: 04 43 52 4c 46 00          ; 4, CRLF
;
f7bb: c8 f7 00 00                ; BL - (next: f7c8 SPACE)
f7bf: a3 06 00 00 02             ; XT=06a3, flags=02
f7c4: 02 42 4c 00                ; 2, BL
;
f7c8: d8 f7 00 00                ; SPACE - (next: f7d8 ()
f7cc: 9a 06 00 00 02             ; XT=069a, flags=02
f7d1: 05 53 50 41 43 45 00       ; 5, SPACE
;
f7d8: e4 f7 00 00                ; ( - (next: f7e4 \)
f7dc: 5b 06 00 00 01             ; XT=065b, flags=01
f7e1: 01 28 00                   ; 1, (
;
f7e4: f0 f7 00 00                ; \ - (next: f7f0 CT)
f7e8: 4c 06 00 00 01             ; XT=064c, flags=01
f7ed: 01 5c 00                   ; 1, \
;
f7f0: fd f7 00 00                ; CT - (next: f7fd TYPE)
f7f4: 3c 06 00 00 00             ; XT=063c, flags=00
f7f9: 02 43 54 00                ; 2, CT
;
f7fd: 0c f8 00 00                ; TYPE - (next: f80c COUNT)
f801: 26 06 00 00 00             ; XT=0626, flags=00
f806: 04 54 59 50 45 00          ; 4, TYPE
;
f80c: 1c f8 00 00                ; COUNT - (next: f81c FALSE)
f810: 1c 06 00 00 00             ; XT=061c, flags=00
f815: 05 43 4f 55 4e 54 00       ; 5, COUNT
;
f81c: 2c f8 00 00                ; FALSE - (next: f82c TRUE)
f820: 14 06 00 00 02             ; XT=0614, flags=02
f825: 05 46 41 4c 53 45 00       ; 5, FALSE
;
f82c: 3b f8 00 00                ; TRUE - (next: f83b >=)
f830: 09 06 00 00 02             ; XT=0609, flags=02
f835: 04 54 52 55 45 00          ; 4, TRUE
;
f83b: 48 f8 00 00                ; >= - (next: f848 <=)
f83f: 01 06 00 00 02             ; XT=0601, flags=02
f844: 02 3e 3d 00                ; 2, >=
;
f848: 55 f8 00 00                ; <= - (next: f855 <>)
f84c: f9 05 00 00 02             ; XT=05f9, flags=02
f851: 02 3c 3d 00                ; 2, <=
;
f855: 62 f8 00 00                ; <> - (next: f862 0=)
f859: f1 05 00 00 02             ; XT=05f1, flags=02
f85e: 02 3c 3e 00                ; 2, <>
;
f862: 6f f8 00 00                ; 0= - (next: f86f C--)
f866: ea 05 00 00 02             ; XT=05ea, flags=02
f86b: 02 30 3d 00                ; 2, 0=
;
f86f: 7d f8 00 00                ; C-- - (next: f87d C++)
f873: df 05 00 00 02             ; XT=05df, flags=02
f878: 03 43 2d 2d 00             ; 3, C--
;
f87d: 8b f8 00 00                ; C++ - (next: f88b --)
f881: d4 05 00 00 02             ; XT=05d4, flags=02
f886: 03 43 2b 2b 00             ; 3, C++
;
f88b: 98 f8 00 00                ; -- - (next: f898 ++)
f88f: c9 05 00 00 02             ; XT=05c9, flags=02
f894: 02 2d 2d 00                ; 2, --
;
f898: a5 f8 00 00                ; ++ - (next: f8a5 -!)
f89c: be 05 00 00 02             ; XT=05be, flags=02
f8a1: 02 2b 2b 00                ; 2, ++
;
f8a5: b2 f8 00 00                ; -! - (next: f8b2 +!)
f8a9: b1 05 00 00 00             ; XT=05b1, flags=00
f8ae: 02 2d 21 00                ; 2, -!
;
f8b2: bf f8 00 00                ; +! - (next: f8bf -=)
f8b6: a5 05 00 00 00             ; XT=05a5, flags=00
f8bb: 02 2b 21 00                ; 2, +!
;
f8bf: cc f8 00 00                ; -= - (next: f8cc +=)
f8c3: 99 05 00 00 02             ; XT=0599, flags=02
f8c8: 02 2d 3d 00                ; 2, -=
;
f8cc: d9 f8 00 00                ; += - (next: f8d9 2/)
f8d0: 8e 05 00 00 02             ; XT=058e, flags=02
f8d5: 02 2b 3d 00                ; 2, +=
;
f8d9: e6 f8 00 00                ; 2/ - (next: f8e6 2*)
f8dd: 83 05 00 00 02             ; XT=0583, flags=02
f8e2: 02 32 2f 00                ; 2, 2/
;
f8e6: f3 f8 00 00                ; 2* - (next: f8f3 1-)
f8ea: 7a 05 00 00 02             ; XT=057a, flags=02
f8ef: 02 32 2a 00                ; 2, 2*
;
f8f3: 00 f9 00 00                ; 1- - (next: f900 1+)
f8f7: 73 05 00 00 02             ; XT=0573, flags=02
f8fc: 02 31 2d 00                ; 2, 1-
;
f900: 0d f9 00 00                ; 1+ - (next: f90d MOD)
f904: 6c 05 00 00 02             ; XT=056c, flags=02
f909: 02 31 2b 00                ; 2, 1+
;
f90d: 1b f9 00 00                ; MOD - (next: f91b /)
f911: 64 05 00 00 02             ; XT=0564, flags=02
f916: 03 4d 4f 44 00             ; 3, MOD
;
f91b: 27 f9 00 00                ; / - (next: f927 -ROT)
f91f: 5b 05 00 00 02             ; XT=055b, flags=02
f924: 01 2f 00                   ; 1, /
;
f927: 36 f9 00 00                ; -ROT - (next: f936 ROT)
f92b: 51 05 00 00 02             ; XT=0551, flags=02
f930: 04 2d 52 4f 54 00          ; 4, -ROT
;
f936: 44 f9 00 00                ; ROT - (next: f944 NIP)
f93a: 47 05 00 00 02             ; XT=0547, flags=02
f93f: 03 52 4f 54 00             ; 3, ROT
;
f944: 52 f9 00 00                ; NIP - (next: f952 TUCK)
f948: 3f 05 00 00 02             ; XT=053f, flags=02
f94d: 03 4e 49 50 00             ; 3, NIP
;
f952: 61 f9 00 00                ; TUCK - (next: f961 2DROP)
f956: 37 05 00 00 02             ; XT=0537, flags=02
f95b: 04 54 55 43 4b 00          ; 4, TUCK
;
f961: 71 f9 00 00                ; 2DROP - (next: f971 2DUP)
f965: 2f 05 00 00 02             ; XT=052f, flags=02
f96a: 05 32 44 52 4f 50 00       ; 5, 2DROP
;
f971: 80 f9 00 00                ; 2DUP - (next: f980 ?DUP)
f975: 27 05 00 00 02             ; XT=0527, flags=02
f97a: 04 32 44 55 50 00          ; 4, 2DUP
;
f980: 8f f9 00 00                ; ?DUP - (next: f98f RDROP)
f984: 1d 05 00 00 00             ; XT=051d, flags=00
f989: 04 3f 44 55 50 00          ; 4, ?DUP
;
f98f: 9f f9 00 00                ; RDROP - (next: f99f R@)
f993: 15 05 00 00 02             ; XT=0515, flags=02
f998: 05 52 44 52 4f 50 00       ; 5, RDROP
;
f99f: ac f9 00 00                ; R@ - (next: f9ac DEBUG-OFF)
f9a3: 0e 05 00 00 02             ; XT=050e, flags=02
f9a8: 02 52 40 00                ; 2, R@
;
f9ac: c0 f9 00 00                ; DEBUG-OFF - (next: f9c0 DEBUG-ON)
f9b0: 05 05 00 00 02             ; XT=0505, flags=02
f9b5: 09 44 45 42 55 47 2d 4f 46 46 00 ; 9, DEBUG-OFF
;
f9c0: d3 f9 00 00                ; DEBUG-ON - (next: f9d3 TRACE-OFF)
f9c4: fc 04 00 00 02             ; XT=04fc, flags=02
f9c9: 08 44 45 42 55 47 2d 4f 4e 00 ; 8, DEBUG-ON
;
f9d3: e7 f9 00 00                ; TRACE-OFF - (next: f9e7 TRACE-ON)
f9d7: f3 04 00 00 02             ; XT=04f3, flags=02
f9dc: 09 54 52 41 43 45 2d 4f 46 46 00 ; 9, TRACE-OFF
;
f9e7: fa f9 00 00                ; TRACE-ON - (next: f9fa MEM_SZ)
f9eb: ea 04 00 00 02             ; XT=04ea, flags=02
f9f0: 08 54 52 41 43 45 2d 4f 4e 00 ; 8, TRACE-ON
;
f9fa: 0b fa 00 00                ; MEM_SZ - (next: fa0b UNTIL)
f9fe: de 04 00 00 00             ; XT=04de, flags=00
fa03: 06 4d 45 4d 5f 53 5a 00    ; 6, MEM_SZ
;
fa0b: 1b fa 00 00                ; UNTIL - (next: fa1b WHILE)
fa0f: c0 04 00 00 01             ; XT=04c0, flags=01
fa14: 05 55 4e 54 49 4c 00       ; 5, UNTIL
;
fa1b: 2b fa 00 00                ; WHILE - (next: fa2b AGAIN)
fa1f: a2 04 00 00 01             ; XT=04a2, flags=01
fa24: 05 57 48 49 4c 45 00       ; 5, WHILE
;
fa2b: 3b fa 00 00                ; AGAIN - (next: fa3b LEAVE)
fa2f: 84 04 00 00 01             ; XT=0484, flags=01
fa34: 05 41 47 41 49 4e 00       ; 5, AGAIN
;
fa3b: 4b fa 00 00                ; LEAVE - (next: fa4b BEGIN)
fa3f: 72 04 00 00 01             ; XT=0472, flags=01
fa44: 05 4c 45 41 56 45 00       ; 5, LEAVE
;
fa4b: 5b fa 00 00                ; BEGIN - (next: fa5b THEN)
fa4f: 60 04 00 00 01             ; XT=0460, flags=01
fa54: 05 42 45 47 49 4e 00       ; 5, BEGIN
;
fa5b: 6a fa 00 00                ; THEN - (next: fa6a ELSE)
fa5f: 47 04 00 00 01             ; XT=0447, flags=01
fa64: 04 54 48 45 4e 00          ; 4, THEN
;
fa6a: 79 fa 00 00                ; ELSE - (next: fa79 IF)
fa6e: 1c 04 00 00 01             ; XT=041c, flags=01
fa73: 04 45 4c 53 45 00          ; 4, ELSE
;
fa79: 86 fa 00 00                ; IF - (next: fa86 ?COMPILING)
fa7d: fb 03 00 00 01             ; XT=03fb, flags=01
fa82: 02 49 46 00                ; 2, IF
;
fa86: 9b fa 00 00                ; ?COMPILING - (next: fa9b OFF)
fa8a: ef 03 00 00 00             ; XT=03ef, flags=00
fa8f: 0a 3f 43 4f 4d 50 49 4c 49 4e 47 00 ; 10, ?COMPILING
;
fa9b: a9 fa 00 00                ; OFF - (next: faa9 ON)
fa9f: e5 03 00 00 00             ; XT=03e5, flags=00
faa4: 03 4f 46 46 00             ; 3, OFF
;
faa9: b6 fa 00 00                ; ON - (next: fab6 BINARY)
faad: db 03 00 00 00             ; XT=03db, flags=00
fab2: 02 4f 4e 00                ; 2, ON
;
fab6: c7 fa 00 00                ; BINARY - (next: fac7 OCTAL)
faba: cd 03 00 00 00             ; XT=03cd, flags=00
fabf: 06 42 49 4e 41 52 59 00    ; 6, BINARY
;
fac7: d7 fa 00 00                ; OCTAL - (next: fad7 DECIMAL)
facb: bf 03 00 00 00             ; XT=03bf, flags=00
fad0: 05 4f 43 54 41 4c 00       ; 5, OCTAL
;
fad7: e9 fa 00 00                ; DECIMAL - (next: fae9 HEX)
fadb: b1 03 00 00 00             ; XT=03b1, flags=00
fae0: 07 44 45 43 49 4d 41 4c 00 ; 7, DECIMAL
;
fae9: f7 fa 00 00                ; HEX - (next: faf7 FLAG_INLINE)
faed: a3 03 00 00 00             ; XT=03a3, flags=00
faf2: 03 48 45 58 00             ; 3, HEX
;
faf7: 0d fb 00 00                ; FLAG_INLINE - (next: fb0d FLAG_IMMEDIATE)
fafb: 9b 03 00 00 02             ; XT=039b, flags=02
fb00: 0b 46 4c 41 47 5f 49 4e 4c 49 4e 45 00 ; 11, FLAG_INLINE
;
fb0d: 26 fb 00 00                ; FLAG_IMMEDIATE - (next: fb26 CELLS)
fb11: 93 03 00 00 02             ; XT=0393, flags=02
fb16: 0e 46 4c 41 47 5f 49 4d 4d 45 44 49 41 54 45 00 ; 14, FLAG_IMMEDIATE
;
fb26: 36 fb 00 00                ; CELLS - (next: fb36 IMMEDIATE)
fb2a: 8a 03 00 00 02             ; XT=038a, flags=02
fb2f: 05 43 45 4c 4c 53 00       ; 5, CELLS
;
fb36: 4a fb 00 00                ; IMMEDIATE - (next: fb4a INLINE)
fb3a: 72 03 00 00 00             ; XT=0372, flags=00
fb3f: 09 49 4d 4d 45 44 49 41 54 45 00 ; 9, IMMEDIATE
;
fb4a: 5b fb 00 00                ; INLINE - (next: fb5b BYE)
fb4e: 5a 03 00 00 00             ; XT=035a, flags=00
fb53: 06 49 4e 4c 49 4e 45 00    ; 6, INLINE
;
fb5b: 69 fb 00 00                ; BYE - (next: fb69 RESET)
fb5f: 53 03 00 00 02             ; XT=0353, flags=02
fb64: 03 42 59 45 00             ; 3, BYE
;
fb69: 79 fb 00 00                ; RESET - (next: fb79 BREAK)
fb6d: 4c 03 00 00 02             ; XT=034c, flags=02
fb72: 05 52 45 53 45 54 00       ; 5, RESET
;
fb79: 89 fb 00 00                ; BREAK - (next: fb89 NOP)
fb7d: 45 03 00 00 02             ; XT=0345, flags=02
fb82: 05 42 52 45 41 4b 00       ; 5, BREAK
;
fb89: 97 fb 00 00                ; NOP - (next: fb97 BRANCHBNZ)
fb8d: 3e 03 00 00 02             ; XT=033e, flags=02
fb92: 03 4e 4f 50 00             ; 3, NOP
;
fb97: ab fb 00 00                ; BRANCHBNZ - (next: fbab BRANCHBZ)
fb9b: 31 03 00 00 00             ; XT=0331, flags=00
fba0: 09 42 52 41 4e 43 48 42 4e 5a 00 ; 9, BRANCHBNZ
;
fbab: be fb 00 00                ; BRANCHBZ - (next: fbbe BRANCHB)
fbaf: 24 03 00 00 00             ; XT=0324, flags=00
fbb4: 08 42 52 41 4e 43 48 42 5a 00 ; 8, BRANCHBZ
;
fbbe: d0 fb 00 00                ; BRANCHB - (next: fbd0 BRANCHFNZ)
fbc2: 17 03 00 00 00             ; XT=0317, flags=00
fbc7: 07 42 52 41 4e 43 48 42 00 ; 7, BRANCHB
;
fbd0: e4 fb 00 00                ; BRANCHFNZ - (next: fbe4 BRANCHFZ)
fbd4: 0a 03 00 00 00             ; XT=030a, flags=00
fbd9: 09 42 52 41 4e 43 48 46 4e 5a 00 ; 9, BRANCHFNZ
;
fbe4: f7 fb 00 00                ; BRANCHFZ - (next: fbf7 BRANCHF)
fbe8: fd 02 00 00 00             ; XT=02fd, flags=00
fbed: 08 42 52 41 4e 43 48 46 5a 00 ; 8, BRANCHFZ
;
fbf7: 09 fc 00 00                ; BRANCHF - (next: fc09 >>)
fbfb: f0 02 00 00 00             ; XT=02f0, flags=00
fc00: 07 42 52 41 4e 43 48 46 00 ; 7, BRANCHF
;
fc09: 16 fc 00 00                ; >> - (next: fc16 <<)
fc0d: e9 02 00 00 02             ; XT=02e9, flags=02
fc12: 02 3e 3e 00                ; 2, >>
;
fc16: 23 fc 00 00                ; << - (next: fc23 GETTICK)
fc1a: e2 02 00 00 02             ; XT=02e2, flags=02
fc1f: 02 3c 3c 00                ; 2, <<
;
fc23: 35 fc 00 00                ; GETTICK - (next: fc35 DEC)
fc27: db 02 00 00 02             ; XT=02db, flags=02
fc2c: 07 47 45 54 54 49 43 4b 00 ; 7, GETTICK
;
fc35: 43 fc 00 00                ; DEC - (next: fc43 RDEPTH)
fc39: d4 02 00 00 02             ; XT=02d4, flags=02
fc3e: 03 44 45 43 00             ; 3, DEC
;
fc43: 54 fc 00 00                ; RDEPTH - (next: fc54 INC)
fc47: cd 02 00 00 02             ; XT=02cd, flags=02
fc4c: 06 52 44 45 50 54 48 00    ; 6, RDEPTH
;
fc54: 62 fc 00 00                ; INC - (next: fc62 RFETCH)
fc58: c6 02 00 00 02             ; XT=02c6, flags=02
fc5d: 03 49 4e 43 00             ; 3, INC
;
fc62: 73 fc 00 00                ; RFETCH - (next: fc73 NOT)
fc66: bf 02 00 00 02             ; XT=02bf, flags=02
fc6b: 06 52 46 45 54 43 48 00    ; 6, RFETCH
;
fc73: 81 fc 00 00                ; NOT - (next: fc81 /MOD)
fc77: b8 02 00 00 02             ; XT=02b8, flags=02
fc7c: 03 4e 4f 54 00             ; 3, NOT
;
fc81: 90 fc 00 00                ; /MOD - (next: fc90 COMPAREI)
fc85: b1 02 00 00 02             ; XT=02b1, flags=02
fc8a: 04 2f 4d 4f 44 00          ; 4, /MOD
;
fc90: a3 fc 00 00                ; COMPAREI - (next: fca3 GETCH)
fc94: aa 02 00 00 02             ; XT=02aa, flags=02
fc99: 08 43 4f 4d 50 41 52 45 49 00 ; 8, COMPAREI
;
fca3: b3 fc 00 00                ; GETCH - (next: fcb3 DEPTH)
fca7: a3 02 00 00 02             ; XT=02a3, flags=02
fcac: 05 47 45 54 43 48 00       ; 5, GETCH
;
fcb3: c3 fc 00 00                ; DEPTH - (next: fcc3 PICK)
fcb7: 9c 02 00 00 02             ; XT=029c, flags=02
fcbc: 05 44 45 50 54 48 00       ; 5, DEPTH
;
fcc3: d2 fc 00 00                ; PICK - (next: fcd2 AND)
fcc7: 95 02 00 00 02             ; XT=0295, flags=02
fccc: 04 50 49 43 4b 00          ; 4, PICK
;
fcd2: e0 fc 00 00                ; AND - (next: fce0 LOGLEVEL)
fcd6: 8e 02 00 00 02             ; XT=028e, flags=02
fcdb: 03 41 4e 44 00             ; 3, AND
;
fce0: f3 fc 00 00                ; LOGLEVEL - (next: fcf3 R>)
fce4: 87 02 00 00 02             ; XT=0287, flags=02
fce9: 08 4c 4f 47 4c 45 56 45 4c 00 ; 8, LOGLEVEL
;
fcf3: 00 fd 00 00                ; R> - (next: fd00 >R)
fcf7: 80 02 00 00 02             ; XT=0280, flags=02
fcfc: 02 52 3e 00                ; 2, R>
;
fd00: 0d fd 00 00                ; >R - (next: fd0d FCLOSE)
fd04: 79 02 00 00 02             ; XT=0279, flags=02
fd09: 02 3e 52 00                ; 2, >R
;
fd0d: 1e fd 00 00                ; FCLOSE - (next: fd1e FWRITE)
fd11: 72 02 00 00 02             ; XT=0272, flags=02
fd16: 06 46 43 4c 4f 53 45 00    ; 6, FCLOSE
;
fd1e: 2f fd 00 00                ; FWRITE - (next: fd2f FREADLINE)
fd22: 6b 02 00 00 02             ; XT=026b, flags=02
fd27: 06 46 57 52 49 54 45 00    ; 6, FWRITE
;
fd2f: 43 fd 00 00                ; FREADLINE - (next: fd43 FREAD)
fd33: 64 02 00 00 02             ; XT=0264, flags=02
fd38: 09 46 52 45 41 44 4c 49 4e 45 00 ; 9, FREADLINE
;
fd43: 53 fd 00 00                ; FREAD - (next: fd53 FOPEN)
fd47: 5d 02 00 00 02             ; XT=025d, flags=02
fd4c: 05 46 52 45 41 44 00       ; 5, FREAD
;
fd53: 63 fd 00 00                ; FOPEN - (next: fd63 COMPARE)
fd57: 56 02 00 00 02             ; XT=0256, flags=02
fd5c: 05 46 4f 50 45 4e 00       ; 5, FOPEN
;
fd63: 75 fd 00 00                ; COMPARE - (next: fd75 OVER)
fd67: 4f 02 00 00 02             ; XT=024f, flags=02
fd6c: 07 43 4f 4d 50 41 52 45 00 ; 7, COMPARE
;
fd75: 84 fd 00 00                ; OVER - (next: fd84 EMIT)
fd79: 48 02 00 00 02             ; XT=0248, flags=02
fd7e: 04 4f 56 45 52 00          ; 4, OVER
;
fd84: 93 fd 00 00                ; EMIT - (next: fd93 DICTP)
fd88: 41 02 00 00 02             ; XT=0241, flags=02
fd8d: 04 45 4d 49 54 00          ; 4, EMIT
;
fd93: a3 fd 00 00                ; DICTP - (next: fda3 >)
fd97: 34 02 00 00 02             ; XT=0234, flags=02
fd9c: 05 44 49 43 54 50 00       ; 5, DICTP
;
fda3: af fd 00 00                ; > - (next: fdaf =)
fda7: 2d 02 00 00 02             ; XT=022d, flags=02
fdac: 01 3e 00                   ; 1, >
;
fdaf: bb fd 00 00                ; = - (next: fdbb <)
fdb3: 26 02 00 00 02             ; XT=0226, flags=02
fdb8: 01 3d 00                   ; 1, =
;
fdbb: c7 fd 00 00                ; < - (next: fdc7 /)
fdbf: 1f 02 00 00 02             ; XT=021f, flags=02
fdc4: 01 3c 00                   ; 1, <
;
fdc7: d3 fd 00 00                ; / - (next: fdd3 *)
fdcb: 18 02 00 00 02             ; XT=0218, flags=02
fdd0: 01 2f 00                   ; 1, /
;
fdd3: df fd 00 00                ; * - (next: fddf -)
fdd7: 11 02 00 00 02             ; XT=0211, flags=02
fddc: 01 2a 00                   ; 1, *
;
fddf: eb fd 00 00                ; - - (next: fdeb +)
fde3: 0a 02 00 00 02             ; XT=020a, flags=02
fde8: 01 2d 00                   ; 1, -
;
fdeb: f7 fd 00 00                ; + - (next: fdf7 C!)
fdef: 03 02 00 00 02             ; XT=0203, flags=02
fdf4: 01 2b 00                   ; 1, +
;
fdf7: 04 fe 00 00                ; C! - (next: fe04 C@)
fdfb: fc 01 00 00 02             ; XT=01fc, flags=02
fe00: 02 43 21 00                ; 2, C!
;
fe04: 11 fe 00 00                ; C@ - (next: fe11 CLITERAL)
fe08: f5 01 00 00 02             ; XT=01f5, flags=02
fe0d: 02 43 40 00                ; 2, C@
;
fe11: 24 fe 00 00                ; CLITERAL - (next: fe24 OR)
fe15: e8 01 00 00 02             ; XT=01e8, flags=02
fe1a: 08 43 4c 49 54 45 52 41 4c 00 ; 8, CLITERAL
;
fe24: 31 fe 00 00                ; OR - (next: fe31 RET)
fe28: e1 01 00 00 02             ; XT=01e1, flags=02
fe2d: 02 4f 52 00                ; 2, OR
;
fe31: 3f fe 00 00                ; RET - (next: fe3f CALL)
fe35: d4 01 00 00 00             ; XT=01d4, flags=00
fe3a: 03 52 45 54 00             ; 3, RET
;
fe3f: 4e fe 00 00                ; CALL - (next: fe4e JMPNZ)
fe43: c7 01 00 00 00             ; XT=01c7, flags=00
fe48: 04 43 41 4c 4c 00          ; 4, CALL
;
fe4e: 5e fe 00 00                ; JMPNZ - (next: fe5e JMPZ)
fe52: ba 01 00 00 00             ; XT=01ba, flags=00
fe57: 05 4a 4d 50 4e 5a 00       ; 5, JMPNZ
;
fe5e: 6d fe 00 00                ; JMPZ - (next: fe6d JMP)
fe62: ad 01 00 00 00             ; XT=01ad, flags=00
fe67: 04 4a 4d 50 5a 00          ; 4, JMPZ
;
fe6d: 7b fe 00 00                ; JMP - (next: fe7b SLITERAL)
fe71: a0 01 00 00 00             ; XT=01a0, flags=00
fe76: 03 4a 4d 50 00             ; 3, JMP
;
fe7b: 8e fe 00 00                ; SLITERAL - (next: fe8e DUP)
fe7f: 93 01 00 00 00             ; XT=0193, flags=00
fe84: 08 53 4c 49 54 45 52 41 4c 00 ; 8, SLITERAL
;
fe8e: 9c fe 00 00                ; DUP - (next: fe9c DROP)
fe92: 8c 01 00 00 02             ; XT=018c, flags=02
fe97: 03 44 55 50 00             ; 3, DUP
;
fe9c: ab fe 00 00                ; DROP - (next: feab SWAP)
fea0: 85 01 00 00 02             ; XT=0185, flags=02
fea5: 04 44 52 4f 50 00          ; 4, DROP
;
feab: ba fe 00 00                ; SWAP - (next: feba !)
feaf: 7e 01 00 00 02             ; XT=017e, flags=02
feb4: 04 53 57 41 50 00          ; 4, SWAP
;
feba: c6 fe 00 00                ; ! - (next: fec6 @)
febe: 77 01 00 00 02             ; XT=0177, flags=02
fec3: 01 21 00                   ; 1, !
;
fec6: d2 fe 00 00                ; @ - (next: fed2 LITERAL)
feca: 70 01 00 00 02             ; XT=0170, flags=02
fecf: 01 40 00                   ; 1, @
;
fed2: e4 fe 00 00                ; LITERAL - (next: fee4 ])
fed6: 63 01 00 00 00             ; XT=0163, flags=00
fedb: 07 4c 49 54 45 52 41 4c 00 ; 7, LITERAL
;
fee4: f0 fe 00 00                ; ] - (next: fef0 [)
fee8: 55 01 00 00 01             ; XT=0155, flags=01
feed: 01 5d 00                   ; 1, ]
;
fef0: fc fe 00 00                ; [ - (next: fefc ,)
fef4: 47 01 00 00 01             ; XT=0147, flags=01
fef9: 01 5b 00                   ; 1, [
;
fefc: 08 ff 00 00                ; , - (next: ff08 C,)
ff00: 2d 01 00 00 00             ; XT=012d, flags=00
ff05: 01 2c 00                   ; 1, ,
;
ff08: 15 ff 00 00                ; C, - (next: ff15 LAST)
ff0c: 15 01 00 00 00             ; XT=0115, flags=00
ff11: 02 43 2c 00                ; 2, C,
;
ff15: 24 ff 00 00                ; LAST - (next: ff24 HERE)
ff19: 09 01 00 00 00             ; XT=0109, flags=00
ff1e: 04 4c 41 53 54 00          ; 4, LAST
;
ff24: 33 ff 00 00                ; HERE - (next: ff33 CELL)
ff28: fd 00 00 00 00             ; XT=00fd, flags=00
ff2d: 04 48 45 52 45 00          ; 4, HERE
;
ff33: 42 ff 00 00                ; CELL - (next: ff42 T3)
ff37: f5 00 00 00 02             ; XT=00f5, flags=02
ff3c: 04 43 45 4c 4c 00          ; 4, CELL
;
ff42: 4f ff 00 00                ; T3 - (next: ff4f T2)
ff46: e5 00 00 00 00             ; XT=00e5, flags=00
ff4b: 02 54 33 00                ; 2, T3
;
ff4f: 5c ff 00 00                ; T2 - (next: ff5c T1)
ff53: d6 00 00 00 00             ; XT=00d6, flags=00
ff58: 02 54 32 00                ; 2, T2
;
ff5c: 69 ff 00 00                ; T1 - (next: ff69 INPUT-FP)
ff60: c7 00 00 00 00             ; XT=00c7, flags=00
ff65: 02 54 31 00                ; 2, T1
;
ff69: 7c ff 00 00                ; INPUT-FP - (next: ff7c #LEN)
ff6d: b8 00 00 00 00             ; XT=00b8, flags=00
ff72: 08 49 4e 50 55 54 2d 46 50 00 ; 8, INPUT-FP
;
ff7c: 8b ff 00 00                ; #LEN - (next: ff8b #NEG)
ff80: a9 00 00 00 00             ; XT=00a9, flags=00
ff85: 04 23 4c 45 4e 00          ; 4, #LEN
;
ff8b: 9a ff 00 00                ; #NEG - (next: ff9a >IN)
ff8f: 9a 00 00 00 00             ; XT=009a, flags=00
ff94: 04 23 4e 45 47 00          ; 4, #NEG
;
ff9a: a8 ff 00 00                ; >IN - (next: ffa8 (MEM_SZ))
ff9e: 8b 00 00 00 00             ; XT=008b, flags=00
ffa3: 03 3e 49 4e 00             ; 3, >IN
;
ffa8: bb ff 00 00                ; (MEM_SZ) - (next: ffbb STATE)
ffac: 7c 00 00 00 00             ; XT=007c, flags=00
ffb1: 08 28 4d 45 4d 5f 53 5a 29 00 ; 8, (MEM_SZ)
;
ffbb: cb ff 00 00                ; STATE - (next: ffcb BASE)
ffbf: 6d 00 00 00 00             ; XT=006d, flags=00
ffc4: 05 53 54 41 54 45 00       ; 5, STATE
;
ffcb: da ff 00 00                ; BASE - (next: ffda (LAST))
ffcf: 5e 00 00 00 00             ; XT=005e, flags=00
ffd4: 04 42 41 53 45 00          ; 4, BASE
;
ffda: eb ff 00 00                ; (LAST) - (next: ffeb (HERE))
ffde: 4f 00 00 00 00             ; XT=004f, flags=00
ffe3: 06 28 4c 41 53 54 29 00    ; 6, (LAST)
;
ffeb: fc ff 00 00                ; (HERE) - (next: fffc <end>)
ffef: 40 00 00 00 00             ; XT=0040, flags=00
fff4: 06 28 48 45 52 45 29 00    ; 6, (HERE)
;
fffc: 00 00 00 00                ; End.
