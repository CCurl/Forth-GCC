; memory-size: 65536 bytes, (10000 hex)
; data-stack: fe00, grows up
; return-stack: fffc, grows down
;
0000: 08 e8 11 00 00             ; JMP main (11e8)
;
0005: 00 00 00
0008: 00000004 00000000
0010: 0000147d 0000ef92 0000000a 00000000
0020: 00000063 00010000 00000000 00000000
0030: 00000000 00000000 00000000 00000000
;
0040: 18 ed fd 00 00             ; DICTP CELL (fded)
0045: 01 04 00 00 00             ; LITERAL 4 (4)
004a: 0c                         ; RET
;
004b: 18 de fd 00 00             ; DICTP BASE (fdde)
0050: 01 18 00 00 00             ; LITERAL 24 (18)
0055: 0c                         ; RET
;
0056: 18 cd fd 00 00             ; DICTP (HERE) (fdcd)
005b: 01 10 00 00 00             ; LITERAL 16 (10)
0060: 0c                         ; RET
;
0061: 18 bc fd 00 00             ; DICTP (LAST) (fdbc)
0066: 01 14 00 00 00             ; LITERAL 20 (14)
006b: 0c                         ; RET
;
006c: 18 a9 fd 00 00             ; DICTP INPUT-FP (fda9)
0071: 01 1c 00 00 00             ; LITERAL 28 (1c)
0076: 0c                         ; RET
;
0077: 18 99 fd 00 00             ; DICTP STATE (fd99)
007c: 01 20 00 00 00             ; LITERAL 32 (20)
0081: 0c                         ; RET
;
0082: 18 8a fd 00 00             ; DICTP HERE (fd8a)
0087: 0b 56 00 00 00             ; CALL (HERE) (0056)
008c: 02                         ; FETCH
008d: 0c                         ; RET
;
008e: 18 7b fd 00 00             ; DICTP LAST (fd7b)
0093: 0b 61 00 00 00             ; CALL (LAST) (0061)
0098: 02                         ; FETCH
0099: 0c                         ; RET
;
009a: 18 6e fd 00 00             ; DICTP C, (fd6e)
009f: 0b 82 00 00 00             ; CALL HERE (0082)
00a4: 10                         ; CSTORE
00a5: 0b 82 00 00 00             ; CALL HERE (0082)
00aa: 2c                         ; INC
00ab: 0b 56 00 00 00             ; CALL (HERE) (0056)
00b0: 03                         ; STORE
00b1: 0c                         ; RET
;
00b2: 18 62 fd 00 00             ; DICTP , (fd62)
00b7: 0b 82 00 00 00             ; CALL HERE (0082)
00bc: 03                         ; STORE
00bd: 0b 82 00 00 00             ; CALL HERE (0082)
00c2: 0b 40 00 00 00             ; CALL CELL (0040)
00c7: 11                         ; ADD
00c8: 0b 56 00 00 00             ; CALL (HERE) (0056)
00cd: 03                         ; STORE
00ce: 0c                         ; RET
;
00cf: 18 56 fd 00 00             ; DICTP [ (fd56)
00d4: 0e 00                      ; CLITERAL 0
00d6: 0b 77 00 00 00             ; CALL STATE (0077)
00db: 03                         ; STORE
00dc: 0c                         ; RET
;
00dd: 18 4a fd 00 00             ; DICTP ] (fd4a)
00e2: 0e 01                      ; CLITERAL 1
00e4: 0b 77 00 00 00             ; CALL STATE (0077)
00e9: 03                         ; STORE
00ea: 0c                         ; RET
;
00eb: 18 38 fd 00 00             ; DICTP LITERAL (fd38)
00f0: 0e 01                      ; CLITERAL 1
00f2: 0b 9a 00 00 00             ; CALL C, (009a)
00f7: 0c                         ; RET
;
00f8: 18 2c fd 00 00             ; DICTP @ (fd2c)
00fd: 02                         ; FETCH
00fe: 0c                         ; RET
;
00ff: 18 20 fd 00 00             ; DICTP ! (fd20)
0104: 03                         ; STORE
0105: 0c                         ; RET
;
0106: 18 11 fd 00 00             ; DICTP SWAP (fd11)
010b: 04                         ; SWAP
010c: 0c                         ; RET
;
010d: 18 02 fd 00 00             ; DICTP DROP (fd02)
0112: 05                         ; DROP
0113: 0c                         ; RET
;
0114: 18 f4 fc 00 00             ; DICTP DUP (fcf4)
0119: 06                         ; DUP
011a: 0c                         ; RET
;
011b: 18 e1 fc 00 00             ; DICTP SLITERAL (fce1)
0120: 0e 07                      ; CLITERAL 7
0122: 0b 9a 00 00 00             ; CALL C, (009a)
0127: 0c                         ; RET
;
0128: 18 d3 fc 00 00             ; DICTP JMP (fcd3)
012d: 0e 08                      ; CLITERAL 8
012f: 0b 9a 00 00 00             ; CALL C, (009a)
0134: 0c                         ; RET
;
0135: 18 c4 fc 00 00             ; DICTP JMPZ (fcc4)
013a: 0e 09                      ; CLITERAL 9
013c: 0b 9a 00 00 00             ; CALL C, (009a)
0141: 0c                         ; RET
;
0142: 18 b4 fc 00 00             ; DICTP JMPNZ (fcb4)
0147: 0e 0a                      ; CLITERAL 10
0149: 0b 9a 00 00 00             ; CALL C, (009a)
014e: 0c                         ; RET
;
014f: 18 a5 fc 00 00             ; DICTP CALL (fca5)
0154: 0e 0b                      ; CLITERAL 11
0156: 0b 9a 00 00 00             ; CALL C, (009a)
015b: 0c                         ; RET
;
015c: 18 97 fc 00 00             ; DICTP RET (fc97)
0161: 0e 0c                      ; CLITERAL 12
0163: 0b 9a 00 00 00             ; CALL C, (009a)
0168: 0c                         ; RET
;
0169: 18 8a fc 00 00             ; DICTP OR (fc8a)
016e: 0d                         ; OR
016f: 0c                         ; RET
;
0170: 18 77 fc 00 00             ; DICTP CLITERAL (fc77)
0175: 0e 0e                      ; CLITERAL 14
0177: 0b 9a 00 00 00             ; CALL C, (009a)
017c: 0c                         ; RET
;
017d: 18 6a fc 00 00             ; DICTP C@ (fc6a)
0182: 0f                         ; CFETCH
0183: 0c                         ; RET
;
0184: 18 5d fc 00 00             ; DICTP C! (fc5d)
0189: 10                         ; CSTORE
018a: 0c                         ; RET
;
018b: 18 51 fc 00 00             ; DICTP + (fc51)
0190: 11                         ; ADD
0191: 0c                         ; RET
;
0192: 18 45 fc 00 00             ; DICTP - (fc45)
0197: 12                         ; SUB
0198: 0c                         ; RET
;
0199: 18 39 fc 00 00             ; DICTP * (fc39)
019e: 13                         ; MUL
019f: 0c                         ; RET
;
01a0: 18 2d fc 00 00             ; DICTP / (fc2d)
01a5: 14                         ; DIV
01a6: 0c                         ; RET
;
01a7: 18 21 fc 00 00             ; DICTP < (fc21)
01ac: 15                         ; LT
01ad: 0c                         ; RET
;
01ae: 18 15 fc 00 00             ; DICTP = (fc15)
01b3: 16                         ; EQ
01b4: 0c                         ; RET
;
01b5: 18 09 fc 00 00             ; DICTP > (fc09)
01ba: 17                         ; GT
01bb: 0c                         ; RET
;
01bc: 18 f9 fb 00 00             ; DICTP DICTP (fbf9)
01c1: 0e 18                      ; CLITERAL 24
01c3: 0b 9a 00 00 00             ; CALL C, (009a)
01c8: 0c                         ; RET
;
01c9: 18 ea fb 00 00             ; DICTP EMIT (fbea)
01ce: 19                         ; EMIT
01cf: 0c                         ; RET
;
01d0: 18 db fb 00 00             ; DICTP OVER (fbdb)
01d5: 1a                         ; OVER
01d6: 0c                         ; RET
;
01d7: 18 c9 fb 00 00             ; DICTP COMPARE (fbc9)
01dc: 1b                         ; COMPARE
01dd: 0c                         ; RET
;
01de: 18 b9 fb 00 00             ; DICTP FOPEN (fbb9)
01e3: 1c                         ; FOPEN
01e4: 0c                         ; RET
;
01e5: 18 a9 fb 00 00             ; DICTP FREAD (fba9)
01ea: 1d                         ; FREAD
01eb: 0c                         ; RET
;
01ec: 18 95 fb 00 00             ; DICTP FREADLINE (fb95)
01f1: 1e                         ; FREADLINE
01f2: 0c                         ; RET
;
01f3: 18 84 fb 00 00             ; DICTP FWRITE (fb84)
01f8: 1f                         ; FWRITE
01f9: 0c                         ; RET
;
01fa: 18 73 fb 00 00             ; DICTP FCLOSE (fb73)
01ff: 20                         ; FCLOSE
0200: 0c                         ; RET
;
0201: 18 66 fb 00 00             ; DICTP >R (fb66)
0206: 21                         ; DTOR
0207: 0c                         ; RET
;
0208: 18 59 fb 00 00             ; DICTP R> (fb59)
020d: 22                         ; RTOD
020e: 0c                         ; RET
;
020f: 18 46 fb 00 00             ; DICTP LOGLEVEL (fb46)
0214: 23                         ; LOGLEVEL
0215: 0c                         ; RET
;
0216: 18 38 fb 00 00             ; DICTP AND (fb38)
021b: 24                         ; AND
021c: 0c                         ; RET
;
021d: 18 29 fb 00 00             ; DICTP PICK (fb29)
0222: 25                         ; PICK
0223: 0c                         ; RET
;
0224: 18 19 fb 00 00             ; DICTP DEPTH (fb19)
0229: 26                         ; DEPTH
022a: 0c                         ; RET
;
022b: 18 09 fb 00 00             ; DICTP GETCH (fb09)
0230: 27                         ; GETCH
0231: 0c                         ; RET
;
0232: 18 f6 fa 00 00             ; DICTP COMPAREI (faf6)
0237: 28                         ; COMPAREI
0238: 0c                         ; RET
;
0239: 18 e5 fa 00 00             ; DICTP USINIT (fae5)
023e: 29                         ; USTACKINIT
023f: 0c                         ; RET
;
0240: 18 d4 fa 00 00             ; DICTP USPUSH (fad4)
0245: 2a                         ; UPUSH
0246: 0c                         ; RET
;
0247: 18 c4 fa 00 00             ; DICTP USPOP (fac4)
024c: 2b                         ; UPOP
024d: 0c                         ; RET
;
024e: 18 b6 fa 00 00             ; DICTP INC (fab6)
0253: 2c                         ; INC
0254: 0c                         ; RET
;
0255: 18 a5 fa 00 00             ; DICTP RDEPTH (faa5)
025a: 2d                         ; RDEPTH
025b: 0c                         ; RET
;
025c: 18 97 fa 00 00             ; DICTP DEC (fa97)
0261: 2e                         ; DEC
0262: 0c                         ; RET
;
0263: 18 85 fa 00 00             ; DICTP GETTICK (fa85)
0268: 2f                         ; GETTICK
0269: 0c                         ; RET
;
026a: 18 75 fa 00 00             ; DICTP BREAK (fa75)
026f: fd                         ; BREAK
0270: 0c                         ; RET
;
0271: 18 65 fa 00 00             ; DICTP RESET (fa65)
0276: fe                         ; RESET
0277: 0c                         ; RET
;
0278: 18 57 fa 00 00             ; DICTP BYE (fa57)
027d: ff                         ; BYE
027e: 0c                         ; RET
;
027f: 18 46 fa 00 00             ; DICTP INLINE (fa46)
0284: 0b 61 00 00 00             ; CALL (LAST) (0061)
0289: 02                         ; FETCH
028a: 0e 02                      ; CLITERAL 2
028c: 0b 40 00 00 00             ; CALL CELL (0040)
0291: 13                         ; MUL
0292: 11                         ; ADD
0293: 06                         ; DUP
0294: 0f                         ; CFETCH
0295: 0e 02                      ; CLITERAL 2
0297: 0d                         ; OR
0298: 04                         ; SWAP
0299: 10                         ; CSTORE
029a: 0c                         ; RET
;
029b: 18 32 fa 00 00             ; DICTP IMMEDIATE (fa32)
02a0: 0b 61 00 00 00             ; CALL (LAST) (0061)
02a5: 02                         ; FETCH
02a6: 0e 02                      ; CLITERAL 2
02a8: 0b 40 00 00 00             ; CALL CELL (0040)
02ad: 13                         ; MUL
02ae: 11                         ; ADD
02af: 06                         ; DUP
02b0: 0f                         ; CFETCH
02b1: 0e 01                      ; CLITERAL 1
02b3: 0d                         ; OR
02b4: 04                         ; SWAP
02b5: 10                         ; CSTORE
02b6: 0c                         ; RET
;
02b7: 18 22 fa 00 00             ; DICTP CELLS (fa22)
02bc: 0b 40 00 00 00             ; CALL CELL (0040)
02c1: 13                         ; MUL
02c2: 0c                         ; RET
;
02c3: 18 09 fa 00 00             ; DICTP FLAG_IMMEDIATE (fa09)
02c8: 0e 01                      ; CLITERAL 1
02ca: 0c                         ; RET
;
02cb: 18 f3 f9 00 00             ; DICTP FLAG_INLINE (f9f3)
02d0: 0e 02                      ; CLITERAL 2
02d2: 0c                         ; RET
;
02d3: 18 e5 f9 00 00             ; DICTP HEX (f9e5)
02d8: 0e 10                      ; CLITERAL 16
02da: 0b 4b 00 00 00             ; CALL BASE (004b)
02df: 03                         ; STORE
02e0: 0c                         ; RET
;
02e1: 18 d3 f9 00 00             ; DICTP DECIMAL (f9d3)
02e6: 0e 0a                      ; CLITERAL 10
02e8: 0b 4b 00 00 00             ; CALL BASE (004b)
02ed: 03                         ; STORE
02ee: 0c                         ; RET
;
02ef: 18 c3 f9 00 00             ; DICTP OCTAL (f9c3)
02f4: 0e 08                      ; CLITERAL 8
02f6: 0b 4b 00 00 00             ; CALL BASE (004b)
02fb: 03                         ; STORE
02fc: 0c                         ; RET
;
02fd: 18 b2 f9 00 00             ; DICTP BINARY (f9b2)
0302: 0e 02                      ; CLITERAL 2
0304: 0b 4b 00 00 00             ; CALL BASE (004b)
0309: 03                         ; STORE
030a: 0c                         ; RET
;
030b: 18 a5 f9 00 00             ; DICTP ON (f9a5)
0310: 0e 01                      ; CLITERAL 1
0312: 04                         ; SWAP
0313: 03                         ; STORE
0314: 0c                         ; RET
;
0315: 18 97 f9 00 00             ; DICTP OFF (f997)
031a: 0e 00                      ; CLITERAL 0
031c: 04                         ; SWAP
031d: 03                         ; STORE
031e: 0c                         ; RET
;
031f: 18 82 f9 00 00             ; DICTP ?COMPILING (f982)
0324: 0b 77 00 00 00             ; CALL STATE (0077)
0329: 02                         ; FETCH
032a: 0c                         ; RET
;
032b: 18 75 f9 00 00             ; DICTP IF (f975)
0330: 0b 1f 03 00 00             ; CALL ?COMPILING (031f)
0335: 09 4b 03 00 00             ; JMPZ 034b
033a: 0b 35 01 00 00             ; CALL JMPZ (0135)
033f: 0b 82 00 00 00             ; CALL HERE (0082)
0344: 0e 00                      ; CLITERAL 0
0346: 0b b2 00 00 00             ; CALL , (00b2)
034b: 0c                         ; RET
;
034c: 18 66 f9 00 00             ; DICTP ELSE (f966)
0351: 0b 1f 03 00 00             ; CALL ?COMPILING (031f)
0356: 09 74 03 00 00             ; JMPZ 0374
035b: 0b 28 01 00 00             ; CALL JMP (0128)
0360: 0b 82 00 00 00             ; CALL HERE (0082)
0365: 04                         ; SWAP
0366: 0e 00                      ; CLITERAL 0
0368: 0b b2 00 00 00             ; CALL , (00b2)
036d: 0b 82 00 00 00             ; CALL HERE (0082)
0372: 04                         ; SWAP
0373: 03                         ; STORE
0374: 0c                         ; RET
;
0375: 18 57 f9 00 00             ; DICTP THEN (f957)
037a: 0b 1f 03 00 00             ; CALL ?COMPILING (031f)
037f: 09 8b 03 00 00             ; JMPZ 038b
0384: 0b 82 00 00 00             ; CALL HERE (0082)
0389: 04                         ; SWAP
038a: 03                         ; STORE
038b: 0c                         ; RET
;
038c: 18 47 f9 00 00             ; DICTP BEGIN (f947)
0391: 0b 1f 03 00 00             ; CALL ?COMPILING (031f)
0396: 09 a0 03 00 00             ; JMPZ 03a0
039b: 0b 82 00 00 00             ; CALL HERE (0082)
03a0: 0c                         ; RET
;
03a1: 18 37 f9 00 00             ; DICTP AGAIN (f937)
03a6: 0b 1f 03 00 00             ; CALL ?COMPILING (031f)
03ab: 09 ba 03 00 00             ; JMPZ 03ba
03b0: 0b 28 01 00 00             ; CALL JMP (0128)
03b5: 0b b2 00 00 00             ; CALL , (00b2)
03ba: 0c                         ; RET
;
03bb: 18 27 f9 00 00             ; DICTP WHILE (f927)
03c0: 0b 1f 03 00 00             ; CALL ?COMPILING (031f)
03c5: 09 d4 03 00 00             ; JMPZ 03d4
03ca: 0b 42 01 00 00             ; CALL JMPNZ (0142)
03cf: 0b b2 00 00 00             ; CALL , (00b2)
03d4: 0c                         ; RET
;
03d5: 18 17 f9 00 00             ; DICTP UNTIL (f917)
03da: 0b 1f 03 00 00             ; CALL ?COMPILING (031f)
03df: 09 ee 03 00 00             ; JMPZ 03ee
03e4: 0b 35 01 00 00             ; CALL JMPZ (0135)
03e9: 0b b2 00 00 00             ; CALL , (00b2)
03ee: 0c                         ; RET
;
03ef: 18 07 f9 00 00             ; DICTP LEAVE (f907)
03f4: 0b 1f 03 00 00             ; CALL ?COMPILING (031f)
03f9: 09 03 04 00 00             ; JMPZ 0403
03fe: 0b 5c 01 00 00             ; CALL RET (015c)
0403: 0c                         ; RET
;
0404: 18 f9 f8 00 00             ; DICTP >IN (f8f9)
0409: 01 0f 04 00 00             ; LITERAL 1039 (40f)
040e: 0c                         ; RET
040f: 00                         ; RESET
0410: 00                         ; RESET
0411: 00                         ; RESET
0412: 00                         ; RESET
0413: 0c                         ; RET
;
0414: 18 e9 f8 00 00             ; DICTP isNeg (f8e9)
0419: 01 1f 04 00 00             ; LITERAL 1055 (41f)
041e: 0c                         ; RET
041f: 00                         ; RESET
0420: 00                         ; RESET
0421: 00                         ; RESET
0422: 00                         ; RESET
0423: 0c                         ; RET
;
0424: 18 d8 f8 00 00             ; DICTP MEM_SZ (f8d8)
0429: 0e 24                      ; CLITERAL 36
042b: 02                         ; FETCH
042c: 0c                         ; RET
;
042d: 18 c5 f8 00 00             ; DICTP TRACE-ON (f8c5)
0432: 0e 02                      ; CLITERAL 2
0434: 23                         ; LOGLEVEL
0435: 0c                         ; RET
;
0436: 18 b1 f8 00 00             ; DICTP TRACE-OFF (f8b1)
043b: 0e 00                      ; CLITERAL 0
043d: 23                         ; LOGLEVEL
043e: 0c                         ; RET
;
043f: 18 9e f8 00 00             ; DICTP DEBUG-ON (f89e)
0444: 0e 01                      ; CLITERAL 1
0446: 23                         ; LOGLEVEL
0447: 0c                         ; RET
;
0448: 18 8a f8 00 00             ; DICTP DEBUG-OFF (f88a)
044d: 0e 00                      ; CLITERAL 0
044f: 23                         ; LOGLEVEL
0450: 0c                         ; RET
;
0451: 18 7d f8 00 00             ; DICTP R@ (f87d)
0456: 22                         ; RTOD
0457: 06                         ; DUP
0458: 21                         ; DTOR
0459: 0c                         ; RET
;
045a: 18 6d f8 00 00             ; DICTP RDROP (f86d)
045f: 22                         ; RTOD
0460: 05                         ; DROP
0461: 0c                         ; RET
;
0462: 18 5e f8 00 00             ; DICTP 2DUP (f85e)
0467: 1a                         ; OVER
0468: 1a                         ; OVER
0469: 0c                         ; RET
;
046a: 18 4e f8 00 00             ; DICTP 2DROP (f84e)
046f: 05                         ; DROP
0470: 05                         ; DROP
0471: 0c                         ; RET
;
0472: 18 3f f8 00 00             ; DICTP TUCK (f83f)
0477: 04                         ; SWAP
0478: 1a                         ; OVER
0479: 0c                         ; RET
;
047a: 18 31 f8 00 00             ; DICTP NIP (f831)
047f: 04                         ; SWAP
0480: 05                         ; DROP
0481: 0c                         ; RET
;
0482: 18 23 f8 00 00             ; DICTP ROT (f823)
0487: 21                         ; DTOR
0488: 04                         ; SWAP
0489: 22                         ; RTOD
048a: 04                         ; SWAP
048b: 0c                         ; RET
;
048c: 18 14 f8 00 00             ; DICTP -ROT (f814)
0491: 04                         ; SWAP
0492: 21                         ; DTOR
0493: 04                         ; SWAP
0494: 22                         ; RTOD
0495: 0c                         ; RET
;
0496: 18 07 f8 00 00             ; DICTP 1+ (f807)
049b: 2c                         ; INC
049c: 0c                         ; RET
;
049d: 18 fa f7 00 00             ; DICTP 1- (f7fa)
04a2: 2e                         ; DEC
04a3: 0c                         ; RET
;
04a4: 18 ed f7 00 00             ; DICTP 2* (f7ed)
04a9: 0e 02                      ; CLITERAL 2
04ab: 13                         ; MUL
04ac: 0c                         ; RET
;
04ad: 18 e0 f7 00 00             ; DICTP 2/ (f7e0)
04b2: 0e 02                      ; CLITERAL 2
04b4: 14                         ; DIV
04b5: 0c                         ; RET
;
04b6: 18 d3 f7 00 00             ; DICTP += (f7d3)
04bb: 1a                         ; OVER
04bc: 02                         ; FETCH
04bd: 11                         ; ADD
04be: 04                         ; SWAP
04bf: 03                         ; STORE
04c0: 0c                         ; RET
;
04c1: 18 c6 f7 00 00             ; DICTP -= (f7c6)
04c6: 1a                         ; OVER
04c7: 02                         ; FETCH
04c8: 04                         ; SWAP
04c9: 12                         ; SUB
04ca: 04                         ; SWAP
04cb: 03                         ; STORE
04cc: 0c                         ; RET
;
04cd: 18 b9 f7 00 00             ; DICTP ++ (f7b9)
04d2: 0e 01                      ; CLITERAL 1
04d4: 0b b6 04 00 00             ; CALL += (04b6)
04d9: 0c                         ; RET
;
04da: 18 ac f7 00 00             ; DICTP -- (f7ac)
04df: 0e 01                      ; CLITERAL 1
04e1: 0b c1 04 00 00             ; CALL -= (04c1)
04e6: 0c                         ; RET
;
04e7: 18 9e f7 00 00             ; DICTP C++ (f79e)
04ec: 06                         ; DUP
04ed: 0f                         ; CFETCH
04ee: 2c                         ; INC
04ef: 04                         ; SWAP
04f0: 10                         ; CSTORE
04f1: 0c                         ; RET
;
04f2: 18 90 f7 00 00             ; DICTP C-- (f790)
04f7: 06                         ; DUP
04f8: 0f                         ; CFETCH
04f9: 2e                         ; DEC
04fa: 04                         ; SWAP
04fb: 10                         ; CSTORE
04fc: 0c                         ; RET
;
04fd: 18 83 f7 00 00             ; DICTP +! (f783)
0502: 04                         ; SWAP
0503: 1a                         ; OVER
0504: 02                         ; FETCH
0505: 11                         ; ADD
0506: 04                         ; SWAP
0507: 03                         ; STORE
0508: 0c                         ; RET
;
0509: 18 75 f7 00 00             ; DICTP C+! (f775)
050e: 04                         ; SWAP
050f: 1a                         ; OVER
0510: 0f                         ; CFETCH
0511: 11                         ; ADD
0512: 04                         ; SWAP
0513: 10                         ; CSTORE
0514: 0c                         ; RET
;
0515: 18 68 f7 00 00             ; DICTP 0= (f768)
051a: 0e 00                      ; CLITERAL 0
051c: 16                         ; EQ
051d: 0c                         ; RET
;
051e: 18 5b f7 00 00             ; DICTP <> (f75b)
0523: 16                         ; EQ
0524: 0e 00                      ; CLITERAL 0
0526: 16                         ; EQ
0527: 0c                         ; RET
;
0528: 18 4e f7 00 00             ; DICTP <= (f74e)
052d: 17                         ; GT
052e: 0e 00                      ; CLITERAL 0
0530: 16                         ; EQ
0531: 0c                         ; RET
;
0532: 18 41 f7 00 00             ; DICTP >= (f741)
0537: 15                         ; LT
0538: 0e 00                      ; CLITERAL 0
053a: 16                         ; EQ
053b: 0c                         ; RET
;
053c: 18 32 f7 00 00             ; DICTP TRUE (f732)
0541: 0e 01                      ; CLITERAL 1
0543: 0c                         ; RET
;
0544: 18 22 f7 00 00             ; DICTP FALSE (f722)
0549: 0e 00                      ; CLITERAL 0
054b: 0c                         ; RET
;
054c: 18 14 f7 00 00             ; DICTP NOT (f714)
0551: 0e 00                      ; CLITERAL 0
0553: 16                         ; EQ
0554: 0c                         ; RET
;
0555: 18 04 f7 00 00             ; DICTP COUNT (f704)
055a: 06                         ; DUP
055b: 2c                         ; INC
055c: 04                         ; SWAP
055d: 0f                         ; CFETCH
055e: 0c                         ; RET
;
055f: 18 f5 f6 00 00             ; DICTP TYPE (f6f5)
0564: 1a                         ; OVER
0565: 11                         ; ADD
0566: 04                         ; SWAP
0567: 1a                         ; OVER
0568: 1a                         ; OVER
0569: 17                         ; GT
056a: 0e 00                      ; CLITERAL 0
056c: 16                         ; EQ
056d: 09 75 05 00 00             ; JMPZ 0575
0572: 05                         ; DROP
0573: 05                         ; DROP
0574: 0c                         ; RET
0575: 06                         ; DUP
0576: 0f                         ; CFETCH
0577: 19                         ; EMIT
0578: 2c                         ; INC
0579: 08 67 05 00 00             ; JMP 0567
057e: 0c                         ; RET
;
057f: 18 e8 f6 00 00             ; DICTP CT (f6e8)
0584: 0b 55 05 00 00             ; CALL COUNT (0555)
0589: 0b 5f 05 00 00             ; CALL TYPE (055f)
058e: 0c                         ; RET
;
058f: 18 dc f6 00 00             ; DICTP \ (f6dc)
0594: 0e 00                      ; CLITERAL 0
0596: 0b 04 04 00 00             ; CALL >IN (0404)
059b: 02                         ; FETCH
059c: 10                         ; CSTORE
059d: 0c                         ; RET
;
059e: 18 d0 f6 00 00             ; DICTP ( (f6d0)
05a3: 0b 04 04 00 00             ; CALL >IN (0404)
05a8: 02                         ; FETCH
05a9: 0f                         ; CFETCH
05aa: 06                         ; DUP
05ab: 0e 00                      ; CLITERAL 0
05ad: 16                         ; EQ
05ae: 09 cf 05 00 00             ; JMPZ 05cf
05b3: 07 13 6d 69 73 73 69 6e 67 20 63 6c 6f 73 69 6e 67 20 27 29 27 00 ; SLITERAL (05b4) [missing closing ')']
05c9: 0b 7f 05 00 00             ; CALL CT (057f)
05ce: fe                         ; RESET
05cf: 0b 04 04 00 00             ; CALL >IN (0404)
05d4: 0b cd 04 00 00             ; CALL ++ (04cd)
05d9: 0e 29                      ; CLITERAL 41
05db: 16                         ; EQ
05dc: 09 e2 05 00 00             ; JMPZ 05e2
05e1: 0c                         ; RET
05e2: 08 a3 05 00 00             ; JMP 05a3
05e7: 0c                         ; RET
;
05e8: 18 c3 f6 00 00             ; DICTP BL (f6c3)
05ed: 0e 20                      ; CLITERAL 32
05ef: 19                         ; EMIT
05f0: 0c                         ; RET
;
05f1: 18 b4 f6 00 00             ; DICTP CRLF (f6b4)
05f6: 0e 0d                      ; CLITERAL 13
05f8: 19                         ; EMIT
05f9: 0e 0a                      ; CLITERAL 10
05fb: 19                         ; EMIT
05fc: 0c                         ; RET
;
05fd: 18 a7 f6 00 00             ; DICTP CR (f6a7)
0602: 0e 0d                      ; CLITERAL 13
0604: 19                         ; EMIT
0605: 0e 0a                      ; CLITERAL 10
0607: 19                         ; EMIT
0608: 0c                         ; RET
;
0609: 18 95 f6 00 00             ; DICTP BETWEEN (f695)
060e: 0e 02                      ; CLITERAL 2
0610: 25                         ; PICK
0611: 15                         ; LT
0612: 09 1c 06 00 00             ; JMPZ 061c
0617: 05                         ; DROP
0618: 05                         ; DROP
0619: 0e 00                      ; CLITERAL 0
061b: 0c                         ; RET
061c: 15                         ; LT
061d: 0e 00                      ; CLITERAL 0
061f: 16                         ; EQ
0620: 0c                         ; RET
;
0621: 18 85 f6 00 00             ; DICTP (tmp) (f685)
0626: 01 2c 06 00 00             ; LITERAL 1580 (62c)
062b: 0c                         ; RET
062c: 00                         ; RESET
062d: 00                         ; RESET
062e: 00                         ; RESET
062f: 00                         ; RESET
0630: 0c                         ; RET
;
0631: 18 72 f6 00 00             ; DICTP tmp-init (f672)
0636: 0b 8e 00 00 00             ; CALL LAST (008e)
063b: 0b 21 06 00 00             ; CALL (tmp) (0621)
0640: 03                         ; STORE
0641: 0c                         ; RET
;
0642: 18 60 f6 00 00             ; DICTP tmp-cur (f660)
0647: 0b 21 06 00 00             ; CALL (tmp) (0621)
064c: 02                         ; FETCH
064d: 0c                         ; RET
;
064e: 18 4c f6 00 00             ; DICTP tmp-alloc (f64c)
0653: 0b 21 06 00 00             ; CALL (tmp) (0621)
0658: 04                         ; SWAP
0659: 1a                         ; OVER
065a: 02                         ; FETCH
065b: 04                         ; SWAP
065c: 12                         ; SUB
065d: 04                         ; SWAP
065e: 03                         ; STORE
065f: 0b 42 06 00 00             ; CALL tmp-cur (0642)
0664: 0c                         ; RET
;
0665: 18 3e f6 00 00             ; DICTP PAD (f63e)
066a: 0b 31 06 00 00             ; CALL tmp-init (0631)
066f: 0e c8                      ; CLITERAL 200
0671: 0b 4e 06 00 00             ; CALL tmp-alloc (064e)
0676: 0c                         ; RET
;
0677: 18 2b f6 00 00             ; DICTP getInput (f62b)
067c: 0b 65 06 00 00             ; CALL PAD (0665)
0681: 0e 80                      ; CLITERAL 128
0683: 0e 00                      ; CLITERAL 0
0685: 1e                         ; FREADLINE
0686: 05                         ; DROP
0687: 0b 65 06 00 00             ; CALL PAD (0665)
068c: 0c                         ; RET
;
068d: 18 1a f6 00 00             ; DICTP skipWS (f61a)
0692: 06                         ; DUP
0693: 0f                         ; CFETCH
0694: 06                         ; DUP
0695: 09 ae 06 00 00             ; JMPZ 06ae
069a: 0e 20                      ; CLITERAL 32
069c: 17                         ; GT
069d: 09 a8 06 00 00             ; JMPZ 06a8
06a2: 0c                         ; RET
06a3: 08 a9 06 00 00             ; JMP 06a9
06a8: 2c                         ; INC
06a9: 08 b0 06 00 00             ; JMP 06b0
06ae: 05                         ; DROP
06af: 0c                         ; RET
06b0: 08 92 06 00 00             ; JMP 0692
06b5: 0c                         ; RET
;
06b6: 18 05 f6 00 00             ; DICTP getOneWord (f605)
06bb: 06                         ; DUP
06bc: 21                         ; DTOR
06bd: 21                         ; DTOR
06be: 22                         ; RTOD
06bf: 06                         ; DUP
06c0: 21                         ; DTOR
06c1: 0f                         ; CFETCH
06c2: 0e 20                      ; CLITERAL 32
06c4: 17                         ; GT
06c5: 09 d2 06 00 00             ; JMPZ 06d2
06ca: 22                         ; RTOD
06cb: 2c                         ; INC
06cc: 21                         ; DTOR
06cd: 08 e8 06 00 00             ; JMP 06e8
06d2: 22                         ; RTOD
06d3: 06                         ; DUP
06d4: 21                         ; DTOR
06d5: 0f                         ; CFETCH
06d6: 09 e4 06 00 00             ; JMPZ 06e4
06db: 0e 00                      ; CLITERAL 0
06dd: 22                         ; RTOD
06de: 06                         ; DUP
06df: 21                         ; DTOR
06e0: 10                         ; CSTORE
06e1: 22                         ; RTOD
06e2: 2c                         ; INC
06e3: 21                         ; DTOR
06e4: 22                         ; RTOD
06e5: 22                         ; RTOD
06e6: 04                         ; SWAP
06e7: 0c                         ; RET
06e8: 08 be 06 00 00             ; JMP 06be
06ed: 0c                         ; RET
;
06ee: 18 f1 f5 00 00             ; DICTP DICT>NEXT (f5f1)
06f3: 0c                         ; RET
;
06f4: 18 df f5 00 00             ; DICTP DICT>XT (f5df)
06f9: 0b 40 00 00 00             ; CALL CELL (0040)
06fe: 11                         ; ADD
06ff: 0c                         ; RET
;
0700: 18 ca f5 00 00             ; DICTP DICT>FLAGS (f5ca)
0705: 0e 02                      ; CLITERAL 2
0707: 0b 40 00 00 00             ; CALL CELL (0040)
070c: 13                         ; MUL
070d: 11                         ; ADD
070e: 0c                         ; RET
;
070f: 18 b6 f5 00 00             ; DICTP DICT>NAME (f5b6)
0714: 0b 00 07 00 00             ; CALL DICT>FLAGS (0700)
0719: 2c                         ; INC
071a: 0c                         ; RET
;
071b: 18 a2 f5 00 00             ; DICTP NEXT>DICT (f5a2)
0720: 0c                         ; RET
;
0721: 18 90 f5 00 00             ; DICTP XT>DICT (f590)
0726: 0b 40 00 00 00             ; CALL CELL (0040)
072b: 12                         ; SUB
072c: 0c                         ; RET
;
072d: 18 7b f5 00 00             ; DICTP FLAGS>DICT (f57b)
0732: 0e 02                      ; CLITERAL 2
0734: 0b 40 00 00 00             ; CALL CELL (0040)
0739: 13                         ; MUL
073a: 12                         ; SUB
073b: 0c                         ; RET
;
073c: 18 67 f5 00 00             ; DICTP NAME>DICT (f567)
0741: 2e                         ; DEC
0742: 0e 02                      ; CLITERAL 2
0744: 0b 40 00 00 00             ; CALL CELL (0040)
0749: 13                         ; MUL
074a: 12                         ; SUB
074b: 0c                         ; RET
;
074c: 18 52 f5 00 00             ; DICTP DICT.GetXT (f552)
0751: 0b f4 06 00 00             ; CALL DICT>XT (06f4)
0756: 02                         ; FETCH
0757: 0c                         ; RET
;
0758: 18 3a f5 00 00             ; DICTP DICT.GetFLAGS (f53a)
075d: 0b 00 07 00 00             ; CALL DICT>FLAGS (0700)
0762: 0f                         ; CFETCH
0763: 0c                         ; RET
;
0764: 18 25 f5 00 00             ; DICTP DICTP>NAME (f525)
0769: 2c                         ; INC
076a: 02                         ; FETCH
076b: 0b 0f 07 00 00             ; CALL DICT>NAME (070f)
0770: 0c                         ; RET
;
0771: 18 0f f5 00 00             ; DICTP XT.GetDICTP (f50f)
0776: 06                         ; DUP
0777: 0f                         ; CFETCH
0778: 0e 18                      ; CLITERAL 24
077a: 16                         ; EQ
077b: 09 87 07 00 00             ; JMPZ 0787
0780: 2c                         ; INC
0781: 02                         ; FETCH
0782: 08 89 07 00 00             ; JMP 0789
0787: 05                         ; DROP
0788: fe                         ; RESET
0789: 0c                         ; RET
;
078a: 18 f2 f4 00 00             ; DICTP FLAGS.ISIMMEDIATE? (f4f2)
078f: 0e 01                      ; CLITERAL 1
0791: 24                         ; AND
0792: 0c                         ; RET
;
0793: 18 d8 f4 00 00             ; DICTP FLAGS.ISINLINE? (f4d8)
0798: 0e 02                      ; CLITERAL 2
079a: 24                         ; AND
079b: 0c                         ; RET
;
079c: 18 bc f4 00 00             ; DICTP DICT.GetIMMEDIATE (f4bc)
07a1: 0b 58 07 00 00             ; CALL DICT.GetFLAGS (0758)
07a6: 0b 8a 07 00 00             ; CALL FLAGS.ISIMMEDIATE? (078a)
07ab: 0c                         ; RET
;
07ac: 18 a3 f4 00 00             ; DICTP DICT.GetINLINE (f4a3)
07b1: 0b 58 07 00 00             ; CALL DICT.GetFLAGS (0758)
07b6: 0b 93 07 00 00             ; CALL FLAGS.ISINLINE? (0793)
07bb: 0c                         ; RET
;
07bc: 18 8e f4 00 00             ; DICTP findInDict (f48e)
07c1: 0b 8e 00 00 00             ; CALL LAST (008e)
07c6: 21                         ; DTOR
07c7: 22                         ; RTOD
07c8: 06                         ; DUP
07c9: 21                         ; DTOR
07ca: 06                         ; DUP
07cb: 09 f4 07 00 00             ; JMPZ 07f4
07d0: 0b 0f 07 00 00             ; CALL DICT>NAME (070f)
07d5: 2c                         ; INC
07d6: 1a                         ; OVER
07d7: 28                         ; COMPAREI
07d8: 09 ef 07 00 00             ; JMPZ 07ef
07dd: 05                         ; DROP
07de: 22                         ; RTOD
07df: 06                         ; DUP
07e0: 21                         ; DTOR
07e1: 0b 4c 07 00 00             ; CALL DICT.GetXT (074c)
07e6: 22                         ; RTOD
07e7: 0b 58 07 00 00             ; CALL DICT.GetFLAGS (0758)
07ec: 0e 01                      ; CLITERAL 1
07ee: 0c                         ; RET
07ef: 08 fc 07 00 00             ; JMP 07fc
07f4: 05                         ; DROP
07f5: 05                         ; DROP
07f6: 22                         ; RTOD
07f7: 0e 00                      ; CLITERAL 0
07f9: 0e 00                      ; CLITERAL 0
07fb: 0c                         ; RET
07fc: 22                         ; RTOD
07fd: 02                         ; FETCH
07fe: 21                         ; DTOR
07ff: 08 c7 07 00 00             ; JMP 07c7
0804: 0c                         ; RET
;
0805: 18 7d f4 00 00             ; DICTP isHEX? (f47d)
080a: 0b 4b 00 00 00             ; CALL BASE (004b)
080f: 02                         ; FETCH
0810: 0e 10                      ; CLITERAL 16
0812: 16                         ; EQ
0813: 0c                         ; RET
;
0814: 18 68 f4 00 00             ; DICTP isNumChar? (f468)
0819: 06                         ; DUP
081a: 0e 30                      ; CLITERAL 48
081c: 0e 39                      ; CLITERAL 57
081e: 0b 09 06 00 00             ; CALL BETWEEN (0609)
0823: 09 2e 08 00 00             ; JMPZ 082e
0828: 0e 30                      ; CLITERAL 48
082a: 12                         ; SUB
082b: 0e 01                      ; CLITERAL 1
082d: 0c                         ; RET
082e: 0b 05 08 00 00             ; CALL isHEX? (0805)
0833: 09 62 08 00 00             ; JMPZ 0862
0838: 06                         ; DUP
0839: 0e 41                      ; CLITERAL 65
083b: 0e 46                      ; CLITERAL 70
083d: 0b 09 06 00 00             ; CALL BETWEEN (0609)
0842: 09 4d 08 00 00             ; JMPZ 084d
0847: 0e 37                      ; CLITERAL 55
0849: 12                         ; SUB
084a: 0e 01                      ; CLITERAL 1
084c: 0c                         ; RET
084d: 06                         ; DUP
084e: 0e 61                      ; CLITERAL 97
0850: 0e 66                      ; CLITERAL 102
0852: 0b 09 06 00 00             ; CALL BETWEEN (0609)
0857: 09 62 08 00 00             ; JMPZ 0862
085c: 0e 57                      ; CLITERAL 87
085e: 12                         ; SUB
085f: 0e 01                      ; CLITERAL 1
0861: 0c                         ; RET
0862: 0e 00                      ; CLITERAL 0
0864: 0c                         ; RET
;
0865: 18 57 f4 00 00             ; DICTP NEGATE (f457)
086a: 0e 00                      ; CLITERAL 0
086c: 04                         ; SWAP
086d: 12                         ; SUB
086e: 0c                         ; RET
;
086f: 18 49 f4 00 00             ; DICTP ABS (f449)
0874: 06                         ; DUP
0875: 0e 00                      ; CLITERAL 0
0877: 15                         ; LT
0878: 09 82 08 00 00             ; JMPZ 0882
087d: 0b 65 08 00 00             ; CALL NEGATE (0865)
0882: 0c                         ; RET
;
0883: 18 35 f4 00 00             ; DICTP isNumber? (f435)
0888: 06                         ; DUP
0889: 0f                         ; CFETCH
088a: 0e 2d                      ; CLITERAL 45
088c: 16                         ; EQ
088d: 06                         ; DUP
088e: 0b 14 04 00 00             ; CALL isNeg (0414)
0893: 10                         ; CSTORE
0894: 09 9a 08 00 00             ; JMPZ 089a
0899: 2c                         ; INC
089a: 0e 00                      ; CLITERAL 0
089c: 21                         ; DTOR
089d: 06                         ; DUP
089e: 0f                         ; CFETCH
089f: 06                         ; DUP
08a0: 0e 00                      ; CLITERAL 0
08a2: 16                         ; EQ
08a3: 09 be 08 00 00             ; JMPZ 08be
08a8: 05                         ; DROP
08a9: 05                         ; DROP
08aa: 22                         ; RTOD
08ab: 0b 14 04 00 00             ; CALL isNeg (0414)
08b0: 0f                         ; CFETCH
08b1: 09 bb 08 00 00             ; JMPZ 08bb
08b6: 0b 65 08 00 00             ; CALL NEGATE (0865)
08bb: 0e 01                      ; CLITERAL 1
08bd: 0c                         ; RET
08be: 0b 14 08 00 00             ; CALL isNumChar? (0814)
08c3: 09 d8 08 00 00             ; JMPZ 08d8
08c8: 22                         ; RTOD
08c9: 0b 4b 00 00 00             ; CALL BASE (004b)
08ce: 02                         ; FETCH
08cf: 13                         ; MUL
08d0: 11                         ; ADD
08d1: 21                         ; DTOR
08d2: 2c                         ; INC
08d3: 08 dd 08 00 00             ; JMP 08dd
08d8: 05                         ; DROP
08d9: 22                         ; RTOD
08da: 0e 00                      ; CLITERAL 0
08dc: 0c                         ; RET
08dd: 08 9d 08 00 00             ; JMP 089d
08e2: 0c                         ; RET
;
08e3: 18 27 f4 00 00             ; DICTP MOD (f427)
08e8: 1a                         ; OVER
08e9: 1a                         ; OVER
08ea: 14                         ; DIV
08eb: 13                         ; MUL
08ec: 12                         ; SUB
08ed: 0c                         ; RET
;
08ee: 18 18 f4 00 00             ; DICTP /MOD (f418)
08f3: 1a                         ; OVER
08f4: 1a                         ; OVER
08f5: 14                         ; DIV
08f6: 06                         ; DUP
08f7: 21                         ; DTOR
08f8: 13                         ; MUL
08f9: 12                         ; SUB
08fa: 22                         ; RTOD
08fb: 0c                         ; RET
;
08fc: 18 08 f4 00 00             ; DICTP SPACE (f408)
0901: 0e 20                      ; CLITERAL 32
0903: 19                         ; EMIT
0904: 0c                         ; RET
;
0905: 18 f9 f3 00 00             ; DICTP #NEG (f3f9)
090a: 01 10 09 00 00             ; LITERAL 2320 (910)
090f: 0c                         ; RET
0910: 00                         ; RESET
0911: 00                         ; RESET
0912: 00                         ; RESET
0913: 00                         ; RESET
0914: 0c                         ; RET
;
0915: 18 ea f3 00 00             ; DICTP #LEN (f3ea)
091a: 01 20 09 00 00             ; LITERAL 2336 (920)
091f: 0c                         ; RET
0920: 05                         ; DROP
0921: 00                         ; RESET
0922: 00                         ; RESET
0923: 00                         ; RESET
0924: 0c                         ; RET
;
0925: 18 dd f3 00 00             ; DICTP <# (f3dd)
092a: 0b 05 09 00 00             ; CALL #NEG (0905)
092f: 0b 15 03 00 00             ; CALL OFF (0315)
0934: 0b 15 09 00 00             ; CALL #LEN (0915)
0939: 0b 15 03 00 00             ; CALL OFF (0315)
093e: 06                         ; DUP
093f: 0e 00                      ; CLITERAL 0
0941: 15                         ; LT
0942: 09 56 09 00 00             ; JMPZ 0956
0947: 0b 65 08 00 00             ; CALL NEGATE (0865)
094c: 0b 05 09 00 00             ; CALL #NEG (0905)
0951: 0b 0b 03 00 00             ; CALL ON (030b)
0956: 0e 00                      ; CLITERAL 0
0958: 04                         ; SWAP
0959: 0c                         ; RET
;
095a: 18 d1 f3 00 00             ; DICTP # (f3d1)
095f: 0b 4b 00 00 00             ; CALL BASE (004b)
0964: 02                         ; FETCH
0965: 0b ee 08 00 00             ; CALL /MOD (08ee)
096a: 04                         ; SWAP
096b: 0e 30                      ; CLITERAL 48
096d: 11                         ; ADD
096e: 06                         ; DUP
096f: 0e 39                      ; CLITERAL 57
0971: 17                         ; GT
0972: 09 7a 09 00 00             ; JMPZ 097a
0977: 0e 07                      ; CLITERAL 7
0979: 11                         ; ADD
097a: 0b 15 09 00 00             ; CALL #LEN (0915)
097f: 0b cd 04 00 00             ; CALL ++ (04cd)
0984: 04                         ; SWAP
0985: 0c                         ; RET
;
0986: 18 c4 f3 00 00             ; DICTP #S (f3c4)
098b: 0b 5a 09 00 00             ; CALL # (095a)
0990: 06                         ; DUP
0991: 0e 00                      ; CLITERAL 0
0993: 16                         ; EQ
0994: 09 8b 09 00 00             ; JMPZ 098b
0999: 0c                         ; RET
;
099a: 18 b7 f3 00 00             ; DICTP #> (f3b7)
099f: 0c                         ; RET
;
09a0: 18 a9 f3 00 00             ; DICTP #P- (f3a9)
09a5: 05                         ; DROP
09a6: 0b 05 09 00 00             ; CALL #NEG (0905)
09ab: 02                         ; FETCH
09ac: 09 b4 09 00 00             ; JMPZ 09b4
09b1: 0e 2d                      ; CLITERAL 45
09b3: 19                         ; EMIT
09b4: 0c                         ; RET
;
09b5: 18 9c f3 00 00             ; DICTP #P (f39c)
09ba: 0b a0 09 00 00             ; CALL #P- (09a0)
09bf: 19                         ; EMIT
09c0: 06                         ; DUP
09c1: 0e 00                      ; CLITERAL 0
09c3: 16                         ; EQ
09c4: 09 bf 09 00 00             ; JMPZ 09bf
09c9: 05                         ; DROP
09ca: 0c                         ; RET
;
09cb: 18 8e f3 00 00             ; DICTP (.) (f38e)
09d0: 0b 25 09 00 00             ; CALL <# (0925)
09d5: 0b 86 09 00 00             ; CALL #S (0986)
09da: 0b 9a 09 00 00             ; CALL #> (099a)
09df: 0b b5 09 00 00             ; CALL #P (09b5)
09e4: 0c                         ; RET
;
09e5: 18 82 f3 00 00             ; DICTP . (f382)
09ea: 0b cb 09 00 00             ; CALL (.) (09cb)
09ef: 0b fc 08 00 00             ; CALL SPACE (08fc)
09f4: 0c                         ; RET
;
09f5: 18 73 f3 00 00             ; DICTP HEX. (f373)
09fa: 0b 4b 00 00 00             ; CALL BASE (004b)
09ff: 02                         ; FETCH
0a00: 04                         ; SWAP
0a01: 0b d3 02 00 00             ; CALL HEX (02d3)
0a06: 06                         ; DUP
0a07: 0e 10                      ; CLITERAL 16
0a09: 15                         ; LT
0a0a: 09 12 0a 00 00             ; JMPZ 0a12
0a0f: 0e 30                      ; CLITERAL 48
0a11: 19                         ; EMIT
0a12: 0b cb 09 00 00             ; CALL (.) (09cb)
0a17: 0b 4b 00 00 00             ; CALL BASE (004b)
0a1c: 03                         ; STORE
0a1d: 0c                         ; RET
;
0a1e: 18 60 f3 00 00             ; DICTP DECIMAL. (f360)
0a23: 0b 4b 00 00 00             ; CALL BASE (004b)
0a28: 02                         ; FETCH
0a29: 04                         ; SWAP
0a2a: 0b e1 02 00 00             ; CALL DECIMAL (02e1)
0a2f: 0b cb 09 00 00             ; CALL (.) (09cb)
0a34: 0b 4b 00 00 00             ; CALL BASE (004b)
0a39: 03                         ; STORE
0a3a: 0c                         ; RET
;
0a3b: 18 4e f3 00 00             ; DICTP BINARY. (f34e)
0a40: 0b 4b 00 00 00             ; CALL BASE (004b)
0a45: 02                         ; FETCH
0a46: 04                         ; SWAP
0a47: 0b fd 02 00 00             ; CALL BINARY (02fd)
0a4c: 0b cb 09 00 00             ; CALL (.) (09cb)
0a51: 0b 4b 00 00 00             ; CALL BASE (004b)
0a56: 03                         ; STORE
0a57: 0c                         ; RET
;
0a58: 18 40 f3 00 00             ; DICTP MIN (f340)
0a5d: 1a                         ; OVER
0a5e: 1a                         ; OVER
0a5f: 17                         ; GT
0a60: 09 66 0a 00 00             ; JMPZ 0a66
0a65: 04                         ; SWAP
0a66: 05                         ; DROP
0a67: 0c                         ; RET
;
0a68: 18 32 f3 00 00             ; DICTP MAX (f332)
0a6d: 1a                         ; OVER
0a6e: 1a                         ; OVER
0a6f: 15                         ; LT
0a70: 09 76 0a 00 00             ; JMPZ 0a76
0a75: 04                         ; SWAP
0a76: 05                         ; DROP
0a77: 0c                         ; RET
;
0a78: 18 25 f3 00 00             ; DICTP .S (f325)
0a7d: 0e 20                      ; CLITERAL 32
0a7f: 19                         ; EMIT
0a80: 26                         ; DEPTH
0a81: 0e 00                      ; CLITERAL 0
0a83: 15                         ; LT
0a84: 09 a7 0a 00 00             ; JMPZ 0aa7
0a89: 07 10 53 74 61 63 6b 20 75 6e 64 65 72 66 6c 6f 77 21 00 ; SLITERAL (0a8a) [Stack underflow!]
0a9c: 0b 55 05 00 00             ; CALL COUNT (0555)
0aa1: 0b 5f 05 00 00             ; CALL TYPE (055f)
0aa6: fe                         ; RESET
0aa7: 26                         ; DEPTH
0aa8: 0e 00                      ; CLITERAL 0
0aaa: 16                         ; EQ
0aab: 09 ba 0a 00 00             ; JMPZ 0aba
0ab0: 0e 28                      ; CLITERAL 40
0ab2: 19                         ; EMIT
0ab3: 0e ed                      ; CLITERAL 237
0ab5: 19                         ; EMIT
0ab6: 0e 29                      ; CLITERAL 41
0ab8: 19                         ; EMIT
0ab9: 0c                         ; RET
0aba: 0e 28                      ; CLITERAL 40
0abc: 19                         ; EMIT
0abd: 0b fc 08 00 00             ; CALL SPACE (08fc)
0ac2: 26                         ; DEPTH
0ac3: 2e                         ; DEC
0ac4: 21                         ; DTOR
0ac5: 22                         ; RTOD
0ac6: 06                         ; DUP
0ac7: 21                         ; DTOR
0ac8: 25                         ; PICK
0ac9: 0b e5 09 00 00             ; CALL . (09e5)
0ace: 22                         ; RTOD
0acf: 06                         ; DUP
0ad0: 21                         ; DTOR
0ad1: 09 de 0a 00 00             ; JMPZ 0ade
0ad6: 22                         ; RTOD
0ad7: 2e                         ; DEC
0ad8: 21                         ; DTOR
0ad9: 08 e4 0a 00 00             ; JMP 0ae4
0ade: 22                         ; RTOD
0adf: 05                         ; DROP
0ae0: 0e 29                      ; CLITERAL 41
0ae2: 19                         ; EMIT
0ae3: 0c                         ; RET
0ae4: 08 c5 0a 00 00             ; JMP 0ac5
0ae9: 0c                         ; RET
;
0aea: 18 11 f3 00 00             ; DICTP .(MEM_SZ) (f311)
0aef: 07 08 4d 65 6d 6f 72 79 3a 20 00 ; SLITERAL (0af0) [Memory: ]
0afa: 0b 7f 05 00 00             ; CALL CT (057f)
0aff: 0b 24 04 00 00             ; CALL MEM_SZ (0424)
0b04: 06                         ; DUP
0b05: 0b f5 09 00 00             ; CALL HEX. (09f5)
0b0a: 07 02 20 28 00             ; SLITERAL (0b0b) [ (]
0b0f: 0b 7f 05 00 00             ; CALL CT (057f)
0b14: 0b cb 09 00 00             ; CALL (.) (09cb)
0b19: 07 01 29 00                ; SLITERAL (0b1a) [)]
0b1d: 0b 7f 05 00 00             ; CALL CT (057f)
0b22: 0c                         ; RET
;
0b23: 18 ff f2 00 00             ; DICTP .(HERE) (f2ff)
0b28: 07 06 48 45 52 45 3a 20 00 ; SLITERAL (0b29) [HERE: ]
0b31: 0b 7f 05 00 00             ; CALL CT (057f)
0b36: 0b 82 00 00 00             ; CALL HERE (0082)
0b3b: 06                         ; DUP
0b3c: 0b f5 09 00 00             ; CALL HEX. (09f5)
0b41: 07 02 20 28 00             ; SLITERAL (0b42) [ (]
0b46: 0b 7f 05 00 00             ; CALL CT (057f)
0b4b: 0b cb 09 00 00             ; CALL (.) (09cb)
0b50: 07 01 29 00                ; SLITERAL (0b51) [)]
0b54: 0b 7f 05 00 00             ; CALL CT (057f)
0b59: 0c                         ; RET
;
0b5a: 18 ed f2 00 00             ; DICTP .(LAST) (f2ed)
0b5f: 07 06 4c 41 53 54 3a 20 00 ; SLITERAL (0b60) [LAST: ]
0b68: 0b 7f 05 00 00             ; CALL CT (057f)
0b6d: 0b 8e 00 00 00             ; CALL LAST (008e)
0b72: 06                         ; DUP
0b73: 0b f5 09 00 00             ; CALL HEX. (09f5)
0b78: 07 02 20 28 00             ; SLITERAL (0b79) [ (]
0b7d: 0b 7f 05 00 00             ; CALL CT (057f)
0b82: 0b cb 09 00 00             ; CALL (.) (09cb)
0b87: 07 01 29 00                ; SLITERAL (0b88) [)]
0b8b: 0b 7f 05 00 00             ; CALL CT (057f)
0b90: 0c                         ; RET
;
0b91: 18 d7 f2 00 00             ; DICTP .WORD-SHORT (f2d7)
0b96: 06                         ; DUP
0b97: 0b 0f 07 00 00             ; CALL DICT>NAME (070f)
0b9c: 0b 7f 05 00 00             ; CALL CT (057f)
0ba1: 0e 20                      ; CLITERAL 32
0ba3: 19                         ; EMIT
0ba4: 02                         ; FETCH
0ba5: 0c                         ; RET
;
0ba6: 18 c7 f2 00 00             ; DICTP WORDS (f2c7)
0bab: 0b 8e 00 00 00             ; CALL LAST (008e)
0bb0: 06                         ; DUP
0bb1: 02                         ; FETCH
0bb2: 0e 00                      ; CLITERAL 0
0bb4: 16                         ; EQ
0bb5: 09 c2 0b 00 00             ; JMPZ 0bc2
0bba: 05                         ; DROP
0bbb: 0e 0d                      ; CLITERAL 13
0bbd: 19                         ; EMIT
0bbe: 0e 0a                      ; CLITERAL 10
0bc0: 19                         ; EMIT
0bc1: 0c                         ; RET
0bc2: 0b 91 0b 00 00             ; CALL .WORD-SHORT (0b91)
0bc7: 08 b0 0b 00 00             ; JMP 0bb0
0bcc: 0c                         ; RET
;
0bcd: 18 b2 f2 00 00             ; DICTP .WORD-LONG (f2b2)
0bd2: 06                         ; DUP
0bd3: 0b f5 09 00 00             ; CALL HEX. (09f5)
0bd8: 0e 3a                      ; CLITERAL 58
0bda: 19                         ; EMIT
0bdb: 0e 20                      ; CLITERAL 32
0bdd: 19                         ; EMIT
0bde: 06                         ; DUP
0bdf: 0b 0f 07 00 00             ; CALL DICT>NAME (070f)
0be4: 0b 7f 05 00 00             ; CALL CT (057f)
0be9: 0e 20                      ; CLITERAL 32
0beb: 19                         ; EMIT
0bec: 06                         ; DUP
0bed: 0b 4c 07 00 00             ; CALL DICT.GetXT (074c)
0bf2: 0e 28                      ; CLITERAL 40
0bf4: 19                         ; EMIT
0bf5: 0b f5 09 00 00             ; CALL HEX. (09f5)
0bfa: 0e 29                      ; CLITERAL 41
0bfc: 19                         ; EMIT
0bfd: 06                         ; DUP
0bfe: 0b 00 07 00 00             ; CALL DICT>FLAGS (0700)
0c03: 0f                         ; CFETCH
0c04: 06                         ; DUP
0c05: 07 09 2c 20 46 6c 61 67 73 3a 20 00 ; SLITERAL (0c06) [, Flags: ]
0c11: 0b 7f 05 00 00             ; CALL CT (057f)
0c16: 0b f5 09 00 00             ; CALL HEX. (09f5)
0c1b: 06                         ; DUP
0c1c: 0b 93 07 00 00             ; CALL FLAGS.ISINLINE? (0793)
0c21: 09 37 0c 00 00             ; JMPZ 0c37
0c26: 07 09 20 28 49 4e 4c 49 4e 45 29 00 ; SLITERAL (0c27) [ (INLINE)]
0c32: 0b 7f 05 00 00             ; CALL CT (057f)
0c37: 0b 8a 07 00 00             ; CALL FLAGS.ISIMMEDIATE? (078a)
0c3c: 09 55 0c 00 00             ; JMPZ 0c55
0c41: 07 0c 20 28 49 4d 4d 45 44 49 41 54 45 29 00 ; SLITERAL (0c42) [ (IMMEDIATE)]
0c50: 0b 7f 05 00 00             ; CALL CT (057f)
0c55: 0e 0d                      ; CLITERAL 13
0c57: 19                         ; EMIT
0c58: 0e 0a                      ; CLITERAL 10
0c5a: 19                         ; EMIT
0c5b: 02                         ; FETCH
0c5c: 0c                         ; RET
;
0c5d: 18 a1 f2 00 00             ; DICTP WORDSV (f2a1)
0c62: 0b 5a 0b 00 00             ; CALL .(LAST) (0b5a)
0c67: 0e 0d                      ; CLITERAL 13
0c69: 19                         ; EMIT
0c6a: 0e 0a                      ; CLITERAL 10
0c6c: 19                         ; EMIT
0c6d: 0b 8e 00 00 00             ; CALL LAST (008e)
0c72: 06                         ; DUP
0c73: 02                         ; FETCH
0c74: 0e 00                      ; CLITERAL 0
0c76: 16                         ; EQ
0c77: 09 84 0c 00 00             ; JMPZ 0c84
0c7c: 05                         ; DROP
0c7d: 0e 0d                      ; CLITERAL 13
0c7f: 19                         ; EMIT
0c80: 0e 0a                      ; CLITERAL 10
0c82: 19                         ; EMIT
0c83: 0c                         ; RET
0c84: 0b cd 0b 00 00             ; CALL .WORD-LONG (0bcd)
0c89: 08 72 0c 00 00             ; JMP 0c72
0c8e: 0c                         ; RET
;
0c8f: 18 8d f2 00 00             ; DICTP NUM-WORDS (f28d)
0c94: 0e 00                      ; CLITERAL 0
0c96: 21                         ; DTOR
0c97: 0b 8e 00 00 00             ; CALL LAST (008e)
0c9c: 06                         ; DUP
0c9d: 02                         ; FETCH
0c9e: 0e 00                      ; CLITERAL 0
0ca0: 16                         ; EQ
0ca1: 09 af 0c 00 00             ; JMPZ 0caf
0ca6: 05                         ; DROP
0ca7: 22                         ; RTOD
0ca8: 0e 0d                      ; CLITERAL 13
0caa: 19                         ; EMIT
0cab: 0e 0a                      ; CLITERAL 10
0cad: 19                         ; EMIT
0cae: 0c                         ; RET
0caf: 22                         ; RTOD
0cb0: 2c                         ; INC
0cb1: 21                         ; DTOR
0cb2: 02                         ; FETCH
0cb3: 08 9c 0c 00 00             ; JMP 0c9c
0cb8: 0c                         ; RET
;
0cb9: 18 7c f2 00 00             ; DICTP .lastx (f27c)
0cbe: 0e 0d                      ; CLITERAL 13
0cc0: 19                         ; EMIT
0cc1: 0e 0a                      ; CLITERAL 10
0cc3: 19                         ; EMIT
0cc4: 0b 8e 00 00 00             ; CALL LAST (008e)
0cc9: 04                         ; SWAP
0cca: 0e 00                      ; CLITERAL 0
0ccc: 1a                         ; OVER
0ccd: 1a                         ; OVER
0cce: 17                         ; GT
0ccf: 09 e7 0c 00 00             ; JMPZ 0ce7
0cd4: 21                         ; DTOR
0cd5: 04                         ; SWAP
0cd6: 22                         ; RTOD
0cd7: 04                         ; SWAP
0cd8: 0b cd 0b 00 00             ; CALL .WORD-LONG (0bcd)
0cdd: 04                         ; SWAP
0cde: 21                         ; DTOR
0cdf: 04                         ; SWAP
0ce0: 22                         ; RTOD
0ce1: 2c                         ; INC
0ce2: 08 eb 0c 00 00             ; JMP 0ceb
0ce7: 05                         ; DROP
0ce8: 05                         ; DROP
0ce9: 05                         ; DROP
0cea: 0c                         ; RET
0ceb: 08 cc 0c 00 00             ; JMP 0ccc
0cf0: 0c                         ; RET
;
0cf1: 18 6a f2 00 00             ; DICTP EXECUTE (f26a)
0cf6: 22                         ; RTOD
0cf7: 05                         ; DROP
0cf8: 21                         ; DTOR
0cf9: 0c                         ; RET
;
0cfa: 18 57 f2 00 00             ; DICTP find.ret (f257)
0cff: 06                         ; DUP
0d00: 0f                         ; CFETCH
0d01: 0e 0c                      ; CLITERAL 12
0d03: 16                         ; EQ
0d04: 09 0a 0d 00 00             ; JMPZ 0d0a
0d09: 0c                         ; RET
0d0a: 2c                         ; INC
0d0b: 08 ff 0c 00 00             ; JMP 0cff
0d10: 0c                         ; RET
;
0d11: 18 44 f2 00 00             ; DICTP (inline) (f244)
0d16: 1a                         ; OVER
0d17: 1a                         ; OVER
0d18: 15                         ; LT
0d19: 09 1f 0d 00 00             ; JMPZ 0d1f
0d1e: 04                         ; SWAP
0d1f: 06                         ; DUP
0d20: 0f                         ; CFETCH
0d21: 0b 9a 00 00 00             ; CALL C, (009a)
0d26: 2c                         ; INC
0d27: 1a                         ; OVER
0d28: 1a                         ; OVER
0d29: 17                         ; GT
0d2a: 0a 1f 0d 00 00             ; JMPNZ 0d1f
0d2f: 05                         ; DROP
0d30: 05                         ; DROP
0d31: 0c                         ; RET
;
0d32: 18 34 f2 00 00             ; DICTP DOES> (f234)
0d37: 22                         ; RTOD
0d38: 06                         ; DUP
0d39: 0b fa 0c 00 00             ; CALL find.ret (0cfa)
0d3e: 06                         ; DUP
0d3f: 21                         ; DTOR
0d40: 2c                         ; INC
0d41: 0b 11 0d 00 00             ; CALL (inline) (0d11)
0d46: 0c                         ; RET
;
0d47: 18 1e f2 00 00             ; DICTP Copy.INLINE (f21e)
0d4c: 06                         ; DUP
0d4d: 0f                         ; CFETCH
0d4e: 0e 18                      ; CLITERAL 24
0d50: 16                         ; EQ
0d51: 09 5d 0d 00 00             ; JMPZ 0d5d
0d56: 2c                         ; INC
0d57: 0b 40 00 00 00             ; CALL CELL (0040)
0d5c: 11                         ; ADD
0d5d: 06                         ; DUP
0d5e: 0b fa 0c 00 00             ; CALL find.ret (0cfa)
0d63: 0b 11 0d 00 00             ; CALL (inline) (0d11)
0d68: 0c                         ; RET
;
0d69: 18 0d f2 00 00             ; DICTP strlen (f20d)
0d6e: 0e 00                      ; CLITERAL 0
0d70: 04                         ; SWAP
0d71: 04                         ; SWAP
0d72: 1a                         ; OVER
0d73: 0f                         ; CFETCH
0d74: 06                         ; DUP
0d75: 09 80 0d 00 00             ; JMPZ 0d80
0d7a: 05                         ; DROP
0d7b: 2c                         ; INC
0d7c: 04                         ; SWAP
0d7d: 2c                         ; INC
0d7e: 0e 01                      ; CLITERAL 1
0d80: 0a 71 0d 00 00             ; JMPNZ 0d71
0d85: 04                         ; SWAP
0d86: 05                         ; DROP
0d87: 0c                         ; RET
;
0d88: 18 fd f1 00 00             ; DICTP cstr, (f1fd)
0d8d: 06                         ; DUP
0d8e: 0f                         ; CFETCH
0d8f: 1a                         ; OVER
0d90: 11                         ; ADD
0d91: 2c                         ; INC
0d92: 2c                         ; INC
0d93: 0b 11 0d 00 00             ; CALL (inline) (0d11)
0d98: 0c                         ; RET
;
0d99: 18 e9 f1 00 00             ; DICTP [COMPILE] (f1e9)
0d9e: 0b 93 07 00 00             ; CALL FLAGS.ISINLINE? (0793)
0da3: 09 b2 0d 00 00             ; JMPZ 0db2
0da8: 0b 47 0d 00 00             ; CALL Copy.INLINE (0d47)
0dad: 08 bc 0d 00 00             ; JMP 0dbc
0db2: 0b 4f 01 00 00             ; CALL CALL (014f)
0db7: 0b b2 00 00 00             ; CALL , (00b2)
0dbc: 0c                         ; RET
;
0dbd: 18 d3 f1 00 00             ; DICTP executeWord (f1d3)
0dc2: 21                         ; DTOR
0dc3: 22                         ; RTOD
0dc4: 06                         ; DUP
0dc5: 21                         ; DTOR
0dc6: 0b bc 07 00 00             ; CALL findInDict (07bc)
0dcb: 09 07 0e 00 00             ; JMPZ 0e07
0dd0: 22                         ; RTOD
0dd1: 05                         ; DROP
0dd2: 0b 1f 03 00 00             ; CALL ?COMPILING (031f)
0dd7: 09 fc 0d 00 00             ; JMPZ 0dfc
0ddc: 06                         ; DUP
0ddd: 0b 8a 07 00 00             ; CALL FLAGS.ISIMMEDIATE? (078a)
0de2: 09 f2 0d 00 00             ; JMPZ 0df2
0de7: 05                         ; DROP
0de8: 0b f1 0c 00 00             ; CALL EXECUTE (0cf1)
0ded: 08 f7 0d 00 00             ; JMP 0df7
0df2: 0b 99 0d 00 00             ; CALL [COMPILE] (0d99)
0df7: 08 02 0e 00 00             ; JMP 0e02
0dfc: 05                         ; DROP
0dfd: 0b f1 0c 00 00             ; CALL EXECUTE (0cf1)
0e02: 08 5d 0e 00 00             ; JMP 0e5d
0e07: 05                         ; DROP
0e08: 05                         ; DROP
0e09: 22                         ; RTOD
0e0a: 06                         ; DUP
0e0b: 21                         ; DTOR
0e0c: 0b 83 08 00 00             ; CALL isNumber? (0883)
0e11: 09 4f 0e 00 00             ; JMPZ 0e4f
0e16: 0b 1f 03 00 00             ; CALL ?COMPILING (031f)
0e1b: 09 4a 0e 00 00             ; JMPZ 0e4a
0e20: 06                         ; DUP
0e21: 0e 00                      ; CLITERAL 0
0e23: 0e ff                      ; CLITERAL 255
0e25: 0b 09 06 00 00             ; CALL BETWEEN (0609)
0e2a: 09 40 0e 00 00             ; JMPZ 0e40
0e2f: 0e 0e                      ; CLITERAL 14
0e31: 0b 9a 00 00 00             ; CALL C, (009a)
0e36: 0b 9a 00 00 00             ; CALL C, (009a)
0e3b: 08 4a 0e 00 00             ; JMP 0e4a
0e40: 0b eb 00 00 00             ; CALL LITERAL (00eb)
0e45: 0b b2 00 00 00             ; CALL , (00b2)
0e4a: 08 5b 0e 00 00             ; JMP 0e5b
0e4f: 05                         ; DROP
0e50: 07 02 3f 3f 00             ; SLITERAL (0e51) [??]
0e55: 0b 7f 05 00 00             ; CALL CT (057f)
0e5a: fe                         ; RESET
0e5b: 22                         ; RTOD
0e5c: 05                         ; DROP
0e5d: 0c                         ; RET
;
0e5e: 18 bc f1 00 00             ; DICTP executeInput (f1bc)
0e63: 0b 04 04 00 00             ; CALL >IN (0404)
0e68: 02                         ; FETCH
0e69: 0b 8d 06 00 00             ; CALL skipWS (068d)
0e6e: 0b 04 04 00 00             ; CALL >IN (0404)
0e73: 03                         ; STORE
0e74: 0b 04 04 00 00             ; CALL >IN (0404)
0e79: 02                         ; FETCH
0e7a: 0f                         ; CFETCH
0e7b: 09 9b 0e 00 00             ; JMPZ 0e9b
0e80: 0b 04 04 00 00             ; CALL >IN (0404)
0e85: 02                         ; FETCH
0e86: 0b b6 06 00 00             ; CALL getOneWord (06b6)
0e8b: 0b 04 04 00 00             ; CALL >IN (0404)
0e90: 03                         ; STORE
0e91: 0b bd 0d 00 00             ; CALL executeWord (0dbd)
0e96: 08 9c 0e 00 00             ; JMP 0e9c
0e9b: 0c                         ; RET
0e9c: 08 63 0e 00 00             ; JMP 0e63
0ea1: 0c                         ; RET
;
0ea2: 18 ae f1 00 00             ; DICTP Pad (f1ae)
0ea7: 0b 8e 00 00 00             ; CALL LAST (008e)
0eac: 0e c8                      ; CLITERAL 200
0eae: 12                         ; SUB
0eaf: 06                         ; DUP
0eb0: 0b 82 00 00 00             ; CALL HERE (0082)
0eb5: 15                         ; LT
0eb6: 09 cd 0e 00 00             ; JMPZ 0ecd
0ebb: 07 0e 4f 75 74 20 6f 66 20 4d 65 6d 6f 72 79 21 00 ; SLITERAL (0ebc) [Out of Memory!]
0ecc: fe                         ; RESET
0ecd: 0c                         ; RET
;
0ece: 18 93 f1 00 00             ; DICTP LoadingFromFile? (f193)
0ed3: 0b 6c 00 00 00             ; CALL INPUT-FP (006c)
0ed8: 02                         ; FETCH
0ed9: 0c                         ; RET
;
0eda: 18 79 f1 00 00             ; DICTP getLineFromFile (f179)
0edf: 0e c8                      ; CLITERAL 200
0ee1: 0b 6c 00 00 00             ; CALL INPUT-FP (006c)
0ee6: 02                         ; FETCH
0ee7: 1e                         ; FREADLINE
0ee8: 0e 00                      ; CLITERAL 0
0eea: 16                         ; EQ
0eeb: 09 fa 0e 00 00             ; JMPZ 0efa
0ef0: 0b 6c 00 00 00             ; CALL INPUT-FP (006c)
0ef5: 0b 15 03 00 00             ; CALL OFF (0315)
0efa: 0c                         ; RET
;
0efb: 18 67 f1 00 00             ; DICTP getLine (f167)
0f00: 0e 00                      ; CLITERAL 0
0f02: 0b a2 0e 00 00             ; CALL Pad (0ea2)
0f07: 06                         ; DUP
0f08: 2c                         ; INC
0f09: 0b 04 04 00 00             ; CALL >IN (0404)
0f0e: 03                         ; STORE
0f0f: 10                         ; CSTORE
0f10: 0b ce 0e 00 00             ; CALL LoadingFromFile? (0ece)
0f15: 09 25 0f 00 00             ; JMPZ 0f25
0f1a: 0b a2 0e 00 00             ; CALL Pad (0ea2)
0f1f: 0b da 0e 00 00             ; CALL getLineFromFile (0eda)
0f24: 0c                         ; RET
0f25: 0e 00                      ; CLITERAL 0
0f27: 0b 04 04 00 00             ; CALL >IN (0404)
0f2c: 02                         ; FETCH
0f2d: 10                         ; CSTORE
0f2e: 27                         ; GETCH
0f2f: 06                         ; DUP
0f30: 0e 0d                      ; CLITERAL 13
0f32: 16                         ; EQ
0f33: 09 42 0f 00 00             ; JMPZ 0f42
0f38: 05                         ; DROP
0f39: 0b a2 0e 00 00             ; CALL Pad (0ea2)
0f3e: 0e 20                      ; CLITERAL 32
0f40: 19                         ; EMIT
0f41: 0c                         ; RET
0f42: 06                         ; DUP
0f43: 0e 09                      ; CLITERAL 9
0f45: 16                         ; EQ
0f46: 09 4e 0f 00 00             ; JMPZ 0f4e
0f4b: 05                         ; DROP
0f4c: 0e 20                      ; CLITERAL 32
0f4e: 06                         ; DUP
0f4f: 0e 03                      ; CLITERAL 3
0f51: 16                         ; EQ
0f52: 09 58 0f 00 00             ; JMPZ 0f58
0f57: ff                         ; BYE
0f58: 06                         ; DUP
0f59: 0e 08                      ; CLITERAL 8
0f5b: 16                         ; EQ
0f5c: 09 94 0f 00 00             ; JMPZ 0f94
0f61: 0b a2 0e 00 00             ; CALL Pad (0ea2)
0f66: 0f                         ; CFETCH
0f67: 0e 00                      ; CLITERAL 0
0f69: 17                         ; GT
0f6a: 09 8e 0f 00 00             ; JMPZ 0f8e
0f6f: 0b a2 0e 00 00             ; CALL Pad (0ea2)
0f74: 0b f2 04 00 00             ; CALL C-- (04f2)
0f79: 0b 04 04 00 00             ; CALL >IN (0404)
0f7e: 0b da 04 00 00             ; CALL -- (04da)
0f83: 06                         ; DUP
0f84: 19                         ; EMIT
0f85: 0e 20                      ; CLITERAL 32
0f87: 19                         ; EMIT
0f88: 19                         ; EMIT
0f89: 08 8f 0f 00 00             ; JMP 0f8f
0f8e: 05                         ; DROP
0f8f: 08 c6 0f 00 00             ; JMP 0fc6
0f94: 06                         ; DUP
0f95: 0e 20                      ; CLITERAL 32
0f97: 0e 7f                      ; CLITERAL 127
0f99: 0b 09 06 00 00             ; CALL BETWEEN (0609)
0f9e: 09 c5 0f 00 00             ; JMPZ 0fc5
0fa3: 06                         ; DUP
0fa4: 19                         ; EMIT
0fa5: 0b 04 04 00 00             ; CALL >IN (0404)
0faa: 02                         ; FETCH
0fab: 10                         ; CSTORE
0fac: 0b 04 04 00 00             ; CALL >IN (0404)
0fb1: 0b cd 04 00 00             ; CALL ++ (04cd)
0fb6: 0b a2 0e 00 00             ; CALL Pad (0ea2)
0fbb: 0b e7 04 00 00             ; CALL C++ (04e7)
0fc0: 08 c6 0f 00 00             ; JMP 0fc6
0fc5: 05                         ; DROP
0fc6: 08 25 0f 00 00             ; JMP 0f25
0fcb: 0c                         ; RET
;
0fcc: 18 54 f1 00 00             ; DICTP strcpy2c (f154)
0fd1: 06                         ; DUP
0fd2: 21                         ; DTOR
0fd3: 0e 00                      ; CLITERAL 0
0fd5: 1a                         ; OVER
0fd6: 10                         ; CSTORE
0fd7: 2c                         ; INC
0fd8: 04                         ; SWAP
0fd9: 06                         ; DUP
0fda: 0f                         ; CFETCH
0fdb: 06                         ; DUP
0fdc: 09 f6 0f 00 00             ; JMPZ 0ff6
0fe1: 0e 02                      ; CLITERAL 2
0fe3: 25                         ; PICK
0fe4: 10                         ; CSTORE
0fe5: 04                         ; SWAP
0fe6: 2c                         ; INC
0fe7: 04                         ; SWAP
0fe8: 2c                         ; INC
0fe9: 22                         ; RTOD
0fea: 06                         ; DUP
0feb: 21                         ; DTOR
0fec: 0b e7 04 00 00             ; CALL C++ (04e7)
0ff1: 08 ff 0f 00 00             ; JMP 0fff
0ff6: 21                         ; DTOR
0ff7: 04                         ; SWAP
0ff8: 22                         ; RTOD
0ff9: 04                         ; SWAP
0ffa: 10                         ; CSTORE
0ffb: 05                         ; DROP
0ffc: 22                         ; RTOD
0ffd: 05                         ; DROP
0ffe: 0c                         ; RET
0fff: 08 d9 0f 00 00             ; JMP 0fd9
1004: 0c                         ; RET
;
1005: 18 3e f1 00 00             ; DICTP Define-Word (f13e)
100a: 0b 8e 00 00 00             ; CALL LAST (008e)
100f: 1a                         ; OVER
1010: 0b 69 0d 00 00             ; CALL strlen (0d69)
1015: 0e 02                      ; CLITERAL 2
1017: 0b 40 00 00 00             ; CALL CELL (0040)
101c: 13                         ; MUL
101d: 0e 03                      ; CLITERAL 3
101f: 11                         ; ADD
1020: 11                         ; ADD
1021: 12                         ; SUB
1022: 06                         ; DUP
1023: 21                         ; DTOR
1024: 21                         ; DTOR
1025: 0b 8e 00 00 00             ; CALL LAST (008e)
102a: 22                         ; RTOD
102b: 06                         ; DUP
102c: 21                         ; DTOR
102d: 03                         ; STORE
102e: 22                         ; RTOD
102f: 0b 40 00 00 00             ; CALL CELL (0040)
1034: 11                         ; ADD
1035: 21                         ; DTOR
1036: 0b 82 00 00 00             ; CALL HERE (0082)
103b: 22                         ; RTOD
103c: 06                         ; DUP
103d: 21                         ; DTOR
103e: 03                         ; STORE
103f: 22                         ; RTOD
1040: 0b 40 00 00 00             ; CALL CELL (0040)
1045: 11                         ; ADD
1046: 21                         ; DTOR
1047: 0e 00                      ; CLITERAL 0
1049: 22                         ; RTOD
104a: 06                         ; DUP
104b: 21                         ; DTOR
104c: 10                         ; CSTORE
104d: 22                         ; RTOD
104e: 2c                         ; INC
104f: 21                         ; DTOR
1050: 22                         ; RTOD
1051: 0b cc 0f 00 00             ; CALL strcpy2c (0fcc)
1056: 22                         ; RTOD
1057: 0b 61 00 00 00             ; CALL (LAST) (0061)
105c: 03                         ; STORE
105d: 0c                         ; RET
;
105e: 18 28 f1 00 00             ; DICTP CREATE-NAME (f128)
1063: 0b 04 04 00 00             ; CALL >IN (0404)
1068: 02                         ; FETCH
1069: 0b 8d 06 00 00             ; CALL skipWS (068d)
106e: 0b 04 04 00 00             ; CALL >IN (0404)
1073: 03                         ; STORE
1074: 0b 04 04 00 00             ; CALL >IN (0404)
1079: 02                         ; FETCH
107a: 0f                         ; CFETCH
107b: 09 b5 10 00 00             ; JMPZ 10b5
1080: 0b 04 04 00 00             ; CALL >IN (0404)
1085: 02                         ; FETCH
1086: 0b b6 06 00 00             ; CALL getOneWord (06b6)
108b: 0b 04 04 00 00             ; CALL >IN (0404)
1090: 03                         ; STORE
1091: 06                         ; DUP
1092: 0f                         ; CFETCH
1093: 09 b3 10 00 00             ; JMPZ 10b3
1098: 0b 05 10 00 00             ; CALL Define-Word (1005)
109d: 0e 18                      ; CLITERAL 24
109f: 0b 9a 00 00 00             ; CALL C, (009a)
10a4: 0b 8e 00 00 00             ; CALL LAST (008e)
10a9: 0b b2 00 00 00             ; CALL , (00b2)
10ae: 08 b5 10 00 00             ; JMP 10b5
10b3: 05                         ; DROP
10b4: fe                         ; RESET
10b5: 0c                         ; RET
;
10b6: 18 1c f1 00 00             ; DICTP : (f11c)
10bb: 0b 5e 10 00 00             ; CALL CREATE-NAME (105e)
10c0: 0b 77 00 00 00             ; CALL STATE (0077)
10c5: 0b 0b 03 00 00             ; CALL ON (030b)
10ca: 0c                         ; RET
;
10cb: 18 0a f1 00 00             ; DICTP :NONAME (f10a)
10d0: 0b 82 00 00 00             ; CALL HERE (0082)
10d5: 0b 77 00 00 00             ; CALL STATE (0077)
10da: 0b 0b 03 00 00             ; CALL ON (030b)
10df: 0c                         ; RET
;
10e0: 18 fe f0 00 00             ; DICTP ; (f0fe)
10e5: 0b 5c 01 00 00             ; CALL RET (015c)
10ea: 0b 77 00 00 00             ; CALL STATE (0077)
10ef: 0b 15 03 00 00             ; CALL OFF (0315)
10f4: 0c                         ; RET
;
10f5: 18 e9 f0 00 00             ; DICTP ForgetLast (f0e9)
10fa: 0b 8e 00 00 00             ; CALL LAST (008e)
10ff: 0b 40 00 00 00             ; CALL CELL (0040)
1104: 11                         ; ADD
1105: 02                         ; FETCH
1106: 0b 56 00 00 00             ; CALL (HERE) (0056)
110b: 03                         ; STORE
110c: 0b 8e 00 00 00             ; CALL LAST (008e)
1111: 02                         ; FETCH
1112: 0b 61 00 00 00             ; CALL (LAST) (0061)
1117: 03                         ; STORE
1118: 0c                         ; RET
;
1119: 18 d4 f0 00 00             ; DICTP resetState (f0d4)
111e: 0b 1f 03 00 00             ; CALL ?COMPILING (031f)
1123: 09 2d 11 00 00             ; JMPZ 112d
1128: 0b f5 10 00 00             ; CALL ForgetLast (10f5)
112d: 0b 77 00 00 00             ; CALL STATE (0077)
1132: 0b 15 03 00 00             ; CALL OFF (0315)
1137: 0b e1 02 00 00             ; CALL DECIMAL (02e1)
113c: 0c                         ; RET
;
113d: 18 c4 f0 00 00             ; DICTP ALLOT (f0c4)
1142: 0b 82 00 00 00             ; CALL HERE (0082)
1147: 11                         ; ADD
1148: 0b 56 00 00 00             ; CALL (HERE) (0056)
114d: 03                         ; STORE
114e: 0c                         ; RET
;
114f: 18 b8 f0 00 00             ; DICTP ? (f0b8)
1154: 02                         ; FETCH
1155: 0b e5 09 00 00             ; CALL . (09e5)
115a: 0c                         ; RET
;
115b: 18 ab f0 00 00             ; DICTP C? (f0ab)
1160: 0f                         ; CFETCH
1161: 0b e5 09 00 00             ; CALL . (09e5)
1166: 0c                         ; RET
;
1167: 18 9c f0 00 00             ; DICTP FREE (f09c)
116c: 0b 8e 00 00 00             ; CALL LAST (008e)
1171: 0b 82 00 00 00             ; CALL HERE (0082)
1176: 12                         ; SUB
1177: 0c                         ; RET
;
1178: 18 8c f0 00 00             ; DICTP .FREE (f08c)
117d: 0b 67 11 00 00             ; CALL FREE (1167)
1182: 0b cb 09 00 00             ; CALL (.) (09cb)
1187: 07 0c 20 62 79 74 65 73 20 66 72 65 65 2e 00 ; SLITERAL (1188) [ bytes free.]
1196: 0b 7f 05 00 00             ; CALL CT (057f)
119b: 0c                         ; RET
;
119c: 18 79 f0 00 00             ; DICTP mainLoop (f079)
11a1: 0b 19 11 00 00             ; CALL resetState (1119)
11a6: 0b 31 06 00 00             ; CALL tmp-init (0631)
11ab: 0b 1f 03 00 00             ; CALL ?COMPILING (031f)
11b0: 0e 00                      ; CLITERAL 0
11b2: 16                         ; EQ
11b3: 09 c8 11 00 00             ; JMPZ 11c8
11b8: 07 03 20 4f 4b 00          ; SLITERAL (11b9) [ OK]
11be: 0b 7f 05 00 00             ; CALL CT (057f)
11c3: 0b 78 0a 00 00             ; CALL .S (0a78)
11c8: 0e 0d                      ; CLITERAL 13
11ca: 19                         ; EMIT
11cb: 0e 0a                      ; CLITERAL 10
11cd: 19                         ; EMIT
11ce: 0b fb 0e 00 00             ; CALL getLine (0efb)
11d3: 2c                         ; INC
11d4: 0b 04 04 00 00             ; CALL >IN (0404)
11d9: 03                         ; STORE
11da: 0b 5e 0e 00 00             ; CALL executeInput (0e5e)
11df: 0e 20                      ; CLITERAL 32
11e1: 19                         ; EMIT
11e2: 08 a6 11 00 00             ; JMP 11a6
11e7: 0c                         ; RET
;
11e8: 18 6a f0 00 00             ; DICTP main (f06a)
11ed: 0b 77 00 00 00             ; CALL STATE (0077)
11f2: 02                         ; FETCH
11f3: 0e 63                      ; CLITERAL 99
11f5: 16                         ; EQ
11f6: 09 13 12 00 00             ; JMPZ 1213
11fb: 0b 77 00 00 00             ; CALL STATE (0077)
1200: 0b 15 03 00 00             ; CALL OFF (0315)
1205: 07 06 48 65 6c 6c 6f 2e 00 ; SLITERAL (1206) [Hello.]
120e: 0b 7f 05 00 00             ; CALL CT (057f)
1213: 0b 9c 11 00 00             ; CALL mainLoop (119c)
1218: 0c                         ; RET
;
1219: 18 53 f0 00 00             ; DICTP file-getLine (f053)
121e: 0b a2 0e 00 00             ; CALL Pad (0ea2)
1223: 04                         ; SWAP
1224: 0e c8                      ; CLITERAL 200
1226: 04                         ; SWAP
1227: 1e                         ; FREADLINE
1228: 0b a2 0e 00 00             ; CALL Pad (0ea2)
122d: 04                         ; SWAP
122e: 0c                         ; RET
;
122f: 18 44 f0 00 00             ; DICTP load (f044)
1234: 0e 00                      ; CLITERAL 0
1236: 0e 00                      ; CLITERAL 0
1238: 1c                         ; FOPEN
1239: 0e 00                      ; CLITERAL 0
123b: 16                         ; EQ
123c: 09 5b 12 00 00             ; JMPZ 125b
1241: 07 11 43 61 6e 6e 6f 74 20 6f 70 65 6e 20 66 69 6c 65 2e 00 ; SLITERAL (1242) [Cannot open file.]
1255: 0b 7f 05 00 00             ; CALL CT (057f)
125a: 0c                         ; RET
125b: 0b 6c 00 00 00             ; CALL INPUT-FP (006c)
1260: 03                         ; STORE
1261: 0b 6c 00 00 00             ; CALL INPUT-FP (006c)
1266: 02                         ; FETCH
1267: 0b 19 12 00 00             ; CALL file-getLine (1219)
126c: 09 82 12 00 00             ; JMPZ 1282
1271: 2c                         ; INC
1272: 0b 04 04 00 00             ; CALL >IN (0404)
1277: 03                         ; STORE
1278: 0b 5e 0e 00 00             ; CALL executeInput (0e5e)
127d: 08 95 12 00 00             ; JMP 1295
1282: 05                         ; DROP
1283: 0b 6c 00 00 00             ; CALL INPUT-FP (006c)
1288: 02                         ; FETCH
1289: 20                         ; FCLOSE
128a: 0b 6c 00 00 00             ; CALL INPUT-FP (006c)
128f: 0b 15 03 00 00             ; CALL OFF (0315)
1294: 0c                         ; RET
1295: 08 61 12 00 00             ; JMP 1261
129a: 0c                         ; RET
;
129b: 18 30 f0 00 00             ; DICTP STR.EMPTY (f030)
12a0: 0e 00                      ; CLITERAL 0
12a2: 1a                         ; OVER
12a3: 03                         ; STORE
12a4: 0c                         ; RET
;
12a5: 18 1e f0 00 00             ; DICTP STR.LEN (f01e)
12aa: 06                         ; DUP
12ab: 0f                         ; CFETCH
12ac: 0c                         ; RET
;
12ad: 18 0b f0 00 00             ; DICTP STR.CATC (f00b)
12b2: 1a                         ; OVER
12b3: 06                         ; DUP
12b4: 0b e7 04 00 00             ; CALL C++ (04e7)
12b9: 06                         ; DUP
12ba: 0f                         ; CFETCH
12bb: 11                         ; ADD
12bc: 0e 00                      ; CLITERAL 0
12be: 1a                         ; OVER
12bf: 2c                         ; INC
12c0: 10                         ; CSTORE
12c1: 10                         ; CSTORE
12c2: 0c                         ; RET
;
12c3: 18 f4 ef 00 00             ; DICTP STR.NULLTERM (eff4)
12c8: 06                         ; DUP
12c9: 06                         ; DUP
12ca: 0f                         ; CFETCH
12cb: 11                         ; ADD
12cc: 2c                         ; INC
12cd: 0e 00                      ; CLITERAL 0
12cf: 04                         ; SWAP
12d0: 10                         ; CSTORE
12d1: 0c                         ; RET
;
12d2: 18 e7 ef 00 00             ; DICTP I" (efe7)
12d7: 0b 82 00 00 00             ; CALL HERE (0082)
12dc: 0e 64                      ; CLITERAL 100
12de: 11                         ; ADD
12df: 0e 00                      ; CLITERAL 0
12e1: 1a                         ; OVER
12e2: 03                         ; STORE
12e3: 0b 04 04 00 00             ; CALL >IN (0404)
12e8: 02                         ; FETCH
12e9: 0f                         ; CFETCH
12ea: 06                         ; DUP
12eb: 0e 00                      ; CLITERAL 0
12ed: 16                         ; EQ
12ee: 09 0f 13 00 00             ; JMPZ 130f
12f3: 07 10 6d 69 73 73 69 6e 67 20 63 6c 6f 73 69 6e 67 20 00 ; SLITERAL (12f4) [missing closing ]
1306: 0b 7f 05 00 00             ; CALL CT (057f)
130b: 0e 22                      ; CLITERAL 34
130d: 19                         ; EMIT
130e: fe                         ; RESET
130f: 0b 04 04 00 00             ; CALL >IN (0404)
1314: 0b cd 04 00 00             ; CALL ++ (04cd)
1319: 06                         ; DUP
131a: 0e 22                      ; CLITERAL 34
131c: 16                         ; EQ
131d: 09 24 13 00 00             ; JMPZ 1324
1322: 05                         ; DROP
1323: 0c                         ; RET
1324: 0b ad 12 00 00             ; CALL STR.CATC (12ad)
1329: 08 e3 12 00 00             ; JMP 12e3
132e: 0c                         ; RET
;
132f: 18 db ef 00 00             ; DICTP " (efdb)
1334: 0b 1f 03 00 00             ; CALL ?COMPILING (031f)
1339: 0e 00                      ; CLITERAL 0
133b: 16                         ; EQ
133c: 09 47 13 00 00             ; JMPZ 1347
1341: 0b d2 12 00 00             ; CALL I" (12d2)
1346: 0c                         ; RET
1347: 0b 1b 01 00 00             ; CALL SLITERAL (011b)
134c: 0b 82 00 00 00             ; CALL HERE (0082)
1351: 0e 00                      ; CLITERAL 0
1353: 0b 9a 00 00 00             ; CALL C, (009a)
1358: 0b 04 04 00 00             ; CALL >IN (0404)
135d: 02                         ; FETCH
135e: 0f                         ; CFETCH
135f: 06                         ; DUP
1360: 0e 00                      ; CLITERAL 0
1362: 16                         ; EQ
1363: 09 90 13 00 00             ; JMPZ 1390
1368: 05                         ; DROP
1369: 2e                         ; DEC
136a: 0b 56 00 00 00             ; CALL (HERE) (0056)
136f: 03                         ; STORE
1370: 07 11 6d 69 73 73 69 6e 67 20 63 6c 6f 73 69 6e 67 20 27 00 ; SLITERAL (1371) [missing closing ']
1384: 0b 7f 05 00 00             ; CALL CT (057f)
1389: 0e 22                      ; CLITERAL 34
138b: 19                         ; EMIT
138c: 0e 27                      ; CLITERAL 39
138e: 19                         ; EMIT
138f: fe                         ; RESET
1390: 0b 04 04 00 00             ; CALL >IN (0404)
1395: 0b cd 04 00 00             ; CALL ++ (04cd)
139a: 06                         ; DUP
139b: 0e 22                      ; CLITERAL 34
139d: 16                         ; EQ
139e: 09 b6 13 00 00             ; JMPZ 13b6
13a3: 05                         ; DROP
13a4: 0b 82 00 00 00             ; CALL HERE (0082)
13a9: 0e 00                      ; CLITERAL 0
13ab: 0b 9a 00 00 00             ; CALL C, (009a)
13b0: 1a                         ; OVER
13b1: 12                         ; SUB
13b2: 2e                         ; DEC
13b3: 04                         ; SWAP
13b4: 10                         ; CSTORE
13b5: 0c                         ; RET
13b6: 0b 9a 00 00 00             ; CALL C, (009a)
13bb: 08 58 13 00 00             ; JMP 1358
13c0: 0c                         ; RET
;
13c1: 18 ce ef 00 00             ; DICTP ll (efce)
13c6: 07 09 6c 6f 61 64 73 2e 34 74 68 00 ; SLITERAL (13c7) [loads.4th]
13d2: 0b 2f 12 00 00             ; CALL load (122f)
13d7: 0c                         ; RET
;
13d8: 18 bb ef 00 00             ; DICTP sys-info (efbb)
13dd: 0b ea 0a 00 00             ; CALL .(MEM_SZ) (0aea)
13e2: 0e 2c                      ; CLITERAL 44
13e4: 19                         ; EMIT
13e5: 0e 20                      ; CLITERAL 32
13e7: 19                         ; EMIT
13e8: 0b 23 0b 00 00             ; CALL .(HERE) (0b23)
13ed: 0e 2c                      ; CLITERAL 44
13ef: 19                         ; EMIT
13f0: 0e 20                      ; CLITERAL 32
13f2: 19                         ; EMIT
13f3: 0b 5a 0b 00 00             ; CALL .(LAST) (0b5a)
13f8: 0e 2c                      ; CLITERAL 44
13fa: 19                         ; EMIT
13fb: 0e 20                      ; CLITERAL 32
13fd: 19                         ; EMIT
13fe: 0b 78 11 00 00             ; CALL .FREE (1178)
1403: 0e 0d                      ; CLITERAL 13
1405: 19                         ; EMIT
1406: 0e 0a                      ; CLITERAL 10
1408: 19                         ; EMIT
1409: 0c                         ; RET
;
140a: 18 a9 ef 00 00             ; DICTP countTo (efa9)
140f: 07 0c 63 6f 75 6e 74 69 6e 67 20 74 6f 20 00 ; SLITERAL (1410) [counting to ]
141e: 0b 7f 05 00 00             ; CALL CT (057f)
1423: 06                         ; DUP
1424: 0b e5 09 00 00             ; CALL . (09e5)
1429: 07 04 2e 2e 2e 20 00       ; SLITERAL (142a) [... ]
1430: 0b 7f 05 00 00             ; CALL CT (057f)
1435: 0e 01                      ; CLITERAL 1
1437: 1a                         ; OVER
1438: 1a                         ; OVER
1439: 15                         ; LT
143a: 09 42 14 00 00             ; JMPZ 1442
143f: 05                         ; DROP
1440: 05                         ; DROP
1441: 0c                         ; RET
1442: 2c                         ; INC
1443: 08 37 14 00 00             ; JMP 1437
1448: 0c                         ; RET
;
1449: 18 92 ef 00 00             ; DICTP countTo-FAST (ef92)
144e: 07 0c 63 6f 75 6e 74 69 6e 67 20 74 6f 20 00 ; SLITERAL (144f) [counting to ]
145d: 0b 7f 05 00 00             ; CALL CT (057f)
1462: 06                         ; DUP
1463: 0b e5 09 00 00             ; CALL . (09e5)
1468: 07 04 2e 2e 2e 20 00       ; SLITERAL (1469) [... ]
146f: 0b 7f 05 00 00             ; CALL CT (057f)
1474: 2e                         ; DEC
1475: 06                         ; DUP
1476: 0a 74 14 00 00             ; JMPNZ 1474
147b: 05                         ; DROP
147c: 0c                         ; RET
;
; End of code, Dictionary:
;
ef92: a9 ef 00 00                ; countTo-FAST - (next: efa9 countTo)
ef96: 49 14 00 00 00             ; XT=1449, flags=00
ef9b: 0c 63 6f 75 6e 74 54 6f 2d 46 41 53 54 00 ; 12, countTo-FAST
;
efa9: bb ef 00 00                ; countTo - (next: efbb sys-info)
efad: 0a 14 00 00 00             ; XT=140a, flags=00
efb2: 07 63 6f 75 6e 74 54 6f 00 ; 7, countTo
;
efbb: ce ef 00 00                ; sys-info - (next: efce ll)
efbf: d8 13 00 00 00             ; XT=13d8, flags=00
efc4: 08 73 79 73 2d 69 6e 66 6f 00 ; 8, sys-info
;
efce: db ef 00 00                ; ll - (next: efdb ")
efd2: c1 13 00 00 00             ; XT=13c1, flags=00
efd7: 02 6c 6c 00                ; 2, ll
;
efdb: e7 ef 00 00                ; " - (next: efe7 I")
efdf: 2f 13 00 00 01             ; XT=132f, flags=01
efe4: 01 22 00                   ; 1, "
;
efe7: f4 ef 00 00                ; I" - (next: eff4 STR.NULLTERM)
efeb: d2 12 00 00 00             ; XT=12d2, flags=00
eff0: 02 49 22 00                ; 2, I"
;
eff4: 0b f0 00 00                ; STR.NULLTERM - (next: f00b STR.CATC)
eff8: c3 12 00 00 00             ; XT=12c3, flags=00
effd: 0c 53 54 52 2e 4e 55 4c 4c 54 45 52 4d 00 ; 12, STR.NULLTERM
;
f00b: 1e f0 00 00                ; STR.CATC - (next: f01e STR.LEN)
f00f: ad 12 00 00 00             ; XT=12ad, flags=00
f014: 08 53 54 52 2e 43 41 54 43 00 ; 8, STR.CATC
;
f01e: 30 f0 00 00                ; STR.LEN - (next: f030 STR.EMPTY)
f022: a5 12 00 00 02             ; XT=12a5, flags=02
f027: 07 53 54 52 2e 4c 45 4e 00 ; 7, STR.LEN
;
f030: 44 f0 00 00                ; STR.EMPTY - (next: f044 load)
f034: 9b 12 00 00 02             ; XT=129b, flags=02
f039: 09 53 54 52 2e 45 4d 50 54 59 00 ; 9, STR.EMPTY
;
f044: 53 f0 00 00                ; load - (next: f053 file-getLine)
f048: 2f 12 00 00 00             ; XT=122f, flags=00
f04d: 04 6c 6f 61 64 00          ; 4, load
;
f053: 6a f0 00 00                ; file-getLine - (next: f06a main)
f057: 19 12 00 00 00             ; XT=1219, flags=00
f05c: 0c 66 69 6c 65 2d 67 65 74 4c 69 6e 65 00 ; 12, file-getLine
;
f06a: 79 f0 00 00                ; main - (next: f079 mainLoop)
f06e: e8 11 00 00 00             ; XT=11e8, flags=00
f073: 04 6d 61 69 6e 00          ; 4, main
;
f079: 8c f0 00 00                ; mainLoop - (next: f08c .FREE)
f07d: 9c 11 00 00 00             ; XT=119c, flags=00
f082: 08 6d 61 69 6e 4c 6f 6f 70 00 ; 8, mainLoop
;
f08c: 9c f0 00 00                ; .FREE - (next: f09c FREE)
f090: 78 11 00 00 00             ; XT=1178, flags=00
f095: 05 2e 46 52 45 45 00       ; 5, .FREE
;
f09c: ab f0 00 00                ; FREE - (next: f0ab C?)
f0a0: 67 11 00 00 00             ; XT=1167, flags=00
f0a5: 04 46 52 45 45 00          ; 4, FREE
;
f0ab: b8 f0 00 00                ; C? - (next: f0b8 ?)
f0af: 5b 11 00 00 00             ; XT=115b, flags=00
f0b4: 02 43 3f 00                ; 2, C?
;
f0b8: c4 f0 00 00                ; ? - (next: f0c4 ALLOT)
f0bc: 4f 11 00 00 00             ; XT=114f, flags=00
f0c1: 01 3f 00                   ; 1, ?
;
f0c4: d4 f0 00 00                ; ALLOT - (next: f0d4 resetState)
f0c8: 3d 11 00 00 00             ; XT=113d, flags=00
f0cd: 05 41 4c 4c 4f 54 00       ; 5, ALLOT
;
f0d4: e9 f0 00 00                ; resetState - (next: f0e9 ForgetLast)
f0d8: 19 11 00 00 00             ; XT=1119, flags=00
f0dd: 0a 72 65 73 65 74 53 74 61 74 65 00 ; 10, resetState
;
f0e9: fe f0 00 00                ; ForgetLast - (next: f0fe ;)
f0ed: f5 10 00 00 00             ; XT=10f5, flags=00
f0f2: 0a 46 6f 72 67 65 74 4c 61 73 74 00 ; 10, ForgetLast
;
f0fe: 0a f1 00 00                ; ; - (next: f10a :NONAME)
f102: e0 10 00 00 01             ; XT=10e0, flags=01
f107: 01 3b 00                   ; 1, ;
;
f10a: 1c f1 00 00                ; :NONAME - (next: f11c :)
f10e: cb 10 00 00 00             ; XT=10cb, flags=00
f113: 07 3a 4e 4f 4e 41 4d 45 00 ; 7, :NONAME
;
f11c: 28 f1 00 00                ; : - (next: f128 CREATE-NAME)
f120: b6 10 00 00 00             ; XT=10b6, flags=00
f125: 01 3a 00                   ; 1, :
;
f128: 3e f1 00 00                ; CREATE-NAME - (next: f13e Define-Word)
f12c: 5e 10 00 00 00             ; XT=105e, flags=00
f131: 0b 43 52 45 41 54 45 2d 4e 41 4d 45 00 ; 11, CREATE-NAME
;
f13e: 54 f1 00 00                ; Define-Word - (next: f154 strcpy2c)
f142: 05 10 00 00 00             ; XT=1005, flags=00
f147: 0b 44 65 66 69 6e 65 2d 57 6f 72 64 00 ; 11, Define-Word
;
f154: 67 f1 00 00                ; strcpy2c - (next: f167 getLine)
f158: cc 0f 00 00 00             ; XT=0fcc, flags=00
f15d: 08 73 74 72 63 70 79 32 63 00 ; 8, strcpy2c
;
f167: 79 f1 00 00                ; getLine - (next: f179 getLineFromFile)
f16b: fb 0e 00 00 00             ; XT=0efb, flags=00
f170: 07 67 65 74 4c 69 6e 65 00 ; 7, getLine
;
f179: 93 f1 00 00                ; getLineFromFile - (next: f193 LoadingFromFile?)
f17d: da 0e 00 00 00             ; XT=0eda, flags=00
f182: 0f 67 65 74 4c 69 6e 65 46 72 6f 6d 46 69 6c 65 00 ; 15, getLineFromFile
;
f193: ae f1 00 00                ; LoadingFromFile? - (next: f1ae Pad)
f197: ce 0e 00 00 00             ; XT=0ece, flags=00
f19c: 10 4c 6f 61 64 69 6e 67 46 72 6f 6d 46 69 6c 65 3f 00 ; 16, LoadingFromFile?
;
f1ae: bc f1 00 00                ; Pad - (next: f1bc executeInput)
f1b2: a2 0e 00 00 00             ; XT=0ea2, flags=00
f1b7: 03 50 61 64 00             ; 3, Pad
;
f1bc: d3 f1 00 00                ; executeInput - (next: f1d3 executeWord)
f1c0: 5e 0e 00 00 00             ; XT=0e5e, flags=00
f1c5: 0c 65 78 65 63 75 74 65 49 6e 70 75 74 00 ; 12, executeInput
;
f1d3: e9 f1 00 00                ; executeWord - (next: f1e9 [COMPILE])
f1d7: bd 0d 00 00 00             ; XT=0dbd, flags=00
f1dc: 0b 65 78 65 63 75 74 65 57 6f 72 64 00 ; 11, executeWord
;
f1e9: fd f1 00 00                ; [COMPILE] - (next: f1fd cstr,)
f1ed: 99 0d 00 00 00             ; XT=0d99, flags=00
f1f2: 09 5b 43 4f 4d 50 49 4c 45 5d 00 ; 9, [COMPILE]
;
f1fd: 0d f2 00 00                ; cstr, - (next: f20d strlen)
f201: 88 0d 00 00 00             ; XT=0d88, flags=00
f206: 05 63 73 74 72 2c 00       ; 5, cstr,
;
f20d: 1e f2 00 00                ; strlen - (next: f21e Copy.INLINE)
f211: 69 0d 00 00 00             ; XT=0d69, flags=00
f216: 06 73 74 72 6c 65 6e 00    ; 6, strlen
;
f21e: 34 f2 00 00                ; Copy.INLINE - (next: f234 DOES>)
f222: 47 0d 00 00 00             ; XT=0d47, flags=00
f227: 0b 43 6f 70 79 2e 49 4e 4c 49 4e 45 00 ; 11, Copy.INLINE
;
f234: 44 f2 00 00                ; DOES> - (next: f244 (inline))
f238: 32 0d 00 00 00             ; XT=0d32, flags=00
f23d: 05 44 4f 45 53 3e 00       ; 5, DOES>
;
f244: 57 f2 00 00                ; (inline) - (next: f257 find.ret)
f248: 11 0d 00 00 00             ; XT=0d11, flags=00
f24d: 08 28 69 6e 6c 69 6e 65 29 00 ; 8, (inline)
;
f257: 6a f2 00 00                ; find.ret - (next: f26a EXECUTE)
f25b: fa 0c 00 00 00             ; XT=0cfa, flags=00
f260: 08 66 69 6e 64 2e 72 65 74 00 ; 8, find.ret
;
f26a: 7c f2 00 00                ; EXECUTE - (next: f27c .lastx)
f26e: f1 0c 00 00 00             ; XT=0cf1, flags=00
f273: 07 45 58 45 43 55 54 45 00 ; 7, EXECUTE
;
f27c: 8d f2 00 00                ; .lastx - (next: f28d NUM-WORDS)
f280: b9 0c 00 00 00             ; XT=0cb9, flags=00
f285: 06 2e 6c 61 73 74 78 00    ; 6, .lastx
;
f28d: a1 f2 00 00                ; NUM-WORDS - (next: f2a1 WORDSV)
f291: 8f 0c 00 00 00             ; XT=0c8f, flags=00
f296: 09 4e 55 4d 2d 57 4f 52 44 53 00 ; 9, NUM-WORDS
;
f2a1: b2 f2 00 00                ; WORDSV - (next: f2b2 .WORD-LONG)
f2a5: 5d 0c 00 00 00             ; XT=0c5d, flags=00
f2aa: 06 57 4f 52 44 53 56 00    ; 6, WORDSV
;
f2b2: c7 f2 00 00                ; .WORD-LONG - (next: f2c7 WORDS)
f2b6: cd 0b 00 00 00             ; XT=0bcd, flags=00
f2bb: 0a 2e 57 4f 52 44 2d 4c 4f 4e 47 00 ; 10, .WORD-LONG
;
f2c7: d7 f2 00 00                ; WORDS - (next: f2d7 .WORD-SHORT)
f2cb: a6 0b 00 00 00             ; XT=0ba6, flags=00
f2d0: 05 57 4f 52 44 53 00       ; 5, WORDS
;
f2d7: ed f2 00 00                ; .WORD-SHORT - (next: f2ed .(LAST))
f2db: 91 0b 00 00 00             ; XT=0b91, flags=00
f2e0: 0b 2e 57 4f 52 44 2d 53 48 4f 52 54 00 ; 11, .WORD-SHORT
;
f2ed: ff f2 00 00                ; .(LAST) - (next: f2ff .(HERE))
f2f1: 5a 0b 00 00 00             ; XT=0b5a, flags=00
f2f6: 07 2e 28 4c 41 53 54 29 00 ; 7, .(LAST)
;
f2ff: 11 f3 00 00                ; .(HERE) - (next: f311 .(MEM_SZ))
f303: 23 0b 00 00 00             ; XT=0b23, flags=00
f308: 07 2e 28 48 45 52 45 29 00 ; 7, .(HERE)
;
f311: 25 f3 00 00                ; .(MEM_SZ) - (next: f325 .S)
f315: ea 0a 00 00 00             ; XT=0aea, flags=00
f31a: 09 2e 28 4d 45 4d 5f 53 5a 29 00 ; 9, .(MEM_SZ)
;
f325: 32 f3 00 00                ; .S - (next: f332 MAX)
f329: 78 0a 00 00 00             ; XT=0a78, flags=00
f32e: 02 2e 53 00                ; 2, .S
;
f332: 40 f3 00 00                ; MAX - (next: f340 MIN)
f336: 68 0a 00 00 00             ; XT=0a68, flags=00
f33b: 03 4d 41 58 00             ; 3, MAX
;
f340: 4e f3 00 00                ; MIN - (next: f34e BINARY.)
f344: 58 0a 00 00 00             ; XT=0a58, flags=00
f349: 03 4d 49 4e 00             ; 3, MIN
;
f34e: 60 f3 00 00                ; BINARY. - (next: f360 DECIMAL.)
f352: 3b 0a 00 00 00             ; XT=0a3b, flags=00
f357: 07 42 49 4e 41 52 59 2e 00 ; 7, BINARY.
;
f360: 73 f3 00 00                ; DECIMAL. - (next: f373 HEX.)
f364: 1e 0a 00 00 00             ; XT=0a1e, flags=00
f369: 08 44 45 43 49 4d 41 4c 2e 00 ; 8, DECIMAL.
;
f373: 82 f3 00 00                ; HEX. - (next: f382 .)
f377: f5 09 00 00 00             ; XT=09f5, flags=00
f37c: 04 48 45 58 2e 00          ; 4, HEX.
;
f382: 8e f3 00 00                ; . - (next: f38e (.))
f386: e5 09 00 00 00             ; XT=09e5, flags=00
f38b: 01 2e 00                   ; 1, .
;
f38e: 9c f3 00 00                ; (.) - (next: f39c #P)
f392: cb 09 00 00 00             ; XT=09cb, flags=00
f397: 03 28 2e 29 00             ; 3, (.)
;
f39c: a9 f3 00 00                ; #P - (next: f3a9 #P-)
f3a0: b5 09 00 00 00             ; XT=09b5, flags=00
f3a5: 02 23 50 00                ; 2, #P
;
f3a9: b7 f3 00 00                ; #P- - (next: f3b7 #>)
f3ad: a0 09 00 00 00             ; XT=09a0, flags=00
f3b2: 03 23 50 2d 00             ; 3, #P-
;
f3b7: c4 f3 00 00                ; #> - (next: f3c4 #S)
f3bb: 9a 09 00 00 00             ; XT=099a, flags=00
f3c0: 02 23 3e 00                ; 2, #>
;
f3c4: d1 f3 00 00                ; #S - (next: f3d1 #)
f3c8: 86 09 00 00 00             ; XT=0986, flags=00
f3cd: 02 23 53 00                ; 2, #S
;
f3d1: dd f3 00 00                ; # - (next: f3dd <#)
f3d5: 5a 09 00 00 00             ; XT=095a, flags=00
f3da: 01 23 00                   ; 1, #
;
f3dd: ea f3 00 00                ; <# - (next: f3ea #LEN)
f3e1: 25 09 00 00 00             ; XT=0925, flags=00
f3e6: 02 3c 23 00                ; 2, <#
;
f3ea: f9 f3 00 00                ; #LEN - (next: f3f9 #NEG)
f3ee: 15 09 00 00 00             ; XT=0915, flags=00
f3f3: 04 23 4c 45 4e 00          ; 4, #LEN
;
f3f9: 08 f4 00 00                ; #NEG - (next: f408 SPACE)
f3fd: 05 09 00 00 00             ; XT=0905, flags=00
f402: 04 23 4e 45 47 00          ; 4, #NEG
;
f408: 18 f4 00 00                ; SPACE - (next: f418 /MOD)
f40c: fc 08 00 00 00             ; XT=08fc, flags=00
f411: 05 53 50 41 43 45 00       ; 5, SPACE
;
f418: 27 f4 00 00                ; /MOD - (next: f427 MOD)
f41c: ee 08 00 00 00             ; XT=08ee, flags=00
f421: 04 2f 4d 4f 44 00          ; 4, /MOD
;
f427: 35 f4 00 00                ; MOD - (next: f435 isNumber?)
f42b: e3 08 00 00 00             ; XT=08e3, flags=00
f430: 03 4d 4f 44 00             ; 3, MOD
;
f435: 49 f4 00 00                ; isNumber? - (next: f449 ABS)
f439: 83 08 00 00 00             ; XT=0883, flags=00
f43e: 09 69 73 4e 75 6d 62 65 72 3f 00 ; 9, isNumber?
;
f449: 57 f4 00 00                ; ABS - (next: f457 NEGATE)
f44d: 6f 08 00 00 00             ; XT=086f, flags=00
f452: 03 41 42 53 00             ; 3, ABS
;
f457: 68 f4 00 00                ; NEGATE - (next: f468 isNumChar?)
f45b: 65 08 00 00 00             ; XT=0865, flags=00
f460: 06 4e 45 47 41 54 45 00    ; 6, NEGATE
;
f468: 7d f4 00 00                ; isNumChar? - (next: f47d isHEX?)
f46c: 14 08 00 00 00             ; XT=0814, flags=00
f471: 0a 69 73 4e 75 6d 43 68 61 72 3f 00 ; 10, isNumChar?
;
f47d: 8e f4 00 00                ; isHEX? - (next: f48e findInDict)
f481: 05 08 00 00 00             ; XT=0805, flags=00
f486: 06 69 73 48 45 58 3f 00    ; 6, isHEX?
;
f48e: a3 f4 00 00                ; findInDict - (next: f4a3 DICT.GetINLINE)
f492: bc 07 00 00 00             ; XT=07bc, flags=00
f497: 0a 66 69 6e 64 49 6e 44 69 63 74 00 ; 10, findInDict
;
f4a3: bc f4 00 00                ; DICT.GetINLINE - (next: f4bc DICT.GetIMMEDIATE)
f4a7: ac 07 00 00 00             ; XT=07ac, flags=00
f4ac: 0e 44 49 43 54 2e 47 65 74 49 4e 4c 49 4e 45 00 ; 14, DICT.GetINLINE
;
f4bc: d8 f4 00 00                ; DICT.GetIMMEDIATE - (next: f4d8 FLAGS.ISINLINE?)
f4c0: 9c 07 00 00 00             ; XT=079c, flags=00
f4c5: 11 44 49 43 54 2e 47 65 74 49 4d 4d 45 44 49 41 54 45 00 ; 17, DICT.GetIMMEDIATE
;
f4d8: f2 f4 00 00                ; FLAGS.ISINLINE? - (next: f4f2 FLAGS.ISIMMEDIATE?)
f4dc: 93 07 00 00 00             ; XT=0793, flags=00
f4e1: 0f 46 4c 41 47 53 2e 49 53 49 4e 4c 49 4e 45 3f 00 ; 15, FLAGS.ISINLINE?
;
f4f2: 0f f5 00 00                ; FLAGS.ISIMMEDIATE? - (next: f50f XT.GetDICTP)
f4f6: 8a 07 00 00 00             ; XT=078a, flags=00
f4fb: 12 46 4c 41 47 53 2e 49 53 49 4d 4d 45 44 49 41 54 45 3f 00 ; 18, FLAGS.ISIMMEDIATE?
;
f50f: 25 f5 00 00                ; XT.GetDICTP - (next: f525 DICTP>NAME)
f513: 71 07 00 00 00             ; XT=0771, flags=00
f518: 0b 58 54 2e 47 65 74 44 49 43 54 50 00 ; 11, XT.GetDICTP
;
f525: 3a f5 00 00                ; DICTP>NAME - (next: f53a DICT.GetFLAGS)
f529: 64 07 00 00 00             ; XT=0764, flags=00
f52e: 0a 44 49 43 54 50 3e 4e 41 4d 45 00 ; 10, DICTP>NAME
;
f53a: 52 f5 00 00                ; DICT.GetFLAGS - (next: f552 DICT.GetXT)
f53e: 58 07 00 00 00             ; XT=0758, flags=00
f543: 0d 44 49 43 54 2e 47 65 74 46 4c 41 47 53 00 ; 13, DICT.GetFLAGS
;
f552: 67 f5 00 00                ; DICT.GetXT - (next: f567 NAME>DICT)
f556: 4c 07 00 00 00             ; XT=074c, flags=00
f55b: 0a 44 49 43 54 2e 47 65 74 58 54 00 ; 10, DICT.GetXT
;
f567: 7b f5 00 00                ; NAME>DICT - (next: f57b FLAGS>DICT)
f56b: 3c 07 00 00 00             ; XT=073c, flags=00
f570: 09 4e 41 4d 45 3e 44 49 43 54 00 ; 9, NAME>DICT
;
f57b: 90 f5 00 00                ; FLAGS>DICT - (next: f590 XT>DICT)
f57f: 2d 07 00 00 00             ; XT=072d, flags=00
f584: 0a 46 4c 41 47 53 3e 44 49 43 54 00 ; 10, FLAGS>DICT
;
f590: a2 f5 00 00                ; XT>DICT - (next: f5a2 NEXT>DICT)
f594: 21 07 00 00 00             ; XT=0721, flags=00
f599: 07 58 54 3e 44 49 43 54 00 ; 7, XT>DICT
;
f5a2: b6 f5 00 00                ; NEXT>DICT - (next: f5b6 DICT>NAME)
f5a6: 1b 07 00 00 00             ; XT=071b, flags=00
f5ab: 09 4e 45 58 54 3e 44 49 43 54 00 ; 9, NEXT>DICT
;
f5b6: ca f5 00 00                ; DICT>NAME - (next: f5ca DICT>FLAGS)
f5ba: 0f 07 00 00 00             ; XT=070f, flags=00
f5bf: 09 44 49 43 54 3e 4e 41 4d 45 00 ; 9, DICT>NAME
;
f5ca: df f5 00 00                ; DICT>FLAGS - (next: f5df DICT>XT)
f5ce: 00 07 00 00 00             ; XT=0700, flags=00
f5d3: 0a 44 49 43 54 3e 46 4c 41 47 53 00 ; 10, DICT>FLAGS
;
f5df: f1 f5 00 00                ; DICT>XT - (next: f5f1 DICT>NEXT)
f5e3: f4 06 00 00 00             ; XT=06f4, flags=00
f5e8: 07 44 49 43 54 3e 58 54 00 ; 7, DICT>XT
;
f5f1: 05 f6 00 00                ; DICT>NEXT - (next: f605 getOneWord)
f5f5: ee 06 00 00 00             ; XT=06ee, flags=00
f5fa: 09 44 49 43 54 3e 4e 45 58 54 00 ; 9, DICT>NEXT
;
f605: 1a f6 00 00                ; getOneWord - (next: f61a skipWS)
f609: b6 06 00 00 00             ; XT=06b6, flags=00
f60e: 0a 67 65 74 4f 6e 65 57 6f 72 64 00 ; 10, getOneWord
;
f61a: 2b f6 00 00                ; skipWS - (next: f62b getInput)
f61e: 8d 06 00 00 00             ; XT=068d, flags=00
f623: 06 73 6b 69 70 57 53 00    ; 6, skipWS
;
f62b: 3e f6 00 00                ; getInput - (next: f63e PAD)
f62f: 77 06 00 00 00             ; XT=0677, flags=00
f634: 08 67 65 74 49 6e 70 75 74 00 ; 8, getInput
;
f63e: 4c f6 00 00                ; PAD - (next: f64c tmp-alloc)
f642: 65 06 00 00 00             ; XT=0665, flags=00
f647: 03 50 41 44 00             ; 3, PAD
;
f64c: 60 f6 00 00                ; tmp-alloc - (next: f660 tmp-cur)
f650: 4e 06 00 00 00             ; XT=064e, flags=00
f655: 09 74 6d 70 2d 61 6c 6c 6f 63 00 ; 9, tmp-alloc
;
f660: 72 f6 00 00                ; tmp-cur - (next: f672 tmp-init)
f664: 42 06 00 00 00             ; XT=0642, flags=00
f669: 07 74 6d 70 2d 63 75 72 00 ; 7, tmp-cur
;
f672: 85 f6 00 00                ; tmp-init - (next: f685 (tmp))
f676: 31 06 00 00 00             ; XT=0631, flags=00
f67b: 08 74 6d 70 2d 69 6e 69 74 00 ; 8, tmp-init
;
f685: 95 f6 00 00                ; (tmp) - (next: f695 BETWEEN)
f689: 21 06 00 00 00             ; XT=0621, flags=00
f68e: 05 28 74 6d 70 29 00       ; 5, (tmp)
;
f695: a7 f6 00 00                ; BETWEEN - (next: f6a7 CR)
f699: 09 06 00 00 00             ; XT=0609, flags=00
f69e: 07 42 45 54 57 45 45 4e 00 ; 7, BETWEEN
;
f6a7: b4 f6 00 00                ; CR - (next: f6b4 CRLF)
f6ab: fd 05 00 00 02             ; XT=05fd, flags=02
f6b0: 02 43 52 00                ; 2, CR
;
f6b4: c3 f6 00 00                ; CRLF - (next: f6c3 BL)
f6b8: f1 05 00 00 02             ; XT=05f1, flags=02
f6bd: 04 43 52 4c 46 00          ; 4, CRLF
;
f6c3: d0 f6 00 00                ; BL - (next: f6d0 ()
f6c7: e8 05 00 00 02             ; XT=05e8, flags=02
f6cc: 02 42 4c 00                ; 2, BL
;
f6d0: dc f6 00 00                ; ( - (next: f6dc \)
f6d4: 9e 05 00 00 01             ; XT=059e, flags=01
f6d9: 01 28 00                   ; 1, (
;
f6dc: e8 f6 00 00                ; \ - (next: f6e8 CT)
f6e0: 8f 05 00 00 01             ; XT=058f, flags=01
f6e5: 01 5c 00                   ; 1, \
;
f6e8: f5 f6 00 00                ; CT - (next: f6f5 TYPE)
f6ec: 7f 05 00 00 00             ; XT=057f, flags=00
f6f1: 02 43 54 00                ; 2, CT
;
f6f5: 04 f7 00 00                ; TYPE - (next: f704 COUNT)
f6f9: 5f 05 00 00 00             ; XT=055f, flags=00
f6fe: 04 54 59 50 45 00          ; 4, TYPE
;
f704: 14 f7 00 00                ; COUNT - (next: f714 NOT)
f708: 55 05 00 00 00             ; XT=0555, flags=00
f70d: 05 43 4f 55 4e 54 00       ; 5, COUNT
;
f714: 22 f7 00 00                ; NOT - (next: f722 FALSE)
f718: 4c 05 00 00 02             ; XT=054c, flags=02
f71d: 03 4e 4f 54 00             ; 3, NOT
;
f722: 32 f7 00 00                ; FALSE - (next: f732 TRUE)
f726: 44 05 00 00 02             ; XT=0544, flags=02
f72b: 05 46 41 4c 53 45 00       ; 5, FALSE
;
f732: 41 f7 00 00                ; TRUE - (next: f741 >=)
f736: 3c 05 00 00 02             ; XT=053c, flags=02
f73b: 04 54 52 55 45 00          ; 4, TRUE
;
f741: 4e f7 00 00                ; >= - (next: f74e <=)
f745: 32 05 00 00 02             ; XT=0532, flags=02
f74a: 02 3e 3d 00                ; 2, >=
;
f74e: 5b f7 00 00                ; <= - (next: f75b <>)
f752: 28 05 00 00 02             ; XT=0528, flags=02
f757: 02 3c 3d 00                ; 2, <=
;
f75b: 68 f7 00 00                ; <> - (next: f768 0=)
f75f: 1e 05 00 00 02             ; XT=051e, flags=02
f764: 02 3c 3e 00                ; 2, <>
;
f768: 75 f7 00 00                ; 0= - (next: f775 C+!)
f76c: 15 05 00 00 02             ; XT=0515, flags=02
f771: 02 30 3d 00                ; 2, 0=
;
f775: 83 f7 00 00                ; C+! - (next: f783 +!)
f779: 09 05 00 00 00             ; XT=0509, flags=00
f77e: 03 43 2b 21 00             ; 3, C+!
;
f783: 90 f7 00 00                ; +! - (next: f790 C--)
f787: fd 04 00 00 00             ; XT=04fd, flags=00
f78c: 02 2b 21 00                ; 2, +!
;
f790: 9e f7 00 00                ; C-- - (next: f79e C++)
f794: f2 04 00 00 00             ; XT=04f2, flags=00
f799: 03 43 2d 2d 00             ; 3, C--
;
f79e: ac f7 00 00                ; C++ - (next: f7ac --)
f7a2: e7 04 00 00 00             ; XT=04e7, flags=00
f7a7: 03 43 2b 2b 00             ; 3, C++
;
f7ac: b9 f7 00 00                ; -- - (next: f7b9 ++)
f7b0: da 04 00 00 00             ; XT=04da, flags=00
f7b5: 02 2d 2d 00                ; 2, --
;
f7b9: c6 f7 00 00                ; ++ - (next: f7c6 -=)
f7bd: cd 04 00 00 00             ; XT=04cd, flags=00
f7c2: 02 2b 2b 00                ; 2, ++
;
f7c6: d3 f7 00 00                ; -= - (next: f7d3 +=)
f7ca: c1 04 00 00 00             ; XT=04c1, flags=00
f7cf: 02 2d 3d 00                ; 2, -=
;
f7d3: e0 f7 00 00                ; += - (next: f7e0 2/)
f7d7: b6 04 00 00 00             ; XT=04b6, flags=00
f7dc: 02 2b 3d 00                ; 2, +=
;
f7e0: ed f7 00 00                ; 2/ - (next: f7ed 2*)
f7e4: ad 04 00 00 02             ; XT=04ad, flags=02
f7e9: 02 32 2f 00                ; 2, 2/
;
f7ed: fa f7 00 00                ; 2* - (next: f7fa 1-)
f7f1: a4 04 00 00 02             ; XT=04a4, flags=02
f7f6: 02 32 2a 00                ; 2, 2*
;
f7fa: 07 f8 00 00                ; 1- - (next: f807 1+)
f7fe: 9d 04 00 00 02             ; XT=049d, flags=02
f803: 02 31 2d 00                ; 2, 1-
;
f807: 14 f8 00 00                ; 1+ - (next: f814 -ROT)
f80b: 96 04 00 00 02             ; XT=0496, flags=02
f810: 02 31 2b 00                ; 2, 1+
;
f814: 23 f8 00 00                ; -ROT - (next: f823 ROT)
f818: 8c 04 00 00 02             ; XT=048c, flags=02
f81d: 04 2d 52 4f 54 00          ; 4, -ROT
;
f823: 31 f8 00 00                ; ROT - (next: f831 NIP)
f827: 82 04 00 00 02             ; XT=0482, flags=02
f82c: 03 52 4f 54 00             ; 3, ROT
;
f831: 3f f8 00 00                ; NIP - (next: f83f TUCK)
f835: 7a 04 00 00 02             ; XT=047a, flags=02
f83a: 03 4e 49 50 00             ; 3, NIP
;
f83f: 4e f8 00 00                ; TUCK - (next: f84e 2DROP)
f843: 72 04 00 00 02             ; XT=0472, flags=02
f848: 04 54 55 43 4b 00          ; 4, TUCK
;
f84e: 5e f8 00 00                ; 2DROP - (next: f85e 2DUP)
f852: 6a 04 00 00 02             ; XT=046a, flags=02
f857: 05 32 44 52 4f 50 00       ; 5, 2DROP
;
f85e: 6d f8 00 00                ; 2DUP - (next: f86d RDROP)
f862: 62 04 00 00 02             ; XT=0462, flags=02
f867: 04 32 44 55 50 00          ; 4, 2DUP
;
f86d: 7d f8 00 00                ; RDROP - (next: f87d R@)
f871: 5a 04 00 00 02             ; XT=045a, flags=02
f876: 05 52 44 52 4f 50 00       ; 5, RDROP
;
f87d: 8a f8 00 00                ; R@ - (next: f88a DEBUG-OFF)
f881: 51 04 00 00 02             ; XT=0451, flags=02
f886: 02 52 40 00                ; 2, R@
;
f88a: 9e f8 00 00                ; DEBUG-OFF - (next: f89e DEBUG-ON)
f88e: 48 04 00 00 02             ; XT=0448, flags=02
f893: 09 44 45 42 55 47 2d 4f 46 46 00 ; 9, DEBUG-OFF
;
f89e: b1 f8 00 00                ; DEBUG-ON - (next: f8b1 TRACE-OFF)
f8a2: 3f 04 00 00 02             ; XT=043f, flags=02
f8a7: 08 44 45 42 55 47 2d 4f 4e 00 ; 8, DEBUG-ON
;
f8b1: c5 f8 00 00                ; TRACE-OFF - (next: f8c5 TRACE-ON)
f8b5: 36 04 00 00 02             ; XT=0436, flags=02
f8ba: 09 54 52 41 43 45 2d 4f 46 46 00 ; 9, TRACE-OFF
;
f8c5: d8 f8 00 00                ; TRACE-ON - (next: f8d8 MEM_SZ)
f8c9: 2d 04 00 00 02             ; XT=042d, flags=02
f8ce: 08 54 52 41 43 45 2d 4f 4e 00 ; 8, TRACE-ON
;
f8d8: e9 f8 00 00                ; MEM_SZ - (next: f8e9 isNeg)
f8dc: 24 04 00 00 00             ; XT=0424, flags=00
f8e1: 06 4d 45 4d 5f 53 5a 00    ; 6, MEM_SZ
;
f8e9: f9 f8 00 00                ; isNeg - (next: f8f9 >IN)
f8ed: 14 04 00 00 00             ; XT=0414, flags=00
f8f2: 05 69 73 4e 65 67 00       ; 5, isNeg
;
f8f9: 07 f9 00 00                ; >IN - (next: f907 LEAVE)
f8fd: 04 04 00 00 00             ; XT=0404, flags=00
f902: 03 3e 49 4e 00             ; 3, >IN
;
f907: 17 f9 00 00                ; LEAVE - (next: f917 UNTIL)
f90b: ef 03 00 00 01             ; XT=03ef, flags=01
f910: 05 4c 45 41 56 45 00       ; 5, LEAVE
;
f917: 27 f9 00 00                ; UNTIL - (next: f927 WHILE)
f91b: d5 03 00 00 01             ; XT=03d5, flags=01
f920: 05 55 4e 54 49 4c 00       ; 5, UNTIL
;
f927: 37 f9 00 00                ; WHILE - (next: f937 AGAIN)
f92b: bb 03 00 00 01             ; XT=03bb, flags=01
f930: 05 57 48 49 4c 45 00       ; 5, WHILE
;
f937: 47 f9 00 00                ; AGAIN - (next: f947 BEGIN)
f93b: a1 03 00 00 01             ; XT=03a1, flags=01
f940: 05 41 47 41 49 4e 00       ; 5, AGAIN
;
f947: 57 f9 00 00                ; BEGIN - (next: f957 THEN)
f94b: 8c 03 00 00 01             ; XT=038c, flags=01
f950: 05 42 45 47 49 4e 00       ; 5, BEGIN
;
f957: 66 f9 00 00                ; THEN - (next: f966 ELSE)
f95b: 75 03 00 00 01             ; XT=0375, flags=01
f960: 04 54 48 45 4e 00          ; 4, THEN
;
f966: 75 f9 00 00                ; ELSE - (next: f975 IF)
f96a: 4c 03 00 00 01             ; XT=034c, flags=01
f96f: 04 45 4c 53 45 00          ; 4, ELSE
;
f975: 82 f9 00 00                ; IF - (next: f982 ?COMPILING)
f979: 2b 03 00 00 01             ; XT=032b, flags=01
f97e: 02 49 46 00                ; 2, IF
;
f982: 97 f9 00 00                ; ?COMPILING - (next: f997 OFF)
f986: 1f 03 00 00 00             ; XT=031f, flags=00
f98b: 0a 3f 43 4f 4d 50 49 4c 49 4e 47 00 ; 10, ?COMPILING
;
f997: a5 f9 00 00                ; OFF - (next: f9a5 ON)
f99b: 15 03 00 00 00             ; XT=0315, flags=00
f9a0: 03 4f 46 46 00             ; 3, OFF
;
f9a5: b2 f9 00 00                ; ON - (next: f9b2 BINARY)
f9a9: 0b 03 00 00 00             ; XT=030b, flags=00
f9ae: 02 4f 4e 00                ; 2, ON
;
f9b2: c3 f9 00 00                ; BINARY - (next: f9c3 OCTAL)
f9b6: fd 02 00 00 00             ; XT=02fd, flags=00
f9bb: 06 42 49 4e 41 52 59 00    ; 6, BINARY
;
f9c3: d3 f9 00 00                ; OCTAL - (next: f9d3 DECIMAL)
f9c7: ef 02 00 00 00             ; XT=02ef, flags=00
f9cc: 05 4f 43 54 41 4c 00       ; 5, OCTAL
;
f9d3: e5 f9 00 00                ; DECIMAL - (next: f9e5 HEX)
f9d7: e1 02 00 00 00             ; XT=02e1, flags=00
f9dc: 07 44 45 43 49 4d 41 4c 00 ; 7, DECIMAL
;
f9e5: f3 f9 00 00                ; HEX - (next: f9f3 FLAG_INLINE)
f9e9: d3 02 00 00 00             ; XT=02d3, flags=00
f9ee: 03 48 45 58 00             ; 3, HEX
;
f9f3: 09 fa 00 00                ; FLAG_INLINE - (next: fa09 FLAG_IMMEDIATE)
f9f7: cb 02 00 00 02             ; XT=02cb, flags=02
f9fc: 0b 46 4c 41 47 5f 49 4e 4c 49 4e 45 00 ; 11, FLAG_INLINE
;
fa09: 22 fa 00 00                ; FLAG_IMMEDIATE - (next: fa22 CELLS)
fa0d: c3 02 00 00 02             ; XT=02c3, flags=02
fa12: 0e 46 4c 41 47 5f 49 4d 4d 45 44 49 41 54 45 00 ; 14, FLAG_IMMEDIATE
;
fa22: 32 fa 00 00                ; CELLS - (next: fa32 IMMEDIATE)
fa26: b7 02 00 00 02             ; XT=02b7, flags=02
fa2b: 05 43 45 4c 4c 53 00       ; 5, CELLS
;
fa32: 46 fa 00 00                ; IMMEDIATE - (next: fa46 INLINE)
fa36: 9b 02 00 00 00             ; XT=029b, flags=00
fa3b: 09 49 4d 4d 45 44 49 41 54 45 00 ; 9, IMMEDIATE
;
fa46: 57 fa 00 00                ; INLINE - (next: fa57 BYE)
fa4a: 7f 02 00 00 00             ; XT=027f, flags=00
fa4f: 06 49 4e 4c 49 4e 45 00    ; 6, INLINE
;
fa57: 65 fa 00 00                ; BYE - (next: fa65 RESET)
fa5b: 78 02 00 00 02             ; XT=0278, flags=02
fa60: 03 42 59 45 00             ; 3, BYE
;
fa65: 75 fa 00 00                ; RESET - (next: fa75 BREAK)
fa69: 71 02 00 00 02             ; XT=0271, flags=02
fa6e: 05 52 45 53 45 54 00       ; 5, RESET
;
fa75: 85 fa 00 00                ; BREAK - (next: fa85 GETTICK)
fa79: 6a 02 00 00 02             ; XT=026a, flags=02
fa7e: 05 42 52 45 41 4b 00       ; 5, BREAK
;
fa85: 97 fa 00 00                ; GETTICK - (next: fa97 DEC)
fa89: 63 02 00 00 02             ; XT=0263, flags=02
fa8e: 07 47 45 54 54 49 43 4b 00 ; 7, GETTICK
;
fa97: a5 fa 00 00                ; DEC - (next: faa5 RDEPTH)
fa9b: 5c 02 00 00 02             ; XT=025c, flags=02
faa0: 03 44 45 43 00             ; 3, DEC
;
faa5: b6 fa 00 00                ; RDEPTH - (next: fab6 INC)
faa9: 55 02 00 00 02             ; XT=0255, flags=02
faae: 06 52 44 45 50 54 48 00    ; 6, RDEPTH
;
fab6: c4 fa 00 00                ; INC - (next: fac4 USPOP)
faba: 4e 02 00 00 02             ; XT=024e, flags=02
fabf: 03 49 4e 43 00             ; 3, INC
;
fac4: d4 fa 00 00                ; USPOP - (next: fad4 USPUSH)
fac8: 47 02 00 00 02             ; XT=0247, flags=02
facd: 05 55 53 50 4f 50 00       ; 5, USPOP
;
fad4: e5 fa 00 00                ; USPUSH - (next: fae5 USINIT)
fad8: 40 02 00 00 02             ; XT=0240, flags=02
fadd: 06 55 53 50 55 53 48 00    ; 6, USPUSH
;
fae5: f6 fa 00 00                ; USINIT - (next: faf6 COMPAREI)
fae9: 39 02 00 00 02             ; XT=0239, flags=02
faee: 06 55 53 49 4e 49 54 00    ; 6, USINIT
;
faf6: 09 fb 00 00                ; COMPAREI - (next: fb09 GETCH)
fafa: 32 02 00 00 02             ; XT=0232, flags=02
faff: 08 43 4f 4d 50 41 52 45 49 00 ; 8, COMPAREI
;
fb09: 19 fb 00 00                ; GETCH - (next: fb19 DEPTH)
fb0d: 2b 02 00 00 02             ; XT=022b, flags=02
fb12: 05 47 45 54 43 48 00       ; 5, GETCH
;
fb19: 29 fb 00 00                ; DEPTH - (next: fb29 PICK)
fb1d: 24 02 00 00 02             ; XT=0224, flags=02
fb22: 05 44 45 50 54 48 00       ; 5, DEPTH
;
fb29: 38 fb 00 00                ; PICK - (next: fb38 AND)
fb2d: 1d 02 00 00 02             ; XT=021d, flags=02
fb32: 04 50 49 43 4b 00          ; 4, PICK
;
fb38: 46 fb 00 00                ; AND - (next: fb46 LOGLEVEL)
fb3c: 16 02 00 00 02             ; XT=0216, flags=02
fb41: 03 41 4e 44 00             ; 3, AND
;
fb46: 59 fb 00 00                ; LOGLEVEL - (next: fb59 R>)
fb4a: 0f 02 00 00 02             ; XT=020f, flags=02
fb4f: 08 4c 4f 47 4c 45 56 45 4c 00 ; 8, LOGLEVEL
;
fb59: 66 fb 00 00                ; R> - (next: fb66 >R)
fb5d: 08 02 00 00 02             ; XT=0208, flags=02
fb62: 02 52 3e 00                ; 2, R>
;
fb66: 73 fb 00 00                ; >R - (next: fb73 FCLOSE)
fb6a: 01 02 00 00 02             ; XT=0201, flags=02
fb6f: 02 3e 52 00                ; 2, >R
;
fb73: 84 fb 00 00                ; FCLOSE - (next: fb84 FWRITE)
fb77: fa 01 00 00 02             ; XT=01fa, flags=02
fb7c: 06 46 43 4c 4f 53 45 00    ; 6, FCLOSE
;
fb84: 95 fb 00 00                ; FWRITE - (next: fb95 FREADLINE)
fb88: f3 01 00 00 02             ; XT=01f3, flags=02
fb8d: 06 46 57 52 49 54 45 00    ; 6, FWRITE
;
fb95: a9 fb 00 00                ; FREADLINE - (next: fba9 FREAD)
fb99: ec 01 00 00 02             ; XT=01ec, flags=02
fb9e: 09 46 52 45 41 44 4c 49 4e 45 00 ; 9, FREADLINE
;
fba9: b9 fb 00 00                ; FREAD - (next: fbb9 FOPEN)
fbad: e5 01 00 00 02             ; XT=01e5, flags=02
fbb2: 05 46 52 45 41 44 00       ; 5, FREAD
;
fbb9: c9 fb 00 00                ; FOPEN - (next: fbc9 COMPARE)
fbbd: de 01 00 00 02             ; XT=01de, flags=02
fbc2: 05 46 4f 50 45 4e 00       ; 5, FOPEN
;
fbc9: db fb 00 00                ; COMPARE - (next: fbdb OVER)
fbcd: d7 01 00 00 02             ; XT=01d7, flags=02
fbd2: 07 43 4f 4d 50 41 52 45 00 ; 7, COMPARE
;
fbdb: ea fb 00 00                ; OVER - (next: fbea EMIT)
fbdf: d0 01 00 00 02             ; XT=01d0, flags=02
fbe4: 04 4f 56 45 52 00          ; 4, OVER
;
fbea: f9 fb 00 00                ; EMIT - (next: fbf9 DICTP)
fbee: c9 01 00 00 02             ; XT=01c9, flags=02
fbf3: 04 45 4d 49 54 00          ; 4, EMIT
;
fbf9: 09 fc 00 00                ; DICTP - (next: fc09 >)
fbfd: bc 01 00 00 02             ; XT=01bc, flags=02
fc02: 05 44 49 43 54 50 00       ; 5, DICTP
;
fc09: 15 fc 00 00                ; > - (next: fc15 =)
fc0d: b5 01 00 00 02             ; XT=01b5, flags=02
fc12: 01 3e 00                   ; 1, >
;
fc15: 21 fc 00 00                ; = - (next: fc21 <)
fc19: ae 01 00 00 02             ; XT=01ae, flags=02
fc1e: 01 3d 00                   ; 1, =
;
fc21: 2d fc 00 00                ; < - (next: fc2d /)
fc25: a7 01 00 00 02             ; XT=01a7, flags=02
fc2a: 01 3c 00                   ; 1, <
;
fc2d: 39 fc 00 00                ; / - (next: fc39 *)
fc31: a0 01 00 00 02             ; XT=01a0, flags=02
fc36: 01 2f 00                   ; 1, /
;
fc39: 45 fc 00 00                ; * - (next: fc45 -)
fc3d: 99 01 00 00 02             ; XT=0199, flags=02
fc42: 01 2a 00                   ; 1, *
;
fc45: 51 fc 00 00                ; - - (next: fc51 +)
fc49: 92 01 00 00 02             ; XT=0192, flags=02
fc4e: 01 2d 00                   ; 1, -
;
fc51: 5d fc 00 00                ; + - (next: fc5d C!)
fc55: 8b 01 00 00 02             ; XT=018b, flags=02
fc5a: 01 2b 00                   ; 1, +
;
fc5d: 6a fc 00 00                ; C! - (next: fc6a C@)
fc61: 84 01 00 00 02             ; XT=0184, flags=02
fc66: 02 43 21 00                ; 2, C!
;
fc6a: 77 fc 00 00                ; C@ - (next: fc77 CLITERAL)
fc6e: 7d 01 00 00 02             ; XT=017d, flags=02
fc73: 02 43 40 00                ; 2, C@
;
fc77: 8a fc 00 00                ; CLITERAL - (next: fc8a OR)
fc7b: 70 01 00 00 02             ; XT=0170, flags=02
fc80: 08 43 4c 49 54 45 52 41 4c 00 ; 8, CLITERAL
;
fc8a: 97 fc 00 00                ; OR - (next: fc97 RET)
fc8e: 69 01 00 00 02             ; XT=0169, flags=02
fc93: 02 4f 52 00                ; 2, OR
;
fc97: a5 fc 00 00                ; RET - (next: fca5 CALL)
fc9b: 5c 01 00 00 00             ; XT=015c, flags=00
fca0: 03 52 45 54 00             ; 3, RET
;
fca5: b4 fc 00 00                ; CALL - (next: fcb4 JMPNZ)
fca9: 4f 01 00 00 00             ; XT=014f, flags=00
fcae: 04 43 41 4c 4c 00          ; 4, CALL
;
fcb4: c4 fc 00 00                ; JMPNZ - (next: fcc4 JMPZ)
fcb8: 42 01 00 00 00             ; XT=0142, flags=00
fcbd: 05 4a 4d 50 4e 5a 00       ; 5, JMPNZ
;
fcc4: d3 fc 00 00                ; JMPZ - (next: fcd3 JMP)
fcc8: 35 01 00 00 00             ; XT=0135, flags=00
fccd: 04 4a 4d 50 5a 00          ; 4, JMPZ
;
fcd3: e1 fc 00 00                ; JMP - (next: fce1 SLITERAL)
fcd7: 28 01 00 00 00             ; XT=0128, flags=00
fcdc: 03 4a 4d 50 00             ; 3, JMP
;
fce1: f4 fc 00 00                ; SLITERAL - (next: fcf4 DUP)
fce5: 1b 01 00 00 00             ; XT=011b, flags=00
fcea: 08 53 4c 49 54 45 52 41 4c 00 ; 8, SLITERAL
;
fcf4: 02 fd 00 00                ; DUP - (next: fd02 DROP)
fcf8: 14 01 00 00 02             ; XT=0114, flags=02
fcfd: 03 44 55 50 00             ; 3, DUP
;
fd02: 11 fd 00 00                ; DROP - (next: fd11 SWAP)
fd06: 0d 01 00 00 02             ; XT=010d, flags=02
fd0b: 04 44 52 4f 50 00          ; 4, DROP
;
fd11: 20 fd 00 00                ; SWAP - (next: fd20 !)
fd15: 06 01 00 00 02             ; XT=0106, flags=02
fd1a: 04 53 57 41 50 00          ; 4, SWAP
;
fd20: 2c fd 00 00                ; ! - (next: fd2c @)
fd24: ff 00 00 00 02             ; XT=00ff, flags=02
fd29: 01 21 00                   ; 1, !
;
fd2c: 38 fd 00 00                ; @ - (next: fd38 LITERAL)
fd30: f8 00 00 00 02             ; XT=00f8, flags=02
fd35: 01 40 00                   ; 1, @
;
fd38: 4a fd 00 00                ; LITERAL - (next: fd4a ])
fd3c: eb 00 00 00 00             ; XT=00eb, flags=00
fd41: 07 4c 49 54 45 52 41 4c 00 ; 7, LITERAL
;
fd4a: 56 fd 00 00                ; ] - (next: fd56 [)
fd4e: dd 00 00 00 01             ; XT=00dd, flags=01
fd53: 01 5d 00                   ; 1, ]
;
fd56: 62 fd 00 00                ; [ - (next: fd62 ,)
fd5a: cf 00 00 00 01             ; XT=00cf, flags=01
fd5f: 01 5b 00                   ; 1, [
;
fd62: 6e fd 00 00                ; , - (next: fd6e C,)
fd66: b2 00 00 00 00             ; XT=00b2, flags=00
fd6b: 01 2c 00                   ; 1, ,
;
fd6e: 7b fd 00 00                ; C, - (next: fd7b LAST)
fd72: 9a 00 00 00 00             ; XT=009a, flags=00
fd77: 02 43 2c 00                ; 2, C,
;
fd7b: 8a fd 00 00                ; LAST - (next: fd8a HERE)
fd7f: 8e 00 00 00 00             ; XT=008e, flags=00
fd84: 04 4c 41 53 54 00          ; 4, LAST
;
fd8a: 99 fd 00 00                ; HERE - (next: fd99 STATE)
fd8e: 82 00 00 00 00             ; XT=0082, flags=00
fd93: 04 48 45 52 45 00          ; 4, HERE
;
fd99: a9 fd 00 00                ; STATE - (next: fda9 INPUT-FP)
fd9d: 77 00 00 00 00             ; XT=0077, flags=00
fda2: 05 53 54 41 54 45 00       ; 5, STATE
;
fda9: bc fd 00 00                ; INPUT-FP - (next: fdbc (LAST))
fdad: 6c 00 00 00 00             ; XT=006c, flags=00
fdb2: 08 49 4e 50 55 54 2d 46 50 00 ; 8, INPUT-FP
;
fdbc: cd fd 00 00                ; (LAST) - (next: fdcd (HERE))
fdc0: 61 00 00 00 00             ; XT=0061, flags=00
fdc5: 06 28 4c 41 53 54 29 00    ; 6, (LAST)
;
fdcd: de fd 00 00                ; (HERE) - (next: fdde BASE)
fdd1: 56 00 00 00 00             ; XT=0056, flags=00
fdd6: 06 28 48 45 52 45 29 00    ; 6, (HERE)
;
fdde: ed fd 00 00                ; BASE - (next: fded CELL)
fde2: 4b 00 00 00 00             ; XT=004b, flags=00
fde7: 04 42 41 53 45 00          ; 4, BASE
;
fded: fc fd 00 00                ; CELL - (next: fdfc <end>)
fdf1: 40 00 00 00 00             ; XT=0040, flags=00
fdf6: 04 43 45 4c 4c 00          ; 4, CELL
;
fdfc: 00 00 00 00                ; End.
