; memory-size: 65536 bytes, (10000 hex)
; data-stack: fe00, grows up
; return-stack: fffc, grows down
;
0000: 08 5b 11 00 00             ; JMP main (115b)
;
0005: 00 00 00
0008: 00000004 00000000
0010: 00001389 0000f0f7 0000000a 00000000
0020: 00000000 00010000 00000000 00000000
0030: 00000000 00000000 00000000 00000000
;
0040: 18 eb ff 00 00             ; DICTP (HERE) (ffeb)
0045: 01 4b 00 00 00             ; LITERAL 75 (0x004b)
004a: 0c                         ; RET
004b: 89 13 00 00                ; dw 0x1389
;
004f: 18 da ff 00 00             ; DICTP (LAST) (ffda)
0054: 01 5a 00 00 00             ; LITERAL 90 (0x005a)
0059: 0c                         ; RET
005a: f7 f0 00 00                ; dw 0xf0f7
;
005e: 18 cb ff 00 00             ; DICTP BASE (ffcb)
0063: 01 69 00 00 00             ; LITERAL 105 (0x0069)
0068: 0c                         ; RET
0069: 0a 00 00 00                ; dw 0x000a
;
006d: 18 bb ff 00 00             ; DICTP STATE (ffbb)
0072: 01 78 00 00 00             ; LITERAL 120 (0x0078)
0077: 0c                         ; RET
0078: 63 00 00 00                ; dw 0x0063
;
007c: 18 a8 ff 00 00             ; DICTP (MEM_SZ) (ffa8)
0081: 01 87 00 00 00             ; LITERAL 135 (0x0087)
0086: 0c                         ; RET
0087: 00 00 01 00                ; dw 0x10000
;
008b: 18 9a ff 00 00             ; DICTP >IN (ff9a)
0090: 01 96 00 00 00             ; LITERAL 150 (0x0096)
0095: 0c                         ; RET
0096: 00 00 00 00                ; dw 0x0000
;
009a: 18 8b ff 00 00             ; DICTP #NEG (ff8b)
009f: 01 a5 00 00 00             ; LITERAL 165 (0x00a5)
00a4: 0c                         ; RET
00a5: 00 00 00 00                ; dw 0x0000
;
00a9: 18 7c ff 00 00             ; DICTP #LEN (ff7c)
00ae: 01 b4 00 00 00             ; LITERAL 180 (0x00b4)
00b3: 0c                         ; RET
00b4: 05 00 00 00                ; dw 0x0005
;
00b8: 18 69 ff 00 00             ; DICTP INPUT-FP (ff69)
00bd: 01 c3 00 00 00             ; LITERAL 195 (0x00c3)
00c2: 0c                         ; RET
00c3: 00 00 00 00                ; dw 0x0000
;
00c7: 18 5c ff 00 00             ; DICTP T1 (ff5c)
00cc: 01 d2 00 00 00             ; LITERAL 210 (0x00d2)
00d1: 0c                         ; RET
00d2: 00 00 00 00                ; dw 0x0000
;
00d6: 18 4f ff 00 00             ; DICTP T2 (ff4f)
00db: 01 e1 00 00 00             ; LITERAL 225 (0x00e1)
00e0: 0c                         ; RET
00e1: 00 00 00 00                ; dw 0x0000
;
00e5: 18 42 ff 00 00             ; DICTP T3 (ff42)
00ea: 01 f0 00 00 00             ; LITERAL 240 (0x00f0)
00ef: 0c                         ; RET
00f0: 00 00 00 00                ; dw 0x0000
;
00f4: fc                         ; NOP
00f5: 18 33 ff 00 00             ; DICTP CELL (ff33)
00fa: 0e 04                      ; CLITERAL 4
00fc: 0c                         ; RET
;
00fd: 18 24 ff 00 00             ; DICTP HERE (ff24)
0102: 0b 40 00 00 00             ; CALL (HERE) (0040)
0107: 02                         ; FETCH
0108: 0c                         ; RET
;
0109: 18 15 ff 00 00             ; DICTP LAST (ff15)
010e: 0b 4f 00 00 00             ; CALL (LAST) (004f)
0113: 02                         ; FETCH
0114: 0c                         ; RET
;
0115: 18 08 ff 00 00             ; DICTP C, (ff08)
011a: 0b fd 00 00 00             ; CALL HERE (00fd)
011f: 10                         ; CSTORE
0120: 0b fd 00 00 00             ; CALL HERE (00fd)
0125: 2c                         ; INC
0126: 0b 40 00 00 00             ; CALL (HERE) (0040)
012b: 03                         ; STORE
012c: 0c                         ; RET
;
012d: 18 fc fe 00 00             ; DICTP , (fefc)
0132: 0b fd 00 00 00             ; CALL HERE (00fd)
0137: 03                         ; STORE
0138: 0b fd 00 00 00             ; CALL HERE (00fd)
013d: 0e 04                      ; CLITERAL 4
013f: 11                         ; ADD
0140: 0b 40 00 00 00             ; CALL (HERE) (0040)
0145: 03                         ; STORE
0146: 0c                         ; RET
;
0147: 18 f0 fe 00 00             ; DICTP [ (fef0)
014c: 0e 00                      ; CLITERAL 0
014e: 0b 6d 00 00 00             ; CALL STATE (006d)
0153: 03                         ; STORE
0154: 0c                         ; RET
;
0155: 18 e4 fe 00 00             ; DICTP ] (fee4)
015a: 0e 01                      ; CLITERAL 1
015c: 0b 6d 00 00 00             ; CALL STATE (006d)
0161: 03                         ; STORE
0162: 0c                         ; RET
;
0163: 18 d2 fe 00 00             ; DICTP LITERAL (fed2)
0168: 0e 01                      ; CLITERAL 1
016a: 0b 15 01 00 00             ; CALL C, (0115)
016f: 0c                         ; RET
;
0170: 18 c6 fe 00 00             ; DICTP @ (fec6)
0175: 02                         ; FETCH
0176: 0c                         ; RET
;
0177: 18 ba fe 00 00             ; DICTP ! (feba)
017c: 03                         ; STORE
017d: 0c                         ; RET
;
017e: 18 ab fe 00 00             ; DICTP SWAP (feab)
0183: 04                         ; SWAP
0184: 0c                         ; RET
;
0185: 18 9c fe 00 00             ; DICTP DROP (fe9c)
018a: 05                         ; DROP
018b: 0c                         ; RET
;
018c: 18 8e fe 00 00             ; DICTP DUP (fe8e)
0191: 06                         ; DUP
0192: 0c                         ; RET
;
0193: 18 7b fe 00 00             ; DICTP SLITERAL (fe7b)
0198: 0e 07                      ; CLITERAL 7
019a: 0b 15 01 00 00             ; CALL C, (0115)
019f: 0c                         ; RET
;
01a0: 18 6d fe 00 00             ; DICTP JMP (fe6d)
01a5: 0e 08                      ; CLITERAL 8
01a7: 0b 15 01 00 00             ; CALL C, (0115)
01ac: 0c                         ; RET
;
01ad: 18 5e fe 00 00             ; DICTP JMPZ (fe5e)
01b2: 0e 09                      ; CLITERAL 9
01b4: 0b 15 01 00 00             ; CALL C, (0115)
01b9: 0c                         ; RET
;
01ba: 18 4e fe 00 00             ; DICTP JMPNZ (fe4e)
01bf: 0e 0a                      ; CLITERAL 10
01c1: 0b 15 01 00 00             ; CALL C, (0115)
01c6: 0c                         ; RET
;
01c7: 18 3f fe 00 00             ; DICTP CALL (fe3f)
01cc: 0e 0b                      ; CLITERAL 11
01ce: 0b 15 01 00 00             ; CALL C, (0115)
01d3: 0c                         ; RET
;
01d4: 18 31 fe 00 00             ; DICTP RET (fe31)
01d9: 0e 0c                      ; CLITERAL 12
01db: 0b 15 01 00 00             ; CALL C, (0115)
01e0: 0c                         ; RET
;
01e1: 18 24 fe 00 00             ; DICTP OR (fe24)
01e6: 0d                         ; OR
01e7: 0c                         ; RET
;
01e8: 18 11 fe 00 00             ; DICTP CLITERAL (fe11)
01ed: 0e 0e                      ; CLITERAL 14
01ef: 0b 15 01 00 00             ; CALL C, (0115)
01f4: 0c                         ; RET
;
01f5: 18 04 fe 00 00             ; DICTP C@ (fe04)
01fa: 0f                         ; CFETCH
01fb: 0c                         ; RET
;
01fc: 18 f7 fd 00 00             ; DICTP C! (fdf7)
0201: 10                         ; CSTORE
0202: 0c                         ; RET
;
0203: 18 eb fd 00 00             ; DICTP + (fdeb)
0208: 11                         ; ADD
0209: 0c                         ; RET
;
020a: 18 df fd 00 00             ; DICTP - (fddf)
020f: 12                         ; SUB
0210: 0c                         ; RET
;
0211: 18 d3 fd 00 00             ; DICTP * (fdd3)
0216: 13                         ; MUL
0217: 0c                         ; RET
;
0218: 18 c7 fd 00 00             ; DICTP / (fdc7)
021d: 14                         ; DIV
021e: 0c                         ; RET
;
021f: 18 bb fd 00 00             ; DICTP < (fdbb)
0224: 15                         ; LT
0225: 0c                         ; RET
;
0226: 18 af fd 00 00             ; DICTP = (fdaf)
022b: 16                         ; EQ
022c: 0c                         ; RET
;
022d: 18 a3 fd 00 00             ; DICTP > (fda3)
0232: 17                         ; GT
0233: 0c                         ; RET
;
0234: 18 93 fd 00 00             ; DICTP DICTP (fd93)
0239: 0e 18                      ; CLITERAL 24
023b: 0b 15 01 00 00             ; CALL C, (0115)
0240: 0c                         ; RET
;
0241: 18 84 fd 00 00             ; DICTP EMIT (fd84)
0246: 19                         ; EMIT
0247: 0c                         ; RET
;
0248: 18 75 fd 00 00             ; DICTP OVER (fd75)
024d: 1a                         ; OVER
024e: 0c                         ; RET
;
024f: 18 63 fd 00 00             ; DICTP COMPARE (fd63)
0254: 1b                         ; COMPARE
0255: 0c                         ; RET
;
0256: 18 53 fd 00 00             ; DICTP FOPEN (fd53)
025b: 1c                         ; FOPEN
025c: 0c                         ; RET
;
025d: 18 43 fd 00 00             ; DICTP FREAD (fd43)
0262: 1d                         ; FREAD
0263: 0c                         ; RET
;
0264: 18 2f fd 00 00             ; DICTP FREADLINE (fd2f)
0269: 1e                         ; FREADLINE
026a: 0c                         ; RET
;
026b: 18 1e fd 00 00             ; DICTP FWRITE (fd1e)
0270: 1f                         ; FWRITE
0271: 0c                         ; RET
;
0272: 18 0d fd 00 00             ; DICTP FCLOSE (fd0d)
0277: 20                         ; FCLOSE
0278: 0c                         ; RET
;
0279: 18 00 fd 00 00             ; DICTP >R (fd00)
027e: 21                         ; DTOR
027f: 0c                         ; RET
;
0280: 18 f3 fc 00 00             ; DICTP R> (fcf3)
0285: 22                         ; RTOD
0286: 0c                         ; RET
;
0287: 18 e0 fc 00 00             ; DICTP LOGLEVEL (fce0)
028c: 23                         ; LOGLEVEL
028d: 0c                         ; RET
;
028e: 18 d2 fc 00 00             ; DICTP AND (fcd2)
0293: 24                         ; AND
0294: 0c                         ; RET
;
0295: 18 c3 fc 00 00             ; DICTP PICK (fcc3)
029a: 25                         ; PICK
029b: 0c                         ; RET
;
029c: 18 b3 fc 00 00             ; DICTP DEPTH (fcb3)
02a1: 26                         ; DEPTH
02a2: 0c                         ; RET
;
02a3: 18 a3 fc 00 00             ; DICTP GETCH (fca3)
02a8: 27                         ; GETCH
02a9: 0c                         ; RET
;
02aa: 18 90 fc 00 00             ; DICTP COMPAREI (fc90)
02af: 28                         ; COMPAREI
02b0: 0c                         ; RET
;
02b1: 18 81 fc 00 00             ; DICTP /MOD (fc81)
02b6: 29                         ; SLASHMOD
02b7: 0c                         ; RET
;
02b8: 18 73 fc 00 00             ; DICTP NOT (fc73)
02bd: 2a                         ; NOT
02be: 0c                         ; RET
;
02bf: 18 62 fc 00 00             ; DICTP RFETCH (fc62)
02c4: 2b                         ; RFETCH
02c5: 0c                         ; RET
;
02c6: 18 54 fc 00 00             ; DICTP INC (fc54)
02cb: 2c                         ; INC
02cc: 0c                         ; RET
;
02cd: 18 43 fc 00 00             ; DICTP RDEPTH (fc43)
02d2: 2d                         ; RDEPTH
02d3: 0c                         ; RET
;
02d4: 18 35 fc 00 00             ; DICTP DEC (fc35)
02d9: 2e                         ; DEC
02da: 0c                         ; RET
;
02db: 18 23 fc 00 00             ; DICTP GETTICK (fc23)
02e0: 2f                         ; GETTICK
02e1: 0c                         ; RET
;
02e2: 18 16 fc 00 00             ; DICTP << (fc16)
02e7: 30                         ; SHIFTLEFT
02e8: 0c                         ; RET
;
02e9: 18 09 fc 00 00             ; DICTP >> (fc09)
02ee: 31                         ; SHIFTRIGHT
02ef: 0c                         ; RET
;
02f0: 18 fc fb 00 00             ; DICTP +! (fbfc)
02f5: 32                         ; PLUSSTORE
02f6: 0c                         ; RET
;
02f7: 18 ea fb 00 00             ; DICTP BRANCHF (fbea)
02fc: 0e 5a                      ; CLITERAL 90
02fe: 0b 15 01 00 00             ; CALL C, (0115)
0303: 0c                         ; RET
;
0304: 18 d7 fb 00 00             ; DICTP BRANCHFZ (fbd7)
0309: 0e 5b                      ; CLITERAL 91
030b: 0b 15 01 00 00             ; CALL C, (0115)
0310: 0c                         ; RET
;
0311: 18 c3 fb 00 00             ; DICTP BRANCHFNZ (fbc3)
0316: 0e 5c                      ; CLITERAL 92
0318: 0b 15 01 00 00             ; CALL C, (0115)
031d: 0c                         ; RET
;
031e: 18 b1 fb 00 00             ; DICTP BRANCHB (fbb1)
0323: 0e 5d                      ; CLITERAL 93
0325: 0b 15 01 00 00             ; CALL C, (0115)
032a: 0c                         ; RET
;
032b: 18 9e fb 00 00             ; DICTP BRANCHBZ (fb9e)
0330: 0e 5e                      ; CLITERAL 94
0332: 0b 15 01 00 00             ; CALL C, (0115)
0337: 0c                         ; RET
;
0338: 18 8a fb 00 00             ; DICTP BRANCHBNZ (fb8a)
033d: 0e 5f                      ; CLITERAL 95
033f: 0b 15 01 00 00             ; CALL C, (0115)
0344: 0c                         ; RET
;
0345: 18 7c fb 00 00             ; DICTP NOP (fb7c)
034a: fc                         ; NOP
034b: 0c                         ; RET
;
034c: 18 6c fb 00 00             ; DICTP BREAK (fb6c)
0351: fd                         ; BREAK
0352: 0c                         ; RET
;
0353: 18 5c fb 00 00             ; DICTP RESET (fb5c)
0358: fe                         ; RESET
0359: 0c                         ; RET
;
035a: 18 4e fb 00 00             ; DICTP BYE (fb4e)
035f: ff                         ; BYE
0360: 0c                         ; RET
;
0361: 18 3d fb 00 00             ; DICTP INLINE (fb3d)
0366: 0b 09 01 00 00             ; CALL LAST (0109)
036b: 0e 02                      ; CLITERAL 2
036d: 0e 04                      ; CLITERAL 4
036f: 13                         ; MUL
0370: 11                         ; ADD
0371: 06                         ; DUP
0372: 0f                         ; CFETCH
0373: 0e 02                      ; CLITERAL 2
0375: 0d                         ; OR
0376: 04                         ; SWAP
0377: 10                         ; CSTORE
0378: 0c                         ; RET
;
0379: 18 29 fb 00 00             ; DICTP IMMEDIATE (fb29)
037e: 0b 09 01 00 00             ; CALL LAST (0109)
0383: 0e 02                      ; CLITERAL 2
0385: 0e 04                      ; CLITERAL 4
0387: 13                         ; MUL
0388: 11                         ; ADD
0389: 06                         ; DUP
038a: 0f                         ; CFETCH
038b: 0e 01                      ; CLITERAL 1
038d: 0d                         ; OR
038e: 04                         ; SWAP
038f: 10                         ; CSTORE
0390: 0c                         ; RET
;
0391: 18 19 fb 00 00             ; DICTP CELLS (fb19)
0396: 0e 04                      ; CLITERAL 4
0398: 13                         ; MUL
0399: 0c                         ; RET
;
039a: 18 00 fb 00 00             ; DICTP FLAG_IMMEDIATE (fb00)
039f: 0e 01                      ; CLITERAL 1
03a1: 0c                         ; RET
;
03a2: 18 ea fa 00 00             ; DICTP FLAG_INLINE (faea)
03a7: 0e 02                      ; CLITERAL 2
03a9: 0c                         ; RET
;
03aa: 18 dc fa 00 00             ; DICTP HEX (fadc)
03af: 0e 10                      ; CLITERAL 16
03b1: 0b 5e 00 00 00             ; CALL BASE (005e)
03b6: 03                         ; STORE
03b7: 0c                         ; RET
;
03b8: 18 ca fa 00 00             ; DICTP DECIMAL (faca)
03bd: 0e 0a                      ; CLITERAL 10
03bf: 0b 5e 00 00 00             ; CALL BASE (005e)
03c4: 03                         ; STORE
03c5: 0c                         ; RET
;
03c6: 18 ba fa 00 00             ; DICTP OCTAL (faba)
03cb: 0e 08                      ; CLITERAL 8
03cd: 0b 5e 00 00 00             ; CALL BASE (005e)
03d2: 03                         ; STORE
03d3: 0c                         ; RET
;
03d4: 18 a9 fa 00 00             ; DICTP BINARY (faa9)
03d9: 0e 02                      ; CLITERAL 2
03db: 0b 5e 00 00 00             ; CALL BASE (005e)
03e0: 03                         ; STORE
03e1: 0c                         ; RET
;
03e2: 18 9c fa 00 00             ; DICTP ON (fa9c)
03e7: 0e 01                      ; CLITERAL 1
03e9: 04                         ; SWAP
03ea: 03                         ; STORE
03eb: 0c                         ; RET
;
03ec: 18 8e fa 00 00             ; DICTP OFF (fa8e)
03f1: 0e 00                      ; CLITERAL 0
03f3: 04                         ; SWAP
03f4: 03                         ; STORE
03f5: 0c                         ; RET
;
03f6: 18 79 fa 00 00             ; DICTP ?COMPILING (fa79)
03fb: 0b 6d 00 00 00             ; CALL STATE (006d)
0400: 02                         ; FETCH
0401: 0c                         ; RET
;
0402: 18 6c fa 00 00             ; DICTP IF (fa6c)
0407: 0b f6 03 00 00             ; CALL ?COMPILING (03f6)
040c: 09 22 04 00 00             ; JMPZ 0422
0411: 0b 04 03 00 00             ; CALL BRANCHFZ (0304)
0416: 0b fd 00 00 00             ; CALL HERE (00fd)
041b: 0e 00                      ; CLITERAL 0
041d: 0b 15 01 00 00             ; CALL C, (0115)
0422: 0c                         ; RET
;
0423: 18 5d fa 00 00             ; DICTP ELSE (fa5d)
0428: 0b f6 03 00 00             ; CALL ?COMPILING (03f6)
042d: 09 4d 04 00 00             ; JMPZ 044d
0432: 0b f7 02 00 00             ; CALL BRANCHF (02f7)
0437: 0b fd 00 00 00             ; CALL HERE (00fd)
043c: 0e 00                      ; CLITERAL 0
043e: 0b 15 01 00 00             ; CALL C, (0115)
0443: 04                         ; SWAP
0444: 0b fd 00 00 00             ; CALL HERE (00fd)
0449: 1a                         ; OVER
044a: 12                         ; SUB
044b: 04                         ; SWAP
044c: 10                         ; CSTORE
044d: 0c                         ; RET
;
044e: 18 4e fa 00 00             ; DICTP THEN (fa4e)
0453: 0b f6 03 00 00             ; CALL ?COMPILING (03f6)
0458: 09 66 04 00 00             ; JMPZ 0466
045d: 0b fd 00 00 00             ; CALL HERE (00fd)
0462: 1a                         ; OVER
0463: 12                         ; SUB
0464: 04                         ; SWAP
0465: 10                         ; CSTORE
0466: 0c                         ; RET
;
0467: 18 3e fa 00 00             ; DICTP BEGIN (fa3e)
046c: 0b f6 03 00 00             ; CALL ?COMPILING (03f6)
0471: 5b 06                      ; BRANCHFZ 6 (0478)
0473: 0b fd 00 00 00             ; CALL HERE (00fd)
0478: 0c                         ; RET
;
0479: 18 2e fa 00 00             ; DICTP AGAIN (fa2e)
047e: 0b f6 03 00 00             ; CALL ?COMPILING (03f6)
0483: 5b 12                      ; BRANCHFZ 18 (0496)
0485: 0b 1e 03 00 00             ; CALL BRANCHB (031e)
048a: 0b fd 00 00 00             ; CALL HERE (00fd)
048f: 04                         ; SWAP
0490: 12                         ; SUB
0491: 0b 15 01 00 00             ; CALL C, (0115)
0496: 0c                         ; RET
;
0497: 18 1e fa 00 00             ; DICTP WHILE (fa1e)
049c: 0b f6 03 00 00             ; CALL ?COMPILING (03f6)
04a1: 5b 12                      ; BRANCHFZ 18 (04b4)
04a3: 0b 38 03 00 00             ; CALL BRANCHBNZ (0338)
04a8: 0b fd 00 00 00             ; CALL HERE (00fd)
04ad: 04                         ; SWAP
04ae: 12                         ; SUB
04af: 0b 15 01 00 00             ; CALL C, (0115)
04b4: 0c                         ; RET
;
04b5: 18 0e fa 00 00             ; DICTP UNTIL (fa0e)
04ba: 0b f6 03 00 00             ; CALL ?COMPILING (03f6)
04bf: 5b 12                      ; BRANCHFZ 18 (04d2)
04c1: 0b 2b 03 00 00             ; CALL BRANCHBZ (032b)
04c6: 0b fd 00 00 00             ; CALL HERE (00fd)
04cb: 04                         ; SWAP
04cc: 12                         ; SUB
04cd: 0b 15 01 00 00             ; CALL C, (0115)
04d2: 0c                         ; RET
;
04d3: 18 fe f9 00 00             ; DICTP LEAVE (f9fe)
04d8: 0b f6 03 00 00             ; CALL ?COMPILING (03f6)
04dd: 5b 06                      ; BRANCHFZ 6 (04e4)
04df: 0b d4 01 00 00             ; CALL RET (01d4)
04e4: 0c                         ; RET
;
04e5: 18 ed f9 00 00             ; DICTP MEM_SZ (f9ed)
04ea: 0b 7c 00 00 00             ; CALL (MEM_SZ) (007c)
04ef: 02                         ; FETCH
04f0: 0c                         ; RET
;
04f1: 18 da f9 00 00             ; DICTP TRACE-ON (f9da)
04f6: 0e 02                      ; CLITERAL 2
04f8: 23                         ; LOGLEVEL
04f9: 0c                         ; RET
;
04fa: 18 c6 f9 00 00             ; DICTP TRACE-OFF (f9c6)
04ff: 0e 00                      ; CLITERAL 0
0501: 23                         ; LOGLEVEL
0502: 0c                         ; RET
;
0503: 18 b3 f9 00 00             ; DICTP DEBUG-ON (f9b3)
0508: 0e 01                      ; CLITERAL 1
050a: 23                         ; LOGLEVEL
050b: 0c                         ; RET
;
050c: 18 9f f9 00 00             ; DICTP DEBUG-OFF (f99f)
0511: 0e 00                      ; CLITERAL 0
0513: 23                         ; LOGLEVEL
0514: 0c                         ; RET
;
0515: 18 92 f9 00 00             ; DICTP R@ (f992)
051a: 2b                         ; RFETCH
051b: 0c                         ; RET
;
051c: 18 82 f9 00 00             ; DICTP RDROP (f982)
0521: 22                         ; RTOD
0522: 05                         ; DROP
0523: 0c                         ; RET
;
0524: 18 73 f9 00 00             ; DICTP ?DUP (f973)
0529: 06                         ; DUP
052a: 5b 02                      ; BRANCHFZ 2 (052d)
052c: 06                         ; DUP
052d: 0c                         ; RET
;
052e: 18 64 f9 00 00             ; DICTP 2DUP (f964)
0533: 1a                         ; OVER
0534: 1a                         ; OVER
0535: 0c                         ; RET
;
0536: 18 54 f9 00 00             ; DICTP 2DROP (f954)
053b: 05                         ; DROP
053c: 05                         ; DROP
053d: 0c                         ; RET
;
053e: 18 45 f9 00 00             ; DICTP TUCK (f945)
0543: 04                         ; SWAP
0544: 1a                         ; OVER
0545: 0c                         ; RET
;
0546: 18 37 f9 00 00             ; DICTP NIP (f937)
054b: 04                         ; SWAP
054c: 05                         ; DROP
054d: 0c                         ; RET
;
054e: 18 29 f9 00 00             ; DICTP ROT (f929)
0553: 21                         ; DTOR
0554: 04                         ; SWAP
0555: 22                         ; RTOD
0556: 04                         ; SWAP
0557: 0c                         ; RET
;
0558: 18 1a f9 00 00             ; DICTP -ROT (f91a)
055d: 04                         ; SWAP
055e: 21                         ; DTOR
055f: 04                         ; SWAP
0560: 22                         ; RTOD
0561: 0c                         ; RET
;
0562: 18 0e f9 00 00             ; DICTP / (f90e)
0567: 29                         ; SLASHMOD
0568: 04                         ; SWAP
0569: 05                         ; DROP
056a: 0c                         ; RET
;
056b: 18 00 f9 00 00             ; DICTP MOD (f900)
0570: 29                         ; SLASHMOD
0571: 05                         ; DROP
0572: 0c                         ; RET
;
0573: 18 f3 f8 00 00             ; DICTP 1+ (f8f3)
0578: 2c                         ; INC
0579: 0c                         ; RET
;
057a: 18 e6 f8 00 00             ; DICTP 1- (f8e6)
057f: 2e                         ; DEC
0580: 0c                         ; RET
;
0581: 18 d9 f8 00 00             ; DICTP 2* (f8d9)
0586: 0e 02                      ; CLITERAL 2
0588: 13                         ; MUL
0589: 0c                         ; RET
;
058a: 18 cc f8 00 00             ; DICTP 2/ (f8cc)
058f: 0e 02                      ; CLITERAL 2
0591: 29                         ; SLASHMOD
0592: 04                         ; SWAP
0593: 05                         ; DROP
0594: 0c                         ; RET
;
0595: 18 bf f8 00 00             ; DICTP += (f8bf)
059a: 1a                         ; OVER
059b: 02                         ; FETCH
059c: 11                         ; ADD
059d: 04                         ; SWAP
059e: 03                         ; STORE
059f: 0c                         ; RET
;
05a0: 18 b2 f8 00 00             ; DICTP -= (f8b2)
05a5: 1a                         ; OVER
05a6: 02                         ; FETCH
05a7: 04                         ; SWAP
05a8: 12                         ; SUB
05a9: 04                         ; SWAP
05aa: 03                         ; STORE
05ab: 0c                         ; RET
;
05ac: 18 a5 f8 00 00             ; DICTP -! (f8a5)
05b1: 04                         ; SWAP
05b2: 1a                         ; OVER
05b3: 02                         ; FETCH
05b4: 04                         ; SWAP
05b5: 12                         ; SUB
05b6: 04                         ; SWAP
05b7: 03                         ; STORE
05b8: 0c                         ; RET
;
05b9: 18 98 f8 00 00             ; DICTP ++ (f898)
05be: 06                         ; DUP
05bf: 02                         ; FETCH
05c0: 2c                         ; INC
05c1: 04                         ; SWAP
05c2: 03                         ; STORE
05c3: 0c                         ; RET
;
05c4: 18 8b f8 00 00             ; DICTP -- (f88b)
05c9: 06                         ; DUP
05ca: 02                         ; FETCH
05cb: 2e                         ; DEC
05cc: 04                         ; SWAP
05cd: 03                         ; STORE
05ce: 0c                         ; RET
;
05cf: 18 7d f8 00 00             ; DICTP C++ (f87d)
05d4: 06                         ; DUP
05d5: 0f                         ; CFETCH
05d6: 2c                         ; INC
05d7: 04                         ; SWAP
05d8: 10                         ; CSTORE
05d9: 0c                         ; RET
;
05da: 18 6f f8 00 00             ; DICTP C-- (f86f)
05df: 06                         ; DUP
05e0: 0f                         ; CFETCH
05e1: 2e                         ; DEC
05e2: 04                         ; SWAP
05e3: 10                         ; CSTORE
05e4: 0c                         ; RET
;
05e5: 18 62 f8 00 00             ; DICTP 0= (f862)
05ea: 2a                         ; NOT
05eb: 0c                         ; RET
;
05ec: 18 55 f8 00 00             ; DICTP <> (f855)
05f1: 16                         ; EQ
05f2: 2a                         ; NOT
05f3: 0c                         ; RET
;
05f4: 18 48 f8 00 00             ; DICTP <= (f848)
05f9: 17                         ; GT
05fa: 2a                         ; NOT
05fb: 0c                         ; RET
;
05fc: 18 3b f8 00 00             ; DICTP >= (f83b)
0601: 15                         ; LT
0602: 2a                         ; NOT
0603: 0c                         ; RET
;
0604: 18 2c f8 00 00             ; DICTP TRUE (f82c)
0609: 01 ff ff ff ff             ; LITERAL -1 (ffffffff)
060e: 0c                         ; RET
;
060f: 18 1c f8 00 00             ; DICTP FALSE (f81c)
0614: 0e 00                      ; CLITERAL 0
0616: 0c                         ; RET
;
0617: 18 0c f8 00 00             ; DICTP COUNT (f80c)
061c: 06                         ; DUP
061d: 2c                         ; INC
061e: 04                         ; SWAP
061f: 0f                         ; CFETCH
0620: 0c                         ; RET
;
0621: 18 fd f7 00 00             ; DICTP TYPE (f7fd)
0626: 06                         ; DUP
0627: 2a                         ; NOT
0628: 5b 04                      ; BRANCHFZ 4 (062d)
062a: 05                         ; DROP
062b: 05                         ; DROP
062c: 0c                         ; RET
062d: 04                         ; SWAP
062e: 06                         ; DUP
062f: 0f                         ; CFETCH
0630: 19                         ; EMIT
0631: 2c                         ; INC
0632: 04                         ; SWAP
0633: 2e                         ; DEC
0634: 5d 0f                      ; BRANCHB 15 (0626)
0636: 0c                         ; RET
;
0637: 18 f0 f7 00 00             ; DICTP CT (f7f0)
063c: 0b 17 06 00 00             ; CALL COUNT (0617)
0641: 0b 21 06 00 00             ; CALL TYPE (0621)
0646: 0c                         ; RET
;
0647: 18 e4 f7 00 00             ; DICTP \ (f7e4)
064c: 0e 00                      ; CLITERAL 0
064e: 0b 8b 00 00 00             ; CALL >IN (008b)
0653: 02                         ; FETCH
0654: 10                         ; CSTORE
0655: 0c                         ; RET
;
0656: 18 d8 f7 00 00             ; DICTP ( (f7d8)
065b: 0b 8b 00 00 00             ; CALL >IN (008b)
0660: 02                         ; FETCH
0661: 0f                         ; CFETCH
0662: 06                         ; DUP
0663: 2a                         ; NOT
0664: 5b 1d                      ; BRANCHFZ 29 (0682)
0666: 07 13 6d 69 73 73 69 6e 67 20 63 6c 6f 73 69 6e 67 20 27 29 27 00 ; SLITERAL (0667) [missing closing ')']
067c: 0b 37 06 00 00             ; CALL CT (0637)
0681: fe                         ; RESET
0682: 0b 8b 00 00 00             ; CALL >IN (008b)
0687: 06                         ; DUP
0688: 02                         ; FETCH
0689: 2c                         ; INC
068a: 04                         ; SWAP
068b: 03                         ; STORE
068c: 0e 29                      ; CLITERAL 41
068e: 16                         ; EQ
068f: 5e 35                      ; BRANCHBZ 53 (065b)
0691: 0c                         ; RET
;
0692: 18 c8 f7 00 00             ; DICTP SPACE (f7c8)
0697: 0e 20                      ; CLITERAL 32
0699: 19                         ; EMIT
069a: 0c                         ; RET
;
069b: 18 bb f7 00 00             ; DICTP BL (f7bb)
06a0: 0e 20                      ; CLITERAL 32
06a2: 19                         ; EMIT
06a3: 0c                         ; RET
;
06a4: 18 ac f7 00 00             ; DICTP CRLF (f7ac)
06a9: 0e 0d                      ; CLITERAL 13
06ab: 19                         ; EMIT
06ac: 0e 0a                      ; CLITERAL 10
06ae: 19                         ; EMIT
06af: 0c                         ; RET
;
06b0: 18 9f f7 00 00             ; DICTP CR (f79f)
06b5: 0e 0d                      ; CLITERAL 13
06b7: 19                         ; EMIT
06b8: 0e 0a                      ; CLITERAL 10
06ba: 19                         ; EMIT
06bb: 0c                         ; RET
;
06bc: 18 8d f7 00 00             ; DICTP BETWEEN (f78d)
06c1: 0e 02                      ; CLITERAL 2
06c3: 25                         ; PICK
06c4: 15                         ; LT
06c5: 5b 06                      ; BRANCHFZ 6 (06cc)
06c7: 05                         ; DROP
06c8: 05                         ; DROP
06c9: 0e 00                      ; CLITERAL 0
06cb: 0c                         ; RET
06cc: 15                         ; LT
06cd: 2a                         ; NOT
06ce: 0c                         ; RET
;
06cf: 18 7c f7 00 00             ; DICTP skipWS (f77c)
06d4: 06                         ; DUP
06d5: 0f                         ; CFETCH
06d6: 06                         ; DUP
06d7: 5b 0c                      ; BRANCHFZ 12 (06e4)
06d9: 0e 20                      ; CLITERAL 32
06db: 17                         ; GT
06dc: 5b 04                      ; BRANCHFZ 4 (06e1)
06de: 0c                         ; RET
06df: 5a 02                      ; BRANCHF 2 (06e2)
06e1: 2c                         ; INC
06e2: 5a 03                      ; BRANCHF 3 (06e6)
06e4: 05                         ; DROP
06e5: 0c                         ; RET
06e6: 5d 13                      ; BRANCHB 19 (06d4)
06e8: 0c                         ; RET
;
06e9: 18 67 f7 00 00             ; DICTP getOneWord (f767)
06ee: 06                         ; DUP
06ef: 21                         ; DTOR
06f0: 21                         ; DTOR
06f1: 2b                         ; RFETCH
06f2: 0f                         ; CFETCH
06f3: 0e 20                      ; CLITERAL 32
06f5: 17                         ; GT
06f6: 5b 06                      ; BRANCHFZ 6 (06fd)
06f8: 22                         ; RTOD
06f9: 2c                         ; INC
06fa: 21                         ; DTOR
06fb: 5a 10                      ; BRANCHF 16 (070c)
06fd: 2b                         ; RFETCH
06fe: 0f                         ; CFETCH
06ff: 5b 08                      ; BRANCHFZ 8 (0708)
0701: 0e 00                      ; CLITERAL 0
0703: 2b                         ; RFETCH
0704: 10                         ; CSTORE
0705: 22                         ; RTOD
0706: 2c                         ; INC
0707: 21                         ; DTOR
0708: 22                         ; RTOD
0709: 22                         ; RTOD
070a: 04                         ; SWAP
070b: 0c                         ; RET
070c: 5d 1c                      ; BRANCHB 28 (06f1)
070e: 0c                         ; RET
;
070f: 18 53 f7 00 00             ; DICTP DICT>NEXT (f753)
0714: 0c                         ; RET
;
0715: 18 41 f7 00 00             ; DICTP DICT>XT (f741)
071a: 0e 04                      ; CLITERAL 4
071c: 11                         ; ADD
071d: 0c                         ; RET
;
071e: 18 2c f7 00 00             ; DICTP DICT>FLAGS (f72c)
0723: 0e 02                      ; CLITERAL 2
0725: 0e 04                      ; CLITERAL 4
0727: 13                         ; MUL
0728: 11                         ; ADD
0729: 0c                         ; RET
;
072a: 18 18 f7 00 00             ; DICTP DICT>NAME (f718)
072f: 0b 1e 07 00 00             ; CALL DICT>FLAGS (071e)
0734: 2c                         ; INC
0735: 0c                         ; RET
;
0736: 18 04 f7 00 00             ; DICTP NEXT>DICT (f704)
073b: 0c                         ; RET
;
073c: 18 f2 f6 00 00             ; DICTP XT>DICT (f6f2)
0741: 0e 04                      ; CLITERAL 4
0743: 12                         ; SUB
0744: 0c                         ; RET
;
0745: 18 dd f6 00 00             ; DICTP FLAGS>DICT (f6dd)
074a: 0e 02                      ; CLITERAL 2
074c: 0e 04                      ; CLITERAL 4
074e: 13                         ; MUL
074f: 12                         ; SUB
0750: 0c                         ; RET
;
0751: 18 c9 f6 00 00             ; DICTP NAME>DICT (f6c9)
0756: 2e                         ; DEC
0757: 0e 02                      ; CLITERAL 2
0759: 0e 04                      ; CLITERAL 4
075b: 13                         ; MUL
075c: 12                         ; SUB
075d: 0c                         ; RET
;
075e: 18 b4 f6 00 00             ; DICTP DICT.GetXT (f6b4)
0763: 0b 15 07 00 00             ; CALL DICT>XT (0715)
0768: 02                         ; FETCH
0769: 0c                         ; RET
;
076a: 18 9c f6 00 00             ; DICTP DICT.GetFLAGS (f69c)
076f: 0b 1e 07 00 00             ; CALL DICT>FLAGS (071e)
0774: 0f                         ; CFETCH
0775: 0c                         ; RET
;
0776: 18 87 f6 00 00             ; DICTP DICTP>NAME (f687)
077b: 2c                         ; INC
077c: 02                         ; FETCH
077d: 0b 2a 07 00 00             ; CALL DICT>NAME (072a)
0782: 0c                         ; RET
;
0783: 18 71 f6 00 00             ; DICTP XT.GetDICTP (f671)
0788: 06                         ; DUP
0789: 0f                         ; CFETCH
078a: 0e 18                      ; CLITERAL 24
078c: 16                         ; EQ
078d: 5b 05                      ; BRANCHFZ 5 (0793)
078f: 2c                         ; INC
0790: 02                         ; FETCH
0791: 5a 03                      ; BRANCHF 3 (0795)
0793: 05                         ; DROP
0794: fe                         ; RESET
0795: 0c                         ; RET
;
0796: 18 54 f6 00 00             ; DICTP FLAGS.ISIMMEDIATE? (f654)
079b: 0e 01                      ; CLITERAL 1
079d: 24                         ; AND
079e: 0c                         ; RET
;
079f: 18 3a f6 00 00             ; DICTP FLAGS.ISINLINE? (f63a)
07a4: 0e 02                      ; CLITERAL 2
07a6: 24                         ; AND
07a7: 0c                         ; RET
;
07a8: 18 1e f6 00 00             ; DICTP DICT.GetIMMEDIATE (f61e)
07ad: 0b 6a 07 00 00             ; CALL DICT.GetFLAGS (076a)
07b2: 0b 96 07 00 00             ; CALL FLAGS.ISIMMEDIATE? (0796)
07b7: 0c                         ; RET
;
07b8: 18 05 f6 00 00             ; DICTP DICT.GetINLINE (f605)
07bd: 0b 6a 07 00 00             ; CALL DICT.GetFLAGS (076a)
07c2: 0b 9f 07 00 00             ; CALL FLAGS.ISINLINE? (079f)
07c7: 0c                         ; RET
;
07c8: 18 f0 f5 00 00             ; DICTP findInDict (f5f0)
07cd: 0b 09 01 00 00             ; CALL LAST (0109)
07d2: 21                         ; DTOR
07d3: 2b                         ; RFETCH
07d4: 06                         ; DUP
07d5: 5b 1d                      ; BRANCHFZ 29 (07f3)
07d7: 0b 2a 07 00 00             ; CALL DICT>NAME (072a)
07dc: 2c                         ; INC
07dd: 1a                         ; OVER
07de: 28                         ; COMPAREI
07df: 5b 11                      ; BRANCHFZ 17 (07f1)
07e1: 05                         ; DROP
07e2: 2b                         ; RFETCH
07e3: 0b 5e 07 00 00             ; CALL DICT.GetXT (075e)
07e8: 22                         ; RTOD
07e9: 0b 6a 07 00 00             ; CALL DICT.GetFLAGS (076a)
07ee: 0e 01                      ; CLITERAL 1
07f0: 0c                         ; RET
07f1: 5a 09                      ; BRANCHF 9 (07fb)
07f3: 05                         ; DROP
07f4: 05                         ; DROP
07f5: 22                         ; RTOD
07f6: 0e 00                      ; CLITERAL 0
07f8: 0e 00                      ; CLITERAL 0
07fa: 0c                         ; RET
07fb: 22                         ; RTOD
07fc: 02                         ; FETCH
07fd: 21                         ; DTOR
07fe: 5d 2c                      ; BRANCHB 44 (07d3)
0800: 0c                         ; RET
;
0801: 18 df f5 00 00             ; DICTP isHEX? (f5df)
0806: 0b 5e 00 00 00             ; CALL BASE (005e)
080b: 02                         ; FETCH
080c: 0e 10                      ; CLITERAL 16
080e: 16                         ; EQ
080f: 0c                         ; RET
;
0810: 18 ca f5 00 00             ; DICTP isNumChar? (f5ca)
0815: 06                         ; DUP
0816: 0e 30                      ; CLITERAL 48
0818: 0e 39                      ; CLITERAL 57
081a: 0b bc 06 00 00             ; CALL BETWEEN (06bc)
081f: 5b 07                      ; BRANCHFZ 7 (0827)
0821: 0e 30                      ; CLITERAL 48
0823: 12                         ; SUB
0824: 0e 01                      ; CLITERAL 1
0826: 0c                         ; RET
0827: 0b 01 08 00 00             ; CALL isHEX? (0801)
082c: 5b 25                      ; BRANCHFZ 37 (0852)
082e: 06                         ; DUP
082f: 0e 41                      ; CLITERAL 65
0831: 0e 46                      ; CLITERAL 70
0833: 0b bc 06 00 00             ; CALL BETWEEN (06bc)
0838: 5b 07                      ; BRANCHFZ 7 (0840)
083a: 0e 37                      ; CLITERAL 55
083c: 12                         ; SUB
083d: 0e 01                      ; CLITERAL 1
083f: 0c                         ; RET
0840: 06                         ; DUP
0841: 0e 61                      ; CLITERAL 97
0843: 0e 66                      ; CLITERAL 102
0845: 0b bc 06 00 00             ; CALL BETWEEN (06bc)
084a: 5b 07                      ; BRANCHFZ 7 (0852)
084c: 0e 57                      ; CLITERAL 87
084e: 12                         ; SUB
084f: 0e 01                      ; CLITERAL 1
0851: 0c                         ; RET
0852: 0e 00                      ; CLITERAL 0
0854: 0c                         ; RET
;
0855: 18 b9 f5 00 00             ; DICTP NEGATE (f5b9)
085a: 0e 00                      ; CLITERAL 0
085c: 04                         ; SWAP
085d: 12                         ; SUB
085e: 0c                         ; RET
;
085f: 18 ab f5 00 00             ; DICTP ABS (f5ab)
0864: 06                         ; DUP
0865: 0e 00                      ; CLITERAL 0
0867: 15                         ; LT
0868: 5b 06                      ; BRANCHFZ 6 (086f)
086a: 0b 55 08 00 00             ; CALL NEGATE (0855)
086f: 0c                         ; RET
;
0870: 18 97 f5 00 00             ; DICTP parse-hex (f597)
0875: 05                         ; DROP
0876: 0e 00                      ; CLITERAL 0
0878: 0e 00                      ; CLITERAL 0
087a: 0c                         ; RET
;
087b: 18 82 f5 00 00             ; DICTP parse-char (f582)
0880: 06                         ; DUP
0881: 0e 02                      ; CLITERAL 2
0883: 11                         ; ADD
0884: 0f                         ; CFETCH
0885: 0e 27                      ; CLITERAL 39
0887: 16                         ; EQ
0888: 2a                         ; NOT
0889: 5b 07                      ; BRANCHFZ 7 (0891)
088b: 05                         ; DROP
088c: 0e 00                      ; CLITERAL 0
088e: 0e 00                      ; CLITERAL 0
0890: 0c                         ; RET
0891: 06                         ; DUP
0892: 0e 03                      ; CLITERAL 3
0894: 11                         ; ADD
0895: 0f                         ; CFETCH
0896: 06                         ; DUP
0897: 0e 00                      ; CLITERAL 0
0899: 16                         ; EQ
089a: 5b 04                      ; BRANCHFZ 4 (089f)
089c: 05                         ; DROP
089d: 0e 20                      ; CLITERAL 32
089f: 0e 20                      ; CLITERAL 32
08a1: 16                         ; EQ
08a2: 2a                         ; NOT
08a3: 5b 07                      ; BRANCHFZ 7 (08ab)
08a5: 05                         ; DROP
08a6: 0e 00                      ; CLITERAL 0
08a8: 0e 00                      ; CLITERAL 0
08aa: 0c                         ; RET
08ab: 05                         ; DROP
08ac: 0e 00                      ; CLITERAL 0
08ae: 0e 00                      ; CLITERAL 0
08b0: 0c                         ; RET
;
08b1: 18 6e f5 00 00             ; DICTP isNumber? (f56e)
08b6: 06                         ; DUP
08b7: 0f                         ; CFETCH
08b8: 0e 24                      ; CLITERAL 36
08ba: 16                         ; EQ
08bb: 5b 08                      ; BRANCHFZ 8 (08c4)
08bd: 2c                         ; INC
08be: 0b 70 08 00 00             ; CALL parse-hex (0870)
08c3: 0c                         ; RET
08c4: 06                         ; DUP
08c5: 0f                         ; CFETCH
08c6: 0e 27                      ; CLITERAL 39
08c8: 16                         ; EQ
08c9: 5b 08                      ; BRANCHFZ 8 (08d2)
08cb: 2c                         ; INC
08cc: 0b 7b 08 00 00             ; CALL parse-char (087b)
08d1: 0c                         ; RET
08d2: 06                         ; DUP
08d3: 0f                         ; CFETCH
08d4: 0e 2d                      ; CLITERAL 45
08d6: 16                         ; EQ
08d7: 06                         ; DUP
08d8: 0b 9a 00 00 00             ; CALL #NEG (009a)
08dd: 03                         ; STORE
08de: 5b 02                      ; BRANCHFZ 2 (08e1)
08e0: 2c                         ; INC
08e1: 0e 00                      ; CLITERAL 0
08e3: 21                         ; DTOR
08e4: 06                         ; DUP
08e5: 0f                         ; CFETCH
08e6: 06                         ; DUP
08e7: 0e 00                      ; CLITERAL 0
08e9: 16                         ; EQ
08ea: 5b 14                      ; BRANCHFZ 20 (08ff)
08ec: 05                         ; DROP
08ed: 05                         ; DROP
08ee: 22                         ; RTOD
08ef: 0b 9a 00 00 00             ; CALL #NEG (009a)
08f4: 02                         ; FETCH
08f5: 5b 06                      ; BRANCHFZ 6 (08fc)
08f7: 0b 55 08 00 00             ; CALL NEGATE (0855)
08fc: 0e 01                      ; CLITERAL 1
08fe: 0c                         ; RET
08ff: 0b 10 08 00 00             ; CALL isNumChar? (0810)
0904: 5b 0e                      ; BRANCHFZ 14 (0913)
0906: 22                         ; RTOD
0907: 0b 5e 00 00 00             ; CALL BASE (005e)
090c: 02                         ; FETCH
090d: 13                         ; MUL
090e: 11                         ; ADD
090f: 21                         ; DTOR
0910: 2c                         ; INC
0911: 5a 06                      ; BRANCHF 6 (0918)
0913: 05                         ; DROP
0914: 22                         ; RTOD
0915: 0e 00                      ; CLITERAL 0
0917: 0c                         ; RET
0918: 5d 35                      ; BRANCHB 53 (08e4)
091a: 0c                         ; RET
;
091b: 18 61 f5 00 00             ; DICTP <# (f561)
0920: 0b 9a 00 00 00             ; CALL #NEG (009a)
0925: 0b ec 03 00 00             ; CALL OFF (03ec)
092a: 0b a9 00 00 00             ; CALL #LEN (00a9)
092f: 0b ec 03 00 00             ; CALL OFF (03ec)
0934: 06                         ; DUP
0935: 0e 00                      ; CLITERAL 0
0937: 15                         ; LT
0938: 5b 10                      ; BRANCHFZ 16 (0949)
093a: 0b 55 08 00 00             ; CALL NEGATE (0855)
093f: 0b 9a 00 00 00             ; CALL #NEG (009a)
0944: 0b e2 03 00 00             ; CALL ON (03e2)
0949: 0e 00                      ; CLITERAL 0
094b: 04                         ; SWAP
094c: 0c                         ; RET
;
094d: 18 55 f5 00 00             ; DICTP # (f555)
0952: 0b 5e 00 00 00             ; CALL BASE (005e)
0957: 02                         ; FETCH
0958: 29                         ; SLASHMOD
0959: 04                         ; SWAP
095a: 0e 30                      ; CLITERAL 48
095c: 11                         ; ADD
095d: 06                         ; DUP
095e: 0e 39                      ; CLITERAL 57
0960: 17                         ; GT
0961: 5b 04                      ; BRANCHFZ 4 (0966)
0963: 0e 07                      ; CLITERAL 7
0965: 11                         ; ADD
0966: 0b a9 00 00 00             ; CALL #LEN (00a9)
096b: 06                         ; DUP
096c: 02                         ; FETCH
096d: 2c                         ; INC
096e: 04                         ; SWAP
096f: 03                         ; STORE
0970: 04                         ; SWAP
0971: 0c                         ; RET
;
0972: 18 48 f5 00 00             ; DICTP #S (f548)
0977: 0b 4d 09 00 00             ; CALL # (094d)
097c: 06                         ; DUP
097d: 2a                         ; NOT
097e: 5e 08                      ; BRANCHBZ 8 (0977)
0980: 0c                         ; RET
;
0981: 18 3b f5 00 00             ; DICTP #> (f53b)
0986: 0c                         ; RET
;
0987: 18 2d f5 00 00             ; DICTP #P- (f52d)
098c: 05                         ; DROP
098d: 0b 9a 00 00 00             ; CALL #NEG (009a)
0992: 02                         ; FETCH
0993: 5b 04                      ; BRANCHFZ 4 (0998)
0995: 0e 2d                      ; CLITERAL 45
0997: 19                         ; EMIT
0998: 0c                         ; RET
;
0999: 18 20 f5 00 00             ; DICTP #P (f520)
099e: 0b 87 09 00 00             ; CALL #P- (0987)
09a3: 19                         ; EMIT
09a4: 06                         ; DUP
09a5: 2a                         ; NOT
09a6: 5e 04                      ; BRANCHBZ 4 (09a3)
09a8: 05                         ; DROP
09a9: 0c                         ; RET
;
09aa: 18 12 f5 00 00             ; DICTP (.) (f512)
09af: 0b 1b 09 00 00             ; CALL <# (091b)
09b4: 0b 72 09 00 00             ; CALL #S (0972)
09b9: 0b 81 09 00 00             ; CALL #> (0981)
09be: 0b 99 09 00 00             ; CALL #P (0999)
09c3: 0c                         ; RET
;
09c4: 18 06 f5 00 00             ; DICTP . (f506)
09c9: 0b aa 09 00 00             ; CALL (.) (09aa)
09ce: 0e 20                      ; CLITERAL 32
09d0: 19                         ; EMIT
09d1: 0c                         ; RET
;
09d2: 18 f9 f4 00 00             ; DICTP .2 (f4f9)
09d7: 0b 1b 09 00 00             ; CALL <# (091b)
09dc: 0b 4d 09 00 00             ; CALL # (094d)
09e1: 0b 4d 09 00 00             ; CALL # (094d)
09e6: 0b 81 09 00 00             ; CALL #> (0981)
09eb: 0b 99 09 00 00             ; CALL #P (0999)
09f0: 0c                         ; RET
;
09f1: 18 ec f4 00 00             ; DICTP .3 (f4ec)
09f6: 0b 1b 09 00 00             ; CALL <# (091b)
09fb: 0b 4d 09 00 00             ; CALL # (094d)
0a00: 0b 4d 09 00 00             ; CALL # (094d)
0a05: 0b 4d 09 00 00             ; CALL # (094d)
0a0a: 0b 81 09 00 00             ; CALL #> (0981)
0a0f: 0b 99 09 00 00             ; CALL #P (0999)
0a14: 0c                         ; RET
;
0a15: 18 df f4 00 00             ; DICTP .4 (f4df)
0a1a: 0b 1b 09 00 00             ; CALL <# (091b)
0a1f: 0b 4d 09 00 00             ; CALL # (094d)
0a24: 0b 4d 09 00 00             ; CALL # (094d)
0a29: 0b 4d 09 00 00             ; CALL # (094d)
0a2e: 0b 4d 09 00 00             ; CALL # (094d)
0a33: 0b 81 09 00 00             ; CALL #> (0981)
0a38: 0b 99 09 00 00             ; CALL #P (0999)
0a3d: 0c                         ; RET
;
0a3e: 18 d0 f4 00 00             ; DICTP HEX. (f4d0)
0a43: 0b 5e 00 00 00             ; CALL BASE (005e)
0a48: 02                         ; FETCH
0a49: 04                         ; SWAP
0a4a: 0b aa 03 00 00             ; CALL HEX (03aa)
0a4f: 0b aa 09 00 00             ; CALL (.) (09aa)
0a54: 0b 5e 00 00 00             ; CALL BASE (005e)
0a59: 03                         ; STORE
0a5a: 0c                         ; RET
;
0a5b: 18 c0 f4 00 00             ; DICTP HEX.2 (f4c0)
0a60: 0b 5e 00 00 00             ; CALL BASE (005e)
0a65: 02                         ; FETCH
0a66: 04                         ; SWAP
0a67: 0b aa 03 00 00             ; CALL HEX (03aa)
0a6c: 0b d2 09 00 00             ; CALL .2 (09d2)
0a71: 0b 5e 00 00 00             ; CALL BASE (005e)
0a76: 03                         ; STORE
0a77: 0c                         ; RET
;
0a78: 18 b0 f4 00 00             ; DICTP HEX.4 (f4b0)
0a7d: 0b 5e 00 00 00             ; CALL BASE (005e)
0a82: 02                         ; FETCH
0a83: 04                         ; SWAP
0a84: 0b aa 03 00 00             ; CALL HEX (03aa)
0a89: 0b 15 0a 00 00             ; CALL .4 (0a15)
0a8e: 0b 5e 00 00 00             ; CALL BASE (005e)
0a93: 03                         ; STORE
0a94: 0c                         ; RET
;
0a95: 18 9d f4 00 00             ; DICTP DECIMAL. (f49d)
0a9a: 0b 5e 00 00 00             ; CALL BASE (005e)
0a9f: 02                         ; FETCH
0aa0: 04                         ; SWAP
0aa1: 0b b8 03 00 00             ; CALL DECIMAL (03b8)
0aa6: 0b aa 09 00 00             ; CALL (.) (09aa)
0aab: 0b 5e 00 00 00             ; CALL BASE (005e)
0ab0: 03                         ; STORE
0ab1: 0c                         ; RET
;
0ab2: 18 89 f4 00 00             ; DICTP DECIMAL.3 (f489)
0ab7: 0b 5e 00 00 00             ; CALL BASE (005e)
0abc: 02                         ; FETCH
0abd: 04                         ; SWAP
0abe: 0b b8 03 00 00             ; CALL DECIMAL (03b8)
0ac3: 0b f1 09 00 00             ; CALL .3 (09f1)
0ac8: 0b 5e 00 00 00             ; CALL BASE (005e)
0acd: 03                         ; STORE
0ace: 0c                         ; RET
;
0acf: 18 77 f4 00 00             ; DICTP BINARY. (f477)
0ad4: 0b 5e 00 00 00             ; CALL BASE (005e)
0ad9: 02                         ; FETCH
0ada: 04                         ; SWAP
0adb: 0b d4 03 00 00             ; CALL BINARY (03d4)
0ae0: 0b aa 09 00 00             ; CALL (.) (09aa)
0ae5: 0b 5e 00 00 00             ; CALL BASE (005e)
0aea: 03                         ; STORE
0aeb: 0c                         ; RET
;
0aec: 18 69 f4 00 00             ; DICTP MIN (f469)
0af1: 1a                         ; OVER
0af2: 1a                         ; OVER
0af3: 17                         ; GT
0af4: 5b 02                      ; BRANCHFZ 2 (0af7)
0af6: 04                         ; SWAP
0af7: 05                         ; DROP
0af8: 0c                         ; RET
;
0af9: 18 5b f4 00 00             ; DICTP MAX (f45b)
0afe: 1a                         ; OVER
0aff: 1a                         ; OVER
0b00: 15                         ; LT
0b01: 5b 02                      ; BRANCHFZ 2 (0b04)
0b03: 04                         ; SWAP
0b04: 05                         ; DROP
0b05: 0c                         ; RET
;
0b06: 18 4e f4 00 00             ; DICTP .S (f44e)
0b0b: 0e 20                      ; CLITERAL 32
0b0d: 19                         ; EMIT
0b0e: 26                         ; DEPTH
0b0f: 0e 00                      ; CLITERAL 0
0b11: 15                         ; LT
0b12: 5b 1f                      ; BRANCHFZ 31 (0b32)
0b14: 07 10 53 74 61 63 6b 20 75 6e 64 65 72 66 6c 6f 77 21 00 ; SLITERAL (0b15) [Stack underflow!]
0b27: 0b 17 06 00 00             ; CALL COUNT (0617)
0b2c: 0b 21 06 00 00             ; CALL TYPE (0621)
0b31: fe                         ; RESET
0b32: 26                         ; DEPTH
0b33: 0e 00                      ; CLITERAL 0
0b35: 16                         ; EQ
0b36: 5b 0b                      ; BRANCHFZ 11 (0b42)
0b38: 0e 28                      ; CLITERAL 40
0b3a: 19                         ; EMIT
0b3b: 0e ed                      ; CLITERAL 237
0b3d: 19                         ; EMIT
0b3e: 0e 29                      ; CLITERAL 41
0b40: 19                         ; EMIT
0b41: 0c                         ; RET
0b42: 0e 28                      ; CLITERAL 40
0b44: 19                         ; EMIT
0b45: 0e 20                      ; CLITERAL 32
0b47: 19                         ; EMIT
0b48: 26                         ; DEPTH
0b49: 2e                         ; DEC
0b4a: 21                         ; DTOR
0b4b: 2b                         ; RFETCH
0b4c: 25                         ; PICK
0b4d: 0b c4 09 00 00             ; CALL . (09c4)
0b52: 2b                         ; RFETCH
0b53: 5b 06                      ; BRANCHFZ 6 (0b5a)
0b55: 22                         ; RTOD
0b56: 2e                         ; DEC
0b57: 21                         ; DTOR
0b58: 5a 07                      ; BRANCHF 7 (0b60)
0b5a: 22                         ; RTOD
0b5b: 05                         ; DROP
0b5c: 0e 29                      ; CLITERAL 41
0b5e: 19                         ; EMIT
0b5f: 0c                         ; RET
0b60: 5d 16                      ; BRANCHB 22 (0b4b)
0b62: 0c                         ; RET
;
0b63: 18 3a f4 00 00             ; DICTP .(MEM_SZ) (f43a)
0b68: 07 08 4d 65 6d 6f 72 79 3a 20 00 ; SLITERAL (0b69) [Memory: ]
0b73: 0b 37 06 00 00             ; CALL CT (0637)
0b78: 0b e5 04 00 00             ; CALL MEM_SZ (04e5)
0b7d: 06                         ; DUP
0b7e: 0b 3e 0a 00 00             ; CALL HEX. (0a3e)
0b83: 07 02 20 28 00             ; SLITERAL (0b84) [ (]
0b88: 0b 37 06 00 00             ; CALL CT (0637)
0b8d: 0b aa 09 00 00             ; CALL (.) (09aa)
0b92: 07 01 29 00                ; SLITERAL (0b93) [)]
0b96: 0b 37 06 00 00             ; CALL CT (0637)
0b9b: 0c                         ; RET
;
0b9c: 18 28 f4 00 00             ; DICTP .(HERE) (f428)
0ba1: 07 06 48 45 52 45 3a 20 00 ; SLITERAL (0ba2) [HERE: ]
0baa: 0b 37 06 00 00             ; CALL CT (0637)
0baf: 0b fd 00 00 00             ; CALL HERE (00fd)
0bb4: 06                         ; DUP
0bb5: 0b 3e 0a 00 00             ; CALL HEX. (0a3e)
0bba: 07 02 20 28 00             ; SLITERAL (0bbb) [ (]
0bbf: 0b 37 06 00 00             ; CALL CT (0637)
0bc4: 0b aa 09 00 00             ; CALL (.) (09aa)
0bc9: 07 01 29 00                ; SLITERAL (0bca) [)]
0bcd: 0b 37 06 00 00             ; CALL CT (0637)
0bd2: 0c                         ; RET
;
0bd3: 18 16 f4 00 00             ; DICTP .(LAST) (f416)
0bd8: 07 06 4c 41 53 54 3a 20 00 ; SLITERAL (0bd9) [LAST: ]
0be1: 0b 37 06 00 00             ; CALL CT (0637)
0be6: 0b 09 01 00 00             ; CALL LAST (0109)
0beb: 06                         ; DUP
0bec: 0b 3e 0a 00 00             ; CALL HEX. (0a3e)
0bf1: 07 02 20 28 00             ; SLITERAL (0bf2) [ (]
0bf6: 0b 37 06 00 00             ; CALL CT (0637)
0bfb: 0b aa 09 00 00             ; CALL (.) (09aa)
0c00: 07 01 29 00                ; SLITERAL (0c01) [)]
0c04: 0b 37 06 00 00             ; CALL CT (0637)
0c09: 0c                         ; RET
;
0c0a: 18 00 f4 00 00             ; DICTP .WORD-SHORT (f400)
0c0f: 06                         ; DUP
0c10: 0b 2a 07 00 00             ; CALL DICT>NAME (072a)
0c15: 0b 37 06 00 00             ; CALL CT (0637)
0c1a: 0e 20                      ; CLITERAL 32
0c1c: 19                         ; EMIT
0c1d: 02                         ; FETCH
0c1e: 0c                         ; RET
;
0c1f: 18 f0 f3 00 00             ; DICTP WORDS (f3f0)
0c24: 0b 09 01 00 00             ; CALL LAST (0109)
0c29: 06                         ; DUP
0c2a: 02                         ; FETCH
0c2b: 2a                         ; NOT
0c2c: 5b 09                      ; BRANCHFZ 9 (0c36)
0c2e: 05                         ; DROP
0c2f: 0e 0d                      ; CLITERAL 13
0c31: 19                         ; EMIT
0c32: 0e 0a                      ; CLITERAL 10
0c34: 19                         ; EMIT
0c35: 0c                         ; RET
0c36: 0b 0a 0c 00 00             ; CALL .WORD-SHORT (0c0a)
0c3b: 5d 13                      ; BRANCHB 19 (0c29)
0c3d: 0c                         ; RET
;
0c3e: 18 db f3 00 00             ; DICTP .WORD-LONG (f3db)
0c43: 06                         ; DUP
0c44: 0b 3e 0a 00 00             ; CALL HEX. (0a3e)
0c49: 0e 3a                      ; CLITERAL 58
0c4b: 19                         ; EMIT
0c4c: 0e 20                      ; CLITERAL 32
0c4e: 19                         ; EMIT
0c4f: 06                         ; DUP
0c50: 0b 2a 07 00 00             ; CALL DICT>NAME (072a)
0c55: 0b 37 06 00 00             ; CALL CT (0637)
0c5a: 0e 20                      ; CLITERAL 32
0c5c: 19                         ; EMIT
0c5d: 06                         ; DUP
0c5e: 0b 5e 07 00 00             ; CALL DICT.GetXT (075e)
0c63: 0e 28                      ; CLITERAL 40
0c65: 19                         ; EMIT
0c66: 0b 78 0a 00 00             ; CALL HEX.4 (0a78)
0c6b: 0e 29                      ; CLITERAL 41
0c6d: 19                         ; EMIT
0c6e: 06                         ; DUP
0c6f: 0b 1e 07 00 00             ; CALL DICT>FLAGS (071e)
0c74: 0f                         ; CFETCH
0c75: 06                         ; DUP
0c76: 07 09 2c 20 46 6c 61 67 73 3a 20 00 ; SLITERAL (0c77) [, Flags: ]
0c82: 0b 37 06 00 00             ; CALL CT (0637)
0c87: 0b 5b 0a 00 00             ; CALL HEX.2 (0a5b)
0c8c: 06                         ; DUP
0c8d: 0b 9f 07 00 00             ; CALL FLAGS.ISINLINE? (079f)
0c92: 5b 12                      ; BRANCHFZ 18 (0ca5)
0c94: 07 09 20 28 49 4e 4c 49 4e 45 29 00 ; SLITERAL (0c95) [ (INLINE)]
0ca0: 0b 37 06 00 00             ; CALL CT (0637)
0ca5: 0b 96 07 00 00             ; CALL FLAGS.ISIMMEDIATE? (0796)
0caa: 5b 15                      ; BRANCHFZ 21 (0cc0)
0cac: 07 0c 20 28 49 4d 4d 45 44 49 41 54 45 29 00 ; SLITERAL (0cad) [ (IMMEDIATE)]
0cbb: 0b 37 06 00 00             ; CALL CT (0637)
0cc0: 0e 0d                      ; CLITERAL 13
0cc2: 19                         ; EMIT
0cc3: 0e 0a                      ; CLITERAL 10
0cc5: 19                         ; EMIT
0cc6: 02                         ; FETCH
0cc7: 0c                         ; RET
;
0cc8: 18 ca f3 00 00             ; DICTP WORDSV (f3ca)
0ccd: 0b d3 0b 00 00             ; CALL .(LAST) (0bd3)
0cd2: 0e 0d                      ; CLITERAL 13
0cd4: 19                         ; EMIT
0cd5: 0e 0a                      ; CLITERAL 10
0cd7: 19                         ; EMIT
0cd8: 0b 09 01 00 00             ; CALL LAST (0109)
0cdd: 06                         ; DUP
0cde: 02                         ; FETCH
0cdf: 2a                         ; NOT
0ce0: 5b 09                      ; BRANCHFZ 9 (0cea)
0ce2: 05                         ; DROP
0ce3: 0e 0d                      ; CLITERAL 13
0ce5: 19                         ; EMIT
0ce6: 0e 0a                      ; CLITERAL 10
0ce8: 19                         ; EMIT
0ce9: 0c                         ; RET
0cea: 0b 3e 0c 00 00             ; CALL .WORD-LONG (0c3e)
0cef: 5d 13                      ; BRANCHB 19 (0cdd)
0cf1: 0c                         ; RET
;
0cf2: 18 b6 f3 00 00             ; DICTP NUM-WORDS (f3b6)
0cf7: 0e 00                      ; CLITERAL 0
0cf9: 21                         ; DTOR
0cfa: 0b 09 01 00 00             ; CALL LAST (0109)
0cff: 06                         ; DUP
0d00: 02                         ; FETCH
0d01: 2a                         ; NOT
0d02: 5b 0a                      ; BRANCHFZ 10 (0d0d)
0d04: 05                         ; DROP
0d05: 22                         ; RTOD
0d06: 0e 0d                      ; CLITERAL 13
0d08: 19                         ; EMIT
0d09: 0e 0a                      ; CLITERAL 10
0d0b: 19                         ; EMIT
0d0c: 0c                         ; RET
0d0d: 22                         ; RTOD
0d0e: 2c                         ; INC
0d0f: 21                         ; DTOR
0d10: 02                         ; FETCH
0d11: 5d 13                      ; BRANCHB 19 (0cff)
0d13: 0c                         ; RET
;
0d14: 18 a5 f3 00 00             ; DICTP .lastx (f3a5)
0d19: 0e 0d                      ; CLITERAL 13
0d1b: 19                         ; EMIT
0d1c: 0e 0a                      ; CLITERAL 10
0d1e: 19                         ; EMIT
0d1f: 0b 09 01 00 00             ; CALL LAST (0109)
0d24: 04                         ; SWAP
0d25: 04                         ; SWAP
0d26: 0b 3e 0c 00 00             ; CALL .WORD-LONG (0c3e)
0d2b: 04                         ; SWAP
0d2c: 2e                         ; DEC
0d2d: 06                         ; DUP
0d2e: 5f 0a                      ; BRANCHBNZ 10 (0d25)
0d30: 05                         ; DROP
0d31: 05                         ; DROP
0d32: 0c                         ; RET
;
0d33: 18 93 f3 00 00             ; DICTP EXECUTE (f393)
0d38: 22                         ; RTOD
0d39: 05                         ; DROP
0d3a: 21                         ; DTOR
0d3b: 0c                         ; RET
;
0d3c: 18 80 f3 00 00             ; DICTP find.ret (f380)
0d41: 06                         ; DUP
0d42: 0f                         ; CFETCH
0d43: 0e 0c                      ; CLITERAL 12
0d45: 16                         ; EQ
0d46: 5b 02                      ; BRANCHFZ 2 (0d49)
0d48: 0c                         ; RET
0d49: 2c                         ; INC
0d4a: 5d 0a                      ; BRANCHB 10 (0d41)
0d4c: 0c                         ; RET
;
0d4d: 18 6d f3 00 00             ; DICTP (inline) (f36d)
0d52: 1a                         ; OVER
0d53: 1a                         ; OVER
0d54: 15                         ; LT
0d55: 5b 02                      ; BRANCHFZ 2 (0d58)
0d57: 04                         ; SWAP
0d58: 06                         ; DUP
0d59: 0f                         ; CFETCH
0d5a: 0b 15 01 00 00             ; CALL C, (0115)
0d5f: 2c                         ; INC
0d60: 1a                         ; OVER
0d61: 1a                         ; OVER
0d62: 17                         ; GT
0d63: 5f 0c                      ; BRANCHBNZ 12 (0d58)
0d65: 05                         ; DROP
0d66: 05                         ; DROP
0d67: 0c                         ; RET
;
0d68: 18 5d f3 00 00             ; DICTP DOES> (f35d)
0d6d: 22                         ; RTOD
0d6e: 06                         ; DUP
0d6f: 0b 3c 0d 00 00             ; CALL find.ret (0d3c)
0d74: 06                         ; DUP
0d75: 21                         ; DTOR
0d76: 2c                         ; INC
0d77: 0b 4d 0d 00 00             ; CALL (inline) (0d4d)
0d7c: 0c                         ; RET
;
0d7d: 18 47 f3 00 00             ; DICTP Copy.INLINE (f347)
0d82: 06                         ; DUP
0d83: 0f                         ; CFETCH
0d84: 0e 18                      ; CLITERAL 24
0d86: 16                         ; EQ
0d87: 5b 05                      ; BRANCHFZ 5 (0d8d)
0d89: 2c                         ; INC
0d8a: 0e 04                      ; CLITERAL 4
0d8c: 11                         ; ADD
0d8d: 06                         ; DUP
0d8e: 0b 3c 0d 00 00             ; CALL find.ret (0d3c)
0d93: 0b 4d 0d 00 00             ; CALL (inline) (0d4d)
0d98: 0c                         ; RET
;
0d99: 18 36 f3 00 00             ; DICTP strlen (f336)
0d9e: 0e 00                      ; CLITERAL 0
0da0: 04                         ; SWAP
0da1: 04                         ; SWAP
0da2: 1a                         ; OVER
0da3: 0f                         ; CFETCH
0da4: 06                         ; DUP
0da5: 5b 07                      ; BRANCHFZ 7 (0dad)
0da7: 05                         ; DROP
0da8: 2c                         ; INC
0da9: 04                         ; SWAP
0daa: 2c                         ; INC
0dab: 0e 01                      ; CLITERAL 1
0dad: 5f 0d                      ; BRANCHBNZ 13 (0da1)
0daf: 04                         ; SWAP
0db0: 05                         ; DROP
0db1: 0c                         ; RET
;
0db2: 18 26 f3 00 00             ; DICTP cstr, (f326)
0db7: 06                         ; DUP
0db8: 0f                         ; CFETCH
0db9: 1a                         ; OVER
0dba: 11                         ; ADD
0dbb: 2c                         ; INC
0dbc: 2c                         ; INC
0dbd: 0b 4d 0d 00 00             ; CALL (inline) (0d4d)
0dc2: 0c                         ; RET
;
0dc3: 18 12 f3 00 00             ; DICTP [COMPILE] (f312)
0dc8: 0b 9f 07 00 00             ; CALL FLAGS.ISINLINE? (079f)
0dcd: 5b 08                      ; BRANCHFZ 8 (0dd6)
0dcf: 0b 7d 0d 00 00             ; CALL Copy.INLINE (0d7d)
0dd4: 5a 0b                      ; BRANCHF 11 (0de0)
0dd6: 0b c7 01 00 00             ; CALL CALL (01c7)
0ddb: 0b 2d 01 00 00             ; CALL , (012d)
0de0: 0c                         ; RET
;
0de1: 18 fc f2 00 00             ; DICTP executeWord (f2fc)
0de6: 21                         ; DTOR
0de7: 2b                         ; RFETCH
0de8: 0b c8 07 00 00             ; CALL findInDict (07c8)
0ded: 5b 29                      ; BRANCHFZ 41 (0e17)
0def: 22                         ; RTOD
0df0: 05                         ; DROP
0df1: 0b f6 03 00 00             ; CALL ?COMPILING (03f6)
0df6: 5b 18                      ; BRANCHFZ 24 (0e0f)
0df8: 06                         ; DUP
0df9: 0b 96 07 00 00             ; CALL FLAGS.ISIMMEDIATE? (0796)
0dfe: 5b 09                      ; BRANCHFZ 9 (0e08)
0e00: 05                         ; DROP
0e01: 0b 33 0d 00 00             ; CALL EXECUTE (0d33)
0e06: 5a 06                      ; BRANCHF 6 (0e0d)
0e08: 0b c3 0d 00 00             ; CALL [COMPILE] (0dc3)
0e0d: 5a 07                      ; BRANCHF 7 (0e15)
0e0f: 05                         ; DROP
0e10: 0b 33 0d 00 00             ; CALL EXECUTE (0d33)
0e15: 5a 46                      ; BRANCHF 70 (0e5c)
0e17: 05                         ; DROP
0e18: 05                         ; DROP
0e19: 2b                         ; RFETCH
0e1a: 0b b1 08 00 00             ; CALL isNumber? (08b1)
0e1f: 5b 2e                      ; BRANCHFZ 46 (0e4e)
0e21: 0b f6 03 00 00             ; CALL ?COMPILING (03f6)
0e26: 5b 25                      ; BRANCHFZ 37 (0e4c)
0e28: 06                         ; DUP
0e29: 0e 00                      ; CLITERAL 0
0e2b: 0e ff                      ; CLITERAL 255
0e2d: 0b bc 06 00 00             ; CALL BETWEEN (06bc)
0e32: 5b 0f                      ; BRANCHFZ 15 (0e42)
0e34: 0e 0e                      ; CLITERAL 14
0e36: 0b 15 01 00 00             ; CALL C, (0115)
0e3b: 0b 15 01 00 00             ; CALL C, (0115)
0e40: 5a 0b                      ; BRANCHF 11 (0e4c)
0e42: 0b 63 01 00 00             ; CALL LITERAL (0163)
0e47: 0b 2d 01 00 00             ; CALL , (012d)
0e4c: 5a 0d                      ; BRANCHF 13 (0e5a)
0e4e: 05                         ; DROP
0e4f: 07 02 3f 3f 00             ; SLITERAL (0e50) [??]
0e54: 0b 37 06 00 00             ; CALL CT (0637)
0e59: fe                         ; RESET
0e5a: 22                         ; RTOD
0e5b: 05                         ; DROP
0e5c: 0c                         ; RET
;
0e5d: 18 e5 f2 00 00             ; DICTP executeInput (f2e5)
0e62: 0b 8b 00 00 00             ; CALL >IN (008b)
0e67: 02                         ; FETCH
0e68: 0b cf 06 00 00             ; CALL skipWS (06cf)
0e6d: 0b 8b 00 00 00             ; CALL >IN (008b)
0e72: 03                         ; STORE
0e73: 0b 8b 00 00 00             ; CALL >IN (008b)
0e78: 02                         ; FETCH
0e79: 0f                         ; CFETCH
0e7a: 5b 19                      ; BRANCHFZ 25 (0e94)
0e7c: 0b 8b 00 00 00             ; CALL >IN (008b)
0e81: 02                         ; FETCH
0e82: 0b e9 06 00 00             ; CALL getOneWord (06e9)
0e87: 0b 8b 00 00 00             ; CALL >IN (008b)
0e8c: 03                         ; STORE
0e8d: 0b e1 0d 00 00             ; CALL executeWord (0de1)
0e92: 5a 02                      ; BRANCHF 2 (0e95)
0e94: 0c                         ; RET
0e95: 5d 34                      ; BRANCHB 52 (0e62)
0e97: 0c                         ; RET
;
0e98: 18 d7 f2 00 00             ; DICTP Pad (f2d7)
0e9d: 0b 09 01 00 00             ; CALL LAST (0109)
0ea2: 0e c8                      ; CLITERAL 200
0ea4: 12                         ; SUB
0ea5: 06                         ; DUP
0ea6: 0b fd 00 00 00             ; CALL HERE (00fd)
0eab: 15                         ; LT
0eac: 5b 13                      ; BRANCHFZ 19 (0ec0)
0eae: 07 0e 4f 75 74 20 6f 66 20 4d 65 6d 6f 72 79 21 00 ; SLITERAL (0eaf) [Out of Memory!]
0ebf: fe                         ; RESET
0ec0: 0c                         ; RET
;
0ec1: 18 c5 f2 00 00             ; DICTP getLine (f2c5)
0ec6: 0e 00                      ; CLITERAL 0
0ec8: 0b 98 0e 00 00             ; CALL Pad (0e98)
0ecd: 06                         ; DUP
0ece: 2c                         ; INC
0ecf: 0b 8b 00 00 00             ; CALL >IN (008b)
0ed4: 03                         ; STORE
0ed5: 10                         ; CSTORE
0ed6: 0e 00                      ; CLITERAL 0
0ed8: 0b 8b 00 00 00             ; CALL >IN (008b)
0edd: 02                         ; FETCH
0ede: 10                         ; CSTORE
0edf: 27                         ; GETCH
0ee0: 06                         ; DUP
0ee1: 0e 0d                      ; CLITERAL 13
0ee3: 16                         ; EQ
0ee4: 5b 0b                      ; BRANCHFZ 11 (0ef0)
0ee6: 05                         ; DROP
0ee7: 0b 98 0e 00 00             ; CALL Pad (0e98)
0eec: 0e 20                      ; CLITERAL 32
0eee: 19                         ; EMIT
0eef: 0c                         ; RET
0ef0: 06                         ; DUP
0ef1: 0e 09                      ; CLITERAL 9
0ef3: 16                         ; EQ
0ef4: 5b 04                      ; BRANCHFZ 4 (0ef9)
0ef6: 05                         ; DROP
0ef7: 0e 20                      ; CLITERAL 32
0ef9: 06                         ; DUP
0efa: 0e 03                      ; CLITERAL 3
0efc: 16                         ; EQ
0efd: 5b 02                      ; BRANCHFZ 2 (0f00)
0eff: ff                         ; BYE
0f00: 06                         ; DUP
0f01: 0e 08                      ; CLITERAL 8
0f03: 16                         ; EQ
0f04: 5b 2b                      ; BRANCHFZ 43 (0f30)
0f06: 0b 98 0e 00 00             ; CALL Pad (0e98)
0f0b: 0f                         ; CFETCH
0f0c: 0e 00                      ; CLITERAL 0
0f0e: 17                         ; GT
0f0f: 5b 1d                      ; BRANCHFZ 29 (0f2d)
0f11: 0b 98 0e 00 00             ; CALL Pad (0e98)
0f16: 06                         ; DUP
0f17: 0f                         ; CFETCH
0f18: 2e                         ; DEC
0f19: 04                         ; SWAP
0f1a: 10                         ; CSTORE
0f1b: 0b 8b 00 00 00             ; CALL >IN (008b)
0f20: 06                         ; DUP
0f21: 02                         ; FETCH
0f22: 2e                         ; DEC
0f23: 04                         ; SWAP
0f24: 03                         ; STORE
0f25: 06                         ; DUP
0f26: 19                         ; EMIT
0f27: 0e 20                      ; CLITERAL 32
0f29: 19                         ; EMIT
0f2a: 19                         ; EMIT
0f2b: 5a 02                      ; BRANCHF 2 (0f2e)
0f2d: 05                         ; DROP
0f2e: 5a 2d                      ; BRANCHF 45 (0f5c)
0f30: 06                         ; DUP
0f31: 0e 20                      ; CLITERAL 32
0f33: 0e 7f                      ; CLITERAL 127
0f35: 0b bc 06 00 00             ; CALL BETWEEN (06bc)
0f3a: 5b 20                      ; BRANCHFZ 32 (0f5b)
0f3c: 06                         ; DUP
0f3d: 19                         ; EMIT
0f3e: 0b 8b 00 00 00             ; CALL >IN (008b)
0f43: 02                         ; FETCH
0f44: 10                         ; CSTORE
0f45: 0b 8b 00 00 00             ; CALL >IN (008b)
0f4a: 06                         ; DUP
0f4b: 02                         ; FETCH
0f4c: 2c                         ; INC
0f4d: 04                         ; SWAP
0f4e: 03                         ; STORE
0f4f: 0b 98 0e 00 00             ; CALL Pad (0e98)
0f54: 06                         ; DUP
0f55: 0f                         ; CFETCH
0f56: 2c                         ; INC
0f57: 04                         ; SWAP
0f58: 10                         ; CSTORE
0f59: 5a 02                      ; BRANCHF 2 (0f5c)
0f5b: 05                         ; DROP
0f5c: 5d 87                      ; BRANCHB 135 (0ed6)
0f5e: 0c                         ; RET
;
0f5f: 18 b2 f2 00 00             ; DICTP strcpy2c (f2b2)
0f64: 06                         ; DUP
0f65: 21                         ; DTOR
0f66: 0e 00                      ; CLITERAL 0
0f68: 1a                         ; OVER
0f69: 10                         ; CSTORE
0f6a: 2c                         ; INC
0f6b: 04                         ; SWAP
0f6c: 06                         ; DUP
0f6d: 0f                         ; CFETCH
0f6e: 06                         ; DUP
0f6f: 5b 11                      ; BRANCHFZ 17 (0f81)
0f71: 0e 02                      ; CLITERAL 2
0f73: 25                         ; PICK
0f74: 10                         ; CSTORE
0f75: 04                         ; SWAP
0f76: 2c                         ; INC
0f77: 04                         ; SWAP
0f78: 2c                         ; INC
0f79: 2b                         ; RFETCH
0f7a: 06                         ; DUP
0f7b: 0f                         ; CFETCH
0f7c: 2c                         ; INC
0f7d: 04                         ; SWAP
0f7e: 10                         ; CSTORE
0f7f: 5a 0a                      ; BRANCHF 10 (0f8a)
0f81: 21                         ; DTOR
0f82: 04                         ; SWAP
0f83: 22                         ; RTOD
0f84: 04                         ; SWAP
0f85: 10                         ; CSTORE
0f86: 05                         ; DROP
0f87: 22                         ; RTOD
0f88: 05                         ; DROP
0f89: 0c                         ; RET
0f8a: 5d 1f                      ; BRANCHB 31 (0f6c)
0f8c: 0c                         ; RET
;
0f8d: 18 9c f2 00 00             ; DICTP Define-Word (f29c)
0f92: 0b 09 01 00 00             ; CALL LAST (0109)
0f97: 1a                         ; OVER
0f98: 0b 99 0d 00 00             ; CALL strlen (0d99)
0f9d: 0e 02                      ; CLITERAL 2
0f9f: 0e 04                      ; CLITERAL 4
0fa1: 13                         ; MUL
0fa2: 0e 03                      ; CLITERAL 3
0fa4: 11                         ; ADD
0fa5: 11                         ; ADD
0fa6: 12                         ; SUB
0fa7: 06                         ; DUP
0fa8: 21                         ; DTOR
0fa9: 21                         ; DTOR
0faa: 0b 09 01 00 00             ; CALL LAST (0109)
0faf: 2b                         ; RFETCH
0fb0: 03                         ; STORE
0fb1: 22                         ; RTOD
0fb2: 0e 04                      ; CLITERAL 4
0fb4: 11                         ; ADD
0fb5: 21                         ; DTOR
0fb6: 0b fd 00 00 00             ; CALL HERE (00fd)
0fbb: 2b                         ; RFETCH
0fbc: 03                         ; STORE
0fbd: 22                         ; RTOD
0fbe: 0e 04                      ; CLITERAL 4
0fc0: 11                         ; ADD
0fc1: 21                         ; DTOR
0fc2: 0e 00                      ; CLITERAL 0
0fc4: 2b                         ; RFETCH
0fc5: 10                         ; CSTORE
0fc6: 22                         ; RTOD
0fc7: 2c                         ; INC
0fc8: 21                         ; DTOR
0fc9: 22                         ; RTOD
0fca: 0b 5f 0f 00 00             ; CALL strcpy2c (0f5f)
0fcf: 22                         ; RTOD
0fd0: 0b 4f 00 00 00             ; CALL (LAST) (004f)
0fd5: 03                         ; STORE
0fd6: 0c                         ; RET
;
0fd7: 18 86 f2 00 00             ; DICTP CREATE-NAME (f286)
0fdc: 0b 8b 00 00 00             ; CALL >IN (008b)
0fe1: 02                         ; FETCH
0fe2: 0b cf 06 00 00             ; CALL skipWS (06cf)
0fe7: 0b 8b 00 00 00             ; CALL >IN (008b)
0fec: 03                         ; STORE
0fed: 0b 8b 00 00 00             ; CALL >IN (008b)
0ff2: 02                         ; FETCH
0ff3: 0f                         ; CFETCH
0ff4: 5b 30                      ; BRANCHFZ 48 (1025)
0ff6: 0b 8b 00 00 00             ; CALL >IN (008b)
0ffb: 02                         ; FETCH
0ffc: 0b e9 06 00 00             ; CALL getOneWord (06e9)
1001: 0b 8b 00 00 00             ; CALL >IN (008b)
1006: 03                         ; STORE
1007: 06                         ; DUP
1008: 0f                         ; CFETCH
1009: 5b 19                      ; BRANCHFZ 25 (1023)
100b: 0b 8d 0f 00 00             ; CALL Define-Word (0f8d)
1010: 0e 18                      ; CLITERAL 24
1012: 0b 15 01 00 00             ; CALL C, (0115)
1017: 0b 09 01 00 00             ; CALL LAST (0109)
101c: 0b 2d 01 00 00             ; CALL , (012d)
1021: 5a 03                      ; BRANCHF 3 (1025)
1023: 05                         ; DROP
1024: fe                         ; RESET
1025: 0c                         ; RET
;
1026: 18 7a f2 00 00             ; DICTP : (f27a)
102b: 0b d7 0f 00 00             ; CALL CREATE-NAME (0fd7)
1030: 0b 6d 00 00 00             ; CALL STATE (006d)
1035: 0b e2 03 00 00             ; CALL ON (03e2)
103a: 0c                         ; RET
;
103b: 18 68 f2 00 00             ; DICTP :NONAME (f268)
1040: 0b fd 00 00 00             ; CALL HERE (00fd)
1045: 0b 6d 00 00 00             ; CALL STATE (006d)
104a: 0b e2 03 00 00             ; CALL ON (03e2)
104f: 0c                         ; RET
;
1050: 18 5c f2 00 00             ; DICTP ; (f25c)
1055: 0b d4 01 00 00             ; CALL RET (01d4)
105a: 0b 6d 00 00 00             ; CALL STATE (006d)
105f: 0b ec 03 00 00             ; CALL OFF (03ec)
1064: 0c                         ; RET
;
1065: 18 47 f2 00 00             ; DICTP ForgetLast (f247)
106a: 0b 09 01 00 00             ; CALL LAST (0109)
106f: 0e 04                      ; CLITERAL 4
1071: 11                         ; ADD
1072: 02                         ; FETCH
1073: 0b 40 00 00 00             ; CALL (HERE) (0040)
1078: 03                         ; STORE
1079: 0b 09 01 00 00             ; CALL LAST (0109)
107e: 02                         ; FETCH
107f: 0b 4f 00 00 00             ; CALL (LAST) (004f)
1084: 03                         ; STORE
1085: 0c                         ; RET
;
1086: 18 32 f2 00 00             ; DICTP resetState (f232)
108b: 0b f6 03 00 00             ; CALL ?COMPILING (03f6)
1090: 5b 06                      ; BRANCHFZ 6 (1097)
1092: 0b 65 10 00 00             ; CALL ForgetLast (1065)
1097: 0b 6d 00 00 00             ; CALL STATE (006d)
109c: 0b ec 03 00 00             ; CALL OFF (03ec)
10a1: 0b b8 03 00 00             ; CALL DECIMAL (03b8)
10a6: 0b b8 00 00 00             ; CALL INPUT-FP (00b8)
10ab: 02                         ; FETCH
10ac: 0b 24 05 00 00             ; CALL ?DUP (0524)
10b1: 5b 0a                      ; BRANCHFZ 10 (10bc)
10b3: 20                         ; FCLOSE
10b4: 0e 00                      ; CLITERAL 0
10b6: 0b b8 00 00 00             ; CALL INPUT-FP (00b8)
10bb: 03                         ; STORE
10bc: 0c                         ; RET
;
10bd: 18 22 f2 00 00             ; DICTP ALLOT (f222)
10c2: 0b fd 00 00 00             ; CALL HERE (00fd)
10c7: 11                         ; ADD
10c8: 0b 40 00 00 00             ; CALL (HERE) (0040)
10cd: 03                         ; STORE
10ce: 0c                         ; RET
;
10cf: 18 16 f2 00 00             ; DICTP ? (f216)
10d4: 02                         ; FETCH
10d5: 0b c4 09 00 00             ; CALL . (09c4)
10da: 0c                         ; RET
;
10db: 18 09 f2 00 00             ; DICTP C? (f209)
10e0: 0f                         ; CFETCH
10e1: 0b c4 09 00 00             ; CALL . (09c4)
10e6: 0c                         ; RET
;
10e7: 18 fa f1 00 00             ; DICTP FREE (f1fa)
10ec: 0b 09 01 00 00             ; CALL LAST (0109)
10f1: 0b fd 00 00 00             ; CALL HERE (00fd)
10f6: 12                         ; SUB
10f7: 0c                         ; RET
;
10f8: 18 ea f1 00 00             ; DICTP .FREE (f1ea)
10fd: 0b e7 10 00 00             ; CALL FREE (10e7)
1102: 0b aa 09 00 00             ; CALL (.) (09aa)
1107: 07 0c 20 62 79 74 65 73 20 66 72 65 65 2e 00 ; SLITERAL (1108) [ bytes free.]
1116: 0b 37 06 00 00             ; CALL CT (0637)
111b: 0c                         ; RET
;
111c: 18 d7 f1 00 00             ; DICTP mainLoop (f1d7)
1121: 0b 86 10 00 00             ; CALL resetState (1086)
1126: 0b f6 03 00 00             ; CALL ?COMPILING (03f6)
112b: 2a                         ; NOT
112c: 5b 11                      ; BRANCHFZ 17 (113e)
112e: 07 03 20 4f 4b 00          ; SLITERAL (112f) [ OK]
1134: 0b 37 06 00 00             ; CALL CT (0637)
1139: 0b 06 0b 00 00             ; CALL .S (0b06)
113e: 0e 0d                      ; CLITERAL 13
1140: 19                         ; EMIT
1141: 0e 0a                      ; CLITERAL 10
1143: 19                         ; EMIT
1144: 0b c1 0e 00 00             ; CALL getLine (0ec1)
1149: 2c                         ; INC
114a: 0b 8b 00 00 00             ; CALL >IN (008b)
114f: 03                         ; STORE
1150: 0b 5d 0e 00 00             ; CALL executeInput (0e5d)
1155: 0e 20                      ; CLITERAL 32
1157: 19                         ; EMIT
1158: 5d 33                      ; BRANCHB 51 (1126)
115a: 0c                         ; RET
;
115b: 18 c8 f1 00 00             ; DICTP main (f1c8)
1160: 0b 6d 00 00 00             ; CALL STATE (006d)
1165: 02                         ; FETCH
1166: 0e 63                      ; CLITERAL 99
1168: 16                         ; EQ
1169: 5b 19                      ; BRANCHFZ 25 (1183)
116b: 0b 6d 00 00 00             ; CALL STATE (006d)
1170: 0b ec 03 00 00             ; CALL OFF (03ec)
1175: 07 06 48 65 6c 6c 6f 2e 00 ; SLITERAL (1176) [Hello.]
117e: 0b 37 06 00 00             ; CALL CT (0637)
1183: 0b 1c 11 00 00             ; CALL mainLoop (111c)
1188: 0c                         ; RET
;
1189: 18 b1 f1 00 00             ; DICTP file-getLine (f1b1)
118e: 0b 98 0e 00 00             ; CALL Pad (0e98)
1193: 04                         ; SWAP
1194: 0e c8                      ; CLITERAL 200
1196: 04                         ; SWAP
1197: 1e                         ; FREADLINE
1198: 0b 98 0e 00 00             ; CALL Pad (0e98)
119d: 04                         ; SWAP
119e: 0c                         ; RET
;
119f: 18 a2 f1 00 00             ; DICTP load (f1a2)
11a4: 0e 00                      ; CLITERAL 0
11a6: 0e 00                      ; CLITERAL 0
11a8: 1c                         ; FOPEN
11a9: 2a                         ; NOT
11aa: 5b 1b                      ; BRANCHFZ 27 (11c6)
11ac: 07 11 43 61 6e 6e 6f 74 20 6f 70 65 6e 20 66 69 6c 65 2e 00 ; SLITERAL (11ad) [Cannot open file.]
11c0: 0b 37 06 00 00             ; CALL CT (0637)
11c5: 0c                         ; RET
11c6: 0b b8 00 00 00             ; CALL INPUT-FP (00b8)
11cb: 03                         ; STORE
11cc: 0b b8 00 00 00             ; CALL INPUT-FP (00b8)
11d1: 02                         ; FETCH
11d2: 0b 89 11 00 00             ; CALL file-getLine (1189)
11d7: 5b 0f                      ; BRANCHFZ 15 (11e7)
11d9: 2c                         ; INC
11da: 0b 8b 00 00 00             ; CALL >IN (008b)
11df: 03                         ; STORE
11e0: 0b 5d 0e 00 00             ; CALL executeInput (0e5d)
11e5: 5a 12                      ; BRANCHF 18 (11f8)
11e7: 05                         ; DROP
11e8: 0b b8 00 00 00             ; CALL INPUT-FP (00b8)
11ed: 02                         ; FETCH
11ee: 20                         ; FCLOSE
11ef: 0e 00                      ; CLITERAL 0
11f1: 0b b8 00 00 00             ; CALL INPUT-FP (00b8)
11f6: 03                         ; STORE
11f7: 0c                         ; RET
11f8: 5d 2d                      ; BRANCHB 45 (11cc)
11fa: 0c                         ; RET
;
11fb: 18 8e f1 00 00             ; DICTP STR.EMPTY (f18e)
1200: 0e 00                      ; CLITERAL 0
1202: 1a                         ; OVER
1203: 03                         ; STORE
1204: 0c                         ; RET
;
1205: 18 7c f1 00 00             ; DICTP STR.LEN (f17c)
120a: 06                         ; DUP
120b: 0f                         ; CFETCH
120c: 0c                         ; RET
;
120d: 18 69 f1 00 00             ; DICTP STR.CATC (f169)
1212: 1a                         ; OVER
1213: 06                         ; DUP
1214: 06                         ; DUP
1215: 0f                         ; CFETCH
1216: 2c                         ; INC
1217: 04                         ; SWAP
1218: 10                         ; CSTORE
1219: 06                         ; DUP
121a: 0f                         ; CFETCH
121b: 11                         ; ADD
121c: 0e 00                      ; CLITERAL 0
121e: 1a                         ; OVER
121f: 2c                         ; INC
1220: 10                         ; CSTORE
1221: 10                         ; CSTORE
1222: 0c                         ; RET
;
1223: 18 52 f1 00 00             ; DICTP STR.NULLTERM (f152)
1228: 06                         ; DUP
1229: 06                         ; DUP
122a: 0f                         ; CFETCH
122b: 11                         ; ADD
122c: 2c                         ; INC
122d: 0e 00                      ; CLITERAL 0
122f: 04                         ; SWAP
1230: 10                         ; CSTORE
1231: 0c                         ; RET
;
1232: 18 45 f1 00 00             ; DICTP I" (f145)
1237: 0b fd 00 00 00             ; CALL HERE (00fd)
123c: 0e 64                      ; CLITERAL 100
123e: 11                         ; ADD
123f: 0e 00                      ; CLITERAL 0
1241: 1a                         ; OVER
1242: 03                         ; STORE
1243: 0b 8b 00 00 00             ; CALL >IN (008b)
1248: 02                         ; FETCH
1249: 0f                         ; CFETCH
124a: 06                         ; DUP
124b: 2a                         ; NOT
124c: 5b 1d                      ; BRANCHFZ 29 (126a)
124e: 07 10 6d 69 73 73 69 6e 67 20 63 6c 6f 73 69 6e 67 20 00 ; SLITERAL (124f) [missing closing ]
1261: 0b 37 06 00 00             ; CALL CT (0637)
1266: 0e 22                      ; CLITERAL 34
1268: 19                         ; EMIT
1269: fe                         ; RESET
126a: 0b 8b 00 00 00             ; CALL >IN (008b)
126f: 06                         ; DUP
1270: 02                         ; FETCH
1271: 2c                         ; INC
1272: 04                         ; SWAP
1273: 03                         ; STORE
1274: 06                         ; DUP
1275: 0e 22                      ; CLITERAL 34
1277: 16                         ; EQ
1278: 5b 03                      ; BRANCHFZ 3 (127c)
127a: 05                         ; DROP
127b: 0c                         ; RET
127c: 0b 0d 12 00 00             ; CALL STR.CATC (120d)
1281: 5d 3f                      ; BRANCHB 63 (1243)
1283: 0c                         ; RET
;
1284: 18 39 f1 00 00             ; DICTP " (f139)
1289: 0b f6 03 00 00             ; CALL ?COMPILING (03f6)
128e: 2a                         ; NOT
128f: 5b 07                      ; BRANCHFZ 7 (1297)
1291: 0b 32 12 00 00             ; CALL I" (1232)
1296: 0c                         ; RET
1297: 0b 93 01 00 00             ; CALL SLITERAL (0193)
129c: 0b fd 00 00 00             ; CALL HERE (00fd)
12a1: 0e 00                      ; CLITERAL 0
12a3: 0b 15 01 00 00             ; CALL C, (0115)
12a8: 0b 8b 00 00 00             ; CALL >IN (008b)
12ad: 02                         ; FETCH
12ae: 0f                         ; CFETCH
12af: 06                         ; DUP
12b0: 2a                         ; NOT
12b1: 5b 29                      ; BRANCHFZ 41 (12db)
12b3: 05                         ; DROP
12b4: 2e                         ; DEC
12b5: 0b 40 00 00 00             ; CALL (HERE) (0040)
12ba: 03                         ; STORE
12bb: 07 11 6d 69 73 73 69 6e 67 20 63 6c 6f 73 69 6e 67 20 27 00 ; SLITERAL (12bc) [missing closing ']
12cf: 0b 37 06 00 00             ; CALL CT (0637)
12d4: 0e 22                      ; CLITERAL 34
12d6: 19                         ; EMIT
12d7: 0e 27                      ; CLITERAL 39
12d9: 19                         ; EMIT
12da: fe                         ; RESET
12db: 0b 8b 00 00 00             ; CALL >IN (008b)
12e0: 06                         ; DUP
12e1: 02                         ; FETCH
12e2: 2c                         ; INC
12e3: 04                         ; SWAP
12e4: 03                         ; STORE
12e5: 06                         ; DUP
12e6: 0e 22                      ; CLITERAL 34
12e8: 16                         ; EQ
12e9: 5b 14                      ; BRANCHFZ 20 (12fe)
12eb: 05                         ; DROP
12ec: 0b fd 00 00 00             ; CALL HERE (00fd)
12f1: 0e 00                      ; CLITERAL 0
12f3: 0b 15 01 00 00             ; CALL C, (0115)
12f8: 1a                         ; OVER
12f9: 12                         ; SUB
12fa: 2e                         ; DEC
12fb: 04                         ; SWAP
12fc: 10                         ; CSTORE
12fd: 0c                         ; RET
12fe: 0b 15 01 00 00             ; CALL C, (0115)
1303: 5d 5c                      ; BRANCHB 92 (12a8)
1305: 0c                         ; RET
;
1306: 18 2c f1 00 00             ; DICTP ll (f12c)
130b: 07 08 6c 6f 61 64 73 2e 66 73 00 ; SLITERAL (130c) [loads.fs]
1316: 0b 9f 11 00 00             ; CALL load (119f)
131b: 0c                         ; RET
;
131c: 18 19 f1 00 00             ; DICTP sys-info (f119)
1321: 0b 63 0b 00 00             ; CALL .(MEM_SZ) (0b63)
1326: 0e 2c                      ; CLITERAL 44
1328: 19                         ; EMIT
1329: 0e 20                      ; CLITERAL 32
132b: 19                         ; EMIT
132c: 0b 9c 0b 00 00             ; CALL .(HERE) (0b9c)
1331: 0e 2c                      ; CLITERAL 44
1333: 19                         ; EMIT
1334: 0e 20                      ; CLITERAL 32
1336: 19                         ; EMIT
1337: 0b d3 0b 00 00             ; CALL .(LAST) (0bd3)
133c: 0e 2c                      ; CLITERAL 44
133e: 19                         ; EMIT
133f: 0e 20                      ; CLITERAL 32
1341: 19                         ; EMIT
1342: 0b f8 10 00 00             ; CALL .FREE (10f8)
1347: 0e 0d                      ; CLITERAL 13
1349: 19                         ; EMIT
134a: 0e 0a                      ; CLITERAL 10
134c: 19                         ; EMIT
134d: 0c                         ; RET
;
134e: 18 06 f1 00 00             ; DICTP VARIABLE (f106)
1353: 0b d7 0f 00 00             ; CALL CREATE-NAME (0fd7)
1358: 0b fd 00 00 00             ; CALL HERE (00fd)
135d: 0e 02                      ; CLITERAL 2
135f: 11                         ; ADD
1360: 0e 04                      ; CLITERAL 4
1362: 11                         ; ADD
1363: 0b 63 01 00 00             ; CALL LITERAL (0163)
1368: 0b 2d 01 00 00             ; CALL , (012d)
136d: 0b d4 01 00 00             ; CALL RET (01d4)
1372: 0e 00                      ; CLITERAL 0
1374: 0b 2d 01 00 00             ; CALL , (012d)
1379: 0c                         ; RET
;
137a: 18 f7 f0 00 00             ; DICTP test (f0f7)
137f: 01 ea ea 00 00             ; LITERAL 60138 (eaea)
1384: 0e 0f                      ; CLITERAL 15
1386: 0e 53                      ; CLITERAL 83
1388: 0c                         ; RET
;
; End of code, Dictionary:
;
f0f7: 06 f1 00 00                ; test - (next: f106 VARIABLE)
f0fb: 7a 13 00 00 00             ; XT=137a, flags=00
f100: 04 74 65 73 74 00          ; 4, test
;
f106: 19 f1 00 00                ; VARIABLE - (next: f119 sys-info)
f10a: 4e 13 00 00 00             ; XT=134e, flags=00
f10f: 08 56 41 52 49 41 42 4c 45 00 ; 8, VARIABLE
;
f119: 2c f1 00 00                ; sys-info - (next: f12c ll)
f11d: 1c 13 00 00 00             ; XT=131c, flags=00
f122: 08 73 79 73 2d 69 6e 66 6f 00 ; 8, sys-info
;
f12c: 39 f1 00 00                ; ll - (next: f139 ")
f130: 06 13 00 00 00             ; XT=1306, flags=00
f135: 02 6c 6c 00                ; 2, ll
;
f139: 45 f1 00 00                ; " - (next: f145 I")
f13d: 84 12 00 00 01             ; XT=1284, flags=01
f142: 01 22 00                   ; 1, "
;
f145: 52 f1 00 00                ; I" - (next: f152 STR.NULLTERM)
f149: 32 12 00 00 00             ; XT=1232, flags=00
f14e: 02 49 22 00                ; 2, I"
;
f152: 69 f1 00 00                ; STR.NULLTERM - (next: f169 STR.CATC)
f156: 23 12 00 00 00             ; XT=1223, flags=00
f15b: 0c 53 54 52 2e 4e 55 4c 4c 54 45 52 4d 00 ; 12, STR.NULLTERM
;
f169: 7c f1 00 00                ; STR.CATC - (next: f17c STR.LEN)
f16d: 0d 12 00 00 00             ; XT=120d, flags=00
f172: 08 53 54 52 2e 43 41 54 43 00 ; 8, STR.CATC
;
f17c: 8e f1 00 00                ; STR.LEN - (next: f18e STR.EMPTY)
f180: 05 12 00 00 02             ; XT=1205, flags=02
f185: 07 53 54 52 2e 4c 45 4e 00 ; 7, STR.LEN
;
f18e: a2 f1 00 00                ; STR.EMPTY - (next: f1a2 load)
f192: fb 11 00 00 02             ; XT=11fb, flags=02
f197: 09 53 54 52 2e 45 4d 50 54 59 00 ; 9, STR.EMPTY
;
f1a2: b1 f1 00 00                ; load - (next: f1b1 file-getLine)
f1a6: 9f 11 00 00 00             ; XT=119f, flags=00
f1ab: 04 6c 6f 61 64 00          ; 4, load
;
f1b1: c8 f1 00 00                ; file-getLine - (next: f1c8 main)
f1b5: 89 11 00 00 00             ; XT=1189, flags=00
f1ba: 0c 66 69 6c 65 2d 67 65 74 4c 69 6e 65 00 ; 12, file-getLine
;
f1c8: d7 f1 00 00                ; main - (next: f1d7 mainLoop)
f1cc: 5b 11 00 00 00             ; XT=115b, flags=00
f1d1: 04 6d 61 69 6e 00          ; 4, main
;
f1d7: ea f1 00 00                ; mainLoop - (next: f1ea .FREE)
f1db: 1c 11 00 00 00             ; XT=111c, flags=00
f1e0: 08 6d 61 69 6e 4c 6f 6f 70 00 ; 8, mainLoop
;
f1ea: fa f1 00 00                ; .FREE - (next: f1fa FREE)
f1ee: f8 10 00 00 00             ; XT=10f8, flags=00
f1f3: 05 2e 46 52 45 45 00       ; 5, .FREE
;
f1fa: 09 f2 00 00                ; FREE - (next: f209 C?)
f1fe: e7 10 00 00 00             ; XT=10e7, flags=00
f203: 04 46 52 45 45 00          ; 4, FREE
;
f209: 16 f2 00 00                ; C? - (next: f216 ?)
f20d: db 10 00 00 00             ; XT=10db, flags=00
f212: 02 43 3f 00                ; 2, C?
;
f216: 22 f2 00 00                ; ? - (next: f222 ALLOT)
f21a: cf 10 00 00 00             ; XT=10cf, flags=00
f21f: 01 3f 00                   ; 1, ?
;
f222: 32 f2 00 00                ; ALLOT - (next: f232 resetState)
f226: bd 10 00 00 00             ; XT=10bd, flags=00
f22b: 05 41 4c 4c 4f 54 00       ; 5, ALLOT
;
f232: 47 f2 00 00                ; resetState - (next: f247 ForgetLast)
f236: 86 10 00 00 00             ; XT=1086, flags=00
f23b: 0a 72 65 73 65 74 53 74 61 74 65 00 ; 10, resetState
;
f247: 5c f2 00 00                ; ForgetLast - (next: f25c ;)
f24b: 65 10 00 00 00             ; XT=1065, flags=00
f250: 0a 46 6f 72 67 65 74 4c 61 73 74 00 ; 10, ForgetLast
;
f25c: 68 f2 00 00                ; ; - (next: f268 :NONAME)
f260: 50 10 00 00 01             ; XT=1050, flags=01
f265: 01 3b 00                   ; 1, ;
;
f268: 7a f2 00 00                ; :NONAME - (next: f27a :)
f26c: 3b 10 00 00 00             ; XT=103b, flags=00
f271: 07 3a 4e 4f 4e 41 4d 45 00 ; 7, :NONAME
;
f27a: 86 f2 00 00                ; : - (next: f286 CREATE-NAME)
f27e: 26 10 00 00 00             ; XT=1026, flags=00
f283: 01 3a 00                   ; 1, :
;
f286: 9c f2 00 00                ; CREATE-NAME - (next: f29c Define-Word)
f28a: d7 0f 00 00 00             ; XT=0fd7, flags=00
f28f: 0b 43 52 45 41 54 45 2d 4e 41 4d 45 00 ; 11, CREATE-NAME
;
f29c: b2 f2 00 00                ; Define-Word - (next: f2b2 strcpy2c)
f2a0: 8d 0f 00 00 00             ; XT=0f8d, flags=00
f2a5: 0b 44 65 66 69 6e 65 2d 57 6f 72 64 00 ; 11, Define-Word
;
f2b2: c5 f2 00 00                ; strcpy2c - (next: f2c5 getLine)
f2b6: 5f 0f 00 00 00             ; XT=0f5f, flags=00
f2bb: 08 73 74 72 63 70 79 32 63 00 ; 8, strcpy2c
;
f2c5: d7 f2 00 00                ; getLine - (next: f2d7 Pad)
f2c9: c1 0e 00 00 00             ; XT=0ec1, flags=00
f2ce: 07 67 65 74 4c 69 6e 65 00 ; 7, getLine
;
f2d7: e5 f2 00 00                ; Pad - (next: f2e5 executeInput)
f2db: 98 0e 00 00 00             ; XT=0e98, flags=00
f2e0: 03 50 61 64 00             ; 3, Pad
;
f2e5: fc f2 00 00                ; executeInput - (next: f2fc executeWord)
f2e9: 5d 0e 00 00 00             ; XT=0e5d, flags=00
f2ee: 0c 65 78 65 63 75 74 65 49 6e 70 75 74 00 ; 12, executeInput
;
f2fc: 12 f3 00 00                ; executeWord - (next: f312 [COMPILE])
f300: e1 0d 00 00 00             ; XT=0de1, flags=00
f305: 0b 65 78 65 63 75 74 65 57 6f 72 64 00 ; 11, executeWord
;
f312: 26 f3 00 00                ; [COMPILE] - (next: f326 cstr,)
f316: c3 0d 00 00 00             ; XT=0dc3, flags=00
f31b: 09 5b 43 4f 4d 50 49 4c 45 5d 00 ; 9, [COMPILE]
;
f326: 36 f3 00 00                ; cstr, - (next: f336 strlen)
f32a: b2 0d 00 00 00             ; XT=0db2, flags=00
f32f: 05 63 73 74 72 2c 00       ; 5, cstr,
;
f336: 47 f3 00 00                ; strlen - (next: f347 Copy.INLINE)
f33a: 99 0d 00 00 00             ; XT=0d99, flags=00
f33f: 06 73 74 72 6c 65 6e 00    ; 6, strlen
;
f347: 5d f3 00 00                ; Copy.INLINE - (next: f35d DOES>)
f34b: 7d 0d 00 00 00             ; XT=0d7d, flags=00
f350: 0b 43 6f 70 79 2e 49 4e 4c 49 4e 45 00 ; 11, Copy.INLINE
;
f35d: 6d f3 00 00                ; DOES> - (next: f36d (inline))
f361: 68 0d 00 00 00             ; XT=0d68, flags=00
f366: 05 44 4f 45 53 3e 00       ; 5, DOES>
;
f36d: 80 f3 00 00                ; (inline) - (next: f380 find.ret)
f371: 4d 0d 00 00 00             ; XT=0d4d, flags=00
f376: 08 28 69 6e 6c 69 6e 65 29 00 ; 8, (inline)
;
f380: 93 f3 00 00                ; find.ret - (next: f393 EXECUTE)
f384: 3c 0d 00 00 00             ; XT=0d3c, flags=00
f389: 08 66 69 6e 64 2e 72 65 74 00 ; 8, find.ret
;
f393: a5 f3 00 00                ; EXECUTE - (next: f3a5 .lastx)
f397: 33 0d 00 00 00             ; XT=0d33, flags=00
f39c: 07 45 58 45 43 55 54 45 00 ; 7, EXECUTE
;
f3a5: b6 f3 00 00                ; .lastx - (next: f3b6 NUM-WORDS)
f3a9: 14 0d 00 00 00             ; XT=0d14, flags=00
f3ae: 06 2e 6c 61 73 74 78 00    ; 6, .lastx
;
f3b6: ca f3 00 00                ; NUM-WORDS - (next: f3ca WORDSV)
f3ba: f2 0c 00 00 00             ; XT=0cf2, flags=00
f3bf: 09 4e 55 4d 2d 57 4f 52 44 53 00 ; 9, NUM-WORDS
;
f3ca: db f3 00 00                ; WORDSV - (next: f3db .WORD-LONG)
f3ce: c8 0c 00 00 00             ; XT=0cc8, flags=00
f3d3: 06 57 4f 52 44 53 56 00    ; 6, WORDSV
;
f3db: f0 f3 00 00                ; .WORD-LONG - (next: f3f0 WORDS)
f3df: 3e 0c 00 00 00             ; XT=0c3e, flags=00
f3e4: 0a 2e 57 4f 52 44 2d 4c 4f 4e 47 00 ; 10, .WORD-LONG
;
f3f0: 00 f4 00 00                ; WORDS - (next: f400 .WORD-SHORT)
f3f4: 1f 0c 00 00 00             ; XT=0c1f, flags=00
f3f9: 05 57 4f 52 44 53 00       ; 5, WORDS
;
f400: 16 f4 00 00                ; .WORD-SHORT - (next: f416 .(LAST))
f404: 0a 0c 00 00 00             ; XT=0c0a, flags=00
f409: 0b 2e 57 4f 52 44 2d 53 48 4f 52 54 00 ; 11, .WORD-SHORT
;
f416: 28 f4 00 00                ; .(LAST) - (next: f428 .(HERE))
f41a: d3 0b 00 00 00             ; XT=0bd3, flags=00
f41f: 07 2e 28 4c 41 53 54 29 00 ; 7, .(LAST)
;
f428: 3a f4 00 00                ; .(HERE) - (next: f43a .(MEM_SZ))
f42c: 9c 0b 00 00 00             ; XT=0b9c, flags=00
f431: 07 2e 28 48 45 52 45 29 00 ; 7, .(HERE)
;
f43a: 4e f4 00 00                ; .(MEM_SZ) - (next: f44e .S)
f43e: 63 0b 00 00 00             ; XT=0b63, flags=00
f443: 09 2e 28 4d 45 4d 5f 53 5a 29 00 ; 9, .(MEM_SZ)
;
f44e: 5b f4 00 00                ; .S - (next: f45b MAX)
f452: 06 0b 00 00 00             ; XT=0b06, flags=00
f457: 02 2e 53 00                ; 2, .S
;
f45b: 69 f4 00 00                ; MAX - (next: f469 MIN)
f45f: f9 0a 00 00 00             ; XT=0af9, flags=00
f464: 03 4d 41 58 00             ; 3, MAX
;
f469: 77 f4 00 00                ; MIN - (next: f477 BINARY.)
f46d: ec 0a 00 00 00             ; XT=0aec, flags=00
f472: 03 4d 49 4e 00             ; 3, MIN
;
f477: 89 f4 00 00                ; BINARY. - (next: f489 DECIMAL.3)
f47b: cf 0a 00 00 00             ; XT=0acf, flags=00
f480: 07 42 49 4e 41 52 59 2e 00 ; 7, BINARY.
;
f489: 9d f4 00 00                ; DECIMAL.3 - (next: f49d DECIMAL.)
f48d: b2 0a 00 00 00             ; XT=0ab2, flags=00
f492: 09 44 45 43 49 4d 41 4c 2e 33 00 ; 9, DECIMAL.3
;
f49d: b0 f4 00 00                ; DECIMAL. - (next: f4b0 HEX.4)
f4a1: 95 0a 00 00 00             ; XT=0a95, flags=00
f4a6: 08 44 45 43 49 4d 41 4c 2e 00 ; 8, DECIMAL.
;
f4b0: c0 f4 00 00                ; HEX.4 - (next: f4c0 HEX.2)
f4b4: 78 0a 00 00 00             ; XT=0a78, flags=00
f4b9: 05 48 45 58 2e 34 00       ; 5, HEX.4
;
f4c0: d0 f4 00 00                ; HEX.2 - (next: f4d0 HEX.)
f4c4: 5b 0a 00 00 00             ; XT=0a5b, flags=00
f4c9: 05 48 45 58 2e 32 00       ; 5, HEX.2
;
f4d0: df f4 00 00                ; HEX. - (next: f4df .4)
f4d4: 3e 0a 00 00 00             ; XT=0a3e, flags=00
f4d9: 04 48 45 58 2e 00          ; 4, HEX.
;
f4df: ec f4 00 00                ; .4 - (next: f4ec .3)
f4e3: 15 0a 00 00 00             ; XT=0a15, flags=00
f4e8: 02 2e 34 00                ; 2, .4
;
f4ec: f9 f4 00 00                ; .3 - (next: f4f9 .2)
f4f0: f1 09 00 00 00             ; XT=09f1, flags=00
f4f5: 02 2e 33 00                ; 2, .3
;
f4f9: 06 f5 00 00                ; .2 - (next: f506 .)
f4fd: d2 09 00 00 00             ; XT=09d2, flags=00
f502: 02 2e 32 00                ; 2, .2
;
f506: 12 f5 00 00                ; . - (next: f512 (.))
f50a: c4 09 00 00 00             ; XT=09c4, flags=00
f50f: 01 2e 00                   ; 1, .
;
f512: 20 f5 00 00                ; (.) - (next: f520 #P)
f516: aa 09 00 00 00             ; XT=09aa, flags=00
f51b: 03 28 2e 29 00             ; 3, (.)
;
f520: 2d f5 00 00                ; #P - (next: f52d #P-)
f524: 99 09 00 00 00             ; XT=0999, flags=00
f529: 02 23 50 00                ; 2, #P
;
f52d: 3b f5 00 00                ; #P- - (next: f53b #>)
f531: 87 09 00 00 00             ; XT=0987, flags=00
f536: 03 23 50 2d 00             ; 3, #P-
;
f53b: 48 f5 00 00                ; #> - (next: f548 #S)
f53f: 81 09 00 00 00             ; XT=0981, flags=00
f544: 02 23 3e 00                ; 2, #>
;
f548: 55 f5 00 00                ; #S - (next: f555 #)
f54c: 72 09 00 00 00             ; XT=0972, flags=00
f551: 02 23 53 00                ; 2, #S
;
f555: 61 f5 00 00                ; # - (next: f561 <#)
f559: 4d 09 00 00 00             ; XT=094d, flags=00
f55e: 01 23 00                   ; 1, #
;
f561: 6e f5 00 00                ; <# - (next: f56e isNumber?)
f565: 1b 09 00 00 00             ; XT=091b, flags=00
f56a: 02 3c 23 00                ; 2, <#
;
f56e: 82 f5 00 00                ; isNumber? - (next: f582 parse-char)
f572: b1 08 00 00 00             ; XT=08b1, flags=00
f577: 09 69 73 4e 75 6d 62 65 72 3f 00 ; 9, isNumber?
;
f582: 97 f5 00 00                ; parse-char - (next: f597 parse-hex)
f586: 7b 08 00 00 00             ; XT=087b, flags=00
f58b: 0a 70 61 72 73 65 2d 63 68 61 72 00 ; 10, parse-char
;
f597: ab f5 00 00                ; parse-hex - (next: f5ab ABS)
f59b: 70 08 00 00 00             ; XT=0870, flags=00
f5a0: 09 70 61 72 73 65 2d 68 65 78 00 ; 9, parse-hex
;
f5ab: b9 f5 00 00                ; ABS - (next: f5b9 NEGATE)
f5af: 5f 08 00 00 00             ; XT=085f, flags=00
f5b4: 03 41 42 53 00             ; 3, ABS
;
f5b9: ca f5 00 00                ; NEGATE - (next: f5ca isNumChar?)
f5bd: 55 08 00 00 00             ; XT=0855, flags=00
f5c2: 06 4e 45 47 41 54 45 00    ; 6, NEGATE
;
f5ca: df f5 00 00                ; isNumChar? - (next: f5df isHEX?)
f5ce: 10 08 00 00 00             ; XT=0810, flags=00
f5d3: 0a 69 73 4e 75 6d 43 68 61 72 3f 00 ; 10, isNumChar?
;
f5df: f0 f5 00 00                ; isHEX? - (next: f5f0 findInDict)
f5e3: 01 08 00 00 00             ; XT=0801, flags=00
f5e8: 06 69 73 48 45 58 3f 00    ; 6, isHEX?
;
f5f0: 05 f6 00 00                ; findInDict - (next: f605 DICT.GetINLINE)
f5f4: c8 07 00 00 00             ; XT=07c8, flags=00
f5f9: 0a 66 69 6e 64 49 6e 44 69 63 74 00 ; 10, findInDict
;
f605: 1e f6 00 00                ; DICT.GetINLINE - (next: f61e DICT.GetIMMEDIATE)
f609: b8 07 00 00 00             ; XT=07b8, flags=00
f60e: 0e 44 49 43 54 2e 47 65 74 49 4e 4c 49 4e 45 00 ; 14, DICT.GetINLINE
;
f61e: 3a f6 00 00                ; DICT.GetIMMEDIATE - (next: f63a FLAGS.ISINLINE?)
f622: a8 07 00 00 00             ; XT=07a8, flags=00
f627: 11 44 49 43 54 2e 47 65 74 49 4d 4d 45 44 49 41 54 45 00 ; 17, DICT.GetIMMEDIATE
;
f63a: 54 f6 00 00                ; FLAGS.ISINLINE? - (next: f654 FLAGS.ISIMMEDIATE?)
f63e: 9f 07 00 00 00             ; XT=079f, flags=00
f643: 0f 46 4c 41 47 53 2e 49 53 49 4e 4c 49 4e 45 3f 00 ; 15, FLAGS.ISINLINE?
;
f654: 71 f6 00 00                ; FLAGS.ISIMMEDIATE? - (next: f671 XT.GetDICTP)
f658: 96 07 00 00 00             ; XT=0796, flags=00
f65d: 12 46 4c 41 47 53 2e 49 53 49 4d 4d 45 44 49 41 54 45 3f 00 ; 18, FLAGS.ISIMMEDIATE?
;
f671: 87 f6 00 00                ; XT.GetDICTP - (next: f687 DICTP>NAME)
f675: 83 07 00 00 00             ; XT=0783, flags=00
f67a: 0b 58 54 2e 47 65 74 44 49 43 54 50 00 ; 11, XT.GetDICTP
;
f687: 9c f6 00 00                ; DICTP>NAME - (next: f69c DICT.GetFLAGS)
f68b: 76 07 00 00 00             ; XT=0776, flags=00
f690: 0a 44 49 43 54 50 3e 4e 41 4d 45 00 ; 10, DICTP>NAME
;
f69c: b4 f6 00 00                ; DICT.GetFLAGS - (next: f6b4 DICT.GetXT)
f6a0: 6a 07 00 00 00             ; XT=076a, flags=00
f6a5: 0d 44 49 43 54 2e 47 65 74 46 4c 41 47 53 00 ; 13, DICT.GetFLAGS
;
f6b4: c9 f6 00 00                ; DICT.GetXT - (next: f6c9 NAME>DICT)
f6b8: 5e 07 00 00 00             ; XT=075e, flags=00
f6bd: 0a 44 49 43 54 2e 47 65 74 58 54 00 ; 10, DICT.GetXT
;
f6c9: dd f6 00 00                ; NAME>DICT - (next: f6dd FLAGS>DICT)
f6cd: 51 07 00 00 00             ; XT=0751, flags=00
f6d2: 09 4e 41 4d 45 3e 44 49 43 54 00 ; 9, NAME>DICT
;
f6dd: f2 f6 00 00                ; FLAGS>DICT - (next: f6f2 XT>DICT)
f6e1: 45 07 00 00 00             ; XT=0745, flags=00
f6e6: 0a 46 4c 41 47 53 3e 44 49 43 54 00 ; 10, FLAGS>DICT
;
f6f2: 04 f7 00 00                ; XT>DICT - (next: f704 NEXT>DICT)
f6f6: 3c 07 00 00 00             ; XT=073c, flags=00
f6fb: 07 58 54 3e 44 49 43 54 00 ; 7, XT>DICT
;
f704: 18 f7 00 00                ; NEXT>DICT - (next: f718 DICT>NAME)
f708: 36 07 00 00 00             ; XT=0736, flags=00
f70d: 09 4e 45 58 54 3e 44 49 43 54 00 ; 9, NEXT>DICT
;
f718: 2c f7 00 00                ; DICT>NAME - (next: f72c DICT>FLAGS)
f71c: 2a 07 00 00 00             ; XT=072a, flags=00
f721: 09 44 49 43 54 3e 4e 41 4d 45 00 ; 9, DICT>NAME
;
f72c: 41 f7 00 00                ; DICT>FLAGS - (next: f741 DICT>XT)
f730: 1e 07 00 00 00             ; XT=071e, flags=00
f735: 0a 44 49 43 54 3e 46 4c 41 47 53 00 ; 10, DICT>FLAGS
;
f741: 53 f7 00 00                ; DICT>XT - (next: f753 DICT>NEXT)
f745: 15 07 00 00 00             ; XT=0715, flags=00
f74a: 07 44 49 43 54 3e 58 54 00 ; 7, DICT>XT
;
f753: 67 f7 00 00                ; DICT>NEXT - (next: f767 getOneWord)
f757: 0f 07 00 00 00             ; XT=070f, flags=00
f75c: 09 44 49 43 54 3e 4e 45 58 54 00 ; 9, DICT>NEXT
;
f767: 7c f7 00 00                ; getOneWord - (next: f77c skipWS)
f76b: e9 06 00 00 00             ; XT=06e9, flags=00
f770: 0a 67 65 74 4f 6e 65 57 6f 72 64 00 ; 10, getOneWord
;
f77c: 8d f7 00 00                ; skipWS - (next: f78d BETWEEN)
f780: cf 06 00 00 00             ; XT=06cf, flags=00
f785: 06 73 6b 69 70 57 53 00    ; 6, skipWS
;
f78d: 9f f7 00 00                ; BETWEEN - (next: f79f CR)
f791: bc 06 00 00 00             ; XT=06bc, flags=00
f796: 07 42 45 54 57 45 45 4e 00 ; 7, BETWEEN
;
f79f: ac f7 00 00                ; CR - (next: f7ac CRLF)
f7a3: b0 06 00 00 02             ; XT=06b0, flags=02
f7a8: 02 43 52 00                ; 2, CR
;
f7ac: bb f7 00 00                ; CRLF - (next: f7bb BL)
f7b0: a4 06 00 00 02             ; XT=06a4, flags=02
f7b5: 04 43 52 4c 46 00          ; 4, CRLF
;
f7bb: c8 f7 00 00                ; BL - (next: f7c8 SPACE)
f7bf: 9b 06 00 00 02             ; XT=069b, flags=02
f7c4: 02 42 4c 00                ; 2, BL
;
f7c8: d8 f7 00 00                ; SPACE - (next: f7d8 ()
f7cc: 92 06 00 00 02             ; XT=0692, flags=02
f7d1: 05 53 50 41 43 45 00       ; 5, SPACE
;
f7d8: e4 f7 00 00                ; ( - (next: f7e4 \)
f7dc: 56 06 00 00 01             ; XT=0656, flags=01
f7e1: 01 28 00                   ; 1, (
;
f7e4: f0 f7 00 00                ; \ - (next: f7f0 CT)
f7e8: 47 06 00 00 01             ; XT=0647, flags=01
f7ed: 01 5c 00                   ; 1, \
;
f7f0: fd f7 00 00                ; CT - (next: f7fd TYPE)
f7f4: 37 06 00 00 00             ; XT=0637, flags=00
f7f9: 02 43 54 00                ; 2, CT
;
f7fd: 0c f8 00 00                ; TYPE - (next: f80c COUNT)
f801: 21 06 00 00 00             ; XT=0621, flags=00
f806: 04 54 59 50 45 00          ; 4, TYPE
;
f80c: 1c f8 00 00                ; COUNT - (next: f81c FALSE)
f810: 17 06 00 00 00             ; XT=0617, flags=00
f815: 05 43 4f 55 4e 54 00       ; 5, COUNT
;
f81c: 2c f8 00 00                ; FALSE - (next: f82c TRUE)
f820: 0f 06 00 00 02             ; XT=060f, flags=02
f825: 05 46 41 4c 53 45 00       ; 5, FALSE
;
f82c: 3b f8 00 00                ; TRUE - (next: f83b >=)
f830: 04 06 00 00 02             ; XT=0604, flags=02
f835: 04 54 52 55 45 00          ; 4, TRUE
;
f83b: 48 f8 00 00                ; >= - (next: f848 <=)
f83f: fc 05 00 00 02             ; XT=05fc, flags=02
f844: 02 3e 3d 00                ; 2, >=
;
f848: 55 f8 00 00                ; <= - (next: f855 <>)
f84c: f4 05 00 00 02             ; XT=05f4, flags=02
f851: 02 3c 3d 00                ; 2, <=
;
f855: 62 f8 00 00                ; <> - (next: f862 0=)
f859: ec 05 00 00 02             ; XT=05ec, flags=02
f85e: 02 3c 3e 00                ; 2, <>
;
f862: 6f f8 00 00                ; 0= - (next: f86f C--)
f866: e5 05 00 00 02             ; XT=05e5, flags=02
f86b: 02 30 3d 00                ; 2, 0=
;
f86f: 7d f8 00 00                ; C-- - (next: f87d C++)
f873: da 05 00 00 02             ; XT=05da, flags=02
f878: 03 43 2d 2d 00             ; 3, C--
;
f87d: 8b f8 00 00                ; C++ - (next: f88b --)
f881: cf 05 00 00 02             ; XT=05cf, flags=02
f886: 03 43 2b 2b 00             ; 3, C++
;
f88b: 98 f8 00 00                ; -- - (next: f898 ++)
f88f: c4 05 00 00 02             ; XT=05c4, flags=02
f894: 02 2d 2d 00                ; 2, --
;
f898: a5 f8 00 00                ; ++ - (next: f8a5 -!)
f89c: b9 05 00 00 02             ; XT=05b9, flags=02
f8a1: 02 2b 2b 00                ; 2, ++
;
f8a5: b2 f8 00 00                ; -! - (next: f8b2 -=)
f8a9: ac 05 00 00 00             ; XT=05ac, flags=00
f8ae: 02 2d 21 00                ; 2, -!
;
f8b2: bf f8 00 00                ; -= - (next: f8bf +=)
f8b6: a0 05 00 00 02             ; XT=05a0, flags=02
f8bb: 02 2d 3d 00                ; 2, -=
;
f8bf: cc f8 00 00                ; += - (next: f8cc 2/)
f8c3: 95 05 00 00 02             ; XT=0595, flags=02
f8c8: 02 2b 3d 00                ; 2, +=
;
f8cc: d9 f8 00 00                ; 2/ - (next: f8d9 2*)
f8d0: 8a 05 00 00 02             ; XT=058a, flags=02
f8d5: 02 32 2f 00                ; 2, 2/
;
f8d9: e6 f8 00 00                ; 2* - (next: f8e6 1-)
f8dd: 81 05 00 00 02             ; XT=0581, flags=02
f8e2: 02 32 2a 00                ; 2, 2*
;
f8e6: f3 f8 00 00                ; 1- - (next: f8f3 1+)
f8ea: 7a 05 00 00 02             ; XT=057a, flags=02
f8ef: 02 31 2d 00                ; 2, 1-
;
f8f3: 00 f9 00 00                ; 1+ - (next: f900 MOD)
f8f7: 73 05 00 00 02             ; XT=0573, flags=02
f8fc: 02 31 2b 00                ; 2, 1+
;
f900: 0e f9 00 00                ; MOD - (next: f90e /)
f904: 6b 05 00 00 02             ; XT=056b, flags=02
f909: 03 4d 4f 44 00             ; 3, MOD
;
f90e: 1a f9 00 00                ; / - (next: f91a -ROT)
f912: 62 05 00 00 02             ; XT=0562, flags=02
f917: 01 2f 00                   ; 1, /
;
f91a: 29 f9 00 00                ; -ROT - (next: f929 ROT)
f91e: 58 05 00 00 02             ; XT=0558, flags=02
f923: 04 2d 52 4f 54 00          ; 4, -ROT
;
f929: 37 f9 00 00                ; ROT - (next: f937 NIP)
f92d: 4e 05 00 00 02             ; XT=054e, flags=02
f932: 03 52 4f 54 00             ; 3, ROT
;
f937: 45 f9 00 00                ; NIP - (next: f945 TUCK)
f93b: 46 05 00 00 02             ; XT=0546, flags=02
f940: 03 4e 49 50 00             ; 3, NIP
;
f945: 54 f9 00 00                ; TUCK - (next: f954 2DROP)
f949: 3e 05 00 00 02             ; XT=053e, flags=02
f94e: 04 54 55 43 4b 00          ; 4, TUCK
;
f954: 64 f9 00 00                ; 2DROP - (next: f964 2DUP)
f958: 36 05 00 00 02             ; XT=0536, flags=02
f95d: 05 32 44 52 4f 50 00       ; 5, 2DROP
;
f964: 73 f9 00 00                ; 2DUP - (next: f973 ?DUP)
f968: 2e 05 00 00 02             ; XT=052e, flags=02
f96d: 04 32 44 55 50 00          ; 4, 2DUP
;
f973: 82 f9 00 00                ; ?DUP - (next: f982 RDROP)
f977: 24 05 00 00 00             ; XT=0524, flags=00
f97c: 04 3f 44 55 50 00          ; 4, ?DUP
;
f982: 92 f9 00 00                ; RDROP - (next: f992 R@)
f986: 1c 05 00 00 02             ; XT=051c, flags=02
f98b: 05 52 44 52 4f 50 00       ; 5, RDROP
;
f992: 9f f9 00 00                ; R@ - (next: f99f DEBUG-OFF)
f996: 15 05 00 00 02             ; XT=0515, flags=02
f99b: 02 52 40 00                ; 2, R@
;
f99f: b3 f9 00 00                ; DEBUG-OFF - (next: f9b3 DEBUG-ON)
f9a3: 0c 05 00 00 02             ; XT=050c, flags=02
f9a8: 09 44 45 42 55 47 2d 4f 46 46 00 ; 9, DEBUG-OFF
;
f9b3: c6 f9 00 00                ; DEBUG-ON - (next: f9c6 TRACE-OFF)
f9b7: 03 05 00 00 02             ; XT=0503, flags=02
f9bc: 08 44 45 42 55 47 2d 4f 4e 00 ; 8, DEBUG-ON
;
f9c6: da f9 00 00                ; TRACE-OFF - (next: f9da TRACE-ON)
f9ca: fa 04 00 00 02             ; XT=04fa, flags=02
f9cf: 09 54 52 41 43 45 2d 4f 46 46 00 ; 9, TRACE-OFF
;
f9da: ed f9 00 00                ; TRACE-ON - (next: f9ed MEM_SZ)
f9de: f1 04 00 00 02             ; XT=04f1, flags=02
f9e3: 08 54 52 41 43 45 2d 4f 4e 00 ; 8, TRACE-ON
;
f9ed: fe f9 00 00                ; MEM_SZ - (next: f9fe LEAVE)
f9f1: e5 04 00 00 00             ; XT=04e5, flags=00
f9f6: 06 4d 45 4d 5f 53 5a 00    ; 6, MEM_SZ
;
f9fe: 0e fa 00 00                ; LEAVE - (next: fa0e UNTIL)
fa02: d3 04 00 00 01             ; XT=04d3, flags=01
fa07: 05 4c 45 41 56 45 00       ; 5, LEAVE
;
fa0e: 1e fa 00 00                ; UNTIL - (next: fa1e WHILE)
fa12: b5 04 00 00 01             ; XT=04b5, flags=01
fa17: 05 55 4e 54 49 4c 00       ; 5, UNTIL
;
fa1e: 2e fa 00 00                ; WHILE - (next: fa2e AGAIN)
fa22: 97 04 00 00 01             ; XT=0497, flags=01
fa27: 05 57 48 49 4c 45 00       ; 5, WHILE
;
fa2e: 3e fa 00 00                ; AGAIN - (next: fa3e BEGIN)
fa32: 79 04 00 00 01             ; XT=0479, flags=01
fa37: 05 41 47 41 49 4e 00       ; 5, AGAIN
;
fa3e: 4e fa 00 00                ; BEGIN - (next: fa4e THEN)
fa42: 67 04 00 00 01             ; XT=0467, flags=01
fa47: 05 42 45 47 49 4e 00       ; 5, BEGIN
;
fa4e: 5d fa 00 00                ; THEN - (next: fa5d ELSE)
fa52: 4e 04 00 00 01             ; XT=044e, flags=01
fa57: 04 54 48 45 4e 00          ; 4, THEN
;
fa5d: 6c fa 00 00                ; ELSE - (next: fa6c IF)
fa61: 23 04 00 00 01             ; XT=0423, flags=01
fa66: 04 45 4c 53 45 00          ; 4, ELSE
;
fa6c: 79 fa 00 00                ; IF - (next: fa79 ?COMPILING)
fa70: 02 04 00 00 01             ; XT=0402, flags=01
fa75: 02 49 46 00                ; 2, IF
;
fa79: 8e fa 00 00                ; ?COMPILING - (next: fa8e OFF)
fa7d: f6 03 00 00 00             ; XT=03f6, flags=00
fa82: 0a 3f 43 4f 4d 50 49 4c 49 4e 47 00 ; 10, ?COMPILING
;
fa8e: 9c fa 00 00                ; OFF - (next: fa9c ON)
fa92: ec 03 00 00 00             ; XT=03ec, flags=00
fa97: 03 4f 46 46 00             ; 3, OFF
;
fa9c: a9 fa 00 00                ; ON - (next: faa9 BINARY)
faa0: e2 03 00 00 00             ; XT=03e2, flags=00
faa5: 02 4f 4e 00                ; 2, ON
;
faa9: ba fa 00 00                ; BINARY - (next: faba OCTAL)
faad: d4 03 00 00 00             ; XT=03d4, flags=00
fab2: 06 42 49 4e 41 52 59 00    ; 6, BINARY
;
faba: ca fa 00 00                ; OCTAL - (next: faca DECIMAL)
fabe: c6 03 00 00 00             ; XT=03c6, flags=00
fac3: 05 4f 43 54 41 4c 00       ; 5, OCTAL
;
faca: dc fa 00 00                ; DECIMAL - (next: fadc HEX)
face: b8 03 00 00 00             ; XT=03b8, flags=00
fad3: 07 44 45 43 49 4d 41 4c 00 ; 7, DECIMAL
;
fadc: ea fa 00 00                ; HEX - (next: faea FLAG_INLINE)
fae0: aa 03 00 00 00             ; XT=03aa, flags=00
fae5: 03 48 45 58 00             ; 3, HEX
;
faea: 00 fb 00 00                ; FLAG_INLINE - (next: fb00 FLAG_IMMEDIATE)
faee: a2 03 00 00 02             ; XT=03a2, flags=02
faf3: 0b 46 4c 41 47 5f 49 4e 4c 49 4e 45 00 ; 11, FLAG_INLINE
;
fb00: 19 fb 00 00                ; FLAG_IMMEDIATE - (next: fb19 CELLS)
fb04: 9a 03 00 00 02             ; XT=039a, flags=02
fb09: 0e 46 4c 41 47 5f 49 4d 4d 45 44 49 41 54 45 00 ; 14, FLAG_IMMEDIATE
;
fb19: 29 fb 00 00                ; CELLS - (next: fb29 IMMEDIATE)
fb1d: 91 03 00 00 02             ; XT=0391, flags=02
fb22: 05 43 45 4c 4c 53 00       ; 5, CELLS
;
fb29: 3d fb 00 00                ; IMMEDIATE - (next: fb3d INLINE)
fb2d: 79 03 00 00 00             ; XT=0379, flags=00
fb32: 09 49 4d 4d 45 44 49 41 54 45 00 ; 9, IMMEDIATE
;
fb3d: 4e fb 00 00                ; INLINE - (next: fb4e BYE)
fb41: 61 03 00 00 00             ; XT=0361, flags=00
fb46: 06 49 4e 4c 49 4e 45 00    ; 6, INLINE
;
fb4e: 5c fb 00 00                ; BYE - (next: fb5c RESET)
fb52: 5a 03 00 00 02             ; XT=035a, flags=02
fb57: 03 42 59 45 00             ; 3, BYE
;
fb5c: 6c fb 00 00                ; RESET - (next: fb6c BREAK)
fb60: 53 03 00 00 02             ; XT=0353, flags=02
fb65: 05 52 45 53 45 54 00       ; 5, RESET
;
fb6c: 7c fb 00 00                ; BREAK - (next: fb7c NOP)
fb70: 4c 03 00 00 02             ; XT=034c, flags=02
fb75: 05 42 52 45 41 4b 00       ; 5, BREAK
;
fb7c: 8a fb 00 00                ; NOP - (next: fb8a BRANCHBNZ)
fb80: 45 03 00 00 02             ; XT=0345, flags=02
fb85: 03 4e 4f 50 00             ; 3, NOP
;
fb8a: 9e fb 00 00                ; BRANCHBNZ - (next: fb9e BRANCHBZ)
fb8e: 38 03 00 00 00             ; XT=0338, flags=00
fb93: 09 42 52 41 4e 43 48 42 4e 5a 00 ; 9, BRANCHBNZ
;
fb9e: b1 fb 00 00                ; BRANCHBZ - (next: fbb1 BRANCHB)
fba2: 2b 03 00 00 00             ; XT=032b, flags=00
fba7: 08 42 52 41 4e 43 48 42 5a 00 ; 8, BRANCHBZ
;
fbb1: c3 fb 00 00                ; BRANCHB - (next: fbc3 BRANCHFNZ)
fbb5: 1e 03 00 00 00             ; XT=031e, flags=00
fbba: 07 42 52 41 4e 43 48 42 00 ; 7, BRANCHB
;
fbc3: d7 fb 00 00                ; BRANCHFNZ - (next: fbd7 BRANCHFZ)
fbc7: 11 03 00 00 00             ; XT=0311, flags=00
fbcc: 09 42 52 41 4e 43 48 46 4e 5a 00 ; 9, BRANCHFNZ
;
fbd7: ea fb 00 00                ; BRANCHFZ - (next: fbea BRANCHF)
fbdb: 04 03 00 00 00             ; XT=0304, flags=00
fbe0: 08 42 52 41 4e 43 48 46 5a 00 ; 8, BRANCHFZ
;
fbea: fc fb 00 00                ; BRANCHF - (next: fbfc +!)
fbee: f7 02 00 00 00             ; XT=02f7, flags=00
fbf3: 07 42 52 41 4e 43 48 46 00 ; 7, BRANCHF
;
fbfc: 09 fc 00 00                ; +! - (next: fc09 >>)
fc00: f0 02 00 00 02             ; XT=02f0, flags=02
fc05: 02 2b 21 00                ; 2, +!
;
fc09: 16 fc 00 00                ; >> - (next: fc16 <<)
fc0d: e9 02 00 00 02             ; XT=02e9, flags=02
fc12: 02 3e 3e 00                ; 2, >>
;
fc16: 23 fc 00 00                ; << - (next: fc23 GETTICK)
fc1a: e2 02 00 00 02             ; XT=02e2, flags=02
fc1f: 02 3c 3c 00                ; 2, <<
;
fc23: 35 fc 00 00                ; GETTICK - (next: fc35 DEC)
fc27: db 02 00 00 02             ; XT=02db, flags=02
fc2c: 07 47 45 54 54 49 43 4b 00 ; 7, GETTICK
;
fc35: 43 fc 00 00                ; DEC - (next: fc43 RDEPTH)
fc39: d4 02 00 00 02             ; XT=02d4, flags=02
fc3e: 03 44 45 43 00             ; 3, DEC
;
fc43: 54 fc 00 00                ; RDEPTH - (next: fc54 INC)
fc47: cd 02 00 00 02             ; XT=02cd, flags=02
fc4c: 06 52 44 45 50 54 48 00    ; 6, RDEPTH
;
fc54: 62 fc 00 00                ; INC - (next: fc62 RFETCH)
fc58: c6 02 00 00 02             ; XT=02c6, flags=02
fc5d: 03 49 4e 43 00             ; 3, INC
;
fc62: 73 fc 00 00                ; RFETCH - (next: fc73 NOT)
fc66: bf 02 00 00 02             ; XT=02bf, flags=02
fc6b: 06 52 46 45 54 43 48 00    ; 6, RFETCH
;
fc73: 81 fc 00 00                ; NOT - (next: fc81 /MOD)
fc77: b8 02 00 00 02             ; XT=02b8, flags=02
fc7c: 03 4e 4f 54 00             ; 3, NOT
;
fc81: 90 fc 00 00                ; /MOD - (next: fc90 COMPAREI)
fc85: b1 02 00 00 02             ; XT=02b1, flags=02
fc8a: 04 2f 4d 4f 44 00          ; 4, /MOD
;
fc90: a3 fc 00 00                ; COMPAREI - (next: fca3 GETCH)
fc94: aa 02 00 00 02             ; XT=02aa, flags=02
fc99: 08 43 4f 4d 50 41 52 45 49 00 ; 8, COMPAREI
;
fca3: b3 fc 00 00                ; GETCH - (next: fcb3 DEPTH)
fca7: a3 02 00 00 02             ; XT=02a3, flags=02
fcac: 05 47 45 54 43 48 00       ; 5, GETCH
;
fcb3: c3 fc 00 00                ; DEPTH - (next: fcc3 PICK)
fcb7: 9c 02 00 00 02             ; XT=029c, flags=02
fcbc: 05 44 45 50 54 48 00       ; 5, DEPTH
;
fcc3: d2 fc 00 00                ; PICK - (next: fcd2 AND)
fcc7: 95 02 00 00 02             ; XT=0295, flags=02
fccc: 04 50 49 43 4b 00          ; 4, PICK
;
fcd2: e0 fc 00 00                ; AND - (next: fce0 LOGLEVEL)
fcd6: 8e 02 00 00 02             ; XT=028e, flags=02
fcdb: 03 41 4e 44 00             ; 3, AND
;
fce0: f3 fc 00 00                ; LOGLEVEL - (next: fcf3 R>)
fce4: 87 02 00 00 02             ; XT=0287, flags=02
fce9: 08 4c 4f 47 4c 45 56 45 4c 00 ; 8, LOGLEVEL
;
fcf3: 00 fd 00 00                ; R> - (next: fd00 >R)
fcf7: 80 02 00 00 02             ; XT=0280, flags=02
fcfc: 02 52 3e 00                ; 2, R>
;
fd00: 0d fd 00 00                ; >R - (next: fd0d FCLOSE)
fd04: 79 02 00 00 02             ; XT=0279, flags=02
fd09: 02 3e 52 00                ; 2, >R
;
fd0d: 1e fd 00 00                ; FCLOSE - (next: fd1e FWRITE)
fd11: 72 02 00 00 02             ; XT=0272, flags=02
fd16: 06 46 43 4c 4f 53 45 00    ; 6, FCLOSE
;
fd1e: 2f fd 00 00                ; FWRITE - (next: fd2f FREADLINE)
fd22: 6b 02 00 00 02             ; XT=026b, flags=02
fd27: 06 46 57 52 49 54 45 00    ; 6, FWRITE
;
fd2f: 43 fd 00 00                ; FREADLINE - (next: fd43 FREAD)
fd33: 64 02 00 00 02             ; XT=0264, flags=02
fd38: 09 46 52 45 41 44 4c 49 4e 45 00 ; 9, FREADLINE
;
fd43: 53 fd 00 00                ; FREAD - (next: fd53 FOPEN)
fd47: 5d 02 00 00 02             ; XT=025d, flags=02
fd4c: 05 46 52 45 41 44 00       ; 5, FREAD
;
fd53: 63 fd 00 00                ; FOPEN - (next: fd63 COMPARE)
fd57: 56 02 00 00 02             ; XT=0256, flags=02
fd5c: 05 46 4f 50 45 4e 00       ; 5, FOPEN
;
fd63: 75 fd 00 00                ; COMPARE - (next: fd75 OVER)
fd67: 4f 02 00 00 02             ; XT=024f, flags=02
fd6c: 07 43 4f 4d 50 41 52 45 00 ; 7, COMPARE
;
fd75: 84 fd 00 00                ; OVER - (next: fd84 EMIT)
fd79: 48 02 00 00 02             ; XT=0248, flags=02
fd7e: 04 4f 56 45 52 00          ; 4, OVER
;
fd84: 93 fd 00 00                ; EMIT - (next: fd93 DICTP)
fd88: 41 02 00 00 02             ; XT=0241, flags=02
fd8d: 04 45 4d 49 54 00          ; 4, EMIT
;
fd93: a3 fd 00 00                ; DICTP - (next: fda3 >)
fd97: 34 02 00 00 02             ; XT=0234, flags=02
fd9c: 05 44 49 43 54 50 00       ; 5, DICTP
;
fda3: af fd 00 00                ; > - (next: fdaf =)
fda7: 2d 02 00 00 02             ; XT=022d, flags=02
fdac: 01 3e 00                   ; 1, >
;
fdaf: bb fd 00 00                ; = - (next: fdbb <)
fdb3: 26 02 00 00 02             ; XT=0226, flags=02
fdb8: 01 3d 00                   ; 1, =
;
fdbb: c7 fd 00 00                ; < - (next: fdc7 /)
fdbf: 1f 02 00 00 02             ; XT=021f, flags=02
fdc4: 01 3c 00                   ; 1, <
;
fdc7: d3 fd 00 00                ; / - (next: fdd3 *)
fdcb: 18 02 00 00 02             ; XT=0218, flags=02
fdd0: 01 2f 00                   ; 1, /
;
fdd3: df fd 00 00                ; * - (next: fddf -)
fdd7: 11 02 00 00 02             ; XT=0211, flags=02
fddc: 01 2a 00                   ; 1, *
;
fddf: eb fd 00 00                ; - - (next: fdeb +)
fde3: 0a 02 00 00 02             ; XT=020a, flags=02
fde8: 01 2d 00                   ; 1, -
;
fdeb: f7 fd 00 00                ; + - (next: fdf7 C!)
fdef: 03 02 00 00 02             ; XT=0203, flags=02
fdf4: 01 2b 00                   ; 1, +
;
fdf7: 04 fe 00 00                ; C! - (next: fe04 C@)
fdfb: fc 01 00 00 02             ; XT=01fc, flags=02
fe00: 02 43 21 00                ; 2, C!
;
fe04: 11 fe 00 00                ; C@ - (next: fe11 CLITERAL)
fe08: f5 01 00 00 02             ; XT=01f5, flags=02
fe0d: 02 43 40 00                ; 2, C@
;
fe11: 24 fe 00 00                ; CLITERAL - (next: fe24 OR)
fe15: e8 01 00 00 02             ; XT=01e8, flags=02
fe1a: 08 43 4c 49 54 45 52 41 4c 00 ; 8, CLITERAL
;
fe24: 31 fe 00 00                ; OR - (next: fe31 RET)
fe28: e1 01 00 00 02             ; XT=01e1, flags=02
fe2d: 02 4f 52 00                ; 2, OR
;
fe31: 3f fe 00 00                ; RET - (next: fe3f CALL)
fe35: d4 01 00 00 00             ; XT=01d4, flags=00
fe3a: 03 52 45 54 00             ; 3, RET
;
fe3f: 4e fe 00 00                ; CALL - (next: fe4e JMPNZ)
fe43: c7 01 00 00 00             ; XT=01c7, flags=00
fe48: 04 43 41 4c 4c 00          ; 4, CALL
;
fe4e: 5e fe 00 00                ; JMPNZ - (next: fe5e JMPZ)
fe52: ba 01 00 00 00             ; XT=01ba, flags=00
fe57: 05 4a 4d 50 4e 5a 00       ; 5, JMPNZ
;
fe5e: 6d fe 00 00                ; JMPZ - (next: fe6d JMP)
fe62: ad 01 00 00 00             ; XT=01ad, flags=00
fe67: 04 4a 4d 50 5a 00          ; 4, JMPZ
;
fe6d: 7b fe 00 00                ; JMP - (next: fe7b SLITERAL)
fe71: a0 01 00 00 00             ; XT=01a0, flags=00
fe76: 03 4a 4d 50 00             ; 3, JMP
;
fe7b: 8e fe 00 00                ; SLITERAL - (next: fe8e DUP)
fe7f: 93 01 00 00 00             ; XT=0193, flags=00
fe84: 08 53 4c 49 54 45 52 41 4c 00 ; 8, SLITERAL
;
fe8e: 9c fe 00 00                ; DUP - (next: fe9c DROP)
fe92: 8c 01 00 00 02             ; XT=018c, flags=02
fe97: 03 44 55 50 00             ; 3, DUP
;
fe9c: ab fe 00 00                ; DROP - (next: feab SWAP)
fea0: 85 01 00 00 02             ; XT=0185, flags=02
fea5: 04 44 52 4f 50 00          ; 4, DROP
;
feab: ba fe 00 00                ; SWAP - (next: feba !)
feaf: 7e 01 00 00 02             ; XT=017e, flags=02
feb4: 04 53 57 41 50 00          ; 4, SWAP
;
feba: c6 fe 00 00                ; ! - (next: fec6 @)
febe: 77 01 00 00 02             ; XT=0177, flags=02
fec3: 01 21 00                   ; 1, !
;
fec6: d2 fe 00 00                ; @ - (next: fed2 LITERAL)
feca: 70 01 00 00 02             ; XT=0170, flags=02
fecf: 01 40 00                   ; 1, @
;
fed2: e4 fe 00 00                ; LITERAL - (next: fee4 ])
fed6: 63 01 00 00 00             ; XT=0163, flags=00
fedb: 07 4c 49 54 45 52 41 4c 00 ; 7, LITERAL
;
fee4: f0 fe 00 00                ; ] - (next: fef0 [)
fee8: 55 01 00 00 01             ; XT=0155, flags=01
feed: 01 5d 00                   ; 1, ]
;
fef0: fc fe 00 00                ; [ - (next: fefc ,)
fef4: 47 01 00 00 01             ; XT=0147, flags=01
fef9: 01 5b 00                   ; 1, [
;
fefc: 08 ff 00 00                ; , - (next: ff08 C,)
ff00: 2d 01 00 00 00             ; XT=012d, flags=00
ff05: 01 2c 00                   ; 1, ,
;
ff08: 15 ff 00 00                ; C, - (next: ff15 LAST)
ff0c: 15 01 00 00 00             ; XT=0115, flags=00
ff11: 02 43 2c 00                ; 2, C,
;
ff15: 24 ff 00 00                ; LAST - (next: ff24 HERE)
ff19: 09 01 00 00 00             ; XT=0109, flags=00
ff1e: 04 4c 41 53 54 00          ; 4, LAST
;
ff24: 33 ff 00 00                ; HERE - (next: ff33 CELL)
ff28: fd 00 00 00 00             ; XT=00fd, flags=00
ff2d: 04 48 45 52 45 00          ; 4, HERE
;
ff33: 42 ff 00 00                ; CELL - (next: ff42 T3)
ff37: f5 00 00 00 02             ; XT=00f5, flags=02
ff3c: 04 43 45 4c 4c 00          ; 4, CELL
;
ff42: 4f ff 00 00                ; T3 - (next: ff4f T2)
ff46: e5 00 00 00 00             ; XT=00e5, flags=00
ff4b: 02 54 33 00                ; 2, T3
;
ff4f: 5c ff 00 00                ; T2 - (next: ff5c T1)
ff53: d6 00 00 00 00             ; XT=00d6, flags=00
ff58: 02 54 32 00                ; 2, T2
;
ff5c: 69 ff 00 00                ; T1 - (next: ff69 INPUT-FP)
ff60: c7 00 00 00 00             ; XT=00c7, flags=00
ff65: 02 54 31 00                ; 2, T1
;
ff69: 7c ff 00 00                ; INPUT-FP - (next: ff7c #LEN)
ff6d: b8 00 00 00 00             ; XT=00b8, flags=00
ff72: 08 49 4e 50 55 54 2d 46 50 00 ; 8, INPUT-FP
;
ff7c: 8b ff 00 00                ; #LEN - (next: ff8b #NEG)
ff80: a9 00 00 00 00             ; XT=00a9, flags=00
ff85: 04 23 4c 45 4e 00          ; 4, #LEN
;
ff8b: 9a ff 00 00                ; #NEG - (next: ff9a >IN)
ff8f: 9a 00 00 00 00             ; XT=009a, flags=00
ff94: 04 23 4e 45 47 00          ; 4, #NEG
;
ff9a: a8 ff 00 00                ; >IN - (next: ffa8 (MEM_SZ))
ff9e: 8b 00 00 00 00             ; XT=008b, flags=00
ffa3: 03 3e 49 4e 00             ; 3, >IN
;
ffa8: bb ff 00 00                ; (MEM_SZ) - (next: ffbb STATE)
ffac: 7c 00 00 00 00             ; XT=007c, flags=00
ffb1: 08 28 4d 45 4d 5f 53 5a 29 00 ; 8, (MEM_SZ)
;
ffbb: cb ff 00 00                ; STATE - (next: ffcb BASE)
ffbf: 6d 00 00 00 00             ; XT=006d, flags=00
ffc4: 05 53 54 41 54 45 00       ; 5, STATE
;
ffcb: da ff 00 00                ; BASE - (next: ffda (LAST))
ffcf: 5e 00 00 00 00             ; XT=005e, flags=00
ffd4: 04 42 41 53 45 00          ; 4, BASE
;
ffda: eb ff 00 00                ; (LAST) - (next: ffeb (HERE))
ffde: 4f 00 00 00 00             ; XT=004f, flags=00
ffe3: 06 28 4c 41 53 54 29 00    ; 6, (LAST)
;
ffeb: fc ff 00 00                ; (HERE) - (next: fffc <end>)
ffef: 40 00 00 00 00             ; XT=0040, flags=00
fff4: 06 28 48 45 52 45 29 00    ; 6, (HERE)
;
fffc: 00 00 00 00                ; End.
