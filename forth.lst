; memory-size: 65536 bytes, (10000 hex)
; data-stack: fe00, grows up
; return-stack: fffc, grows down
;
0000: 08 a5 12 00 00             ; JMP main (12a5)
;
0005: 00 00 00
0008: 00000004 00000000
0010: 0000153a 0000ef38 0000000a 00000000
0020: 00000000 00010000 00000000 00000000
0030: 00000000 00000000 00000000 00000000
;
0040: 18 eb fd 00 00             ; DICTP (HERE) (fdeb)
0045: 01 4b 00 00 00             ; LITERAL 75 (4b)
004a: 0c                         ; RET
004b: 3a                         ; RESET
004c: 15                         ; LT
004d: 00                         ; RESET
004e: 00                         ; RESET
004f: 18 da fd 00 00             ; DICTP (LAST) (fdda)
0054: 01 5a 00 00 00             ; LITERAL 90 (5a)
0059: 0c                         ; RET
005a: 38                         ; RESET
005b: ef                         ; RESET
005c: 00                         ; RESET
005d: 00                         ; RESET
005e: 18 cb fd 00 00             ; DICTP BASE (fdcb)
0063: 01 69 00 00 00             ; LITERAL 105 (69)
0068: 0c                         ; RET
0069: 0a 00 00 00 18             ; JMPNZ 18000000
006e: bb                         ; RESET
006f: fd                         ; BREAK
0070: 00                         ; RESET
0071: 00                         ; RESET
0072: 01 78 00 00 00             ; LITERAL 120 (78)
0077: 0c                         ; RET
0078: 63                         ; RESET
0079: 00                         ; RESET
007a: 00                         ; RESET
007b: 00                         ; RESET
007c: 18 a8 fd 00 00             ; DICTP (MEM_SZ) (fda8)
0081: 01 87 00 00 00             ; LITERAL 135 (87)
0086: 0c                         ; RET
0087: 00                         ; RESET
0088: 00                         ; RESET
0089: 01 00 18 99 fd             ; LITERAL -40298496 (fd991800)
008e: 00                         ; RESET
008f: 00                         ; RESET
0090: 0e 04                      ; CLITERAL 4
0092: 0c                         ; RET
;
0093: 18 8a fd 00 00             ; DICTP HERE (fd8a)
0098: 0b 40 00 00 00             ; CALL (HERE) (0040)
009d: 02                         ; FETCH
009e: 0c                         ; RET
;
009f: 18 7b fd 00 00             ; DICTP LAST (fd7b)
00a4: 0b 4f 00 00 00             ; CALL (LAST) (004f)
00a9: 02                         ; FETCH
00aa: 0c                         ; RET
;
00ab: 18 6e fd 00 00             ; DICTP C, (fd6e)
00b0: 0b 93 00 00 00             ; CALL HERE (0093)
00b5: 10                         ; CSTORE
00b6: 0b 93 00 00 00             ; CALL HERE (0093)
00bb: 0e 01                      ; CLITERAL 1
00bd: 11                         ; ADD
00be: 0b 40 00 00 00             ; CALL (HERE) (0040)
00c3: 03                         ; STORE
00c4: 0c                         ; RET
;
00c5: 18 62 fd 00 00             ; DICTP , (fd62)
00ca: 0b 93 00 00 00             ; CALL HERE (0093)
00cf: 03                         ; STORE
00d0: 0b 93 00 00 00             ; CALL HERE (0093)
00d5: 0b 8b 00 00 00             ; CALL CELL (008b)
00da: 11                         ; ADD
00db: 0b 40 00 00 00             ; CALL (HERE) (0040)
00e0: 03                         ; STORE
00e1: 0c                         ; RET
;
00e2: 18 56 fd 00 00             ; DICTP [ (fd56)
00e7: 0e 00                      ; CLITERAL 0
00e9: 0b 6d 00 00 00             ; CALL STATE (006d)
00ee: 03                         ; STORE
00ef: 0c                         ; RET
;
00f0: 18 4a fd 00 00             ; DICTP ] (fd4a)
00f5: 0e 01                      ; CLITERAL 1
00f7: 0b 6d 00 00 00             ; CALL STATE (006d)
00fc: 03                         ; STORE
00fd: 0c                         ; RET
;
00fe: 18 38 fd 00 00             ; DICTP LITERAL (fd38)
0103: 0e 01                      ; CLITERAL 1
0105: 0b ab 00 00 00             ; CALL C, (00ab)
010a: 0c                         ; RET
;
010b: 18 2c fd 00 00             ; DICTP @ (fd2c)
0110: 02                         ; FETCH
0111: 0c                         ; RET
;
0112: 18 20 fd 00 00             ; DICTP ! (fd20)
0117: 03                         ; STORE
0118: 0c                         ; RET
;
0119: 18 11 fd 00 00             ; DICTP SWAP (fd11)
011e: 04                         ; SWAP
011f: 0c                         ; RET
;
0120: 18 02 fd 00 00             ; DICTP DROP (fd02)
0125: 05                         ; DROP
0126: 0c                         ; RET
;
0127: 18 f4 fc 00 00             ; DICTP DUP (fcf4)
012c: 06                         ; DUP
012d: 0c                         ; RET
;
012e: 18 e1 fc 00 00             ; DICTP SLITERAL (fce1)
0133: 0e 07                      ; CLITERAL 7
0135: 0b ab 00 00 00             ; CALL C, (00ab)
013a: 0c                         ; RET
;
013b: 18 d3 fc 00 00             ; DICTP JMP (fcd3)
0140: 0e 08                      ; CLITERAL 8
0142: 0b ab 00 00 00             ; CALL C, (00ab)
0147: 0c                         ; RET
;
0148: 18 c4 fc 00 00             ; DICTP JMPZ (fcc4)
014d: 0e 09                      ; CLITERAL 9
014f: 0b ab 00 00 00             ; CALL C, (00ab)
0154: 0c                         ; RET
;
0155: 18 b4 fc 00 00             ; DICTP JMPNZ (fcb4)
015a: 0e 0a                      ; CLITERAL 10
015c: 0b ab 00 00 00             ; CALL C, (00ab)
0161: 0c                         ; RET
;
0162: 18 a5 fc 00 00             ; DICTP CALL (fca5)
0167: 0e 0b                      ; CLITERAL 11
0169: 0b ab 00 00 00             ; CALL C, (00ab)
016e: 0c                         ; RET
;
016f: 18 97 fc 00 00             ; DICTP RET (fc97)
0174: 0e 0c                      ; CLITERAL 12
0176: 0b ab 00 00 00             ; CALL C, (00ab)
017b: 0c                         ; RET
;
017c: 18 8a fc 00 00             ; DICTP OR (fc8a)
0181: 0d                         ; OR
0182: 0c                         ; RET
;
0183: 18 77 fc 00 00             ; DICTP CLITERAL (fc77)
0188: 0e 0e                      ; CLITERAL 14
018a: 0b ab 00 00 00             ; CALL C, (00ab)
018f: 0c                         ; RET
;
0190: 18 6a fc 00 00             ; DICTP C@ (fc6a)
0195: 0f                         ; CFETCH
0196: 0c                         ; RET
;
0197: 18 5d fc 00 00             ; DICTP C! (fc5d)
019c: 10                         ; CSTORE
019d: 0c                         ; RET
;
019e: 18 51 fc 00 00             ; DICTP + (fc51)
01a3: 11                         ; ADD
01a4: 0c                         ; RET
;
01a5: 18 45 fc 00 00             ; DICTP - (fc45)
01aa: 12                         ; SUB
01ab: 0c                         ; RET
;
01ac: 18 39 fc 00 00             ; DICTP * (fc39)
01b1: 13                         ; MUL
01b2: 0c                         ; RET
;
01b3: 18 2d fc 00 00             ; DICTP / (fc2d)
01b8: 14                         ; DIV
01b9: 0c                         ; RET
;
01ba: 18 21 fc 00 00             ; DICTP < (fc21)
01bf: 15                         ; LT
01c0: 0c                         ; RET
;
01c1: 18 15 fc 00 00             ; DICTP = (fc15)
01c6: 16                         ; EQ
01c7: 0c                         ; RET
;
01c8: 18 09 fc 00 00             ; DICTP > (fc09)
01cd: 17                         ; GT
01ce: 0c                         ; RET
;
01cf: 18 f9 fb 00 00             ; DICTP DICTP (fbf9)
01d4: 0e 18                      ; CLITERAL 24
01d6: 0b ab 00 00 00             ; CALL C, (00ab)
01db: 0c                         ; RET
;
01dc: 18 ea fb 00 00             ; DICTP EMIT (fbea)
01e1: 19                         ; EMIT
01e2: 0c                         ; RET
;
01e3: 18 db fb 00 00             ; DICTP OVER (fbdb)
01e8: 1a                         ; OVER
01e9: 0c                         ; RET
;
01ea: 18 c9 fb 00 00             ; DICTP COMPARE (fbc9)
01ef: 1b                         ; COMPARE
01f0: 0c                         ; RET
;
01f1: 18 b9 fb 00 00             ; DICTP FOPEN (fbb9)
01f6: 1c                         ; FOPEN
01f7: 0c                         ; RET
;
01f8: 18 a9 fb 00 00             ; DICTP FREAD (fba9)
01fd: 1d                         ; FREAD
01fe: 0c                         ; RET
;
01ff: 18 95 fb 00 00             ; DICTP FREADLINE (fb95)
0204: 1e                         ; FREADLINE
0205: 0c                         ; RET
;
0206: 18 84 fb 00 00             ; DICTP FWRITE (fb84)
020b: 1f                         ; FWRITE
020c: 0c                         ; RET
;
020d: 18 73 fb 00 00             ; DICTP FCLOSE (fb73)
0212: 20                         ; FCLOSE
0213: 0c                         ; RET
;
0214: 18 66 fb 00 00             ; DICTP >R (fb66)
0219: 21                         ; DTOR
021a: 0c                         ; RET
;
021b: 18 59 fb 00 00             ; DICTP R> (fb59)
0220: 22                         ; RTOD
0221: 0c                         ; RET
;
0222: 18 46 fb 00 00             ; DICTP LOGLEVEL (fb46)
0227: 23                         ; LOGLEVEL
0228: 0c                         ; RET
;
0229: 18 38 fb 00 00             ; DICTP AND (fb38)
022e: 24                         ; AND
022f: 0c                         ; RET
;
0230: 18 29 fb 00 00             ; DICTP PICK (fb29)
0235: 25                         ; PICK
0236: 0c                         ; RET
;
0237: 18 19 fb 00 00             ; DICTP DEPTH (fb19)
023c: 26                         ; DEPTH
023d: 0c                         ; RET
;
023e: 18 09 fb 00 00             ; DICTP GETCH (fb09)
0243: 27                         ; GETCH
0244: 0c                         ; RET
;
0245: 18 f6 fa 00 00             ; DICTP COMPAREI (faf6)
024a: 28                         ; COMPAREI
024b: 0c                         ; RET
;
024c: 18 e5 fa 00 00             ; DICTP USINIT (fae5)
0251: 29                         ; USTACKINIT
0252: 0c                         ; RET
;
0253: 18 d4 fa 00 00             ; DICTP USPUSH (fad4)
0258: 2a                         ; UPUSH
0259: 0c                         ; RET
;
025a: 18 c4 fa 00 00             ; DICTP USPOP (fac4)
025f: 2b                         ; UPOP
0260: 0c                         ; RET
;
0261: 18 b6 fa 00 00             ; DICTP INC (fab6)
0266: 2c                         ; INC
0267: 0c                         ; RET
;
0268: 18 a5 fa 00 00             ; DICTP RDEPTH (faa5)
026d: 2d                         ; RDEPTH
026e: 0c                         ; RET
;
026f: 18 97 fa 00 00             ; DICTP DEC (fa97)
0274: 2e                         ; DEC
0275: 0c                         ; RET
;
0276: 18 85 fa 00 00             ; DICTP GETTICK (fa85)
027b: 2f                         ; GETTICK
027c: 0c                         ; RET
;
027d: 18 75 fa 00 00             ; DICTP BREAK (fa75)
0282: fd                         ; BREAK
0283: 0c                         ; RET
;
0284: 18 65 fa 00 00             ; DICTP RESET (fa65)
0289: fe                         ; RESET
028a: 0c                         ; RET
;
028b: 18 57 fa 00 00             ; DICTP BYE (fa57)
0290: ff                         ; BYE
0291: 0c                         ; RET
;
0292: 18 46 fa 00 00             ; DICTP INLINE (fa46)
0297: 0b 9f 00 00 00             ; CALL LAST (009f)
029c: 0e 02                      ; CLITERAL 2
029e: 0b 8b 00 00 00             ; CALL CELL (008b)
02a3: 13                         ; MUL
02a4: 11                         ; ADD
02a5: 06                         ; DUP
02a6: 0f                         ; CFETCH
02a7: 0e 02                      ; CLITERAL 2
02a9: 0d                         ; OR
02aa: 04                         ; SWAP
02ab: 10                         ; CSTORE
02ac: 0c                         ; RET
;
02ad: 18 32 fa 00 00             ; DICTP IMMEDIATE (fa32)
02b2: 0b 9f 00 00 00             ; CALL LAST (009f)
02b7: 0e 02                      ; CLITERAL 2
02b9: 0b 8b 00 00 00             ; CALL CELL (008b)
02be: 13                         ; MUL
02bf: 11                         ; ADD
02c0: 06                         ; DUP
02c1: 0f                         ; CFETCH
02c2: 0e 01                      ; CLITERAL 1
02c4: 0d                         ; OR
02c5: 04                         ; SWAP
02c6: 10                         ; CSTORE
02c7: 0c                         ; RET
;
02c8: 18 22 fa 00 00             ; DICTP CELLS (fa22)
02cd: 0b 8b 00 00 00             ; CALL CELL (008b)
02d2: 13                         ; MUL
02d3: 0c                         ; RET
;
02d4: 18 09 fa 00 00             ; DICTP FLAG_IMMEDIATE (fa09)
02d9: 0e 01                      ; CLITERAL 1
02db: 0c                         ; RET
;
02dc: 18 f3 f9 00 00             ; DICTP FLAG_INLINE (f9f3)
02e1: 0e 02                      ; CLITERAL 2
02e3: 0c                         ; RET
;
02e4: 18 e5 f9 00 00             ; DICTP HEX (f9e5)
02e9: 0e 10                      ; CLITERAL 16
02eb: 0b 5e 00 00 00             ; CALL BASE (005e)
02f0: 03                         ; STORE
02f1: 0c                         ; RET
;
02f2: 18 d3 f9 00 00             ; DICTP DECIMAL (f9d3)
02f7: 0e 0a                      ; CLITERAL 10
02f9: 0b 5e 00 00 00             ; CALL BASE (005e)
02fe: 03                         ; STORE
02ff: 0c                         ; RET
;
0300: 18 c3 f9 00 00             ; DICTP OCTAL (f9c3)
0305: 0e 08                      ; CLITERAL 8
0307: 0b 5e 00 00 00             ; CALL BASE (005e)
030c: 03                         ; STORE
030d: 0c                         ; RET
;
030e: 18 b2 f9 00 00             ; DICTP BINARY (f9b2)
0313: 0e 02                      ; CLITERAL 2
0315: 0b 5e 00 00 00             ; CALL BASE (005e)
031a: 03                         ; STORE
031b: 0c                         ; RET
;
031c: 18 a5 f9 00 00             ; DICTP ON (f9a5)
0321: 0e 01                      ; CLITERAL 1
0323: 04                         ; SWAP
0324: 03                         ; STORE
0325: 0c                         ; RET
;
0326: 18 97 f9 00 00             ; DICTP OFF (f997)
032b: 0e 00                      ; CLITERAL 0
032d: 04                         ; SWAP
032e: 03                         ; STORE
032f: 0c                         ; RET
;
0330: 18 82 f9 00 00             ; DICTP ?COMPILING (f982)
0335: 0b 6d 00 00 00             ; CALL STATE (006d)
033a: 02                         ; FETCH
033b: 0c                         ; RET
;
033c: 18 75 f9 00 00             ; DICTP IF (f975)
0341: 0b 30 03 00 00             ; CALL ?COMPILING (0330)
0346: 09 5c 03 00 00             ; JMPZ 035c
034b: 0b 48 01 00 00             ; CALL JMPZ (0148)
0350: 0b 93 00 00 00             ; CALL HERE (0093)
0355: 0e 00                      ; CLITERAL 0
0357: 0b c5 00 00 00             ; CALL , (00c5)
035c: 0c                         ; RET
;
035d: 18 66 f9 00 00             ; DICTP ELSE (f966)
0362: 0b 30 03 00 00             ; CALL ?COMPILING (0330)
0367: 09 85 03 00 00             ; JMPZ 0385
036c: 0b 3b 01 00 00             ; CALL JMP (013b)
0371: 0b 93 00 00 00             ; CALL HERE (0093)
0376: 04                         ; SWAP
0377: 0e 00                      ; CLITERAL 0
0379: 0b c5 00 00 00             ; CALL , (00c5)
037e: 0b 93 00 00 00             ; CALL HERE (0093)
0383: 04                         ; SWAP
0384: 03                         ; STORE
0385: 0c                         ; RET
;
0386: 18 57 f9 00 00             ; DICTP THEN (f957)
038b: 0b 30 03 00 00             ; CALL ?COMPILING (0330)
0390: 09 9c 03 00 00             ; JMPZ 039c
0395: 0b 93 00 00 00             ; CALL HERE (0093)
039a: 04                         ; SWAP
039b: 03                         ; STORE
039c: 0c                         ; RET
;
039d: 18 47 f9 00 00             ; DICTP BEGIN (f947)
03a2: 0b 30 03 00 00             ; CALL ?COMPILING (0330)
03a7: 09 b1 03 00 00             ; JMPZ 03b1
03ac: 0b 93 00 00 00             ; CALL HERE (0093)
03b1: 0c                         ; RET
;
03b2: 18 37 f9 00 00             ; DICTP AGAIN (f937)
03b7: 0b 30 03 00 00             ; CALL ?COMPILING (0330)
03bc: 09 cb 03 00 00             ; JMPZ 03cb
03c1: 0b 3b 01 00 00             ; CALL JMP (013b)
03c6: 0b c5 00 00 00             ; CALL , (00c5)
03cb: 0c                         ; RET
;
03cc: 18 27 f9 00 00             ; DICTP WHILE (f927)
03d1: 0b 30 03 00 00             ; CALL ?COMPILING (0330)
03d6: 09 e5 03 00 00             ; JMPZ 03e5
03db: 0b 55 01 00 00             ; CALL JMPNZ (0155)
03e0: 0b c5 00 00 00             ; CALL , (00c5)
03e5: 0c                         ; RET
;
03e6: 18 17 f9 00 00             ; DICTP UNTIL (f917)
03eb: 0b 30 03 00 00             ; CALL ?COMPILING (0330)
03f0: 09 ff 03 00 00             ; JMPZ 03ff
03f5: 0b 48 01 00 00             ; CALL JMPZ (0148)
03fa: 0b c5 00 00 00             ; CALL , (00c5)
03ff: 0c                         ; RET
;
0400: 18 07 f9 00 00             ; DICTP LEAVE (f907)
0405: 0b 30 03 00 00             ; CALL ?COMPILING (0330)
040a: 09 14 04 00 00             ; JMPZ 0414
040f: 0b 6f 01 00 00             ; CALL RET (016f)
0414: 0c                         ; RET
;
0415: 18 f9 f8 00 00             ; DICTP >IN (f8f9)
041a: 01 20 04 00 00             ; LITERAL 1056 (420)
041f: 0c                         ; RET
0420: 00                         ; RESET
0421: 00                         ; RESET
0422: 00                         ; RESET
0423: 00                         ; RESET
0424: 0c                         ; RET
;
0425: 18 e9 f8 00 00             ; DICTP isNeg (f8e9)
042a: 01 30 04 00 00             ; LITERAL 1072 (430)
042f: 0c                         ; RET
0430: 00                         ; RESET
0431: 00                         ; RESET
0432: 00                         ; RESET
0433: 00                         ; RESET
0434: 0c                         ; RET
;
0435: 18 d8 f8 00 00             ; DICTP MEM_SZ (f8d8)
043a: 0b 7c 00 00 00             ; CALL (MEM_SZ) (007c)
043f: 02                         ; FETCH
0440: 0c                         ; RET
;
0441: 18 c5 f8 00 00             ; DICTP TRACE-ON (f8c5)
0446: 0e 02                      ; CLITERAL 2
0448: 23                         ; LOGLEVEL
0449: 0c                         ; RET
;
044a: 18 b1 f8 00 00             ; DICTP TRACE-OFF (f8b1)
044f: 0e 00                      ; CLITERAL 0
0451: 23                         ; LOGLEVEL
0452: 0c                         ; RET
;
0453: 18 9e f8 00 00             ; DICTP DEBUG-ON (f89e)
0458: 0e 01                      ; CLITERAL 1
045a: 23                         ; LOGLEVEL
045b: 0c                         ; RET
;
045c: 18 8a f8 00 00             ; DICTP DEBUG-OFF (f88a)
0461: 0e 00                      ; CLITERAL 0
0463: 23                         ; LOGLEVEL
0464: 0c                         ; RET
;
0465: 18 7d f8 00 00             ; DICTP R@ (f87d)
046a: 22                         ; RTOD
046b: 06                         ; DUP
046c: 21                         ; DTOR
046d: 0c                         ; RET
;
046e: 18 6d f8 00 00             ; DICTP RDROP (f86d)
0473: 22                         ; RTOD
0474: 05                         ; DROP
0475: 0c                         ; RET
;
0476: 18 5e f8 00 00             ; DICTP 2DUP (f85e)
047b: 1a                         ; OVER
047c: 1a                         ; OVER
047d: 0c                         ; RET
;
047e: 18 4e f8 00 00             ; DICTP 2DROP (f84e)
0483: 05                         ; DROP
0484: 05                         ; DROP
0485: 0c                         ; RET
;
0486: 18 3f f8 00 00             ; DICTP TUCK (f83f)
048b: 04                         ; SWAP
048c: 1a                         ; OVER
048d: 0c                         ; RET
;
048e: 18 31 f8 00 00             ; DICTP NIP (f831)
0493: 04                         ; SWAP
0494: 05                         ; DROP
0495: 0c                         ; RET
;
0496: 18 23 f8 00 00             ; DICTP ROT (f823)
049b: 21                         ; DTOR
049c: 04                         ; SWAP
049d: 22                         ; RTOD
049e: 04                         ; SWAP
049f: 0c                         ; RET
;
04a0: 18 14 f8 00 00             ; DICTP -ROT (f814)
04a5: 04                         ; SWAP
04a6: 21                         ; DTOR
04a7: 04                         ; SWAP
04a8: 22                         ; RTOD
04a9: 0c                         ; RET
;
04aa: 18 07 f8 00 00             ; DICTP 1+ (f807)
04af: 2c                         ; INC
04b0: 0c                         ; RET
;
04b1: 18 fa f7 00 00             ; DICTP 1- (f7fa)
04b6: 2e                         ; DEC
04b7: 0c                         ; RET
;
04b8: 18 ed f7 00 00             ; DICTP 2* (f7ed)
04bd: 0e 02                      ; CLITERAL 2
04bf: 13                         ; MUL
04c0: 0c                         ; RET
;
04c1: 18 e0 f7 00 00             ; DICTP 2/ (f7e0)
04c6: 0e 02                      ; CLITERAL 2
04c8: 14                         ; DIV
04c9: 0c                         ; RET
;
04ca: 18 d3 f7 00 00             ; DICTP += (f7d3)
04cf: 1a                         ; OVER
04d0: 02                         ; FETCH
04d1: 11                         ; ADD
04d2: 04                         ; SWAP
04d3: 03                         ; STORE
04d4: 0c                         ; RET
;
04d5: 18 c6 f7 00 00             ; DICTP -= (f7c6)
04da: 1a                         ; OVER
04db: 02                         ; FETCH
04dc: 04                         ; SWAP
04dd: 12                         ; SUB
04de: 04                         ; SWAP
04df: 03                         ; STORE
04e0: 0c                         ; RET
;
04e1: 18 b9 f7 00 00             ; DICTP ++ (f7b9)
04e6: 0e 01                      ; CLITERAL 1
04e8: 0b ca 04 00 00             ; CALL += (04ca)
04ed: 0c                         ; RET
;
04ee: 18 ac f7 00 00             ; DICTP -- (f7ac)
04f3: 0e 01                      ; CLITERAL 1
04f5: 0b d5 04 00 00             ; CALL -= (04d5)
04fa: 0c                         ; RET
;
04fb: 18 9e f7 00 00             ; DICTP C++ (f79e)
0500: 06                         ; DUP
0501: 0f                         ; CFETCH
0502: 2c                         ; INC
0503: 04                         ; SWAP
0504: 10                         ; CSTORE
0505: 0c                         ; RET
;
0506: 18 90 f7 00 00             ; DICTP C-- (f790)
050b: 06                         ; DUP
050c: 0f                         ; CFETCH
050d: 2e                         ; DEC
050e: 04                         ; SWAP
050f: 10                         ; CSTORE
0510: 0c                         ; RET
;
0511: 18 83 f7 00 00             ; DICTP +! (f783)
0516: 04                         ; SWAP
0517: 1a                         ; OVER
0518: 02                         ; FETCH
0519: 11                         ; ADD
051a: 04                         ; SWAP
051b: 03                         ; STORE
051c: 0c                         ; RET
;
051d: 18 75 f7 00 00             ; DICTP C+! (f775)
0522: 04                         ; SWAP
0523: 1a                         ; OVER
0524: 0f                         ; CFETCH
0525: 11                         ; ADD
0526: 04                         ; SWAP
0527: 10                         ; CSTORE
0528: 0c                         ; RET
;
0529: 18 68 f7 00 00             ; DICTP 0= (f768)
052e: 0e 00                      ; CLITERAL 0
0530: 16                         ; EQ
0531: 0c                         ; RET
;
0532: 18 5b f7 00 00             ; DICTP <> (f75b)
0537: 16                         ; EQ
0538: 0e 00                      ; CLITERAL 0
053a: 16                         ; EQ
053b: 0c                         ; RET
;
053c: 18 4e f7 00 00             ; DICTP <= (f74e)
0541: 17                         ; GT
0542: 0e 00                      ; CLITERAL 0
0544: 16                         ; EQ
0545: 0c                         ; RET
;
0546: 18 41 f7 00 00             ; DICTP >= (f741)
054b: 15                         ; LT
054c: 0e 00                      ; CLITERAL 0
054e: 16                         ; EQ
054f: 0c                         ; RET
;
0550: 18 32 f7 00 00             ; DICTP TRUE (f732)
0555: 0e 01                      ; CLITERAL 1
0557: 0c                         ; RET
;
0558: 18 22 f7 00 00             ; DICTP FALSE (f722)
055d: 0e 00                      ; CLITERAL 0
055f: 0c                         ; RET
;
0560: 18 14 f7 00 00             ; DICTP NOT (f714)
0565: 0e 00                      ; CLITERAL 0
0567: 16                         ; EQ
0568: 0c                         ; RET
;
0569: 18 04 f7 00 00             ; DICTP COUNT (f704)
056e: 06                         ; DUP
056f: 2c                         ; INC
0570: 04                         ; SWAP
0571: 0f                         ; CFETCH
0572: 0c                         ; RET
;
0573: 18 f5 f6 00 00             ; DICTP TYPE (f6f5)
0578: 1a                         ; OVER
0579: 11                         ; ADD
057a: 04                         ; SWAP
057b: 1a                         ; OVER
057c: 1a                         ; OVER
057d: 17                         ; GT
057e: 0e 00                      ; CLITERAL 0
0580: 16                         ; EQ
0581: 09 89 05 00 00             ; JMPZ 0589
0586: 05                         ; DROP
0587: 05                         ; DROP
0588: 0c                         ; RET
0589: 06                         ; DUP
058a: 0f                         ; CFETCH
058b: 19                         ; EMIT
058c: 2c                         ; INC
058d: 08 7b 05 00 00             ; JMP 057b
0592: 0c                         ; RET
;
0593: 18 e8 f6 00 00             ; DICTP CT (f6e8)
0598: 0b 69 05 00 00             ; CALL COUNT (0569)
059d: 0b 73 05 00 00             ; CALL TYPE (0573)
05a2: 0c                         ; RET
;
05a3: 18 dc f6 00 00             ; DICTP \ (f6dc)
05a8: 0e 00                      ; CLITERAL 0
05aa: 0b 15 04 00 00             ; CALL >IN (0415)
05af: 02                         ; FETCH
05b0: 10                         ; CSTORE
05b1: 0c                         ; RET
;
05b2: 18 d0 f6 00 00             ; DICTP ( (f6d0)
05b7: 0b 15 04 00 00             ; CALL >IN (0415)
05bc: 02                         ; FETCH
05bd: 0f                         ; CFETCH
05be: 06                         ; DUP
05bf: 0e 00                      ; CLITERAL 0
05c1: 16                         ; EQ
05c2: 09 e3 05 00 00             ; JMPZ 05e3
05c7: 07 13 6d 69 73 73 69 6e 67 20 63 6c 6f 73 69 6e 67 20 27 29 27 00 ; SLITERAL (05c8) [missing closing ')']
05dd: 0b 93 05 00 00             ; CALL CT (0593)
05e2: fe                         ; RESET
05e3: 0b 15 04 00 00             ; CALL >IN (0415)
05e8: 0b e1 04 00 00             ; CALL ++ (04e1)
05ed: 0e 29                      ; CLITERAL 41
05ef: 16                         ; EQ
05f0: 09 f6 05 00 00             ; JMPZ 05f6
05f5: 0c                         ; RET
05f6: 08 b7 05 00 00             ; JMP 05b7
05fb: 0c                         ; RET
;
05fc: 18 c3 f6 00 00             ; DICTP BL (f6c3)
0601: 0e 20                      ; CLITERAL 32
0603: 19                         ; EMIT
0604: 0c                         ; RET
;
0605: 18 b4 f6 00 00             ; DICTP CRLF (f6b4)
060a: 0e 0d                      ; CLITERAL 13
060c: 19                         ; EMIT
060d: 0e 0a                      ; CLITERAL 10
060f: 19                         ; EMIT
0610: 0c                         ; RET
;
0611: 18 a7 f6 00 00             ; DICTP CR (f6a7)
0616: 0e 0d                      ; CLITERAL 13
0618: 19                         ; EMIT
0619: 0e 0a                      ; CLITERAL 10
061b: 19                         ; EMIT
061c: 0c                         ; RET
;
061d: 18 95 f6 00 00             ; DICTP BETWEEN (f695)
0622: 0e 02                      ; CLITERAL 2
0624: 25                         ; PICK
0625: 15                         ; LT
0626: 09 30 06 00 00             ; JMPZ 0630
062b: 05                         ; DROP
062c: 05                         ; DROP
062d: 0e 00                      ; CLITERAL 0
062f: 0c                         ; RET
0630: 15                         ; LT
0631: 0e 00                      ; CLITERAL 0
0633: 16                         ; EQ
0634: 0c                         ; RET
;
0635: 18 85 f6 00 00             ; DICTP (tmp) (f685)
063a: 01 40 06 00 00             ; LITERAL 1600 (640)
063f: 0c                         ; RET
0640: 00                         ; RESET
0641: 00                         ; RESET
0642: 00                         ; RESET
0643: 00                         ; RESET
0644: 0c                         ; RET
;
0645: 18 72 f6 00 00             ; DICTP tmp-init (f672)
064a: 0b 9f 00 00 00             ; CALL LAST (009f)
064f: 0b 35 06 00 00             ; CALL (tmp) (0635)
0654: 03                         ; STORE
0655: 0c                         ; RET
;
0656: 18 60 f6 00 00             ; DICTP tmp-cur (f660)
065b: 0b 35 06 00 00             ; CALL (tmp) (0635)
0660: 02                         ; FETCH
0661: 0c                         ; RET
;
0662: 18 4c f6 00 00             ; DICTP tmp-alloc (f64c)
0667: 0b 35 06 00 00             ; CALL (tmp) (0635)
066c: 04                         ; SWAP
066d: 1a                         ; OVER
066e: 02                         ; FETCH
066f: 04                         ; SWAP
0670: 12                         ; SUB
0671: 04                         ; SWAP
0672: 03                         ; STORE
0673: 0b 56 06 00 00             ; CALL tmp-cur (0656)
0678: 0c                         ; RET
;
0679: 18 3e f6 00 00             ; DICTP PAD (f63e)
067e: 0b 45 06 00 00             ; CALL tmp-init (0645)
0683: 0e c8                      ; CLITERAL 200
0685: 0b 62 06 00 00             ; CALL tmp-alloc (0662)
068a: 0c                         ; RET
;
068b: 18 2b f6 00 00             ; DICTP getInput (f62b)
0690: 0b 79 06 00 00             ; CALL PAD (0679)
0695: 0e 80                      ; CLITERAL 128
0697: 0e 00                      ; CLITERAL 0
0699: 1e                         ; FREADLINE
069a: 05                         ; DROP
069b: 0b 79 06 00 00             ; CALL PAD (0679)
06a0: 0c                         ; RET
;
06a1: 18 1a f6 00 00             ; DICTP skipWS (f61a)
06a6: 06                         ; DUP
06a7: 0f                         ; CFETCH
06a8: 06                         ; DUP
06a9: 09 c2 06 00 00             ; JMPZ 06c2
06ae: 0e 20                      ; CLITERAL 32
06b0: 17                         ; GT
06b1: 09 bc 06 00 00             ; JMPZ 06bc
06b6: 0c                         ; RET
06b7: 08 bd 06 00 00             ; JMP 06bd
06bc: 2c                         ; INC
06bd: 08 c4 06 00 00             ; JMP 06c4
06c2: 05                         ; DROP
06c3: 0c                         ; RET
06c4: 08 a6 06 00 00             ; JMP 06a6
06c9: 0c                         ; RET
;
06ca: 18 05 f6 00 00             ; DICTP getOneWord (f605)
06cf: 06                         ; DUP
06d0: 21                         ; DTOR
06d1: 21                         ; DTOR
06d2: 22                         ; RTOD
06d3: 06                         ; DUP
06d4: 21                         ; DTOR
06d5: 0f                         ; CFETCH
06d6: 0e 20                      ; CLITERAL 32
06d8: 17                         ; GT
06d9: 09 e6 06 00 00             ; JMPZ 06e6
06de: 22                         ; RTOD
06df: 2c                         ; INC
06e0: 21                         ; DTOR
06e1: 08 fc 06 00 00             ; JMP 06fc
06e6: 22                         ; RTOD
06e7: 06                         ; DUP
06e8: 21                         ; DTOR
06e9: 0f                         ; CFETCH
06ea: 09 f8 06 00 00             ; JMPZ 06f8
06ef: 0e 00                      ; CLITERAL 0
06f1: 22                         ; RTOD
06f2: 06                         ; DUP
06f3: 21                         ; DTOR
06f4: 10                         ; CSTORE
06f5: 22                         ; RTOD
06f6: 2c                         ; INC
06f7: 21                         ; DTOR
06f8: 22                         ; RTOD
06f9: 22                         ; RTOD
06fa: 04                         ; SWAP
06fb: 0c                         ; RET
06fc: 08 d2 06 00 00             ; JMP 06d2
0701: 0c                         ; RET
;
0702: 18 f1 f5 00 00             ; DICTP DICT>NEXT (f5f1)
0707: 0c                         ; RET
;
0708: 18 df f5 00 00             ; DICTP DICT>XT (f5df)
070d: 0b 8b 00 00 00             ; CALL CELL (008b)
0712: 11                         ; ADD
0713: 0c                         ; RET
;
0714: 18 ca f5 00 00             ; DICTP DICT>FLAGS (f5ca)
0719: 0e 02                      ; CLITERAL 2
071b: 0b 8b 00 00 00             ; CALL CELL (008b)
0720: 13                         ; MUL
0721: 11                         ; ADD
0722: 0c                         ; RET
;
0723: 18 b6 f5 00 00             ; DICTP DICT>NAME (f5b6)
0728: 0b 14 07 00 00             ; CALL DICT>FLAGS (0714)
072d: 2c                         ; INC
072e: 0c                         ; RET
;
072f: 18 a2 f5 00 00             ; DICTP NEXT>DICT (f5a2)
0734: 0c                         ; RET
;
0735: 18 90 f5 00 00             ; DICTP XT>DICT (f590)
073a: 0b 8b 00 00 00             ; CALL CELL (008b)
073f: 12                         ; SUB
0740: 0c                         ; RET
;
0741: 18 7b f5 00 00             ; DICTP FLAGS>DICT (f57b)
0746: 0e 02                      ; CLITERAL 2
0748: 0b 8b 00 00 00             ; CALL CELL (008b)
074d: 13                         ; MUL
074e: 12                         ; SUB
074f: 0c                         ; RET
;
0750: 18 67 f5 00 00             ; DICTP NAME>DICT (f567)
0755: 2e                         ; DEC
0756: 0e 02                      ; CLITERAL 2
0758: 0b 8b 00 00 00             ; CALL CELL (008b)
075d: 13                         ; MUL
075e: 12                         ; SUB
075f: 0c                         ; RET
;
0760: 18 52 f5 00 00             ; DICTP DICT.GetXT (f552)
0765: 0b 08 07 00 00             ; CALL DICT>XT (0708)
076a: 02                         ; FETCH
076b: 0c                         ; RET
;
076c: 18 3a f5 00 00             ; DICTP DICT.GetFLAGS (f53a)
0771: 0b 14 07 00 00             ; CALL DICT>FLAGS (0714)
0776: 0f                         ; CFETCH
0777: 0c                         ; RET
;
0778: 18 25 f5 00 00             ; DICTP DICTP>NAME (f525)
077d: 2c                         ; INC
077e: 02                         ; FETCH
077f: 0b 23 07 00 00             ; CALL DICT>NAME (0723)
0784: 0c                         ; RET
;
0785: 18 0f f5 00 00             ; DICTP XT.GetDICTP (f50f)
078a: 06                         ; DUP
078b: 0f                         ; CFETCH
078c: 0e 18                      ; CLITERAL 24
078e: 16                         ; EQ
078f: 09 9b 07 00 00             ; JMPZ 079b
0794: 2c                         ; INC
0795: 02                         ; FETCH
0796: 08 9d 07 00 00             ; JMP 079d
079b: 05                         ; DROP
079c: fe                         ; RESET
079d: 0c                         ; RET
;
079e: 18 f2 f4 00 00             ; DICTP FLAGS.ISIMMEDIATE? (f4f2)
07a3: 0e 01                      ; CLITERAL 1
07a5: 24                         ; AND
07a6: 0c                         ; RET
;
07a7: 18 d8 f4 00 00             ; DICTP FLAGS.ISINLINE? (f4d8)
07ac: 0e 02                      ; CLITERAL 2
07ae: 24                         ; AND
07af: 0c                         ; RET
;
07b0: 18 bc f4 00 00             ; DICTP DICT.GetIMMEDIATE (f4bc)
07b5: 0b 6c 07 00 00             ; CALL DICT.GetFLAGS (076c)
07ba: 0b 9e 07 00 00             ; CALL FLAGS.ISIMMEDIATE? (079e)
07bf: 0c                         ; RET
;
07c0: 18 a3 f4 00 00             ; DICTP DICT.GetINLINE (f4a3)
07c5: 0b 6c 07 00 00             ; CALL DICT.GetFLAGS (076c)
07ca: 0b a7 07 00 00             ; CALL FLAGS.ISINLINE? (07a7)
07cf: 0c                         ; RET
;
07d0: 18 8e f4 00 00             ; DICTP findInDict (f48e)
07d5: 0b 9f 00 00 00             ; CALL LAST (009f)
07da: 21                         ; DTOR
07db: 22                         ; RTOD
07dc: 06                         ; DUP
07dd: 21                         ; DTOR
07de: 06                         ; DUP
07df: 09 08 08 00 00             ; JMPZ 0808
07e4: 0b 23 07 00 00             ; CALL DICT>NAME (0723)
07e9: 2c                         ; INC
07ea: 1a                         ; OVER
07eb: 28                         ; COMPAREI
07ec: 09 03 08 00 00             ; JMPZ 0803
07f1: 05                         ; DROP
07f2: 22                         ; RTOD
07f3: 06                         ; DUP
07f4: 21                         ; DTOR
07f5: 0b 60 07 00 00             ; CALL DICT.GetXT (0760)
07fa: 22                         ; RTOD
07fb: 0b 6c 07 00 00             ; CALL DICT.GetFLAGS (076c)
0800: 0e 01                      ; CLITERAL 1
0802: 0c                         ; RET
0803: 08 10 08 00 00             ; JMP 0810
0808: 05                         ; DROP
0809: 05                         ; DROP
080a: 22                         ; RTOD
080b: 0e 00                      ; CLITERAL 0
080d: 0e 00                      ; CLITERAL 0
080f: 0c                         ; RET
0810: 22                         ; RTOD
0811: 02                         ; FETCH
0812: 21                         ; DTOR
0813: 08 db 07 00 00             ; JMP 07db
0818: 0c                         ; RET
;
0819: 18 7d f4 00 00             ; DICTP isHEX? (f47d)
081e: 0b 5e 00 00 00             ; CALL BASE (005e)
0823: 02                         ; FETCH
0824: 0e 10                      ; CLITERAL 16
0826: 16                         ; EQ
0827: 0c                         ; RET
;
0828: 18 68 f4 00 00             ; DICTP isNumChar? (f468)
082d: 06                         ; DUP
082e: 0e 30                      ; CLITERAL 48
0830: 0e 39                      ; CLITERAL 57
0832: 0b 1d 06 00 00             ; CALL BETWEEN (061d)
0837: 09 42 08 00 00             ; JMPZ 0842
083c: 0e 30                      ; CLITERAL 48
083e: 12                         ; SUB
083f: 0e 01                      ; CLITERAL 1
0841: 0c                         ; RET
0842: 0b 19 08 00 00             ; CALL isHEX? (0819)
0847: 09 76 08 00 00             ; JMPZ 0876
084c: 06                         ; DUP
084d: 0e 41                      ; CLITERAL 65
084f: 0e 46                      ; CLITERAL 70
0851: 0b 1d 06 00 00             ; CALL BETWEEN (061d)
0856: 09 61 08 00 00             ; JMPZ 0861
085b: 0e 37                      ; CLITERAL 55
085d: 12                         ; SUB
085e: 0e 01                      ; CLITERAL 1
0860: 0c                         ; RET
0861: 06                         ; DUP
0862: 0e 61                      ; CLITERAL 97
0864: 0e 66                      ; CLITERAL 102
0866: 0b 1d 06 00 00             ; CALL BETWEEN (061d)
086b: 09 76 08 00 00             ; JMPZ 0876
0870: 0e 57                      ; CLITERAL 87
0872: 12                         ; SUB
0873: 0e 01                      ; CLITERAL 1
0875: 0c                         ; RET
0876: 0e 00                      ; CLITERAL 0
0878: 0c                         ; RET
;
0879: 18 57 f4 00 00             ; DICTP NEGATE (f457)
087e: 0e 00                      ; CLITERAL 0
0880: 04                         ; SWAP
0881: 12                         ; SUB
0882: 0c                         ; RET
;
0883: 18 49 f4 00 00             ; DICTP ABS (f449)
0888: 06                         ; DUP
0889: 0e 00                      ; CLITERAL 0
088b: 15                         ; LT
088c: 09 96 08 00 00             ; JMPZ 0896
0891: 0b 79 08 00 00             ; CALL NEGATE (0879)
0896: 0c                         ; RET
;
0897: 18 35 f4 00 00             ; DICTP isNumber? (f435)
089c: 06                         ; DUP
089d: 0f                         ; CFETCH
089e: 0e 2d                      ; CLITERAL 45
08a0: 16                         ; EQ
08a1: 06                         ; DUP
08a2: 0b 25 04 00 00             ; CALL isNeg (0425)
08a7: 10                         ; CSTORE
08a8: 09 ae 08 00 00             ; JMPZ 08ae
08ad: 2c                         ; INC
08ae: 0e 00                      ; CLITERAL 0
08b0: 21                         ; DTOR
08b1: 06                         ; DUP
08b2: 0f                         ; CFETCH
08b3: 06                         ; DUP
08b4: 0e 00                      ; CLITERAL 0
08b6: 16                         ; EQ
08b7: 09 d2 08 00 00             ; JMPZ 08d2
08bc: 05                         ; DROP
08bd: 05                         ; DROP
08be: 22                         ; RTOD
08bf: 0b 25 04 00 00             ; CALL isNeg (0425)
08c4: 0f                         ; CFETCH
08c5: 09 cf 08 00 00             ; JMPZ 08cf
08ca: 0b 79 08 00 00             ; CALL NEGATE (0879)
08cf: 0e 01                      ; CLITERAL 1
08d1: 0c                         ; RET
08d2: 0b 28 08 00 00             ; CALL isNumChar? (0828)
08d7: 09 ec 08 00 00             ; JMPZ 08ec
08dc: 22                         ; RTOD
08dd: 0b 5e 00 00 00             ; CALL BASE (005e)
08e2: 02                         ; FETCH
08e3: 13                         ; MUL
08e4: 11                         ; ADD
08e5: 21                         ; DTOR
08e6: 2c                         ; INC
08e7: 08 f1 08 00 00             ; JMP 08f1
08ec: 05                         ; DROP
08ed: 22                         ; RTOD
08ee: 0e 00                      ; CLITERAL 0
08f0: 0c                         ; RET
08f1: 08 b1 08 00 00             ; JMP 08b1
08f6: 0c                         ; RET
;
08f7: 18 27 f4 00 00             ; DICTP MOD (f427)
08fc: 1a                         ; OVER
08fd: 1a                         ; OVER
08fe: 14                         ; DIV
08ff: 13                         ; MUL
0900: 12                         ; SUB
0901: 0c                         ; RET
;
0902: 18 18 f4 00 00             ; DICTP /MOD (f418)
0907: 1a                         ; OVER
0908: 1a                         ; OVER
0909: 14                         ; DIV
090a: 06                         ; DUP
090b: 21                         ; DTOR
090c: 13                         ; MUL
090d: 12                         ; SUB
090e: 22                         ; RTOD
090f: 0c                         ; RET
;
0910: 18 08 f4 00 00             ; DICTP SPACE (f408)
0915: 0e 20                      ; CLITERAL 32
0917: 19                         ; EMIT
0918: 0c                         ; RET
;
0919: 18 f9 f3 00 00             ; DICTP #NEG (f3f9)
091e: 01 24 09 00 00             ; LITERAL 2340 (924)
0923: 0c                         ; RET
0924: 00                         ; RESET
0925: 00                         ; RESET
0926: 00                         ; RESET
0927: 00                         ; RESET
0928: 0c                         ; RET
;
0929: 18 ea f3 00 00             ; DICTP #LEN (f3ea)
092e: 01 34 09 00 00             ; LITERAL 2356 (934)
0933: 0c                         ; RET
0934: 05                         ; DROP
0935: 00                         ; RESET
0936: 00                         ; RESET
0937: 00                         ; RESET
0938: 0c                         ; RET
;
0939: 18 dd f3 00 00             ; DICTP <# (f3dd)
093e: 0b 19 09 00 00             ; CALL #NEG (0919)
0943: 0b 26 03 00 00             ; CALL OFF (0326)
0948: 0b 29 09 00 00             ; CALL #LEN (0929)
094d: 0b 26 03 00 00             ; CALL OFF (0326)
0952: 06                         ; DUP
0953: 0e 00                      ; CLITERAL 0
0955: 15                         ; LT
0956: 09 6a 09 00 00             ; JMPZ 096a
095b: 0b 79 08 00 00             ; CALL NEGATE (0879)
0960: 0b 19 09 00 00             ; CALL #NEG (0919)
0965: 0b 1c 03 00 00             ; CALL ON (031c)
096a: 0e 00                      ; CLITERAL 0
096c: 04                         ; SWAP
096d: 0c                         ; RET
;
096e: 18 d1 f3 00 00             ; DICTP # (f3d1)
0973: 0b 5e 00 00 00             ; CALL BASE (005e)
0978: 02                         ; FETCH
0979: 0b 02 09 00 00             ; CALL /MOD (0902)
097e: 04                         ; SWAP
097f: 0e 30                      ; CLITERAL 48
0981: 11                         ; ADD
0982: 06                         ; DUP
0983: 0e 39                      ; CLITERAL 57
0985: 17                         ; GT
0986: 09 8e 09 00 00             ; JMPZ 098e
098b: 0e 07                      ; CLITERAL 7
098d: 11                         ; ADD
098e: 0b 29 09 00 00             ; CALL #LEN (0929)
0993: 0b e1 04 00 00             ; CALL ++ (04e1)
0998: 04                         ; SWAP
0999: 0c                         ; RET
;
099a: 18 c4 f3 00 00             ; DICTP #S (f3c4)
099f: 0b 6e 09 00 00             ; CALL # (096e)
09a4: 06                         ; DUP
09a5: 0e 00                      ; CLITERAL 0
09a7: 16                         ; EQ
09a8: 09 9f 09 00 00             ; JMPZ 099f
09ad: 0c                         ; RET
;
09ae: 18 b7 f3 00 00             ; DICTP #> (f3b7)
09b3: 0c                         ; RET
;
09b4: 18 a9 f3 00 00             ; DICTP #P- (f3a9)
09b9: 05                         ; DROP
09ba: 0b 19 09 00 00             ; CALL #NEG (0919)
09bf: 02                         ; FETCH
09c0: 09 c8 09 00 00             ; JMPZ 09c8
09c5: 0e 2d                      ; CLITERAL 45
09c7: 19                         ; EMIT
09c8: 0c                         ; RET
;
09c9: 18 9c f3 00 00             ; DICTP #P (f39c)
09ce: 0b b4 09 00 00             ; CALL #P- (09b4)
09d3: 19                         ; EMIT
09d4: 06                         ; DUP
09d5: 0e 00                      ; CLITERAL 0
09d7: 16                         ; EQ
09d8: 09 d3 09 00 00             ; JMPZ 09d3
09dd: 05                         ; DROP
09de: 0c                         ; RET
;
09df: 18 8e f3 00 00             ; DICTP (.) (f38e)
09e4: 0b 39 09 00 00             ; CALL <# (0939)
09e9: 0b 9a 09 00 00             ; CALL #S (099a)
09ee: 0b ae 09 00 00             ; CALL #> (09ae)
09f3: 0b c9 09 00 00             ; CALL #P (09c9)
09f8: 0c                         ; RET
;
09f9: 18 82 f3 00 00             ; DICTP . (f382)
09fe: 0b df 09 00 00             ; CALL (.) (09df)
0a03: 0b 10 09 00 00             ; CALL SPACE (0910)
0a08: 0c                         ; RET
;
0a09: 18 75 f3 00 00             ; DICTP .2 (f375)
0a0e: 0b 39 09 00 00             ; CALL <# (0939)
0a13: 0b 6e 09 00 00             ; CALL # (096e)
0a18: 0b 6e 09 00 00             ; CALL # (096e)
0a1d: 0b ae 09 00 00             ; CALL #> (09ae)
0a22: 0b c9 09 00 00             ; CALL #P (09c9)
0a27: 0c                         ; RET
;
0a28: 18 68 f3 00 00             ; DICTP .3 (f368)
0a2d: 0b 39 09 00 00             ; CALL <# (0939)
0a32: 0b 6e 09 00 00             ; CALL # (096e)
0a37: 0b 6e 09 00 00             ; CALL # (096e)
0a3c: 0b 6e 09 00 00             ; CALL # (096e)
0a41: 0b ae 09 00 00             ; CALL #> (09ae)
0a46: 0b c9 09 00 00             ; CALL #P (09c9)
0a4b: 0c                         ; RET
;
0a4c: 18 5b f3 00 00             ; DICTP .4 (f35b)
0a51: 0b 39 09 00 00             ; CALL <# (0939)
0a56: 0b 6e 09 00 00             ; CALL # (096e)
0a5b: 0b 6e 09 00 00             ; CALL # (096e)
0a60: 0b 6e 09 00 00             ; CALL # (096e)
0a65: 0b 6e 09 00 00             ; CALL # (096e)
0a6a: 0b ae 09 00 00             ; CALL #> (09ae)
0a6f: 0b c9 09 00 00             ; CALL #P (09c9)
0a74: 0c                         ; RET
;
0a75: 18 4c f3 00 00             ; DICTP HEX. (f34c)
0a7a: 0b 5e 00 00 00             ; CALL BASE (005e)
0a7f: 02                         ; FETCH
0a80: 04                         ; SWAP
0a81: 0b e4 02 00 00             ; CALL HEX (02e4)
0a86: 0b df 09 00 00             ; CALL (.) (09df)
0a8b: 0b 5e 00 00 00             ; CALL BASE (005e)
0a90: 03                         ; STORE
0a91: 0c                         ; RET
;
0a92: 18 3c f3 00 00             ; DICTP HEX.2 (f33c)
0a97: 0b 5e 00 00 00             ; CALL BASE (005e)
0a9c: 02                         ; FETCH
0a9d: 04                         ; SWAP
0a9e: 0b e4 02 00 00             ; CALL HEX (02e4)
0aa3: 0b 09 0a 00 00             ; CALL .2 (0a09)
0aa8: 0b 5e 00 00 00             ; CALL BASE (005e)
0aad: 03                         ; STORE
0aae: 0c                         ; RET
;
0aaf: 18 2c f3 00 00             ; DICTP HEX.4 (f32c)
0ab4: 0b 5e 00 00 00             ; CALL BASE (005e)
0ab9: 02                         ; FETCH
0aba: 04                         ; SWAP
0abb: 0b e4 02 00 00             ; CALL HEX (02e4)
0ac0: 0b 4c 0a 00 00             ; CALL .4 (0a4c)
0ac5: 0b 5e 00 00 00             ; CALL BASE (005e)
0aca: 03                         ; STORE
0acb: 0c                         ; RET
;
0acc: 18 19 f3 00 00             ; DICTP DECIMAL. (f319)
0ad1: 0b 5e 00 00 00             ; CALL BASE (005e)
0ad6: 02                         ; FETCH
0ad7: 04                         ; SWAP
0ad8: 0b f2 02 00 00             ; CALL DECIMAL (02f2)
0add: 0b df 09 00 00             ; CALL (.) (09df)
0ae2: 0b 5e 00 00 00             ; CALL BASE (005e)
0ae7: 03                         ; STORE
0ae8: 0c                         ; RET
;
0ae9: 18 07 f3 00 00             ; DICTP BINARY. (f307)
0aee: 0b 5e 00 00 00             ; CALL BASE (005e)
0af3: 02                         ; FETCH
0af4: 04                         ; SWAP
0af5: 0b 0e 03 00 00             ; CALL BINARY (030e)
0afa: 0b df 09 00 00             ; CALL (.) (09df)
0aff: 0b 5e 00 00 00             ; CALL BASE (005e)
0b04: 03                         ; STORE
0b05: 0c                         ; RET
;
0b06: 18 f9 f2 00 00             ; DICTP MIN (f2f9)
0b0b: 1a                         ; OVER
0b0c: 1a                         ; OVER
0b0d: 17                         ; GT
0b0e: 09 14 0b 00 00             ; JMPZ 0b14
0b13: 04                         ; SWAP
0b14: 05                         ; DROP
0b15: 0c                         ; RET
;
0b16: 18 eb f2 00 00             ; DICTP MAX (f2eb)
0b1b: 1a                         ; OVER
0b1c: 1a                         ; OVER
0b1d: 15                         ; LT
0b1e: 09 24 0b 00 00             ; JMPZ 0b24
0b23: 04                         ; SWAP
0b24: 05                         ; DROP
0b25: 0c                         ; RET
;
0b26: 18 de f2 00 00             ; DICTP .S (f2de)
0b2b: 0e 20                      ; CLITERAL 32
0b2d: 19                         ; EMIT
0b2e: 26                         ; DEPTH
0b2f: 0e 00                      ; CLITERAL 0
0b31: 15                         ; LT
0b32: 09 55 0b 00 00             ; JMPZ 0b55
0b37: 07 10 53 74 61 63 6b 20 75 6e 64 65 72 66 6c 6f 77 21 00 ; SLITERAL (0b38) [Stack underflow!]
0b4a: 0b 69 05 00 00             ; CALL COUNT (0569)
0b4f: 0b 73 05 00 00             ; CALL TYPE (0573)
0b54: fe                         ; RESET
0b55: 26                         ; DEPTH
0b56: 0e 00                      ; CLITERAL 0
0b58: 16                         ; EQ
0b59: 09 68 0b 00 00             ; JMPZ 0b68
0b5e: 0e 28                      ; CLITERAL 40
0b60: 19                         ; EMIT
0b61: 0e ed                      ; CLITERAL 237
0b63: 19                         ; EMIT
0b64: 0e 29                      ; CLITERAL 41
0b66: 19                         ; EMIT
0b67: 0c                         ; RET
0b68: 0e 28                      ; CLITERAL 40
0b6a: 19                         ; EMIT
0b6b: 0b 10 09 00 00             ; CALL SPACE (0910)
0b70: 26                         ; DEPTH
0b71: 2e                         ; DEC
0b72: 21                         ; DTOR
0b73: 22                         ; RTOD
0b74: 06                         ; DUP
0b75: 21                         ; DTOR
0b76: 25                         ; PICK
0b77: 0b f9 09 00 00             ; CALL . (09f9)
0b7c: 22                         ; RTOD
0b7d: 06                         ; DUP
0b7e: 21                         ; DTOR
0b7f: 09 8c 0b 00 00             ; JMPZ 0b8c
0b84: 22                         ; RTOD
0b85: 2e                         ; DEC
0b86: 21                         ; DTOR
0b87: 08 92 0b 00 00             ; JMP 0b92
0b8c: 22                         ; RTOD
0b8d: 05                         ; DROP
0b8e: 0e 29                      ; CLITERAL 41
0b90: 19                         ; EMIT
0b91: 0c                         ; RET
0b92: 08 73 0b 00 00             ; JMP 0b73
0b97: 0c                         ; RET
;
0b98: 18 ca f2 00 00             ; DICTP .(MEM_SZ) (f2ca)
0b9d: 07 08 4d 65 6d 6f 72 79 3a 20 00 ; SLITERAL (0b9e) [Memory: ]
0ba8: 0b 93 05 00 00             ; CALL CT (0593)
0bad: 0b 35 04 00 00             ; CALL MEM_SZ (0435)
0bb2: 06                         ; DUP
0bb3: 0b 75 0a 00 00             ; CALL HEX. (0a75)
0bb8: 07 02 20 28 00             ; SLITERAL (0bb9) [ (]
0bbd: 0b 93 05 00 00             ; CALL CT (0593)
0bc2: 0b df 09 00 00             ; CALL (.) (09df)
0bc7: 07 01 29 00                ; SLITERAL (0bc8) [)]
0bcb: 0b 93 05 00 00             ; CALL CT (0593)
0bd0: 0c                         ; RET
;
0bd1: 18 b8 f2 00 00             ; DICTP .(HERE) (f2b8)
0bd6: 07 06 48 45 52 45 3a 20 00 ; SLITERAL (0bd7) [HERE: ]
0bdf: 0b 93 05 00 00             ; CALL CT (0593)
0be4: 0b 93 00 00 00             ; CALL HERE (0093)
0be9: 06                         ; DUP
0bea: 0b 75 0a 00 00             ; CALL HEX. (0a75)
0bef: 07 02 20 28 00             ; SLITERAL (0bf0) [ (]
0bf4: 0b 93 05 00 00             ; CALL CT (0593)
0bf9: 0b df 09 00 00             ; CALL (.) (09df)
0bfe: 07 01 29 00                ; SLITERAL (0bff) [)]
0c02: 0b 93 05 00 00             ; CALL CT (0593)
0c07: 0c                         ; RET
;
0c08: 18 a6 f2 00 00             ; DICTP .(LAST) (f2a6)
0c0d: 07 06 4c 41 53 54 3a 20 00 ; SLITERAL (0c0e) [LAST: ]
0c16: 0b 93 05 00 00             ; CALL CT (0593)
0c1b: 0b 9f 00 00 00             ; CALL LAST (009f)
0c20: 06                         ; DUP
0c21: 0b 75 0a 00 00             ; CALL HEX. (0a75)
0c26: 07 02 20 28 00             ; SLITERAL (0c27) [ (]
0c2b: 0b 93 05 00 00             ; CALL CT (0593)
0c30: 0b df 09 00 00             ; CALL (.) (09df)
0c35: 07 01 29 00                ; SLITERAL (0c36) [)]
0c39: 0b 93 05 00 00             ; CALL CT (0593)
0c3e: 0c                         ; RET
;
0c3f: 18 90 f2 00 00             ; DICTP .WORD-SHORT (f290)
0c44: 06                         ; DUP
0c45: 0b 23 07 00 00             ; CALL DICT>NAME (0723)
0c4a: 0b 93 05 00 00             ; CALL CT (0593)
0c4f: 0e 20                      ; CLITERAL 32
0c51: 19                         ; EMIT
0c52: 02                         ; FETCH
0c53: 0c                         ; RET
;
0c54: 18 80 f2 00 00             ; DICTP WORDS (f280)
0c59: 0b 9f 00 00 00             ; CALL LAST (009f)
0c5e: 06                         ; DUP
0c5f: 02                         ; FETCH
0c60: 0e 00                      ; CLITERAL 0
0c62: 16                         ; EQ
0c63: 09 70 0c 00 00             ; JMPZ 0c70
0c68: 05                         ; DROP
0c69: 0e 0d                      ; CLITERAL 13
0c6b: 19                         ; EMIT
0c6c: 0e 0a                      ; CLITERAL 10
0c6e: 19                         ; EMIT
0c6f: 0c                         ; RET
0c70: 0b 3f 0c 00 00             ; CALL .WORD-SHORT (0c3f)
0c75: 08 5e 0c 00 00             ; JMP 0c5e
0c7a: 0c                         ; RET
;
0c7b: 18 6b f2 00 00             ; DICTP .WORD-LONG (f26b)
0c80: 06                         ; DUP
0c81: 0b 75 0a 00 00             ; CALL HEX. (0a75)
0c86: 0e 3a                      ; CLITERAL 58
0c88: 19                         ; EMIT
0c89: 0e 20                      ; CLITERAL 32
0c8b: 19                         ; EMIT
0c8c: 06                         ; DUP
0c8d: 0b 23 07 00 00             ; CALL DICT>NAME (0723)
0c92: 0b 93 05 00 00             ; CALL CT (0593)
0c97: 0e 20                      ; CLITERAL 32
0c99: 19                         ; EMIT
0c9a: 06                         ; DUP
0c9b: 0b 60 07 00 00             ; CALL DICT.GetXT (0760)
0ca0: 0e 28                      ; CLITERAL 40
0ca2: 19                         ; EMIT
0ca3: 0b af 0a 00 00             ; CALL HEX.4 (0aaf)
0ca8: 0e 29                      ; CLITERAL 41
0caa: 19                         ; EMIT
0cab: 06                         ; DUP
0cac: 0b 14 07 00 00             ; CALL DICT>FLAGS (0714)
0cb1: 0f                         ; CFETCH
0cb2: 06                         ; DUP
0cb3: 07 09 2c 20 46 6c 61 67 73 3a 20 00 ; SLITERAL (0cb4) [, Flags: ]
0cbf: 0b 93 05 00 00             ; CALL CT (0593)
0cc4: 0b 92 0a 00 00             ; CALL HEX.2 (0a92)
0cc9: 06                         ; DUP
0cca: 0b a7 07 00 00             ; CALL FLAGS.ISINLINE? (07a7)
0ccf: 09 e5 0c 00 00             ; JMPZ 0ce5
0cd4: 07 09 20 28 49 4e 4c 49 4e 45 29 00 ; SLITERAL (0cd5) [ (INLINE)]
0ce0: 0b 93 05 00 00             ; CALL CT (0593)
0ce5: 0b 9e 07 00 00             ; CALL FLAGS.ISIMMEDIATE? (079e)
0cea: 09 03 0d 00 00             ; JMPZ 0d03
0cef: 07 0c 20 28 49 4d 4d 45 44 49 41 54 45 29 00 ; SLITERAL (0cf0) [ (IMMEDIATE)]
0cfe: 0b 93 05 00 00             ; CALL CT (0593)
0d03: 0e 0d                      ; CLITERAL 13
0d05: 19                         ; EMIT
0d06: 0e 0a                      ; CLITERAL 10
0d08: 19                         ; EMIT
0d09: 02                         ; FETCH
0d0a: 0c                         ; RET
;
0d0b: 18 5a f2 00 00             ; DICTP WORDSV (f25a)
0d10: 0b 08 0c 00 00             ; CALL .(LAST) (0c08)
0d15: 0e 0d                      ; CLITERAL 13
0d17: 19                         ; EMIT
0d18: 0e 0a                      ; CLITERAL 10
0d1a: 19                         ; EMIT
0d1b: 0b 9f 00 00 00             ; CALL LAST (009f)
0d20: 06                         ; DUP
0d21: 02                         ; FETCH
0d22: 0e 00                      ; CLITERAL 0
0d24: 16                         ; EQ
0d25: 09 32 0d 00 00             ; JMPZ 0d32
0d2a: 05                         ; DROP
0d2b: 0e 0d                      ; CLITERAL 13
0d2d: 19                         ; EMIT
0d2e: 0e 0a                      ; CLITERAL 10
0d30: 19                         ; EMIT
0d31: 0c                         ; RET
0d32: 0b 7b 0c 00 00             ; CALL .WORD-LONG (0c7b)
0d37: 08 20 0d 00 00             ; JMP 0d20
0d3c: 0c                         ; RET
;
0d3d: 18 46 f2 00 00             ; DICTP NUM-WORDS (f246)
0d42: 0e 00                      ; CLITERAL 0
0d44: 21                         ; DTOR
0d45: 0b 9f 00 00 00             ; CALL LAST (009f)
0d4a: 06                         ; DUP
0d4b: 02                         ; FETCH
0d4c: 0e 00                      ; CLITERAL 0
0d4e: 16                         ; EQ
0d4f: 09 5d 0d 00 00             ; JMPZ 0d5d
0d54: 05                         ; DROP
0d55: 22                         ; RTOD
0d56: 0e 0d                      ; CLITERAL 13
0d58: 19                         ; EMIT
0d59: 0e 0a                      ; CLITERAL 10
0d5b: 19                         ; EMIT
0d5c: 0c                         ; RET
0d5d: 22                         ; RTOD
0d5e: 2c                         ; INC
0d5f: 21                         ; DTOR
0d60: 02                         ; FETCH
0d61: 08 4a 0d 00 00             ; JMP 0d4a
0d66: 0c                         ; RET
;
0d67: 18 35 f2 00 00             ; DICTP .lastx (f235)
0d6c: 0e 0d                      ; CLITERAL 13
0d6e: 19                         ; EMIT
0d6f: 0e 0a                      ; CLITERAL 10
0d71: 19                         ; EMIT
0d72: 0b 9f 00 00 00             ; CALL LAST (009f)
0d77: 04                         ; SWAP
0d78: 0e 00                      ; CLITERAL 0
0d7a: 1a                         ; OVER
0d7b: 1a                         ; OVER
0d7c: 17                         ; GT
0d7d: 09 95 0d 00 00             ; JMPZ 0d95
0d82: 21                         ; DTOR
0d83: 04                         ; SWAP
0d84: 22                         ; RTOD
0d85: 04                         ; SWAP
0d86: 0b 7b 0c 00 00             ; CALL .WORD-LONG (0c7b)
0d8b: 04                         ; SWAP
0d8c: 21                         ; DTOR
0d8d: 04                         ; SWAP
0d8e: 22                         ; RTOD
0d8f: 2c                         ; INC
0d90: 08 99 0d 00 00             ; JMP 0d99
0d95: 05                         ; DROP
0d96: 05                         ; DROP
0d97: 05                         ; DROP
0d98: 0c                         ; RET
0d99: 08 7a 0d 00 00             ; JMP 0d7a
0d9e: 0c                         ; RET
;
0d9f: 18 23 f2 00 00             ; DICTP EXECUTE (f223)
0da4: 22                         ; RTOD
0da5: 05                         ; DROP
0da6: 21                         ; DTOR
0da7: 0c                         ; RET
;
0da8: 18 10 f2 00 00             ; DICTP find.ret (f210)
0dad: 06                         ; DUP
0dae: 0f                         ; CFETCH
0daf: 0e 0c                      ; CLITERAL 12
0db1: 16                         ; EQ
0db2: 09 b8 0d 00 00             ; JMPZ 0db8
0db7: 0c                         ; RET
0db8: 2c                         ; INC
0db9: 08 ad 0d 00 00             ; JMP 0dad
0dbe: 0c                         ; RET
;
0dbf: 18 fd f1 00 00             ; DICTP (inline) (f1fd)
0dc4: 1a                         ; OVER
0dc5: 1a                         ; OVER
0dc6: 15                         ; LT
0dc7: 09 cd 0d 00 00             ; JMPZ 0dcd
0dcc: 04                         ; SWAP
0dcd: 06                         ; DUP
0dce: 0f                         ; CFETCH
0dcf: 0b ab 00 00 00             ; CALL C, (00ab)
0dd4: 2c                         ; INC
0dd5: 1a                         ; OVER
0dd6: 1a                         ; OVER
0dd7: 17                         ; GT
0dd8: 0a cd 0d 00 00             ; JMPNZ 0dcd
0ddd: 05                         ; DROP
0dde: 05                         ; DROP
0ddf: 0c                         ; RET
;
0de0: 18 ed f1 00 00             ; DICTP DOES> (f1ed)
0de5: 22                         ; RTOD
0de6: 06                         ; DUP
0de7: 0b a8 0d 00 00             ; CALL find.ret (0da8)
0dec: 06                         ; DUP
0ded: 21                         ; DTOR
0dee: 2c                         ; INC
0def: 0b bf 0d 00 00             ; CALL (inline) (0dbf)
0df4: 0c                         ; RET
;
0df5: 18 d7 f1 00 00             ; DICTP Copy.INLINE (f1d7)
0dfa: 06                         ; DUP
0dfb: 0f                         ; CFETCH
0dfc: 0e 18                      ; CLITERAL 24
0dfe: 16                         ; EQ
0dff: 09 0b 0e 00 00             ; JMPZ 0e0b
0e04: 2c                         ; INC
0e05: 0b 8b 00 00 00             ; CALL CELL (008b)
0e0a: 11                         ; ADD
0e0b: 06                         ; DUP
0e0c: 0b a8 0d 00 00             ; CALL find.ret (0da8)
0e11: 0b bf 0d 00 00             ; CALL (inline) (0dbf)
0e16: 0c                         ; RET
;
0e17: 18 c6 f1 00 00             ; DICTP strlen (f1c6)
0e1c: 0e 00                      ; CLITERAL 0
0e1e: 04                         ; SWAP
0e1f: 04                         ; SWAP
0e20: 1a                         ; OVER
0e21: 0f                         ; CFETCH
0e22: 06                         ; DUP
0e23: 09 2e 0e 00 00             ; JMPZ 0e2e
0e28: 05                         ; DROP
0e29: 2c                         ; INC
0e2a: 04                         ; SWAP
0e2b: 2c                         ; INC
0e2c: 0e 01                      ; CLITERAL 1
0e2e: 0a 1f 0e 00 00             ; JMPNZ 0e1f
0e33: 04                         ; SWAP
0e34: 05                         ; DROP
0e35: 0c                         ; RET
;
0e36: 18 b6 f1 00 00             ; DICTP cstr, (f1b6)
0e3b: 06                         ; DUP
0e3c: 0f                         ; CFETCH
0e3d: 1a                         ; OVER
0e3e: 11                         ; ADD
0e3f: 2c                         ; INC
0e40: 2c                         ; INC
0e41: 0b bf 0d 00 00             ; CALL (inline) (0dbf)
0e46: 0c                         ; RET
;
0e47: 18 a2 f1 00 00             ; DICTP [COMPILE] (f1a2)
0e4c: 0b a7 07 00 00             ; CALL FLAGS.ISINLINE? (07a7)
0e51: 09 60 0e 00 00             ; JMPZ 0e60
0e56: 0b f5 0d 00 00             ; CALL Copy.INLINE (0df5)
0e5b: 08 6a 0e 00 00             ; JMP 0e6a
0e60: 0b 62 01 00 00             ; CALL CALL (0162)
0e65: 0b c5 00 00 00             ; CALL , (00c5)
0e6a: 0c                         ; RET
;
0e6b: 18 8c f1 00 00             ; DICTP executeWord (f18c)
0e70: 21                         ; DTOR
0e71: 22                         ; RTOD
0e72: 06                         ; DUP
0e73: 21                         ; DTOR
0e74: 0b d0 07 00 00             ; CALL findInDict (07d0)
0e79: 09 b5 0e 00 00             ; JMPZ 0eb5
0e7e: 22                         ; RTOD
0e7f: 05                         ; DROP
0e80: 0b 30 03 00 00             ; CALL ?COMPILING (0330)
0e85: 09 aa 0e 00 00             ; JMPZ 0eaa
0e8a: 06                         ; DUP
0e8b: 0b 9e 07 00 00             ; CALL FLAGS.ISIMMEDIATE? (079e)
0e90: 09 a0 0e 00 00             ; JMPZ 0ea0
0e95: 05                         ; DROP
0e96: 0b 9f 0d 00 00             ; CALL EXECUTE (0d9f)
0e9b: 08 a5 0e 00 00             ; JMP 0ea5
0ea0: 0b 47 0e 00 00             ; CALL [COMPILE] (0e47)
0ea5: 08 b0 0e 00 00             ; JMP 0eb0
0eaa: 05                         ; DROP
0eab: 0b 9f 0d 00 00             ; CALL EXECUTE (0d9f)
0eb0: 08 0b 0f 00 00             ; JMP 0f0b
0eb5: 05                         ; DROP
0eb6: 05                         ; DROP
0eb7: 22                         ; RTOD
0eb8: 06                         ; DUP
0eb9: 21                         ; DTOR
0eba: 0b 97 08 00 00             ; CALL isNumber? (0897)
0ebf: 09 fd 0e 00 00             ; JMPZ 0efd
0ec4: 0b 30 03 00 00             ; CALL ?COMPILING (0330)
0ec9: 09 f8 0e 00 00             ; JMPZ 0ef8
0ece: 06                         ; DUP
0ecf: 0e 00                      ; CLITERAL 0
0ed1: 0e ff                      ; CLITERAL 255
0ed3: 0b 1d 06 00 00             ; CALL BETWEEN (061d)
0ed8: 09 ee 0e 00 00             ; JMPZ 0eee
0edd: 0e 0e                      ; CLITERAL 14
0edf: 0b ab 00 00 00             ; CALL C, (00ab)
0ee4: 0b ab 00 00 00             ; CALL C, (00ab)
0ee9: 08 f8 0e 00 00             ; JMP 0ef8
0eee: 0b fe 00 00 00             ; CALL LITERAL (00fe)
0ef3: 0b c5 00 00 00             ; CALL , (00c5)
0ef8: 08 09 0f 00 00             ; JMP 0f09
0efd: 05                         ; DROP
0efe: 07 02 3f 3f 00             ; SLITERAL (0eff) [??]
0f03: 0b 93 05 00 00             ; CALL CT (0593)
0f08: fe                         ; RESET
0f09: 22                         ; RTOD
0f0a: 05                         ; DROP
0f0b: 0c                         ; RET
;
0f0c: 18 75 f1 00 00             ; DICTP executeInput (f175)
0f11: 0b 15 04 00 00             ; CALL >IN (0415)
0f16: 02                         ; FETCH
0f17: 0b a1 06 00 00             ; CALL skipWS (06a1)
0f1c: 0b 15 04 00 00             ; CALL >IN (0415)
0f21: 03                         ; STORE
0f22: 0b 15 04 00 00             ; CALL >IN (0415)
0f27: 02                         ; FETCH
0f28: 0f                         ; CFETCH
0f29: 09 49 0f 00 00             ; JMPZ 0f49
0f2e: 0b 15 04 00 00             ; CALL >IN (0415)
0f33: 02                         ; FETCH
0f34: 0b ca 06 00 00             ; CALL getOneWord (06ca)
0f39: 0b 15 04 00 00             ; CALL >IN (0415)
0f3e: 03                         ; STORE
0f3f: 0b 6b 0e 00 00             ; CALL executeWord (0e6b)
0f44: 08 4a 0f 00 00             ; JMP 0f4a
0f49: 0c                         ; RET
0f4a: 08 11 0f 00 00             ; JMP 0f11
0f4f: 0c                         ; RET
;
0f50: 18 67 f1 00 00             ; DICTP Pad (f167)
0f55: 0b 9f 00 00 00             ; CALL LAST (009f)
0f5a: 0e c8                      ; CLITERAL 200
0f5c: 12                         ; SUB
0f5d: 06                         ; DUP
0f5e: 0b 93 00 00 00             ; CALL HERE (0093)
0f63: 15                         ; LT
0f64: 09 7b 0f 00 00             ; JMPZ 0f7b
0f69: 07 0e 4f 75 74 20 6f 66 20 4d 65 6d 6f 72 79 21 00 ; SLITERAL (0f6a) [Out of Memory!]
0f7a: fe                         ; RESET
0f7b: 0c                         ; RET
;
0f7c: 18 54 f1 00 00             ; DICTP INPUT-FP (f154)
0f81: 01 87 0f 00 00             ; LITERAL 3975 (f87)
0f86: 0c                         ; RET
0f87: 00                         ; RESET
0f88: 00                         ; RESET
0f89: 00                         ; RESET
0f8a: 00                         ; RESET
0f8b: 18 39 f1 00 00             ; DICTP LoadingFromFile? (f139)
0f90: 0b 7c 0f 00 00             ; CALL INPUT-FP (0f7c)
0f95: 02                         ; FETCH
0f96: 0c                         ; RET
;
0f97: 18 1f f1 00 00             ; DICTP getLineFromFile (f11f)
0f9c: 0e c8                      ; CLITERAL 200
0f9e: 0b 7c 0f 00 00             ; CALL INPUT-FP (0f7c)
0fa3: 02                         ; FETCH
0fa4: 1e                         ; FREADLINE
0fa5: 0e 00                      ; CLITERAL 0
0fa7: 16                         ; EQ
0fa8: 09 b7 0f 00 00             ; JMPZ 0fb7
0fad: 0b 7c 0f 00 00             ; CALL INPUT-FP (0f7c)
0fb2: 0b 26 03 00 00             ; CALL OFF (0326)
0fb7: 0c                         ; RET
;
0fb8: 18 0d f1 00 00             ; DICTP getLine (f10d)
0fbd: 0e 00                      ; CLITERAL 0
0fbf: 0b 50 0f 00 00             ; CALL Pad (0f50)
0fc4: 06                         ; DUP
0fc5: 2c                         ; INC
0fc6: 0b 15 04 00 00             ; CALL >IN (0415)
0fcb: 03                         ; STORE
0fcc: 10                         ; CSTORE
0fcd: 0b 8b 0f 00 00             ; CALL LoadingFromFile? (0f8b)
0fd2: 09 e2 0f 00 00             ; JMPZ 0fe2
0fd7: 0b 50 0f 00 00             ; CALL Pad (0f50)
0fdc: 0b 97 0f 00 00             ; CALL getLineFromFile (0f97)
0fe1: 0c                         ; RET
0fe2: 0e 00                      ; CLITERAL 0
0fe4: 0b 15 04 00 00             ; CALL >IN (0415)
0fe9: 02                         ; FETCH
0fea: 10                         ; CSTORE
0feb: 27                         ; GETCH
0fec: 06                         ; DUP
0fed: 0e 0d                      ; CLITERAL 13
0fef: 16                         ; EQ
0ff0: 09 ff 0f 00 00             ; JMPZ 0fff
0ff5: 05                         ; DROP
0ff6: 0b 50 0f 00 00             ; CALL Pad (0f50)
0ffb: 0e 20                      ; CLITERAL 32
0ffd: 19                         ; EMIT
0ffe: 0c                         ; RET
0fff: 06                         ; DUP
1000: 0e 09                      ; CLITERAL 9
1002: 16                         ; EQ
1003: 09 0b 10 00 00             ; JMPZ 100b
1008: 05                         ; DROP
1009: 0e 20                      ; CLITERAL 32
100b: 06                         ; DUP
100c: 0e 03                      ; CLITERAL 3
100e: 16                         ; EQ
100f: 09 15 10 00 00             ; JMPZ 1015
1014: ff                         ; BYE
1015: 06                         ; DUP
1016: 0e 08                      ; CLITERAL 8
1018: 16                         ; EQ
1019: 09 51 10 00 00             ; JMPZ 1051
101e: 0b 50 0f 00 00             ; CALL Pad (0f50)
1023: 0f                         ; CFETCH
1024: 0e 00                      ; CLITERAL 0
1026: 17                         ; GT
1027: 09 4b 10 00 00             ; JMPZ 104b
102c: 0b 50 0f 00 00             ; CALL Pad (0f50)
1031: 0b 06 05 00 00             ; CALL C-- (0506)
1036: 0b 15 04 00 00             ; CALL >IN (0415)
103b: 0b ee 04 00 00             ; CALL -- (04ee)
1040: 06                         ; DUP
1041: 19                         ; EMIT
1042: 0e 20                      ; CLITERAL 32
1044: 19                         ; EMIT
1045: 19                         ; EMIT
1046: 08 4c 10 00 00             ; JMP 104c
104b: 05                         ; DROP
104c: 08 83 10 00 00             ; JMP 1083
1051: 06                         ; DUP
1052: 0e 20                      ; CLITERAL 32
1054: 0e 7f                      ; CLITERAL 127
1056: 0b 1d 06 00 00             ; CALL BETWEEN (061d)
105b: 09 82 10 00 00             ; JMPZ 1082
1060: 06                         ; DUP
1061: 19                         ; EMIT
1062: 0b 15 04 00 00             ; CALL >IN (0415)
1067: 02                         ; FETCH
1068: 10                         ; CSTORE
1069: 0b 15 04 00 00             ; CALL >IN (0415)
106e: 0b e1 04 00 00             ; CALL ++ (04e1)
1073: 0b 50 0f 00 00             ; CALL Pad (0f50)
1078: 0b fb 04 00 00             ; CALL C++ (04fb)
107d: 08 83 10 00 00             ; JMP 1083
1082: 05                         ; DROP
1083: 08 e2 0f 00 00             ; JMP 0fe2
1088: 0c                         ; RET
;
1089: 18 fa f0 00 00             ; DICTP strcpy2c (f0fa)
108e: 06                         ; DUP
108f: 21                         ; DTOR
1090: 0e 00                      ; CLITERAL 0
1092: 1a                         ; OVER
1093: 10                         ; CSTORE
1094: 2c                         ; INC
1095: 04                         ; SWAP
1096: 06                         ; DUP
1097: 0f                         ; CFETCH
1098: 06                         ; DUP
1099: 09 b3 10 00 00             ; JMPZ 10b3
109e: 0e 02                      ; CLITERAL 2
10a0: 25                         ; PICK
10a1: 10                         ; CSTORE
10a2: 04                         ; SWAP
10a3: 2c                         ; INC
10a4: 04                         ; SWAP
10a5: 2c                         ; INC
10a6: 22                         ; RTOD
10a7: 06                         ; DUP
10a8: 21                         ; DTOR
10a9: 0b fb 04 00 00             ; CALL C++ (04fb)
10ae: 08 bc 10 00 00             ; JMP 10bc
10b3: 21                         ; DTOR
10b4: 04                         ; SWAP
10b5: 22                         ; RTOD
10b6: 04                         ; SWAP
10b7: 10                         ; CSTORE
10b8: 05                         ; DROP
10b9: 22                         ; RTOD
10ba: 05                         ; DROP
10bb: 0c                         ; RET
10bc: 08 96 10 00 00             ; JMP 1096
10c1: 0c                         ; RET
;
10c2: 18 e4 f0 00 00             ; DICTP Define-Word (f0e4)
10c7: 0b 9f 00 00 00             ; CALL LAST (009f)
10cc: 1a                         ; OVER
10cd: 0b 17 0e 00 00             ; CALL strlen (0e17)
10d2: 0e 02                      ; CLITERAL 2
10d4: 0b 8b 00 00 00             ; CALL CELL (008b)
10d9: 13                         ; MUL
10da: 0e 03                      ; CLITERAL 3
10dc: 11                         ; ADD
10dd: 11                         ; ADD
10de: 12                         ; SUB
10df: 06                         ; DUP
10e0: 21                         ; DTOR
10e1: 21                         ; DTOR
10e2: 0b 9f 00 00 00             ; CALL LAST (009f)
10e7: 22                         ; RTOD
10e8: 06                         ; DUP
10e9: 21                         ; DTOR
10ea: 03                         ; STORE
10eb: 22                         ; RTOD
10ec: 0b 8b 00 00 00             ; CALL CELL (008b)
10f1: 11                         ; ADD
10f2: 21                         ; DTOR
10f3: 0b 93 00 00 00             ; CALL HERE (0093)
10f8: 22                         ; RTOD
10f9: 06                         ; DUP
10fa: 21                         ; DTOR
10fb: 03                         ; STORE
10fc: 22                         ; RTOD
10fd: 0b 8b 00 00 00             ; CALL CELL (008b)
1102: 11                         ; ADD
1103: 21                         ; DTOR
1104: 0e 00                      ; CLITERAL 0
1106: 22                         ; RTOD
1107: 06                         ; DUP
1108: 21                         ; DTOR
1109: 10                         ; CSTORE
110a: 22                         ; RTOD
110b: 2c                         ; INC
110c: 21                         ; DTOR
110d: 22                         ; RTOD
110e: 0b 89 10 00 00             ; CALL strcpy2c (1089)
1113: 22                         ; RTOD
1114: 0b 4f 00 00 00             ; CALL (LAST) (004f)
1119: 03                         ; STORE
111a: 0c                         ; RET
;
111b: 18 ce f0 00 00             ; DICTP CREATE-NAME (f0ce)
1120: 0b 15 04 00 00             ; CALL >IN (0415)
1125: 02                         ; FETCH
1126: 0b a1 06 00 00             ; CALL skipWS (06a1)
112b: 0b 15 04 00 00             ; CALL >IN (0415)
1130: 03                         ; STORE
1131: 0b 15 04 00 00             ; CALL >IN (0415)
1136: 02                         ; FETCH
1137: 0f                         ; CFETCH
1138: 09 72 11 00 00             ; JMPZ 1172
113d: 0b 15 04 00 00             ; CALL >IN (0415)
1142: 02                         ; FETCH
1143: 0b ca 06 00 00             ; CALL getOneWord (06ca)
1148: 0b 15 04 00 00             ; CALL >IN (0415)
114d: 03                         ; STORE
114e: 06                         ; DUP
114f: 0f                         ; CFETCH
1150: 09 70 11 00 00             ; JMPZ 1170
1155: 0b c2 10 00 00             ; CALL Define-Word (10c2)
115a: 0e 18                      ; CLITERAL 24
115c: 0b ab 00 00 00             ; CALL C, (00ab)
1161: 0b 9f 00 00 00             ; CALL LAST (009f)
1166: 0b c5 00 00 00             ; CALL , (00c5)
116b: 08 72 11 00 00             ; JMP 1172
1170: 05                         ; DROP
1171: fe                         ; RESET
1172: 0c                         ; RET
;
1173: 18 c2 f0 00 00             ; DICTP : (f0c2)
1178: 0b 1b 11 00 00             ; CALL CREATE-NAME (111b)
117d: 0b 6d 00 00 00             ; CALL STATE (006d)
1182: 0b 1c 03 00 00             ; CALL ON (031c)
1187: 0c                         ; RET
;
1188: 18 b0 f0 00 00             ; DICTP :NONAME (f0b0)
118d: 0b 93 00 00 00             ; CALL HERE (0093)
1192: 0b 6d 00 00 00             ; CALL STATE (006d)
1197: 0b 1c 03 00 00             ; CALL ON (031c)
119c: 0c                         ; RET
;
119d: 18 a4 f0 00 00             ; DICTP ; (f0a4)
11a2: 0b 6f 01 00 00             ; CALL RET (016f)
11a7: 0b 6d 00 00 00             ; CALL STATE (006d)
11ac: 0b 26 03 00 00             ; CALL OFF (0326)
11b1: 0c                         ; RET
;
11b2: 18 8f f0 00 00             ; DICTP ForgetLast (f08f)
11b7: 0b 9f 00 00 00             ; CALL LAST (009f)
11bc: 0b 8b 00 00 00             ; CALL CELL (008b)
11c1: 11                         ; ADD
11c2: 02                         ; FETCH
11c3: 0b 40 00 00 00             ; CALL (HERE) (0040)
11c8: 03                         ; STORE
11c9: 0b 9f 00 00 00             ; CALL LAST (009f)
11ce: 02                         ; FETCH
11cf: 0b 4f 00 00 00             ; CALL (LAST) (004f)
11d4: 03                         ; STORE
11d5: 0c                         ; RET
;
11d6: 18 7a f0 00 00             ; DICTP resetState (f07a)
11db: 0b 30 03 00 00             ; CALL ?COMPILING (0330)
11e0: 09 ea 11 00 00             ; JMPZ 11ea
11e5: 0b b2 11 00 00             ; CALL ForgetLast (11b2)
11ea: 0b 6d 00 00 00             ; CALL STATE (006d)
11ef: 0b 26 03 00 00             ; CALL OFF (0326)
11f4: 0b f2 02 00 00             ; CALL DECIMAL (02f2)
11f9: 0c                         ; RET
;
11fa: 18 6a f0 00 00             ; DICTP ALLOT (f06a)
11ff: 0b 93 00 00 00             ; CALL HERE (0093)
1204: 11                         ; ADD
1205: 0b 40 00 00 00             ; CALL (HERE) (0040)
120a: 03                         ; STORE
120b: 0c                         ; RET
;
120c: 18 5e f0 00 00             ; DICTP ? (f05e)
1211: 02                         ; FETCH
1212: 0b f9 09 00 00             ; CALL . (09f9)
1217: 0c                         ; RET
;
1218: 18 51 f0 00 00             ; DICTP C? (f051)
121d: 0f                         ; CFETCH
121e: 0b f9 09 00 00             ; CALL . (09f9)
1223: 0c                         ; RET
;
1224: 18 42 f0 00 00             ; DICTP FREE (f042)
1229: 0b 9f 00 00 00             ; CALL LAST (009f)
122e: 0b 93 00 00 00             ; CALL HERE (0093)
1233: 12                         ; SUB
1234: 0c                         ; RET
;
1235: 18 32 f0 00 00             ; DICTP .FREE (f032)
123a: 0b 24 12 00 00             ; CALL FREE (1224)
123f: 0b df 09 00 00             ; CALL (.) (09df)
1244: 07 0c 20 62 79 74 65 73 20 66 72 65 65 2e 00 ; SLITERAL (1245) [ bytes free.]
1253: 0b 93 05 00 00             ; CALL CT (0593)
1258: 0c                         ; RET
;
1259: 18 1f f0 00 00             ; DICTP mainLoop (f01f)
125e: 0b d6 11 00 00             ; CALL resetState (11d6)
1263: 0b 45 06 00 00             ; CALL tmp-init (0645)
1268: 0b 30 03 00 00             ; CALL ?COMPILING (0330)
126d: 0e 00                      ; CLITERAL 0
126f: 16                         ; EQ
1270: 09 85 12 00 00             ; JMPZ 1285
1275: 07 03 20 4f 4b 00          ; SLITERAL (1276) [ OK]
127b: 0b 93 05 00 00             ; CALL CT (0593)
1280: 0b 26 0b 00 00             ; CALL .S (0b26)
1285: 0e 0d                      ; CLITERAL 13
1287: 19                         ; EMIT
1288: 0e 0a                      ; CLITERAL 10
128a: 19                         ; EMIT
128b: 0b b8 0f 00 00             ; CALL getLine (0fb8)
1290: 2c                         ; INC
1291: 0b 15 04 00 00             ; CALL >IN (0415)
1296: 03                         ; STORE
1297: 0b 0c 0f 00 00             ; CALL executeInput (0f0c)
129c: 0e 20                      ; CLITERAL 32
129e: 19                         ; EMIT
129f: 08 63 12 00 00             ; JMP 1263
12a4: 0c                         ; RET
;
12a5: 18 10 f0 00 00             ; DICTP main (f010)
12aa: 0b 6d 00 00 00             ; CALL STATE (006d)
12af: 02                         ; FETCH
12b0: 0e 63                      ; CLITERAL 99
12b2: 16                         ; EQ
12b3: 09 d0 12 00 00             ; JMPZ 12d0
12b8: 0b 6d 00 00 00             ; CALL STATE (006d)
12bd: 0b 26 03 00 00             ; CALL OFF (0326)
12c2: 07 06 48 65 6c 6c 6f 2e 00 ; SLITERAL (12c3) [Hello.]
12cb: 0b 93 05 00 00             ; CALL CT (0593)
12d0: 0b 59 12 00 00             ; CALL mainLoop (1259)
12d5: 0c                         ; RET
;
12d6: 18 f9 ef 00 00             ; DICTP file-getLine (eff9)
12db: 0b 50 0f 00 00             ; CALL Pad (0f50)
12e0: 04                         ; SWAP
12e1: 0e c8                      ; CLITERAL 200
12e3: 04                         ; SWAP
12e4: 1e                         ; FREADLINE
12e5: 0b 50 0f 00 00             ; CALL Pad (0f50)
12ea: 04                         ; SWAP
12eb: 0c                         ; RET
;
12ec: 18 ea ef 00 00             ; DICTP load (efea)
12f1: 0e 00                      ; CLITERAL 0
12f3: 0e 00                      ; CLITERAL 0
12f5: 1c                         ; FOPEN
12f6: 0e 00                      ; CLITERAL 0
12f8: 16                         ; EQ
12f9: 09 18 13 00 00             ; JMPZ 1318
12fe: 07 11 43 61 6e 6e 6f 74 20 6f 70 65 6e 20 66 69 6c 65 2e 00 ; SLITERAL (12ff) [Cannot open file.]
1312: 0b 93 05 00 00             ; CALL CT (0593)
1317: 0c                         ; RET
1318: 0b 7c 0f 00 00             ; CALL INPUT-FP (0f7c)
131d: 03                         ; STORE
131e: 0b 7c 0f 00 00             ; CALL INPUT-FP (0f7c)
1323: 02                         ; FETCH
1324: 0b d6 12 00 00             ; CALL file-getLine (12d6)
1329: 09 3f 13 00 00             ; JMPZ 133f
132e: 2c                         ; INC
132f: 0b 15 04 00 00             ; CALL >IN (0415)
1334: 03                         ; STORE
1335: 0b 0c 0f 00 00             ; CALL executeInput (0f0c)
133a: 08 52 13 00 00             ; JMP 1352
133f: 05                         ; DROP
1340: 0b 7c 0f 00 00             ; CALL INPUT-FP (0f7c)
1345: 02                         ; FETCH
1346: 20                         ; FCLOSE
1347: 0b 7c 0f 00 00             ; CALL INPUT-FP (0f7c)
134c: 0b 26 03 00 00             ; CALL OFF (0326)
1351: 0c                         ; RET
1352: 08 1e 13 00 00             ; JMP 131e
1357: 0c                         ; RET
;
1358: 18 d6 ef 00 00             ; DICTP STR.EMPTY (efd6)
135d: 0e 00                      ; CLITERAL 0
135f: 1a                         ; OVER
1360: 03                         ; STORE
1361: 0c                         ; RET
;
1362: 18 c4 ef 00 00             ; DICTP STR.LEN (efc4)
1367: 06                         ; DUP
1368: 0f                         ; CFETCH
1369: 0c                         ; RET
;
136a: 18 b1 ef 00 00             ; DICTP STR.CATC (efb1)
136f: 1a                         ; OVER
1370: 06                         ; DUP
1371: 0b fb 04 00 00             ; CALL C++ (04fb)
1376: 06                         ; DUP
1377: 0f                         ; CFETCH
1378: 11                         ; ADD
1379: 0e 00                      ; CLITERAL 0
137b: 1a                         ; OVER
137c: 2c                         ; INC
137d: 10                         ; CSTORE
137e: 10                         ; CSTORE
137f: 0c                         ; RET
;
1380: 18 9a ef 00 00             ; DICTP STR.NULLTERM (ef9a)
1385: 06                         ; DUP
1386: 06                         ; DUP
1387: 0f                         ; CFETCH
1388: 11                         ; ADD
1389: 2c                         ; INC
138a: 0e 00                      ; CLITERAL 0
138c: 04                         ; SWAP
138d: 10                         ; CSTORE
138e: 0c                         ; RET
;
138f: 18 8d ef 00 00             ; DICTP I" (ef8d)
1394: 0b 93 00 00 00             ; CALL HERE (0093)
1399: 0e 64                      ; CLITERAL 100
139b: 11                         ; ADD
139c: 0e 00                      ; CLITERAL 0
139e: 1a                         ; OVER
139f: 03                         ; STORE
13a0: 0b 15 04 00 00             ; CALL >IN (0415)
13a5: 02                         ; FETCH
13a6: 0f                         ; CFETCH
13a7: 06                         ; DUP
13a8: 0e 00                      ; CLITERAL 0
13aa: 16                         ; EQ
13ab: 09 cc 13 00 00             ; JMPZ 13cc
13b0: 07 10 6d 69 73 73 69 6e 67 20 63 6c 6f 73 69 6e 67 20 00 ; SLITERAL (13b1) [missing closing ]
13c3: 0b 93 05 00 00             ; CALL CT (0593)
13c8: 0e 22                      ; CLITERAL 34
13ca: 19                         ; EMIT
13cb: fe                         ; RESET
13cc: 0b 15 04 00 00             ; CALL >IN (0415)
13d1: 0b e1 04 00 00             ; CALL ++ (04e1)
13d6: 06                         ; DUP
13d7: 0e 22                      ; CLITERAL 34
13d9: 16                         ; EQ
13da: 09 e1 13 00 00             ; JMPZ 13e1
13df: 05                         ; DROP
13e0: 0c                         ; RET
13e1: 0b 6a 13 00 00             ; CALL STR.CATC (136a)
13e6: 08 a0 13 00 00             ; JMP 13a0
13eb: 0c                         ; RET
;
13ec: 18 81 ef 00 00             ; DICTP " (ef81)
13f1: 0b 30 03 00 00             ; CALL ?COMPILING (0330)
13f6: 0e 00                      ; CLITERAL 0
13f8: 16                         ; EQ
13f9: 09 04 14 00 00             ; JMPZ 1404
13fe: 0b 8f 13 00 00             ; CALL I" (138f)
1403: 0c                         ; RET
1404: 0b 2e 01 00 00             ; CALL SLITERAL (012e)
1409: 0b 93 00 00 00             ; CALL HERE (0093)
140e: 0e 00                      ; CLITERAL 0
1410: 0b ab 00 00 00             ; CALL C, (00ab)
1415: 0b 15 04 00 00             ; CALL >IN (0415)
141a: 02                         ; FETCH
141b: 0f                         ; CFETCH
141c: 06                         ; DUP
141d: 0e 00                      ; CLITERAL 0
141f: 16                         ; EQ
1420: 09 4d 14 00 00             ; JMPZ 144d
1425: 05                         ; DROP
1426: 2e                         ; DEC
1427: 0b 40 00 00 00             ; CALL (HERE) (0040)
142c: 03                         ; STORE
142d: 07 11 6d 69 73 73 69 6e 67 20 63 6c 6f 73 69 6e 67 20 27 00 ; SLITERAL (142e) [missing closing ']
1441: 0b 93 05 00 00             ; CALL CT (0593)
1446: 0e 22                      ; CLITERAL 34
1448: 19                         ; EMIT
1449: 0e 27                      ; CLITERAL 39
144b: 19                         ; EMIT
144c: fe                         ; RESET
144d: 0b 15 04 00 00             ; CALL >IN (0415)
1452: 0b e1 04 00 00             ; CALL ++ (04e1)
1457: 06                         ; DUP
1458: 0e 22                      ; CLITERAL 34
145a: 16                         ; EQ
145b: 09 73 14 00 00             ; JMPZ 1473
1460: 05                         ; DROP
1461: 0b 93 00 00 00             ; CALL HERE (0093)
1466: 0e 00                      ; CLITERAL 0
1468: 0b ab 00 00 00             ; CALL C, (00ab)
146d: 1a                         ; OVER
146e: 12                         ; SUB
146f: 2e                         ; DEC
1470: 04                         ; SWAP
1471: 10                         ; CSTORE
1472: 0c                         ; RET
1473: 0b ab 00 00 00             ; CALL C, (00ab)
1478: 08 15 14 00 00             ; JMP 1415
147d: 0c                         ; RET
;
147e: 18 74 ef 00 00             ; DICTP ll (ef74)
1483: 07 09 6c 6f 61 64 73 2e 34 74 68 00 ; SLITERAL (1484) [loads.4th]
148f: 0b ec 12 00 00             ; CALL load (12ec)
1494: 0c                         ; RET
;
1495: 18 61 ef 00 00             ; DICTP sys-info (ef61)
149a: 0b 98 0b 00 00             ; CALL .(MEM_SZ) (0b98)
149f: 0e 2c                      ; CLITERAL 44
14a1: 19                         ; EMIT
14a2: 0e 20                      ; CLITERAL 32
14a4: 19                         ; EMIT
14a5: 0b d1 0b 00 00             ; CALL .(HERE) (0bd1)
14aa: 0e 2c                      ; CLITERAL 44
14ac: 19                         ; EMIT
14ad: 0e 20                      ; CLITERAL 32
14af: 19                         ; EMIT
14b0: 0b 08 0c 00 00             ; CALL .(LAST) (0c08)
14b5: 0e 2c                      ; CLITERAL 44
14b7: 19                         ; EMIT
14b8: 0e 20                      ; CLITERAL 32
14ba: 19                         ; EMIT
14bb: 0b 35 12 00 00             ; CALL .FREE (1235)
14c0: 0e 0d                      ; CLITERAL 13
14c2: 19                         ; EMIT
14c3: 0e 0a                      ; CLITERAL 10
14c5: 19                         ; EMIT
14c6: 0c                         ; RET
;
14c7: 18 4f ef 00 00             ; DICTP countTo (ef4f)
14cc: 07 0c 63 6f 75 6e 74 69 6e 67 20 74 6f 20 00 ; SLITERAL (14cd) [counting to ]
14db: 0b 93 05 00 00             ; CALL CT (0593)
14e0: 06                         ; DUP
14e1: 0b f9 09 00 00             ; CALL . (09f9)
14e6: 07 04 2e 2e 2e 20 00       ; SLITERAL (14e7) [... ]
14ed: 0b 93 05 00 00             ; CALL CT (0593)
14f2: 0e 01                      ; CLITERAL 1
14f4: 1a                         ; OVER
14f5: 1a                         ; OVER
14f6: 15                         ; LT
14f7: 09 ff 14 00 00             ; JMPZ 14ff
14fc: 05                         ; DROP
14fd: 05                         ; DROP
14fe: 0c                         ; RET
14ff: 2c                         ; INC
1500: 08 f4 14 00 00             ; JMP 14f4
1505: 0c                         ; RET
;
1506: 18 38 ef 00 00             ; DICTP countTo-FAST (ef38)
150b: 07 0c 63 6f 75 6e 74 69 6e 67 20 74 6f 20 00 ; SLITERAL (150c) [counting to ]
151a: 0b 93 05 00 00             ; CALL CT (0593)
151f: 06                         ; DUP
1520: 0b f9 09 00 00             ; CALL . (09f9)
1525: 07 04 2e 2e 2e 20 00       ; SLITERAL (1526) [... ]
152c: 0b 93 05 00 00             ; CALL CT (0593)
1531: 2e                         ; DEC
1532: 06                         ; DUP
1533: 0a 31 15 00 00             ; JMPNZ 1531
1538: 05                         ; DROP
1539: 0c                         ; RET
;
; End of code, Dictionary:
;
ef38: 4f ef 00 00                ; countTo-FAST - (next: ef4f countTo)
ef3c: 06 15 00 00 00             ; XT=1506, flags=00
ef41: 0c 63 6f 75 6e 74 54 6f 2d 46 41 53 54 00 ; 12, countTo-FAST
;
ef4f: 61 ef 00 00                ; countTo - (next: ef61 sys-info)
ef53: c7 14 00 00 00             ; XT=14c7, flags=00
ef58: 07 63 6f 75 6e 74 54 6f 00 ; 7, countTo
;
ef61: 74 ef 00 00                ; sys-info - (next: ef74 ll)
ef65: 95 14 00 00 00             ; XT=1495, flags=00
ef6a: 08 73 79 73 2d 69 6e 66 6f 00 ; 8, sys-info
;
ef74: 81 ef 00 00                ; ll - (next: ef81 ")
ef78: 7e 14 00 00 00             ; XT=147e, flags=00
ef7d: 02 6c 6c 00                ; 2, ll
;
ef81: 8d ef 00 00                ; " - (next: ef8d I")
ef85: ec 13 00 00 01             ; XT=13ec, flags=01
ef8a: 01 22 00                   ; 1, "
;
ef8d: 9a ef 00 00                ; I" - (next: ef9a STR.NULLTERM)
ef91: 8f 13 00 00 00             ; XT=138f, flags=00
ef96: 02 49 22 00                ; 2, I"
;
ef9a: b1 ef 00 00                ; STR.NULLTERM - (next: efb1 STR.CATC)
ef9e: 80 13 00 00 00             ; XT=1380, flags=00
efa3: 0c 53 54 52 2e 4e 55 4c 4c 54 45 52 4d 00 ; 12, STR.NULLTERM
;
efb1: c4 ef 00 00                ; STR.CATC - (next: efc4 STR.LEN)
efb5: 6a 13 00 00 00             ; XT=136a, flags=00
efba: 08 53 54 52 2e 43 41 54 43 00 ; 8, STR.CATC
;
efc4: d6 ef 00 00                ; STR.LEN - (next: efd6 STR.EMPTY)
efc8: 62 13 00 00 02             ; XT=1362, flags=02
efcd: 07 53 54 52 2e 4c 45 4e 00 ; 7, STR.LEN
;
efd6: ea ef 00 00                ; STR.EMPTY - (next: efea load)
efda: 58 13 00 00 02             ; XT=1358, flags=02
efdf: 09 53 54 52 2e 45 4d 50 54 59 00 ; 9, STR.EMPTY
;
efea: f9 ef 00 00                ; load - (next: eff9 file-getLine)
efee: ec 12 00 00 00             ; XT=12ec, flags=00
eff3: 04 6c 6f 61 64 00          ; 4, load
;
eff9: 10 f0 00 00                ; file-getLine - (next: f010 main)
effd: d6 12 00 00 00             ; XT=12d6, flags=00
f002: 0c 66 69 6c 65 2d 67 65 74 4c 69 6e 65 00 ; 12, file-getLine
;
f010: 1f f0 00 00                ; main - (next: f01f mainLoop)
f014: a5 12 00 00 00             ; XT=12a5, flags=00
f019: 04 6d 61 69 6e 00          ; 4, main
;
f01f: 32 f0 00 00                ; mainLoop - (next: f032 .FREE)
f023: 59 12 00 00 00             ; XT=1259, flags=00
f028: 08 6d 61 69 6e 4c 6f 6f 70 00 ; 8, mainLoop
;
f032: 42 f0 00 00                ; .FREE - (next: f042 FREE)
f036: 35 12 00 00 00             ; XT=1235, flags=00
f03b: 05 2e 46 52 45 45 00       ; 5, .FREE
;
f042: 51 f0 00 00                ; FREE - (next: f051 C?)
f046: 24 12 00 00 00             ; XT=1224, flags=00
f04b: 04 46 52 45 45 00          ; 4, FREE
;
f051: 5e f0 00 00                ; C? - (next: f05e ?)
f055: 18 12 00 00 00             ; XT=1218, flags=00
f05a: 02 43 3f 00                ; 2, C?
;
f05e: 6a f0 00 00                ; ? - (next: f06a ALLOT)
f062: 0c 12 00 00 00             ; XT=120c, flags=00
f067: 01 3f 00                   ; 1, ?
;
f06a: 7a f0 00 00                ; ALLOT - (next: f07a resetState)
f06e: fa 11 00 00 00             ; XT=11fa, flags=00
f073: 05 41 4c 4c 4f 54 00       ; 5, ALLOT
;
f07a: 8f f0 00 00                ; resetState - (next: f08f ForgetLast)
f07e: d6 11 00 00 00             ; XT=11d6, flags=00
f083: 0a 72 65 73 65 74 53 74 61 74 65 00 ; 10, resetState
;
f08f: a4 f0 00 00                ; ForgetLast - (next: f0a4 ;)
f093: b2 11 00 00 00             ; XT=11b2, flags=00
f098: 0a 46 6f 72 67 65 74 4c 61 73 74 00 ; 10, ForgetLast
;
f0a4: b0 f0 00 00                ; ; - (next: f0b0 :NONAME)
f0a8: 9d 11 00 00 01             ; XT=119d, flags=01
f0ad: 01 3b 00                   ; 1, ;
;
f0b0: c2 f0 00 00                ; :NONAME - (next: f0c2 :)
f0b4: 88 11 00 00 00             ; XT=1188, flags=00
f0b9: 07 3a 4e 4f 4e 41 4d 45 00 ; 7, :NONAME
;
f0c2: ce f0 00 00                ; : - (next: f0ce CREATE-NAME)
f0c6: 73 11 00 00 00             ; XT=1173, flags=00
f0cb: 01 3a 00                   ; 1, :
;
f0ce: e4 f0 00 00                ; CREATE-NAME - (next: f0e4 Define-Word)
f0d2: 1b 11 00 00 00             ; XT=111b, flags=00
f0d7: 0b 43 52 45 41 54 45 2d 4e 41 4d 45 00 ; 11, CREATE-NAME
;
f0e4: fa f0 00 00                ; Define-Word - (next: f0fa strcpy2c)
f0e8: c2 10 00 00 00             ; XT=10c2, flags=00
f0ed: 0b 44 65 66 69 6e 65 2d 57 6f 72 64 00 ; 11, Define-Word
;
f0fa: 0d f1 00 00                ; strcpy2c - (next: f10d getLine)
f0fe: 89 10 00 00 00             ; XT=1089, flags=00
f103: 08 73 74 72 63 70 79 32 63 00 ; 8, strcpy2c
;
f10d: 1f f1 00 00                ; getLine - (next: f11f getLineFromFile)
f111: b8 0f 00 00 00             ; XT=0fb8, flags=00
f116: 07 67 65 74 4c 69 6e 65 00 ; 7, getLine
;
f11f: 39 f1 00 00                ; getLineFromFile - (next: f139 LoadingFromFile?)
f123: 97 0f 00 00 00             ; XT=0f97, flags=00
f128: 0f 67 65 74 4c 69 6e 65 46 72 6f 6d 46 69 6c 65 00 ; 15, getLineFromFile
;
f139: 54 f1 00 00                ; LoadingFromFile? - (next: f154 INPUT-FP)
f13d: 8b 0f 00 00 00             ; XT=0f8b, flags=00
f142: 10 4c 6f 61 64 69 6e 67 46 72 6f 6d 46 69 6c 65 3f 00 ; 16, LoadingFromFile?
;
f154: 67 f1 00 00                ; INPUT-FP - (next: f167 Pad)
f158: 7c 0f 00 00 00             ; XT=0f7c, flags=00
f15d: 08 49 4e 50 55 54 2d 46 50 00 ; 8, INPUT-FP
;
f167: 75 f1 00 00                ; Pad - (next: f175 executeInput)
f16b: 50 0f 00 00 00             ; XT=0f50, flags=00
f170: 03 50 61 64 00             ; 3, Pad
;
f175: 8c f1 00 00                ; executeInput - (next: f18c executeWord)
f179: 0c 0f 00 00 00             ; XT=0f0c, flags=00
f17e: 0c 65 78 65 63 75 74 65 49 6e 70 75 74 00 ; 12, executeInput
;
f18c: a2 f1 00 00                ; executeWord - (next: f1a2 [COMPILE])
f190: 6b 0e 00 00 00             ; XT=0e6b, flags=00
f195: 0b 65 78 65 63 75 74 65 57 6f 72 64 00 ; 11, executeWord
;
f1a2: b6 f1 00 00                ; [COMPILE] - (next: f1b6 cstr,)
f1a6: 47 0e 00 00 00             ; XT=0e47, flags=00
f1ab: 09 5b 43 4f 4d 50 49 4c 45 5d 00 ; 9, [COMPILE]
;
f1b6: c6 f1 00 00                ; cstr, - (next: f1c6 strlen)
f1ba: 36 0e 00 00 00             ; XT=0e36, flags=00
f1bf: 05 63 73 74 72 2c 00       ; 5, cstr,
;
f1c6: d7 f1 00 00                ; strlen - (next: f1d7 Copy.INLINE)
f1ca: 17 0e 00 00 00             ; XT=0e17, flags=00
f1cf: 06 73 74 72 6c 65 6e 00    ; 6, strlen
;
f1d7: ed f1 00 00                ; Copy.INLINE - (next: f1ed DOES>)
f1db: f5 0d 00 00 00             ; XT=0df5, flags=00
f1e0: 0b 43 6f 70 79 2e 49 4e 4c 49 4e 45 00 ; 11, Copy.INLINE
;
f1ed: fd f1 00 00                ; DOES> - (next: f1fd (inline))
f1f1: e0 0d 00 00 00             ; XT=0de0, flags=00
f1f6: 05 44 4f 45 53 3e 00       ; 5, DOES>
;
f1fd: 10 f2 00 00                ; (inline) - (next: f210 find.ret)
f201: bf 0d 00 00 00             ; XT=0dbf, flags=00
f206: 08 28 69 6e 6c 69 6e 65 29 00 ; 8, (inline)
;
f210: 23 f2 00 00                ; find.ret - (next: f223 EXECUTE)
f214: a8 0d 00 00 00             ; XT=0da8, flags=00
f219: 08 66 69 6e 64 2e 72 65 74 00 ; 8, find.ret
;
f223: 35 f2 00 00                ; EXECUTE - (next: f235 .lastx)
f227: 9f 0d 00 00 00             ; XT=0d9f, flags=00
f22c: 07 45 58 45 43 55 54 45 00 ; 7, EXECUTE
;
f235: 46 f2 00 00                ; .lastx - (next: f246 NUM-WORDS)
f239: 67 0d 00 00 00             ; XT=0d67, flags=00
f23e: 06 2e 6c 61 73 74 78 00    ; 6, .lastx
;
f246: 5a f2 00 00                ; NUM-WORDS - (next: f25a WORDSV)
f24a: 3d 0d 00 00 00             ; XT=0d3d, flags=00
f24f: 09 4e 55 4d 2d 57 4f 52 44 53 00 ; 9, NUM-WORDS
;
f25a: 6b f2 00 00                ; WORDSV - (next: f26b .WORD-LONG)
f25e: 0b 0d 00 00 00             ; XT=0d0b, flags=00
f263: 06 57 4f 52 44 53 56 00    ; 6, WORDSV
;
f26b: 80 f2 00 00                ; .WORD-LONG - (next: f280 WORDS)
f26f: 7b 0c 00 00 00             ; XT=0c7b, flags=00
f274: 0a 2e 57 4f 52 44 2d 4c 4f 4e 47 00 ; 10, .WORD-LONG
;
f280: 90 f2 00 00                ; WORDS - (next: f290 .WORD-SHORT)
f284: 54 0c 00 00 00             ; XT=0c54, flags=00
f289: 05 57 4f 52 44 53 00       ; 5, WORDS
;
f290: a6 f2 00 00                ; .WORD-SHORT - (next: f2a6 .(LAST))
f294: 3f 0c 00 00 00             ; XT=0c3f, flags=00
f299: 0b 2e 57 4f 52 44 2d 53 48 4f 52 54 00 ; 11, .WORD-SHORT
;
f2a6: b8 f2 00 00                ; .(LAST) - (next: f2b8 .(HERE))
f2aa: 08 0c 00 00 00             ; XT=0c08, flags=00
f2af: 07 2e 28 4c 41 53 54 29 00 ; 7, .(LAST)
;
f2b8: ca f2 00 00                ; .(HERE) - (next: f2ca .(MEM_SZ))
f2bc: d1 0b 00 00 00             ; XT=0bd1, flags=00
f2c1: 07 2e 28 48 45 52 45 29 00 ; 7, .(HERE)
;
f2ca: de f2 00 00                ; .(MEM_SZ) - (next: f2de .S)
f2ce: 98 0b 00 00 00             ; XT=0b98, flags=00
f2d3: 09 2e 28 4d 45 4d 5f 53 5a 29 00 ; 9, .(MEM_SZ)
;
f2de: eb f2 00 00                ; .S - (next: f2eb MAX)
f2e2: 26 0b 00 00 00             ; XT=0b26, flags=00
f2e7: 02 2e 53 00                ; 2, .S
;
f2eb: f9 f2 00 00                ; MAX - (next: f2f9 MIN)
f2ef: 16 0b 00 00 00             ; XT=0b16, flags=00
f2f4: 03 4d 41 58 00             ; 3, MAX
;
f2f9: 07 f3 00 00                ; MIN - (next: f307 BINARY.)
f2fd: 06 0b 00 00 00             ; XT=0b06, flags=00
f302: 03 4d 49 4e 00             ; 3, MIN
;
f307: 19 f3 00 00                ; BINARY. - (next: f319 DECIMAL.)
f30b: e9 0a 00 00 00             ; XT=0ae9, flags=00
f310: 07 42 49 4e 41 52 59 2e 00 ; 7, BINARY.
;
f319: 2c f3 00 00                ; DECIMAL. - (next: f32c HEX.4)
f31d: cc 0a 00 00 00             ; XT=0acc, flags=00
f322: 08 44 45 43 49 4d 41 4c 2e 00 ; 8, DECIMAL.
;
f32c: 3c f3 00 00                ; HEX.4 - (next: f33c HEX.2)
f330: af 0a 00 00 00             ; XT=0aaf, flags=00
f335: 05 48 45 58 2e 34 00       ; 5, HEX.4
;
f33c: 4c f3 00 00                ; HEX.2 - (next: f34c HEX.)
f340: 92 0a 00 00 00             ; XT=0a92, flags=00
f345: 05 48 45 58 2e 32 00       ; 5, HEX.2
;
f34c: 5b f3 00 00                ; HEX. - (next: f35b .4)
f350: 75 0a 00 00 00             ; XT=0a75, flags=00
f355: 04 48 45 58 2e 00          ; 4, HEX.
;
f35b: 68 f3 00 00                ; .4 - (next: f368 .3)
f35f: 4c 0a 00 00 00             ; XT=0a4c, flags=00
f364: 02 2e 34 00                ; 2, .4
;
f368: 75 f3 00 00                ; .3 - (next: f375 .2)
f36c: 28 0a 00 00 00             ; XT=0a28, flags=00
f371: 02 2e 33 00                ; 2, .3
;
f375: 82 f3 00 00                ; .2 - (next: f382 .)
f379: 09 0a 00 00 00             ; XT=0a09, flags=00
f37e: 02 2e 32 00                ; 2, .2
;
f382: 8e f3 00 00                ; . - (next: f38e (.))
f386: f9 09 00 00 00             ; XT=09f9, flags=00
f38b: 01 2e 00                   ; 1, .
;
f38e: 9c f3 00 00                ; (.) - (next: f39c #P)
f392: df 09 00 00 00             ; XT=09df, flags=00
f397: 03 28 2e 29 00             ; 3, (.)
;
f39c: a9 f3 00 00                ; #P - (next: f3a9 #P-)
f3a0: c9 09 00 00 00             ; XT=09c9, flags=00
f3a5: 02 23 50 00                ; 2, #P
;
f3a9: b7 f3 00 00                ; #P- - (next: f3b7 #>)
f3ad: b4 09 00 00 00             ; XT=09b4, flags=00
f3b2: 03 23 50 2d 00             ; 3, #P-
;
f3b7: c4 f3 00 00                ; #> - (next: f3c4 #S)
f3bb: ae 09 00 00 00             ; XT=09ae, flags=00
f3c0: 02 23 3e 00                ; 2, #>
;
f3c4: d1 f3 00 00                ; #S - (next: f3d1 #)
f3c8: 9a 09 00 00 00             ; XT=099a, flags=00
f3cd: 02 23 53 00                ; 2, #S
;
f3d1: dd f3 00 00                ; # - (next: f3dd <#)
f3d5: 6e 09 00 00 00             ; XT=096e, flags=00
f3da: 01 23 00                   ; 1, #
;
f3dd: ea f3 00 00                ; <# - (next: f3ea #LEN)
f3e1: 39 09 00 00 00             ; XT=0939, flags=00
f3e6: 02 3c 23 00                ; 2, <#
;
f3ea: f9 f3 00 00                ; #LEN - (next: f3f9 #NEG)
f3ee: 29 09 00 00 00             ; XT=0929, flags=00
f3f3: 04 23 4c 45 4e 00          ; 4, #LEN
;
f3f9: 08 f4 00 00                ; #NEG - (next: f408 SPACE)
f3fd: 19 09 00 00 00             ; XT=0919, flags=00
f402: 04 23 4e 45 47 00          ; 4, #NEG
;
f408: 18 f4 00 00                ; SPACE - (next: f418 /MOD)
f40c: 10 09 00 00 00             ; XT=0910, flags=00
f411: 05 53 50 41 43 45 00       ; 5, SPACE
;
f418: 27 f4 00 00                ; /MOD - (next: f427 MOD)
f41c: 02 09 00 00 00             ; XT=0902, flags=00
f421: 04 2f 4d 4f 44 00          ; 4, /MOD
;
f427: 35 f4 00 00                ; MOD - (next: f435 isNumber?)
f42b: f7 08 00 00 00             ; XT=08f7, flags=00
f430: 03 4d 4f 44 00             ; 3, MOD
;
f435: 49 f4 00 00                ; isNumber? - (next: f449 ABS)
f439: 97 08 00 00 00             ; XT=0897, flags=00
f43e: 09 69 73 4e 75 6d 62 65 72 3f 00 ; 9, isNumber?
;
f449: 57 f4 00 00                ; ABS - (next: f457 NEGATE)
f44d: 83 08 00 00 00             ; XT=0883, flags=00
f452: 03 41 42 53 00             ; 3, ABS
;
f457: 68 f4 00 00                ; NEGATE - (next: f468 isNumChar?)
f45b: 79 08 00 00 00             ; XT=0879, flags=00
f460: 06 4e 45 47 41 54 45 00    ; 6, NEGATE
;
f468: 7d f4 00 00                ; isNumChar? - (next: f47d isHEX?)
f46c: 28 08 00 00 00             ; XT=0828, flags=00
f471: 0a 69 73 4e 75 6d 43 68 61 72 3f 00 ; 10, isNumChar?
;
f47d: 8e f4 00 00                ; isHEX? - (next: f48e findInDict)
f481: 19 08 00 00 00             ; XT=0819, flags=00
f486: 06 69 73 48 45 58 3f 00    ; 6, isHEX?
;
f48e: a3 f4 00 00                ; findInDict - (next: f4a3 DICT.GetINLINE)
f492: d0 07 00 00 00             ; XT=07d0, flags=00
f497: 0a 66 69 6e 64 49 6e 44 69 63 74 00 ; 10, findInDict
;
f4a3: bc f4 00 00                ; DICT.GetINLINE - (next: f4bc DICT.GetIMMEDIATE)
f4a7: c0 07 00 00 00             ; XT=07c0, flags=00
f4ac: 0e 44 49 43 54 2e 47 65 74 49 4e 4c 49 4e 45 00 ; 14, DICT.GetINLINE
;
f4bc: d8 f4 00 00                ; DICT.GetIMMEDIATE - (next: f4d8 FLAGS.ISINLINE?)
f4c0: b0 07 00 00 00             ; XT=07b0, flags=00
f4c5: 11 44 49 43 54 2e 47 65 74 49 4d 4d 45 44 49 41 54 45 00 ; 17, DICT.GetIMMEDIATE
;
f4d8: f2 f4 00 00                ; FLAGS.ISINLINE? - (next: f4f2 FLAGS.ISIMMEDIATE?)
f4dc: a7 07 00 00 00             ; XT=07a7, flags=00
f4e1: 0f 46 4c 41 47 53 2e 49 53 49 4e 4c 49 4e 45 3f 00 ; 15, FLAGS.ISINLINE?
;
f4f2: 0f f5 00 00                ; FLAGS.ISIMMEDIATE? - (next: f50f XT.GetDICTP)
f4f6: 9e 07 00 00 00             ; XT=079e, flags=00
f4fb: 12 46 4c 41 47 53 2e 49 53 49 4d 4d 45 44 49 41 54 45 3f 00 ; 18, FLAGS.ISIMMEDIATE?
;
f50f: 25 f5 00 00                ; XT.GetDICTP - (next: f525 DICTP>NAME)
f513: 85 07 00 00 00             ; XT=0785, flags=00
f518: 0b 58 54 2e 47 65 74 44 49 43 54 50 00 ; 11, XT.GetDICTP
;
f525: 3a f5 00 00                ; DICTP>NAME - (next: f53a DICT.GetFLAGS)
f529: 78 07 00 00 00             ; XT=0778, flags=00
f52e: 0a 44 49 43 54 50 3e 4e 41 4d 45 00 ; 10, DICTP>NAME
;
f53a: 52 f5 00 00                ; DICT.GetFLAGS - (next: f552 DICT.GetXT)
f53e: 6c 07 00 00 00             ; XT=076c, flags=00
f543: 0d 44 49 43 54 2e 47 65 74 46 4c 41 47 53 00 ; 13, DICT.GetFLAGS
;
f552: 67 f5 00 00                ; DICT.GetXT - (next: f567 NAME>DICT)
f556: 60 07 00 00 00             ; XT=0760, flags=00
f55b: 0a 44 49 43 54 2e 47 65 74 58 54 00 ; 10, DICT.GetXT
;
f567: 7b f5 00 00                ; NAME>DICT - (next: f57b FLAGS>DICT)
f56b: 50 07 00 00 00             ; XT=0750, flags=00
f570: 09 4e 41 4d 45 3e 44 49 43 54 00 ; 9, NAME>DICT
;
f57b: 90 f5 00 00                ; FLAGS>DICT - (next: f590 XT>DICT)
f57f: 41 07 00 00 00             ; XT=0741, flags=00
f584: 0a 46 4c 41 47 53 3e 44 49 43 54 00 ; 10, FLAGS>DICT
;
f590: a2 f5 00 00                ; XT>DICT - (next: f5a2 NEXT>DICT)
f594: 35 07 00 00 00             ; XT=0735, flags=00
f599: 07 58 54 3e 44 49 43 54 00 ; 7, XT>DICT
;
f5a2: b6 f5 00 00                ; NEXT>DICT - (next: f5b6 DICT>NAME)
f5a6: 2f 07 00 00 00             ; XT=072f, flags=00
f5ab: 09 4e 45 58 54 3e 44 49 43 54 00 ; 9, NEXT>DICT
;
f5b6: ca f5 00 00                ; DICT>NAME - (next: f5ca DICT>FLAGS)
f5ba: 23 07 00 00 00             ; XT=0723, flags=00
f5bf: 09 44 49 43 54 3e 4e 41 4d 45 00 ; 9, DICT>NAME
;
f5ca: df f5 00 00                ; DICT>FLAGS - (next: f5df DICT>XT)
f5ce: 14 07 00 00 00             ; XT=0714, flags=00
f5d3: 0a 44 49 43 54 3e 46 4c 41 47 53 00 ; 10, DICT>FLAGS
;
f5df: f1 f5 00 00                ; DICT>XT - (next: f5f1 DICT>NEXT)
f5e3: 08 07 00 00 00             ; XT=0708, flags=00
f5e8: 07 44 49 43 54 3e 58 54 00 ; 7, DICT>XT
;
f5f1: 05 f6 00 00                ; DICT>NEXT - (next: f605 getOneWord)
f5f5: 02 07 00 00 00             ; XT=0702, flags=00
f5fa: 09 44 49 43 54 3e 4e 45 58 54 00 ; 9, DICT>NEXT
;
f605: 1a f6 00 00                ; getOneWord - (next: f61a skipWS)
f609: ca 06 00 00 00             ; XT=06ca, flags=00
f60e: 0a 67 65 74 4f 6e 65 57 6f 72 64 00 ; 10, getOneWord
;
f61a: 2b f6 00 00                ; skipWS - (next: f62b getInput)
f61e: a1 06 00 00 00             ; XT=06a1, flags=00
f623: 06 73 6b 69 70 57 53 00    ; 6, skipWS
;
f62b: 3e f6 00 00                ; getInput - (next: f63e PAD)
f62f: 8b 06 00 00 00             ; XT=068b, flags=00
f634: 08 67 65 74 49 6e 70 75 74 00 ; 8, getInput
;
f63e: 4c f6 00 00                ; PAD - (next: f64c tmp-alloc)
f642: 79 06 00 00 00             ; XT=0679, flags=00
f647: 03 50 41 44 00             ; 3, PAD
;
f64c: 60 f6 00 00                ; tmp-alloc - (next: f660 tmp-cur)
f650: 62 06 00 00 00             ; XT=0662, flags=00
f655: 09 74 6d 70 2d 61 6c 6c 6f 63 00 ; 9, tmp-alloc
;
f660: 72 f6 00 00                ; tmp-cur - (next: f672 tmp-init)
f664: 56 06 00 00 00             ; XT=0656, flags=00
f669: 07 74 6d 70 2d 63 75 72 00 ; 7, tmp-cur
;
f672: 85 f6 00 00                ; tmp-init - (next: f685 (tmp))
f676: 45 06 00 00 00             ; XT=0645, flags=00
f67b: 08 74 6d 70 2d 69 6e 69 74 00 ; 8, tmp-init
;
f685: 95 f6 00 00                ; (tmp) - (next: f695 BETWEEN)
f689: 35 06 00 00 00             ; XT=0635, flags=00
f68e: 05 28 74 6d 70 29 00       ; 5, (tmp)
;
f695: a7 f6 00 00                ; BETWEEN - (next: f6a7 CR)
f699: 1d 06 00 00 00             ; XT=061d, flags=00
f69e: 07 42 45 54 57 45 45 4e 00 ; 7, BETWEEN
;
f6a7: b4 f6 00 00                ; CR - (next: f6b4 CRLF)
f6ab: 11 06 00 00 02             ; XT=0611, flags=02
f6b0: 02 43 52 00                ; 2, CR
;
f6b4: c3 f6 00 00                ; CRLF - (next: f6c3 BL)
f6b8: 05 06 00 00 02             ; XT=0605, flags=02
f6bd: 04 43 52 4c 46 00          ; 4, CRLF
;
f6c3: d0 f6 00 00                ; BL - (next: f6d0 ()
f6c7: fc 05 00 00 02             ; XT=05fc, flags=02
f6cc: 02 42 4c 00                ; 2, BL
;
f6d0: dc f6 00 00                ; ( - (next: f6dc \)
f6d4: b2 05 00 00 01             ; XT=05b2, flags=01
f6d9: 01 28 00                   ; 1, (
;
f6dc: e8 f6 00 00                ; \ - (next: f6e8 CT)
f6e0: a3 05 00 00 01             ; XT=05a3, flags=01
f6e5: 01 5c 00                   ; 1, \
;
f6e8: f5 f6 00 00                ; CT - (next: f6f5 TYPE)
f6ec: 93 05 00 00 00             ; XT=0593, flags=00
f6f1: 02 43 54 00                ; 2, CT
;
f6f5: 04 f7 00 00                ; TYPE - (next: f704 COUNT)
f6f9: 73 05 00 00 00             ; XT=0573, flags=00
f6fe: 04 54 59 50 45 00          ; 4, TYPE
;
f704: 14 f7 00 00                ; COUNT - (next: f714 NOT)
f708: 69 05 00 00 00             ; XT=0569, flags=00
f70d: 05 43 4f 55 4e 54 00       ; 5, COUNT
;
f714: 22 f7 00 00                ; NOT - (next: f722 FALSE)
f718: 60 05 00 00 02             ; XT=0560, flags=02
f71d: 03 4e 4f 54 00             ; 3, NOT
;
f722: 32 f7 00 00                ; FALSE - (next: f732 TRUE)
f726: 58 05 00 00 02             ; XT=0558, flags=02
f72b: 05 46 41 4c 53 45 00       ; 5, FALSE
;
f732: 41 f7 00 00                ; TRUE - (next: f741 >=)
f736: 50 05 00 00 02             ; XT=0550, flags=02
f73b: 04 54 52 55 45 00          ; 4, TRUE
;
f741: 4e f7 00 00                ; >= - (next: f74e <=)
f745: 46 05 00 00 02             ; XT=0546, flags=02
f74a: 02 3e 3d 00                ; 2, >=
;
f74e: 5b f7 00 00                ; <= - (next: f75b <>)
f752: 3c 05 00 00 02             ; XT=053c, flags=02
f757: 02 3c 3d 00                ; 2, <=
;
f75b: 68 f7 00 00                ; <> - (next: f768 0=)
f75f: 32 05 00 00 02             ; XT=0532, flags=02
f764: 02 3c 3e 00                ; 2, <>
;
f768: 75 f7 00 00                ; 0= - (next: f775 C+!)
f76c: 29 05 00 00 02             ; XT=0529, flags=02
f771: 02 30 3d 00                ; 2, 0=
;
f775: 83 f7 00 00                ; C+! - (next: f783 +!)
f779: 1d 05 00 00 00             ; XT=051d, flags=00
f77e: 03 43 2b 21 00             ; 3, C+!
;
f783: 90 f7 00 00                ; +! - (next: f790 C--)
f787: 11 05 00 00 00             ; XT=0511, flags=00
f78c: 02 2b 21 00                ; 2, +!
;
f790: 9e f7 00 00                ; C-- - (next: f79e C++)
f794: 06 05 00 00 00             ; XT=0506, flags=00
f799: 03 43 2d 2d 00             ; 3, C--
;
f79e: ac f7 00 00                ; C++ - (next: f7ac --)
f7a2: fb 04 00 00 00             ; XT=04fb, flags=00
f7a7: 03 43 2b 2b 00             ; 3, C++
;
f7ac: b9 f7 00 00                ; -- - (next: f7b9 ++)
f7b0: ee 04 00 00 00             ; XT=04ee, flags=00
f7b5: 02 2d 2d 00                ; 2, --
;
f7b9: c6 f7 00 00                ; ++ - (next: f7c6 -=)
f7bd: e1 04 00 00 00             ; XT=04e1, flags=00
f7c2: 02 2b 2b 00                ; 2, ++
;
f7c6: d3 f7 00 00                ; -= - (next: f7d3 +=)
f7ca: d5 04 00 00 00             ; XT=04d5, flags=00
f7cf: 02 2d 3d 00                ; 2, -=
;
f7d3: e0 f7 00 00                ; += - (next: f7e0 2/)
f7d7: ca 04 00 00 00             ; XT=04ca, flags=00
f7dc: 02 2b 3d 00                ; 2, +=
;
f7e0: ed f7 00 00                ; 2/ - (next: f7ed 2*)
f7e4: c1 04 00 00 02             ; XT=04c1, flags=02
f7e9: 02 32 2f 00                ; 2, 2/
;
f7ed: fa f7 00 00                ; 2* - (next: f7fa 1-)
f7f1: b8 04 00 00 02             ; XT=04b8, flags=02
f7f6: 02 32 2a 00                ; 2, 2*
;
f7fa: 07 f8 00 00                ; 1- - (next: f807 1+)
f7fe: b1 04 00 00 02             ; XT=04b1, flags=02
f803: 02 31 2d 00                ; 2, 1-
;
f807: 14 f8 00 00                ; 1+ - (next: f814 -ROT)
f80b: aa 04 00 00 02             ; XT=04aa, flags=02
f810: 02 31 2b 00                ; 2, 1+
;
f814: 23 f8 00 00                ; -ROT - (next: f823 ROT)
f818: a0 04 00 00 02             ; XT=04a0, flags=02
f81d: 04 2d 52 4f 54 00          ; 4, -ROT
;
f823: 31 f8 00 00                ; ROT - (next: f831 NIP)
f827: 96 04 00 00 02             ; XT=0496, flags=02
f82c: 03 52 4f 54 00             ; 3, ROT
;
f831: 3f f8 00 00                ; NIP - (next: f83f TUCK)
f835: 8e 04 00 00 02             ; XT=048e, flags=02
f83a: 03 4e 49 50 00             ; 3, NIP
;
f83f: 4e f8 00 00                ; TUCK - (next: f84e 2DROP)
f843: 86 04 00 00 02             ; XT=0486, flags=02
f848: 04 54 55 43 4b 00          ; 4, TUCK
;
f84e: 5e f8 00 00                ; 2DROP - (next: f85e 2DUP)
f852: 7e 04 00 00 02             ; XT=047e, flags=02
f857: 05 32 44 52 4f 50 00       ; 5, 2DROP
;
f85e: 6d f8 00 00                ; 2DUP - (next: f86d RDROP)
f862: 76 04 00 00 02             ; XT=0476, flags=02
f867: 04 32 44 55 50 00          ; 4, 2DUP
;
f86d: 7d f8 00 00                ; RDROP - (next: f87d R@)
f871: 6e 04 00 00 02             ; XT=046e, flags=02
f876: 05 52 44 52 4f 50 00       ; 5, RDROP
;
f87d: 8a f8 00 00                ; R@ - (next: f88a DEBUG-OFF)
f881: 65 04 00 00 02             ; XT=0465, flags=02
f886: 02 52 40 00                ; 2, R@
;
f88a: 9e f8 00 00                ; DEBUG-OFF - (next: f89e DEBUG-ON)
f88e: 5c 04 00 00 02             ; XT=045c, flags=02
f893: 09 44 45 42 55 47 2d 4f 46 46 00 ; 9, DEBUG-OFF
;
f89e: b1 f8 00 00                ; DEBUG-ON - (next: f8b1 TRACE-OFF)
f8a2: 53 04 00 00 02             ; XT=0453, flags=02
f8a7: 08 44 45 42 55 47 2d 4f 4e 00 ; 8, DEBUG-ON
;
f8b1: c5 f8 00 00                ; TRACE-OFF - (next: f8c5 TRACE-ON)
f8b5: 4a 04 00 00 02             ; XT=044a, flags=02
f8ba: 09 54 52 41 43 45 2d 4f 46 46 00 ; 9, TRACE-OFF
;
f8c5: d8 f8 00 00                ; TRACE-ON - (next: f8d8 MEM_SZ)
f8c9: 41 04 00 00 02             ; XT=0441, flags=02
f8ce: 08 54 52 41 43 45 2d 4f 4e 00 ; 8, TRACE-ON
;
f8d8: e9 f8 00 00                ; MEM_SZ - (next: f8e9 isNeg)
f8dc: 35 04 00 00 00             ; XT=0435, flags=00
f8e1: 06 4d 45 4d 5f 53 5a 00    ; 6, MEM_SZ
;
f8e9: f9 f8 00 00                ; isNeg - (next: f8f9 >IN)
f8ed: 25 04 00 00 00             ; XT=0425, flags=00
f8f2: 05 69 73 4e 65 67 00       ; 5, isNeg
;
f8f9: 07 f9 00 00                ; >IN - (next: f907 LEAVE)
f8fd: 15 04 00 00 00             ; XT=0415, flags=00
f902: 03 3e 49 4e 00             ; 3, >IN
;
f907: 17 f9 00 00                ; LEAVE - (next: f917 UNTIL)
f90b: 00 04 00 00 01             ; XT=0400, flags=01
f910: 05 4c 45 41 56 45 00       ; 5, LEAVE
;
f917: 27 f9 00 00                ; UNTIL - (next: f927 WHILE)
f91b: e6 03 00 00 01             ; XT=03e6, flags=01
f920: 05 55 4e 54 49 4c 00       ; 5, UNTIL
;
f927: 37 f9 00 00                ; WHILE - (next: f937 AGAIN)
f92b: cc 03 00 00 01             ; XT=03cc, flags=01
f930: 05 57 48 49 4c 45 00       ; 5, WHILE
;
f937: 47 f9 00 00                ; AGAIN - (next: f947 BEGIN)
f93b: b2 03 00 00 01             ; XT=03b2, flags=01
f940: 05 41 47 41 49 4e 00       ; 5, AGAIN
;
f947: 57 f9 00 00                ; BEGIN - (next: f957 THEN)
f94b: 9d 03 00 00 01             ; XT=039d, flags=01
f950: 05 42 45 47 49 4e 00       ; 5, BEGIN
;
f957: 66 f9 00 00                ; THEN - (next: f966 ELSE)
f95b: 86 03 00 00 01             ; XT=0386, flags=01
f960: 04 54 48 45 4e 00          ; 4, THEN
;
f966: 75 f9 00 00                ; ELSE - (next: f975 IF)
f96a: 5d 03 00 00 01             ; XT=035d, flags=01
f96f: 04 45 4c 53 45 00          ; 4, ELSE
;
f975: 82 f9 00 00                ; IF - (next: f982 ?COMPILING)
f979: 3c 03 00 00 01             ; XT=033c, flags=01
f97e: 02 49 46 00                ; 2, IF
;
f982: 97 f9 00 00                ; ?COMPILING - (next: f997 OFF)
f986: 30 03 00 00 00             ; XT=0330, flags=00
f98b: 0a 3f 43 4f 4d 50 49 4c 49 4e 47 00 ; 10, ?COMPILING
;
f997: a5 f9 00 00                ; OFF - (next: f9a5 ON)
f99b: 26 03 00 00 00             ; XT=0326, flags=00
f9a0: 03 4f 46 46 00             ; 3, OFF
;
f9a5: b2 f9 00 00                ; ON - (next: f9b2 BINARY)
f9a9: 1c 03 00 00 00             ; XT=031c, flags=00
f9ae: 02 4f 4e 00                ; 2, ON
;
f9b2: c3 f9 00 00                ; BINARY - (next: f9c3 OCTAL)
f9b6: 0e 03 00 00 00             ; XT=030e, flags=00
f9bb: 06 42 49 4e 41 52 59 00    ; 6, BINARY
;
f9c3: d3 f9 00 00                ; OCTAL - (next: f9d3 DECIMAL)
f9c7: 00 03 00 00 00             ; XT=0300, flags=00
f9cc: 05 4f 43 54 41 4c 00       ; 5, OCTAL
;
f9d3: e5 f9 00 00                ; DECIMAL - (next: f9e5 HEX)
f9d7: f2 02 00 00 00             ; XT=02f2, flags=00
f9dc: 07 44 45 43 49 4d 41 4c 00 ; 7, DECIMAL
;
f9e5: f3 f9 00 00                ; HEX - (next: f9f3 FLAG_INLINE)
f9e9: e4 02 00 00 00             ; XT=02e4, flags=00
f9ee: 03 48 45 58 00             ; 3, HEX
;
f9f3: 09 fa 00 00                ; FLAG_INLINE - (next: fa09 FLAG_IMMEDIATE)
f9f7: dc 02 00 00 02             ; XT=02dc, flags=02
f9fc: 0b 46 4c 41 47 5f 49 4e 4c 49 4e 45 00 ; 11, FLAG_INLINE
;
fa09: 22 fa 00 00                ; FLAG_IMMEDIATE - (next: fa22 CELLS)
fa0d: d4 02 00 00 02             ; XT=02d4, flags=02
fa12: 0e 46 4c 41 47 5f 49 4d 4d 45 44 49 41 54 45 00 ; 14, FLAG_IMMEDIATE
;
fa22: 32 fa 00 00                ; CELLS - (next: fa32 IMMEDIATE)
fa26: c8 02 00 00 02             ; XT=02c8, flags=02
fa2b: 05 43 45 4c 4c 53 00       ; 5, CELLS
;
fa32: 46 fa 00 00                ; IMMEDIATE - (next: fa46 INLINE)
fa36: ad 02 00 00 00             ; XT=02ad, flags=00
fa3b: 09 49 4d 4d 45 44 49 41 54 45 00 ; 9, IMMEDIATE
;
fa46: 57 fa 00 00                ; INLINE - (next: fa57 BYE)
fa4a: 92 02 00 00 00             ; XT=0292, flags=00
fa4f: 06 49 4e 4c 49 4e 45 00    ; 6, INLINE
;
fa57: 65 fa 00 00                ; BYE - (next: fa65 RESET)
fa5b: 8b 02 00 00 02             ; XT=028b, flags=02
fa60: 03 42 59 45 00             ; 3, BYE
;
fa65: 75 fa 00 00                ; RESET - (next: fa75 BREAK)
fa69: 84 02 00 00 02             ; XT=0284, flags=02
fa6e: 05 52 45 53 45 54 00       ; 5, RESET
;
fa75: 85 fa 00 00                ; BREAK - (next: fa85 GETTICK)
fa79: 7d 02 00 00 02             ; XT=027d, flags=02
fa7e: 05 42 52 45 41 4b 00       ; 5, BREAK
;
fa85: 97 fa 00 00                ; GETTICK - (next: fa97 DEC)
fa89: 76 02 00 00 02             ; XT=0276, flags=02
fa8e: 07 47 45 54 54 49 43 4b 00 ; 7, GETTICK
;
fa97: a5 fa 00 00                ; DEC - (next: faa5 RDEPTH)
fa9b: 6f 02 00 00 02             ; XT=026f, flags=02
faa0: 03 44 45 43 00             ; 3, DEC
;
faa5: b6 fa 00 00                ; RDEPTH - (next: fab6 INC)
faa9: 68 02 00 00 02             ; XT=0268, flags=02
faae: 06 52 44 45 50 54 48 00    ; 6, RDEPTH
;
fab6: c4 fa 00 00                ; INC - (next: fac4 USPOP)
faba: 61 02 00 00 02             ; XT=0261, flags=02
fabf: 03 49 4e 43 00             ; 3, INC
;
fac4: d4 fa 00 00                ; USPOP - (next: fad4 USPUSH)
fac8: 5a 02 00 00 02             ; XT=025a, flags=02
facd: 05 55 53 50 4f 50 00       ; 5, USPOP
;
fad4: e5 fa 00 00                ; USPUSH - (next: fae5 USINIT)
fad8: 53 02 00 00 02             ; XT=0253, flags=02
fadd: 06 55 53 50 55 53 48 00    ; 6, USPUSH
;
fae5: f6 fa 00 00                ; USINIT - (next: faf6 COMPAREI)
fae9: 4c 02 00 00 02             ; XT=024c, flags=02
faee: 06 55 53 49 4e 49 54 00    ; 6, USINIT
;
faf6: 09 fb 00 00                ; COMPAREI - (next: fb09 GETCH)
fafa: 45 02 00 00 02             ; XT=0245, flags=02
faff: 08 43 4f 4d 50 41 52 45 49 00 ; 8, COMPAREI
;
fb09: 19 fb 00 00                ; GETCH - (next: fb19 DEPTH)
fb0d: 3e 02 00 00 02             ; XT=023e, flags=02
fb12: 05 47 45 54 43 48 00       ; 5, GETCH
;
fb19: 29 fb 00 00                ; DEPTH - (next: fb29 PICK)
fb1d: 37 02 00 00 02             ; XT=0237, flags=02
fb22: 05 44 45 50 54 48 00       ; 5, DEPTH
;
fb29: 38 fb 00 00                ; PICK - (next: fb38 AND)
fb2d: 30 02 00 00 02             ; XT=0230, flags=02
fb32: 04 50 49 43 4b 00          ; 4, PICK
;
fb38: 46 fb 00 00                ; AND - (next: fb46 LOGLEVEL)
fb3c: 29 02 00 00 02             ; XT=0229, flags=02
fb41: 03 41 4e 44 00             ; 3, AND
;
fb46: 59 fb 00 00                ; LOGLEVEL - (next: fb59 R>)
fb4a: 22 02 00 00 02             ; XT=0222, flags=02
fb4f: 08 4c 4f 47 4c 45 56 45 4c 00 ; 8, LOGLEVEL
;
fb59: 66 fb 00 00                ; R> - (next: fb66 >R)
fb5d: 1b 02 00 00 02             ; XT=021b, flags=02
fb62: 02 52 3e 00                ; 2, R>
;
fb66: 73 fb 00 00                ; >R - (next: fb73 FCLOSE)
fb6a: 14 02 00 00 02             ; XT=0214, flags=02
fb6f: 02 3e 52 00                ; 2, >R
;
fb73: 84 fb 00 00                ; FCLOSE - (next: fb84 FWRITE)
fb77: 0d 02 00 00 02             ; XT=020d, flags=02
fb7c: 06 46 43 4c 4f 53 45 00    ; 6, FCLOSE
;
fb84: 95 fb 00 00                ; FWRITE - (next: fb95 FREADLINE)
fb88: 06 02 00 00 02             ; XT=0206, flags=02
fb8d: 06 46 57 52 49 54 45 00    ; 6, FWRITE
;
fb95: a9 fb 00 00                ; FREADLINE - (next: fba9 FREAD)
fb99: ff 01 00 00 02             ; XT=01ff, flags=02
fb9e: 09 46 52 45 41 44 4c 49 4e 45 00 ; 9, FREADLINE
;
fba9: b9 fb 00 00                ; FREAD - (next: fbb9 FOPEN)
fbad: f8 01 00 00 02             ; XT=01f8, flags=02
fbb2: 05 46 52 45 41 44 00       ; 5, FREAD
;
fbb9: c9 fb 00 00                ; FOPEN - (next: fbc9 COMPARE)
fbbd: f1 01 00 00 02             ; XT=01f1, flags=02
fbc2: 05 46 4f 50 45 4e 00       ; 5, FOPEN
;
fbc9: db fb 00 00                ; COMPARE - (next: fbdb OVER)
fbcd: ea 01 00 00 02             ; XT=01ea, flags=02
fbd2: 07 43 4f 4d 50 41 52 45 00 ; 7, COMPARE
;
fbdb: ea fb 00 00                ; OVER - (next: fbea EMIT)
fbdf: e3 01 00 00 02             ; XT=01e3, flags=02
fbe4: 04 4f 56 45 52 00          ; 4, OVER
;
fbea: f9 fb 00 00                ; EMIT - (next: fbf9 DICTP)
fbee: dc 01 00 00 02             ; XT=01dc, flags=02
fbf3: 04 45 4d 49 54 00          ; 4, EMIT
;
fbf9: 09 fc 00 00                ; DICTP - (next: fc09 >)
fbfd: cf 01 00 00 02             ; XT=01cf, flags=02
fc02: 05 44 49 43 54 50 00       ; 5, DICTP
;
fc09: 15 fc 00 00                ; > - (next: fc15 =)
fc0d: c8 01 00 00 02             ; XT=01c8, flags=02
fc12: 01 3e 00                   ; 1, >
;
fc15: 21 fc 00 00                ; = - (next: fc21 <)
fc19: c1 01 00 00 02             ; XT=01c1, flags=02
fc1e: 01 3d 00                   ; 1, =
;
fc21: 2d fc 00 00                ; < - (next: fc2d /)
fc25: ba 01 00 00 02             ; XT=01ba, flags=02
fc2a: 01 3c 00                   ; 1, <
;
fc2d: 39 fc 00 00                ; / - (next: fc39 *)
fc31: b3 01 00 00 02             ; XT=01b3, flags=02
fc36: 01 2f 00                   ; 1, /
;
fc39: 45 fc 00 00                ; * - (next: fc45 -)
fc3d: ac 01 00 00 02             ; XT=01ac, flags=02
fc42: 01 2a 00                   ; 1, *
;
fc45: 51 fc 00 00                ; - - (next: fc51 +)
fc49: a5 01 00 00 02             ; XT=01a5, flags=02
fc4e: 01 2d 00                   ; 1, -
;
fc51: 5d fc 00 00                ; + - (next: fc5d C!)
fc55: 9e 01 00 00 02             ; XT=019e, flags=02
fc5a: 01 2b 00                   ; 1, +
;
fc5d: 6a fc 00 00                ; C! - (next: fc6a C@)
fc61: 97 01 00 00 02             ; XT=0197, flags=02
fc66: 02 43 21 00                ; 2, C!
;
fc6a: 77 fc 00 00                ; C@ - (next: fc77 CLITERAL)
fc6e: 90 01 00 00 02             ; XT=0190, flags=02
fc73: 02 43 40 00                ; 2, C@
;
fc77: 8a fc 00 00                ; CLITERAL - (next: fc8a OR)
fc7b: 83 01 00 00 02             ; XT=0183, flags=02
fc80: 08 43 4c 49 54 45 52 41 4c 00 ; 8, CLITERAL
;
fc8a: 97 fc 00 00                ; OR - (next: fc97 RET)
fc8e: 7c 01 00 00 02             ; XT=017c, flags=02
fc93: 02 4f 52 00                ; 2, OR
;
fc97: a5 fc 00 00                ; RET - (next: fca5 CALL)
fc9b: 6f 01 00 00 00             ; XT=016f, flags=00
fca0: 03 52 45 54 00             ; 3, RET
;
fca5: b4 fc 00 00                ; CALL - (next: fcb4 JMPNZ)
fca9: 62 01 00 00 00             ; XT=0162, flags=00
fcae: 04 43 41 4c 4c 00          ; 4, CALL
;
fcb4: c4 fc 00 00                ; JMPNZ - (next: fcc4 JMPZ)
fcb8: 55 01 00 00 00             ; XT=0155, flags=00
fcbd: 05 4a 4d 50 4e 5a 00       ; 5, JMPNZ
;
fcc4: d3 fc 00 00                ; JMPZ - (next: fcd3 JMP)
fcc8: 48 01 00 00 00             ; XT=0148, flags=00
fccd: 04 4a 4d 50 5a 00          ; 4, JMPZ
;
fcd3: e1 fc 00 00                ; JMP - (next: fce1 SLITERAL)
fcd7: 3b 01 00 00 00             ; XT=013b, flags=00
fcdc: 03 4a 4d 50 00             ; 3, JMP
;
fce1: f4 fc 00 00                ; SLITERAL - (next: fcf4 DUP)
fce5: 2e 01 00 00 00             ; XT=012e, flags=00
fcea: 08 53 4c 49 54 45 52 41 4c 00 ; 8, SLITERAL
;
fcf4: 02 fd 00 00                ; DUP - (next: fd02 DROP)
fcf8: 27 01 00 00 02             ; XT=0127, flags=02
fcfd: 03 44 55 50 00             ; 3, DUP
;
fd02: 11 fd 00 00                ; DROP - (next: fd11 SWAP)
fd06: 20 01 00 00 02             ; XT=0120, flags=02
fd0b: 04 44 52 4f 50 00          ; 4, DROP
;
fd11: 20 fd 00 00                ; SWAP - (next: fd20 !)
fd15: 19 01 00 00 02             ; XT=0119, flags=02
fd1a: 04 53 57 41 50 00          ; 4, SWAP
;
fd20: 2c fd 00 00                ; ! - (next: fd2c @)
fd24: 12 01 00 00 02             ; XT=0112, flags=02
fd29: 01 21 00                   ; 1, !
;
fd2c: 38 fd 00 00                ; @ - (next: fd38 LITERAL)
fd30: 0b 01 00 00 02             ; XT=010b, flags=02
fd35: 01 40 00                   ; 1, @
;
fd38: 4a fd 00 00                ; LITERAL - (next: fd4a ])
fd3c: fe 00 00 00 00             ; XT=00fe, flags=00
fd41: 07 4c 49 54 45 52 41 4c 00 ; 7, LITERAL
;
fd4a: 56 fd 00 00                ; ] - (next: fd56 [)
fd4e: f0 00 00 00 01             ; XT=00f0, flags=01
fd53: 01 5d 00                   ; 1, ]
;
fd56: 62 fd 00 00                ; [ - (next: fd62 ,)
fd5a: e2 00 00 00 01             ; XT=00e2, flags=01
fd5f: 01 5b 00                   ; 1, [
;
fd62: 6e fd 00 00                ; , - (next: fd6e C,)
fd66: c5 00 00 00 00             ; XT=00c5, flags=00
fd6b: 01 2c 00                   ; 1, ,
;
fd6e: 7b fd 00 00                ; C, - (next: fd7b LAST)
fd72: ab 00 00 00 00             ; XT=00ab, flags=00
fd77: 02 43 2c 00                ; 2, C,
;
fd7b: 8a fd 00 00                ; LAST - (next: fd8a HERE)
fd7f: 9f 00 00 00 00             ; XT=009f, flags=00
fd84: 04 4c 41 53 54 00          ; 4, LAST
;
fd8a: 99 fd 00 00                ; HERE - (next: fd99 CELL)
fd8e: 93 00 00 00 00             ; XT=0093, flags=00
fd93: 04 48 45 52 45 00          ; 4, HERE
;
fd99: a8 fd 00 00                ; CELL - (next: fda8 (MEM_SZ))
fd9d: 8b 00 00 00 00             ; XT=008b, flags=00
fda2: 04 43 45 4c 4c 00          ; 4, CELL
;
fda8: bb fd 00 00                ; (MEM_SZ) - (next: fdbb STATE)
fdac: 7c 00 00 00 00             ; XT=007c, flags=00
fdb1: 08 28 4d 45 4d 5f 53 5a 29 00 ; 8, (MEM_SZ)
;
fdbb: cb fd 00 00                ; STATE - (next: fdcb BASE)
fdbf: 6d 00 00 00 00             ; XT=006d, flags=00
fdc4: 05 53 54 41 54 45 00       ; 5, STATE
;
fdcb: da fd 00 00                ; BASE - (next: fdda (LAST))
fdcf: 5e 00 00 00 00             ; XT=005e, flags=00
fdd4: 04 42 41 53 45 00          ; 4, BASE
;
fdda: eb fd 00 00                ; (LAST) - (next: fdeb (HERE))
fdde: 4f 00 00 00 00             ; XT=004f, flags=00
fde3: 06 28 4c 41 53 54 29 00    ; 6, (LAST)
;
fdeb: fc fd 00 00                ; (HERE) - (next: fdfc <end>)
fdef: 40 00 00 00 00             ; XT=0040, flags=00
fdf4: 06 28 48 45 52 45 29 00    ; 6, (HERE)
;
fdfc: 00 00 00 00                ; End.
