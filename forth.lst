; memory-size: 65536 bytes, (10000 hex)
; data-stack: fe00, grows up
; return-stack: fffc, grows down
;
0000: 08 88 12 00 00             ; JMP main (1288)
;
0005: 00 00 00
0008: 00000004 00000000
0010: 0000151d 0000ef49 0000000a 00000000
0020: 00000000 00010000 00000000 00000000
0030: 00000000 00000000 00000000 00000000
;
0040: 18 eb fd 00 00             ; DICTP (HERE) (fdeb)
0045: 01 4b 00 00 00             ; LITERAL 75 (4b)
004a: 0c                         ; RET
004b: 1d                         ; FREAD
004c: 15                         ; LT
004d: 00                         ; RESET
004e: 00                         ; RESET
004f: 18 da fd 00 00             ; DICTP (LAST) (fdda)
0054: 01 5a 00 00 00             ; LITERAL 90 (5a)
0059: 0c                         ; RET
005a: 49                         ; RESET
005b: ef                         ; RESET
005c: 00                         ; RESET
005d: 00                         ; RESET
005e: 18 cb fd 00 00             ; DICTP BASE (fdcb)
0063: 01 69 00 00 00             ; LITERAL 105 (69)
0068: 0c                         ; RET
0069: 0a 00 00 00 18             ; JMPNZ 18000000
006e: bb                         ; RESET
006f: fd                         ; BREAK
0070: 00                         ; RESET
0071: 00                         ; RESET
0072: 01 78 00 00 00             ; LITERAL 120 (78)
0077: 0c                         ; RET
0078: 63                         ; RESET
0079: 00                         ; RESET
007a: 00                         ; RESET
007b: 00                         ; RESET
007c: 18 a8 fd 00 00             ; DICTP (MEM_SZ) (fda8)
0081: 01 87 00 00 00             ; LITERAL 135 (87)
0086: 0c                         ; RET
0087: 00                         ; RESET
0088: 00                         ; RESET
0089: 01 00 18 99 fd             ; LITERAL -40298496 (fd991800)
008e: 00                         ; RESET
008f: 00                         ; RESET
0090: 0e 04                      ; CLITERAL 4
0092: 0c                         ; RET
;
0093: 18 8a fd 00 00             ; DICTP HERE (fd8a)
0098: 0b 40 00 00 00             ; CALL (HERE) (0040)
009d: 02                         ; FETCH
009e: 0c                         ; RET
;
009f: 18 7b fd 00 00             ; DICTP LAST (fd7b)
00a4: 0b 4f 00 00 00             ; CALL (LAST) (004f)
00a9: 02                         ; FETCH
00aa: 0c                         ; RET
;
00ab: 18 6e fd 00 00             ; DICTP C, (fd6e)
00b0: 0b 93 00 00 00             ; CALL HERE (0093)
00b5: 10                         ; CSTORE
00b6: 0b 93 00 00 00             ; CALL HERE (0093)
00bb: 0e 01                      ; CLITERAL 1
00bd: 11                         ; ADD
00be: 0b 40 00 00 00             ; CALL (HERE) (0040)
00c3: 03                         ; STORE
00c4: 0c                         ; RET
;
00c5: 18 62 fd 00 00             ; DICTP , (fd62)
00ca: 0b 93 00 00 00             ; CALL HERE (0093)
00cf: 03                         ; STORE
00d0: 0b 93 00 00 00             ; CALL HERE (0093)
00d5: 0b 8b 00 00 00             ; CALL CELL (008b)
00da: 11                         ; ADD
00db: 0b 40 00 00 00             ; CALL (HERE) (0040)
00e0: 03                         ; STORE
00e1: 0c                         ; RET
;
00e2: 18 56 fd 00 00             ; DICTP [ (fd56)
00e7: 0e 00                      ; CLITERAL 0
00e9: 0b 6d 00 00 00             ; CALL STATE (006d)
00ee: 03                         ; STORE
00ef: 0c                         ; RET
;
00f0: 18 4a fd 00 00             ; DICTP ] (fd4a)
00f5: 0e 01                      ; CLITERAL 1
00f7: 0b 6d 00 00 00             ; CALL STATE (006d)
00fc: 03                         ; STORE
00fd: 0c                         ; RET
;
00fe: 18 38 fd 00 00             ; DICTP LITERAL (fd38)
0103: 0e 01                      ; CLITERAL 1
0105: 0b ab 00 00 00             ; CALL C, (00ab)
010a: 0c                         ; RET
;
010b: 18 2c fd 00 00             ; DICTP @ (fd2c)
0110: 02                         ; FETCH
0111: 0c                         ; RET
;
0112: 18 20 fd 00 00             ; DICTP ! (fd20)
0117: 03                         ; STORE
0118: 0c                         ; RET
;
0119: 18 11 fd 00 00             ; DICTP SWAP (fd11)
011e: 04                         ; SWAP
011f: 0c                         ; RET
;
0120: 18 02 fd 00 00             ; DICTP DROP (fd02)
0125: 05                         ; DROP
0126: 0c                         ; RET
;
0127: 18 f4 fc 00 00             ; DICTP DUP (fcf4)
012c: 06                         ; DUP
012d: 0c                         ; RET
;
012e: 18 e1 fc 00 00             ; DICTP SLITERAL (fce1)
0133: 0e 07                      ; CLITERAL 7
0135: 0b ab 00 00 00             ; CALL C, (00ab)
013a: 0c                         ; RET
;
013b: 18 d3 fc 00 00             ; DICTP JMP (fcd3)
0140: 0e 08                      ; CLITERAL 8
0142: 0b ab 00 00 00             ; CALL C, (00ab)
0147: 0c                         ; RET
;
0148: 18 c4 fc 00 00             ; DICTP JMPZ (fcc4)
014d: 0e 09                      ; CLITERAL 9
014f: 0b ab 00 00 00             ; CALL C, (00ab)
0154: 0c                         ; RET
;
0155: 18 b4 fc 00 00             ; DICTP JMPNZ (fcb4)
015a: 0e 0a                      ; CLITERAL 10
015c: 0b ab 00 00 00             ; CALL C, (00ab)
0161: 0c                         ; RET
;
0162: 18 a5 fc 00 00             ; DICTP CALL (fca5)
0167: 0e 0b                      ; CLITERAL 11
0169: 0b ab 00 00 00             ; CALL C, (00ab)
016e: 0c                         ; RET
;
016f: 18 97 fc 00 00             ; DICTP RET (fc97)
0174: 0e 0c                      ; CLITERAL 12
0176: 0b ab 00 00 00             ; CALL C, (00ab)
017b: 0c                         ; RET
;
017c: 18 8a fc 00 00             ; DICTP OR (fc8a)
0181: 0d                         ; OR
0182: 0c                         ; RET
;
0183: 18 77 fc 00 00             ; DICTP CLITERAL (fc77)
0188: 0e 0e                      ; CLITERAL 14
018a: 0b ab 00 00 00             ; CALL C, (00ab)
018f: 0c                         ; RET
;
0190: 18 6a fc 00 00             ; DICTP C@ (fc6a)
0195: 0f                         ; CFETCH
0196: 0c                         ; RET
;
0197: 18 5d fc 00 00             ; DICTP C! (fc5d)
019c: 10                         ; CSTORE
019d: 0c                         ; RET
;
019e: 18 51 fc 00 00             ; DICTP + (fc51)
01a3: 11                         ; ADD
01a4: 0c                         ; RET
;
01a5: 18 45 fc 00 00             ; DICTP - (fc45)
01aa: 12                         ; SUB
01ab: 0c                         ; RET
;
01ac: 18 39 fc 00 00             ; DICTP * (fc39)
01b1: 13                         ; MUL
01b2: 0c                         ; RET
;
01b3: 18 2d fc 00 00             ; DICTP / (fc2d)
01b8: 14                         ; DIV
01b9: 0c                         ; RET
;
01ba: 18 21 fc 00 00             ; DICTP < (fc21)
01bf: 15                         ; LT
01c0: 0c                         ; RET
;
01c1: 18 15 fc 00 00             ; DICTP = (fc15)
01c6: 16                         ; EQ
01c7: 0c                         ; RET
;
01c8: 18 09 fc 00 00             ; DICTP > (fc09)
01cd: 17                         ; GT
01ce: 0c                         ; RET
;
01cf: 18 f9 fb 00 00             ; DICTP DICTP (fbf9)
01d4: 0e 18                      ; CLITERAL 24
01d6: 0b ab 00 00 00             ; CALL C, (00ab)
01db: 0c                         ; RET
;
01dc: 18 ea fb 00 00             ; DICTP EMIT (fbea)
01e1: 19                         ; EMIT
01e2: 0c                         ; RET
;
01e3: 18 db fb 00 00             ; DICTP OVER (fbdb)
01e8: 1a                         ; OVER
01e9: 0c                         ; RET
;
01ea: 18 c9 fb 00 00             ; DICTP COMPARE (fbc9)
01ef: 1b                         ; COMPARE
01f0: 0c                         ; RET
;
01f1: 18 b9 fb 00 00             ; DICTP FOPEN (fbb9)
01f6: 1c                         ; FOPEN
01f7: 0c                         ; RET
;
01f8: 18 a9 fb 00 00             ; DICTP FREAD (fba9)
01fd: 1d                         ; FREAD
01fe: 0c                         ; RET
;
01ff: 18 95 fb 00 00             ; DICTP FREADLINE (fb95)
0204: 1e                         ; FREADLINE
0205: 0c                         ; RET
;
0206: 18 84 fb 00 00             ; DICTP FWRITE (fb84)
020b: 1f                         ; FWRITE
020c: 0c                         ; RET
;
020d: 18 73 fb 00 00             ; DICTP FCLOSE (fb73)
0212: 20                         ; FCLOSE
0213: 0c                         ; RET
;
0214: 18 66 fb 00 00             ; DICTP >R (fb66)
0219: 21                         ; DTOR
021a: 0c                         ; RET
;
021b: 18 59 fb 00 00             ; DICTP R> (fb59)
0220: 22                         ; RTOD
0221: 0c                         ; RET
;
0222: 18 46 fb 00 00             ; DICTP LOGLEVEL (fb46)
0227: 23                         ; LOGLEVEL
0228: 0c                         ; RET
;
0229: 18 38 fb 00 00             ; DICTP AND (fb38)
022e: 24                         ; AND
022f: 0c                         ; RET
;
0230: 18 29 fb 00 00             ; DICTP PICK (fb29)
0235: 25                         ; PICK
0236: 0c                         ; RET
;
0237: 18 19 fb 00 00             ; DICTP DEPTH (fb19)
023c: 26                         ; DEPTH
023d: 0c                         ; RET
;
023e: 18 09 fb 00 00             ; DICTP GETCH (fb09)
0243: 27                         ; GETCH
0244: 0c                         ; RET
;
0245: 18 f6 fa 00 00             ; DICTP COMPAREI (faf6)
024a: 28                         ; COMPAREI
024b: 0c                         ; RET
;
024c: 18 e5 fa 00 00             ; DICTP USPUSH (fae5)
0251: 2a                         ; UPUSH
0252: 0c                         ; RET
;
0253: 18 d5 fa 00 00             ; DICTP USPOP (fad5)
0258: 2b                         ; UPOP
0259: 0c                         ; RET
;
025a: 18 c7 fa 00 00             ; DICTP INC (fac7)
025f: 2c                         ; INC
0260: 0c                         ; RET
;
0261: 18 b6 fa 00 00             ; DICTP RDEPTH (fab6)
0266: 2d                         ; RDEPTH
0267: 0c                         ; RET
;
0268: 18 a8 fa 00 00             ; DICTP DEC (faa8)
026d: 2e                         ; DEC
026e: 0c                         ; RET
;
026f: 18 96 fa 00 00             ; DICTP GETTICK (fa96)
0274: 2f                         ; GETTICK
0275: 0c                         ; RET
;
0276: 18 86 fa 00 00             ; DICTP BREAK (fa86)
027b: fd                         ; BREAK
027c: 0c                         ; RET
;
027d: 18 76 fa 00 00             ; DICTP RESET (fa76)
0282: fe                         ; RESET
0283: 0c                         ; RET
;
0284: 18 68 fa 00 00             ; DICTP BYE (fa68)
0289: ff                         ; BYE
028a: 0c                         ; RET
;
028b: 18 57 fa 00 00             ; DICTP INLINE (fa57)
0290: 0b 9f 00 00 00             ; CALL LAST (009f)
0295: 0e 02                      ; CLITERAL 2
0297: 0b 8b 00 00 00             ; CALL CELL (008b)
029c: 13                         ; MUL
029d: 11                         ; ADD
029e: 06                         ; DUP
029f: 0f                         ; CFETCH
02a0: 0e 02                      ; CLITERAL 2
02a2: 0d                         ; OR
02a3: 04                         ; SWAP
02a4: 10                         ; CSTORE
02a5: 0c                         ; RET
;
02a6: 18 43 fa 00 00             ; DICTP IMMEDIATE (fa43)
02ab: 0b 9f 00 00 00             ; CALL LAST (009f)
02b0: 0e 02                      ; CLITERAL 2
02b2: 0b 8b 00 00 00             ; CALL CELL (008b)
02b7: 13                         ; MUL
02b8: 11                         ; ADD
02b9: 06                         ; DUP
02ba: 0f                         ; CFETCH
02bb: 0e 01                      ; CLITERAL 1
02bd: 0d                         ; OR
02be: 04                         ; SWAP
02bf: 10                         ; CSTORE
02c0: 0c                         ; RET
;
02c1: 18 33 fa 00 00             ; DICTP CELLS (fa33)
02c6: 0b 8b 00 00 00             ; CALL CELL (008b)
02cb: 13                         ; MUL
02cc: 0c                         ; RET
;
02cd: 18 1a fa 00 00             ; DICTP FLAG_IMMEDIATE (fa1a)
02d2: 0e 01                      ; CLITERAL 1
02d4: 0c                         ; RET
;
02d5: 18 04 fa 00 00             ; DICTP FLAG_INLINE (fa04)
02da: 0e 02                      ; CLITERAL 2
02dc: 0c                         ; RET
;
02dd: 18 f6 f9 00 00             ; DICTP HEX (f9f6)
02e2: 0e 10                      ; CLITERAL 16
02e4: 0b 5e 00 00 00             ; CALL BASE (005e)
02e9: 03                         ; STORE
02ea: 0c                         ; RET
;
02eb: 18 e4 f9 00 00             ; DICTP DECIMAL (f9e4)
02f0: 0e 0a                      ; CLITERAL 10
02f2: 0b 5e 00 00 00             ; CALL BASE (005e)
02f7: 03                         ; STORE
02f8: 0c                         ; RET
;
02f9: 18 d4 f9 00 00             ; DICTP OCTAL (f9d4)
02fe: 0e 08                      ; CLITERAL 8
0300: 0b 5e 00 00 00             ; CALL BASE (005e)
0305: 03                         ; STORE
0306: 0c                         ; RET
;
0307: 18 c3 f9 00 00             ; DICTP BINARY (f9c3)
030c: 0e 02                      ; CLITERAL 2
030e: 0b 5e 00 00 00             ; CALL BASE (005e)
0313: 03                         ; STORE
0314: 0c                         ; RET
;
0315: 18 b6 f9 00 00             ; DICTP ON (f9b6)
031a: 0e 01                      ; CLITERAL 1
031c: 04                         ; SWAP
031d: 03                         ; STORE
031e: 0c                         ; RET
;
031f: 18 a8 f9 00 00             ; DICTP OFF (f9a8)
0324: 0e 00                      ; CLITERAL 0
0326: 04                         ; SWAP
0327: 03                         ; STORE
0328: 0c                         ; RET
;
0329: 18 93 f9 00 00             ; DICTP ?COMPILING (f993)
032e: 0b 6d 00 00 00             ; CALL STATE (006d)
0333: 02                         ; FETCH
0334: 0c                         ; RET
;
0335: 18 86 f9 00 00             ; DICTP IF (f986)
033a: 0b 29 03 00 00             ; CALL ?COMPILING (0329)
033f: 09 55 03 00 00             ; JMPZ 0355
0344: 0b 48 01 00 00             ; CALL JMPZ (0148)
0349: 0b 93 00 00 00             ; CALL HERE (0093)
034e: 0e 00                      ; CLITERAL 0
0350: 0b c5 00 00 00             ; CALL , (00c5)
0355: 0c                         ; RET
;
0356: 18 77 f9 00 00             ; DICTP ELSE (f977)
035b: 0b 29 03 00 00             ; CALL ?COMPILING (0329)
0360: 09 7e 03 00 00             ; JMPZ 037e
0365: 0b 3b 01 00 00             ; CALL JMP (013b)
036a: 0b 93 00 00 00             ; CALL HERE (0093)
036f: 04                         ; SWAP
0370: 0e 00                      ; CLITERAL 0
0372: 0b c5 00 00 00             ; CALL , (00c5)
0377: 0b 93 00 00 00             ; CALL HERE (0093)
037c: 04                         ; SWAP
037d: 03                         ; STORE
037e: 0c                         ; RET
;
037f: 18 68 f9 00 00             ; DICTP THEN (f968)
0384: 0b 29 03 00 00             ; CALL ?COMPILING (0329)
0389: 09 95 03 00 00             ; JMPZ 0395
038e: 0b 93 00 00 00             ; CALL HERE (0093)
0393: 04                         ; SWAP
0394: 03                         ; STORE
0395: 0c                         ; RET
;
0396: 18 58 f9 00 00             ; DICTP BEGIN (f958)
039b: 0b 29 03 00 00             ; CALL ?COMPILING (0329)
03a0: 09 aa 03 00 00             ; JMPZ 03aa
03a5: 0b 93 00 00 00             ; CALL HERE (0093)
03aa: 0c                         ; RET
;
03ab: 18 48 f9 00 00             ; DICTP AGAIN (f948)
03b0: 0b 29 03 00 00             ; CALL ?COMPILING (0329)
03b5: 09 c4 03 00 00             ; JMPZ 03c4
03ba: 0b 3b 01 00 00             ; CALL JMP (013b)
03bf: 0b c5 00 00 00             ; CALL , (00c5)
03c4: 0c                         ; RET
;
03c5: 18 38 f9 00 00             ; DICTP WHILE (f938)
03ca: 0b 29 03 00 00             ; CALL ?COMPILING (0329)
03cf: 09 de 03 00 00             ; JMPZ 03de
03d4: 0b 55 01 00 00             ; CALL JMPNZ (0155)
03d9: 0b c5 00 00 00             ; CALL , (00c5)
03de: 0c                         ; RET
;
03df: 18 28 f9 00 00             ; DICTP UNTIL (f928)
03e4: 0b 29 03 00 00             ; CALL ?COMPILING (0329)
03e9: 09 f8 03 00 00             ; JMPZ 03f8
03ee: 0b 48 01 00 00             ; CALL JMPZ (0148)
03f3: 0b c5 00 00 00             ; CALL , (00c5)
03f8: 0c                         ; RET
;
03f9: 18 18 f9 00 00             ; DICTP LEAVE (f918)
03fe: 0b 29 03 00 00             ; CALL ?COMPILING (0329)
0403: 09 0d 04 00 00             ; JMPZ 040d
0408: 0b 6f 01 00 00             ; CALL RET (016f)
040d: 0c                         ; RET
;
040e: 18 0a f9 00 00             ; DICTP >IN (f90a)
0413: 01 19 04 00 00             ; LITERAL 1049 (419)
0418: 0c                         ; RET
0419: 00                         ; RESET
041a: 00                         ; RESET
041b: 00                         ; RESET
041c: 00                         ; RESET
041d: 0c                         ; RET
;
041e: 18 fa f8 00 00             ; DICTP isNeg (f8fa)
0423: 01 29 04 00 00             ; LITERAL 1065 (429)
0428: 0c                         ; RET
0429: 00                         ; RESET
042a: 00                         ; RESET
042b: 00                         ; RESET
042c: 00                         ; RESET
042d: 0c                         ; RET
;
042e: 18 e9 f8 00 00             ; DICTP MEM_SZ (f8e9)
0433: 0b 7c 00 00 00             ; CALL (MEM_SZ) (007c)
0438: 02                         ; FETCH
0439: 0c                         ; RET
;
043a: 18 d6 f8 00 00             ; DICTP TRACE-ON (f8d6)
043f: 0e 02                      ; CLITERAL 2
0441: 23                         ; LOGLEVEL
0442: 0c                         ; RET
;
0443: 18 c2 f8 00 00             ; DICTP TRACE-OFF (f8c2)
0448: 0e 00                      ; CLITERAL 0
044a: 23                         ; LOGLEVEL
044b: 0c                         ; RET
;
044c: 18 af f8 00 00             ; DICTP DEBUG-ON (f8af)
0451: 0e 01                      ; CLITERAL 1
0453: 23                         ; LOGLEVEL
0454: 0c                         ; RET
;
0455: 18 9b f8 00 00             ; DICTP DEBUG-OFF (f89b)
045a: 0e 00                      ; CLITERAL 0
045c: 23                         ; LOGLEVEL
045d: 0c                         ; RET
;
045e: 18 8e f8 00 00             ; DICTP R@ (f88e)
0463: 22                         ; RTOD
0464: 06                         ; DUP
0465: 21                         ; DTOR
0466: 0c                         ; RET
;
0467: 18 7e f8 00 00             ; DICTP RDROP (f87e)
046c: 22                         ; RTOD
046d: 05                         ; DROP
046e: 0c                         ; RET
;
046f: 18 6f f8 00 00             ; DICTP 2DUP (f86f)
0474: 1a                         ; OVER
0475: 1a                         ; OVER
0476: 0c                         ; RET
;
0477: 18 5f f8 00 00             ; DICTP 2DROP (f85f)
047c: 05                         ; DROP
047d: 05                         ; DROP
047e: 0c                         ; RET
;
047f: 18 50 f8 00 00             ; DICTP TUCK (f850)
0484: 04                         ; SWAP
0485: 1a                         ; OVER
0486: 0c                         ; RET
;
0487: 18 42 f8 00 00             ; DICTP NIP (f842)
048c: 04                         ; SWAP
048d: 05                         ; DROP
048e: 0c                         ; RET
;
048f: 18 34 f8 00 00             ; DICTP ROT (f834)
0494: 21                         ; DTOR
0495: 04                         ; SWAP
0496: 22                         ; RTOD
0497: 04                         ; SWAP
0498: 0c                         ; RET
;
0499: 18 25 f8 00 00             ; DICTP -ROT (f825)
049e: 04                         ; SWAP
049f: 21                         ; DTOR
04a0: 04                         ; SWAP
04a1: 22                         ; RTOD
04a2: 0c                         ; RET
;
04a3: 18 18 f8 00 00             ; DICTP 1+ (f818)
04a8: 2c                         ; INC
04a9: 0c                         ; RET
;
04aa: 18 0b f8 00 00             ; DICTP 1- (f80b)
04af: 2e                         ; DEC
04b0: 0c                         ; RET
;
04b1: 18 fe f7 00 00             ; DICTP 2* (f7fe)
04b6: 0e 02                      ; CLITERAL 2
04b8: 13                         ; MUL
04b9: 0c                         ; RET
;
04ba: 18 f1 f7 00 00             ; DICTP 2/ (f7f1)
04bf: 0e 02                      ; CLITERAL 2
04c1: 14                         ; DIV
04c2: 0c                         ; RET
;
04c3: 18 e4 f7 00 00             ; DICTP += (f7e4)
04c8: 1a                         ; OVER
04c9: 02                         ; FETCH
04ca: 11                         ; ADD
04cb: 04                         ; SWAP
04cc: 03                         ; STORE
04cd: 0c                         ; RET
;
04ce: 18 d7 f7 00 00             ; DICTP -= (f7d7)
04d3: 1a                         ; OVER
04d4: 02                         ; FETCH
04d5: 04                         ; SWAP
04d6: 12                         ; SUB
04d7: 04                         ; SWAP
04d8: 03                         ; STORE
04d9: 0c                         ; RET
;
04da: 18 ca f7 00 00             ; DICTP ++ (f7ca)
04df: 0e 01                      ; CLITERAL 1
04e1: 0b c3 04 00 00             ; CALL += (04c3)
04e6: 0c                         ; RET
;
04e7: 18 bd f7 00 00             ; DICTP -- (f7bd)
04ec: 0e 01                      ; CLITERAL 1
04ee: 0b ce 04 00 00             ; CALL -= (04ce)
04f3: 0c                         ; RET
;
04f4: 18 af f7 00 00             ; DICTP C++ (f7af)
04f9: 06                         ; DUP
04fa: 0f                         ; CFETCH
04fb: 2c                         ; INC
04fc: 04                         ; SWAP
04fd: 10                         ; CSTORE
04fe: 0c                         ; RET
;
04ff: 18 a1 f7 00 00             ; DICTP C-- (f7a1)
0504: 06                         ; DUP
0505: 0f                         ; CFETCH
0506: 2e                         ; DEC
0507: 04                         ; SWAP
0508: 10                         ; CSTORE
0509: 0c                         ; RET
;
050a: 18 94 f7 00 00             ; DICTP +! (f794)
050f: 04                         ; SWAP
0510: 1a                         ; OVER
0511: 02                         ; FETCH
0512: 11                         ; ADD
0513: 04                         ; SWAP
0514: 03                         ; STORE
0515: 0c                         ; RET
;
0516: 18 86 f7 00 00             ; DICTP C+! (f786)
051b: 04                         ; SWAP
051c: 1a                         ; OVER
051d: 0f                         ; CFETCH
051e: 11                         ; ADD
051f: 04                         ; SWAP
0520: 10                         ; CSTORE
0521: 0c                         ; RET
;
0522: 18 79 f7 00 00             ; DICTP 0= (f779)
0527: 0e 00                      ; CLITERAL 0
0529: 16                         ; EQ
052a: 0c                         ; RET
;
052b: 18 6c f7 00 00             ; DICTP <> (f76c)
0530: 16                         ; EQ
0531: 0e 00                      ; CLITERAL 0
0533: 16                         ; EQ
0534: 0c                         ; RET
;
0535: 18 5f f7 00 00             ; DICTP <= (f75f)
053a: 17                         ; GT
053b: 0e 00                      ; CLITERAL 0
053d: 16                         ; EQ
053e: 0c                         ; RET
;
053f: 18 52 f7 00 00             ; DICTP >= (f752)
0544: 15                         ; LT
0545: 0e 00                      ; CLITERAL 0
0547: 16                         ; EQ
0548: 0c                         ; RET
;
0549: 18 43 f7 00 00             ; DICTP TRUE (f743)
054e: 0e 01                      ; CLITERAL 1
0550: 0c                         ; RET
;
0551: 18 33 f7 00 00             ; DICTP FALSE (f733)
0556: 0e 00                      ; CLITERAL 0
0558: 0c                         ; RET
;
0559: 18 25 f7 00 00             ; DICTP NOT (f725)
055e: 0e 00                      ; CLITERAL 0
0560: 16                         ; EQ
0561: 0c                         ; RET
;
0562: 18 15 f7 00 00             ; DICTP COUNT (f715)
0567: 06                         ; DUP
0568: 2c                         ; INC
0569: 04                         ; SWAP
056a: 0f                         ; CFETCH
056b: 0c                         ; RET
;
056c: 18 06 f7 00 00             ; DICTP TYPE (f706)
0571: 1a                         ; OVER
0572: 11                         ; ADD
0573: 04                         ; SWAP
0574: 1a                         ; OVER
0575: 1a                         ; OVER
0576: 17                         ; GT
0577: 0e 00                      ; CLITERAL 0
0579: 16                         ; EQ
057a: 09 82 05 00 00             ; JMPZ 0582
057f: 05                         ; DROP
0580: 05                         ; DROP
0581: 0c                         ; RET
0582: 06                         ; DUP
0583: 0f                         ; CFETCH
0584: 19                         ; EMIT
0585: 2c                         ; INC
0586: 08 74 05 00 00             ; JMP 0574
058b: 0c                         ; RET
;
058c: 18 f9 f6 00 00             ; DICTP CT (f6f9)
0591: 0b 62 05 00 00             ; CALL COUNT (0562)
0596: 0b 6c 05 00 00             ; CALL TYPE (056c)
059b: 0c                         ; RET
;
059c: 18 ed f6 00 00             ; DICTP \ (f6ed)
05a1: 0e 00                      ; CLITERAL 0
05a3: 0b 0e 04 00 00             ; CALL >IN (040e)
05a8: 02                         ; FETCH
05a9: 10                         ; CSTORE
05aa: 0c                         ; RET
;
05ab: 18 e1 f6 00 00             ; DICTP ( (f6e1)
05b0: 0b 0e 04 00 00             ; CALL >IN (040e)
05b5: 02                         ; FETCH
05b6: 0f                         ; CFETCH
05b7: 06                         ; DUP
05b8: 0e 00                      ; CLITERAL 0
05ba: 16                         ; EQ
05bb: 09 dc 05 00 00             ; JMPZ 05dc
05c0: 07 13 6d 69 73 73 69 6e 67 20 63 6c 6f 73 69 6e 67 20 27 29 27 00 ; SLITERAL (05c1) [missing closing ')']
05d6: 0b 8c 05 00 00             ; CALL CT (058c)
05db: fe                         ; RESET
05dc: 0b 0e 04 00 00             ; CALL >IN (040e)
05e1: 0b da 04 00 00             ; CALL ++ (04da)
05e6: 0e 29                      ; CLITERAL 41
05e8: 16                         ; EQ
05e9: 09 ef 05 00 00             ; JMPZ 05ef
05ee: 0c                         ; RET
05ef: 08 b0 05 00 00             ; JMP 05b0
05f4: 0c                         ; RET
;
05f5: 18 d4 f6 00 00             ; DICTP BL (f6d4)
05fa: 0e 20                      ; CLITERAL 32
05fc: 19                         ; EMIT
05fd: 0c                         ; RET
;
05fe: 18 c5 f6 00 00             ; DICTP CRLF (f6c5)
0603: 0e 0d                      ; CLITERAL 13
0605: 19                         ; EMIT
0606: 0e 0a                      ; CLITERAL 10
0608: 19                         ; EMIT
0609: 0c                         ; RET
;
060a: 18 b8 f6 00 00             ; DICTP CR (f6b8)
060f: 0e 0d                      ; CLITERAL 13
0611: 19                         ; EMIT
0612: 0e 0a                      ; CLITERAL 10
0614: 19                         ; EMIT
0615: 0c                         ; RET
;
0616: 18 a6 f6 00 00             ; DICTP BETWEEN (f6a6)
061b: 0e 02                      ; CLITERAL 2
061d: 25                         ; PICK
061e: 15                         ; LT
061f: 09 29 06 00 00             ; JMPZ 0629
0624: 05                         ; DROP
0625: 05                         ; DROP
0626: 0e 00                      ; CLITERAL 0
0628: 0c                         ; RET
0629: 15                         ; LT
062a: 0e 00                      ; CLITERAL 0
062c: 16                         ; EQ
062d: 0c                         ; RET
;
062e: 18 96 f6 00 00             ; DICTP (tmp) (f696)
0633: 01 39 06 00 00             ; LITERAL 1593 (639)
0638: 0c                         ; RET
0639: 00                         ; RESET
063a: 00                         ; RESET
063b: 00                         ; RESET
063c: 00                         ; RESET
063d: 0c                         ; RET
;
063e: 18 83 f6 00 00             ; DICTP tmp-init (f683)
0643: 0b 9f 00 00 00             ; CALL LAST (009f)
0648: 0b 2e 06 00 00             ; CALL (tmp) (062e)
064d: 03                         ; STORE
064e: 0c                         ; RET
;
064f: 18 71 f6 00 00             ; DICTP tmp-cur (f671)
0654: 0b 2e 06 00 00             ; CALL (tmp) (062e)
0659: 02                         ; FETCH
065a: 0c                         ; RET
;
065b: 18 5d f6 00 00             ; DICTP tmp-alloc (f65d)
0660: 0b 2e 06 00 00             ; CALL (tmp) (062e)
0665: 04                         ; SWAP
0666: 1a                         ; OVER
0667: 02                         ; FETCH
0668: 04                         ; SWAP
0669: 12                         ; SUB
066a: 04                         ; SWAP
066b: 03                         ; STORE
066c: 0b 4f 06 00 00             ; CALL tmp-cur (064f)
0671: 0c                         ; RET
;
0672: 18 4f f6 00 00             ; DICTP PAD (f64f)
0677: 0b 3e 06 00 00             ; CALL tmp-init (063e)
067c: 0e c8                      ; CLITERAL 200
067e: 0b 5b 06 00 00             ; CALL tmp-alloc (065b)
0683: 0c                         ; RET
;
0684: 18 3c f6 00 00             ; DICTP getInput (f63c)
0689: 0b 72 06 00 00             ; CALL PAD (0672)
068e: 0e 80                      ; CLITERAL 128
0690: 0e 00                      ; CLITERAL 0
0692: 1e                         ; FREADLINE
0693: 05                         ; DROP
0694: 0b 72 06 00 00             ; CALL PAD (0672)
0699: 0c                         ; RET
;
069a: 18 2b f6 00 00             ; DICTP skipWS (f62b)
069f: 06                         ; DUP
06a0: 0f                         ; CFETCH
06a1: 06                         ; DUP
06a2: 09 bb 06 00 00             ; JMPZ 06bb
06a7: 0e 20                      ; CLITERAL 32
06a9: 17                         ; GT
06aa: 09 b5 06 00 00             ; JMPZ 06b5
06af: 0c                         ; RET
06b0: 08 b6 06 00 00             ; JMP 06b6
06b5: 2c                         ; INC
06b6: 08 bd 06 00 00             ; JMP 06bd
06bb: 05                         ; DROP
06bc: 0c                         ; RET
06bd: 08 9f 06 00 00             ; JMP 069f
06c2: 0c                         ; RET
;
06c3: 18 16 f6 00 00             ; DICTP getOneWord (f616)
06c8: 06                         ; DUP
06c9: 21                         ; DTOR
06ca: 21                         ; DTOR
06cb: 22                         ; RTOD
06cc: 06                         ; DUP
06cd: 21                         ; DTOR
06ce: 0f                         ; CFETCH
06cf: 0e 20                      ; CLITERAL 32
06d1: 17                         ; GT
06d2: 09 df 06 00 00             ; JMPZ 06df
06d7: 22                         ; RTOD
06d8: 2c                         ; INC
06d9: 21                         ; DTOR
06da: 08 f5 06 00 00             ; JMP 06f5
06df: 22                         ; RTOD
06e0: 06                         ; DUP
06e1: 21                         ; DTOR
06e2: 0f                         ; CFETCH
06e3: 09 f1 06 00 00             ; JMPZ 06f1
06e8: 0e 00                      ; CLITERAL 0
06ea: 22                         ; RTOD
06eb: 06                         ; DUP
06ec: 21                         ; DTOR
06ed: 10                         ; CSTORE
06ee: 22                         ; RTOD
06ef: 2c                         ; INC
06f0: 21                         ; DTOR
06f1: 22                         ; RTOD
06f2: 22                         ; RTOD
06f3: 04                         ; SWAP
06f4: 0c                         ; RET
06f5: 08 cb 06 00 00             ; JMP 06cb
06fa: 0c                         ; RET
;
06fb: 18 02 f6 00 00             ; DICTP DICT>NEXT (f602)
0700: 0c                         ; RET
;
0701: 18 f0 f5 00 00             ; DICTP DICT>XT (f5f0)
0706: 0b 8b 00 00 00             ; CALL CELL (008b)
070b: 11                         ; ADD
070c: 0c                         ; RET
;
070d: 18 db f5 00 00             ; DICTP DICT>FLAGS (f5db)
0712: 0e 02                      ; CLITERAL 2
0714: 0b 8b 00 00 00             ; CALL CELL (008b)
0719: 13                         ; MUL
071a: 11                         ; ADD
071b: 0c                         ; RET
;
071c: 18 c7 f5 00 00             ; DICTP DICT>NAME (f5c7)
0721: 0b 0d 07 00 00             ; CALL DICT>FLAGS (070d)
0726: 2c                         ; INC
0727: 0c                         ; RET
;
0728: 18 b3 f5 00 00             ; DICTP NEXT>DICT (f5b3)
072d: 0c                         ; RET
;
072e: 18 a1 f5 00 00             ; DICTP XT>DICT (f5a1)
0733: 0b 8b 00 00 00             ; CALL CELL (008b)
0738: 12                         ; SUB
0739: 0c                         ; RET
;
073a: 18 8c f5 00 00             ; DICTP FLAGS>DICT (f58c)
073f: 0e 02                      ; CLITERAL 2
0741: 0b 8b 00 00 00             ; CALL CELL (008b)
0746: 13                         ; MUL
0747: 12                         ; SUB
0748: 0c                         ; RET
;
0749: 18 78 f5 00 00             ; DICTP NAME>DICT (f578)
074e: 2e                         ; DEC
074f: 0e 02                      ; CLITERAL 2
0751: 0b 8b 00 00 00             ; CALL CELL (008b)
0756: 13                         ; MUL
0757: 12                         ; SUB
0758: 0c                         ; RET
;
0759: 18 63 f5 00 00             ; DICTP DICT.GetXT (f563)
075e: 0b 01 07 00 00             ; CALL DICT>XT (0701)
0763: 02                         ; FETCH
0764: 0c                         ; RET
;
0765: 18 4b f5 00 00             ; DICTP DICT.GetFLAGS (f54b)
076a: 0b 0d 07 00 00             ; CALL DICT>FLAGS (070d)
076f: 0f                         ; CFETCH
0770: 0c                         ; RET
;
0771: 18 36 f5 00 00             ; DICTP DICTP>NAME (f536)
0776: 2c                         ; INC
0777: 02                         ; FETCH
0778: 0b 1c 07 00 00             ; CALL DICT>NAME (071c)
077d: 0c                         ; RET
;
077e: 18 20 f5 00 00             ; DICTP XT.GetDICTP (f520)
0783: 06                         ; DUP
0784: 0f                         ; CFETCH
0785: 0e 18                      ; CLITERAL 24
0787: 16                         ; EQ
0788: 09 94 07 00 00             ; JMPZ 0794
078d: 2c                         ; INC
078e: 02                         ; FETCH
078f: 08 96 07 00 00             ; JMP 0796
0794: 05                         ; DROP
0795: fe                         ; RESET
0796: 0c                         ; RET
;
0797: 18 03 f5 00 00             ; DICTP FLAGS.ISIMMEDIATE? (f503)
079c: 0e 01                      ; CLITERAL 1
079e: 24                         ; AND
079f: 0c                         ; RET
;
07a0: 18 e9 f4 00 00             ; DICTP FLAGS.ISINLINE? (f4e9)
07a5: 0e 02                      ; CLITERAL 2
07a7: 24                         ; AND
07a8: 0c                         ; RET
;
07a9: 18 cd f4 00 00             ; DICTP DICT.GetIMMEDIATE (f4cd)
07ae: 0b 65 07 00 00             ; CALL DICT.GetFLAGS (0765)
07b3: 0b 97 07 00 00             ; CALL FLAGS.ISIMMEDIATE? (0797)
07b8: 0c                         ; RET
;
07b9: 18 b4 f4 00 00             ; DICTP DICT.GetINLINE (f4b4)
07be: 0b 65 07 00 00             ; CALL DICT.GetFLAGS (0765)
07c3: 0b a0 07 00 00             ; CALL FLAGS.ISINLINE? (07a0)
07c8: 0c                         ; RET
;
07c9: 18 9f f4 00 00             ; DICTP findInDict (f49f)
07ce: 0b 9f 00 00 00             ; CALL LAST (009f)
07d3: 21                         ; DTOR
07d4: 22                         ; RTOD
07d5: 06                         ; DUP
07d6: 21                         ; DTOR
07d7: 06                         ; DUP
07d8: 09 01 08 00 00             ; JMPZ 0801
07dd: 0b 1c 07 00 00             ; CALL DICT>NAME (071c)
07e2: 2c                         ; INC
07e3: 1a                         ; OVER
07e4: 28                         ; COMPAREI
07e5: 09 fc 07 00 00             ; JMPZ 07fc
07ea: 05                         ; DROP
07eb: 22                         ; RTOD
07ec: 06                         ; DUP
07ed: 21                         ; DTOR
07ee: 0b 59 07 00 00             ; CALL DICT.GetXT (0759)
07f3: 22                         ; RTOD
07f4: 0b 65 07 00 00             ; CALL DICT.GetFLAGS (0765)
07f9: 0e 01                      ; CLITERAL 1
07fb: 0c                         ; RET
07fc: 08 09 08 00 00             ; JMP 0809
0801: 05                         ; DROP
0802: 05                         ; DROP
0803: 22                         ; RTOD
0804: 0e 00                      ; CLITERAL 0
0806: 0e 00                      ; CLITERAL 0
0808: 0c                         ; RET
0809: 22                         ; RTOD
080a: 02                         ; FETCH
080b: 21                         ; DTOR
080c: 08 d4 07 00 00             ; JMP 07d4
0811: 0c                         ; RET
;
0812: 18 8e f4 00 00             ; DICTP isHEX? (f48e)
0817: 0b 5e 00 00 00             ; CALL BASE (005e)
081c: 02                         ; FETCH
081d: 0e 10                      ; CLITERAL 16
081f: 16                         ; EQ
0820: 0c                         ; RET
;
0821: 18 79 f4 00 00             ; DICTP isNumChar? (f479)
0826: 06                         ; DUP
0827: 0e 30                      ; CLITERAL 48
0829: 0e 39                      ; CLITERAL 57
082b: 0b 16 06 00 00             ; CALL BETWEEN (0616)
0830: 09 3b 08 00 00             ; JMPZ 083b
0835: 0e 30                      ; CLITERAL 48
0837: 12                         ; SUB
0838: 0e 01                      ; CLITERAL 1
083a: 0c                         ; RET
083b: 0b 12 08 00 00             ; CALL isHEX? (0812)
0840: 09 6f 08 00 00             ; JMPZ 086f
0845: 06                         ; DUP
0846: 0e 41                      ; CLITERAL 65
0848: 0e 46                      ; CLITERAL 70
084a: 0b 16 06 00 00             ; CALL BETWEEN (0616)
084f: 09 5a 08 00 00             ; JMPZ 085a
0854: 0e 37                      ; CLITERAL 55
0856: 12                         ; SUB
0857: 0e 01                      ; CLITERAL 1
0859: 0c                         ; RET
085a: 06                         ; DUP
085b: 0e 61                      ; CLITERAL 97
085d: 0e 66                      ; CLITERAL 102
085f: 0b 16 06 00 00             ; CALL BETWEEN (0616)
0864: 09 6f 08 00 00             ; JMPZ 086f
0869: 0e 57                      ; CLITERAL 87
086b: 12                         ; SUB
086c: 0e 01                      ; CLITERAL 1
086e: 0c                         ; RET
086f: 0e 00                      ; CLITERAL 0
0871: 0c                         ; RET
;
0872: 18 68 f4 00 00             ; DICTP NEGATE (f468)
0877: 0e 00                      ; CLITERAL 0
0879: 04                         ; SWAP
087a: 12                         ; SUB
087b: 0c                         ; RET
;
087c: 18 5a f4 00 00             ; DICTP ABS (f45a)
0881: 06                         ; DUP
0882: 0e 00                      ; CLITERAL 0
0884: 15                         ; LT
0885: 09 8f 08 00 00             ; JMPZ 088f
088a: 0b 72 08 00 00             ; CALL NEGATE (0872)
088f: 0c                         ; RET
;
0890: 18 46 f4 00 00             ; DICTP isNumber? (f446)
0895: 06                         ; DUP
0896: 0f                         ; CFETCH
0897: 0e 2d                      ; CLITERAL 45
0899: 16                         ; EQ
089a: 06                         ; DUP
089b: 0b 1e 04 00 00             ; CALL isNeg (041e)
08a0: 10                         ; CSTORE
08a1: 09 a7 08 00 00             ; JMPZ 08a7
08a6: 2c                         ; INC
08a7: 0e 00                      ; CLITERAL 0
08a9: 21                         ; DTOR
08aa: 06                         ; DUP
08ab: 0f                         ; CFETCH
08ac: 06                         ; DUP
08ad: 0e 00                      ; CLITERAL 0
08af: 16                         ; EQ
08b0: 09 cb 08 00 00             ; JMPZ 08cb
08b5: 05                         ; DROP
08b6: 05                         ; DROP
08b7: 22                         ; RTOD
08b8: 0b 1e 04 00 00             ; CALL isNeg (041e)
08bd: 0f                         ; CFETCH
08be: 09 c8 08 00 00             ; JMPZ 08c8
08c3: 0b 72 08 00 00             ; CALL NEGATE (0872)
08c8: 0e 01                      ; CLITERAL 1
08ca: 0c                         ; RET
08cb: 0b 21 08 00 00             ; CALL isNumChar? (0821)
08d0: 09 e5 08 00 00             ; JMPZ 08e5
08d5: 22                         ; RTOD
08d6: 0b 5e 00 00 00             ; CALL BASE (005e)
08db: 02                         ; FETCH
08dc: 13                         ; MUL
08dd: 11                         ; ADD
08de: 21                         ; DTOR
08df: 2c                         ; INC
08e0: 08 ea 08 00 00             ; JMP 08ea
08e5: 05                         ; DROP
08e6: 22                         ; RTOD
08e7: 0e 00                      ; CLITERAL 0
08e9: 0c                         ; RET
08ea: 08 aa 08 00 00             ; JMP 08aa
08ef: 0c                         ; RET
;
08f0: 18 38 f4 00 00             ; DICTP MOD (f438)
08f5: 1a                         ; OVER
08f6: 1a                         ; OVER
08f7: 14                         ; DIV
08f8: 13                         ; MUL
08f9: 12                         ; SUB
08fa: 0c                         ; RET
;
08fb: 18 29 f4 00 00             ; DICTP /MOD (f429)
0900: 1a                         ; OVER
0901: 1a                         ; OVER
0902: 14                         ; DIV
0903: 06                         ; DUP
0904: 21                         ; DTOR
0905: 13                         ; MUL
0906: 12                         ; SUB
0907: 22                         ; RTOD
0908: 0c                         ; RET
;
0909: 18 19 f4 00 00             ; DICTP SPACE (f419)
090e: 0e 20                      ; CLITERAL 32
0910: 19                         ; EMIT
0911: 0c                         ; RET
;
0912: 18 0a f4 00 00             ; DICTP #NEG (f40a)
0917: 01 1d 09 00 00             ; LITERAL 2333 (91d)
091c: 0c                         ; RET
091d: 00                         ; RESET
091e: 00                         ; RESET
091f: 00                         ; RESET
0920: 00                         ; RESET
0921: 0c                         ; RET
;
0922: 18 fb f3 00 00             ; DICTP #LEN (f3fb)
0927: 01 2d 09 00 00             ; LITERAL 2349 (92d)
092c: 0c                         ; RET
092d: 05                         ; DROP
092e: 00                         ; RESET
092f: 00                         ; RESET
0930: 00                         ; RESET
0931: 0c                         ; RET
;
0932: 18 ee f3 00 00             ; DICTP <# (f3ee)
0937: 0b 12 09 00 00             ; CALL #NEG (0912)
093c: 0b 1f 03 00 00             ; CALL OFF (031f)
0941: 0b 22 09 00 00             ; CALL #LEN (0922)
0946: 0b 1f 03 00 00             ; CALL OFF (031f)
094b: 06                         ; DUP
094c: 0e 00                      ; CLITERAL 0
094e: 15                         ; LT
094f: 09 63 09 00 00             ; JMPZ 0963
0954: 0b 72 08 00 00             ; CALL NEGATE (0872)
0959: 0b 12 09 00 00             ; CALL #NEG (0912)
095e: 0b 15 03 00 00             ; CALL ON (0315)
0963: 0e 00                      ; CLITERAL 0
0965: 04                         ; SWAP
0966: 0c                         ; RET
;
0967: 18 e2 f3 00 00             ; DICTP # (f3e2)
096c: 0b 5e 00 00 00             ; CALL BASE (005e)
0971: 02                         ; FETCH
0972: 0b fb 08 00 00             ; CALL /MOD (08fb)
0977: 04                         ; SWAP
0978: 0e 30                      ; CLITERAL 48
097a: 11                         ; ADD
097b: 06                         ; DUP
097c: 0e 39                      ; CLITERAL 57
097e: 17                         ; GT
097f: 09 87 09 00 00             ; JMPZ 0987
0984: 0e 07                      ; CLITERAL 7
0986: 11                         ; ADD
0987: 0b 22 09 00 00             ; CALL #LEN (0922)
098c: 0b da 04 00 00             ; CALL ++ (04da)
0991: 04                         ; SWAP
0992: 0c                         ; RET
;
0993: 18 d5 f3 00 00             ; DICTP #S (f3d5)
0998: 0b 67 09 00 00             ; CALL # (0967)
099d: 06                         ; DUP
099e: 0e 00                      ; CLITERAL 0
09a0: 16                         ; EQ
09a1: 09 98 09 00 00             ; JMPZ 0998
09a6: 0c                         ; RET
;
09a7: 18 c8 f3 00 00             ; DICTP #> (f3c8)
09ac: 0c                         ; RET
;
09ad: 18 ba f3 00 00             ; DICTP #P- (f3ba)
09b2: 05                         ; DROP
09b3: 0b 12 09 00 00             ; CALL #NEG (0912)
09b8: 02                         ; FETCH
09b9: 09 c1 09 00 00             ; JMPZ 09c1
09be: 0e 2d                      ; CLITERAL 45
09c0: 19                         ; EMIT
09c1: 0c                         ; RET
;
09c2: 18 ad f3 00 00             ; DICTP #P (f3ad)
09c7: 0b ad 09 00 00             ; CALL #P- (09ad)
09cc: 19                         ; EMIT
09cd: 06                         ; DUP
09ce: 0e 00                      ; CLITERAL 0
09d0: 16                         ; EQ
09d1: 09 cc 09 00 00             ; JMPZ 09cc
09d6: 05                         ; DROP
09d7: 0c                         ; RET
;
09d8: 18 9f f3 00 00             ; DICTP (.) (f39f)
09dd: 0b 32 09 00 00             ; CALL <# (0932)
09e2: 0b 93 09 00 00             ; CALL #S (0993)
09e7: 0b a7 09 00 00             ; CALL #> (09a7)
09ec: 0b c2 09 00 00             ; CALL #P (09c2)
09f1: 0c                         ; RET
;
09f2: 18 93 f3 00 00             ; DICTP . (f393)
09f7: 0b d8 09 00 00             ; CALL (.) (09d8)
09fc: 0b 09 09 00 00             ; CALL SPACE (0909)
0a01: 0c                         ; RET
;
0a02: 18 86 f3 00 00             ; DICTP .2 (f386)
0a07: 0b 32 09 00 00             ; CALL <# (0932)
0a0c: 0b 67 09 00 00             ; CALL # (0967)
0a11: 0b 67 09 00 00             ; CALL # (0967)
0a16: 0b a7 09 00 00             ; CALL #> (09a7)
0a1b: 0b c2 09 00 00             ; CALL #P (09c2)
0a20: 0c                         ; RET
;
0a21: 18 79 f3 00 00             ; DICTP .3 (f379)
0a26: 0b 32 09 00 00             ; CALL <# (0932)
0a2b: 0b 67 09 00 00             ; CALL # (0967)
0a30: 0b 67 09 00 00             ; CALL # (0967)
0a35: 0b 67 09 00 00             ; CALL # (0967)
0a3a: 0b a7 09 00 00             ; CALL #> (09a7)
0a3f: 0b c2 09 00 00             ; CALL #P (09c2)
0a44: 0c                         ; RET
;
0a45: 18 6c f3 00 00             ; DICTP .4 (f36c)
0a4a: 0b 32 09 00 00             ; CALL <# (0932)
0a4f: 0b 67 09 00 00             ; CALL # (0967)
0a54: 0b 67 09 00 00             ; CALL # (0967)
0a59: 0b 67 09 00 00             ; CALL # (0967)
0a5e: 0b 67 09 00 00             ; CALL # (0967)
0a63: 0b a7 09 00 00             ; CALL #> (09a7)
0a68: 0b c2 09 00 00             ; CALL #P (09c2)
0a6d: 0c                         ; RET
;
0a6e: 18 5d f3 00 00             ; DICTP HEX. (f35d)
0a73: 0b 5e 00 00 00             ; CALL BASE (005e)
0a78: 02                         ; FETCH
0a79: 04                         ; SWAP
0a7a: 0b dd 02 00 00             ; CALL HEX (02dd)
0a7f: 0b d8 09 00 00             ; CALL (.) (09d8)
0a84: 0b 5e 00 00 00             ; CALL BASE (005e)
0a89: 03                         ; STORE
0a8a: 0c                         ; RET
;
0a8b: 18 4d f3 00 00             ; DICTP HEX.2 (f34d)
0a90: 0b 5e 00 00 00             ; CALL BASE (005e)
0a95: 02                         ; FETCH
0a96: 04                         ; SWAP
0a97: 0b dd 02 00 00             ; CALL HEX (02dd)
0a9c: 0b 02 0a 00 00             ; CALL .2 (0a02)
0aa1: 0b 5e 00 00 00             ; CALL BASE (005e)
0aa6: 03                         ; STORE
0aa7: 0c                         ; RET
;
0aa8: 18 3d f3 00 00             ; DICTP HEX.4 (f33d)
0aad: 0b 5e 00 00 00             ; CALL BASE (005e)
0ab2: 02                         ; FETCH
0ab3: 04                         ; SWAP
0ab4: 0b dd 02 00 00             ; CALL HEX (02dd)
0ab9: 0b 45 0a 00 00             ; CALL .4 (0a45)
0abe: 0b 5e 00 00 00             ; CALL BASE (005e)
0ac3: 03                         ; STORE
0ac4: 0c                         ; RET
;
0ac5: 18 2a f3 00 00             ; DICTP DECIMAL. (f32a)
0aca: 0b 5e 00 00 00             ; CALL BASE (005e)
0acf: 02                         ; FETCH
0ad0: 04                         ; SWAP
0ad1: 0b eb 02 00 00             ; CALL DECIMAL (02eb)
0ad6: 0b d8 09 00 00             ; CALL (.) (09d8)
0adb: 0b 5e 00 00 00             ; CALL BASE (005e)
0ae0: 03                         ; STORE
0ae1: 0c                         ; RET
;
0ae2: 18 18 f3 00 00             ; DICTP BINARY. (f318)
0ae7: 0b 5e 00 00 00             ; CALL BASE (005e)
0aec: 02                         ; FETCH
0aed: 04                         ; SWAP
0aee: 0b 07 03 00 00             ; CALL BINARY (0307)
0af3: 0b d8 09 00 00             ; CALL (.) (09d8)
0af8: 0b 5e 00 00 00             ; CALL BASE (005e)
0afd: 03                         ; STORE
0afe: 0c                         ; RET
;
0aff: 18 0a f3 00 00             ; DICTP MIN (f30a)
0b04: 1a                         ; OVER
0b05: 1a                         ; OVER
0b06: 17                         ; GT
0b07: 09 0d 0b 00 00             ; JMPZ 0b0d
0b0c: 04                         ; SWAP
0b0d: 05                         ; DROP
0b0e: 0c                         ; RET
;
0b0f: 18 fc f2 00 00             ; DICTP MAX (f2fc)
0b14: 1a                         ; OVER
0b15: 1a                         ; OVER
0b16: 15                         ; LT
0b17: 09 1d 0b 00 00             ; JMPZ 0b1d
0b1c: 04                         ; SWAP
0b1d: 05                         ; DROP
0b1e: 0c                         ; RET
;
0b1f: 18 ef f2 00 00             ; DICTP .S (f2ef)
0b24: 0e 20                      ; CLITERAL 32
0b26: 19                         ; EMIT
0b27: 26                         ; DEPTH
0b28: 0e 00                      ; CLITERAL 0
0b2a: 15                         ; LT
0b2b: 09 4e 0b 00 00             ; JMPZ 0b4e
0b30: 07 10 53 74 61 63 6b 20 75 6e 64 65 72 66 6c 6f 77 21 00 ; SLITERAL (0b31) [Stack underflow!]
0b43: 0b 62 05 00 00             ; CALL COUNT (0562)
0b48: 0b 6c 05 00 00             ; CALL TYPE (056c)
0b4d: fe                         ; RESET
0b4e: 26                         ; DEPTH
0b4f: 0e 00                      ; CLITERAL 0
0b51: 16                         ; EQ
0b52: 09 61 0b 00 00             ; JMPZ 0b61
0b57: 0e 28                      ; CLITERAL 40
0b59: 19                         ; EMIT
0b5a: 0e ed                      ; CLITERAL 237
0b5c: 19                         ; EMIT
0b5d: 0e 29                      ; CLITERAL 41
0b5f: 19                         ; EMIT
0b60: 0c                         ; RET
0b61: 0e 28                      ; CLITERAL 40
0b63: 19                         ; EMIT
0b64: 0b 09 09 00 00             ; CALL SPACE (0909)
0b69: 26                         ; DEPTH
0b6a: 2e                         ; DEC
0b6b: 21                         ; DTOR
0b6c: 22                         ; RTOD
0b6d: 06                         ; DUP
0b6e: 21                         ; DTOR
0b6f: 25                         ; PICK
0b70: 0b f2 09 00 00             ; CALL . (09f2)
0b75: 22                         ; RTOD
0b76: 06                         ; DUP
0b77: 21                         ; DTOR
0b78: 09 85 0b 00 00             ; JMPZ 0b85
0b7d: 22                         ; RTOD
0b7e: 2e                         ; DEC
0b7f: 21                         ; DTOR
0b80: 08 8b 0b 00 00             ; JMP 0b8b
0b85: 22                         ; RTOD
0b86: 05                         ; DROP
0b87: 0e 29                      ; CLITERAL 41
0b89: 19                         ; EMIT
0b8a: 0c                         ; RET
0b8b: 08 6c 0b 00 00             ; JMP 0b6c
0b90: 0c                         ; RET
;
0b91: 18 db f2 00 00             ; DICTP .(MEM_SZ) (f2db)
0b96: 07 08 4d 65 6d 6f 72 79 3a 20 00 ; SLITERAL (0b97) [Memory: ]
0ba1: 0b 8c 05 00 00             ; CALL CT (058c)
0ba6: 0b 2e 04 00 00             ; CALL MEM_SZ (042e)
0bab: 06                         ; DUP
0bac: 0b 6e 0a 00 00             ; CALL HEX. (0a6e)
0bb1: 07 02 20 28 00             ; SLITERAL (0bb2) [ (]
0bb6: 0b 8c 05 00 00             ; CALL CT (058c)
0bbb: 0b d8 09 00 00             ; CALL (.) (09d8)
0bc0: 07 01 29 00                ; SLITERAL (0bc1) [)]
0bc4: 0b 8c 05 00 00             ; CALL CT (058c)
0bc9: 0c                         ; RET
;
0bca: 18 c9 f2 00 00             ; DICTP .(HERE) (f2c9)
0bcf: 07 06 48 45 52 45 3a 20 00 ; SLITERAL (0bd0) [HERE: ]
0bd8: 0b 8c 05 00 00             ; CALL CT (058c)
0bdd: 0b 93 00 00 00             ; CALL HERE (0093)
0be2: 06                         ; DUP
0be3: 0b 6e 0a 00 00             ; CALL HEX. (0a6e)
0be8: 07 02 20 28 00             ; SLITERAL (0be9) [ (]
0bed: 0b 8c 05 00 00             ; CALL CT (058c)
0bf2: 0b d8 09 00 00             ; CALL (.) (09d8)
0bf7: 07 01 29 00                ; SLITERAL (0bf8) [)]
0bfb: 0b 8c 05 00 00             ; CALL CT (058c)
0c00: 0c                         ; RET
;
0c01: 18 b7 f2 00 00             ; DICTP .(LAST) (f2b7)
0c06: 07 06 4c 41 53 54 3a 20 00 ; SLITERAL (0c07) [LAST: ]
0c0f: 0b 8c 05 00 00             ; CALL CT (058c)
0c14: 0b 9f 00 00 00             ; CALL LAST (009f)
0c19: 06                         ; DUP
0c1a: 0b 6e 0a 00 00             ; CALL HEX. (0a6e)
0c1f: 07 02 20 28 00             ; SLITERAL (0c20) [ (]
0c24: 0b 8c 05 00 00             ; CALL CT (058c)
0c29: 0b d8 09 00 00             ; CALL (.) (09d8)
0c2e: 07 01 29 00                ; SLITERAL (0c2f) [)]
0c32: 0b 8c 05 00 00             ; CALL CT (058c)
0c37: 0c                         ; RET
;
0c38: 18 a1 f2 00 00             ; DICTP .WORD-SHORT (f2a1)
0c3d: 06                         ; DUP
0c3e: 0b 1c 07 00 00             ; CALL DICT>NAME (071c)
0c43: 0b 8c 05 00 00             ; CALL CT (058c)
0c48: 0e 20                      ; CLITERAL 32
0c4a: 19                         ; EMIT
0c4b: 02                         ; FETCH
0c4c: 0c                         ; RET
;
0c4d: 18 91 f2 00 00             ; DICTP WORDS (f291)
0c52: 0b 9f 00 00 00             ; CALL LAST (009f)
0c57: 06                         ; DUP
0c58: 02                         ; FETCH
0c59: 0e 00                      ; CLITERAL 0
0c5b: 16                         ; EQ
0c5c: 09 69 0c 00 00             ; JMPZ 0c69
0c61: 05                         ; DROP
0c62: 0e 0d                      ; CLITERAL 13
0c64: 19                         ; EMIT
0c65: 0e 0a                      ; CLITERAL 10
0c67: 19                         ; EMIT
0c68: 0c                         ; RET
0c69: 0b 38 0c 00 00             ; CALL .WORD-SHORT (0c38)
0c6e: 08 57 0c 00 00             ; JMP 0c57
0c73: 0c                         ; RET
;
0c74: 18 7c f2 00 00             ; DICTP .WORD-LONG (f27c)
0c79: 06                         ; DUP
0c7a: 0b 6e 0a 00 00             ; CALL HEX. (0a6e)
0c7f: 0e 3a                      ; CLITERAL 58
0c81: 19                         ; EMIT
0c82: 0e 20                      ; CLITERAL 32
0c84: 19                         ; EMIT
0c85: 06                         ; DUP
0c86: 0b 1c 07 00 00             ; CALL DICT>NAME (071c)
0c8b: 0b 8c 05 00 00             ; CALL CT (058c)
0c90: 0e 20                      ; CLITERAL 32
0c92: 19                         ; EMIT
0c93: 06                         ; DUP
0c94: 0b 59 07 00 00             ; CALL DICT.GetXT (0759)
0c99: 0e 28                      ; CLITERAL 40
0c9b: 19                         ; EMIT
0c9c: 0b a8 0a 00 00             ; CALL HEX.4 (0aa8)
0ca1: 0e 29                      ; CLITERAL 41
0ca3: 19                         ; EMIT
0ca4: 06                         ; DUP
0ca5: 0b 0d 07 00 00             ; CALL DICT>FLAGS (070d)
0caa: 0f                         ; CFETCH
0cab: 06                         ; DUP
0cac: 07 09 2c 20 46 6c 61 67 73 3a 20 00 ; SLITERAL (0cad) [, Flags: ]
0cb8: 0b 8c 05 00 00             ; CALL CT (058c)
0cbd: 0b 8b 0a 00 00             ; CALL HEX.2 (0a8b)
0cc2: 06                         ; DUP
0cc3: 0b a0 07 00 00             ; CALL FLAGS.ISINLINE? (07a0)
0cc8: 09 de 0c 00 00             ; JMPZ 0cde
0ccd: 07 09 20 28 49 4e 4c 49 4e 45 29 00 ; SLITERAL (0cce) [ (INLINE)]
0cd9: 0b 8c 05 00 00             ; CALL CT (058c)
0cde: 0b 97 07 00 00             ; CALL FLAGS.ISIMMEDIATE? (0797)
0ce3: 09 fc 0c 00 00             ; JMPZ 0cfc
0ce8: 07 0c 20 28 49 4d 4d 45 44 49 41 54 45 29 00 ; SLITERAL (0ce9) [ (IMMEDIATE)]
0cf7: 0b 8c 05 00 00             ; CALL CT (058c)
0cfc: 0e 0d                      ; CLITERAL 13
0cfe: 19                         ; EMIT
0cff: 0e 0a                      ; CLITERAL 10
0d01: 19                         ; EMIT
0d02: 02                         ; FETCH
0d03: 0c                         ; RET
;
0d04: 18 6b f2 00 00             ; DICTP WORDSV (f26b)
0d09: 0b 01 0c 00 00             ; CALL .(LAST) (0c01)
0d0e: 0e 0d                      ; CLITERAL 13
0d10: 19                         ; EMIT
0d11: 0e 0a                      ; CLITERAL 10
0d13: 19                         ; EMIT
0d14: 0b 9f 00 00 00             ; CALL LAST (009f)
0d19: 06                         ; DUP
0d1a: 02                         ; FETCH
0d1b: 0e 00                      ; CLITERAL 0
0d1d: 16                         ; EQ
0d1e: 09 2b 0d 00 00             ; JMPZ 0d2b
0d23: 05                         ; DROP
0d24: 0e 0d                      ; CLITERAL 13
0d26: 19                         ; EMIT
0d27: 0e 0a                      ; CLITERAL 10
0d29: 19                         ; EMIT
0d2a: 0c                         ; RET
0d2b: 0b 74 0c 00 00             ; CALL .WORD-LONG (0c74)
0d30: 08 19 0d 00 00             ; JMP 0d19
0d35: 0c                         ; RET
;
0d36: 18 57 f2 00 00             ; DICTP NUM-WORDS (f257)
0d3b: 0e 00                      ; CLITERAL 0
0d3d: 21                         ; DTOR
0d3e: 0b 9f 00 00 00             ; CALL LAST (009f)
0d43: 06                         ; DUP
0d44: 02                         ; FETCH
0d45: 0e 00                      ; CLITERAL 0
0d47: 16                         ; EQ
0d48: 09 56 0d 00 00             ; JMPZ 0d56
0d4d: 05                         ; DROP
0d4e: 22                         ; RTOD
0d4f: 0e 0d                      ; CLITERAL 13
0d51: 19                         ; EMIT
0d52: 0e 0a                      ; CLITERAL 10
0d54: 19                         ; EMIT
0d55: 0c                         ; RET
0d56: 22                         ; RTOD
0d57: 2c                         ; INC
0d58: 21                         ; DTOR
0d59: 02                         ; FETCH
0d5a: 08 43 0d 00 00             ; JMP 0d43
0d5f: 0c                         ; RET
;
0d60: 18 46 f2 00 00             ; DICTP .lastx (f246)
0d65: 0e 0d                      ; CLITERAL 13
0d67: 19                         ; EMIT
0d68: 0e 0a                      ; CLITERAL 10
0d6a: 19                         ; EMIT
0d6b: 0b 9f 00 00 00             ; CALL LAST (009f)
0d70: 04                         ; SWAP
0d71: 04                         ; SWAP
0d72: 0b 74 0c 00 00             ; CALL .WORD-LONG (0c74)
0d77: 04                         ; SWAP
0d78: 2e                         ; DEC
0d79: 06                         ; DUP
0d7a: 0a 71 0d 00 00             ; JMPNZ 0d71
0d7f: 05                         ; DROP
0d80: 05                         ; DROP
0d81: 0c                         ; RET
;
0d82: 18 34 f2 00 00             ; DICTP EXECUTE (f234)
0d87: 22                         ; RTOD
0d88: 05                         ; DROP
0d89: 21                         ; DTOR
0d8a: 0c                         ; RET
;
0d8b: 18 21 f2 00 00             ; DICTP find.ret (f221)
0d90: 06                         ; DUP
0d91: 0f                         ; CFETCH
0d92: 0e 0c                      ; CLITERAL 12
0d94: 16                         ; EQ
0d95: 09 9b 0d 00 00             ; JMPZ 0d9b
0d9a: 0c                         ; RET
0d9b: 2c                         ; INC
0d9c: 08 90 0d 00 00             ; JMP 0d90
0da1: 0c                         ; RET
;
0da2: 18 0e f2 00 00             ; DICTP (inline) (f20e)
0da7: 1a                         ; OVER
0da8: 1a                         ; OVER
0da9: 15                         ; LT
0daa: 09 b0 0d 00 00             ; JMPZ 0db0
0daf: 04                         ; SWAP
0db0: 06                         ; DUP
0db1: 0f                         ; CFETCH
0db2: 0b ab 00 00 00             ; CALL C, (00ab)
0db7: 2c                         ; INC
0db8: 1a                         ; OVER
0db9: 1a                         ; OVER
0dba: 17                         ; GT
0dbb: 0a b0 0d 00 00             ; JMPNZ 0db0
0dc0: 05                         ; DROP
0dc1: 05                         ; DROP
0dc2: 0c                         ; RET
;
0dc3: 18 fe f1 00 00             ; DICTP DOES> (f1fe)
0dc8: 22                         ; RTOD
0dc9: 06                         ; DUP
0dca: 0b 8b 0d 00 00             ; CALL find.ret (0d8b)
0dcf: 06                         ; DUP
0dd0: 21                         ; DTOR
0dd1: 2c                         ; INC
0dd2: 0b a2 0d 00 00             ; CALL (inline) (0da2)
0dd7: 0c                         ; RET
;
0dd8: 18 e8 f1 00 00             ; DICTP Copy.INLINE (f1e8)
0ddd: 06                         ; DUP
0dde: 0f                         ; CFETCH
0ddf: 0e 18                      ; CLITERAL 24
0de1: 16                         ; EQ
0de2: 09 ee 0d 00 00             ; JMPZ 0dee
0de7: 2c                         ; INC
0de8: 0b 8b 00 00 00             ; CALL CELL (008b)
0ded: 11                         ; ADD
0dee: 06                         ; DUP
0def: 0b 8b 0d 00 00             ; CALL find.ret (0d8b)
0df4: 0b a2 0d 00 00             ; CALL (inline) (0da2)
0df9: 0c                         ; RET
;
0dfa: 18 d7 f1 00 00             ; DICTP strlen (f1d7)
0dff: 0e 00                      ; CLITERAL 0
0e01: 04                         ; SWAP
0e02: 04                         ; SWAP
0e03: 1a                         ; OVER
0e04: 0f                         ; CFETCH
0e05: 06                         ; DUP
0e06: 09 11 0e 00 00             ; JMPZ 0e11
0e0b: 05                         ; DROP
0e0c: 2c                         ; INC
0e0d: 04                         ; SWAP
0e0e: 2c                         ; INC
0e0f: 0e 01                      ; CLITERAL 1
0e11: 0a 02 0e 00 00             ; JMPNZ 0e02
0e16: 04                         ; SWAP
0e17: 05                         ; DROP
0e18: 0c                         ; RET
;
0e19: 18 c7 f1 00 00             ; DICTP cstr, (f1c7)
0e1e: 06                         ; DUP
0e1f: 0f                         ; CFETCH
0e20: 1a                         ; OVER
0e21: 11                         ; ADD
0e22: 2c                         ; INC
0e23: 2c                         ; INC
0e24: 0b a2 0d 00 00             ; CALL (inline) (0da2)
0e29: 0c                         ; RET
;
0e2a: 18 b3 f1 00 00             ; DICTP [COMPILE] (f1b3)
0e2f: 0b a0 07 00 00             ; CALL FLAGS.ISINLINE? (07a0)
0e34: 09 43 0e 00 00             ; JMPZ 0e43
0e39: 0b d8 0d 00 00             ; CALL Copy.INLINE (0dd8)
0e3e: 08 4d 0e 00 00             ; JMP 0e4d
0e43: 0b 62 01 00 00             ; CALL CALL (0162)
0e48: 0b c5 00 00 00             ; CALL , (00c5)
0e4d: 0c                         ; RET
;
0e4e: 18 9d f1 00 00             ; DICTP executeWord (f19d)
0e53: 21                         ; DTOR
0e54: 22                         ; RTOD
0e55: 06                         ; DUP
0e56: 21                         ; DTOR
0e57: 0b c9 07 00 00             ; CALL findInDict (07c9)
0e5c: 09 98 0e 00 00             ; JMPZ 0e98
0e61: 22                         ; RTOD
0e62: 05                         ; DROP
0e63: 0b 29 03 00 00             ; CALL ?COMPILING (0329)
0e68: 09 8d 0e 00 00             ; JMPZ 0e8d
0e6d: 06                         ; DUP
0e6e: 0b 97 07 00 00             ; CALL FLAGS.ISIMMEDIATE? (0797)
0e73: 09 83 0e 00 00             ; JMPZ 0e83
0e78: 05                         ; DROP
0e79: 0b 82 0d 00 00             ; CALL EXECUTE (0d82)
0e7e: 08 88 0e 00 00             ; JMP 0e88
0e83: 0b 2a 0e 00 00             ; CALL [COMPILE] (0e2a)
0e88: 08 93 0e 00 00             ; JMP 0e93
0e8d: 05                         ; DROP
0e8e: 0b 82 0d 00 00             ; CALL EXECUTE (0d82)
0e93: 08 ee 0e 00 00             ; JMP 0eee
0e98: 05                         ; DROP
0e99: 05                         ; DROP
0e9a: 22                         ; RTOD
0e9b: 06                         ; DUP
0e9c: 21                         ; DTOR
0e9d: 0b 90 08 00 00             ; CALL isNumber? (0890)
0ea2: 09 e0 0e 00 00             ; JMPZ 0ee0
0ea7: 0b 29 03 00 00             ; CALL ?COMPILING (0329)
0eac: 09 db 0e 00 00             ; JMPZ 0edb
0eb1: 06                         ; DUP
0eb2: 0e 00                      ; CLITERAL 0
0eb4: 0e ff                      ; CLITERAL 255
0eb6: 0b 16 06 00 00             ; CALL BETWEEN (0616)
0ebb: 09 d1 0e 00 00             ; JMPZ 0ed1
0ec0: 0e 0e                      ; CLITERAL 14
0ec2: 0b ab 00 00 00             ; CALL C, (00ab)
0ec7: 0b ab 00 00 00             ; CALL C, (00ab)
0ecc: 08 db 0e 00 00             ; JMP 0edb
0ed1: 0b fe 00 00 00             ; CALL LITERAL (00fe)
0ed6: 0b c5 00 00 00             ; CALL , (00c5)
0edb: 08 ec 0e 00 00             ; JMP 0eec
0ee0: 05                         ; DROP
0ee1: 07 02 3f 3f 00             ; SLITERAL (0ee2) [??]
0ee6: 0b 8c 05 00 00             ; CALL CT (058c)
0eeb: fe                         ; RESET
0eec: 22                         ; RTOD
0eed: 05                         ; DROP
0eee: 0c                         ; RET
;
0eef: 18 86 f1 00 00             ; DICTP executeInput (f186)
0ef4: 0b 0e 04 00 00             ; CALL >IN (040e)
0ef9: 02                         ; FETCH
0efa: 0b 9a 06 00 00             ; CALL skipWS (069a)
0eff: 0b 0e 04 00 00             ; CALL >IN (040e)
0f04: 03                         ; STORE
0f05: 0b 0e 04 00 00             ; CALL >IN (040e)
0f0a: 02                         ; FETCH
0f0b: 0f                         ; CFETCH
0f0c: 09 2c 0f 00 00             ; JMPZ 0f2c
0f11: 0b 0e 04 00 00             ; CALL >IN (040e)
0f16: 02                         ; FETCH
0f17: 0b c3 06 00 00             ; CALL getOneWord (06c3)
0f1c: 0b 0e 04 00 00             ; CALL >IN (040e)
0f21: 03                         ; STORE
0f22: 0b 4e 0e 00 00             ; CALL executeWord (0e4e)
0f27: 08 2d 0f 00 00             ; JMP 0f2d
0f2c: 0c                         ; RET
0f2d: 08 f4 0e 00 00             ; JMP 0ef4
0f32: 0c                         ; RET
;
0f33: 18 78 f1 00 00             ; DICTP Pad (f178)
0f38: 0b 9f 00 00 00             ; CALL LAST (009f)
0f3d: 0e c8                      ; CLITERAL 200
0f3f: 12                         ; SUB
0f40: 06                         ; DUP
0f41: 0b 93 00 00 00             ; CALL HERE (0093)
0f46: 15                         ; LT
0f47: 09 5e 0f 00 00             ; JMPZ 0f5e
0f4c: 07 0e 4f 75 74 20 6f 66 20 4d 65 6d 6f 72 79 21 00 ; SLITERAL (0f4d) [Out of Memory!]
0f5d: fe                         ; RESET
0f5e: 0c                         ; RET
;
0f5f: 18 65 f1 00 00             ; DICTP INPUT-FP (f165)
0f64: 01 6a 0f 00 00             ; LITERAL 3946 (f6a)
0f69: 0c                         ; RET
0f6a: 00                         ; RESET
0f6b: 00                         ; RESET
0f6c: 00                         ; RESET
0f6d: 00                         ; RESET
0f6e: 18 4a f1 00 00             ; DICTP LoadingFromFile? (f14a)
0f73: 0b 5f 0f 00 00             ; CALL INPUT-FP (0f5f)
0f78: 02                         ; FETCH
0f79: 0c                         ; RET
;
0f7a: 18 30 f1 00 00             ; DICTP getLineFromFile (f130)
0f7f: 0e c8                      ; CLITERAL 200
0f81: 0b 5f 0f 00 00             ; CALL INPUT-FP (0f5f)
0f86: 02                         ; FETCH
0f87: 1e                         ; FREADLINE
0f88: 0e 00                      ; CLITERAL 0
0f8a: 16                         ; EQ
0f8b: 09 9a 0f 00 00             ; JMPZ 0f9a
0f90: 0b 5f 0f 00 00             ; CALL INPUT-FP (0f5f)
0f95: 0b 1f 03 00 00             ; CALL OFF (031f)
0f9a: 0c                         ; RET
;
0f9b: 18 1e f1 00 00             ; DICTP getLine (f11e)
0fa0: 0e 00                      ; CLITERAL 0
0fa2: 0b 33 0f 00 00             ; CALL Pad (0f33)
0fa7: 06                         ; DUP
0fa8: 2c                         ; INC
0fa9: 0b 0e 04 00 00             ; CALL >IN (040e)
0fae: 03                         ; STORE
0faf: 10                         ; CSTORE
0fb0: 0b 6e 0f 00 00             ; CALL LoadingFromFile? (0f6e)
0fb5: 09 c5 0f 00 00             ; JMPZ 0fc5
0fba: 0b 33 0f 00 00             ; CALL Pad (0f33)
0fbf: 0b 7a 0f 00 00             ; CALL getLineFromFile (0f7a)
0fc4: 0c                         ; RET
0fc5: 0e 00                      ; CLITERAL 0
0fc7: 0b 0e 04 00 00             ; CALL >IN (040e)
0fcc: 02                         ; FETCH
0fcd: 10                         ; CSTORE
0fce: 27                         ; GETCH
0fcf: 06                         ; DUP
0fd0: 0e 0d                      ; CLITERAL 13
0fd2: 16                         ; EQ
0fd3: 09 e2 0f 00 00             ; JMPZ 0fe2
0fd8: 05                         ; DROP
0fd9: 0b 33 0f 00 00             ; CALL Pad (0f33)
0fde: 0e 20                      ; CLITERAL 32
0fe0: 19                         ; EMIT
0fe1: 0c                         ; RET
0fe2: 06                         ; DUP
0fe3: 0e 09                      ; CLITERAL 9
0fe5: 16                         ; EQ
0fe6: 09 ee 0f 00 00             ; JMPZ 0fee
0feb: 05                         ; DROP
0fec: 0e 20                      ; CLITERAL 32
0fee: 06                         ; DUP
0fef: 0e 03                      ; CLITERAL 3
0ff1: 16                         ; EQ
0ff2: 09 f8 0f 00 00             ; JMPZ 0ff8
0ff7: ff                         ; BYE
0ff8: 06                         ; DUP
0ff9: 0e 08                      ; CLITERAL 8
0ffb: 16                         ; EQ
0ffc: 09 34 10 00 00             ; JMPZ 1034
1001: 0b 33 0f 00 00             ; CALL Pad (0f33)
1006: 0f                         ; CFETCH
1007: 0e 00                      ; CLITERAL 0
1009: 17                         ; GT
100a: 09 2e 10 00 00             ; JMPZ 102e
100f: 0b 33 0f 00 00             ; CALL Pad (0f33)
1014: 0b ff 04 00 00             ; CALL C-- (04ff)
1019: 0b 0e 04 00 00             ; CALL >IN (040e)
101e: 0b e7 04 00 00             ; CALL -- (04e7)
1023: 06                         ; DUP
1024: 19                         ; EMIT
1025: 0e 20                      ; CLITERAL 32
1027: 19                         ; EMIT
1028: 19                         ; EMIT
1029: 08 2f 10 00 00             ; JMP 102f
102e: 05                         ; DROP
102f: 08 66 10 00 00             ; JMP 1066
1034: 06                         ; DUP
1035: 0e 20                      ; CLITERAL 32
1037: 0e 7f                      ; CLITERAL 127
1039: 0b 16 06 00 00             ; CALL BETWEEN (0616)
103e: 09 65 10 00 00             ; JMPZ 1065
1043: 06                         ; DUP
1044: 19                         ; EMIT
1045: 0b 0e 04 00 00             ; CALL >IN (040e)
104a: 02                         ; FETCH
104b: 10                         ; CSTORE
104c: 0b 0e 04 00 00             ; CALL >IN (040e)
1051: 0b da 04 00 00             ; CALL ++ (04da)
1056: 0b 33 0f 00 00             ; CALL Pad (0f33)
105b: 0b f4 04 00 00             ; CALL C++ (04f4)
1060: 08 66 10 00 00             ; JMP 1066
1065: 05                         ; DROP
1066: 08 c5 0f 00 00             ; JMP 0fc5
106b: 0c                         ; RET
;
106c: 18 0b f1 00 00             ; DICTP strcpy2c (f10b)
1071: 06                         ; DUP
1072: 21                         ; DTOR
1073: 0e 00                      ; CLITERAL 0
1075: 1a                         ; OVER
1076: 10                         ; CSTORE
1077: 2c                         ; INC
1078: 04                         ; SWAP
1079: 06                         ; DUP
107a: 0f                         ; CFETCH
107b: 06                         ; DUP
107c: 09 96 10 00 00             ; JMPZ 1096
1081: 0e 02                      ; CLITERAL 2
1083: 25                         ; PICK
1084: 10                         ; CSTORE
1085: 04                         ; SWAP
1086: 2c                         ; INC
1087: 04                         ; SWAP
1088: 2c                         ; INC
1089: 22                         ; RTOD
108a: 06                         ; DUP
108b: 21                         ; DTOR
108c: 0b f4 04 00 00             ; CALL C++ (04f4)
1091: 08 9f 10 00 00             ; JMP 109f
1096: 21                         ; DTOR
1097: 04                         ; SWAP
1098: 22                         ; RTOD
1099: 04                         ; SWAP
109a: 10                         ; CSTORE
109b: 05                         ; DROP
109c: 22                         ; RTOD
109d: 05                         ; DROP
109e: 0c                         ; RET
109f: 08 79 10 00 00             ; JMP 1079
10a4: 0c                         ; RET
;
10a5: 18 f5 f0 00 00             ; DICTP Define-Word (f0f5)
10aa: 0b 9f 00 00 00             ; CALL LAST (009f)
10af: 1a                         ; OVER
10b0: 0b fa 0d 00 00             ; CALL strlen (0dfa)
10b5: 0e 02                      ; CLITERAL 2
10b7: 0b 8b 00 00 00             ; CALL CELL (008b)
10bc: 13                         ; MUL
10bd: 0e 03                      ; CLITERAL 3
10bf: 11                         ; ADD
10c0: 11                         ; ADD
10c1: 12                         ; SUB
10c2: 06                         ; DUP
10c3: 21                         ; DTOR
10c4: 21                         ; DTOR
10c5: 0b 9f 00 00 00             ; CALL LAST (009f)
10ca: 22                         ; RTOD
10cb: 06                         ; DUP
10cc: 21                         ; DTOR
10cd: 03                         ; STORE
10ce: 22                         ; RTOD
10cf: 0b 8b 00 00 00             ; CALL CELL (008b)
10d4: 11                         ; ADD
10d5: 21                         ; DTOR
10d6: 0b 93 00 00 00             ; CALL HERE (0093)
10db: 22                         ; RTOD
10dc: 06                         ; DUP
10dd: 21                         ; DTOR
10de: 03                         ; STORE
10df: 22                         ; RTOD
10e0: 0b 8b 00 00 00             ; CALL CELL (008b)
10e5: 11                         ; ADD
10e6: 21                         ; DTOR
10e7: 0e 00                      ; CLITERAL 0
10e9: 22                         ; RTOD
10ea: 06                         ; DUP
10eb: 21                         ; DTOR
10ec: 10                         ; CSTORE
10ed: 22                         ; RTOD
10ee: 2c                         ; INC
10ef: 21                         ; DTOR
10f0: 22                         ; RTOD
10f1: 0b 6c 10 00 00             ; CALL strcpy2c (106c)
10f6: 22                         ; RTOD
10f7: 0b 4f 00 00 00             ; CALL (LAST) (004f)
10fc: 03                         ; STORE
10fd: 0c                         ; RET
;
10fe: 18 df f0 00 00             ; DICTP CREATE-NAME (f0df)
1103: 0b 0e 04 00 00             ; CALL >IN (040e)
1108: 02                         ; FETCH
1109: 0b 9a 06 00 00             ; CALL skipWS (069a)
110e: 0b 0e 04 00 00             ; CALL >IN (040e)
1113: 03                         ; STORE
1114: 0b 0e 04 00 00             ; CALL >IN (040e)
1119: 02                         ; FETCH
111a: 0f                         ; CFETCH
111b: 09 55 11 00 00             ; JMPZ 1155
1120: 0b 0e 04 00 00             ; CALL >IN (040e)
1125: 02                         ; FETCH
1126: 0b c3 06 00 00             ; CALL getOneWord (06c3)
112b: 0b 0e 04 00 00             ; CALL >IN (040e)
1130: 03                         ; STORE
1131: 06                         ; DUP
1132: 0f                         ; CFETCH
1133: 09 53 11 00 00             ; JMPZ 1153
1138: 0b a5 10 00 00             ; CALL Define-Word (10a5)
113d: 0e 18                      ; CLITERAL 24
113f: 0b ab 00 00 00             ; CALL C, (00ab)
1144: 0b 9f 00 00 00             ; CALL LAST (009f)
1149: 0b c5 00 00 00             ; CALL , (00c5)
114e: 08 55 11 00 00             ; JMP 1155
1153: 05                         ; DROP
1154: fe                         ; RESET
1155: 0c                         ; RET
;
1156: 18 d3 f0 00 00             ; DICTP : (f0d3)
115b: 0b fe 10 00 00             ; CALL CREATE-NAME (10fe)
1160: 0b 6d 00 00 00             ; CALL STATE (006d)
1165: 0b 15 03 00 00             ; CALL ON (0315)
116a: 0c                         ; RET
;
116b: 18 c1 f0 00 00             ; DICTP :NONAME (f0c1)
1170: 0b 93 00 00 00             ; CALL HERE (0093)
1175: 0b 6d 00 00 00             ; CALL STATE (006d)
117a: 0b 15 03 00 00             ; CALL ON (0315)
117f: 0c                         ; RET
;
1180: 18 b5 f0 00 00             ; DICTP ; (f0b5)
1185: 0b 6f 01 00 00             ; CALL RET (016f)
118a: 0b 6d 00 00 00             ; CALL STATE (006d)
118f: 0b 1f 03 00 00             ; CALL OFF (031f)
1194: 0c                         ; RET
;
1195: 18 a0 f0 00 00             ; DICTP ForgetLast (f0a0)
119a: 0b 9f 00 00 00             ; CALL LAST (009f)
119f: 0b 8b 00 00 00             ; CALL CELL (008b)
11a4: 11                         ; ADD
11a5: 02                         ; FETCH
11a6: 0b 40 00 00 00             ; CALL (HERE) (0040)
11ab: 03                         ; STORE
11ac: 0b 9f 00 00 00             ; CALL LAST (009f)
11b1: 02                         ; FETCH
11b2: 0b 4f 00 00 00             ; CALL (LAST) (004f)
11b7: 03                         ; STORE
11b8: 0c                         ; RET
;
11b9: 18 8b f0 00 00             ; DICTP resetState (f08b)
11be: 0b 29 03 00 00             ; CALL ?COMPILING (0329)
11c3: 09 cd 11 00 00             ; JMPZ 11cd
11c8: 0b 95 11 00 00             ; CALL ForgetLast (1195)
11cd: 0b 6d 00 00 00             ; CALL STATE (006d)
11d2: 0b 1f 03 00 00             ; CALL OFF (031f)
11d7: 0b eb 02 00 00             ; CALL DECIMAL (02eb)
11dc: 0c                         ; RET
;
11dd: 18 7b f0 00 00             ; DICTP ALLOT (f07b)
11e2: 0b 93 00 00 00             ; CALL HERE (0093)
11e7: 11                         ; ADD
11e8: 0b 40 00 00 00             ; CALL (HERE) (0040)
11ed: 03                         ; STORE
11ee: 0c                         ; RET
;
11ef: 18 6f f0 00 00             ; DICTP ? (f06f)
11f4: 02                         ; FETCH
11f5: 0b f2 09 00 00             ; CALL . (09f2)
11fa: 0c                         ; RET
;
11fb: 18 62 f0 00 00             ; DICTP C? (f062)
1200: 0f                         ; CFETCH
1201: 0b f2 09 00 00             ; CALL . (09f2)
1206: 0c                         ; RET
;
1207: 18 53 f0 00 00             ; DICTP FREE (f053)
120c: 0b 9f 00 00 00             ; CALL LAST (009f)
1211: 0b 93 00 00 00             ; CALL HERE (0093)
1216: 12                         ; SUB
1217: 0c                         ; RET
;
1218: 18 43 f0 00 00             ; DICTP .FREE (f043)
121d: 0b 07 12 00 00             ; CALL FREE (1207)
1222: 0b d8 09 00 00             ; CALL (.) (09d8)
1227: 07 0c 20 62 79 74 65 73 20 66 72 65 65 2e 00 ; SLITERAL (1228) [ bytes free.]
1236: 0b 8c 05 00 00             ; CALL CT (058c)
123b: 0c                         ; RET
;
123c: 18 30 f0 00 00             ; DICTP mainLoop (f030)
1241: 0b b9 11 00 00             ; CALL resetState (11b9)
1246: 0b 3e 06 00 00             ; CALL tmp-init (063e)
124b: 0b 29 03 00 00             ; CALL ?COMPILING (0329)
1250: 0e 00                      ; CLITERAL 0
1252: 16                         ; EQ
1253: 09 68 12 00 00             ; JMPZ 1268
1258: 07 03 20 4f 4b 00          ; SLITERAL (1259) [ OK]
125e: 0b 8c 05 00 00             ; CALL CT (058c)
1263: 0b 1f 0b 00 00             ; CALL .S (0b1f)
1268: 0e 0d                      ; CLITERAL 13
126a: 19                         ; EMIT
126b: 0e 0a                      ; CLITERAL 10
126d: 19                         ; EMIT
126e: 0b 9b 0f 00 00             ; CALL getLine (0f9b)
1273: 2c                         ; INC
1274: 0b 0e 04 00 00             ; CALL >IN (040e)
1279: 03                         ; STORE
127a: 0b ef 0e 00 00             ; CALL executeInput (0eef)
127f: 0e 20                      ; CLITERAL 32
1281: 19                         ; EMIT
1282: 08 46 12 00 00             ; JMP 1246
1287: 0c                         ; RET
;
1288: 18 21 f0 00 00             ; DICTP main (f021)
128d: 0b 6d 00 00 00             ; CALL STATE (006d)
1292: 02                         ; FETCH
1293: 0e 63                      ; CLITERAL 99
1295: 16                         ; EQ
1296: 09 b3 12 00 00             ; JMPZ 12b3
129b: 0b 6d 00 00 00             ; CALL STATE (006d)
12a0: 0b 1f 03 00 00             ; CALL OFF (031f)
12a5: 07 06 48 65 6c 6c 6f 2e 00 ; SLITERAL (12a6) [Hello.]
12ae: 0b 8c 05 00 00             ; CALL CT (058c)
12b3: 0b 3c 12 00 00             ; CALL mainLoop (123c)
12b8: 0c                         ; RET
;
12b9: 18 0a f0 00 00             ; DICTP file-getLine (f00a)
12be: 0b 33 0f 00 00             ; CALL Pad (0f33)
12c3: 04                         ; SWAP
12c4: 0e c8                      ; CLITERAL 200
12c6: 04                         ; SWAP
12c7: 1e                         ; FREADLINE
12c8: 0b 33 0f 00 00             ; CALL Pad (0f33)
12cd: 04                         ; SWAP
12ce: 0c                         ; RET
;
12cf: 18 fb ef 00 00             ; DICTP load (effb)
12d4: 0e 00                      ; CLITERAL 0
12d6: 0e 00                      ; CLITERAL 0
12d8: 1c                         ; FOPEN
12d9: 0e 00                      ; CLITERAL 0
12db: 16                         ; EQ
12dc: 09 fb 12 00 00             ; JMPZ 12fb
12e1: 07 11 43 61 6e 6e 6f 74 20 6f 70 65 6e 20 66 69 6c 65 2e 00 ; SLITERAL (12e2) [Cannot open file.]
12f5: 0b 8c 05 00 00             ; CALL CT (058c)
12fa: 0c                         ; RET
12fb: 0b 5f 0f 00 00             ; CALL INPUT-FP (0f5f)
1300: 03                         ; STORE
1301: 0b 5f 0f 00 00             ; CALL INPUT-FP (0f5f)
1306: 02                         ; FETCH
1307: 0b b9 12 00 00             ; CALL file-getLine (12b9)
130c: 09 22 13 00 00             ; JMPZ 1322
1311: 2c                         ; INC
1312: 0b 0e 04 00 00             ; CALL >IN (040e)
1317: 03                         ; STORE
1318: 0b ef 0e 00 00             ; CALL executeInput (0eef)
131d: 08 35 13 00 00             ; JMP 1335
1322: 05                         ; DROP
1323: 0b 5f 0f 00 00             ; CALL INPUT-FP (0f5f)
1328: 02                         ; FETCH
1329: 20                         ; FCLOSE
132a: 0b 5f 0f 00 00             ; CALL INPUT-FP (0f5f)
132f: 0b 1f 03 00 00             ; CALL OFF (031f)
1334: 0c                         ; RET
1335: 08 01 13 00 00             ; JMP 1301
133a: 0c                         ; RET
;
133b: 18 e7 ef 00 00             ; DICTP STR.EMPTY (efe7)
1340: 0e 00                      ; CLITERAL 0
1342: 1a                         ; OVER
1343: 03                         ; STORE
1344: 0c                         ; RET
;
1345: 18 d5 ef 00 00             ; DICTP STR.LEN (efd5)
134a: 06                         ; DUP
134b: 0f                         ; CFETCH
134c: 0c                         ; RET
;
134d: 18 c2 ef 00 00             ; DICTP STR.CATC (efc2)
1352: 1a                         ; OVER
1353: 06                         ; DUP
1354: 0b f4 04 00 00             ; CALL C++ (04f4)
1359: 06                         ; DUP
135a: 0f                         ; CFETCH
135b: 11                         ; ADD
135c: 0e 00                      ; CLITERAL 0
135e: 1a                         ; OVER
135f: 2c                         ; INC
1360: 10                         ; CSTORE
1361: 10                         ; CSTORE
1362: 0c                         ; RET
;
1363: 18 ab ef 00 00             ; DICTP STR.NULLTERM (efab)
1368: 06                         ; DUP
1369: 06                         ; DUP
136a: 0f                         ; CFETCH
136b: 11                         ; ADD
136c: 2c                         ; INC
136d: 0e 00                      ; CLITERAL 0
136f: 04                         ; SWAP
1370: 10                         ; CSTORE
1371: 0c                         ; RET
;
1372: 18 9e ef 00 00             ; DICTP I" (ef9e)
1377: 0b 93 00 00 00             ; CALL HERE (0093)
137c: 0e 64                      ; CLITERAL 100
137e: 11                         ; ADD
137f: 0e 00                      ; CLITERAL 0
1381: 1a                         ; OVER
1382: 03                         ; STORE
1383: 0b 0e 04 00 00             ; CALL >IN (040e)
1388: 02                         ; FETCH
1389: 0f                         ; CFETCH
138a: 06                         ; DUP
138b: 0e 00                      ; CLITERAL 0
138d: 16                         ; EQ
138e: 09 af 13 00 00             ; JMPZ 13af
1393: 07 10 6d 69 73 73 69 6e 67 20 63 6c 6f 73 69 6e 67 20 00 ; SLITERAL (1394) [missing closing ]
13a6: 0b 8c 05 00 00             ; CALL CT (058c)
13ab: 0e 22                      ; CLITERAL 34
13ad: 19                         ; EMIT
13ae: fe                         ; RESET
13af: 0b 0e 04 00 00             ; CALL >IN (040e)
13b4: 0b da 04 00 00             ; CALL ++ (04da)
13b9: 06                         ; DUP
13ba: 0e 22                      ; CLITERAL 34
13bc: 16                         ; EQ
13bd: 09 c4 13 00 00             ; JMPZ 13c4
13c2: 05                         ; DROP
13c3: 0c                         ; RET
13c4: 0b 4d 13 00 00             ; CALL STR.CATC (134d)
13c9: 08 83 13 00 00             ; JMP 1383
13ce: 0c                         ; RET
;
13cf: 18 92 ef 00 00             ; DICTP " (ef92)
13d4: 0b 29 03 00 00             ; CALL ?COMPILING (0329)
13d9: 0e 00                      ; CLITERAL 0
13db: 16                         ; EQ
13dc: 09 e7 13 00 00             ; JMPZ 13e7
13e1: 0b 72 13 00 00             ; CALL I" (1372)
13e6: 0c                         ; RET
13e7: 0b 2e 01 00 00             ; CALL SLITERAL (012e)
13ec: 0b 93 00 00 00             ; CALL HERE (0093)
13f1: 0e 00                      ; CLITERAL 0
13f3: 0b ab 00 00 00             ; CALL C, (00ab)
13f8: 0b 0e 04 00 00             ; CALL >IN (040e)
13fd: 02                         ; FETCH
13fe: 0f                         ; CFETCH
13ff: 06                         ; DUP
1400: 0e 00                      ; CLITERAL 0
1402: 16                         ; EQ
1403: 09 30 14 00 00             ; JMPZ 1430
1408: 05                         ; DROP
1409: 2e                         ; DEC
140a: 0b 40 00 00 00             ; CALL (HERE) (0040)
140f: 03                         ; STORE
1410: 07 11 6d 69 73 73 69 6e 67 20 63 6c 6f 73 69 6e 67 20 27 00 ; SLITERAL (1411) [missing closing ']
1424: 0b 8c 05 00 00             ; CALL CT (058c)
1429: 0e 22                      ; CLITERAL 34
142b: 19                         ; EMIT
142c: 0e 27                      ; CLITERAL 39
142e: 19                         ; EMIT
142f: fe                         ; RESET
1430: 0b 0e 04 00 00             ; CALL >IN (040e)
1435: 0b da 04 00 00             ; CALL ++ (04da)
143a: 06                         ; DUP
143b: 0e 22                      ; CLITERAL 34
143d: 16                         ; EQ
143e: 09 56 14 00 00             ; JMPZ 1456
1443: 05                         ; DROP
1444: 0b 93 00 00 00             ; CALL HERE (0093)
1449: 0e 00                      ; CLITERAL 0
144b: 0b ab 00 00 00             ; CALL C, (00ab)
1450: 1a                         ; OVER
1451: 12                         ; SUB
1452: 2e                         ; DEC
1453: 04                         ; SWAP
1454: 10                         ; CSTORE
1455: 0c                         ; RET
1456: 0b ab 00 00 00             ; CALL C, (00ab)
145b: 08 f8 13 00 00             ; JMP 13f8
1460: 0c                         ; RET
;
1461: 18 85 ef 00 00             ; DICTP ll (ef85)
1466: 07 09 6c 6f 61 64 73 2e 34 74 68 00 ; SLITERAL (1467) [loads.4th]
1472: 0b cf 12 00 00             ; CALL load (12cf)
1477: 0c                         ; RET
;
1478: 18 72 ef 00 00             ; DICTP sys-info (ef72)
147d: 0b 91 0b 00 00             ; CALL .(MEM_SZ) (0b91)
1482: 0e 2c                      ; CLITERAL 44
1484: 19                         ; EMIT
1485: 0e 20                      ; CLITERAL 32
1487: 19                         ; EMIT
1488: 0b ca 0b 00 00             ; CALL .(HERE) (0bca)
148d: 0e 2c                      ; CLITERAL 44
148f: 19                         ; EMIT
1490: 0e 20                      ; CLITERAL 32
1492: 19                         ; EMIT
1493: 0b 01 0c 00 00             ; CALL .(LAST) (0c01)
1498: 0e 2c                      ; CLITERAL 44
149a: 19                         ; EMIT
149b: 0e 20                      ; CLITERAL 32
149d: 19                         ; EMIT
149e: 0b 18 12 00 00             ; CALL .FREE (1218)
14a3: 0e 0d                      ; CLITERAL 13
14a5: 19                         ; EMIT
14a6: 0e 0a                      ; CLITERAL 10
14a8: 19                         ; EMIT
14a9: 0c                         ; RET
;
14aa: 18 60 ef 00 00             ; DICTP countTo (ef60)
14af: 07 0c 63 6f 75 6e 74 69 6e 67 20 74 6f 20 00 ; SLITERAL (14b0) [counting to ]
14be: 0b 8c 05 00 00             ; CALL CT (058c)
14c3: 06                         ; DUP
14c4: 0b f2 09 00 00             ; CALL . (09f2)
14c9: 07 04 2e 2e 2e 20 00       ; SLITERAL (14ca) [... ]
14d0: 0b 8c 05 00 00             ; CALL CT (058c)
14d5: 0e 01                      ; CLITERAL 1
14d7: 1a                         ; OVER
14d8: 1a                         ; OVER
14d9: 15                         ; LT
14da: 09 e2 14 00 00             ; JMPZ 14e2
14df: 05                         ; DROP
14e0: 05                         ; DROP
14e1: 0c                         ; RET
14e2: 2c                         ; INC
14e3: 08 d7 14 00 00             ; JMP 14d7
14e8: 0c                         ; RET
;
14e9: 18 49 ef 00 00             ; DICTP countTo-FAST (ef49)
14ee: 07 0c 63 6f 75 6e 74 69 6e 67 20 74 6f 20 00 ; SLITERAL (14ef) [counting to ]
14fd: 0b 8c 05 00 00             ; CALL CT (058c)
1502: 06                         ; DUP
1503: 0b f2 09 00 00             ; CALL . (09f2)
1508: 07 04 2e 2e 2e 20 00       ; SLITERAL (1509) [... ]
150f: 0b 8c 05 00 00             ; CALL CT (058c)
1514: 2e                         ; DEC
1515: 06                         ; DUP
1516: 0a 14 15 00 00             ; JMPNZ 1514
151b: 05                         ; DROP
151c: 0c                         ; RET
;
; End of code, Dictionary:
;
ef49: 60 ef 00 00                ; countTo-FAST - (next: ef60 countTo)
ef4d: e9 14 00 00 00             ; XT=14e9, flags=00
ef52: 0c 63 6f 75 6e 74 54 6f 2d 46 41 53 54 00 ; 12, countTo-FAST
;
ef60: 72 ef 00 00                ; countTo - (next: ef72 sys-info)
ef64: aa 14 00 00 00             ; XT=14aa, flags=00
ef69: 07 63 6f 75 6e 74 54 6f 00 ; 7, countTo
;
ef72: 85 ef 00 00                ; sys-info - (next: ef85 ll)
ef76: 78 14 00 00 00             ; XT=1478, flags=00
ef7b: 08 73 79 73 2d 69 6e 66 6f 00 ; 8, sys-info
;
ef85: 92 ef 00 00                ; ll - (next: ef92 ")
ef89: 61 14 00 00 00             ; XT=1461, flags=00
ef8e: 02 6c 6c 00                ; 2, ll
;
ef92: 9e ef 00 00                ; " - (next: ef9e I")
ef96: cf 13 00 00 01             ; XT=13cf, flags=01
ef9b: 01 22 00                   ; 1, "
;
ef9e: ab ef 00 00                ; I" - (next: efab STR.NULLTERM)
efa2: 72 13 00 00 00             ; XT=1372, flags=00
efa7: 02 49 22 00                ; 2, I"
;
efab: c2 ef 00 00                ; STR.NULLTERM - (next: efc2 STR.CATC)
efaf: 63 13 00 00 00             ; XT=1363, flags=00
efb4: 0c 53 54 52 2e 4e 55 4c 4c 54 45 52 4d 00 ; 12, STR.NULLTERM
;
efc2: d5 ef 00 00                ; STR.CATC - (next: efd5 STR.LEN)
efc6: 4d 13 00 00 00             ; XT=134d, flags=00
efcb: 08 53 54 52 2e 43 41 54 43 00 ; 8, STR.CATC
;
efd5: e7 ef 00 00                ; STR.LEN - (next: efe7 STR.EMPTY)
efd9: 45 13 00 00 02             ; XT=1345, flags=02
efde: 07 53 54 52 2e 4c 45 4e 00 ; 7, STR.LEN
;
efe7: fb ef 00 00                ; STR.EMPTY - (next: effb load)
efeb: 3b 13 00 00 02             ; XT=133b, flags=02
eff0: 09 53 54 52 2e 45 4d 50 54 59 00 ; 9, STR.EMPTY
;
effb: 0a f0 00 00                ; load - (next: f00a file-getLine)
efff: cf 12 00 00 00             ; XT=12cf, flags=00
f004: 04 6c 6f 61 64 00          ; 4, load
;
f00a: 21 f0 00 00                ; file-getLine - (next: f021 main)
f00e: b9 12 00 00 00             ; XT=12b9, flags=00
f013: 0c 66 69 6c 65 2d 67 65 74 4c 69 6e 65 00 ; 12, file-getLine
;
f021: 30 f0 00 00                ; main - (next: f030 mainLoop)
f025: 88 12 00 00 00             ; XT=1288, flags=00
f02a: 04 6d 61 69 6e 00          ; 4, main
;
f030: 43 f0 00 00                ; mainLoop - (next: f043 .FREE)
f034: 3c 12 00 00 00             ; XT=123c, flags=00
f039: 08 6d 61 69 6e 4c 6f 6f 70 00 ; 8, mainLoop
;
f043: 53 f0 00 00                ; .FREE - (next: f053 FREE)
f047: 18 12 00 00 00             ; XT=1218, flags=00
f04c: 05 2e 46 52 45 45 00       ; 5, .FREE
;
f053: 62 f0 00 00                ; FREE - (next: f062 C?)
f057: 07 12 00 00 00             ; XT=1207, flags=00
f05c: 04 46 52 45 45 00          ; 4, FREE
;
f062: 6f f0 00 00                ; C? - (next: f06f ?)
f066: fb 11 00 00 00             ; XT=11fb, flags=00
f06b: 02 43 3f 00                ; 2, C?
;
f06f: 7b f0 00 00                ; ? - (next: f07b ALLOT)
f073: ef 11 00 00 00             ; XT=11ef, flags=00
f078: 01 3f 00                   ; 1, ?
;
f07b: 8b f0 00 00                ; ALLOT - (next: f08b resetState)
f07f: dd 11 00 00 00             ; XT=11dd, flags=00
f084: 05 41 4c 4c 4f 54 00       ; 5, ALLOT
;
f08b: a0 f0 00 00                ; resetState - (next: f0a0 ForgetLast)
f08f: b9 11 00 00 00             ; XT=11b9, flags=00
f094: 0a 72 65 73 65 74 53 74 61 74 65 00 ; 10, resetState
;
f0a0: b5 f0 00 00                ; ForgetLast - (next: f0b5 ;)
f0a4: 95 11 00 00 00             ; XT=1195, flags=00
f0a9: 0a 46 6f 72 67 65 74 4c 61 73 74 00 ; 10, ForgetLast
;
f0b5: c1 f0 00 00                ; ; - (next: f0c1 :NONAME)
f0b9: 80 11 00 00 01             ; XT=1180, flags=01
f0be: 01 3b 00                   ; 1, ;
;
f0c1: d3 f0 00 00                ; :NONAME - (next: f0d3 :)
f0c5: 6b 11 00 00 00             ; XT=116b, flags=00
f0ca: 07 3a 4e 4f 4e 41 4d 45 00 ; 7, :NONAME
;
f0d3: df f0 00 00                ; : - (next: f0df CREATE-NAME)
f0d7: 56 11 00 00 00             ; XT=1156, flags=00
f0dc: 01 3a 00                   ; 1, :
;
f0df: f5 f0 00 00                ; CREATE-NAME - (next: f0f5 Define-Word)
f0e3: fe 10 00 00 00             ; XT=10fe, flags=00
f0e8: 0b 43 52 45 41 54 45 2d 4e 41 4d 45 00 ; 11, CREATE-NAME
;
f0f5: 0b f1 00 00                ; Define-Word - (next: f10b strcpy2c)
f0f9: a5 10 00 00 00             ; XT=10a5, flags=00
f0fe: 0b 44 65 66 69 6e 65 2d 57 6f 72 64 00 ; 11, Define-Word
;
f10b: 1e f1 00 00                ; strcpy2c - (next: f11e getLine)
f10f: 6c 10 00 00 00             ; XT=106c, flags=00
f114: 08 73 74 72 63 70 79 32 63 00 ; 8, strcpy2c
;
f11e: 30 f1 00 00                ; getLine - (next: f130 getLineFromFile)
f122: 9b 0f 00 00 00             ; XT=0f9b, flags=00
f127: 07 67 65 74 4c 69 6e 65 00 ; 7, getLine
;
f130: 4a f1 00 00                ; getLineFromFile - (next: f14a LoadingFromFile?)
f134: 7a 0f 00 00 00             ; XT=0f7a, flags=00
f139: 0f 67 65 74 4c 69 6e 65 46 72 6f 6d 46 69 6c 65 00 ; 15, getLineFromFile
;
f14a: 65 f1 00 00                ; LoadingFromFile? - (next: f165 INPUT-FP)
f14e: 6e 0f 00 00 00             ; XT=0f6e, flags=00
f153: 10 4c 6f 61 64 69 6e 67 46 72 6f 6d 46 69 6c 65 3f 00 ; 16, LoadingFromFile?
;
f165: 78 f1 00 00                ; INPUT-FP - (next: f178 Pad)
f169: 5f 0f 00 00 00             ; XT=0f5f, flags=00
f16e: 08 49 4e 50 55 54 2d 46 50 00 ; 8, INPUT-FP
;
f178: 86 f1 00 00                ; Pad - (next: f186 executeInput)
f17c: 33 0f 00 00 00             ; XT=0f33, flags=00
f181: 03 50 61 64 00             ; 3, Pad
;
f186: 9d f1 00 00                ; executeInput - (next: f19d executeWord)
f18a: ef 0e 00 00 00             ; XT=0eef, flags=00
f18f: 0c 65 78 65 63 75 74 65 49 6e 70 75 74 00 ; 12, executeInput
;
f19d: b3 f1 00 00                ; executeWord - (next: f1b3 [COMPILE])
f1a1: 4e 0e 00 00 00             ; XT=0e4e, flags=00
f1a6: 0b 65 78 65 63 75 74 65 57 6f 72 64 00 ; 11, executeWord
;
f1b3: c7 f1 00 00                ; [COMPILE] - (next: f1c7 cstr,)
f1b7: 2a 0e 00 00 00             ; XT=0e2a, flags=00
f1bc: 09 5b 43 4f 4d 50 49 4c 45 5d 00 ; 9, [COMPILE]
;
f1c7: d7 f1 00 00                ; cstr, - (next: f1d7 strlen)
f1cb: 19 0e 00 00 00             ; XT=0e19, flags=00
f1d0: 05 63 73 74 72 2c 00       ; 5, cstr,
;
f1d7: e8 f1 00 00                ; strlen - (next: f1e8 Copy.INLINE)
f1db: fa 0d 00 00 00             ; XT=0dfa, flags=00
f1e0: 06 73 74 72 6c 65 6e 00    ; 6, strlen
;
f1e8: fe f1 00 00                ; Copy.INLINE - (next: f1fe DOES>)
f1ec: d8 0d 00 00 00             ; XT=0dd8, flags=00
f1f1: 0b 43 6f 70 79 2e 49 4e 4c 49 4e 45 00 ; 11, Copy.INLINE
;
f1fe: 0e f2 00 00                ; DOES> - (next: f20e (inline))
f202: c3 0d 00 00 00             ; XT=0dc3, flags=00
f207: 05 44 4f 45 53 3e 00       ; 5, DOES>
;
f20e: 21 f2 00 00                ; (inline) - (next: f221 find.ret)
f212: a2 0d 00 00 00             ; XT=0da2, flags=00
f217: 08 28 69 6e 6c 69 6e 65 29 00 ; 8, (inline)
;
f221: 34 f2 00 00                ; find.ret - (next: f234 EXECUTE)
f225: 8b 0d 00 00 00             ; XT=0d8b, flags=00
f22a: 08 66 69 6e 64 2e 72 65 74 00 ; 8, find.ret
;
f234: 46 f2 00 00                ; EXECUTE - (next: f246 .lastx)
f238: 82 0d 00 00 00             ; XT=0d82, flags=00
f23d: 07 45 58 45 43 55 54 45 00 ; 7, EXECUTE
;
f246: 57 f2 00 00                ; .lastx - (next: f257 NUM-WORDS)
f24a: 60 0d 00 00 00             ; XT=0d60, flags=00
f24f: 06 2e 6c 61 73 74 78 00    ; 6, .lastx
;
f257: 6b f2 00 00                ; NUM-WORDS - (next: f26b WORDSV)
f25b: 36 0d 00 00 00             ; XT=0d36, flags=00
f260: 09 4e 55 4d 2d 57 4f 52 44 53 00 ; 9, NUM-WORDS
;
f26b: 7c f2 00 00                ; WORDSV - (next: f27c .WORD-LONG)
f26f: 04 0d 00 00 00             ; XT=0d04, flags=00
f274: 06 57 4f 52 44 53 56 00    ; 6, WORDSV
;
f27c: 91 f2 00 00                ; .WORD-LONG - (next: f291 WORDS)
f280: 74 0c 00 00 00             ; XT=0c74, flags=00
f285: 0a 2e 57 4f 52 44 2d 4c 4f 4e 47 00 ; 10, .WORD-LONG
;
f291: a1 f2 00 00                ; WORDS - (next: f2a1 .WORD-SHORT)
f295: 4d 0c 00 00 00             ; XT=0c4d, flags=00
f29a: 05 57 4f 52 44 53 00       ; 5, WORDS
;
f2a1: b7 f2 00 00                ; .WORD-SHORT - (next: f2b7 .(LAST))
f2a5: 38 0c 00 00 00             ; XT=0c38, flags=00
f2aa: 0b 2e 57 4f 52 44 2d 53 48 4f 52 54 00 ; 11, .WORD-SHORT
;
f2b7: c9 f2 00 00                ; .(LAST) - (next: f2c9 .(HERE))
f2bb: 01 0c 00 00 00             ; XT=0c01, flags=00
f2c0: 07 2e 28 4c 41 53 54 29 00 ; 7, .(LAST)
;
f2c9: db f2 00 00                ; .(HERE) - (next: f2db .(MEM_SZ))
f2cd: ca 0b 00 00 00             ; XT=0bca, flags=00
f2d2: 07 2e 28 48 45 52 45 29 00 ; 7, .(HERE)
;
f2db: ef f2 00 00                ; .(MEM_SZ) - (next: f2ef .S)
f2df: 91 0b 00 00 00             ; XT=0b91, flags=00
f2e4: 09 2e 28 4d 45 4d 5f 53 5a 29 00 ; 9, .(MEM_SZ)
;
f2ef: fc f2 00 00                ; .S - (next: f2fc MAX)
f2f3: 1f 0b 00 00 00             ; XT=0b1f, flags=00
f2f8: 02 2e 53 00                ; 2, .S
;
f2fc: 0a f3 00 00                ; MAX - (next: f30a MIN)
f300: 0f 0b 00 00 00             ; XT=0b0f, flags=00
f305: 03 4d 41 58 00             ; 3, MAX
;
f30a: 18 f3 00 00                ; MIN - (next: f318 BINARY.)
f30e: ff 0a 00 00 00             ; XT=0aff, flags=00
f313: 03 4d 49 4e 00             ; 3, MIN
;
f318: 2a f3 00 00                ; BINARY. - (next: f32a DECIMAL.)
f31c: e2 0a 00 00 00             ; XT=0ae2, flags=00
f321: 07 42 49 4e 41 52 59 2e 00 ; 7, BINARY.
;
f32a: 3d f3 00 00                ; DECIMAL. - (next: f33d HEX.4)
f32e: c5 0a 00 00 00             ; XT=0ac5, flags=00
f333: 08 44 45 43 49 4d 41 4c 2e 00 ; 8, DECIMAL.
;
f33d: 4d f3 00 00                ; HEX.4 - (next: f34d HEX.2)
f341: a8 0a 00 00 00             ; XT=0aa8, flags=00
f346: 05 48 45 58 2e 34 00       ; 5, HEX.4
;
f34d: 5d f3 00 00                ; HEX.2 - (next: f35d HEX.)
f351: 8b 0a 00 00 00             ; XT=0a8b, flags=00
f356: 05 48 45 58 2e 32 00       ; 5, HEX.2
;
f35d: 6c f3 00 00                ; HEX. - (next: f36c .4)
f361: 6e 0a 00 00 00             ; XT=0a6e, flags=00
f366: 04 48 45 58 2e 00          ; 4, HEX.
;
f36c: 79 f3 00 00                ; .4 - (next: f379 .3)
f370: 45 0a 00 00 00             ; XT=0a45, flags=00
f375: 02 2e 34 00                ; 2, .4
;
f379: 86 f3 00 00                ; .3 - (next: f386 .2)
f37d: 21 0a 00 00 00             ; XT=0a21, flags=00
f382: 02 2e 33 00                ; 2, .3
;
f386: 93 f3 00 00                ; .2 - (next: f393 .)
f38a: 02 0a 00 00 00             ; XT=0a02, flags=00
f38f: 02 2e 32 00                ; 2, .2
;
f393: 9f f3 00 00                ; . - (next: f39f (.))
f397: f2 09 00 00 00             ; XT=09f2, flags=00
f39c: 01 2e 00                   ; 1, .
;
f39f: ad f3 00 00                ; (.) - (next: f3ad #P)
f3a3: d8 09 00 00 00             ; XT=09d8, flags=00
f3a8: 03 28 2e 29 00             ; 3, (.)
;
f3ad: ba f3 00 00                ; #P - (next: f3ba #P-)
f3b1: c2 09 00 00 00             ; XT=09c2, flags=00
f3b6: 02 23 50 00                ; 2, #P
;
f3ba: c8 f3 00 00                ; #P- - (next: f3c8 #>)
f3be: ad 09 00 00 00             ; XT=09ad, flags=00
f3c3: 03 23 50 2d 00             ; 3, #P-
;
f3c8: d5 f3 00 00                ; #> - (next: f3d5 #S)
f3cc: a7 09 00 00 00             ; XT=09a7, flags=00
f3d1: 02 23 3e 00                ; 2, #>
;
f3d5: e2 f3 00 00                ; #S - (next: f3e2 #)
f3d9: 93 09 00 00 00             ; XT=0993, flags=00
f3de: 02 23 53 00                ; 2, #S
;
f3e2: ee f3 00 00                ; # - (next: f3ee <#)
f3e6: 67 09 00 00 00             ; XT=0967, flags=00
f3eb: 01 23 00                   ; 1, #
;
f3ee: fb f3 00 00                ; <# - (next: f3fb #LEN)
f3f2: 32 09 00 00 00             ; XT=0932, flags=00
f3f7: 02 3c 23 00                ; 2, <#
;
f3fb: 0a f4 00 00                ; #LEN - (next: f40a #NEG)
f3ff: 22 09 00 00 00             ; XT=0922, flags=00
f404: 04 23 4c 45 4e 00          ; 4, #LEN
;
f40a: 19 f4 00 00                ; #NEG - (next: f419 SPACE)
f40e: 12 09 00 00 00             ; XT=0912, flags=00
f413: 04 23 4e 45 47 00          ; 4, #NEG
;
f419: 29 f4 00 00                ; SPACE - (next: f429 /MOD)
f41d: 09 09 00 00 00             ; XT=0909, flags=00
f422: 05 53 50 41 43 45 00       ; 5, SPACE
;
f429: 38 f4 00 00                ; /MOD - (next: f438 MOD)
f42d: fb 08 00 00 00             ; XT=08fb, flags=00
f432: 04 2f 4d 4f 44 00          ; 4, /MOD
;
f438: 46 f4 00 00                ; MOD - (next: f446 isNumber?)
f43c: f0 08 00 00 00             ; XT=08f0, flags=00
f441: 03 4d 4f 44 00             ; 3, MOD
;
f446: 5a f4 00 00                ; isNumber? - (next: f45a ABS)
f44a: 90 08 00 00 00             ; XT=0890, flags=00
f44f: 09 69 73 4e 75 6d 62 65 72 3f 00 ; 9, isNumber?
;
f45a: 68 f4 00 00                ; ABS - (next: f468 NEGATE)
f45e: 7c 08 00 00 00             ; XT=087c, flags=00
f463: 03 41 42 53 00             ; 3, ABS
;
f468: 79 f4 00 00                ; NEGATE - (next: f479 isNumChar?)
f46c: 72 08 00 00 00             ; XT=0872, flags=00
f471: 06 4e 45 47 41 54 45 00    ; 6, NEGATE
;
f479: 8e f4 00 00                ; isNumChar? - (next: f48e isHEX?)
f47d: 21 08 00 00 00             ; XT=0821, flags=00
f482: 0a 69 73 4e 75 6d 43 68 61 72 3f 00 ; 10, isNumChar?
;
f48e: 9f f4 00 00                ; isHEX? - (next: f49f findInDict)
f492: 12 08 00 00 00             ; XT=0812, flags=00
f497: 06 69 73 48 45 58 3f 00    ; 6, isHEX?
;
f49f: b4 f4 00 00                ; findInDict - (next: f4b4 DICT.GetINLINE)
f4a3: c9 07 00 00 00             ; XT=07c9, flags=00
f4a8: 0a 66 69 6e 64 49 6e 44 69 63 74 00 ; 10, findInDict
;
f4b4: cd f4 00 00                ; DICT.GetINLINE - (next: f4cd DICT.GetIMMEDIATE)
f4b8: b9 07 00 00 00             ; XT=07b9, flags=00
f4bd: 0e 44 49 43 54 2e 47 65 74 49 4e 4c 49 4e 45 00 ; 14, DICT.GetINLINE
;
f4cd: e9 f4 00 00                ; DICT.GetIMMEDIATE - (next: f4e9 FLAGS.ISINLINE?)
f4d1: a9 07 00 00 00             ; XT=07a9, flags=00
f4d6: 11 44 49 43 54 2e 47 65 74 49 4d 4d 45 44 49 41 54 45 00 ; 17, DICT.GetIMMEDIATE
;
f4e9: 03 f5 00 00                ; FLAGS.ISINLINE? - (next: f503 FLAGS.ISIMMEDIATE?)
f4ed: a0 07 00 00 00             ; XT=07a0, flags=00
f4f2: 0f 46 4c 41 47 53 2e 49 53 49 4e 4c 49 4e 45 3f 00 ; 15, FLAGS.ISINLINE?
;
f503: 20 f5 00 00                ; FLAGS.ISIMMEDIATE? - (next: f520 XT.GetDICTP)
f507: 97 07 00 00 00             ; XT=0797, flags=00
f50c: 12 46 4c 41 47 53 2e 49 53 49 4d 4d 45 44 49 41 54 45 3f 00 ; 18, FLAGS.ISIMMEDIATE?
;
f520: 36 f5 00 00                ; XT.GetDICTP - (next: f536 DICTP>NAME)
f524: 7e 07 00 00 00             ; XT=077e, flags=00
f529: 0b 58 54 2e 47 65 74 44 49 43 54 50 00 ; 11, XT.GetDICTP
;
f536: 4b f5 00 00                ; DICTP>NAME - (next: f54b DICT.GetFLAGS)
f53a: 71 07 00 00 00             ; XT=0771, flags=00
f53f: 0a 44 49 43 54 50 3e 4e 41 4d 45 00 ; 10, DICTP>NAME
;
f54b: 63 f5 00 00                ; DICT.GetFLAGS - (next: f563 DICT.GetXT)
f54f: 65 07 00 00 00             ; XT=0765, flags=00
f554: 0d 44 49 43 54 2e 47 65 74 46 4c 41 47 53 00 ; 13, DICT.GetFLAGS
;
f563: 78 f5 00 00                ; DICT.GetXT - (next: f578 NAME>DICT)
f567: 59 07 00 00 00             ; XT=0759, flags=00
f56c: 0a 44 49 43 54 2e 47 65 74 58 54 00 ; 10, DICT.GetXT
;
f578: 8c f5 00 00                ; NAME>DICT - (next: f58c FLAGS>DICT)
f57c: 49 07 00 00 00             ; XT=0749, flags=00
f581: 09 4e 41 4d 45 3e 44 49 43 54 00 ; 9, NAME>DICT
;
f58c: a1 f5 00 00                ; FLAGS>DICT - (next: f5a1 XT>DICT)
f590: 3a 07 00 00 00             ; XT=073a, flags=00
f595: 0a 46 4c 41 47 53 3e 44 49 43 54 00 ; 10, FLAGS>DICT
;
f5a1: b3 f5 00 00                ; XT>DICT - (next: f5b3 NEXT>DICT)
f5a5: 2e 07 00 00 00             ; XT=072e, flags=00
f5aa: 07 58 54 3e 44 49 43 54 00 ; 7, XT>DICT
;
f5b3: c7 f5 00 00                ; NEXT>DICT - (next: f5c7 DICT>NAME)
f5b7: 28 07 00 00 00             ; XT=0728, flags=00
f5bc: 09 4e 45 58 54 3e 44 49 43 54 00 ; 9, NEXT>DICT
;
f5c7: db f5 00 00                ; DICT>NAME - (next: f5db DICT>FLAGS)
f5cb: 1c 07 00 00 00             ; XT=071c, flags=00
f5d0: 09 44 49 43 54 3e 4e 41 4d 45 00 ; 9, DICT>NAME
;
f5db: f0 f5 00 00                ; DICT>FLAGS - (next: f5f0 DICT>XT)
f5df: 0d 07 00 00 00             ; XT=070d, flags=00
f5e4: 0a 44 49 43 54 3e 46 4c 41 47 53 00 ; 10, DICT>FLAGS
;
f5f0: 02 f6 00 00                ; DICT>XT - (next: f602 DICT>NEXT)
f5f4: 01 07 00 00 00             ; XT=0701, flags=00
f5f9: 07 44 49 43 54 3e 58 54 00 ; 7, DICT>XT
;
f602: 16 f6 00 00                ; DICT>NEXT - (next: f616 getOneWord)
f606: fb 06 00 00 00             ; XT=06fb, flags=00
f60b: 09 44 49 43 54 3e 4e 45 58 54 00 ; 9, DICT>NEXT
;
f616: 2b f6 00 00                ; getOneWord - (next: f62b skipWS)
f61a: c3 06 00 00 00             ; XT=06c3, flags=00
f61f: 0a 67 65 74 4f 6e 65 57 6f 72 64 00 ; 10, getOneWord
;
f62b: 3c f6 00 00                ; skipWS - (next: f63c getInput)
f62f: 9a 06 00 00 00             ; XT=069a, flags=00
f634: 06 73 6b 69 70 57 53 00    ; 6, skipWS
;
f63c: 4f f6 00 00                ; getInput - (next: f64f PAD)
f640: 84 06 00 00 00             ; XT=0684, flags=00
f645: 08 67 65 74 49 6e 70 75 74 00 ; 8, getInput
;
f64f: 5d f6 00 00                ; PAD - (next: f65d tmp-alloc)
f653: 72 06 00 00 00             ; XT=0672, flags=00
f658: 03 50 41 44 00             ; 3, PAD
;
f65d: 71 f6 00 00                ; tmp-alloc - (next: f671 tmp-cur)
f661: 5b 06 00 00 00             ; XT=065b, flags=00
f666: 09 74 6d 70 2d 61 6c 6c 6f 63 00 ; 9, tmp-alloc
;
f671: 83 f6 00 00                ; tmp-cur - (next: f683 tmp-init)
f675: 4f 06 00 00 00             ; XT=064f, flags=00
f67a: 07 74 6d 70 2d 63 75 72 00 ; 7, tmp-cur
;
f683: 96 f6 00 00                ; tmp-init - (next: f696 (tmp))
f687: 3e 06 00 00 00             ; XT=063e, flags=00
f68c: 08 74 6d 70 2d 69 6e 69 74 00 ; 8, tmp-init
;
f696: a6 f6 00 00                ; (tmp) - (next: f6a6 BETWEEN)
f69a: 2e 06 00 00 00             ; XT=062e, flags=00
f69f: 05 28 74 6d 70 29 00       ; 5, (tmp)
;
f6a6: b8 f6 00 00                ; BETWEEN - (next: f6b8 CR)
f6aa: 16 06 00 00 00             ; XT=0616, flags=00
f6af: 07 42 45 54 57 45 45 4e 00 ; 7, BETWEEN
;
f6b8: c5 f6 00 00                ; CR - (next: f6c5 CRLF)
f6bc: 0a 06 00 00 02             ; XT=060a, flags=02
f6c1: 02 43 52 00                ; 2, CR
;
f6c5: d4 f6 00 00                ; CRLF - (next: f6d4 BL)
f6c9: fe 05 00 00 02             ; XT=05fe, flags=02
f6ce: 04 43 52 4c 46 00          ; 4, CRLF
;
f6d4: e1 f6 00 00                ; BL - (next: f6e1 ()
f6d8: f5 05 00 00 02             ; XT=05f5, flags=02
f6dd: 02 42 4c 00                ; 2, BL
;
f6e1: ed f6 00 00                ; ( - (next: f6ed \)
f6e5: ab 05 00 00 01             ; XT=05ab, flags=01
f6ea: 01 28 00                   ; 1, (
;
f6ed: f9 f6 00 00                ; \ - (next: f6f9 CT)
f6f1: 9c 05 00 00 01             ; XT=059c, flags=01
f6f6: 01 5c 00                   ; 1, \
;
f6f9: 06 f7 00 00                ; CT - (next: f706 TYPE)
f6fd: 8c 05 00 00 00             ; XT=058c, flags=00
f702: 02 43 54 00                ; 2, CT
;
f706: 15 f7 00 00                ; TYPE - (next: f715 COUNT)
f70a: 6c 05 00 00 00             ; XT=056c, flags=00
f70f: 04 54 59 50 45 00          ; 4, TYPE
;
f715: 25 f7 00 00                ; COUNT - (next: f725 NOT)
f719: 62 05 00 00 00             ; XT=0562, flags=00
f71e: 05 43 4f 55 4e 54 00       ; 5, COUNT
;
f725: 33 f7 00 00                ; NOT - (next: f733 FALSE)
f729: 59 05 00 00 02             ; XT=0559, flags=02
f72e: 03 4e 4f 54 00             ; 3, NOT
;
f733: 43 f7 00 00                ; FALSE - (next: f743 TRUE)
f737: 51 05 00 00 02             ; XT=0551, flags=02
f73c: 05 46 41 4c 53 45 00       ; 5, FALSE
;
f743: 52 f7 00 00                ; TRUE - (next: f752 >=)
f747: 49 05 00 00 02             ; XT=0549, flags=02
f74c: 04 54 52 55 45 00          ; 4, TRUE
;
f752: 5f f7 00 00                ; >= - (next: f75f <=)
f756: 3f 05 00 00 02             ; XT=053f, flags=02
f75b: 02 3e 3d 00                ; 2, >=
;
f75f: 6c f7 00 00                ; <= - (next: f76c <>)
f763: 35 05 00 00 02             ; XT=0535, flags=02
f768: 02 3c 3d 00                ; 2, <=
;
f76c: 79 f7 00 00                ; <> - (next: f779 0=)
f770: 2b 05 00 00 02             ; XT=052b, flags=02
f775: 02 3c 3e 00                ; 2, <>
;
f779: 86 f7 00 00                ; 0= - (next: f786 C+!)
f77d: 22 05 00 00 02             ; XT=0522, flags=02
f782: 02 30 3d 00                ; 2, 0=
;
f786: 94 f7 00 00                ; C+! - (next: f794 +!)
f78a: 16 05 00 00 00             ; XT=0516, flags=00
f78f: 03 43 2b 21 00             ; 3, C+!
;
f794: a1 f7 00 00                ; +! - (next: f7a1 C--)
f798: 0a 05 00 00 00             ; XT=050a, flags=00
f79d: 02 2b 21 00                ; 2, +!
;
f7a1: af f7 00 00                ; C-- - (next: f7af C++)
f7a5: ff 04 00 00 00             ; XT=04ff, flags=00
f7aa: 03 43 2d 2d 00             ; 3, C--
;
f7af: bd f7 00 00                ; C++ - (next: f7bd --)
f7b3: f4 04 00 00 00             ; XT=04f4, flags=00
f7b8: 03 43 2b 2b 00             ; 3, C++
;
f7bd: ca f7 00 00                ; -- - (next: f7ca ++)
f7c1: e7 04 00 00 00             ; XT=04e7, flags=00
f7c6: 02 2d 2d 00                ; 2, --
;
f7ca: d7 f7 00 00                ; ++ - (next: f7d7 -=)
f7ce: da 04 00 00 00             ; XT=04da, flags=00
f7d3: 02 2b 2b 00                ; 2, ++
;
f7d7: e4 f7 00 00                ; -= - (next: f7e4 +=)
f7db: ce 04 00 00 00             ; XT=04ce, flags=00
f7e0: 02 2d 3d 00                ; 2, -=
;
f7e4: f1 f7 00 00                ; += - (next: f7f1 2/)
f7e8: c3 04 00 00 00             ; XT=04c3, flags=00
f7ed: 02 2b 3d 00                ; 2, +=
;
f7f1: fe f7 00 00                ; 2/ - (next: f7fe 2*)
f7f5: ba 04 00 00 02             ; XT=04ba, flags=02
f7fa: 02 32 2f 00                ; 2, 2/
;
f7fe: 0b f8 00 00                ; 2* - (next: f80b 1-)
f802: b1 04 00 00 02             ; XT=04b1, flags=02
f807: 02 32 2a 00                ; 2, 2*
;
f80b: 18 f8 00 00                ; 1- - (next: f818 1+)
f80f: aa 04 00 00 02             ; XT=04aa, flags=02
f814: 02 31 2d 00                ; 2, 1-
;
f818: 25 f8 00 00                ; 1+ - (next: f825 -ROT)
f81c: a3 04 00 00 02             ; XT=04a3, flags=02
f821: 02 31 2b 00                ; 2, 1+
;
f825: 34 f8 00 00                ; -ROT - (next: f834 ROT)
f829: 99 04 00 00 02             ; XT=0499, flags=02
f82e: 04 2d 52 4f 54 00          ; 4, -ROT
;
f834: 42 f8 00 00                ; ROT - (next: f842 NIP)
f838: 8f 04 00 00 02             ; XT=048f, flags=02
f83d: 03 52 4f 54 00             ; 3, ROT
;
f842: 50 f8 00 00                ; NIP - (next: f850 TUCK)
f846: 87 04 00 00 02             ; XT=0487, flags=02
f84b: 03 4e 49 50 00             ; 3, NIP
;
f850: 5f f8 00 00                ; TUCK - (next: f85f 2DROP)
f854: 7f 04 00 00 02             ; XT=047f, flags=02
f859: 04 54 55 43 4b 00          ; 4, TUCK
;
f85f: 6f f8 00 00                ; 2DROP - (next: f86f 2DUP)
f863: 77 04 00 00 02             ; XT=0477, flags=02
f868: 05 32 44 52 4f 50 00       ; 5, 2DROP
;
f86f: 7e f8 00 00                ; 2DUP - (next: f87e RDROP)
f873: 6f 04 00 00 02             ; XT=046f, flags=02
f878: 04 32 44 55 50 00          ; 4, 2DUP
;
f87e: 8e f8 00 00                ; RDROP - (next: f88e R@)
f882: 67 04 00 00 02             ; XT=0467, flags=02
f887: 05 52 44 52 4f 50 00       ; 5, RDROP
;
f88e: 9b f8 00 00                ; R@ - (next: f89b DEBUG-OFF)
f892: 5e 04 00 00 02             ; XT=045e, flags=02
f897: 02 52 40 00                ; 2, R@
;
f89b: af f8 00 00                ; DEBUG-OFF - (next: f8af DEBUG-ON)
f89f: 55 04 00 00 02             ; XT=0455, flags=02
f8a4: 09 44 45 42 55 47 2d 4f 46 46 00 ; 9, DEBUG-OFF
;
f8af: c2 f8 00 00                ; DEBUG-ON - (next: f8c2 TRACE-OFF)
f8b3: 4c 04 00 00 02             ; XT=044c, flags=02
f8b8: 08 44 45 42 55 47 2d 4f 4e 00 ; 8, DEBUG-ON
;
f8c2: d6 f8 00 00                ; TRACE-OFF - (next: f8d6 TRACE-ON)
f8c6: 43 04 00 00 02             ; XT=0443, flags=02
f8cb: 09 54 52 41 43 45 2d 4f 46 46 00 ; 9, TRACE-OFF
;
f8d6: e9 f8 00 00                ; TRACE-ON - (next: f8e9 MEM_SZ)
f8da: 3a 04 00 00 02             ; XT=043a, flags=02
f8df: 08 54 52 41 43 45 2d 4f 4e 00 ; 8, TRACE-ON
;
f8e9: fa f8 00 00                ; MEM_SZ - (next: f8fa isNeg)
f8ed: 2e 04 00 00 00             ; XT=042e, flags=00
f8f2: 06 4d 45 4d 5f 53 5a 00    ; 6, MEM_SZ
;
f8fa: 0a f9 00 00                ; isNeg - (next: f90a >IN)
f8fe: 1e 04 00 00 00             ; XT=041e, flags=00
f903: 05 69 73 4e 65 67 00       ; 5, isNeg
;
f90a: 18 f9 00 00                ; >IN - (next: f918 LEAVE)
f90e: 0e 04 00 00 00             ; XT=040e, flags=00
f913: 03 3e 49 4e 00             ; 3, >IN
;
f918: 28 f9 00 00                ; LEAVE - (next: f928 UNTIL)
f91c: f9 03 00 00 01             ; XT=03f9, flags=01
f921: 05 4c 45 41 56 45 00       ; 5, LEAVE
;
f928: 38 f9 00 00                ; UNTIL - (next: f938 WHILE)
f92c: df 03 00 00 01             ; XT=03df, flags=01
f931: 05 55 4e 54 49 4c 00       ; 5, UNTIL
;
f938: 48 f9 00 00                ; WHILE - (next: f948 AGAIN)
f93c: c5 03 00 00 01             ; XT=03c5, flags=01
f941: 05 57 48 49 4c 45 00       ; 5, WHILE
;
f948: 58 f9 00 00                ; AGAIN - (next: f958 BEGIN)
f94c: ab 03 00 00 01             ; XT=03ab, flags=01
f951: 05 41 47 41 49 4e 00       ; 5, AGAIN
;
f958: 68 f9 00 00                ; BEGIN - (next: f968 THEN)
f95c: 96 03 00 00 01             ; XT=0396, flags=01
f961: 05 42 45 47 49 4e 00       ; 5, BEGIN
;
f968: 77 f9 00 00                ; THEN - (next: f977 ELSE)
f96c: 7f 03 00 00 01             ; XT=037f, flags=01
f971: 04 54 48 45 4e 00          ; 4, THEN
;
f977: 86 f9 00 00                ; ELSE - (next: f986 IF)
f97b: 56 03 00 00 01             ; XT=0356, flags=01
f980: 04 45 4c 53 45 00          ; 4, ELSE
;
f986: 93 f9 00 00                ; IF - (next: f993 ?COMPILING)
f98a: 35 03 00 00 01             ; XT=0335, flags=01
f98f: 02 49 46 00                ; 2, IF
;
f993: a8 f9 00 00                ; ?COMPILING - (next: f9a8 OFF)
f997: 29 03 00 00 00             ; XT=0329, flags=00
f99c: 0a 3f 43 4f 4d 50 49 4c 49 4e 47 00 ; 10, ?COMPILING
;
f9a8: b6 f9 00 00                ; OFF - (next: f9b6 ON)
f9ac: 1f 03 00 00 00             ; XT=031f, flags=00
f9b1: 03 4f 46 46 00             ; 3, OFF
;
f9b6: c3 f9 00 00                ; ON - (next: f9c3 BINARY)
f9ba: 15 03 00 00 00             ; XT=0315, flags=00
f9bf: 02 4f 4e 00                ; 2, ON
;
f9c3: d4 f9 00 00                ; BINARY - (next: f9d4 OCTAL)
f9c7: 07 03 00 00 00             ; XT=0307, flags=00
f9cc: 06 42 49 4e 41 52 59 00    ; 6, BINARY
;
f9d4: e4 f9 00 00                ; OCTAL - (next: f9e4 DECIMAL)
f9d8: f9 02 00 00 00             ; XT=02f9, flags=00
f9dd: 05 4f 43 54 41 4c 00       ; 5, OCTAL
;
f9e4: f6 f9 00 00                ; DECIMAL - (next: f9f6 HEX)
f9e8: eb 02 00 00 00             ; XT=02eb, flags=00
f9ed: 07 44 45 43 49 4d 41 4c 00 ; 7, DECIMAL
;
f9f6: 04 fa 00 00                ; HEX - (next: fa04 FLAG_INLINE)
f9fa: dd 02 00 00 00             ; XT=02dd, flags=00
f9ff: 03 48 45 58 00             ; 3, HEX
;
fa04: 1a fa 00 00                ; FLAG_INLINE - (next: fa1a FLAG_IMMEDIATE)
fa08: d5 02 00 00 02             ; XT=02d5, flags=02
fa0d: 0b 46 4c 41 47 5f 49 4e 4c 49 4e 45 00 ; 11, FLAG_INLINE
;
fa1a: 33 fa 00 00                ; FLAG_IMMEDIATE - (next: fa33 CELLS)
fa1e: cd 02 00 00 02             ; XT=02cd, flags=02
fa23: 0e 46 4c 41 47 5f 49 4d 4d 45 44 49 41 54 45 00 ; 14, FLAG_IMMEDIATE
;
fa33: 43 fa 00 00                ; CELLS - (next: fa43 IMMEDIATE)
fa37: c1 02 00 00 02             ; XT=02c1, flags=02
fa3c: 05 43 45 4c 4c 53 00       ; 5, CELLS
;
fa43: 57 fa 00 00                ; IMMEDIATE - (next: fa57 INLINE)
fa47: a6 02 00 00 00             ; XT=02a6, flags=00
fa4c: 09 49 4d 4d 45 44 49 41 54 45 00 ; 9, IMMEDIATE
;
fa57: 68 fa 00 00                ; INLINE - (next: fa68 BYE)
fa5b: 8b 02 00 00 00             ; XT=028b, flags=00
fa60: 06 49 4e 4c 49 4e 45 00    ; 6, INLINE
;
fa68: 76 fa 00 00                ; BYE - (next: fa76 RESET)
fa6c: 84 02 00 00 02             ; XT=0284, flags=02
fa71: 03 42 59 45 00             ; 3, BYE
;
fa76: 86 fa 00 00                ; RESET - (next: fa86 BREAK)
fa7a: 7d 02 00 00 02             ; XT=027d, flags=02
fa7f: 05 52 45 53 45 54 00       ; 5, RESET
;
fa86: 96 fa 00 00                ; BREAK - (next: fa96 GETTICK)
fa8a: 76 02 00 00 02             ; XT=0276, flags=02
fa8f: 05 42 52 45 41 4b 00       ; 5, BREAK
;
fa96: a8 fa 00 00                ; GETTICK - (next: faa8 DEC)
fa9a: 6f 02 00 00 02             ; XT=026f, flags=02
fa9f: 07 47 45 54 54 49 43 4b 00 ; 7, GETTICK
;
faa8: b6 fa 00 00                ; DEC - (next: fab6 RDEPTH)
faac: 68 02 00 00 02             ; XT=0268, flags=02
fab1: 03 44 45 43 00             ; 3, DEC
;
fab6: c7 fa 00 00                ; RDEPTH - (next: fac7 INC)
faba: 61 02 00 00 02             ; XT=0261, flags=02
fabf: 06 52 44 45 50 54 48 00    ; 6, RDEPTH
;
fac7: d5 fa 00 00                ; INC - (next: fad5 USPOP)
facb: 5a 02 00 00 02             ; XT=025a, flags=02
fad0: 03 49 4e 43 00             ; 3, INC
;
fad5: e5 fa 00 00                ; USPOP - (next: fae5 USPUSH)
fad9: 53 02 00 00 02             ; XT=0253, flags=02
fade: 05 55 53 50 4f 50 00       ; 5, USPOP
;
fae5: f6 fa 00 00                ; USPUSH - (next: faf6 COMPAREI)
fae9: 4c 02 00 00 02             ; XT=024c, flags=02
faee: 06 55 53 50 55 53 48 00    ; 6, USPUSH
;
faf6: 09 fb 00 00                ; COMPAREI - (next: fb09 GETCH)
fafa: 45 02 00 00 02             ; XT=0245, flags=02
faff: 08 43 4f 4d 50 41 52 45 49 00 ; 8, COMPAREI
;
fb09: 19 fb 00 00                ; GETCH - (next: fb19 DEPTH)
fb0d: 3e 02 00 00 02             ; XT=023e, flags=02
fb12: 05 47 45 54 43 48 00       ; 5, GETCH
;
fb19: 29 fb 00 00                ; DEPTH - (next: fb29 PICK)
fb1d: 37 02 00 00 02             ; XT=0237, flags=02
fb22: 05 44 45 50 54 48 00       ; 5, DEPTH
;
fb29: 38 fb 00 00                ; PICK - (next: fb38 AND)
fb2d: 30 02 00 00 02             ; XT=0230, flags=02
fb32: 04 50 49 43 4b 00          ; 4, PICK
;
fb38: 46 fb 00 00                ; AND - (next: fb46 LOGLEVEL)
fb3c: 29 02 00 00 02             ; XT=0229, flags=02
fb41: 03 41 4e 44 00             ; 3, AND
;
fb46: 59 fb 00 00                ; LOGLEVEL - (next: fb59 R>)
fb4a: 22 02 00 00 02             ; XT=0222, flags=02
fb4f: 08 4c 4f 47 4c 45 56 45 4c 00 ; 8, LOGLEVEL
;
fb59: 66 fb 00 00                ; R> - (next: fb66 >R)
fb5d: 1b 02 00 00 02             ; XT=021b, flags=02
fb62: 02 52 3e 00                ; 2, R>
;
fb66: 73 fb 00 00                ; >R - (next: fb73 FCLOSE)
fb6a: 14 02 00 00 02             ; XT=0214, flags=02
fb6f: 02 3e 52 00                ; 2, >R
;
fb73: 84 fb 00 00                ; FCLOSE - (next: fb84 FWRITE)
fb77: 0d 02 00 00 02             ; XT=020d, flags=02
fb7c: 06 46 43 4c 4f 53 45 00    ; 6, FCLOSE
;
fb84: 95 fb 00 00                ; FWRITE - (next: fb95 FREADLINE)
fb88: 06 02 00 00 02             ; XT=0206, flags=02
fb8d: 06 46 57 52 49 54 45 00    ; 6, FWRITE
;
fb95: a9 fb 00 00                ; FREADLINE - (next: fba9 FREAD)
fb99: ff 01 00 00 02             ; XT=01ff, flags=02
fb9e: 09 46 52 45 41 44 4c 49 4e 45 00 ; 9, FREADLINE
;
fba9: b9 fb 00 00                ; FREAD - (next: fbb9 FOPEN)
fbad: f8 01 00 00 02             ; XT=01f8, flags=02
fbb2: 05 46 52 45 41 44 00       ; 5, FREAD
;
fbb9: c9 fb 00 00                ; FOPEN - (next: fbc9 COMPARE)
fbbd: f1 01 00 00 02             ; XT=01f1, flags=02
fbc2: 05 46 4f 50 45 4e 00       ; 5, FOPEN
;
fbc9: db fb 00 00                ; COMPARE - (next: fbdb OVER)
fbcd: ea 01 00 00 02             ; XT=01ea, flags=02
fbd2: 07 43 4f 4d 50 41 52 45 00 ; 7, COMPARE
;
fbdb: ea fb 00 00                ; OVER - (next: fbea EMIT)
fbdf: e3 01 00 00 02             ; XT=01e3, flags=02
fbe4: 04 4f 56 45 52 00          ; 4, OVER
;
fbea: f9 fb 00 00                ; EMIT - (next: fbf9 DICTP)
fbee: dc 01 00 00 02             ; XT=01dc, flags=02
fbf3: 04 45 4d 49 54 00          ; 4, EMIT
;
fbf9: 09 fc 00 00                ; DICTP - (next: fc09 >)
fbfd: cf 01 00 00 02             ; XT=01cf, flags=02
fc02: 05 44 49 43 54 50 00       ; 5, DICTP
;
fc09: 15 fc 00 00                ; > - (next: fc15 =)
fc0d: c8 01 00 00 02             ; XT=01c8, flags=02
fc12: 01 3e 00                   ; 1, >
;
fc15: 21 fc 00 00                ; = - (next: fc21 <)
fc19: c1 01 00 00 02             ; XT=01c1, flags=02
fc1e: 01 3d 00                   ; 1, =
;
fc21: 2d fc 00 00                ; < - (next: fc2d /)
fc25: ba 01 00 00 02             ; XT=01ba, flags=02
fc2a: 01 3c 00                   ; 1, <
;
fc2d: 39 fc 00 00                ; / - (next: fc39 *)
fc31: b3 01 00 00 02             ; XT=01b3, flags=02
fc36: 01 2f 00                   ; 1, /
;
fc39: 45 fc 00 00                ; * - (next: fc45 -)
fc3d: ac 01 00 00 02             ; XT=01ac, flags=02
fc42: 01 2a 00                   ; 1, *
;
fc45: 51 fc 00 00                ; - - (next: fc51 +)
fc49: a5 01 00 00 02             ; XT=01a5, flags=02
fc4e: 01 2d 00                   ; 1, -
;
fc51: 5d fc 00 00                ; + - (next: fc5d C!)
fc55: 9e 01 00 00 02             ; XT=019e, flags=02
fc5a: 01 2b 00                   ; 1, +
;
fc5d: 6a fc 00 00                ; C! - (next: fc6a C@)
fc61: 97 01 00 00 02             ; XT=0197, flags=02
fc66: 02 43 21 00                ; 2, C!
;
fc6a: 77 fc 00 00                ; C@ - (next: fc77 CLITERAL)
fc6e: 90 01 00 00 02             ; XT=0190, flags=02
fc73: 02 43 40 00                ; 2, C@
;
fc77: 8a fc 00 00                ; CLITERAL - (next: fc8a OR)
fc7b: 83 01 00 00 02             ; XT=0183, flags=02
fc80: 08 43 4c 49 54 45 52 41 4c 00 ; 8, CLITERAL
;
fc8a: 97 fc 00 00                ; OR - (next: fc97 RET)
fc8e: 7c 01 00 00 02             ; XT=017c, flags=02
fc93: 02 4f 52 00                ; 2, OR
;
fc97: a5 fc 00 00                ; RET - (next: fca5 CALL)
fc9b: 6f 01 00 00 00             ; XT=016f, flags=00
fca0: 03 52 45 54 00             ; 3, RET
;
fca5: b4 fc 00 00                ; CALL - (next: fcb4 JMPNZ)
fca9: 62 01 00 00 00             ; XT=0162, flags=00
fcae: 04 43 41 4c 4c 00          ; 4, CALL
;
fcb4: c4 fc 00 00                ; JMPNZ - (next: fcc4 JMPZ)
fcb8: 55 01 00 00 00             ; XT=0155, flags=00
fcbd: 05 4a 4d 50 4e 5a 00       ; 5, JMPNZ
;
fcc4: d3 fc 00 00                ; JMPZ - (next: fcd3 JMP)
fcc8: 48 01 00 00 00             ; XT=0148, flags=00
fccd: 04 4a 4d 50 5a 00          ; 4, JMPZ
;
fcd3: e1 fc 00 00                ; JMP - (next: fce1 SLITERAL)
fcd7: 3b 01 00 00 00             ; XT=013b, flags=00
fcdc: 03 4a 4d 50 00             ; 3, JMP
;
fce1: f4 fc 00 00                ; SLITERAL - (next: fcf4 DUP)
fce5: 2e 01 00 00 00             ; XT=012e, flags=00
fcea: 08 53 4c 49 54 45 52 41 4c 00 ; 8, SLITERAL
;
fcf4: 02 fd 00 00                ; DUP - (next: fd02 DROP)
fcf8: 27 01 00 00 02             ; XT=0127, flags=02
fcfd: 03 44 55 50 00             ; 3, DUP
;
fd02: 11 fd 00 00                ; DROP - (next: fd11 SWAP)
fd06: 20 01 00 00 02             ; XT=0120, flags=02
fd0b: 04 44 52 4f 50 00          ; 4, DROP
;
fd11: 20 fd 00 00                ; SWAP - (next: fd20 !)
fd15: 19 01 00 00 02             ; XT=0119, flags=02
fd1a: 04 53 57 41 50 00          ; 4, SWAP
;
fd20: 2c fd 00 00                ; ! - (next: fd2c @)
fd24: 12 01 00 00 02             ; XT=0112, flags=02
fd29: 01 21 00                   ; 1, !
;
fd2c: 38 fd 00 00                ; @ - (next: fd38 LITERAL)
fd30: 0b 01 00 00 02             ; XT=010b, flags=02
fd35: 01 40 00                   ; 1, @
;
fd38: 4a fd 00 00                ; LITERAL - (next: fd4a ])
fd3c: fe 00 00 00 00             ; XT=00fe, flags=00
fd41: 07 4c 49 54 45 52 41 4c 00 ; 7, LITERAL
;
fd4a: 56 fd 00 00                ; ] - (next: fd56 [)
fd4e: f0 00 00 00 01             ; XT=00f0, flags=01
fd53: 01 5d 00                   ; 1, ]
;
fd56: 62 fd 00 00                ; [ - (next: fd62 ,)
fd5a: e2 00 00 00 01             ; XT=00e2, flags=01
fd5f: 01 5b 00                   ; 1, [
;
fd62: 6e fd 00 00                ; , - (next: fd6e C,)
fd66: c5 00 00 00 00             ; XT=00c5, flags=00
fd6b: 01 2c 00                   ; 1, ,
;
fd6e: 7b fd 00 00                ; C, - (next: fd7b LAST)
fd72: ab 00 00 00 00             ; XT=00ab, flags=00
fd77: 02 43 2c 00                ; 2, C,
;
fd7b: 8a fd 00 00                ; LAST - (next: fd8a HERE)
fd7f: 9f 00 00 00 00             ; XT=009f, flags=00
fd84: 04 4c 41 53 54 00          ; 4, LAST
;
fd8a: 99 fd 00 00                ; HERE - (next: fd99 CELL)
fd8e: 93 00 00 00 00             ; XT=0093, flags=00
fd93: 04 48 45 52 45 00          ; 4, HERE
;
fd99: a8 fd 00 00                ; CELL - (next: fda8 (MEM_SZ))
fd9d: 8b 00 00 00 00             ; XT=008b, flags=00
fda2: 04 43 45 4c 4c 00          ; 4, CELL
;
fda8: bb fd 00 00                ; (MEM_SZ) - (next: fdbb STATE)
fdac: 7c 00 00 00 00             ; XT=007c, flags=00
fdb1: 08 28 4d 45 4d 5f 53 5a 29 00 ; 8, (MEM_SZ)
;
fdbb: cb fd 00 00                ; STATE - (next: fdcb BASE)
fdbf: 6d 00 00 00 00             ; XT=006d, flags=00
fdc4: 05 53 54 41 54 45 00       ; 5, STATE
;
fdcb: da fd 00 00                ; BASE - (next: fdda (LAST))
fdcf: 5e 00 00 00 00             ; XT=005e, flags=00
fdd4: 04 42 41 53 45 00          ; 4, BASE
;
fdda: eb fd 00 00                ; (LAST) - (next: fdeb (HERE))
fdde: 4f 00 00 00 00             ; XT=004f, flags=00
fde3: 06 28 4c 41 53 54 29 00    ; 6, (LAST)
;
fdeb: fc fd 00 00                ; (HERE) - (next: fdfc <end>)
fdef: 40 00 00 00 00             ; XT=0040, flags=00
fdf4: 06 28 48 45 52 45 29 00    ; 6, (HERE)
;
fdfc: 00 00 00 00                ; End.
