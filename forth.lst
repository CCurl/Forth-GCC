; memory-size: 65536 bytes, (10000 hex)
0000: 08 ad 12 00 00             ; JMP main (12ad)
;
0005: 00 00 00
0008: 00000004 00000000
0010: 00001580 0000f133 0000000a 00000000
0020: 00000000 00010000 00000000 00000000
0030: 00000000 00000000 00000000 00000000
;
0040: 18 eb ff 00 00             ; DICTP (HERE) (ffeb)
0045: 01 4b 00 00 00             ; LITERAL 75 (0x004b)
004a: 0c                         ; RET
004b: 80 15 00 00                ; dw 0x1580
;
004f: 18 da ff 00 00             ; DICTP (LAST) (ffda)
0054: 01 5a 00 00 00             ; LITERAL 90 (0x005a)
0059: 0c                         ; RET
005a: 33 f1 00 00                ; dw 0xf133
;
005e: 18 cb ff 00 00             ; DICTP BASE (ffcb)
0063: 01 69 00 00 00             ; LITERAL 105 (0x0069)
0068: 0c                         ; RET
0069: 0a 00 00 00                ; dw 0x000a
;
006d: 18 bb ff 00 00             ; DICTP STATE (ffbb)
0072: 01 78 00 00 00             ; LITERAL 120 (0x0078)
0077: 0c                         ; RET
0078: 63 00 00 00                ; dw 0x0063
;
007c: 18 a8 ff 00 00             ; DICTP (MEM_SZ) (ffa8)
0081: 01 87 00 00 00             ; LITERAL 135 (0x0087)
0086: 0c                         ; RET
0087: 00 00 01 00                ; dw 0x10000
;
008b: 18 9a ff 00 00             ; DICTP >IN (ff9a)
0090: 01 96 00 00 00             ; LITERAL 150 (0x0096)
0095: 0c                         ; RET
0096: 00 00 00 00                ; dw 0x0000
;
009a: 18 8b ff 00 00             ; DICTP #NEG (ff8b)
009f: 01 a5 00 00 00             ; LITERAL 165 (0x00a5)
00a4: 0c                         ; RET
00a5: 00 00 00 00                ; dw 0x0000
;
00a9: 18 7c ff 00 00             ; DICTP #LEN (ff7c)
00ae: 01 b4 00 00 00             ; LITERAL 180 (0x00b4)
00b3: 0c                         ; RET
00b4: 05 00 00 00                ; dw 0x0005
;
00b8: 18 69 ff 00 00             ; DICTP INPUT-FP (ff69)
00bd: 01 c3 00 00 00             ; LITERAL 195 (0x00c3)
00c2: 0c                         ; RET
00c3: 00 00 00 00                ; dw 0x0000
;
00c7: 18 5c ff 00 00             ; DICTP T1 (ff5c)
00cc: 01 d2 00 00 00             ; LITERAL 210 (0x00d2)
00d1: 0c                         ; RET
00d2: 00 00 00 00                ; dw 0x0000
;
00d6: 18 4f ff 00 00             ; DICTP T2 (ff4f)
00db: 01 e1 00 00 00             ; LITERAL 225 (0x00e1)
00e0: 0c                         ; RET
00e1: 00 00 00 00                ; dw 0x0000
;
00e5: 18 42 ff 00 00             ; DICTP T3 (ff42)
00ea: 01 f0 00 00 00             ; LITERAL 240 (0x00f0)
00ef: 0c                         ; RET
00f0: 00 00 00 00                ; dw 0x0000
;
00f4: 18 33 ff 00 00             ; DICTP CELL (ff33)
00f9: 0e 04 0c 18 24             ; LITERAL 605555716 (0x24180c04)
00fe: ff                         ; RET
00ff: 00 00 0b 40                ; dw 0x400b0000
;
0103: 00                         ; RESET
0104: 00                         ; RESET
0105: 00                         ; RESET
0106: 02                         ; FETCH
0107: 0c                         ; RET
;
0108: 18 15 ff 00 00             ; DICTP LAST (ff15)
010d: 0b 4f 00 00 00             ; CALL (LAST) (004f)
0112: 02                         ; FETCH
0113: 0c                         ; RET
;
0114: 18 08 ff 00 00             ; DICTP C, (ff08)
0119: 0b fc 00 00 00             ; CALL HERE (00fc)
011e: 10                         ; CSTORE
011f: 0b fc 00 00 00             ; CALL HERE (00fc)
0124: 2c                         ; INC
0125: 0b 40 00 00 00             ; CALL (HERE) (0040)
012a: 03                         ; STORE
012b: 0c                         ; RET
;
012c: 18 fc fe 00 00             ; DICTP , (fefc)
0131: 0b fc 00 00 00             ; CALL HERE (00fc)
0136: 03                         ; STORE
0137: 0b fc 00 00 00             ; CALL HERE (00fc)
013c: 0e 04                      ; CLITERAL 4
013e: 11                         ; ADD
013f: 0b 40 00 00 00             ; CALL (HERE) (0040)
0144: 03                         ; STORE
0145: 0c                         ; RET
;
0146: 18 f0 fe 00 00             ; DICTP [ (fef0)
014b: 0e 00                      ; CLITERAL 0
014d: 0b 6d 00 00 00             ; CALL STATE (006d)
0152: 03                         ; STORE
0153: 0c                         ; RET
;
0154: 18 e4 fe 00 00             ; DICTP ] (fee4)
0159: 0e 01                      ; CLITERAL 1
015b: 0b 6d 00 00 00             ; CALL STATE (006d)
0160: 03                         ; STORE
0161: 0c                         ; RET
;
0162: 18 d2 fe 00 00             ; DICTP LITERAL (fed2)
0167: 0e 01                      ; CLITERAL 1
0169: 0b 14 01 00 00             ; CALL C, (0114)
016e: 0c                         ; RET
;
016f: 18 c6 fe 00 00             ; DICTP @ (fec6)
0174: 02                         ; FETCH
0175: 0c                         ; RET
;
0176: 18 ba fe 00 00             ; DICTP ! (feba)
017b: 03                         ; STORE
017c: 0c                         ; RET
;
017d: 18 ab fe 00 00             ; DICTP SWAP (feab)
0182: 04                         ; SWAP
0183: 0c                         ; RET
;
0184: 18 9c fe 00 00             ; DICTP DROP (fe9c)
0189: 05                         ; DROP
018a: 0c                         ; RET
;
018b: 18 8e fe 00 00             ; DICTP DUP (fe8e)
0190: 06                         ; DUP
0191: 0c                         ; RET
;
0192: 18 7b fe 00 00             ; DICTP SLITERAL (fe7b)
0197: 0e 07                      ; CLITERAL 7
0199: 0b 14 01 00 00             ; CALL C, (0114)
019e: 0c                         ; RET
;
019f: 18 6d fe 00 00             ; DICTP JMP (fe6d)
01a4: 0e 08                      ; CLITERAL 8
01a6: 0b 14 01 00 00             ; CALL C, (0114)
01ab: 0c                         ; RET
;
01ac: 18 5e fe 00 00             ; DICTP JMPZ (fe5e)
01b1: 0e 09                      ; CLITERAL 9
01b3: 0b 14 01 00 00             ; CALL C, (0114)
01b8: 0c                         ; RET
;
01b9: 18 4e fe 00 00             ; DICTP JMPNZ (fe4e)
01be: 0e 0a                      ; CLITERAL 10
01c0: 0b 14 01 00 00             ; CALL C, (0114)
01c5: 0c                         ; RET
;
01c6: 18 3f fe 00 00             ; DICTP CALL (fe3f)
01cb: 0e 0b                      ; CLITERAL 11
01cd: 0b 14 01 00 00             ; CALL C, (0114)
01d2: 0c                         ; RET
;
01d3: 18 31 fe 00 00             ; DICTP RET (fe31)
01d8: 0e 0c                      ; CLITERAL 12
01da: 0b 14 01 00 00             ; CALL C, (0114)
01df: 0c                         ; RET
;
01e0: 18 24 fe 00 00             ; DICTP OR (fe24)
01e5: 0d                         ; OR
01e6: 0c                         ; RET
;
01e7: 18 11 fe 00 00             ; DICTP CLITERAL (fe11)
01ec: 0e 0e                      ; CLITERAL 14
01ee: 0b 14 01 00 00             ; CALL C, (0114)
01f3: 0c                         ; RET
;
01f4: 18 04 fe 00 00             ; DICTP C@ (fe04)
01f9: 0f                         ; CFETCH
01fa: 0c                         ; RET
;
01fb: 18 f7 fd 00 00             ; DICTP C! (fdf7)
0200: 10                         ; CSTORE
0201: 0c                         ; RET
;
0202: 18 eb fd 00 00             ; DICTP + (fdeb)
0207: 11                         ; ADD
0208: 0c                         ; RET
;
0209: 18 df fd 00 00             ; DICTP - (fddf)
020e: 12                         ; SUB
020f: 0c                         ; RET
;
0210: 18 d3 fd 00 00             ; DICTP * (fdd3)
0215: 13                         ; MUL
0216: 0c                         ; RET
;
0217: 18 c7 fd 00 00             ; DICTP / (fdc7)
021c: 14                         ; DIV
021d: 0c                         ; RET
;
021e: 18 bb fd 00 00             ; DICTP < (fdbb)
0223: 15                         ; LT
0224: 0c                         ; RET
;
0225: 18 af fd 00 00             ; DICTP = (fdaf)
022a: 16                         ; EQ
022b: 0c                         ; RET
;
022c: 18 a3 fd 00 00             ; DICTP > (fda3)
0231: 17                         ; GT
0232: 0c                         ; RET
;
0233: 18 93 fd 00 00             ; DICTP DICTP (fd93)
0238: 0e 18                      ; CLITERAL 24
023a: 0b 14 01 00 00             ; CALL C, (0114)
023f: 0c                         ; RET
;
0240: 18 84 fd 00 00             ; DICTP EMIT (fd84)
0245: 19                         ; EMIT
0246: 0c                         ; RET
;
0247: 18 75 fd 00 00             ; DICTP OVER (fd75)
024c: 1a                         ; OVER
024d: 0c                         ; RET
;
024e: 18 63 fd 00 00             ; DICTP COMPARE (fd63)
0253: 1b                         ; COMPARE
0254: 0c                         ; RET
;
0255: 18 53 fd 00 00             ; DICTP FOPEN (fd53)
025a: 1c                         ; FOPEN
025b: 0c                         ; RET
;
025c: 18 43 fd 00 00             ; DICTP FREAD (fd43)
0261: 1d                         ; FREAD
0262: 0c                         ; RET
;
0263: 18 2f fd 00 00             ; DICTP FREADLINE (fd2f)
0268: 1e                         ; FREADLINE
0269: 0c                         ; RET
;
026a: 18 1e fd 00 00             ; DICTP FWRITE (fd1e)
026f: 1f                         ; FWRITE
0270: 0c                         ; RET
;
0271: 18 0d fd 00 00             ; DICTP FCLOSE (fd0d)
0276: 20                         ; FCLOSE
0277: 0c                         ; RET
;
0278: 18 00 fd 00 00             ; DICTP >R (fd00)
027d: 21                         ; DTOR
027e: 0c                         ; RET
;
027f: 18 f3 fc 00 00             ; DICTP R> (fcf3)
0284: 22                         ; RTOD
0285: 0c                         ; RET
;
0286: 18 e5 fc 00 00             ; DICTP COM (fce5)
028b: 23                         ; RESET
028c: 0c                         ; RET
;
028d: 18 d7 fc 00 00             ; DICTP AND (fcd7)
0292: 24                         ; AND
0293: 0c                         ; RET
;
0294: 18 c8 fc 00 00             ; DICTP PICK (fcc8)
0299: 25                         ; PICK
029a: 0c                         ; RET
;
029b: 18 b8 fc 00 00             ; DICTP DEPTH (fcb8)
02a0: 26                         ; DEPTH
02a1: 0c                         ; RET
;
02a2: 18 a8 fc 00 00             ; DICTP GETCH (fca8)
02a7: 27                         ; GETCH
02a8: 0c                         ; RET
;
02a9: 18 95 fc 00 00             ; DICTP COMPAREI (fc95)
02ae: 28                         ; COMPAREI
02af: 0c                         ; RET
;
02b0: 18 86 fc 00 00             ; DICTP /MOD (fc86)
02b5: 29                         ; SLASHMOD
02b6: 0c                         ; RET
;
02b7: 18 78 fc 00 00             ; DICTP NOT (fc78)
02bc: 2a                         ; NOT
02bd: 0c                         ; RET
;
02be: 18 67 fc 00 00             ; DICTP RFETCH (fc67)
02c3: 2b                         ; RFETCH
02c4: 0c                         ; RET
;
02c5: 18 59 fc 00 00             ; DICTP INC (fc59)
02ca: 2c                         ; INC
02cb: 0c                         ; RET
;
02cc: 18 48 fc 00 00             ; DICTP RDEPTH (fc48)
02d1: 2d                         ; RDEPTH
02d2: 0c                         ; RET
;
02d3: 18 3a fc 00 00             ; DICTP DEC (fc3a)
02d8: 2e                         ; DEC
02d9: 0c                         ; RET
;
02da: 18 28 fc 00 00             ; DICTP GETTICK (fc28)
02df: 2f                         ; GETTICK
02e0: 0c                         ; RET
;
02e1: 18 17 fc 00 00             ; DICTP LSHIFT (fc17)
02e6: 30                         ; SHIFTLEFT
02e7: 0c                         ; RET
;
02e8: 18 06 fc 00 00             ; DICTP RSHIFT (fc06)
02ed: 31                         ; SHIFTRIGHT
02ee: 0c                         ; RET
;
02ef: 18 f9 fb 00 00             ; DICTP +! (fbf9)
02f4: 32                         ; PLUSSTORE
02f5: 0c                         ; RET
;
02f6: 18 e4 fb 00 00             ; DICTP OPEN-BLOCK (fbe4)
02fb: 33                         ; RESET
02fc: 0c                         ; RET
;
02fd: 18 d6 fb 00 00             ; DICTP NOP (fbd6)
0302: fc                         ; NOP
0303: 0c                         ; RET
;
0304: 18 c6 fb 00 00             ; DICTP BREAK (fbc6)
0309: fd                         ; BREAK
030a: 0c                         ; RET
;
030b: 18 b6 fb 00 00             ; DICTP RESET (fbb6)
0310: fe                         ; RESET
0311: 0c                         ; RET
;
0312: 18 a8 fb 00 00             ; DICTP BYE (fba8)
0317: ff                         ; BYE
0318: 0c                         ; RET
;
0319: 18 97 fb 00 00             ; DICTP INLINE (fb97)
031e: 0b 08 01 00 00             ; CALL LAST (0108)
0323: 0e 02                      ; CLITERAL 2
0325: 0e 04                      ; CLITERAL 4
0327: 13                         ; MUL
0328: 11                         ; ADD
0329: 06                         ; DUP
032a: 0f                         ; CFETCH
032b: 0e 02                      ; CLITERAL 2
032d: 0d                         ; OR
032e: 04                         ; SWAP
032f: 10                         ; CSTORE
0330: 0c                         ; RET
;
0331: 18 83 fb 00 00             ; DICTP IMMEDIATE (fb83)
0336: 0b 08 01 00 00             ; CALL LAST (0108)
033b: 0e 02                      ; CLITERAL 2
033d: 0e 04                      ; CLITERAL 4
033f: 13                         ; MUL
0340: 11                         ; ADD
0341: 06                         ; DUP
0342: 0f                         ; CFETCH
0343: 0e 01                      ; CLITERAL 1
0345: 0d                         ; OR
0346: 04                         ; SWAP
0347: 10                         ; CSTORE
0348: 0c                         ; RET
;
0349: 18 73 fb 00 00             ; DICTP CELLS (fb73)
034e: 0e 04                      ; CLITERAL 4
0350: 13                         ; MUL
0351: 0c                         ; RET
;
0352: 18 5a fb 00 00             ; DICTP FLAG_IMMEDIATE (fb5a)
0357: 0e 01                      ; CLITERAL 1
0359: 0c                         ; RET
;
035a: 18 44 fb 00 00             ; DICTP FLAG_INLINE (fb44)
035f: 0e 02                      ; CLITERAL 2
0361: 0c                         ; RET
;
0362: 18 36 fb 00 00             ; DICTP HEX (fb36)
0367: 0e 10                      ; CLITERAL 16
0369: 0b 5e 00 00 00             ; CALL BASE (005e)
036e: 03                         ; STORE
036f: 0c                         ; RET
;
0370: 18 24 fb 00 00             ; DICTP DECIMAL (fb24)
0375: 0e 0a                      ; CLITERAL 10
0377: 0b 5e 00 00 00             ; CALL BASE (005e)
037c: 03                         ; STORE
037d: 0c                         ; RET
;
037e: 18 14 fb 00 00             ; DICTP OCTAL (fb14)
0383: 0e 08                      ; CLITERAL 8
0385: 0b 5e 00 00 00             ; CALL BASE (005e)
038a: 03                         ; STORE
038b: 0c                         ; RET
;
038c: 18 03 fb 00 00             ; DICTP BINARY (fb03)
0391: 0e 02                      ; CLITERAL 2
0393: 0b 5e 00 00 00             ; CALL BASE (005e)
0398: 03                         ; STORE
0399: 0c                         ; RET
;
039a: 18 f6 fa 00 00             ; DICTP ON (faf6)
039f: 0e 01                      ; CLITERAL 1
03a1: 04                         ; SWAP
03a2: 03                         ; STORE
03a3: 0c                         ; RET
;
03a4: 18 e8 fa 00 00             ; DICTP OFF (fae8)
03a9: 0e 00                      ; CLITERAL 0
03ab: 04                         ; SWAP
03ac: 03                         ; STORE
03ad: 0c                         ; RET
;
03ae: 18 d3 fa 00 00             ; DICTP ?COMPILING (fad3)
03b3: 0b 6d 00 00 00             ; CALL STATE (006d)
03b8: 02                         ; FETCH
03b9: 0c                         ; RET
;
03ba: 18 c6 fa 00 00             ; DICTP IF (fac6)
03bf: 0b ae 03 00 00             ; CALL ?COMPILING (03ae)
03c4: 09 da 03 00 00             ; JMPZ 03da
03c9: 0b ac 01 00 00             ; CALL JMPZ (01ac)
03ce: 0b fc 00 00 00             ; CALL HERE (00fc)
03d3: 0e 00                      ; CLITERAL 0
03d5: 0b 2c 01 00 00             ; CALL , (012c)
03da: 0c                         ; RET
;
03db: 18 b7 fa 00 00             ; DICTP ELSE (fab7)
03e0: 0b ae 03 00 00             ; CALL ?COMPILING (03ae)
03e5: 09 03 04 00 00             ; JMPZ 0403
03ea: 0b 9f 01 00 00             ; CALL JMP (019f)
03ef: 0b fc 00 00 00             ; CALL HERE (00fc)
03f4: 0e 00                      ; CLITERAL 0
03f6: 0b 2c 01 00 00             ; CALL , (012c)
03fb: 04                         ; SWAP
03fc: 0b fc 00 00 00             ; CALL HERE (00fc)
0401: 04                         ; SWAP
0402: 03                         ; STORE
0403: 0c                         ; RET
;
0404: 18 a8 fa 00 00             ; DICTP THEN (faa8)
0409: 0b ae 03 00 00             ; CALL ?COMPILING (03ae)
040e: 09 1a 04 00 00             ; JMPZ 041a
0413: 0b fc 00 00 00             ; CALL HERE (00fc)
0418: 04                         ; SWAP
0419: 03                         ; STORE
041a: 0c                         ; RET
;
041b: 18 98 fa 00 00             ; DICTP BEGIN (fa98)
0420: 0b ae 03 00 00             ; CALL ?COMPILING (03ae)
0425: 09 2f 04 00 00             ; JMPZ 042f
042a: 0b fc 00 00 00             ; CALL HERE (00fc)
042f: 0c                         ; RET
;
0430: 18 88 fa 00 00             ; DICTP AGAIN (fa88)
0435: 0b ae 03 00 00             ; CALL ?COMPILING (03ae)
043a: 09 49 04 00 00             ; JMPZ 0449
043f: 0b 9f 01 00 00             ; CALL JMP (019f)
0444: 0b 2c 01 00 00             ; CALL , (012c)
0449: 0c                         ; RET
;
044a: 18 78 fa 00 00             ; DICTP WHILE (fa78)
044f: 0b ae 03 00 00             ; CALL ?COMPILING (03ae)
0454: 09 63 04 00 00             ; JMPZ 0463
0459: 0b b9 01 00 00             ; CALL JMPNZ (01b9)
045e: 0b 2c 01 00 00             ; CALL , (012c)
0463: 0c                         ; RET
;
0464: 18 68 fa 00 00             ; DICTP UNTIL (fa68)
0469: 0b ae 03 00 00             ; CALL ?COMPILING (03ae)
046e: 09 7d 04 00 00             ; JMPZ 047d
0473: 0b ac 01 00 00             ; CALL JMPZ (01ac)
0478: 0b 2c 01 00 00             ; CALL , (012c)
047d: 0c                         ; RET
;
047e: 18 58 fa 00 00             ; DICTP LEAVE (fa58)
0483: 0b ae 03 00 00             ; CALL ?COMPILING (03ae)
0488: 09 92 04 00 00             ; JMPZ 0492
048d: 0b d3 01 00 00             ; CALL RET (01d3)
0492: 0c                         ; RET
;
0493: 18 47 fa 00 00             ; DICTP MEM_SZ (fa47)
0498: 0b 7c 00 00 00             ; CALL (MEM_SZ) (007c)
049d: 02                         ; FETCH
049e: 0c                         ; RET
;
049f: 18 3a fa 00 00             ; DICTP R@ (fa3a)
04a4: 2b                         ; RFETCH
04a5: 0c                         ; RET
;
04a6: 18 2a fa 00 00             ; DICTP RDROP (fa2a)
04ab: 22                         ; RTOD
04ac: 05                         ; DROP
04ad: 0c                         ; RET
;
04ae: 18 1b fa 00 00             ; DICTP ?DUP (fa1b)
04b3: 06                         ; DUP
04b4: 09 ba 04 00 00             ; JMPZ 04ba
04b9: 06                         ; DUP
04ba: 0c                         ; RET
;
04bb: 18 0c fa 00 00             ; DICTP 2DUP (fa0c)
04c0: 1a                         ; OVER
04c1: 1a                         ; OVER
04c2: 0c                         ; RET
;
04c3: 18 fc f9 00 00             ; DICTP 2DROP (f9fc)
04c8: 05                         ; DROP
04c9: 05                         ; DROP
04ca: 0c                         ; RET
;
04cb: 18 ed f9 00 00             ; DICTP TUCK (f9ed)
04d0: 04                         ; SWAP
04d1: 1a                         ; OVER
04d2: 0c                         ; RET
;
04d3: 18 df f9 00 00             ; DICTP NIP (f9df)
04d8: 04                         ; SWAP
04d9: 05                         ; DROP
04da: 0c                         ; RET
;
04db: 18 d1 f9 00 00             ; DICTP ROT (f9d1)
04e0: 21                         ; DTOR
04e1: 04                         ; SWAP
04e2: 22                         ; RTOD
04e3: 04                         ; SWAP
04e4: 0c                         ; RET
;
04e5: 18 c2 f9 00 00             ; DICTP -ROT (f9c2)
04ea: 04                         ; SWAP
04eb: 21                         ; DTOR
04ec: 04                         ; SWAP
04ed: 22                         ; RTOD
04ee: 0c                         ; RET
;
04ef: 18 b6 f9 00 00             ; DICTP / (f9b6)
04f4: 29                         ; SLASHMOD
04f5: 04                         ; SWAP
04f6: 05                         ; DROP
04f7: 0c                         ; RET
;
04f8: 18 a8 f9 00 00             ; DICTP MOD (f9a8)
04fd: 29                         ; SLASHMOD
04fe: 05                         ; DROP
04ff: 0c                         ; RET
;
0500: 18 9b f9 00 00             ; DICTP 1+ (f99b)
0505: 2c                         ; INC
0506: 0c                         ; RET
;
0507: 18 8e f9 00 00             ; DICTP 1- (f98e)
050c: 2e                         ; DEC
050d: 0c                         ; RET
;
050e: 18 81 f9 00 00             ; DICTP 2* (f981)
0513: 0e 02                      ; CLITERAL 2
0515: 13                         ; MUL
0516: 0c                         ; RET
;
0517: 18 74 f9 00 00             ; DICTP 2/ (f974)
051c: 0e 02                      ; CLITERAL 2
051e: 29                         ; SLASHMOD
051f: 04                         ; SWAP
0520: 05                         ; DROP
0521: 0c                         ; RET
;
0522: 18 67 f9 00 00             ; DICTP += (f967)
0527: 1a                         ; OVER
0528: 02                         ; FETCH
0529: 11                         ; ADD
052a: 04                         ; SWAP
052b: 03                         ; STORE
052c: 0c                         ; RET
;
052d: 18 5a f9 00 00             ; DICTP -= (f95a)
0532: 1a                         ; OVER
0533: 02                         ; FETCH
0534: 04                         ; SWAP
0535: 12                         ; SUB
0536: 04                         ; SWAP
0537: 03                         ; STORE
0538: 0c                         ; RET
;
0539: 18 4d f9 00 00             ; DICTP -! (f94d)
053e: 04                         ; SWAP
053f: 1a                         ; OVER
0540: 02                         ; FETCH
0541: 04                         ; SWAP
0542: 12                         ; SUB
0543: 04                         ; SWAP
0544: 03                         ; STORE
0545: 0c                         ; RET
;
0546: 18 40 f9 00 00             ; DICTP ++ (f940)
054b: 06                         ; DUP
054c: 02                         ; FETCH
054d: 2c                         ; INC
054e: 04                         ; SWAP
054f: 03                         ; STORE
0550: 0c                         ; RET
;
0551: 18 33 f9 00 00             ; DICTP -- (f933)
0556: 06                         ; DUP
0557: 02                         ; FETCH
0558: 2e                         ; DEC
0559: 04                         ; SWAP
055a: 03                         ; STORE
055b: 0c                         ; RET
;
055c: 18 25 f9 00 00             ; DICTP C++ (f925)
0561: 06                         ; DUP
0562: 0f                         ; CFETCH
0563: 2c                         ; INC
0564: 04                         ; SWAP
0565: 10                         ; CSTORE
0566: 0c                         ; RET
;
0567: 18 17 f9 00 00             ; DICTP C-- (f917)
056c: 06                         ; DUP
056d: 0f                         ; CFETCH
056e: 2e                         ; DEC
056f: 04                         ; SWAP
0570: 10                         ; CSTORE
0571: 0c                         ; RET
;
0572: 18 0a f9 00 00             ; DICTP 0= (f90a)
0577: 2a                         ; NOT
0578: 0c                         ; RET
;
0579: 18 fd f8 00 00             ; DICTP <> (f8fd)
057e: 16                         ; EQ
057f: 2a                         ; NOT
0580: 0c                         ; RET
;
0581: 18 f0 f8 00 00             ; DICTP <= (f8f0)
0586: 17                         ; GT
0587: 2a                         ; NOT
0588: 0c                         ; RET
;
0589: 18 e3 f8 00 00             ; DICTP >= (f8e3)
058e: 15                         ; LT
058f: 2a                         ; NOT
0590: 0c                         ; RET
;
0591: 18 d4 f8 00 00             ; DICTP TRUE (f8d4)
0596: 01 ff ff ff ff             ; LITERAL -1 (ffffffff)
059b: 0c                         ; RET
;
059c: 18 c4 f8 00 00             ; DICTP FALSE (f8c4)
05a1: 0e 00                      ; CLITERAL 0
05a3: 0c                         ; RET
;
05a4: 18 b4 f8 00 00             ; DICTP COUNT (f8b4)
05a9: 06                         ; DUP
05aa: 2c                         ; INC
05ab: 04                         ; SWAP
05ac: 0f                         ; CFETCH
05ad: 0c                         ; RET
;
05ae: 18 a5 f8 00 00             ; DICTP TYPE (f8a5)
05b3: 06                         ; DUP
05b4: 2a                         ; NOT
05b5: 09 bd 05 00 00             ; JMPZ 05bd
05ba: 05                         ; DROP
05bb: 05                         ; DROP
05bc: 0c                         ; RET
05bd: 04                         ; SWAP
05be: 06                         ; DUP
05bf: 0f                         ; CFETCH
05c0: 19                         ; EMIT
05c1: 2c                         ; INC
05c2: 04                         ; SWAP
05c3: 2e                         ; DEC
05c4: 08 b3 05 00 00             ; JMP 05b3
05c9: 0c                         ; RET
;
05ca: 18 98 f8 00 00             ; DICTP CT (f898)
05cf: 0b a4 05 00 00             ; CALL COUNT (05a4)
05d4: 0b ae 05 00 00             ; CALL TYPE (05ae)
05d9: 0c                         ; RET
;
05da: 18 8c f8 00 00             ; DICTP \ (f88c)
05df: 0e 00                      ; CLITERAL 0
05e1: 0b 8b 00 00 00             ; CALL >IN (008b)
05e6: 02                         ; FETCH
05e7: 10                         ; CSTORE
05e8: 0c                         ; RET
;
05e9: 18 80 f8 00 00             ; DICTP ( (f880)
05ee: 0b 8b 00 00 00             ; CALL >IN (008b)
05f3: 02                         ; FETCH
05f4: 0f                         ; CFETCH
05f5: 06                         ; DUP
05f6: 2a                         ; NOT
05f7: 09 18 06 00 00             ; JMPZ 0618
05fc: 07 13 6d 69 73 73 69 6e 67 20 63 6c 6f 73 69 6e 67 20 27 29 27 00 ; SLITERAL (05fd) [missing closing ')']
0612: 0b ca 05 00 00             ; CALL CT (05ca)
0617: fe                         ; RESET
0618: 0b 8b 00 00 00             ; CALL >IN (008b)
061d: 06                         ; DUP
061e: 02                         ; FETCH
061f: 2c                         ; INC
0620: 04                         ; SWAP
0621: 03                         ; STORE
0622: 0e 29                      ; CLITERAL 41
0624: 16                         ; EQ
0625: 09 ee 05 00 00             ; JMPZ 05ee
062a: 0c                         ; RET
;
062b: 18 70 f8 00 00             ; DICTP SPACE (f870)
0630: 0e 20                      ; CLITERAL 32
0632: 19                         ; EMIT
0633: 0c                         ; RET
;
0634: 18 63 f8 00 00             ; DICTP BL (f863)
0639: 0e 20                      ; CLITERAL 32
063b: 19                         ; EMIT
063c: 0c                         ; RET
;
063d: 18 54 f8 00 00             ; DICTP CRLF (f854)
0642: 0e 0d                      ; CLITERAL 13
0644: 19                         ; EMIT
0645: 0e 0a                      ; CLITERAL 10
0647: 19                         ; EMIT
0648: 0c                         ; RET
;
0649: 18 47 f8 00 00             ; DICTP CR (f847)
064e: 0e 0d                      ; CLITERAL 13
0650: 19                         ; EMIT
0651: 0e 0a                      ; CLITERAL 10
0653: 19                         ; EMIT
0654: 0c                         ; RET
;
0655: 18 35 f8 00 00             ; DICTP BETWEEN (f835)
065a: 0e 02                      ; CLITERAL 2
065c: 25                         ; PICK
065d: 15                         ; LT
065e: 09 68 06 00 00             ; JMPZ 0668
0663: 05                         ; DROP
0664: 05                         ; DROP
0665: 0e 00                      ; CLITERAL 0
0667: 0c                         ; RET
0668: 15                         ; LT
0669: 2a                         ; NOT
066a: 0c                         ; RET
;
066b: 18 24 f8 00 00             ; DICTP skipWS (f824)
0670: 06                         ; DUP
0671: 0f                         ; CFETCH
0672: 06                         ; DUP
0673: 09 8c 06 00 00             ; JMPZ 068c
0678: 0e 20                      ; CLITERAL 32
067a: 17                         ; GT
067b: 09 86 06 00 00             ; JMPZ 0686
0680: 0c                         ; RET
0681: 08 87 06 00 00             ; JMP 0687
0686: 2c                         ; INC
0687: 08 8e 06 00 00             ; JMP 068e
068c: 05                         ; DROP
068d: 0c                         ; RET
068e: 08 70 06 00 00             ; JMP 0670
0693: 0c                         ; RET
;
0694: 18 11 f8 00 00             ; DICTP to-upper (f811)
0699: 06                         ; DUP
069a: 0e 61                      ; CLITERAL 97
069c: 15                         ; LT
069d: 09 a3 06 00 00             ; JMPZ 06a3
06a2: 0c                         ; RET
06a3: 06                         ; DUP
06a4: 0e 7a                      ; CLITERAL 122
06a6: 17                         ; GT
06a7: 09 ad 06 00 00             ; JMPZ 06ad
06ac: 0c                         ; RET
06ad: 0e 20                      ; CLITERAL 32
06af: 12                         ; SUB
06b0: 0c                         ; RET
;
06b1: 18 fe f7 00 00             ; DICTP to-lower (f7fe)
06b6: 06                         ; DUP
06b7: 0e 41                      ; CLITERAL 65
06b9: 15                         ; LT
06ba: 09 c0 06 00 00             ; JMPZ 06c0
06bf: 0c                         ; RET
06c0: 06                         ; DUP
06c1: 0e 5a                      ; CLITERAL 90
06c3: 17                         ; GT
06c4: 09 ca 06 00 00             ; JMPZ 06ca
06c9: 0c                         ; RET
06ca: 0e 20                      ; CLITERAL 32
06cc: 11                         ; ADD
06cd: 0c                         ; RET
;
06ce: 18 ea f7 00 00             ; DICTP char-find (f7ea)
06d3: 04                         ; SWAP
06d4: 0b d6 00 00 00             ; CALL T2 (00d6)
06d9: 03                         ; STORE
06da: 0e 00                      ; CLITERAL 0
06dc: 21                         ; DTOR
06dd: 0b a4 05 00 00             ; CALL COUNT (05a4)
06e2: 06                         ; DUP
06e3: 2a                         ; NOT
06e4: 09 f3 06 00 00             ; JMPZ 06f3
06e9: 05                         ; DROP
06ea: 05                         ; DROP
06eb: 22                         ; RTOD
06ec: 05                         ; DROP
06ed: 01 ff ff ff ff             ; LITERAL -1 (ffffffff)
06f2: 0c                         ; RET
06f3: 1a                         ; OVER
06f4: 0f                         ; CFETCH
06f5: 0b d6 00 00 00             ; CALL T2 (00d6)
06fa: 02                         ; FETCH
06fb: 16                         ; EQ
06fc: 09 05 07 00 00             ; JMPZ 0705
0701: 05                         ; DROP
0702: 05                         ; DROP
0703: 22                         ; RTOD
0704: 0c                         ; RET
0705: 22                         ; RTOD
0706: 2c                         ; INC
0707: 21                         ; DTOR
0708: 2e                         ; DEC
0709: 04                         ; SWAP
070a: 2c                         ; INC
070b: 04                         ; SWAP
070c: 08 e2 06 00 00             ; JMP 06e2
0711: 0c                         ; RET
;
0712: 18 d5 f7 00 00             ; DICTP getOneWord (f7d5)
0717: 06                         ; DUP
0718: 21                         ; DTOR
0719: 21                         ; DTOR
071a: 2b                         ; RFETCH
071b: 0f                         ; CFETCH
071c: 0e 20                      ; CLITERAL 32
071e: 17                         ; GT
071f: 09 2c 07 00 00             ; JMPZ 072c
0724: 22                         ; RTOD
0725: 2c                         ; INC
0726: 21                         ; DTOR
0727: 08 3e 07 00 00             ; JMP 073e
072c: 2b                         ; RFETCH
072d: 0f                         ; CFETCH
072e: 09 3a 07 00 00             ; JMPZ 073a
0733: 0e 00                      ; CLITERAL 0
0735: 2b                         ; RFETCH
0736: 10                         ; CSTORE
0737: 22                         ; RTOD
0738: 2c                         ; INC
0739: 21                         ; DTOR
073a: 22                         ; RTOD
073b: 22                         ; RTOD
073c: 04                         ; SWAP
073d: 0c                         ; RET
073e: 08 1a 07 00 00             ; JMP 071a
0743: 0c                         ; RET
;
0744: 18 c1 f7 00 00             ; DICTP DICT>NEXT (f7c1)
0749: 0c                         ; RET
;
074a: 18 af f7 00 00             ; DICTP DICT>XT (f7af)
074f: 0e 04                      ; CLITERAL 4
0751: 11                         ; ADD
0752: 0c                         ; RET
;
0753: 18 9a f7 00 00             ; DICTP DICT>FLAGS (f79a)
0758: 0e 02                      ; CLITERAL 2
075a: 0e 04                      ; CLITERAL 4
075c: 13                         ; MUL
075d: 11                         ; ADD
075e: 0c                         ; RET
;
075f: 18 86 f7 00 00             ; DICTP DICT>NAME (f786)
0764: 0b 53 07 00 00             ; CALL DICT>FLAGS (0753)
0769: 2c                         ; INC
076a: 0c                         ; RET
;
076b: 18 72 f7 00 00             ; DICTP NEXT>DICT (f772)
0770: 0c                         ; RET
;
0771: 18 60 f7 00 00             ; DICTP XT>DICT (f760)
0776: 0e 04                      ; CLITERAL 4
0778: 12                         ; SUB
0779: 0c                         ; RET
;
077a: 18 4b f7 00 00             ; DICTP FLAGS>DICT (f74b)
077f: 0e 02                      ; CLITERAL 2
0781: 0e 04                      ; CLITERAL 4
0783: 13                         ; MUL
0784: 12                         ; SUB
0785: 0c                         ; RET
;
0786: 18 37 f7 00 00             ; DICTP NAME>DICT (f737)
078b: 2e                         ; DEC
078c: 0e 02                      ; CLITERAL 2
078e: 0e 04                      ; CLITERAL 4
0790: 13                         ; MUL
0791: 12                         ; SUB
0792: 0c                         ; RET
;
0793: 18 22 f7 00 00             ; DICTP DICT.GetXT (f722)
0798: 0b 4a 07 00 00             ; CALL DICT>XT (074a)
079d: 02                         ; FETCH
079e: 0c                         ; RET
;
079f: 18 0a f7 00 00             ; DICTP DICT.GetFLAGS (f70a)
07a4: 0b 53 07 00 00             ; CALL DICT>FLAGS (0753)
07a9: 0f                         ; CFETCH
07aa: 0c                         ; RET
;
07ab: 18 f5 f6 00 00             ; DICTP DICTP>NAME (f6f5)
07b0: 2c                         ; INC
07b1: 02                         ; FETCH
07b2: 0b 5f 07 00 00             ; CALL DICT>NAME (075f)
07b7: 0c                         ; RET
;
07b8: 18 df f6 00 00             ; DICTP XT.GetDICTP (f6df)
07bd: 06                         ; DUP
07be: 0f                         ; CFETCH
07bf: 0e 18                      ; CLITERAL 24
07c1: 16                         ; EQ
07c2: 09 ce 07 00 00             ; JMPZ 07ce
07c7: 2c                         ; INC
07c8: 02                         ; FETCH
07c9: 08 d0 07 00 00             ; JMP 07d0
07ce: 05                         ; DROP
07cf: fe                         ; RESET
07d0: 0c                         ; RET
;
07d1: 18 c2 f6 00 00             ; DICTP FLAGS.ISIMMEDIATE? (f6c2)
07d6: 0e 01                      ; CLITERAL 1
07d8: 24                         ; AND
07d9: 0c                         ; RET
;
07da: 18 a8 f6 00 00             ; DICTP FLAGS.ISINLINE? (f6a8)
07df: 0e 02                      ; CLITERAL 2
07e1: 24                         ; AND
07e2: 0c                         ; RET
;
07e3: 18 8c f6 00 00             ; DICTP DICT.GetIMMEDIATE (f68c)
07e8: 0b 9f 07 00 00             ; CALL DICT.GetFLAGS (079f)
07ed: 0b d1 07 00 00             ; CALL FLAGS.ISIMMEDIATE? (07d1)
07f2: 0c                         ; RET
;
07f3: 18 73 f6 00 00             ; DICTP DICT.GetINLINE (f673)
07f8: 0b 9f 07 00 00             ; CALL DICT.GetFLAGS (079f)
07fd: 0b da 07 00 00             ; CALL FLAGS.ISINLINE? (07da)
0802: 0c                         ; RET
;
0803: 18 5e f6 00 00             ; DICTP findInDict (f65e)
0808: 0b 08 01 00 00             ; CALL LAST (0108)
080d: 21                         ; DTOR
080e: 2b                         ; RFETCH
080f: 06                         ; DUP
0810: 09 37 08 00 00             ; JMPZ 0837
0815: 0b 5f 07 00 00             ; CALL DICT>NAME (075f)
081a: 2c                         ; INC
081b: 1a                         ; OVER
081c: 28                         ; COMPAREI
081d: 09 32 08 00 00             ; JMPZ 0832
0822: 05                         ; DROP
0823: 2b                         ; RFETCH
0824: 0b 93 07 00 00             ; CALL DICT.GetXT (0793)
0829: 22                         ; RTOD
082a: 0b 9f 07 00 00             ; CALL DICT.GetFLAGS (079f)
082f: 0e 01                      ; CLITERAL 1
0831: 0c                         ; RET
0832: 08 3f 08 00 00             ; JMP 083f
0837: 05                         ; DROP
0838: 05                         ; DROP
0839: 22                         ; RTOD
083a: 0e 00                      ; CLITERAL 0
083c: 0e 00                      ; CLITERAL 0
083e: 0c                         ; RET
083f: 22                         ; RTOD
0840: 02                         ; FETCH
0841: 21                         ; DTOR
0842: 08 0e 08 00 00             ; JMP 080e
0847: 0c                         ; RET
;
0848: 18 47 f6 00 00             ; DICTP is-num-char? (f647)
084d: 0b 94 06 00 00             ; CALL to-upper (0694)
0852: 04                         ; SWAP
0853: 21                         ; DTOR
0854: 07 10 30 31 32 33 34 35 36 37 38 39 41 42 43 44 45 46 00 ; SLITERAL (0855) [0123456789ABCDEF]
0867: 0b ce 06 00 00             ; CALL char-find (06ce)
086c: 06                         ; DUP
086d: 0e 00                      ; CLITERAL 0
086f: 15                         ; LT
0870: 09 7a 08 00 00             ; JMPZ 087a
0875: 0e 00                      ; CLITERAL 0
0877: 22                         ; RTOD
0878: 05                         ; DROP
0879: 0c                         ; RET
087a: 22                         ; RTOD
087b: 2e                         ; DEC
087c: 1a                         ; OVER
087d: 15                         ; LT
087e: 09 8a 08 00 00             ; JMPZ 088a
0883: 0e 00                      ; CLITERAL 0
0885: 08 8c 08 00 00             ; JMP 088c
088a: 0e 01                      ; CLITERAL 1
088c: 0c                         ; RET
;
088d: 18 36 f6 00 00             ; DICTP NEGATE (f636)
0892: 0e 00                      ; CLITERAL 0
0894: 04                         ; SWAP
0895: 12                         ; SUB
0896: 0c                         ; RET
;
0897: 18 28 f6 00 00             ; DICTP ABS (f628)
089c: 06                         ; DUP
089d: 0e 00                      ; CLITERAL 0
089f: 15                         ; LT
08a0: 09 aa 08 00 00             ; JMPZ 08aa
08a5: 0b 8d 08 00 00             ; CALL NEGATE (088d)
08aa: 0c                         ; RET
;
08ab: 18 13 f6 00 00             ; DICTP parse-char (f613)
08b0: 06                         ; DUP
08b1: 2c                         ; INC
08b2: 0f                         ; CFETCH
08b3: 0e 27                      ; CLITERAL 39
08b5: 16                         ; EQ
08b6: 2a                         ; NOT
08b7: 09 bf 08 00 00             ; JMPZ 08bf
08bc: 0e 00                      ; CLITERAL 0
08be: 0c                         ; RET
08bf: 06                         ; DUP
08c0: 0e 02                      ; CLITERAL 2
08c2: 11                         ; ADD
08c3: 0f                         ; CFETCH
08c4: 09 d0 08 00 00             ; JMPZ 08d0
08c9: 0e 00                      ; CLITERAL 0
08cb: 08 d3 08 00 00             ; JMP 08d3
08d0: 0f                         ; CFETCH
08d1: 0e 01                      ; CLITERAL 1
08d3: 0c                         ; RET
;
08d4: 18 ff f5 00 00             ; DICTP isNumber? (f5ff)
08d9: 06                         ; DUP
08da: 0f                         ; CFETCH
08db: 0e 27                      ; CLITERAL 39
08dd: 16                         ; EQ
08de: 09 ea 08 00 00             ; JMPZ 08ea
08e3: 2c                         ; INC
08e4: 0b ab 08 00 00             ; CALL parse-char (08ab)
08e9: 0c                         ; RET
08ea: 0b 5e 00 00 00             ; CALL BASE (005e)
08ef: 02                         ; FETCH
08f0: 0b e5 00 00 00             ; CALL T3 (00e5)
08f5: 03                         ; STORE
08f6: 06                         ; DUP
08f7: 0f                         ; CFETCH
08f8: 0e 24                      ; CLITERAL 36
08fa: 16                         ; EQ
08fb: 09 09 09 00 00             ; JMPZ 0909
0900: 2c                         ; INC
0901: 0e 10                      ; CLITERAL 16
0903: 0b e5 00 00 00             ; CALL T3 (00e5)
0908: 03                         ; STORE
0909: 06                         ; DUP
090a: 0f                         ; CFETCH
090b: 0e 23                      ; CLITERAL 35
090d: 16                         ; EQ
090e: 09 1c 09 00 00             ; JMPZ 091c
0913: 2c                         ; INC
0914: 0e 0a                      ; CLITERAL 10
0916: 0b e5 00 00 00             ; CALL T3 (00e5)
091b: 03                         ; STORE
091c: 06                         ; DUP
091d: 0f                         ; CFETCH
091e: 0e 25                      ; CLITERAL 37
0920: 16                         ; EQ
0921: 09 2f 09 00 00             ; JMPZ 092f
0926: 2c                         ; INC
0927: 0e 02                      ; CLITERAL 2
0929: 0b e5 00 00 00             ; CALL T3 (00e5)
092e: 03                         ; STORE
092f: 0b 9a 00 00 00             ; CALL #NEG (009a)
0934: 0b a4 03 00 00             ; CALL OFF (03a4)
0939: 0b e5 00 00 00             ; CALL T3 (00e5)
093e: 02                         ; FETCH
093f: 0e 0a                      ; CLITERAL 10
0941: 16                         ; EQ
0942: 09 59 09 00 00             ; JMPZ 0959
0947: 06                         ; DUP
0948: 0f                         ; CFETCH
0949: 0e 2d                      ; CLITERAL 45
094b: 16                         ; EQ
094c: 06                         ; DUP
094d: 0b 9a 00 00 00             ; CALL #NEG (009a)
0952: 03                         ; STORE
0953: 09 59 09 00 00             ; JMPZ 0959
0958: 2c                         ; INC
0959: 0e 00                      ; CLITERAL 0
095b: 21                         ; DTOR
095c: 06                         ; DUP
095d: 0f                         ; CFETCH
095e: 06                         ; DUP
095f: 0e 00                      ; CLITERAL 0
0961: 16                         ; EQ
0962: 09 7d 09 00 00             ; JMPZ 097d
0967: 05                         ; DROP
0968: 05                         ; DROP
0969: 22                         ; RTOD
096a: 0b 9a 00 00 00             ; CALL #NEG (009a)
096f: 02                         ; FETCH
0970: 09 7a 09 00 00             ; JMPZ 097a
0975: 0b 8d 08 00 00             ; CALL NEGATE (088d)
097a: 0e 01                      ; CLITERAL 1
097c: 0c                         ; RET
097d: 0b e5 00 00 00             ; CALL T3 (00e5)
0982: 02                         ; FETCH
0983: 04                         ; SWAP
0984: 0b 48 08 00 00             ; CALL is-num-char? (0848)
0989: 09 9e 09 00 00             ; JMPZ 099e
098e: 22                         ; RTOD
098f: 0b e5 00 00 00             ; CALL T3 (00e5)
0994: 02                         ; FETCH
0995: 13                         ; MUL
0996: 11                         ; ADD
0997: 21                         ; DTOR
0998: 2c                         ; INC
0999: 08 a3 09 00 00             ; JMP 09a3
099e: 05                         ; DROP
099f: 22                         ; RTOD
09a0: 0e 00                      ; CLITERAL 0
09a2: 0c                         ; RET
09a3: 08 5c 09 00 00             ; JMP 095c
09a8: 0c                         ; RET
;
09a9: 18 f2 f5 00 00             ; DICTP <# (f5f2)
09ae: 0b 9a 00 00 00             ; CALL #NEG (009a)
09b3: 0b a4 03 00 00             ; CALL OFF (03a4)
09b8: 0b a9 00 00 00             ; CALL #LEN (00a9)
09bd: 0b a4 03 00 00             ; CALL OFF (03a4)
09c2: 06                         ; DUP
09c3: 0e 00                      ; CLITERAL 0
09c5: 15                         ; LT
09c6: 09 da 09 00 00             ; JMPZ 09da
09cb: 0b 8d 08 00 00             ; CALL NEGATE (088d)
09d0: 0b 9a 00 00 00             ; CALL #NEG (009a)
09d5: 0b 9a 03 00 00             ; CALL ON (039a)
09da: 0e 00                      ; CLITERAL 0
09dc: 04                         ; SWAP
09dd: 0c                         ; RET
;
09de: 18 e6 f5 00 00             ; DICTP # (f5e6)
09e3: 0b 5e 00 00 00             ; CALL BASE (005e)
09e8: 02                         ; FETCH
09e9: 29                         ; SLASHMOD
09ea: 04                         ; SWAP
09eb: 0e 30                      ; CLITERAL 48
09ed: 11                         ; ADD
09ee: 06                         ; DUP
09ef: 0e 39                      ; CLITERAL 57
09f1: 17                         ; GT
09f2: 09 fa 09 00 00             ; JMPZ 09fa
09f7: 0e 07                      ; CLITERAL 7
09f9: 11                         ; ADD
09fa: 0b a9 00 00 00             ; CALL #LEN (00a9)
09ff: 06                         ; DUP
0a00: 02                         ; FETCH
0a01: 2c                         ; INC
0a02: 04                         ; SWAP
0a03: 03                         ; STORE
0a04: 04                         ; SWAP
0a05: 0c                         ; RET
;
0a06: 18 d9 f5 00 00             ; DICTP #S (f5d9)
0a0b: 0b de 09 00 00             ; CALL # (09de)
0a10: 06                         ; DUP
0a11: 2a                         ; NOT
0a12: 09 0b 0a 00 00             ; JMPZ 0a0b
0a17: 0c                         ; RET
;
0a18: 18 cc f5 00 00             ; DICTP #> (f5cc)
0a1d: 0c                         ; RET
;
0a1e: 18 be f5 00 00             ; DICTP #P- (f5be)
0a23: 05                         ; DROP
0a24: 0b 9a 00 00 00             ; CALL #NEG (009a)
0a29: 02                         ; FETCH
0a2a: 09 32 0a 00 00             ; JMPZ 0a32
0a2f: 0e 2d                      ; CLITERAL 45
0a31: 19                         ; EMIT
0a32: 0c                         ; RET
;
0a33: 18 b1 f5 00 00             ; DICTP #P (f5b1)
0a38: 0b 1e 0a 00 00             ; CALL #P- (0a1e)
0a3d: 19                         ; EMIT
0a3e: 06                         ; DUP
0a3f: 2a                         ; NOT
0a40: 09 3d 0a 00 00             ; JMPZ 0a3d
0a45: 05                         ; DROP
0a46: 0c                         ; RET
;
0a47: 18 a3 f5 00 00             ; DICTP (.) (f5a3)
0a4c: 0b a9 09 00 00             ; CALL <# (09a9)
0a51: 0b 06 0a 00 00             ; CALL #S (0a06)
0a56: 0b 18 0a 00 00             ; CALL #> (0a18)
0a5b: 0b 33 0a 00 00             ; CALL #P (0a33)
0a60: 0c                         ; RET
;
0a61: 18 97 f5 00 00             ; DICTP . (f597)
0a66: 0b 47 0a 00 00             ; CALL (.) (0a47)
0a6b: 0e 20                      ; CLITERAL 32
0a6d: 19                         ; EMIT
0a6e: 0c                         ; RET
;
0a6f: 18 8a f5 00 00             ; DICTP .2 (f58a)
0a74: 0b a9 09 00 00             ; CALL <# (09a9)
0a79: 0b de 09 00 00             ; CALL # (09de)
0a7e: 0b de 09 00 00             ; CALL # (09de)
0a83: 0b 18 0a 00 00             ; CALL #> (0a18)
0a88: 0b 33 0a 00 00             ; CALL #P (0a33)
0a8d: 0c                         ; RET
;
0a8e: 18 7d f5 00 00             ; DICTP .3 (f57d)
0a93: 0b a9 09 00 00             ; CALL <# (09a9)
0a98: 0b de 09 00 00             ; CALL # (09de)
0a9d: 0b de 09 00 00             ; CALL # (09de)
0aa2: 0b de 09 00 00             ; CALL # (09de)
0aa7: 0b 18 0a 00 00             ; CALL #> (0a18)
0aac: 0b 33 0a 00 00             ; CALL #P (0a33)
0ab1: 0c                         ; RET
;
0ab2: 18 70 f5 00 00             ; DICTP .4 (f570)
0ab7: 0b a9 09 00 00             ; CALL <# (09a9)
0abc: 0b de 09 00 00             ; CALL # (09de)
0ac1: 0b de 09 00 00             ; CALL # (09de)
0ac6: 0b de 09 00 00             ; CALL # (09de)
0acb: 0b de 09 00 00             ; CALL # (09de)
0ad0: 0b 18 0a 00 00             ; CALL #> (0a18)
0ad5: 0b 33 0a 00 00             ; CALL #P (0a33)
0ada: 0c                         ; RET
;
0adb: 18 61 f5 00 00             ; DICTP HEX. (f561)
0ae0: 0b 5e 00 00 00             ; CALL BASE (005e)
0ae5: 02                         ; FETCH
0ae6: 04                         ; SWAP
0ae7: 0b 62 03 00 00             ; CALL HEX (0362)
0aec: 0b 47 0a 00 00             ; CALL (.) (0a47)
0af1: 0b 5e 00 00 00             ; CALL BASE (005e)
0af6: 03                         ; STORE
0af7: 0c                         ; RET
;
0af8: 18 51 f5 00 00             ; DICTP HEX.2 (f551)
0afd: 0b 5e 00 00 00             ; CALL BASE (005e)
0b02: 02                         ; FETCH
0b03: 04                         ; SWAP
0b04: 0b 62 03 00 00             ; CALL HEX (0362)
0b09: 0b 6f 0a 00 00             ; CALL .2 (0a6f)
0b0e: 0b 5e 00 00 00             ; CALL BASE (005e)
0b13: 03                         ; STORE
0b14: 0c                         ; RET
;
0b15: 18 41 f5 00 00             ; DICTP HEX.4 (f541)
0b1a: 0b 5e 00 00 00             ; CALL BASE (005e)
0b1f: 02                         ; FETCH
0b20: 04                         ; SWAP
0b21: 0b 62 03 00 00             ; CALL HEX (0362)
0b26: 0b b2 0a 00 00             ; CALL .4 (0ab2)
0b2b: 0b 5e 00 00 00             ; CALL BASE (005e)
0b30: 03                         ; STORE
0b31: 0c                         ; RET
;
0b32: 18 2e f5 00 00             ; DICTP DECIMAL. (f52e)
0b37: 0b 5e 00 00 00             ; CALL BASE (005e)
0b3c: 02                         ; FETCH
0b3d: 04                         ; SWAP
0b3e: 0b 70 03 00 00             ; CALL DECIMAL (0370)
0b43: 0b 47 0a 00 00             ; CALL (.) (0a47)
0b48: 0b 5e 00 00 00             ; CALL BASE (005e)
0b4d: 03                         ; STORE
0b4e: 0c                         ; RET
;
0b4f: 18 1a f5 00 00             ; DICTP DECIMAL.3 (f51a)
0b54: 0b 5e 00 00 00             ; CALL BASE (005e)
0b59: 02                         ; FETCH
0b5a: 04                         ; SWAP
0b5b: 0b 70 03 00 00             ; CALL DECIMAL (0370)
0b60: 0b 8e 0a 00 00             ; CALL .3 (0a8e)
0b65: 0b 5e 00 00 00             ; CALL BASE (005e)
0b6a: 03                         ; STORE
0b6b: 0c                         ; RET
;
0b6c: 18 08 f5 00 00             ; DICTP BINARY. (f508)
0b71: 0b 5e 00 00 00             ; CALL BASE (005e)
0b76: 02                         ; FETCH
0b77: 04                         ; SWAP
0b78: 0b 8c 03 00 00             ; CALL BINARY (038c)
0b7d: 0b 47 0a 00 00             ; CALL (.) (0a47)
0b82: 0b 5e 00 00 00             ; CALL BASE (005e)
0b87: 03                         ; STORE
0b88: 0c                         ; RET
;
0b89: 18 fa f4 00 00             ; DICTP MIN (f4fa)
0b8e: 1a                         ; OVER
0b8f: 1a                         ; OVER
0b90: 17                         ; GT
0b91: 09 97 0b 00 00             ; JMPZ 0b97
0b96: 04                         ; SWAP
0b97: 05                         ; DROP
0b98: 0c                         ; RET
;
0b99: 18 ec f4 00 00             ; DICTP MAX (f4ec)
0b9e: 1a                         ; OVER
0b9f: 1a                         ; OVER
0ba0: 15                         ; LT
0ba1: 09 a7 0b 00 00             ; JMPZ 0ba7
0ba6: 04                         ; SWAP
0ba7: 05                         ; DROP
0ba8: 0c                         ; RET
;
0ba9: 18 df f4 00 00             ; DICTP .S (f4df)
0bae: 0e 20                      ; CLITERAL 32
0bb0: 19                         ; EMIT
0bb1: 26                         ; DEPTH
0bb2: 0e 00                      ; CLITERAL 0
0bb4: 15                         ; LT
0bb5: 09 d8 0b 00 00             ; JMPZ 0bd8
0bba: 07 10 53 74 61 63 6b 20 75 6e 64 65 72 66 6c 6f 77 21 00 ; SLITERAL (0bbb) [Stack underflow!]
0bcd: 0b a4 05 00 00             ; CALL COUNT (05a4)
0bd2: 0b ae 05 00 00             ; CALL TYPE (05ae)
0bd7: fe                         ; RESET
0bd8: 26                         ; DEPTH
0bd9: 0e 00                      ; CLITERAL 0
0bdb: 16                         ; EQ
0bdc: 09 eb 0b 00 00             ; JMPZ 0beb
0be1: 0e 28                      ; CLITERAL 40
0be3: 19                         ; EMIT
0be4: 0e ed                      ; CLITERAL 237
0be6: 19                         ; EMIT
0be7: 0e 29                      ; CLITERAL 41
0be9: 19                         ; EMIT
0bea: 0c                         ; RET
0beb: 0e 28                      ; CLITERAL 40
0bed: 19                         ; EMIT
0bee: 0e 20                      ; CLITERAL 32
0bf0: 19                         ; EMIT
0bf1: 26                         ; DEPTH
0bf2: 2e                         ; DEC
0bf3: 21                         ; DTOR
0bf4: 2b                         ; RFETCH
0bf5: 25                         ; PICK
0bf6: 0b 61 0a 00 00             ; CALL . (0a61)
0bfb: 2b                         ; RFETCH
0bfc: 09 09 0c 00 00             ; JMPZ 0c09
0c01: 22                         ; RTOD
0c02: 2e                         ; DEC
0c03: 21                         ; DTOR
0c04: 08 0f 0c 00 00             ; JMP 0c0f
0c09: 22                         ; RTOD
0c0a: 05                         ; DROP
0c0b: 0e 29                      ; CLITERAL 41
0c0d: 19                         ; EMIT
0c0e: 0c                         ; RET
0c0f: 08 f4 0b 00 00             ; JMP 0bf4
0c14: 0c                         ; RET
;
0c15: 18 cb f4 00 00             ; DICTP .(MEM_SZ) (f4cb)
0c1a: 07 08 4d 65 6d 6f 72 79 3a 20 00 ; SLITERAL (0c1b) [Memory: ]
0c25: 0b ca 05 00 00             ; CALL CT (05ca)
0c2a: 0b 93 04 00 00             ; CALL MEM_SZ (0493)
0c2f: 06                         ; DUP
0c30: 0b db 0a 00 00             ; CALL HEX. (0adb)
0c35: 07 02 20 28 00             ; SLITERAL (0c36) [ (]
0c3a: 0b ca 05 00 00             ; CALL CT (05ca)
0c3f: 0b 47 0a 00 00             ; CALL (.) (0a47)
0c44: 07 01 29 00                ; SLITERAL (0c45) [)]
0c48: 0b ca 05 00 00             ; CALL CT (05ca)
0c4d: 0c                         ; RET
;
0c4e: 18 b9 f4 00 00             ; DICTP .(HERE) (f4b9)
0c53: 07 06 48 45 52 45 3a 20 00 ; SLITERAL (0c54) [HERE: ]
0c5c: 0b ca 05 00 00             ; CALL CT (05ca)
0c61: 0b fc 00 00 00             ; CALL HERE (00fc)
0c66: 06                         ; DUP
0c67: 0b db 0a 00 00             ; CALL HEX. (0adb)
0c6c: 07 02 20 28 00             ; SLITERAL (0c6d) [ (]
0c71: 0b ca 05 00 00             ; CALL CT (05ca)
0c76: 0b 47 0a 00 00             ; CALL (.) (0a47)
0c7b: 07 01 29 00                ; SLITERAL (0c7c) [)]
0c7f: 0b ca 05 00 00             ; CALL CT (05ca)
0c84: 0c                         ; RET
;
0c85: 18 a7 f4 00 00             ; DICTP .(LAST) (f4a7)
0c8a: 07 06 4c 41 53 54 3a 20 00 ; SLITERAL (0c8b) [LAST: ]
0c93: 0b ca 05 00 00             ; CALL CT (05ca)
0c98: 0b 08 01 00 00             ; CALL LAST (0108)
0c9d: 06                         ; DUP
0c9e: 0b db 0a 00 00             ; CALL HEX. (0adb)
0ca3: 07 02 20 28 00             ; SLITERAL (0ca4) [ (]
0ca8: 0b ca 05 00 00             ; CALL CT (05ca)
0cad: 0b 47 0a 00 00             ; CALL (.) (0a47)
0cb2: 07 01 29 00                ; SLITERAL (0cb3) [)]
0cb6: 0b ca 05 00 00             ; CALL CT (05ca)
0cbb: 0c                         ; RET
;
0cbc: 18 91 f4 00 00             ; DICTP .WORD-SHORT (f491)
0cc1: 06                         ; DUP
0cc2: 0b 5f 07 00 00             ; CALL DICT>NAME (075f)
0cc7: 0b ca 05 00 00             ; CALL CT (05ca)
0ccc: 0e 20                      ; CLITERAL 32
0cce: 19                         ; EMIT
0ccf: 02                         ; FETCH
0cd0: 0c                         ; RET
;
0cd1: 18 81 f4 00 00             ; DICTP WORDS (f481)
0cd6: 0b 08 01 00 00             ; CALL LAST (0108)
0cdb: 06                         ; DUP
0cdc: 02                         ; FETCH
0cdd: 2a                         ; NOT
0cde: 09 eb 0c 00 00             ; JMPZ 0ceb
0ce3: 05                         ; DROP
0ce4: 0e 0d                      ; CLITERAL 13
0ce6: 19                         ; EMIT
0ce7: 0e 0a                      ; CLITERAL 10
0ce9: 19                         ; EMIT
0cea: 0c                         ; RET
0ceb: 0b bc 0c 00 00             ; CALL .WORD-SHORT (0cbc)
0cf0: 08 db 0c 00 00             ; JMP 0cdb
0cf5: 0c                         ; RET
;
0cf6: 18 6c f4 00 00             ; DICTP .WORD-LONG (f46c)
0cfb: 06                         ; DUP
0cfc: 0b db 0a 00 00             ; CALL HEX. (0adb)
0d01: 0e 3a                      ; CLITERAL 58
0d03: 19                         ; EMIT
0d04: 0e 20                      ; CLITERAL 32
0d06: 19                         ; EMIT
0d07: 06                         ; DUP
0d08: 0b 5f 07 00 00             ; CALL DICT>NAME (075f)
0d0d: 0b ca 05 00 00             ; CALL CT (05ca)
0d12: 0e 20                      ; CLITERAL 32
0d14: 19                         ; EMIT
0d15: 06                         ; DUP
0d16: 0b 93 07 00 00             ; CALL DICT.GetXT (0793)
0d1b: 0e 28                      ; CLITERAL 40
0d1d: 19                         ; EMIT
0d1e: 0b 15 0b 00 00             ; CALL HEX.4 (0b15)
0d23: 0e 29                      ; CLITERAL 41
0d25: 19                         ; EMIT
0d26: 06                         ; DUP
0d27: 0b 53 07 00 00             ; CALL DICT>FLAGS (0753)
0d2c: 0f                         ; CFETCH
0d2d: 06                         ; DUP
0d2e: 07 09 2c 20 46 6c 61 67 73 3a 20 00 ; SLITERAL (0d2f) [, Flags: ]
0d3a: 0b ca 05 00 00             ; CALL CT (05ca)
0d3f: 0b f8 0a 00 00             ; CALL HEX.2 (0af8)
0d44: 06                         ; DUP
0d45: 0b da 07 00 00             ; CALL FLAGS.ISINLINE? (07da)
0d4a: 09 60 0d 00 00             ; JMPZ 0d60
0d4f: 07 09 20 28 49 4e 4c 49 4e 45 29 00 ; SLITERAL (0d50) [ (INLINE)]
0d5b: 0b ca 05 00 00             ; CALL CT (05ca)
0d60: 0b d1 07 00 00             ; CALL FLAGS.ISIMMEDIATE? (07d1)
0d65: 09 7e 0d 00 00             ; JMPZ 0d7e
0d6a: 07 0c 20 28 49 4d 4d 45 44 49 41 54 45 29 00 ; SLITERAL (0d6b) [ (IMMEDIATE)]
0d79: 0b ca 05 00 00             ; CALL CT (05ca)
0d7e: 0e 0d                      ; CLITERAL 13
0d80: 19                         ; EMIT
0d81: 0e 0a                      ; CLITERAL 10
0d83: 19                         ; EMIT
0d84: 02                         ; FETCH
0d85: 0c                         ; RET
;
0d86: 18 5b f4 00 00             ; DICTP WORDSV (f45b)
0d8b: 0b 85 0c 00 00             ; CALL .(LAST) (0c85)
0d90: 0e 0d                      ; CLITERAL 13
0d92: 19                         ; EMIT
0d93: 0e 0a                      ; CLITERAL 10
0d95: 19                         ; EMIT
0d96: 0b 08 01 00 00             ; CALL LAST (0108)
0d9b: 06                         ; DUP
0d9c: 02                         ; FETCH
0d9d: 2a                         ; NOT
0d9e: 09 ab 0d 00 00             ; JMPZ 0dab
0da3: 05                         ; DROP
0da4: 0e 0d                      ; CLITERAL 13
0da6: 19                         ; EMIT
0da7: 0e 0a                      ; CLITERAL 10
0da9: 19                         ; EMIT
0daa: 0c                         ; RET
0dab: 0b f6 0c 00 00             ; CALL .WORD-LONG (0cf6)
0db0: 08 9b 0d 00 00             ; JMP 0d9b
0db5: 0c                         ; RET
;
0db6: 18 47 f4 00 00             ; DICTP NUM-WORDS (f447)
0dbb: 0e 00                      ; CLITERAL 0
0dbd: 21                         ; DTOR
0dbe: 0b 08 01 00 00             ; CALL LAST (0108)
0dc3: 06                         ; DUP
0dc4: 02                         ; FETCH
0dc5: 2a                         ; NOT
0dc6: 09 d4 0d 00 00             ; JMPZ 0dd4
0dcb: 05                         ; DROP
0dcc: 22                         ; RTOD
0dcd: 0e 0d                      ; CLITERAL 13
0dcf: 19                         ; EMIT
0dd0: 0e 0a                      ; CLITERAL 10
0dd2: 19                         ; EMIT
0dd3: 0c                         ; RET
0dd4: 22                         ; RTOD
0dd5: 2c                         ; INC
0dd6: 21                         ; DTOR
0dd7: 02                         ; FETCH
0dd8: 08 c3 0d 00 00             ; JMP 0dc3
0ddd: 0c                         ; RET
;
0dde: 18 36 f4 00 00             ; DICTP .lastx (f436)
0de3: 0e 0d                      ; CLITERAL 13
0de5: 19                         ; EMIT
0de6: 0e 0a                      ; CLITERAL 10
0de8: 19                         ; EMIT
0de9: 0b 08 01 00 00             ; CALL LAST (0108)
0dee: 04                         ; SWAP
0def: 04                         ; SWAP
0df0: 0b f6 0c 00 00             ; CALL .WORD-LONG (0cf6)
0df5: 04                         ; SWAP
0df6: 2e                         ; DEC
0df7: 06                         ; DUP
0df8: 0a ef 0d 00 00             ; JMPNZ 0def
0dfd: 05                         ; DROP
0dfe: 05                         ; DROP
0dff: 0c                         ; RET
;
0e00: 18 24 f4 00 00             ; DICTP EXECUTE (f424)
0e05: 22                         ; RTOD
0e06: 05                         ; DROP
0e07: 21                         ; DTOR
0e08: 0c                         ; RET
;
0e09: 18 11 f4 00 00             ; DICTP find.ret (f411)
0e0e: 06                         ; DUP
0e0f: 0f                         ; CFETCH
0e10: 0e 0c                      ; CLITERAL 12
0e12: 16                         ; EQ
0e13: 09 19 0e 00 00             ; JMPZ 0e19
0e18: 0c                         ; RET
0e19: 2c                         ; INC
0e1a: 08 0e 0e 00 00             ; JMP 0e0e
0e1f: 0c                         ; RET
;
0e20: 18 fe f3 00 00             ; DICTP (inline) (f3fe)
0e25: 1a                         ; OVER
0e26: 1a                         ; OVER
0e27: 15                         ; LT
0e28: 09 2e 0e 00 00             ; JMPZ 0e2e
0e2d: 04                         ; SWAP
0e2e: 06                         ; DUP
0e2f: 0f                         ; CFETCH
0e30: 0b 14 01 00 00             ; CALL C, (0114)
0e35: 2c                         ; INC
0e36: 1a                         ; OVER
0e37: 1a                         ; OVER
0e38: 17                         ; GT
0e39: 0a 2e 0e 00 00             ; JMPNZ 0e2e
0e3e: 05                         ; DROP
0e3f: 05                         ; DROP
0e40: 0c                         ; RET
;
0e41: 18 ee f3 00 00             ; DICTP DOES> (f3ee)
0e46: 22                         ; RTOD
0e47: 06                         ; DUP
0e48: 0b 09 0e 00 00             ; CALL find.ret (0e09)
0e4d: 06                         ; DUP
0e4e: 21                         ; DTOR
0e4f: 2c                         ; INC
0e50: 0b 20 0e 00 00             ; CALL (inline) (0e20)
0e55: 0c                         ; RET
;
0e56: 18 d8 f3 00 00             ; DICTP Copy.INLINE (f3d8)
0e5b: 06                         ; DUP
0e5c: 0f                         ; CFETCH
0e5d: 0e 18                      ; CLITERAL 24
0e5f: 16                         ; EQ
0e60: 09 69 0e 00 00             ; JMPZ 0e69
0e65: 2c                         ; INC
0e66: 0e 04                      ; CLITERAL 4
0e68: 11                         ; ADD
0e69: 06                         ; DUP
0e6a: 0b 09 0e 00 00             ; CALL find.ret (0e09)
0e6f: 0b 20 0e 00 00             ; CALL (inline) (0e20)
0e74: 0c                         ; RET
;
0e75: 18 c7 f3 00 00             ; DICTP strlen (f3c7)
0e7a: 0e 00                      ; CLITERAL 0
0e7c: 04                         ; SWAP
0e7d: 04                         ; SWAP
0e7e: 1a                         ; OVER
0e7f: 0f                         ; CFETCH
0e80: 06                         ; DUP
0e81: 09 8c 0e 00 00             ; JMPZ 0e8c
0e86: 05                         ; DROP
0e87: 2c                         ; INC
0e88: 04                         ; SWAP
0e89: 2c                         ; INC
0e8a: 0e 01                      ; CLITERAL 1
0e8c: 0a 7d 0e 00 00             ; JMPNZ 0e7d
0e91: 04                         ; SWAP
0e92: 05                         ; DROP
0e93: 0c                         ; RET
;
0e94: 18 b7 f3 00 00             ; DICTP cstr, (f3b7)
0e99: 06                         ; DUP
0e9a: 0f                         ; CFETCH
0e9b: 1a                         ; OVER
0e9c: 11                         ; ADD
0e9d: 2c                         ; INC
0e9e: 2c                         ; INC
0e9f: 0b 20 0e 00 00             ; CALL (inline) (0e20)
0ea4: 0c                         ; RET
;
0ea5: 18 a3 f3 00 00             ; DICTP [COMPILE] (f3a3)
0eaa: 0b da 07 00 00             ; CALL FLAGS.ISINLINE? (07da)
0eaf: 09 be 0e 00 00             ; JMPZ 0ebe
0eb4: 0b 56 0e 00 00             ; CALL Copy.INLINE (0e56)
0eb9: 08 c8 0e 00 00             ; JMP 0ec8
0ebe: 0b c6 01 00 00             ; CALL CALL (01c6)
0ec3: 0b 2c 01 00 00             ; CALL , (012c)
0ec8: 0c                         ; RET
;
0ec9: 18 8d f3 00 00             ; DICTP executeWord (f38d)
0ece: 21                         ; DTOR
0ecf: 2b                         ; RFETCH
0ed0: 0b 03 08 00 00             ; CALL findInDict (0803)
0ed5: 09 11 0f 00 00             ; JMPZ 0f11
0eda: 22                         ; RTOD
0edb: 05                         ; DROP
0edc: 0b ae 03 00 00             ; CALL ?COMPILING (03ae)
0ee1: 09 06 0f 00 00             ; JMPZ 0f06
0ee6: 06                         ; DUP
0ee7: 0b d1 07 00 00             ; CALL FLAGS.ISIMMEDIATE? (07d1)
0eec: 09 fc 0e 00 00             ; JMPZ 0efc
0ef1: 05                         ; DROP
0ef2: 0b 00 0e 00 00             ; CALL EXECUTE (0e00)
0ef7: 08 01 0f 00 00             ; JMP 0f01
0efc: 0b a5 0e 00 00             ; CALL [COMPILE] (0ea5)
0f01: 08 0c 0f 00 00             ; JMP 0f0c
0f06: 05                         ; DROP
0f07: 0b 00 0e 00 00             ; CALL EXECUTE (0e00)
0f0c: 08 65 0f 00 00             ; JMP 0f65
0f11: 05                         ; DROP
0f12: 05                         ; DROP
0f13: 2b                         ; RFETCH
0f14: 0b d4 08 00 00             ; CALL isNumber? (08d4)
0f19: 09 57 0f 00 00             ; JMPZ 0f57
0f1e: 0b ae 03 00 00             ; CALL ?COMPILING (03ae)
0f23: 09 52 0f 00 00             ; JMPZ 0f52
0f28: 06                         ; DUP
0f29: 0e 00                      ; CLITERAL 0
0f2b: 0e ff                      ; CLITERAL 255
0f2d: 0b 55 06 00 00             ; CALL BETWEEN (0655)
0f32: 09 48 0f 00 00             ; JMPZ 0f48
0f37: 0e 0e                      ; CLITERAL 14
0f39: 0b 14 01 00 00             ; CALL C, (0114)
0f3e: 0b 14 01 00 00             ; CALL C, (0114)
0f43: 08 52 0f 00 00             ; JMP 0f52
0f48: 0b 62 01 00 00             ; CALL LITERAL (0162)
0f4d: 0b 2c 01 00 00             ; CALL , (012c)
0f52: 08 63 0f 00 00             ; JMP 0f63
0f57: 05                         ; DROP
0f58: 07 02 3f 3f 00             ; SLITERAL (0f59) [??]
0f5d: 0b ca 05 00 00             ; CALL CT (05ca)
0f62: fe                         ; RESET
0f63: 22                         ; RTOD
0f64: 05                         ; DROP
0f65: 0c                         ; RET
;
0f66: 18 76 f3 00 00             ; DICTP executeInput (f376)
0f6b: 0b 8b 00 00 00             ; CALL >IN (008b)
0f70: 02                         ; FETCH
0f71: 0b 6b 06 00 00             ; CALL skipWS (066b)
0f76: 0b 8b 00 00 00             ; CALL >IN (008b)
0f7b: 03                         ; STORE
0f7c: 0b 8b 00 00 00             ; CALL >IN (008b)
0f81: 02                         ; FETCH
0f82: 0f                         ; CFETCH
0f83: 09 a3 0f 00 00             ; JMPZ 0fa3
0f88: 0b 8b 00 00 00             ; CALL >IN (008b)
0f8d: 02                         ; FETCH
0f8e: 0b 12 07 00 00             ; CALL getOneWord (0712)
0f93: 0b 8b 00 00 00             ; CALL >IN (008b)
0f98: 03                         ; STORE
0f99: 0b c9 0e 00 00             ; CALL executeWord (0ec9)
0f9e: 08 a4 0f 00 00             ; JMP 0fa4
0fa3: 0c                         ; RET
0fa4: 08 6b 0f 00 00             ; JMP 0f6b
0fa9: 0c                         ; RET
;
0faa: 18 68 f3 00 00             ; DICTP Pad (f368)
0faf: 0b 08 01 00 00             ; CALL LAST (0108)
0fb4: 0e c8                      ; CLITERAL 200
0fb6: 12                         ; SUB
0fb7: 06                         ; DUP
0fb8: 0b fc 00 00 00             ; CALL HERE (00fc)
0fbd: 15                         ; LT
0fbe: 09 d5 0f 00 00             ; JMPZ 0fd5
0fc3: 07 0e 4f 75 74 20 6f 66 20 4d 65 6d 6f 72 79 21 00 ; SLITERAL (0fc4) [Out of Memory!]
0fd4: fe                         ; RESET
0fd5: 0c                         ; RET
;
0fd6: 18 56 f3 00 00             ; DICTP getLine (f356)
0fdb: 0e 00                      ; CLITERAL 0
0fdd: 0b aa 0f 00 00             ; CALL Pad (0faa)
0fe2: 06                         ; DUP
0fe3: 2c                         ; INC
0fe4: 0b 8b 00 00 00             ; CALL >IN (008b)
0fe9: 03                         ; STORE
0fea: 10                         ; CSTORE
0feb: 0e 00                      ; CLITERAL 0
0fed: 0b 8b 00 00 00             ; CALL >IN (008b)
0ff2: 02                         ; FETCH
0ff3: 10                         ; CSTORE
0ff4: 27                         ; GETCH
0ff5: 06                         ; DUP
0ff6: 0e 0d                      ; CLITERAL 13
0ff8: 16                         ; EQ
0ff9: 09 08 10 00 00             ; JMPZ 1008
0ffe: 05                         ; DROP
0fff: 0b aa 0f 00 00             ; CALL Pad (0faa)
1004: 0e 20                      ; CLITERAL 32
1006: 19                         ; EMIT
1007: 0c                         ; RET
1008: 06                         ; DUP
1009: 0e 09                      ; CLITERAL 9
100b: 16                         ; EQ
100c: 09 14 10 00 00             ; JMPZ 1014
1011: 05                         ; DROP
1012: 0e 20                      ; CLITERAL 32
1014: 06                         ; DUP
1015: 0e 03                      ; CLITERAL 3
1017: 16                         ; EQ
1018: 09 1e 10 00 00             ; JMPZ 101e
101d: ff                         ; BYE
101e: 06                         ; DUP
101f: 0e 08                      ; CLITERAL 8
1021: 16                         ; EQ
1022: 09 5a 10 00 00             ; JMPZ 105a
1027: 0b aa 0f 00 00             ; CALL Pad (0faa)
102c: 0f                         ; CFETCH
102d: 0e 00                      ; CLITERAL 0
102f: 17                         ; GT
1030: 09 54 10 00 00             ; JMPZ 1054
1035: 0b aa 0f 00 00             ; CALL Pad (0faa)
103a: 06                         ; DUP
103b: 0f                         ; CFETCH
103c: 2e                         ; DEC
103d: 04                         ; SWAP
103e: 10                         ; CSTORE
103f: 0b 8b 00 00 00             ; CALL >IN (008b)
1044: 06                         ; DUP
1045: 02                         ; FETCH
1046: 2e                         ; DEC
1047: 04                         ; SWAP
1048: 03                         ; STORE
1049: 06                         ; DUP
104a: 19                         ; EMIT
104b: 0e 20                      ; CLITERAL 32
104d: 19                         ; EMIT
104e: 19                         ; EMIT
104f: 08 55 10 00 00             ; JMP 1055
1054: 05                         ; DROP
1055: 08 8c 10 00 00             ; JMP 108c
105a: 06                         ; DUP
105b: 0e 20                      ; CLITERAL 32
105d: 0e 7f                      ; CLITERAL 127
105f: 0b 55 06 00 00             ; CALL BETWEEN (0655)
1064: 09 8b 10 00 00             ; JMPZ 108b
1069: 06                         ; DUP
106a: 19                         ; EMIT
106b: 0b 8b 00 00 00             ; CALL >IN (008b)
1070: 02                         ; FETCH
1071: 10                         ; CSTORE
1072: 0b 8b 00 00 00             ; CALL >IN (008b)
1077: 06                         ; DUP
1078: 02                         ; FETCH
1079: 2c                         ; INC
107a: 04                         ; SWAP
107b: 03                         ; STORE
107c: 0b aa 0f 00 00             ; CALL Pad (0faa)
1081: 06                         ; DUP
1082: 0f                         ; CFETCH
1083: 2c                         ; INC
1084: 04                         ; SWAP
1085: 10                         ; CSTORE
1086: 08 8c 10 00 00             ; JMP 108c
108b: 05                         ; DROP
108c: 08 eb 0f 00 00             ; JMP 0feb
1091: 0c                         ; RET
;
1092: 18 43 f3 00 00             ; DICTP strcpy2c (f343)
1097: 06                         ; DUP
1098: 21                         ; DTOR
1099: 0e 00                      ; CLITERAL 0
109b: 1a                         ; OVER
109c: 10                         ; CSTORE
109d: 2c                         ; INC
109e: 04                         ; SWAP
109f: 06                         ; DUP
10a0: 0f                         ; CFETCH
10a1: 06                         ; DUP
10a2: 09 ba 10 00 00             ; JMPZ 10ba
10a7: 0e 02                      ; CLITERAL 2
10a9: 25                         ; PICK
10aa: 10                         ; CSTORE
10ab: 04                         ; SWAP
10ac: 2c                         ; INC
10ad: 04                         ; SWAP
10ae: 2c                         ; INC
10af: 2b                         ; RFETCH
10b0: 06                         ; DUP
10b1: 0f                         ; CFETCH
10b2: 2c                         ; INC
10b3: 04                         ; SWAP
10b4: 10                         ; CSTORE
10b5: 08 c3 10 00 00             ; JMP 10c3
10ba: 21                         ; DTOR
10bb: 04                         ; SWAP
10bc: 22                         ; RTOD
10bd: 04                         ; SWAP
10be: 10                         ; CSTORE
10bf: 05                         ; DROP
10c0: 22                         ; RTOD
10c1: 05                         ; DROP
10c2: 0c                         ; RET
10c3: 08 9f 10 00 00             ; JMP 109f
10c8: 0c                         ; RET
;
10c9: 18 2d f3 00 00             ; DICTP Define-Word (f32d)
10ce: 0b 08 01 00 00             ; CALL LAST (0108)
10d3: 1a                         ; OVER
10d4: 0b 75 0e 00 00             ; CALL strlen (0e75)
10d9: 0e 02                      ; CLITERAL 2
10db: 0e 04                      ; CLITERAL 4
10dd: 13                         ; MUL
10de: 0e 03                      ; CLITERAL 3
10e0: 11                         ; ADD
10e1: 11                         ; ADD
10e2: 12                         ; SUB
10e3: 06                         ; DUP
10e4: 21                         ; DTOR
10e5: 21                         ; DTOR
10e6: 0b 08 01 00 00             ; CALL LAST (0108)
10eb: 2b                         ; RFETCH
10ec: 03                         ; STORE
10ed: 22                         ; RTOD
10ee: 0e 04                      ; CLITERAL 4
10f0: 11                         ; ADD
10f1: 21                         ; DTOR
10f2: 0b fc 00 00 00             ; CALL HERE (00fc)
10f7: 2b                         ; RFETCH
10f8: 03                         ; STORE
10f9: 22                         ; RTOD
10fa: 0e 04                      ; CLITERAL 4
10fc: 11                         ; ADD
10fd: 21                         ; DTOR
10fe: 0e 00                      ; CLITERAL 0
1100: 2b                         ; RFETCH
1101: 10                         ; CSTORE
1102: 22                         ; RTOD
1103: 2c                         ; INC
1104: 21                         ; DTOR
1105: 22                         ; RTOD
1106: 0b 92 10 00 00             ; CALL strcpy2c (1092)
110b: 22                         ; RTOD
110c: 0b 4f 00 00 00             ; CALL (LAST) (004f)
1111: 03                         ; STORE
1112: 0c                         ; RET
;
1113: 18 17 f3 00 00             ; DICTP CREATE-NAME (f317)
1118: 0b 8b 00 00 00             ; CALL >IN (008b)
111d: 02                         ; FETCH
111e: 0b 6b 06 00 00             ; CALL skipWS (066b)
1123: 0b 8b 00 00 00             ; CALL >IN (008b)
1128: 03                         ; STORE
1129: 0b 8b 00 00 00             ; CALL >IN (008b)
112e: 02                         ; FETCH
112f: 0f                         ; CFETCH
1130: 09 6a 11 00 00             ; JMPZ 116a
1135: 0b 8b 00 00 00             ; CALL >IN (008b)
113a: 02                         ; FETCH
113b: 0b 12 07 00 00             ; CALL getOneWord (0712)
1140: 0b 8b 00 00 00             ; CALL >IN (008b)
1145: 03                         ; STORE
1146: 06                         ; DUP
1147: 0f                         ; CFETCH
1148: 09 68 11 00 00             ; JMPZ 1168
114d: 0b c9 10 00 00             ; CALL Define-Word (10c9)
1152: 0e 18                      ; CLITERAL 24
1154: 0b 14 01 00 00             ; CALL C, (0114)
1159: 0b 08 01 00 00             ; CALL LAST (0108)
115e: 0b 2c 01 00 00             ; CALL , (012c)
1163: 08 6a 11 00 00             ; JMP 116a
1168: 05                         ; DROP
1169: fe                         ; RESET
116a: 0c                         ; RET
;
116b: 18 0b f3 00 00             ; DICTP : (f30b)
1170: 0b 13 11 00 00             ; CALL CREATE-NAME (1113)
1175: 0b 6d 00 00 00             ; CALL STATE (006d)
117a: 0b 9a 03 00 00             ; CALL ON (039a)
117f: 0c                         ; RET
;
1180: 18 f9 f2 00 00             ; DICTP :NONAME (f2f9)
1185: 0b fc 00 00 00             ; CALL HERE (00fc)
118a: 0b 6d 00 00 00             ; CALL STATE (006d)
118f: 0b 9a 03 00 00             ; CALL ON (039a)
1194: 0c                         ; RET
;
1195: 18 ed f2 00 00             ; DICTP ; (f2ed)
119a: 0b d3 01 00 00             ; CALL RET (01d3)
119f: 0b 6d 00 00 00             ; CALL STATE (006d)
11a4: 0b a4 03 00 00             ; CALL OFF (03a4)
11a9: 0c                         ; RET
;
11aa: 18 d8 f2 00 00             ; DICTP ForgetLast (f2d8)
11af: 0b 08 01 00 00             ; CALL LAST (0108)
11b4: 0e 04                      ; CLITERAL 4
11b6: 11                         ; ADD
11b7: 02                         ; FETCH
11b8: 0b 40 00 00 00             ; CALL (HERE) (0040)
11bd: 03                         ; STORE
11be: 0b 08 01 00 00             ; CALL LAST (0108)
11c3: 02                         ; FETCH
11c4: 0b 4f 00 00 00             ; CALL (LAST) (004f)
11c9: 03                         ; STORE
11ca: 0c                         ; RET
;
11cb: 18 c2 f2 00 00             ; DICTP close-input (f2c2)
11d0: 0b b8 00 00 00             ; CALL INPUT-FP (00b8)
11d5: 02                         ; FETCH
11d6: 20                         ; FCLOSE
11d7: 0e 00                      ; CLITERAL 0
11d9: 0b b8 00 00 00             ; CALL INPUT-FP (00b8)
11de: 03                         ; STORE
11df: 0c                         ; RET
;
11e0: 18 ad f2 00 00             ; DICTP resetState (f2ad)
11e5: 0b ae 03 00 00             ; CALL ?COMPILING (03ae)
11ea: 09 f4 11 00 00             ; JMPZ 11f4
11ef: 0b aa 11 00 00             ; CALL ForgetLast (11aa)
11f4: 0b 70 03 00 00             ; CALL DECIMAL (0370)
11f9: 0b 6d 00 00 00             ; CALL STATE (006d)
11fe: 0b a4 03 00 00             ; CALL OFF (03a4)
1203: 0b cb 11 00 00             ; CALL close-input (11cb)
1208: 0c                         ; RET
;
1209: 18 9d f2 00 00             ; DICTP ALLOT (f29d)
120e: 0b fc 00 00 00             ; CALL HERE (00fc)
1213: 11                         ; ADD
1214: 0b 40 00 00 00             ; CALL (HERE) (0040)
1219: 03                         ; STORE
121a: 0c                         ; RET
;
121b: 18 91 f2 00 00             ; DICTP ? (f291)
1220: 02                         ; FETCH
1221: 0b 61 0a 00 00             ; CALL . (0a61)
1226: 0c                         ; RET
;
1227: 18 84 f2 00 00             ; DICTP C? (f284)
122c: 0f                         ; CFETCH
122d: 0b 61 0a 00 00             ; CALL . (0a61)
1232: 0c                         ; RET
;
1233: 18 75 f2 00 00             ; DICTP FREE (f275)
1238: 0b 08 01 00 00             ; CALL LAST (0108)
123d: 0b fc 00 00 00             ; CALL HERE (00fc)
1242: 12                         ; SUB
1243: 0c                         ; RET
;
1244: 18 65 f2 00 00             ; DICTP .FREE (f265)
1249: 0b 33 12 00 00             ; CALL FREE (1233)
124e: 0b 47 0a 00 00             ; CALL (.) (0a47)
1253: 07 0c 20 62 79 74 65 73 20 66 72 65 65 2e 00 ; SLITERAL (1254) [ bytes free.]
1262: 0b ca 05 00 00             ; CALL CT (05ca)
1267: 0c                         ; RET
;
1268: 18 52 f2 00 00             ; DICTP mainLoop (f252)
126d: 0b e0 11 00 00             ; CALL resetState (11e0)
1272: 0b ae 03 00 00             ; CALL ?COMPILING (03ae)
1277: 2a                         ; NOT
1278: 09 8d 12 00 00             ; JMPZ 128d
127d: 07 03 20 4f 4b 00          ; SLITERAL (127e) [ OK]
1283: 0b ca 05 00 00             ; CALL CT (05ca)
1288: 0b a9 0b 00 00             ; CALL .S (0ba9)
128d: 0e 0d                      ; CLITERAL 13
128f: 19                         ; EMIT
1290: 0e 0a                      ; CLITERAL 10
1292: 19                         ; EMIT
1293: 0b d6 0f 00 00             ; CALL getLine (0fd6)
1298: 2c                         ; INC
1299: 0b 8b 00 00 00             ; CALL >IN (008b)
129e: 03                         ; STORE
129f: 0b 66 0f 00 00             ; CALL executeInput (0f66)
12a4: 0e 20                      ; CLITERAL 32
12a6: 19                         ; EMIT
12a7: 08 72 12 00 00             ; JMP 1272
12ac: 0c                         ; RET
;
12ad: 18 43 f2 00 00             ; DICTP main (f243)
12b2: 0b 6d 00 00 00             ; CALL STATE (006d)
12b7: 02                         ; FETCH
12b8: 0e 63                      ; CLITERAL 99
12ba: 16                         ; EQ
12bb: 09 d8 12 00 00             ; JMPZ 12d8
12c0: 0b 6d 00 00 00             ; CALL STATE (006d)
12c5: 0b a4 03 00 00             ; CALL OFF (03a4)
12ca: 07 06 48 65 6c 6c 6f 2e 00 ; SLITERAL (12cb) [Hello.]
12d3: 0b ca 05 00 00             ; CALL CT (05ca)
12d8: 0b 68 12 00 00             ; CALL mainLoop (1268)
12dd: 0c                         ; RET
;
12de: 18 2c f2 00 00             ; DICTP file-getLine (f22c)
12e3: 0b aa 0f 00 00             ; CALL Pad (0faa)
12e8: 04                         ; SWAP
12e9: 0e c8                      ; CLITERAL 200
12eb: 04                         ; SWAP
12ec: 1e                         ; FREADLINE
12ed: 0b aa 0f 00 00             ; CALL Pad (0faa)
12f2: 04                         ; SWAP
12f3: 0c                         ; RET
;
12f4: 18 19 f2 00 00             ; DICTP load-sub (f219)
12f9: 0b b8 00 00 00             ; CALL INPUT-FP (00b8)
12fe: 02                         ; FETCH
12ff: 0b de 12 00 00             ; CALL file-getLine (12de)
1304: 09 1a 13 00 00             ; JMPZ 131a
1309: 2c                         ; INC
130a: 0b 8b 00 00 00             ; CALL >IN (008b)
130f: 03                         ; STORE
1310: 0b 66 0f 00 00             ; CALL executeInput (0f66)
1315: 08 21 13 00 00             ; JMP 1321
131a: 05                         ; DROP
131b: 0b cb 11 00 00             ; CALL close-input (11cb)
1320: 0c                         ; RET
1321: 08 f9 12 00 00             ; JMP 12f9
1326: 0c                         ; RET
;
1327: 18 05 f2 00 00             ; DICTP load-file (f205)
132c: 0b cb 11 00 00             ; CALL close-input (11cb)
1331: 0e 00                      ; CLITERAL 0
1333: 0e 00                      ; CLITERAL 0
1335: 1c                         ; FOPEN
1336: 2a                         ; NOT
1337: 09 57 13 00 00             ; JMPZ 1357
133c: 07 11 43 61 6e 6e 6f 74 20 6f 70 65 6e 20 66 69 6c 65 2e 00 ; SLITERAL (133d) [Cannot open file.]
1350: 0b ca 05 00 00             ; CALL CT (05ca)
1355: 05                         ; DROP
1356: 0c                         ; RET
1357: 0b b8 00 00 00             ; CALL INPUT-FP (00b8)
135c: 03                         ; STORE
135d: 0b f4 12 00 00             ; CALL load-sub (12f4)
1362: 0c                         ; RET
;
1363: 18 f6 f1 00 00             ; DICTP LOAD (f1f6)
1368: 0b b8 00 00 00             ; CALL INPUT-FP (00b8)
136d: 02                         ; FETCH
136e: 21                         ; DTOR
136f: 33                         ; RESET
1370: 09 91 13 00 00             ; JMPZ 1391
1375: 0b b8 00 00 00             ; CALL INPUT-FP (00b8)
137a: 03                         ; STORE
137b: 0b f4 12 00 00             ; CALL load-sub (12f4)
1380: 0b cb 11 00 00             ; CALL close-input (11cb)
1385: 22                         ; RTOD
1386: 0b b8 00 00 00             ; CALL INPUT-FP (00b8)
138b: 03                         ; STORE
138c: 08 b8 13 00 00             ; JMP 13b8
1391: 07 17 43 61 6e 6e 6f 74 20 6f 70 65 6e 20 62 6c 6f 63 6b 20 66 69 6c 65 2e 00 ; SLITERAL (1392) [Cannot open block file.]
13ab: 0b ca 05 00 00             ; CALL CT (05ca)
13b0: 05                         ; DROP
13b1: 22                         ; RTOD
13b2: 0b b8 00 00 00             ; CALL INPUT-FP (00b8)
13b7: 03                         ; STORE
13b8: 0c                         ; RET
;
13b9: 18 e7 f1 00 00             ; DICTP THRU (f1e7)
13be: 04                         ; SWAP
13bf: 1a                         ; OVER
13c0: 1a                         ; OVER
13c1: 15                         ; LT
13c2: 09 ca 13 00 00             ; JMPZ 13ca
13c7: 05                         ; DROP
13c8: 05                         ; DROP
13c9: 0c                         ; RET
13ca: 06                         ; DUP
13cb: 04                         ; SWAP
13cc: 21                         ; DTOR
13cd: 04                         ; SWAP
13ce: 22                         ; RTOD
13cf: 21                         ; DTOR
13d0: 21                         ; DTOR
13d1: 0b 63 13 00 00             ; CALL LOAD (1363)
13d6: 22                         ; RTOD
13d7: 22                         ; RTOD
13d8: 2c                         ; INC
13d9: 08 bf 13 00 00             ; JMP 13bf
13de: 0c                         ; RET
;
13df: 18 d3 f1 00 00             ; DICTP STR.EMPTY (f1d3)
13e4: 0e 00                      ; CLITERAL 0
13e6: 1a                         ; OVER
13e7: 03                         ; STORE
13e8: 0c                         ; RET
;
13e9: 18 c1 f1 00 00             ; DICTP STR.LEN (f1c1)
13ee: 06                         ; DUP
13ef: 0f                         ; CFETCH
13f0: 0c                         ; RET
;
13f1: 18 ae f1 00 00             ; DICTP STR.CATC (f1ae)
13f6: 1a                         ; OVER
13f7: 06                         ; DUP
13f8: 06                         ; DUP
13f9: 0f                         ; CFETCH
13fa: 2c                         ; INC
13fb: 04                         ; SWAP
13fc: 10                         ; CSTORE
13fd: 06                         ; DUP
13fe: 0f                         ; CFETCH
13ff: 11                         ; ADD
1400: 0e 00                      ; CLITERAL 0
1402: 1a                         ; OVER
1403: 2c                         ; INC
1404: 10                         ; CSTORE
1405: 10                         ; CSTORE
1406: 0c                         ; RET
;
1407: 18 97 f1 00 00             ; DICTP STR.NULLTERM (f197)
140c: 06                         ; DUP
140d: 06                         ; DUP
140e: 0f                         ; CFETCH
140f: 11                         ; ADD
1410: 2c                         ; INC
1411: 0e 00                      ; CLITERAL 0
1413: 04                         ; SWAP
1414: 10                         ; CSTORE
1415: 0c                         ; RET
;
1416: 18 8a f1 00 00             ; DICTP I" (f18a)
141b: 0b fc 00 00 00             ; CALL HERE (00fc)
1420: 0e 64                      ; CLITERAL 100
1422: 11                         ; ADD
1423: 0e 00                      ; CLITERAL 0
1425: 1a                         ; OVER
1426: 03                         ; STORE
1427: 0b 8b 00 00 00             ; CALL >IN (008b)
142c: 02                         ; FETCH
142d: 0f                         ; CFETCH
142e: 06                         ; DUP
142f: 2a                         ; NOT
1430: 09 51 14 00 00             ; JMPZ 1451
1435: 07 10 6d 69 73 73 69 6e 67 20 63 6c 6f 73 69 6e 67 20 00 ; SLITERAL (1436) [missing closing ]
1448: 0b ca 05 00 00             ; CALL CT (05ca)
144d: 0e 22                      ; CLITERAL 34
144f: 19                         ; EMIT
1450: fe                         ; RESET
1451: 0b 8b 00 00 00             ; CALL >IN (008b)
1456: 06                         ; DUP
1457: 02                         ; FETCH
1458: 2c                         ; INC
1459: 04                         ; SWAP
145a: 03                         ; STORE
145b: 06                         ; DUP
145c: 0e 22                      ; CLITERAL 34
145e: 16                         ; EQ
145f: 09 66 14 00 00             ; JMPZ 1466
1464: 05                         ; DROP
1465: 0c                         ; RET
1466: 0b f1 13 00 00             ; CALL STR.CATC (13f1)
146b: 08 27 14 00 00             ; JMP 1427
1470: 0c                         ; RET
;
1471: 18 7e f1 00 00             ; DICTP " (f17e)
1476: 0b ae 03 00 00             ; CALL ?COMPILING (03ae)
147b: 2a                         ; NOT
147c: 09 87 14 00 00             ; JMPZ 1487
1481: 0b 16 14 00 00             ; CALL I" (1416)
1486: 0c                         ; RET
1487: 0b 92 01 00 00             ; CALL SLITERAL (0192)
148c: 0b fc 00 00 00             ; CALL HERE (00fc)
1491: 0e 00                      ; CLITERAL 0
1493: 0b 14 01 00 00             ; CALL C, (0114)
1498: 0b 8b 00 00 00             ; CALL >IN (008b)
149d: 02                         ; FETCH
149e: 0f                         ; CFETCH
149f: 06                         ; DUP
14a0: 2a                         ; NOT
14a1: 09 ce 14 00 00             ; JMPZ 14ce
14a6: 05                         ; DROP
14a7: 2e                         ; DEC
14a8: 0b 40 00 00 00             ; CALL (HERE) (0040)
14ad: 03                         ; STORE
14ae: 07 11 6d 69 73 73 69 6e 67 20 63 6c 6f 73 69 6e 67 20 27 00 ; SLITERAL (14af) [missing closing ']
14c2: 0b ca 05 00 00             ; CALL CT (05ca)
14c7: 0e 22                      ; CLITERAL 34
14c9: 19                         ; EMIT
14ca: 0e 27                      ; CLITERAL 39
14cc: 19                         ; EMIT
14cd: fe                         ; RESET
14ce: 0b 8b 00 00 00             ; CALL >IN (008b)
14d3: 06                         ; DUP
14d4: 02                         ; FETCH
14d5: 2c                         ; INC
14d6: 04                         ; SWAP
14d7: 03                         ; STORE
14d8: 06                         ; DUP
14d9: 0e 22                      ; CLITERAL 34
14db: 16                         ; EQ
14dc: 09 f4 14 00 00             ; JMPZ 14f4
14e1: 05                         ; DROP
14e2: 0b fc 00 00 00             ; CALL HERE (00fc)
14e7: 0e 00                      ; CLITERAL 0
14e9: 0b 14 01 00 00             ; CALL C, (0114)
14ee: 1a                         ; OVER
14ef: 12                         ; SUB
14f0: 2e                         ; DEC
14f1: 04                         ; SWAP
14f2: 10                         ; CSTORE
14f3: 0c                         ; RET
14f4: 0b 14 01 00 00             ; CALL C, (0114)
14f9: 08 98 14 00 00             ; JMP 1498
14fe: 0c                         ; RET
;
14ff: 18 6b f1 00 00             ; DICTP sys-info (f16b)
1504: 0b 15 0c 00 00             ; CALL .(MEM_SZ) (0c15)
1509: 0e 2c                      ; CLITERAL 44
150b: 19                         ; EMIT
150c: 0e 20                      ; CLITERAL 32
150e: 19                         ; EMIT
150f: 0b 4e 0c 00 00             ; CALL .(HERE) (0c4e)
1514: 0e 2c                      ; CLITERAL 44
1516: 19                         ; EMIT
1517: 0e 20                      ; CLITERAL 32
1519: 19                         ; EMIT
151a: 0b 85 0c 00 00             ; CALL .(LAST) (0c85)
151f: 0e 2c                      ; CLITERAL 44
1521: 19                         ; EMIT
1522: 0e 20                      ; CLITERAL 32
1524: 19                         ; EMIT
1525: 0b 44 12 00 00             ; CALL .FREE (1244)
152a: 0e 0d                      ; CLITERAL 13
152c: 19                         ; EMIT
152d: 0e 0a                      ; CLITERAL 10
152f: 19                         ; EMIT
1530: 0c                         ; RET
;
1531: 18 58 f1 00 00             ; DICTP VARIABLE (f158)
1536: 0b 13 11 00 00             ; CALL CREATE-NAME (1113)
153b: 0b fc 00 00 00             ; CALL HERE (00fc)
1540: 0e 02                      ; CLITERAL 2
1542: 11                         ; ADD
1543: 0e 04                      ; CLITERAL 4
1545: 11                         ; ADD
1546: 0b 62 01 00 00             ; CALL LITERAL (0162)
154b: 0b 2c 01 00 00             ; CALL , (012c)
1550: 0b d3 01 00 00             ; CALL RET (01d3)
1555: 0e 00                      ; CLITERAL 0
1557: 0b 2c 01 00 00             ; CALL , (012c)
155c: 0c                         ; RET
;
155d: 18 43 f1 00 00             ; DICTP bench-loop (f143)
1562: 2e                         ; DEC
1563: 06                         ; DUP
1564: 0a 62 15 00 00             ; JMPNZ 1562
1569: 05                         ; DROP
156a: 0c                         ; RET
;
156b: 18 33 f1 00 00             ; DICTP bench (f133)
1570: 2f                         ; GETTICK
1571: 04                         ; SWAP
1572: 0b 5d 15 00 00             ; CALL bench-loop (155d)
1577: 2f                         ; GETTICK
1578: 04                         ; SWAP
1579: 12                         ; SUB
157a: 0b 61 0a 00 00             ; CALL . (0a61)
157f: 0c                         ; RET
;
; End of code, Dictionary:
;
f133: 43 f1 00 00                ; bench - (next: f143 bench-loop)
f137: 6b 15 00 00 00             ; XT=156b, flags=00
f13c: 05 62 65 6e 63 68 00       ; 5, bench
;
f143: 58 f1 00 00                ; bench-loop - (next: f158 VARIABLE)
f147: 5d 15 00 00 00             ; XT=155d, flags=00
f14c: 0a 62 65 6e 63 68 2d 6c 6f 6f 70 00 ; 10, bench-loop
;
f158: 6b f1 00 00                ; VARIABLE - (next: f16b sys-info)
f15c: 31 15 00 00 00             ; XT=1531, flags=00
f161: 08 56 41 52 49 41 42 4c 45 00 ; 8, VARIABLE
;
f16b: 7e f1 00 00                ; sys-info - (next: f17e ")
f16f: ff 14 00 00 00             ; XT=14ff, flags=00
f174: 08 73 79 73 2d 69 6e 66 6f 00 ; 8, sys-info
;
f17e: 8a f1 00 00                ; " - (next: f18a I")
f182: 71 14 00 00 01             ; XT=1471, flags=01
f187: 01 22 00                   ; 1, "
;
f18a: 97 f1 00 00                ; I" - (next: f197 STR.NULLTERM)
f18e: 16 14 00 00 00             ; XT=1416, flags=00
f193: 02 49 22 00                ; 2, I"
;
f197: ae f1 00 00                ; STR.NULLTERM - (next: f1ae STR.CATC)
f19b: 07 14 00 00 00             ; XT=1407, flags=00
f1a0: 0c 53 54 52 2e 4e 55 4c 4c 54 45 52 4d 00 ; 12, STR.NULLTERM
;
f1ae: c1 f1 00 00                ; STR.CATC - (next: f1c1 STR.LEN)
f1b2: f1 13 00 00 00             ; XT=13f1, flags=00
f1b7: 08 53 54 52 2e 43 41 54 43 00 ; 8, STR.CATC
;
f1c1: d3 f1 00 00                ; STR.LEN - (next: f1d3 STR.EMPTY)
f1c5: e9 13 00 00 02             ; XT=13e9, flags=02
f1ca: 07 53 54 52 2e 4c 45 4e 00 ; 7, STR.LEN
;
f1d3: e7 f1 00 00                ; STR.EMPTY - (next: f1e7 THRU)
f1d7: df 13 00 00 02             ; XT=13df, flags=02
f1dc: 09 53 54 52 2e 45 4d 50 54 59 00 ; 9, STR.EMPTY
;
f1e7: f6 f1 00 00                ; THRU - (next: f1f6 LOAD)
f1eb: b9 13 00 00 00             ; XT=13b9, flags=00
f1f0: 04 54 48 52 55 00          ; 4, THRU
;
f1f6: 05 f2 00 00                ; LOAD - (next: f205 load-file)
f1fa: 63 13 00 00 00             ; XT=1363, flags=00
f1ff: 04 4c 4f 41 44 00          ; 4, LOAD
;
f205: 19 f2 00 00                ; load-file - (next: f219 load-sub)
f209: 27 13 00 00 00             ; XT=1327, flags=00
f20e: 09 6c 6f 61 64 2d 66 69 6c 65 00 ; 9, load-file
;
f219: 2c f2 00 00                ; load-sub - (next: f22c file-getLine)
f21d: f4 12 00 00 00             ; XT=12f4, flags=00
f222: 08 6c 6f 61 64 2d 73 75 62 00 ; 8, load-sub
;
f22c: 43 f2 00 00                ; file-getLine - (next: f243 main)
f230: de 12 00 00 00             ; XT=12de, flags=00
f235: 0c 66 69 6c 65 2d 67 65 74 4c 69 6e 65 00 ; 12, file-getLine
;
f243: 52 f2 00 00                ; main - (next: f252 mainLoop)
f247: ad 12 00 00 00             ; XT=12ad, flags=00
f24c: 04 6d 61 69 6e 00          ; 4, main
;
f252: 65 f2 00 00                ; mainLoop - (next: f265 .FREE)
f256: 68 12 00 00 00             ; XT=1268, flags=00
f25b: 08 6d 61 69 6e 4c 6f 6f 70 00 ; 8, mainLoop
;
f265: 75 f2 00 00                ; .FREE - (next: f275 FREE)
f269: 44 12 00 00 00             ; XT=1244, flags=00
f26e: 05 2e 46 52 45 45 00       ; 5, .FREE
;
f275: 84 f2 00 00                ; FREE - (next: f284 C?)
f279: 33 12 00 00 00             ; XT=1233, flags=00
f27e: 04 46 52 45 45 00          ; 4, FREE
;
f284: 91 f2 00 00                ; C? - (next: f291 ?)
f288: 27 12 00 00 00             ; XT=1227, flags=00
f28d: 02 43 3f 00                ; 2, C?
;
f291: 9d f2 00 00                ; ? - (next: f29d ALLOT)
f295: 1b 12 00 00 00             ; XT=121b, flags=00
f29a: 01 3f 00                   ; 1, ?
;
f29d: ad f2 00 00                ; ALLOT - (next: f2ad resetState)
f2a1: 09 12 00 00 00             ; XT=1209, flags=00
f2a6: 05 41 4c 4c 4f 54 00       ; 5, ALLOT
;
f2ad: c2 f2 00 00                ; resetState - (next: f2c2 close-input)
f2b1: e0 11 00 00 00             ; XT=11e0, flags=00
f2b6: 0a 72 65 73 65 74 53 74 61 74 65 00 ; 10, resetState
;
f2c2: d8 f2 00 00                ; close-input - (next: f2d8 ForgetLast)
f2c6: cb 11 00 00 00             ; XT=11cb, flags=00
f2cb: 0b 63 6c 6f 73 65 2d 69 6e 70 75 74 00 ; 11, close-input
;
f2d8: ed f2 00 00                ; ForgetLast - (next: f2ed ;)
f2dc: aa 11 00 00 00             ; XT=11aa, flags=00
f2e1: 0a 46 6f 72 67 65 74 4c 61 73 74 00 ; 10, ForgetLast
;
f2ed: f9 f2 00 00                ; ; - (next: f2f9 :NONAME)
f2f1: 95 11 00 00 01             ; XT=1195, flags=01
f2f6: 01 3b 00                   ; 1, ;
;
f2f9: 0b f3 00 00                ; :NONAME - (next: f30b :)
f2fd: 80 11 00 00 00             ; XT=1180, flags=00
f302: 07 3a 4e 4f 4e 41 4d 45 00 ; 7, :NONAME
;
f30b: 17 f3 00 00                ; : - (next: f317 CREATE-NAME)
f30f: 6b 11 00 00 00             ; XT=116b, flags=00
f314: 01 3a 00                   ; 1, :
;
f317: 2d f3 00 00                ; CREATE-NAME - (next: f32d Define-Word)
f31b: 13 11 00 00 00             ; XT=1113, flags=00
f320: 0b 43 52 45 41 54 45 2d 4e 41 4d 45 00 ; 11, CREATE-NAME
;
f32d: 43 f3 00 00                ; Define-Word - (next: f343 strcpy2c)
f331: c9 10 00 00 00             ; XT=10c9, flags=00
f336: 0b 44 65 66 69 6e 65 2d 57 6f 72 64 00 ; 11, Define-Word
;
f343: 56 f3 00 00                ; strcpy2c - (next: f356 getLine)
f347: 92 10 00 00 00             ; XT=1092, flags=00
f34c: 08 73 74 72 63 70 79 32 63 00 ; 8, strcpy2c
;
f356: 68 f3 00 00                ; getLine - (next: f368 Pad)
f35a: d6 0f 00 00 00             ; XT=0fd6, flags=00
f35f: 07 67 65 74 4c 69 6e 65 00 ; 7, getLine
;
f368: 76 f3 00 00                ; Pad - (next: f376 executeInput)
f36c: aa 0f 00 00 00             ; XT=0faa, flags=00
f371: 03 50 61 64 00             ; 3, Pad
;
f376: 8d f3 00 00                ; executeInput - (next: f38d executeWord)
f37a: 66 0f 00 00 00             ; XT=0f66, flags=00
f37f: 0c 65 78 65 63 75 74 65 49 6e 70 75 74 00 ; 12, executeInput
;
f38d: a3 f3 00 00                ; executeWord - (next: f3a3 [COMPILE])
f391: c9 0e 00 00 00             ; XT=0ec9, flags=00
f396: 0b 65 78 65 63 75 74 65 57 6f 72 64 00 ; 11, executeWord
;
f3a3: b7 f3 00 00                ; [COMPILE] - (next: f3b7 cstr,)
f3a7: a5 0e 00 00 00             ; XT=0ea5, flags=00
f3ac: 09 5b 43 4f 4d 50 49 4c 45 5d 00 ; 9, [COMPILE]
;
f3b7: c7 f3 00 00                ; cstr, - (next: f3c7 strlen)
f3bb: 94 0e 00 00 00             ; XT=0e94, flags=00
f3c0: 05 63 73 74 72 2c 00       ; 5, cstr,
;
f3c7: d8 f3 00 00                ; strlen - (next: f3d8 Copy.INLINE)
f3cb: 75 0e 00 00 00             ; XT=0e75, flags=00
f3d0: 06 73 74 72 6c 65 6e 00    ; 6, strlen
;
f3d8: ee f3 00 00                ; Copy.INLINE - (next: f3ee DOES>)
f3dc: 56 0e 00 00 00             ; XT=0e56, flags=00
f3e1: 0b 43 6f 70 79 2e 49 4e 4c 49 4e 45 00 ; 11, Copy.INLINE
;
f3ee: fe f3 00 00                ; DOES> - (next: f3fe (inline))
f3f2: 41 0e 00 00 00             ; XT=0e41, flags=00
f3f7: 05 44 4f 45 53 3e 00       ; 5, DOES>
;
f3fe: 11 f4 00 00                ; (inline) - (next: f411 find.ret)
f402: 20 0e 00 00 00             ; XT=0e20, flags=00
f407: 08 28 69 6e 6c 69 6e 65 29 00 ; 8, (inline)
;
f411: 24 f4 00 00                ; find.ret - (next: f424 EXECUTE)
f415: 09 0e 00 00 00             ; XT=0e09, flags=00
f41a: 08 66 69 6e 64 2e 72 65 74 00 ; 8, find.ret
;
f424: 36 f4 00 00                ; EXECUTE - (next: f436 .lastx)
f428: 00 0e 00 00 00             ; XT=0e00, flags=00
f42d: 07 45 58 45 43 55 54 45 00 ; 7, EXECUTE
;
f436: 47 f4 00 00                ; .lastx - (next: f447 NUM-WORDS)
f43a: de 0d 00 00 00             ; XT=0dde, flags=00
f43f: 06 2e 6c 61 73 74 78 00    ; 6, .lastx
;
f447: 5b f4 00 00                ; NUM-WORDS - (next: f45b WORDSV)
f44b: b6 0d 00 00 00             ; XT=0db6, flags=00
f450: 09 4e 55 4d 2d 57 4f 52 44 53 00 ; 9, NUM-WORDS
;
f45b: 6c f4 00 00                ; WORDSV - (next: f46c .WORD-LONG)
f45f: 86 0d 00 00 00             ; XT=0d86, flags=00
f464: 06 57 4f 52 44 53 56 00    ; 6, WORDSV
;
f46c: 81 f4 00 00                ; .WORD-LONG - (next: f481 WORDS)
f470: f6 0c 00 00 00             ; XT=0cf6, flags=00
f475: 0a 2e 57 4f 52 44 2d 4c 4f 4e 47 00 ; 10, .WORD-LONG
;
f481: 91 f4 00 00                ; WORDS - (next: f491 .WORD-SHORT)
f485: d1 0c 00 00 00             ; XT=0cd1, flags=00
f48a: 05 57 4f 52 44 53 00       ; 5, WORDS
;
f491: a7 f4 00 00                ; .WORD-SHORT - (next: f4a7 .(LAST))
f495: bc 0c 00 00 00             ; XT=0cbc, flags=00
f49a: 0b 2e 57 4f 52 44 2d 53 48 4f 52 54 00 ; 11, .WORD-SHORT
;
f4a7: b9 f4 00 00                ; .(LAST) - (next: f4b9 .(HERE))
f4ab: 85 0c 00 00 00             ; XT=0c85, flags=00
f4b0: 07 2e 28 4c 41 53 54 29 00 ; 7, .(LAST)
;
f4b9: cb f4 00 00                ; .(HERE) - (next: f4cb .(MEM_SZ))
f4bd: 4e 0c 00 00 00             ; XT=0c4e, flags=00
f4c2: 07 2e 28 48 45 52 45 29 00 ; 7, .(HERE)
;
f4cb: df f4 00 00                ; .(MEM_SZ) - (next: f4df .S)
f4cf: 15 0c 00 00 00             ; XT=0c15, flags=00
f4d4: 09 2e 28 4d 45 4d 5f 53 5a 29 00 ; 9, .(MEM_SZ)
;
f4df: ec f4 00 00                ; .S - (next: f4ec MAX)
f4e3: a9 0b 00 00 00             ; XT=0ba9, flags=00
f4e8: 02 2e 53 00                ; 2, .S
;
f4ec: fa f4 00 00                ; MAX - (next: f4fa MIN)
f4f0: 99 0b 00 00 00             ; XT=0b99, flags=00
f4f5: 03 4d 41 58 00             ; 3, MAX
;
f4fa: 08 f5 00 00                ; MIN - (next: f508 BINARY.)
f4fe: 89 0b 00 00 00             ; XT=0b89, flags=00
f503: 03 4d 49 4e 00             ; 3, MIN
;
f508: 1a f5 00 00                ; BINARY. - (next: f51a DECIMAL.3)
f50c: 6c 0b 00 00 00             ; XT=0b6c, flags=00
f511: 07 42 49 4e 41 52 59 2e 00 ; 7, BINARY.
;
f51a: 2e f5 00 00                ; DECIMAL.3 - (next: f52e DECIMAL.)
f51e: 4f 0b 00 00 00             ; XT=0b4f, flags=00
f523: 09 44 45 43 49 4d 41 4c 2e 33 00 ; 9, DECIMAL.3
;
f52e: 41 f5 00 00                ; DECIMAL. - (next: f541 HEX.4)
f532: 32 0b 00 00 00             ; XT=0b32, flags=00
f537: 08 44 45 43 49 4d 41 4c 2e 00 ; 8, DECIMAL.
;
f541: 51 f5 00 00                ; HEX.4 - (next: f551 HEX.2)
f545: 15 0b 00 00 00             ; XT=0b15, flags=00
f54a: 05 48 45 58 2e 34 00       ; 5, HEX.4
;
f551: 61 f5 00 00                ; HEX.2 - (next: f561 HEX.)
f555: f8 0a 00 00 00             ; XT=0af8, flags=00
f55a: 05 48 45 58 2e 32 00       ; 5, HEX.2
;
f561: 70 f5 00 00                ; HEX. - (next: f570 .4)
f565: db 0a 00 00 00             ; XT=0adb, flags=00
f56a: 04 48 45 58 2e 00          ; 4, HEX.
;
f570: 7d f5 00 00                ; .4 - (next: f57d .3)
f574: b2 0a 00 00 00             ; XT=0ab2, flags=00
f579: 02 2e 34 00                ; 2, .4
;
f57d: 8a f5 00 00                ; .3 - (next: f58a .2)
f581: 8e 0a 00 00 00             ; XT=0a8e, flags=00
f586: 02 2e 33 00                ; 2, .3
;
f58a: 97 f5 00 00                ; .2 - (next: f597 .)
f58e: 6f 0a 00 00 00             ; XT=0a6f, flags=00
f593: 02 2e 32 00                ; 2, .2
;
f597: a3 f5 00 00                ; . - (next: f5a3 (.))
f59b: 61 0a 00 00 00             ; XT=0a61, flags=00
f5a0: 01 2e 00                   ; 1, .
;
f5a3: b1 f5 00 00                ; (.) - (next: f5b1 #P)
f5a7: 47 0a 00 00 00             ; XT=0a47, flags=00
f5ac: 03 28 2e 29 00             ; 3, (.)
;
f5b1: be f5 00 00                ; #P - (next: f5be #P-)
f5b5: 33 0a 00 00 00             ; XT=0a33, flags=00
f5ba: 02 23 50 00                ; 2, #P
;
f5be: cc f5 00 00                ; #P- - (next: f5cc #>)
f5c2: 1e 0a 00 00 00             ; XT=0a1e, flags=00
f5c7: 03 23 50 2d 00             ; 3, #P-
;
f5cc: d9 f5 00 00                ; #> - (next: f5d9 #S)
f5d0: 18 0a 00 00 00             ; XT=0a18, flags=00
f5d5: 02 23 3e 00                ; 2, #>
;
f5d9: e6 f5 00 00                ; #S - (next: f5e6 #)
f5dd: 06 0a 00 00 00             ; XT=0a06, flags=00
f5e2: 02 23 53 00                ; 2, #S
;
f5e6: f2 f5 00 00                ; # - (next: f5f2 <#)
f5ea: de 09 00 00 00             ; XT=09de, flags=00
f5ef: 01 23 00                   ; 1, #
;
f5f2: ff f5 00 00                ; <# - (next: f5ff isNumber?)
f5f6: a9 09 00 00 00             ; XT=09a9, flags=00
f5fb: 02 3c 23 00                ; 2, <#
;
f5ff: 13 f6 00 00                ; isNumber? - (next: f613 parse-char)
f603: d4 08 00 00 00             ; XT=08d4, flags=00
f608: 09 69 73 4e 75 6d 62 65 72 3f 00 ; 9, isNumber?
;
f613: 28 f6 00 00                ; parse-char - (next: f628 ABS)
f617: ab 08 00 00 00             ; XT=08ab, flags=00
f61c: 0a 70 61 72 73 65 2d 63 68 61 72 00 ; 10, parse-char
;
f628: 36 f6 00 00                ; ABS - (next: f636 NEGATE)
f62c: 97 08 00 00 00             ; XT=0897, flags=00
f631: 03 41 42 53 00             ; 3, ABS
;
f636: 47 f6 00 00                ; NEGATE - (next: f647 is-num-char?)
f63a: 8d 08 00 00 00             ; XT=088d, flags=00
f63f: 06 4e 45 47 41 54 45 00    ; 6, NEGATE
;
f647: 5e f6 00 00                ; is-num-char? - (next: f65e findInDict)
f64b: 48 08 00 00 00             ; XT=0848, flags=00
f650: 0c 69 73 2d 6e 75 6d 2d 63 68 61 72 3f 00 ; 12, is-num-char?
;
f65e: 73 f6 00 00                ; findInDict - (next: f673 DICT.GetINLINE)
f662: 03 08 00 00 00             ; XT=0803, flags=00
f667: 0a 66 69 6e 64 49 6e 44 69 63 74 00 ; 10, findInDict
;
f673: 8c f6 00 00                ; DICT.GetINLINE - (next: f68c DICT.GetIMMEDIATE)
f677: f3 07 00 00 00             ; XT=07f3, flags=00
f67c: 0e 44 49 43 54 2e 47 65 74 49 4e 4c 49 4e 45 00 ; 14, DICT.GetINLINE
;
f68c: a8 f6 00 00                ; DICT.GetIMMEDIATE - (next: f6a8 FLAGS.ISINLINE?)
f690: e3 07 00 00 00             ; XT=07e3, flags=00
f695: 11 44 49 43 54 2e 47 65 74 49 4d 4d 45 44 49 41 54 45 00 ; 17, DICT.GetIMMEDIATE
;
f6a8: c2 f6 00 00                ; FLAGS.ISINLINE? - (next: f6c2 FLAGS.ISIMMEDIATE?)
f6ac: da 07 00 00 00             ; XT=07da, flags=00
f6b1: 0f 46 4c 41 47 53 2e 49 53 49 4e 4c 49 4e 45 3f 00 ; 15, FLAGS.ISINLINE?
;
f6c2: df f6 00 00                ; FLAGS.ISIMMEDIATE? - (next: f6df XT.GetDICTP)
f6c6: d1 07 00 00 00             ; XT=07d1, flags=00
f6cb: 12 46 4c 41 47 53 2e 49 53 49 4d 4d 45 44 49 41 54 45 3f 00 ; 18, FLAGS.ISIMMEDIATE?
;
f6df: f5 f6 00 00                ; XT.GetDICTP - (next: f6f5 DICTP>NAME)
f6e3: b8 07 00 00 00             ; XT=07b8, flags=00
f6e8: 0b 58 54 2e 47 65 74 44 49 43 54 50 00 ; 11, XT.GetDICTP
;
f6f5: 0a f7 00 00                ; DICTP>NAME - (next: f70a DICT.GetFLAGS)
f6f9: ab 07 00 00 00             ; XT=07ab, flags=00
f6fe: 0a 44 49 43 54 50 3e 4e 41 4d 45 00 ; 10, DICTP>NAME
;
f70a: 22 f7 00 00                ; DICT.GetFLAGS - (next: f722 DICT.GetXT)
f70e: 9f 07 00 00 00             ; XT=079f, flags=00
f713: 0d 44 49 43 54 2e 47 65 74 46 4c 41 47 53 00 ; 13, DICT.GetFLAGS
;
f722: 37 f7 00 00                ; DICT.GetXT - (next: f737 NAME>DICT)
f726: 93 07 00 00 00             ; XT=0793, flags=00
f72b: 0a 44 49 43 54 2e 47 65 74 58 54 00 ; 10, DICT.GetXT
;
f737: 4b f7 00 00                ; NAME>DICT - (next: f74b FLAGS>DICT)
f73b: 86 07 00 00 00             ; XT=0786, flags=00
f740: 09 4e 41 4d 45 3e 44 49 43 54 00 ; 9, NAME>DICT
;
f74b: 60 f7 00 00                ; FLAGS>DICT - (next: f760 XT>DICT)
f74f: 7a 07 00 00 00             ; XT=077a, flags=00
f754: 0a 46 4c 41 47 53 3e 44 49 43 54 00 ; 10, FLAGS>DICT
;
f760: 72 f7 00 00                ; XT>DICT - (next: f772 NEXT>DICT)
f764: 71 07 00 00 00             ; XT=0771, flags=00
f769: 07 58 54 3e 44 49 43 54 00 ; 7, XT>DICT
;
f772: 86 f7 00 00                ; NEXT>DICT - (next: f786 DICT>NAME)
f776: 6b 07 00 00 00             ; XT=076b, flags=00
f77b: 09 4e 45 58 54 3e 44 49 43 54 00 ; 9, NEXT>DICT
;
f786: 9a f7 00 00                ; DICT>NAME - (next: f79a DICT>FLAGS)
f78a: 5f 07 00 00 00             ; XT=075f, flags=00
f78f: 09 44 49 43 54 3e 4e 41 4d 45 00 ; 9, DICT>NAME
;
f79a: af f7 00 00                ; DICT>FLAGS - (next: f7af DICT>XT)
f79e: 53 07 00 00 00             ; XT=0753, flags=00
f7a3: 0a 44 49 43 54 3e 46 4c 41 47 53 00 ; 10, DICT>FLAGS
;
f7af: c1 f7 00 00                ; DICT>XT - (next: f7c1 DICT>NEXT)
f7b3: 4a 07 00 00 00             ; XT=074a, flags=00
f7b8: 07 44 49 43 54 3e 58 54 00 ; 7, DICT>XT
;
f7c1: d5 f7 00 00                ; DICT>NEXT - (next: f7d5 getOneWord)
f7c5: 44 07 00 00 00             ; XT=0744, flags=00
f7ca: 09 44 49 43 54 3e 4e 45 58 54 00 ; 9, DICT>NEXT
;
f7d5: ea f7 00 00                ; getOneWord - (next: f7ea char-find)
f7d9: 12 07 00 00 00             ; XT=0712, flags=00
f7de: 0a 67 65 74 4f 6e 65 57 6f 72 64 00 ; 10, getOneWord
;
f7ea: fe f7 00 00                ; char-find - (next: f7fe to-lower)
f7ee: ce 06 00 00 00             ; XT=06ce, flags=00
f7f3: 09 63 68 61 72 2d 66 69 6e 64 00 ; 9, char-find
;
f7fe: 11 f8 00 00                ; to-lower - (next: f811 to-upper)
f802: b1 06 00 00 00             ; XT=06b1, flags=00
f807: 08 74 6f 2d 6c 6f 77 65 72 00 ; 8, to-lower
;
f811: 24 f8 00 00                ; to-upper - (next: f824 skipWS)
f815: 94 06 00 00 00             ; XT=0694, flags=00
f81a: 08 74 6f 2d 75 70 70 65 72 00 ; 8, to-upper
;
f824: 35 f8 00 00                ; skipWS - (next: f835 BETWEEN)
f828: 6b 06 00 00 00             ; XT=066b, flags=00
f82d: 06 73 6b 69 70 57 53 00    ; 6, skipWS
;
f835: 47 f8 00 00                ; BETWEEN - (next: f847 CR)
f839: 55 06 00 00 00             ; XT=0655, flags=00
f83e: 07 42 45 54 57 45 45 4e 00 ; 7, BETWEEN
;
f847: 54 f8 00 00                ; CR - (next: f854 CRLF)
f84b: 49 06 00 00 02             ; XT=0649, flags=02
f850: 02 43 52 00                ; 2, CR
;
f854: 63 f8 00 00                ; CRLF - (next: f863 BL)
f858: 3d 06 00 00 02             ; XT=063d, flags=02
f85d: 04 43 52 4c 46 00          ; 4, CRLF
;
f863: 70 f8 00 00                ; BL - (next: f870 SPACE)
f867: 34 06 00 00 02             ; XT=0634, flags=02
f86c: 02 42 4c 00                ; 2, BL
;
f870: 80 f8 00 00                ; SPACE - (next: f880 ()
f874: 2b 06 00 00 02             ; XT=062b, flags=02
f879: 05 53 50 41 43 45 00       ; 5, SPACE
;
f880: 8c f8 00 00                ; ( - (next: f88c \)
f884: e9 05 00 00 01             ; XT=05e9, flags=01
f889: 01 28 00                   ; 1, (
;
f88c: 98 f8 00 00                ; \ - (next: f898 CT)
f890: da 05 00 00 01             ; XT=05da, flags=01
f895: 01 5c 00                   ; 1, \
;
f898: a5 f8 00 00                ; CT - (next: f8a5 TYPE)
f89c: ca 05 00 00 00             ; XT=05ca, flags=00
f8a1: 02 43 54 00                ; 2, CT
;
f8a5: b4 f8 00 00                ; TYPE - (next: f8b4 COUNT)
f8a9: ae 05 00 00 00             ; XT=05ae, flags=00
f8ae: 04 54 59 50 45 00          ; 4, TYPE
;
f8b4: c4 f8 00 00                ; COUNT - (next: f8c4 FALSE)
f8b8: a4 05 00 00 00             ; XT=05a4, flags=00
f8bd: 05 43 4f 55 4e 54 00       ; 5, COUNT
;
f8c4: d4 f8 00 00                ; FALSE - (next: f8d4 TRUE)
f8c8: 9c 05 00 00 02             ; XT=059c, flags=02
f8cd: 05 46 41 4c 53 45 00       ; 5, FALSE
;
f8d4: e3 f8 00 00                ; TRUE - (next: f8e3 >=)
f8d8: 91 05 00 00 02             ; XT=0591, flags=02
f8dd: 04 54 52 55 45 00          ; 4, TRUE
;
f8e3: f0 f8 00 00                ; >= - (next: f8f0 <=)
f8e7: 89 05 00 00 02             ; XT=0589, flags=02
f8ec: 02 3e 3d 00                ; 2, >=
;
f8f0: fd f8 00 00                ; <= - (next: f8fd <>)
f8f4: 81 05 00 00 02             ; XT=0581, flags=02
f8f9: 02 3c 3d 00                ; 2, <=
;
f8fd: 0a f9 00 00                ; <> - (next: f90a 0=)
f901: 79 05 00 00 02             ; XT=0579, flags=02
f906: 02 3c 3e 00                ; 2, <>
;
f90a: 17 f9 00 00                ; 0= - (next: f917 C--)
f90e: 72 05 00 00 02             ; XT=0572, flags=02
f913: 02 30 3d 00                ; 2, 0=
;
f917: 25 f9 00 00                ; C-- - (next: f925 C++)
f91b: 67 05 00 00 02             ; XT=0567, flags=02
f920: 03 43 2d 2d 00             ; 3, C--
;
f925: 33 f9 00 00                ; C++ - (next: f933 --)
f929: 5c 05 00 00 02             ; XT=055c, flags=02
f92e: 03 43 2b 2b 00             ; 3, C++
;
f933: 40 f9 00 00                ; -- - (next: f940 ++)
f937: 51 05 00 00 02             ; XT=0551, flags=02
f93c: 02 2d 2d 00                ; 2, --
;
f940: 4d f9 00 00                ; ++ - (next: f94d -!)
f944: 46 05 00 00 02             ; XT=0546, flags=02
f949: 02 2b 2b 00                ; 2, ++
;
f94d: 5a f9 00 00                ; -! - (next: f95a -=)
f951: 39 05 00 00 00             ; XT=0539, flags=00
f956: 02 2d 21 00                ; 2, -!
;
f95a: 67 f9 00 00                ; -= - (next: f967 +=)
f95e: 2d 05 00 00 02             ; XT=052d, flags=02
f963: 02 2d 3d 00                ; 2, -=
;
f967: 74 f9 00 00                ; += - (next: f974 2/)
f96b: 22 05 00 00 02             ; XT=0522, flags=02
f970: 02 2b 3d 00                ; 2, +=
;
f974: 81 f9 00 00                ; 2/ - (next: f981 2*)
f978: 17 05 00 00 02             ; XT=0517, flags=02
f97d: 02 32 2f 00                ; 2, 2/
;
f981: 8e f9 00 00                ; 2* - (next: f98e 1-)
f985: 0e 05 00 00 02             ; XT=050e, flags=02
f98a: 02 32 2a 00                ; 2, 2*
;
f98e: 9b f9 00 00                ; 1- - (next: f99b 1+)
f992: 07 05 00 00 02             ; XT=0507, flags=02
f997: 02 31 2d 00                ; 2, 1-
;
f99b: a8 f9 00 00                ; 1+ - (next: f9a8 MOD)
f99f: 00 05 00 00 02             ; XT=0500, flags=02
f9a4: 02 31 2b 00                ; 2, 1+
;
f9a8: b6 f9 00 00                ; MOD - (next: f9b6 /)
f9ac: f8 04 00 00 02             ; XT=04f8, flags=02
f9b1: 03 4d 4f 44 00             ; 3, MOD
;
f9b6: c2 f9 00 00                ; / - (next: f9c2 -ROT)
f9ba: ef 04 00 00 02             ; XT=04ef, flags=02
f9bf: 01 2f 00                   ; 1, /
;
f9c2: d1 f9 00 00                ; -ROT - (next: f9d1 ROT)
f9c6: e5 04 00 00 02             ; XT=04e5, flags=02
f9cb: 04 2d 52 4f 54 00          ; 4, -ROT
;
f9d1: df f9 00 00                ; ROT - (next: f9df NIP)
f9d5: db 04 00 00 02             ; XT=04db, flags=02
f9da: 03 52 4f 54 00             ; 3, ROT
;
f9df: ed f9 00 00                ; NIP - (next: f9ed TUCK)
f9e3: d3 04 00 00 02             ; XT=04d3, flags=02
f9e8: 03 4e 49 50 00             ; 3, NIP
;
f9ed: fc f9 00 00                ; TUCK - (next: f9fc 2DROP)
f9f1: cb 04 00 00 02             ; XT=04cb, flags=02
f9f6: 04 54 55 43 4b 00          ; 4, TUCK
;
f9fc: 0c fa 00 00                ; 2DROP - (next: fa0c 2DUP)
fa00: c3 04 00 00 02             ; XT=04c3, flags=02
fa05: 05 32 44 52 4f 50 00       ; 5, 2DROP
;
fa0c: 1b fa 00 00                ; 2DUP - (next: fa1b ?DUP)
fa10: bb 04 00 00 02             ; XT=04bb, flags=02
fa15: 04 32 44 55 50 00          ; 4, 2DUP
;
fa1b: 2a fa 00 00                ; ?DUP - (next: fa2a RDROP)
fa1f: ae 04 00 00 00             ; XT=04ae, flags=00
fa24: 04 3f 44 55 50 00          ; 4, ?DUP
;
fa2a: 3a fa 00 00                ; RDROP - (next: fa3a R@)
fa2e: a6 04 00 00 02             ; XT=04a6, flags=02
fa33: 05 52 44 52 4f 50 00       ; 5, RDROP
;
fa3a: 47 fa 00 00                ; R@ - (next: fa47 MEM_SZ)
fa3e: 9f 04 00 00 02             ; XT=049f, flags=02
fa43: 02 52 40 00                ; 2, R@
;
fa47: 58 fa 00 00                ; MEM_SZ - (next: fa58 LEAVE)
fa4b: 93 04 00 00 00             ; XT=0493, flags=00
fa50: 06 4d 45 4d 5f 53 5a 00    ; 6, MEM_SZ
;
fa58: 68 fa 00 00                ; LEAVE - (next: fa68 UNTIL)
fa5c: 7e 04 00 00 01             ; XT=047e, flags=01
fa61: 05 4c 45 41 56 45 00       ; 5, LEAVE
;
fa68: 78 fa 00 00                ; UNTIL - (next: fa78 WHILE)
fa6c: 64 04 00 00 01             ; XT=0464, flags=01
fa71: 05 55 4e 54 49 4c 00       ; 5, UNTIL
;
fa78: 88 fa 00 00                ; WHILE - (next: fa88 AGAIN)
fa7c: 4a 04 00 00 01             ; XT=044a, flags=01
fa81: 05 57 48 49 4c 45 00       ; 5, WHILE
;
fa88: 98 fa 00 00                ; AGAIN - (next: fa98 BEGIN)
fa8c: 30 04 00 00 01             ; XT=0430, flags=01
fa91: 05 41 47 41 49 4e 00       ; 5, AGAIN
;
fa98: a8 fa 00 00                ; BEGIN - (next: faa8 THEN)
fa9c: 1b 04 00 00 01             ; XT=041b, flags=01
faa1: 05 42 45 47 49 4e 00       ; 5, BEGIN
;
faa8: b7 fa 00 00                ; THEN - (next: fab7 ELSE)
faac: 04 04 00 00 01             ; XT=0404, flags=01
fab1: 04 54 48 45 4e 00          ; 4, THEN
;
fab7: c6 fa 00 00                ; ELSE - (next: fac6 IF)
fabb: db 03 00 00 01             ; XT=03db, flags=01
fac0: 04 45 4c 53 45 00          ; 4, ELSE
;
fac6: d3 fa 00 00                ; IF - (next: fad3 ?COMPILING)
faca: ba 03 00 00 01             ; XT=03ba, flags=01
facf: 02 49 46 00                ; 2, IF
;
fad3: e8 fa 00 00                ; ?COMPILING - (next: fae8 OFF)
fad7: ae 03 00 00 00             ; XT=03ae, flags=00
fadc: 0a 3f 43 4f 4d 50 49 4c 49 4e 47 00 ; 10, ?COMPILING
;
fae8: f6 fa 00 00                ; OFF - (next: faf6 ON)
faec: a4 03 00 00 00             ; XT=03a4, flags=00
faf1: 03 4f 46 46 00             ; 3, OFF
;
faf6: 03 fb 00 00                ; ON - (next: fb03 BINARY)
fafa: 9a 03 00 00 00             ; XT=039a, flags=00
faff: 02 4f 4e 00                ; 2, ON
;
fb03: 14 fb 00 00                ; BINARY - (next: fb14 OCTAL)
fb07: 8c 03 00 00 00             ; XT=038c, flags=00
fb0c: 06 42 49 4e 41 52 59 00    ; 6, BINARY
;
fb14: 24 fb 00 00                ; OCTAL - (next: fb24 DECIMAL)
fb18: 7e 03 00 00 00             ; XT=037e, flags=00
fb1d: 05 4f 43 54 41 4c 00       ; 5, OCTAL
;
fb24: 36 fb 00 00                ; DECIMAL - (next: fb36 HEX)
fb28: 70 03 00 00 00             ; XT=0370, flags=00
fb2d: 07 44 45 43 49 4d 41 4c 00 ; 7, DECIMAL
;
fb36: 44 fb 00 00                ; HEX - (next: fb44 FLAG_INLINE)
fb3a: 62 03 00 00 00             ; XT=0362, flags=00
fb3f: 03 48 45 58 00             ; 3, HEX
;
fb44: 5a fb 00 00                ; FLAG_INLINE - (next: fb5a FLAG_IMMEDIATE)
fb48: 5a 03 00 00 02             ; XT=035a, flags=02
fb4d: 0b 46 4c 41 47 5f 49 4e 4c 49 4e 45 00 ; 11, FLAG_INLINE
;
fb5a: 73 fb 00 00                ; FLAG_IMMEDIATE - (next: fb73 CELLS)
fb5e: 52 03 00 00 02             ; XT=0352, flags=02
fb63: 0e 46 4c 41 47 5f 49 4d 4d 45 44 49 41 54 45 00 ; 14, FLAG_IMMEDIATE
;
fb73: 83 fb 00 00                ; CELLS - (next: fb83 IMMEDIATE)
fb77: 49 03 00 00 02             ; XT=0349, flags=02
fb7c: 05 43 45 4c 4c 53 00       ; 5, CELLS
;
fb83: 97 fb 00 00                ; IMMEDIATE - (next: fb97 INLINE)
fb87: 31 03 00 00 00             ; XT=0331, flags=00
fb8c: 09 49 4d 4d 45 44 49 41 54 45 00 ; 9, IMMEDIATE
;
fb97: a8 fb 00 00                ; INLINE - (next: fba8 BYE)
fb9b: 19 03 00 00 00             ; XT=0319, flags=00
fba0: 06 49 4e 4c 49 4e 45 00    ; 6, INLINE
;
fba8: b6 fb 00 00                ; BYE - (next: fbb6 RESET)
fbac: 12 03 00 00 02             ; XT=0312, flags=02
fbb1: 03 42 59 45 00             ; 3, BYE
;
fbb6: c6 fb 00 00                ; RESET - (next: fbc6 BREAK)
fbba: 0b 03 00 00 02             ; XT=030b, flags=02
fbbf: 05 52 45 53 45 54 00       ; 5, RESET
;
fbc6: d6 fb 00 00                ; BREAK - (next: fbd6 NOP)
fbca: 04 03 00 00 02             ; XT=0304, flags=02
fbcf: 05 42 52 45 41 4b 00       ; 5, BREAK
;
fbd6: e4 fb 00 00                ; NOP - (next: fbe4 OPEN-BLOCK)
fbda: fd 02 00 00 02             ; XT=02fd, flags=02
fbdf: 03 4e 4f 50 00             ; 3, NOP
;
fbe4: f9 fb 00 00                ; OPEN-BLOCK - (next: fbf9 +!)
fbe8: f6 02 00 00 02             ; XT=02f6, flags=02
fbed: 0a 4f 50 45 4e 2d 42 4c 4f 43 4b 00 ; 10, OPEN-BLOCK
;
fbf9: 06 fc 00 00                ; +! - (next: fc06 RSHIFT)
fbfd: ef 02 00 00 02             ; XT=02ef, flags=02
fc02: 02 2b 21 00                ; 2, +!
;
fc06: 17 fc 00 00                ; RSHIFT - (next: fc17 LSHIFT)
fc0a: e8 02 00 00 02             ; XT=02e8, flags=02
fc0f: 06 52 53 48 49 46 54 00    ; 6, RSHIFT
;
fc17: 28 fc 00 00                ; LSHIFT - (next: fc28 GETTICK)
fc1b: e1 02 00 00 02             ; XT=02e1, flags=02
fc20: 06 4c 53 48 49 46 54 00    ; 6, LSHIFT
;
fc28: 3a fc 00 00                ; GETTICK - (next: fc3a DEC)
fc2c: da 02 00 00 02             ; XT=02da, flags=02
fc31: 07 47 45 54 54 49 43 4b 00 ; 7, GETTICK
;
fc3a: 48 fc 00 00                ; DEC - (next: fc48 RDEPTH)
fc3e: d3 02 00 00 02             ; XT=02d3, flags=02
fc43: 03 44 45 43 00             ; 3, DEC
;
fc48: 59 fc 00 00                ; RDEPTH - (next: fc59 INC)
fc4c: cc 02 00 00 02             ; XT=02cc, flags=02
fc51: 06 52 44 45 50 54 48 00    ; 6, RDEPTH
;
fc59: 67 fc 00 00                ; INC - (next: fc67 RFETCH)
fc5d: c5 02 00 00 02             ; XT=02c5, flags=02
fc62: 03 49 4e 43 00             ; 3, INC
;
fc67: 78 fc 00 00                ; RFETCH - (next: fc78 NOT)
fc6b: be 02 00 00 02             ; XT=02be, flags=02
fc70: 06 52 46 45 54 43 48 00    ; 6, RFETCH
;
fc78: 86 fc 00 00                ; NOT - (next: fc86 /MOD)
fc7c: b7 02 00 00 02             ; XT=02b7, flags=02
fc81: 03 4e 4f 54 00             ; 3, NOT
;
fc86: 95 fc 00 00                ; /MOD - (next: fc95 COMPAREI)
fc8a: b0 02 00 00 02             ; XT=02b0, flags=02
fc8f: 04 2f 4d 4f 44 00          ; 4, /MOD
;
fc95: a8 fc 00 00                ; COMPAREI - (next: fca8 GETCH)
fc99: a9 02 00 00 02             ; XT=02a9, flags=02
fc9e: 08 43 4f 4d 50 41 52 45 49 00 ; 8, COMPAREI
;
fca8: b8 fc 00 00                ; GETCH - (next: fcb8 DEPTH)
fcac: a2 02 00 00 02             ; XT=02a2, flags=02
fcb1: 05 47 45 54 43 48 00       ; 5, GETCH
;
fcb8: c8 fc 00 00                ; DEPTH - (next: fcc8 PICK)
fcbc: 9b 02 00 00 02             ; XT=029b, flags=02
fcc1: 05 44 45 50 54 48 00       ; 5, DEPTH
;
fcc8: d7 fc 00 00                ; PICK - (next: fcd7 AND)
fccc: 94 02 00 00 02             ; XT=0294, flags=02
fcd1: 04 50 49 43 4b 00          ; 4, PICK
;
fcd7: e5 fc 00 00                ; AND - (next: fce5 COM)
fcdb: 8d 02 00 00 02             ; XT=028d, flags=02
fce0: 03 41 4e 44 00             ; 3, AND
;
fce5: f3 fc 00 00                ; COM - (next: fcf3 R>)
fce9: 86 02 00 00 02             ; XT=0286, flags=02
fcee: 03 43 4f 4d 00             ; 3, COM
;
fcf3: 00 fd 00 00                ; R> - (next: fd00 >R)
fcf7: 7f 02 00 00 02             ; XT=027f, flags=02
fcfc: 02 52 3e 00                ; 2, R>
;
fd00: 0d fd 00 00                ; >R - (next: fd0d FCLOSE)
fd04: 78 02 00 00 02             ; XT=0278, flags=02
fd09: 02 3e 52 00                ; 2, >R
;
fd0d: 1e fd 00 00                ; FCLOSE - (next: fd1e FWRITE)
fd11: 71 02 00 00 02             ; XT=0271, flags=02
fd16: 06 46 43 4c 4f 53 45 00    ; 6, FCLOSE
;
fd1e: 2f fd 00 00                ; FWRITE - (next: fd2f FREADLINE)
fd22: 6a 02 00 00 02             ; XT=026a, flags=02
fd27: 06 46 57 52 49 54 45 00    ; 6, FWRITE
;
fd2f: 43 fd 00 00                ; FREADLINE - (next: fd43 FREAD)
fd33: 63 02 00 00 02             ; XT=0263, flags=02
fd38: 09 46 52 45 41 44 4c 49 4e 45 00 ; 9, FREADLINE
;
fd43: 53 fd 00 00                ; FREAD - (next: fd53 FOPEN)
fd47: 5c 02 00 00 02             ; XT=025c, flags=02
fd4c: 05 46 52 45 41 44 00       ; 5, FREAD
;
fd53: 63 fd 00 00                ; FOPEN - (next: fd63 COMPARE)
fd57: 55 02 00 00 02             ; XT=0255, flags=02
fd5c: 05 46 4f 50 45 4e 00       ; 5, FOPEN
;
fd63: 75 fd 00 00                ; COMPARE - (next: fd75 OVER)
fd67: 4e 02 00 00 02             ; XT=024e, flags=02
fd6c: 07 43 4f 4d 50 41 52 45 00 ; 7, COMPARE
;
fd75: 84 fd 00 00                ; OVER - (next: fd84 EMIT)
fd79: 47 02 00 00 02             ; XT=0247, flags=02
fd7e: 04 4f 56 45 52 00          ; 4, OVER
;
fd84: 93 fd 00 00                ; EMIT - (next: fd93 DICTP)
fd88: 40 02 00 00 02             ; XT=0240, flags=02
fd8d: 04 45 4d 49 54 00          ; 4, EMIT
;
fd93: a3 fd 00 00                ; DICTP - (next: fda3 >)
fd97: 33 02 00 00 02             ; XT=0233, flags=02
fd9c: 05 44 49 43 54 50 00       ; 5, DICTP
;
fda3: af fd 00 00                ; > - (next: fdaf =)
fda7: 2c 02 00 00 02             ; XT=022c, flags=02
fdac: 01 3e 00                   ; 1, >
;
fdaf: bb fd 00 00                ; = - (next: fdbb <)
fdb3: 25 02 00 00 02             ; XT=0225, flags=02
fdb8: 01 3d 00                   ; 1, =
;
fdbb: c7 fd 00 00                ; < - (next: fdc7 /)
fdbf: 1e 02 00 00 02             ; XT=021e, flags=02
fdc4: 01 3c 00                   ; 1, <
;
fdc7: d3 fd 00 00                ; / - (next: fdd3 *)
fdcb: 17 02 00 00 02             ; XT=0217, flags=02
fdd0: 01 2f 00                   ; 1, /
;
fdd3: df fd 00 00                ; * - (next: fddf -)
fdd7: 10 02 00 00 02             ; XT=0210, flags=02
fddc: 01 2a 00                   ; 1, *
;
fddf: eb fd 00 00                ; - - (next: fdeb +)
fde3: 09 02 00 00 02             ; XT=0209, flags=02
fde8: 01 2d 00                   ; 1, -
;
fdeb: f7 fd 00 00                ; + - (next: fdf7 C!)
fdef: 02 02 00 00 02             ; XT=0202, flags=02
fdf4: 01 2b 00                   ; 1, +
;
fdf7: 04 fe 00 00                ; C! - (next: fe04 C@)
fdfb: fb 01 00 00 02             ; XT=01fb, flags=02
fe00: 02 43 21 00                ; 2, C!
;
fe04: 11 fe 00 00                ; C@ - (next: fe11 CLITERAL)
fe08: f4 01 00 00 02             ; XT=01f4, flags=02
fe0d: 02 43 40 00                ; 2, C@
;
fe11: 24 fe 00 00                ; CLITERAL - (next: fe24 OR)
fe15: e7 01 00 00 02             ; XT=01e7, flags=02
fe1a: 08 43 4c 49 54 45 52 41 4c 00 ; 8, CLITERAL
;
fe24: 31 fe 00 00                ; OR - (next: fe31 RET)
fe28: e0 01 00 00 02             ; XT=01e0, flags=02
fe2d: 02 4f 52 00                ; 2, OR
;
fe31: 3f fe 00 00                ; RET - (next: fe3f CALL)
fe35: d3 01 00 00 00             ; XT=01d3, flags=00
fe3a: 03 52 45 54 00             ; 3, RET
;
fe3f: 4e fe 00 00                ; CALL - (next: fe4e JMPNZ)
fe43: c6 01 00 00 00             ; XT=01c6, flags=00
fe48: 04 43 41 4c 4c 00          ; 4, CALL
;
fe4e: 5e fe 00 00                ; JMPNZ - (next: fe5e JMPZ)
fe52: b9 01 00 00 00             ; XT=01b9, flags=00
fe57: 05 4a 4d 50 4e 5a 00       ; 5, JMPNZ
;
fe5e: 6d fe 00 00                ; JMPZ - (next: fe6d JMP)
fe62: ac 01 00 00 00             ; XT=01ac, flags=00
fe67: 04 4a 4d 50 5a 00          ; 4, JMPZ
;
fe6d: 7b fe 00 00                ; JMP - (next: fe7b SLITERAL)
fe71: 9f 01 00 00 00             ; XT=019f, flags=00
fe76: 03 4a 4d 50 00             ; 3, JMP
;
fe7b: 8e fe 00 00                ; SLITERAL - (next: fe8e DUP)
fe7f: 92 01 00 00 00             ; XT=0192, flags=00
fe84: 08 53 4c 49 54 45 52 41 4c 00 ; 8, SLITERAL
;
fe8e: 9c fe 00 00                ; DUP - (next: fe9c DROP)
fe92: 8b 01 00 00 02             ; XT=018b, flags=02
fe97: 03 44 55 50 00             ; 3, DUP
;
fe9c: ab fe 00 00                ; DROP - (next: feab SWAP)
fea0: 84 01 00 00 02             ; XT=0184, flags=02
fea5: 04 44 52 4f 50 00          ; 4, DROP
;
feab: ba fe 00 00                ; SWAP - (next: feba !)
feaf: 7d 01 00 00 02             ; XT=017d, flags=02
feb4: 04 53 57 41 50 00          ; 4, SWAP
;
feba: c6 fe 00 00                ; ! - (next: fec6 @)
febe: 76 01 00 00 02             ; XT=0176, flags=02
fec3: 01 21 00                   ; 1, !
;
fec6: d2 fe 00 00                ; @ - (next: fed2 LITERAL)
feca: 6f 01 00 00 02             ; XT=016f, flags=02
fecf: 01 40 00                   ; 1, @
;
fed2: e4 fe 00 00                ; LITERAL - (next: fee4 ])
fed6: 62 01 00 00 00             ; XT=0162, flags=00
fedb: 07 4c 49 54 45 52 41 4c 00 ; 7, LITERAL
;
fee4: f0 fe 00 00                ; ] - (next: fef0 [)
fee8: 54 01 00 00 01             ; XT=0154, flags=01
feed: 01 5d 00                   ; 1, ]
;
fef0: fc fe 00 00                ; [ - (next: fefc ,)
fef4: 46 01 00 00 01             ; XT=0146, flags=01
fef9: 01 5b 00                   ; 1, [
;
fefc: 08 ff 00 00                ; , - (next: ff08 C,)
ff00: 2c 01 00 00 00             ; XT=012c, flags=00
ff05: 01 2c 00                   ; 1, ,
;
ff08: 15 ff 00 00                ; C, - (next: ff15 LAST)
ff0c: 14 01 00 00 00             ; XT=0114, flags=00
ff11: 02 43 2c 00                ; 2, C,
;
ff15: 24 ff 00 00                ; LAST - (next: ff24 HERE)
ff19: 08 01 00 00 00             ; XT=0108, flags=00
ff1e: 04 4c 41 53 54 00          ; 4, LAST
;
ff24: 33 ff 00 00                ; HERE - (next: ff33 CELL)
ff28: fc 00 00 00 00             ; XT=00fc, flags=00
ff2d: 04 48 45 52 45 00          ; 4, HERE
;
ff33: 42 ff 00 00                ; CELL - (next: ff42 T3)
ff37: f4 00 00 00 02             ; XT=00f4, flags=02
ff3c: 04 43 45 4c 4c 00          ; 4, CELL
;
ff42: 4f ff 00 00                ; T3 - (next: ff4f T2)
ff46: e5 00 00 00 00             ; XT=00e5, flags=00
ff4b: 02 54 33 00                ; 2, T3
;
ff4f: 5c ff 00 00                ; T2 - (next: ff5c T1)
ff53: d6 00 00 00 00             ; XT=00d6, flags=00
ff58: 02 54 32 00                ; 2, T2
;
ff5c: 69 ff 00 00                ; T1 - (next: ff69 INPUT-FP)
ff60: c7 00 00 00 00             ; XT=00c7, flags=00
ff65: 02 54 31 00                ; 2, T1
;
ff69: 7c ff 00 00                ; INPUT-FP - (next: ff7c #LEN)
ff6d: b8 00 00 00 00             ; XT=00b8, flags=00
ff72: 08 49 4e 50 55 54 2d 46 50 00 ; 8, INPUT-FP
;
ff7c: 8b ff 00 00                ; #LEN - (next: ff8b #NEG)
ff80: a9 00 00 00 00             ; XT=00a9, flags=00
ff85: 04 23 4c 45 4e 00          ; 4, #LEN
;
ff8b: 9a ff 00 00                ; #NEG - (next: ff9a >IN)
ff8f: 9a 00 00 00 00             ; XT=009a, flags=00
ff94: 04 23 4e 45 47 00          ; 4, #NEG
;
ff9a: a8 ff 00 00                ; >IN - (next: ffa8 (MEM_SZ))
ff9e: 8b 00 00 00 00             ; XT=008b, flags=00
ffa3: 03 3e 49 4e 00             ; 3, >IN
;
ffa8: bb ff 00 00                ; (MEM_SZ) - (next: ffbb STATE)
ffac: 7c 00 00 00 00             ; XT=007c, flags=00
ffb1: 08 28 4d 45 4d 5f 53 5a 29 00 ; 8, (MEM_SZ)
;
ffbb: cb ff 00 00                ; STATE - (next: ffcb BASE)
ffbf: 6d 00 00 00 00             ; XT=006d, flags=00
ffc4: 05 53 54 41 54 45 00       ; 5, STATE
;
ffcb: da ff 00 00                ; BASE - (next: ffda (LAST))
ffcf: 5e 00 00 00 00             ; XT=005e, flags=00
ffd4: 04 42 41 53 45 00          ; 4, BASE
;
ffda: eb ff 00 00                ; (LAST) - (next: ffeb (HERE))
ffde: 4f 00 00 00 00             ; XT=004f, flags=00
ffe3: 06 28 4c 41 53 54 29 00    ; 6, (LAST)
;
ffeb: fc ff 00 00                ; (HERE) - (next: fffc <end>)
ffef: 40 00 00 00 00             ; XT=0040, flags=00
fff4: 06 28 48 45 52 45 29 00    ; 6, (HERE)
;
fffc: 00 00 00 00                ; End.
