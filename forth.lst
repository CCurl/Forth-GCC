; memory-size: 65536 bytes, (10000 hex)
; data-stack: fe00, grows up
; return-stack: fffc, grows down
;
0000: 08 b5 12 00 00             ; JMP main (12b5)
;
0005: 00 00 00
0008: 00000004 00000000
0010: 000015ec 0000eeae 0000000a 00000000
0020: 00000000 00010000 00000000 00000000
0030: 00000000 00000000 00000000 00000000
;
0040: 18 eb fd 00 00             ; DICTP (HERE) (fdeb)
0045: 01 4b 00 00 00             ; LITERAL 75 (0x004b)
004a: 0c                         ; RET
004b: ec 15 00 00                ; dw 0x15ec
;
004f: 18 da fd 00 00             ; DICTP (LAST) (fdda)
0054: 01 5a 00 00 00             ; LITERAL 90 (0x005a)
0059: 0c                         ; RET
005a: ae ee 00 00                ; dw 0xeeae
;
005e: 18 cb fd 00 00             ; DICTP BASE (fdcb)
0063: 01 69 00 00 00             ; LITERAL 105 (0x0069)
0068: 0c                         ; RET
0069: 0a 00 00 00                ; dw 0x000a
;
006d: 18 bb fd 00 00             ; DICTP STATE (fdbb)
0072: 01 78 00 00 00             ; LITERAL 120 (0x0078)
0077: 0c                         ; RET
0078: 63 00 00 00                ; dw 0x0063
;
007c: 18 a8 fd 00 00             ; DICTP (MEM_SZ) (fda8)
0081: 01 87 00 00 00             ; LITERAL 135 (0x0087)
0086: 0c                         ; RET
0087: 00 00 01 00                ; dw 0x10000
;
008b: 18 9a fd 00 00             ; DICTP >IN (fd9a)
0090: 01 96 00 00 00             ; LITERAL 150 (0x0096)
0095: 0c                         ; RET
0096: 00 00 00 00                ; dw 0x0000
;
009a: 18 8a fd 00 00             ; DICTP (tmp) (fd8a)
009f: 01 a5 00 00 00             ; LITERAL 165 (0x00a5)
00a4: 0c                         ; RET
00a5: 00 00 00 00                ; dw 0x0000
;
00a9: 18 7b fd 00 00             ; DICTP #NEG (fd7b)
00ae: 01 b4 00 00 00             ; LITERAL 180 (0x00b4)
00b3: 0c                         ; RET
00b4: 00 00 00 00                ; dw 0x0000
;
00b8: 18 6c fd 00 00             ; DICTP #LEN (fd6c)
00bd: 01 c3 00 00 00             ; LITERAL 195 (0x00c3)
00c2: 0c                         ; RET
00c3: 05 00 00 00                ; dw 0x0005
;
00c7: 18 59 fd 00 00             ; DICTP INPUT-FP (fd59)
00cc: 01 d2 00 00 00             ; LITERAL 210 (0x00d2)
00d1: 0c                         ; RET
00d2: 00 00 00 00                ; dw 0x0000
;
00d6: 18 4c fd 00 00             ; DICTP T1 (fd4c)
00db: 01 e1 00 00 00             ; LITERAL 225 (0x00e1)
00e0: 0c                         ; RET
00e1: 00 00 00 00                ; dw 0x0000
;
00e5: 18 3f fd 00 00             ; DICTP T2 (fd3f)
00ea: 01 f0 00 00 00             ; LITERAL 240 (0x00f0)
00ef: 0c                         ; RET
00f0: 00 00 00 00                ; dw 0x0000
;
00f4: 18 32 fd 00 00             ; DICTP T3 (fd32)
00f9: 01 ff 00 00 00             ; LITERAL 255 (0x00ff)
00fe: 0c                         ; RET
00ff: 00 00 00 00                ; dw 0x0000
;
0103: 00                         ; RESET
0104: 18 23 fd 00 00             ; DICTP CELL (fd23)
0109: 0e 04                      ; CLITERAL 4
010b: 0c                         ; RET
;
010c: 18 14 fd 00 00             ; DICTP HERE (fd14)
0111: 0b 40 00 00 00             ; CALL (HERE) (0040)
0116: 02                         ; FETCH
0117: 0c                         ; RET
;
0118: 18 05 fd 00 00             ; DICTP LAST (fd05)
011d: 0b 4f 00 00 00             ; CALL (LAST) (004f)
0122: 02                         ; FETCH
0123: 0c                         ; RET
;
0124: 18 f8 fc 00 00             ; DICTP C, (fcf8)
0129: 0b 0c 01 00 00             ; CALL HERE (010c)
012e: 10                         ; CSTORE
012f: 0b 0c 01 00 00             ; CALL HERE (010c)
0134: 0e 01                      ; CLITERAL 1
0136: 11                         ; ADD
0137: 0b 40 00 00 00             ; CALL (HERE) (0040)
013c: 03                         ; STORE
013d: 0c                         ; RET
;
013e: 18 ec fc 00 00             ; DICTP , (fcec)
0143: 0b 0c 01 00 00             ; CALL HERE (010c)
0148: 03                         ; STORE
0149: 0b 0c 01 00 00             ; CALL HERE (010c)
014e: 0b 04 01 00 00             ; CALL CELL (0104)
0153: 11                         ; ADD
0154: 0b 40 00 00 00             ; CALL (HERE) (0040)
0159: 03                         ; STORE
015a: 0c                         ; RET
;
015b: 18 e0 fc 00 00             ; DICTP [ (fce0)
0160: 0e 00                      ; CLITERAL 0
0162: 0b 6d 00 00 00             ; CALL STATE (006d)
0167: 03                         ; STORE
0168: 0c                         ; RET
;
0169: 18 d4 fc 00 00             ; DICTP ] (fcd4)
016e: 0e 01                      ; CLITERAL 1
0170: 0b 6d 00 00 00             ; CALL STATE (006d)
0175: 03                         ; STORE
0176: 0c                         ; RET
;
0177: 18 c2 fc 00 00             ; DICTP LITERAL (fcc2)
017c: 0e 01                      ; CLITERAL 1
017e: 0b 24 01 00 00             ; CALL C, (0124)
0183: 0c                         ; RET
;
0184: 18 b6 fc 00 00             ; DICTP @ (fcb6)
0189: 02                         ; FETCH
018a: 0c                         ; RET
;
018b: 18 aa fc 00 00             ; DICTP ! (fcaa)
0190: 03                         ; STORE
0191: 0c                         ; RET
;
0192: 18 9b fc 00 00             ; DICTP SWAP (fc9b)
0197: 04                         ; SWAP
0198: 0c                         ; RET
;
0199: 18 8c fc 00 00             ; DICTP DROP (fc8c)
019e: 05                         ; DROP
019f: 0c                         ; RET
;
01a0: 18 7e fc 00 00             ; DICTP DUP (fc7e)
01a5: 06                         ; DUP
01a6: 0c                         ; RET
;
01a7: 18 6b fc 00 00             ; DICTP SLITERAL (fc6b)
01ac: 0e 07                      ; CLITERAL 7
01ae: 0b 24 01 00 00             ; CALL C, (0124)
01b3: 0c                         ; RET
;
01b4: 18 5d fc 00 00             ; DICTP JMP (fc5d)
01b9: 0e 08                      ; CLITERAL 8
01bb: 0b 24 01 00 00             ; CALL C, (0124)
01c0: 0c                         ; RET
;
01c1: 18 4e fc 00 00             ; DICTP JMPZ (fc4e)
01c6: 0e 09                      ; CLITERAL 9
01c8: 0b 24 01 00 00             ; CALL C, (0124)
01cd: 0c                         ; RET
;
01ce: 18 3e fc 00 00             ; DICTP JMPNZ (fc3e)
01d3: 0e 0a                      ; CLITERAL 10
01d5: 0b 24 01 00 00             ; CALL C, (0124)
01da: 0c                         ; RET
;
01db: 18 2f fc 00 00             ; DICTP CALL (fc2f)
01e0: 0e 0b                      ; CLITERAL 11
01e2: 0b 24 01 00 00             ; CALL C, (0124)
01e7: 0c                         ; RET
;
01e8: 18 21 fc 00 00             ; DICTP RET (fc21)
01ed: 0e 0c                      ; CLITERAL 12
01ef: 0b 24 01 00 00             ; CALL C, (0124)
01f4: 0c                         ; RET
;
01f5: 18 14 fc 00 00             ; DICTP OR (fc14)
01fa: 0d                         ; OR
01fb: 0c                         ; RET
;
01fc: 18 01 fc 00 00             ; DICTP CLITERAL (fc01)
0201: 0e 0e                      ; CLITERAL 14
0203: 0b 24 01 00 00             ; CALL C, (0124)
0208: 0c                         ; RET
;
0209: 18 f4 fb 00 00             ; DICTP C@ (fbf4)
020e: 0f                         ; CFETCH
020f: 0c                         ; RET
;
0210: 18 e7 fb 00 00             ; DICTP C! (fbe7)
0215: 10                         ; CSTORE
0216: 0c                         ; RET
;
0217: 18 db fb 00 00             ; DICTP + (fbdb)
021c: 11                         ; ADD
021d: 0c                         ; RET
;
021e: 18 cf fb 00 00             ; DICTP - (fbcf)
0223: 12                         ; SUB
0224: 0c                         ; RET
;
0225: 18 c3 fb 00 00             ; DICTP * (fbc3)
022a: 13                         ; MUL
022b: 0c                         ; RET
;
022c: 18 b7 fb 00 00             ; DICTP / (fbb7)
0231: 14                         ; DIV
0232: 0c                         ; RET
;
0233: 18 ab fb 00 00             ; DICTP < (fbab)
0238: 15                         ; LT
0239: 0c                         ; RET
;
023a: 18 9f fb 00 00             ; DICTP = (fb9f)
023f: 16                         ; EQ
0240: 0c                         ; RET
;
0241: 18 93 fb 00 00             ; DICTP > (fb93)
0246: 17                         ; GT
0247: 0c                         ; RET
;
0248: 18 83 fb 00 00             ; DICTP DICTP (fb83)
024d: 0e 18                      ; CLITERAL 24
024f: 0b 24 01 00 00             ; CALL C, (0124)
0254: 0c                         ; RET
;
0255: 18 74 fb 00 00             ; DICTP EMIT (fb74)
025a: 19                         ; EMIT
025b: 0c                         ; RET
;
025c: 18 65 fb 00 00             ; DICTP OVER (fb65)
0261: 1a                         ; OVER
0262: 0c                         ; RET
;
0263: 18 53 fb 00 00             ; DICTP COMPARE (fb53)
0268: 1b                         ; COMPARE
0269: 0c                         ; RET
;
026a: 18 43 fb 00 00             ; DICTP FOPEN (fb43)
026f: 1c                         ; FOPEN
0270: 0c                         ; RET
;
0271: 18 33 fb 00 00             ; DICTP FREAD (fb33)
0276: 1d                         ; FREAD
0277: 0c                         ; RET
;
0278: 18 1f fb 00 00             ; DICTP FREADLINE (fb1f)
027d: 1e                         ; FREADLINE
027e: 0c                         ; RET
;
027f: 18 0e fb 00 00             ; DICTP FWRITE (fb0e)
0284: 1f                         ; FWRITE
0285: 0c                         ; RET
;
0286: 18 fd fa 00 00             ; DICTP FCLOSE (fafd)
028b: 20                         ; FCLOSE
028c: 0c                         ; RET
;
028d: 18 f0 fa 00 00             ; DICTP >R (faf0)
0292: 21                         ; DTOR
0293: 0c                         ; RET
;
0294: 18 e3 fa 00 00             ; DICTP R> (fae3)
0299: 22                         ; RTOD
029a: 0c                         ; RET
;
029b: 18 d0 fa 00 00             ; DICTP LOGLEVEL (fad0)
02a0: 23                         ; LOGLEVEL
02a1: 0c                         ; RET
;
02a2: 18 c2 fa 00 00             ; DICTP AND (fac2)
02a7: 24                         ; AND
02a8: 0c                         ; RET
;
02a9: 18 b3 fa 00 00             ; DICTP PICK (fab3)
02ae: 25                         ; PICK
02af: 0c                         ; RET
;
02b0: 18 a3 fa 00 00             ; DICTP DEPTH (faa3)
02b5: 26                         ; DEPTH
02b6: 0c                         ; RET
;
02b7: 18 93 fa 00 00             ; DICTP GETCH (fa93)
02bc: 27                         ; GETCH
02bd: 0c                         ; RET
;
02be: 18 80 fa 00 00             ; DICTP COMPAREI (fa80)
02c3: 28                         ; COMPAREI
02c4: 0c                         ; RET
;
02c5: 18 71 fa 00 00             ; DICTP /MOD (fa71)
02ca: 29                         ; RESET
02cb: 0c                         ; RET
;
02cc: 18 63 fa 00 00             ; DICTP INC (fa63)
02d1: 2c                         ; INC
02d2: 0c                         ; RET
;
02d3: 18 52 fa 00 00             ; DICTP RDEPTH (fa52)
02d8: 2d                         ; RDEPTH
02d9: 0c                         ; RET
;
02da: 18 44 fa 00 00             ; DICTP DEC (fa44)
02df: 2e                         ; DEC
02e0: 0c                         ; RET
;
02e1: 18 32 fa 00 00             ; DICTP GETTICK (fa32)
02e6: 2f                         ; GETTICK
02e7: 0c                         ; RET
;
02e8: 18 24 fa 00 00             ; DICTP NOP (fa24)
02ed: fc                         ; NOP
02ee: 0c                         ; RET
;
02ef: 18 14 fa 00 00             ; DICTP BREAK (fa14)
02f4: fd                         ; BREAK
02f5: 0c                         ; RET
;
02f6: 18 04 fa 00 00             ; DICTP RESET (fa04)
02fb: fe                         ; RESET
02fc: 0c                         ; RET
;
02fd: 18 f6 f9 00 00             ; DICTP BYE (f9f6)
0302: ff                         ; BYE
0303: 0c                         ; RET
;
0304: 18 e5 f9 00 00             ; DICTP INLINE (f9e5)
0309: 0b 18 01 00 00             ; CALL LAST (0118)
030e: 0e 02                      ; CLITERAL 2
0310: 0b 04 01 00 00             ; CALL CELL (0104)
0315: 13                         ; MUL
0316: 11                         ; ADD
0317: 06                         ; DUP
0318: 0f                         ; CFETCH
0319: 0e 02                      ; CLITERAL 2
031b: 0d                         ; OR
031c: 04                         ; SWAP
031d: 10                         ; CSTORE
031e: 0c                         ; RET
;
031f: 18 d1 f9 00 00             ; DICTP IMMEDIATE (f9d1)
0324: 0b 18 01 00 00             ; CALL LAST (0118)
0329: 0e 02                      ; CLITERAL 2
032b: 0b 04 01 00 00             ; CALL CELL (0104)
0330: 13                         ; MUL
0331: 11                         ; ADD
0332: 06                         ; DUP
0333: 0f                         ; CFETCH
0334: 0e 01                      ; CLITERAL 1
0336: 0d                         ; OR
0337: 04                         ; SWAP
0338: 10                         ; CSTORE
0339: 0c                         ; RET
;
033a: 18 c1 f9 00 00             ; DICTP CELLS (f9c1)
033f: 0b 04 01 00 00             ; CALL CELL (0104)
0344: 13                         ; MUL
0345: 0c                         ; RET
;
0346: 18 a8 f9 00 00             ; DICTP FLAG_IMMEDIATE (f9a8)
034b: 0e 01                      ; CLITERAL 1
034d: 0c                         ; RET
;
034e: 18 92 f9 00 00             ; DICTP FLAG_INLINE (f992)
0353: 0e 02                      ; CLITERAL 2
0355: 0c                         ; RET
;
0356: 18 84 f9 00 00             ; DICTP HEX (f984)
035b: 0e 10                      ; CLITERAL 16
035d: 0b 5e 00 00 00             ; CALL BASE (005e)
0362: 03                         ; STORE
0363: 0c                         ; RET
;
0364: 18 72 f9 00 00             ; DICTP DECIMAL (f972)
0369: 0e 0a                      ; CLITERAL 10
036b: 0b 5e 00 00 00             ; CALL BASE (005e)
0370: 03                         ; STORE
0371: 0c                         ; RET
;
0372: 18 62 f9 00 00             ; DICTP OCTAL (f962)
0377: 0e 08                      ; CLITERAL 8
0379: 0b 5e 00 00 00             ; CALL BASE (005e)
037e: 03                         ; STORE
037f: 0c                         ; RET
;
0380: 18 51 f9 00 00             ; DICTP BINARY (f951)
0385: 0e 02                      ; CLITERAL 2
0387: 0b 5e 00 00 00             ; CALL BASE (005e)
038c: 03                         ; STORE
038d: 0c                         ; RET
;
038e: 18 44 f9 00 00             ; DICTP ON (f944)
0393: 0e 01                      ; CLITERAL 1
0395: 04                         ; SWAP
0396: 03                         ; STORE
0397: 0c                         ; RET
;
0398: 18 36 f9 00 00             ; DICTP OFF (f936)
039d: 0e 00                      ; CLITERAL 0
039f: 04                         ; SWAP
03a0: 03                         ; STORE
03a1: 0c                         ; RET
;
03a2: 18 21 f9 00 00             ; DICTP ?COMPILING (f921)
03a7: 0b 6d 00 00 00             ; CALL STATE (006d)
03ac: 02                         ; FETCH
03ad: 0c                         ; RET
;
03ae: 18 14 f9 00 00             ; DICTP IF (f914)
03b3: 0b a2 03 00 00             ; CALL ?COMPILING (03a2)
03b8: 09 ce 03 00 00             ; JMPZ 03ce
03bd: 0b c1 01 00 00             ; CALL JMPZ (01c1)
03c2: 0b 0c 01 00 00             ; CALL HERE (010c)
03c7: 0e 00                      ; CLITERAL 0
03c9: 0b 3e 01 00 00             ; CALL , (013e)
03ce: 0c                         ; RET
;
03cf: 18 05 f9 00 00             ; DICTP ELSE (f905)
03d4: 0b a2 03 00 00             ; CALL ?COMPILING (03a2)
03d9: 09 f7 03 00 00             ; JMPZ 03f7
03de: 0b b4 01 00 00             ; CALL JMP (01b4)
03e3: 0b 0c 01 00 00             ; CALL HERE (010c)
03e8: 04                         ; SWAP
03e9: 0e 00                      ; CLITERAL 0
03eb: 0b 3e 01 00 00             ; CALL , (013e)
03f0: 0b 0c 01 00 00             ; CALL HERE (010c)
03f5: 04                         ; SWAP
03f6: 03                         ; STORE
03f7: 0c                         ; RET
;
03f8: 18 f6 f8 00 00             ; DICTP THEN (f8f6)
03fd: 0b a2 03 00 00             ; CALL ?COMPILING (03a2)
0402: 09 0e 04 00 00             ; JMPZ 040e
0407: 0b 0c 01 00 00             ; CALL HERE (010c)
040c: 04                         ; SWAP
040d: 03                         ; STORE
040e: 0c                         ; RET
;
040f: 18 e6 f8 00 00             ; DICTP BEGIN (f8e6)
0414: 0b a2 03 00 00             ; CALL ?COMPILING (03a2)
0419: 09 23 04 00 00             ; JMPZ 0423
041e: 0b 0c 01 00 00             ; CALL HERE (010c)
0423: 0c                         ; RET
;
0424: 18 d6 f8 00 00             ; DICTP AGAIN (f8d6)
0429: 0b a2 03 00 00             ; CALL ?COMPILING (03a2)
042e: 09 3d 04 00 00             ; JMPZ 043d
0433: 0b b4 01 00 00             ; CALL JMP (01b4)
0438: 0b 3e 01 00 00             ; CALL , (013e)
043d: 0c                         ; RET
;
043e: 18 c6 f8 00 00             ; DICTP WHILE (f8c6)
0443: 0b a2 03 00 00             ; CALL ?COMPILING (03a2)
0448: 09 57 04 00 00             ; JMPZ 0457
044d: 0b ce 01 00 00             ; CALL JMPNZ (01ce)
0452: 0b 3e 01 00 00             ; CALL , (013e)
0457: 0c                         ; RET
;
0458: 18 b6 f8 00 00             ; DICTP UNTIL (f8b6)
045d: 0b a2 03 00 00             ; CALL ?COMPILING (03a2)
0462: 09 71 04 00 00             ; JMPZ 0471
0467: 0b c1 01 00 00             ; CALL JMPZ (01c1)
046c: 0b 3e 01 00 00             ; CALL , (013e)
0471: 0c                         ; RET
;
0472: 18 a6 f8 00 00             ; DICTP LEAVE (f8a6)
0477: 0b a2 03 00 00             ; CALL ?COMPILING (03a2)
047c: 09 86 04 00 00             ; JMPZ 0486
0481: 0b e8 01 00 00             ; CALL RET (01e8)
0486: 0c                         ; RET
;
0487: 18 95 f8 00 00             ; DICTP MEM_SZ (f895)
048c: 0b 7c 00 00 00             ; CALL (MEM_SZ) (007c)
0491: 02                         ; FETCH
0492: 0c                         ; RET
;
0493: 18 82 f8 00 00             ; DICTP TRACE-ON (f882)
0498: 0e 02                      ; CLITERAL 2
049a: 23                         ; LOGLEVEL
049b: 0c                         ; RET
;
049c: 18 6e f8 00 00             ; DICTP TRACE-OFF (f86e)
04a1: 0e 00                      ; CLITERAL 0
04a3: 23                         ; LOGLEVEL
04a4: 0c                         ; RET
;
04a5: 18 5b f8 00 00             ; DICTP DEBUG-ON (f85b)
04aa: 0e 01                      ; CLITERAL 1
04ac: 23                         ; LOGLEVEL
04ad: 0c                         ; RET
;
04ae: 18 47 f8 00 00             ; DICTP DEBUG-OFF (f847)
04b3: 0e 00                      ; CLITERAL 0
04b5: 23                         ; LOGLEVEL
04b6: 0c                         ; RET
;
04b7: 18 3a f8 00 00             ; DICTP R@ (f83a)
04bc: 22                         ; RTOD
04bd: 06                         ; DUP
04be: 21                         ; DTOR
04bf: 0c                         ; RET
;
04c0: 18 2a f8 00 00             ; DICTP RDROP (f82a)
04c5: 22                         ; RTOD
04c6: 05                         ; DROP
04c7: 0c                         ; RET
;
04c8: 18 1b f8 00 00             ; DICTP 2DUP (f81b)
04cd: 1a                         ; OVER
04ce: 1a                         ; OVER
04cf: 0c                         ; RET
;
04d0: 18 0b f8 00 00             ; DICTP 2DROP (f80b)
04d5: 05                         ; DROP
04d6: 05                         ; DROP
04d7: 0c                         ; RET
;
04d8: 18 fc f7 00 00             ; DICTP TUCK (f7fc)
04dd: 04                         ; SWAP
04de: 1a                         ; OVER
04df: 0c                         ; RET
;
04e0: 18 ee f7 00 00             ; DICTP NIP (f7ee)
04e5: 04                         ; SWAP
04e6: 05                         ; DROP
04e7: 0c                         ; RET
;
04e8: 18 e0 f7 00 00             ; DICTP ROT (f7e0)
04ed: 21                         ; DTOR
04ee: 04                         ; SWAP
04ef: 22                         ; RTOD
04f0: 04                         ; SWAP
04f1: 0c                         ; RET
;
04f2: 18 d1 f7 00 00             ; DICTP -ROT (f7d1)
04f7: 04                         ; SWAP
04f8: 21                         ; DTOR
04f9: 04                         ; SWAP
04fa: 22                         ; RTOD
04fb: 0c                         ; RET
;
04fc: 18 c5 f7 00 00             ; DICTP / (f7c5)
0501: 29                         ; RESET
0502: 04                         ; SWAP
0503: 05                         ; DROP
0504: 0c                         ; RET
;
0505: 18 b7 f7 00 00             ; DICTP MOD (f7b7)
050a: 29                         ; RESET
050b: 05                         ; DROP
050c: 0c                         ; RET
;
050d: 18 aa f7 00 00             ; DICTP 1+ (f7aa)
0512: 2c                         ; INC
0513: 0c                         ; RET
;
0514: 18 9d f7 00 00             ; DICTP 1- (f79d)
0519: 2e                         ; DEC
051a: 0c                         ; RET
;
051b: 18 90 f7 00 00             ; DICTP 2* (f790)
0520: 0e 02                      ; CLITERAL 2
0522: 13                         ; MUL
0523: 0c                         ; RET
;
0524: 18 83 f7 00 00             ; DICTP 2/ (f783)
0529: 0e 02                      ; CLITERAL 2
052b: 29                         ; RESET
052c: 04                         ; SWAP
052d: 05                         ; DROP
052e: 0c                         ; RET
;
052f: 18 76 f7 00 00             ; DICTP -! (f776)
0534: 04                         ; SWAP
0535: 1a                         ; OVER
0536: 02                         ; FETCH
0537: 12                         ; SUB
0538: 04                         ; SWAP
0539: 03                         ; STORE
053a: 0c                         ; RET
;
053b: 18 69 f7 00 00             ; DICTP += (f769)
0540: 1a                         ; OVER
0541: 02                         ; FETCH
0542: 11                         ; ADD
0543: 04                         ; SWAP
0544: 03                         ; STORE
0545: 0c                         ; RET
;
0546: 18 5c f7 00 00             ; DICTP -= (f75c)
054b: 1a                         ; OVER
054c: 02                         ; FETCH
054d: 04                         ; SWAP
054e: 12                         ; SUB
054f: 04                         ; SWAP
0550: 03                         ; STORE
0551: 0c                         ; RET
;
0552: 18 4f f7 00 00             ; DICTP +! (f74f)
0557: 04                         ; SWAP
0558: 0b 3b 05 00 00             ; CALL += (053b)
055d: 0c                         ; RET
;
055e: 18 42 f7 00 00             ; DICTP ++ (f742)
0563: 0e 01                      ; CLITERAL 1
0565: 0b 3b 05 00 00             ; CALL += (053b)
056a: 0c                         ; RET
;
056b: 18 35 f7 00 00             ; DICTP -- (f735)
0570: 0e 01                      ; CLITERAL 1
0572: 0b 46 05 00 00             ; CALL -= (0546)
0577: 0c                         ; RET
;
0578: 18 27 f7 00 00             ; DICTP C++ (f727)
057d: 06                         ; DUP
057e: 0f                         ; CFETCH
057f: 2c                         ; INC
0580: 04                         ; SWAP
0581: 10                         ; CSTORE
0582: 0c                         ; RET
;
0583: 18 19 f7 00 00             ; DICTP C-- (f719)
0588: 06                         ; DUP
0589: 0f                         ; CFETCH
058a: 2e                         ; DEC
058b: 04                         ; SWAP
058c: 10                         ; CSTORE
058d: 0c                         ; RET
;
058e: 18 0c f7 00 00             ; DICTP 0= (f70c)
0593: 0e 00                      ; CLITERAL 0
0595: 16                         ; EQ
0596: 0c                         ; RET
;
0597: 18 ff f6 00 00             ; DICTP <> (f6ff)
059c: 16                         ; EQ
059d: 0e 00                      ; CLITERAL 0
059f: 16                         ; EQ
05a0: 0c                         ; RET
;
05a1: 18 f2 f6 00 00             ; DICTP <= (f6f2)
05a6: 17                         ; GT
05a7: 0e 00                      ; CLITERAL 0
05a9: 16                         ; EQ
05aa: 0c                         ; RET
;
05ab: 18 e5 f6 00 00             ; DICTP >= (f6e5)
05b0: 15                         ; LT
05b1: 0e 00                      ; CLITERAL 0
05b3: 16                         ; EQ
05b4: 0c                         ; RET
;
05b5: 18 d6 f6 00 00             ; DICTP TRUE (f6d6)
05ba: 0e 01                      ; CLITERAL 1
05bc: 0c                         ; RET
;
05bd: 18 c6 f6 00 00             ; DICTP FALSE (f6c6)
05c2: 0e 00                      ; CLITERAL 0
05c4: 0c                         ; RET
;
05c5: 18 b8 f6 00 00             ; DICTP NOT (f6b8)
05ca: 0e 00                      ; CLITERAL 0
05cc: 16                         ; EQ
05cd: 0c                         ; RET
;
05ce: 18 a8 f6 00 00             ; DICTP COUNT (f6a8)
05d3: 06                         ; DUP
05d4: 2c                         ; INC
05d5: 04                         ; SWAP
05d6: 0f                         ; CFETCH
05d7: 0c                         ; RET
;
05d8: 18 99 f6 00 00             ; DICTP TYPE (f699)
05dd: 1a                         ; OVER
05de: 11                         ; ADD
05df: 04                         ; SWAP
05e0: 1a                         ; OVER
05e1: 1a                         ; OVER
05e2: 17                         ; GT
05e3: 0e 00                      ; CLITERAL 0
05e5: 16                         ; EQ
05e6: 09 ee 05 00 00             ; JMPZ 05ee
05eb: 05                         ; DROP
05ec: 05                         ; DROP
05ed: 0c                         ; RET
05ee: 06                         ; DUP
05ef: 0f                         ; CFETCH
05f0: 19                         ; EMIT
05f1: 2c                         ; INC
05f2: 08 e0 05 00 00             ; JMP 05e0
05f7: 0c                         ; RET
;
05f8: 18 8c f6 00 00             ; DICTP CT (f68c)
05fd: 0b ce 05 00 00             ; CALL COUNT (05ce)
0602: 0b d8 05 00 00             ; CALL TYPE (05d8)
0607: 0c                         ; RET
;
0608: 18 80 f6 00 00             ; DICTP \ (f680)
060d: 0e 00                      ; CLITERAL 0
060f: 0b 8b 00 00 00             ; CALL >IN (008b)
0614: 02                         ; FETCH
0615: 10                         ; CSTORE
0616: 0c                         ; RET
;
0617: 18 74 f6 00 00             ; DICTP ( (f674)
061c: 0b 8b 00 00 00             ; CALL >IN (008b)
0621: 02                         ; FETCH
0622: 0f                         ; CFETCH
0623: 06                         ; DUP
0624: 0e 00                      ; CLITERAL 0
0626: 16                         ; EQ
0627: 09 48 06 00 00             ; JMPZ 0648
062c: 07 13 6d 69 73 73 69 6e 67 20 63 6c 6f 73 69 6e 67 20 27 29 27 00 ; SLITERAL (062d) [missing closing ')']
0642: 0b f8 05 00 00             ; CALL CT (05f8)
0647: fe                         ; RESET
0648: 0b 8b 00 00 00             ; CALL >IN (008b)
064d: 0b 5e 05 00 00             ; CALL ++ (055e)
0652: 0e 29                      ; CLITERAL 41
0654: 16                         ; EQ
0655: 09 5b 06 00 00             ; JMPZ 065b
065a: 0c                         ; RET
065b: 08 1c 06 00 00             ; JMP 061c
0660: 0c                         ; RET
;
0661: 18 67 f6 00 00             ; DICTP BL (f667)
0666: 0e 20                      ; CLITERAL 32
0668: 19                         ; EMIT
0669: 0c                         ; RET
;
066a: 18 58 f6 00 00             ; DICTP CRLF (f658)
066f: 0e 0d                      ; CLITERAL 13
0671: 19                         ; EMIT
0672: 0e 0a                      ; CLITERAL 10
0674: 19                         ; EMIT
0675: 0c                         ; RET
;
0676: 18 4b f6 00 00             ; DICTP CR (f64b)
067b: 0e 0d                      ; CLITERAL 13
067d: 19                         ; EMIT
067e: 0e 0a                      ; CLITERAL 10
0680: 19                         ; EMIT
0681: 0c                         ; RET
;
0682: 18 39 f6 00 00             ; DICTP BETWEEN (f639)
0687: 0e 02                      ; CLITERAL 2
0689: 25                         ; PICK
068a: 15                         ; LT
068b: 09 95 06 00 00             ; JMPZ 0695
0690: 05                         ; DROP
0691: 05                         ; DROP
0692: 0e 00                      ; CLITERAL 0
0694: 0c                         ; RET
0695: 15                         ; LT
0696: 0e 00                      ; CLITERAL 0
0698: 16                         ; EQ
0699: 0c                         ; RET
;
069a: 18 26 f6 00 00             ; DICTP tmp-init (f626)
069f: 0b 18 01 00 00             ; CALL LAST (0118)
06a4: 0b 9a 00 00 00             ; CALL (tmp) (009a)
06a9: 03                         ; STORE
06aa: 0c                         ; RET
;
06ab: 18 14 f6 00 00             ; DICTP tmp-cur (f614)
06b0: 0b 9a 00 00 00             ; CALL (tmp) (009a)
06b5: 02                         ; FETCH
06b6: 0c                         ; RET
;
06b7: 18 00 f6 00 00             ; DICTP tmp-alloc (f600)
06bc: 0b 9a 00 00 00             ; CALL (tmp) (009a)
06c1: 04                         ; SWAP
06c2: 1a                         ; OVER
06c3: 02                         ; FETCH
06c4: 04                         ; SWAP
06c5: 12                         ; SUB
06c6: 04                         ; SWAP
06c7: 03                         ; STORE
06c8: 0b ab 06 00 00             ; CALL tmp-cur (06ab)
06cd: 0c                         ; RET
;
06ce: 18 f2 f5 00 00             ; DICTP PAD (f5f2)
06d3: 0b 9a 06 00 00             ; CALL tmp-init (069a)
06d8: 0e c8                      ; CLITERAL 200
06da: 0b b7 06 00 00             ; CALL tmp-alloc (06b7)
06df: 0c                         ; RET
;
06e0: 18 df f5 00 00             ; DICTP getInput (f5df)
06e5: 0b ce 06 00 00             ; CALL PAD (06ce)
06ea: 0e 80                      ; CLITERAL 128
06ec: 0e 00                      ; CLITERAL 0
06ee: 1e                         ; FREADLINE
06ef: 05                         ; DROP
06f0: 0b ce 06 00 00             ; CALL PAD (06ce)
06f5: 0c                         ; RET
;
06f6: 18 ce f5 00 00             ; DICTP skipWS (f5ce)
06fb: 06                         ; DUP
06fc: 0f                         ; CFETCH
06fd: 06                         ; DUP
06fe: 09 17 07 00 00             ; JMPZ 0717
0703: 0e 20                      ; CLITERAL 32
0705: 17                         ; GT
0706: 09 11 07 00 00             ; JMPZ 0711
070b: 0c                         ; RET
070c: 08 12 07 00 00             ; JMP 0712
0711: 2c                         ; INC
0712: 08 19 07 00 00             ; JMP 0719
0717: 05                         ; DROP
0718: 0c                         ; RET
0719: 08 fb 06 00 00             ; JMP 06fb
071e: 0c                         ; RET
;
071f: 18 b9 f5 00 00             ; DICTP getOneWord (f5b9)
0724: 06                         ; DUP
0725: 21                         ; DTOR
0726: 21                         ; DTOR
0727: 22                         ; RTOD
0728: 06                         ; DUP
0729: 21                         ; DTOR
072a: 0f                         ; CFETCH
072b: 0e 20                      ; CLITERAL 32
072d: 17                         ; GT
072e: 09 3b 07 00 00             ; JMPZ 073b
0733: 22                         ; RTOD
0734: 2c                         ; INC
0735: 21                         ; DTOR
0736: 08 51 07 00 00             ; JMP 0751
073b: 22                         ; RTOD
073c: 06                         ; DUP
073d: 21                         ; DTOR
073e: 0f                         ; CFETCH
073f: 09 4d 07 00 00             ; JMPZ 074d
0744: 0e 00                      ; CLITERAL 0
0746: 22                         ; RTOD
0747: 06                         ; DUP
0748: 21                         ; DTOR
0749: 10                         ; CSTORE
074a: 22                         ; RTOD
074b: 2c                         ; INC
074c: 21                         ; DTOR
074d: 22                         ; RTOD
074e: 22                         ; RTOD
074f: 04                         ; SWAP
0750: 0c                         ; RET
0751: 08 27 07 00 00             ; JMP 0727
0756: 0c                         ; RET
;
0757: 18 a5 f5 00 00             ; DICTP DICT>NEXT (f5a5)
075c: 0c                         ; RET
;
075d: 18 93 f5 00 00             ; DICTP DICT>XT (f593)
0762: 0b 04 01 00 00             ; CALL CELL (0104)
0767: 11                         ; ADD
0768: 0c                         ; RET
;
0769: 18 7e f5 00 00             ; DICTP DICT>FLAGS (f57e)
076e: 0e 02                      ; CLITERAL 2
0770: 0b 04 01 00 00             ; CALL CELL (0104)
0775: 13                         ; MUL
0776: 11                         ; ADD
0777: 0c                         ; RET
;
0778: 18 6a f5 00 00             ; DICTP DICT>NAME (f56a)
077d: 0b 69 07 00 00             ; CALL DICT>FLAGS (0769)
0782: 2c                         ; INC
0783: 0c                         ; RET
;
0784: 18 56 f5 00 00             ; DICTP NEXT>DICT (f556)
0789: 0c                         ; RET
;
078a: 18 44 f5 00 00             ; DICTP XT>DICT (f544)
078f: 0b 04 01 00 00             ; CALL CELL (0104)
0794: 12                         ; SUB
0795: 0c                         ; RET
;
0796: 18 2f f5 00 00             ; DICTP FLAGS>DICT (f52f)
079b: 0e 02                      ; CLITERAL 2
079d: 0b 04 01 00 00             ; CALL CELL (0104)
07a2: 13                         ; MUL
07a3: 12                         ; SUB
07a4: 0c                         ; RET
;
07a5: 18 1b f5 00 00             ; DICTP NAME>DICT (f51b)
07aa: 2e                         ; DEC
07ab: 0e 02                      ; CLITERAL 2
07ad: 0b 04 01 00 00             ; CALL CELL (0104)
07b2: 13                         ; MUL
07b3: 12                         ; SUB
07b4: 0c                         ; RET
;
07b5: 18 06 f5 00 00             ; DICTP DICT.GetXT (f506)
07ba: 0b 5d 07 00 00             ; CALL DICT>XT (075d)
07bf: 02                         ; FETCH
07c0: 0c                         ; RET
;
07c1: 18 ee f4 00 00             ; DICTP DICT.GetFLAGS (f4ee)
07c6: 0b 69 07 00 00             ; CALL DICT>FLAGS (0769)
07cb: 0f                         ; CFETCH
07cc: 0c                         ; RET
;
07cd: 18 d9 f4 00 00             ; DICTP DICTP>NAME (f4d9)
07d2: 2c                         ; INC
07d3: 02                         ; FETCH
07d4: 0b 78 07 00 00             ; CALL DICT>NAME (0778)
07d9: 0c                         ; RET
;
07da: 18 c3 f4 00 00             ; DICTP XT.GetDICTP (f4c3)
07df: 06                         ; DUP
07e0: 0f                         ; CFETCH
07e1: 0e 18                      ; CLITERAL 24
07e3: 16                         ; EQ
07e4: 09 f0 07 00 00             ; JMPZ 07f0
07e9: 2c                         ; INC
07ea: 02                         ; FETCH
07eb: 08 f2 07 00 00             ; JMP 07f2
07f0: 05                         ; DROP
07f1: fe                         ; RESET
07f2: 0c                         ; RET
;
07f3: 18 a6 f4 00 00             ; DICTP FLAGS.ISIMMEDIATE? (f4a6)
07f8: 0e 01                      ; CLITERAL 1
07fa: 24                         ; AND
07fb: 0c                         ; RET
;
07fc: 18 8c f4 00 00             ; DICTP FLAGS.ISINLINE? (f48c)
0801: 0e 02                      ; CLITERAL 2
0803: 24                         ; AND
0804: 0c                         ; RET
;
0805: 18 70 f4 00 00             ; DICTP DICT.GetIMMEDIATE (f470)
080a: 0b c1 07 00 00             ; CALL DICT.GetFLAGS (07c1)
080f: 0b f3 07 00 00             ; CALL FLAGS.ISIMMEDIATE? (07f3)
0814: 0c                         ; RET
;
0815: 18 57 f4 00 00             ; DICTP DICT.GetINLINE (f457)
081a: 0b c1 07 00 00             ; CALL DICT.GetFLAGS (07c1)
081f: 0b fc 07 00 00             ; CALL FLAGS.ISINLINE? (07fc)
0824: 0c                         ; RET
;
0825: 18 42 f4 00 00             ; DICTP findInDict (f442)
082a: 0b 18 01 00 00             ; CALL LAST (0118)
082f: 21                         ; DTOR
0830: 22                         ; RTOD
0831: 06                         ; DUP
0832: 21                         ; DTOR
0833: 06                         ; DUP
0834: 09 5d 08 00 00             ; JMPZ 085d
0839: 0b 78 07 00 00             ; CALL DICT>NAME (0778)
083e: 2c                         ; INC
083f: 1a                         ; OVER
0840: 28                         ; COMPAREI
0841: 09 58 08 00 00             ; JMPZ 0858
0846: 05                         ; DROP
0847: 22                         ; RTOD
0848: 06                         ; DUP
0849: 21                         ; DTOR
084a: 0b b5 07 00 00             ; CALL DICT.GetXT (07b5)
084f: 22                         ; RTOD
0850: 0b c1 07 00 00             ; CALL DICT.GetFLAGS (07c1)
0855: 0e 01                      ; CLITERAL 1
0857: 0c                         ; RET
0858: 08 65 08 00 00             ; JMP 0865
085d: 05                         ; DROP
085e: 05                         ; DROP
085f: 22                         ; RTOD
0860: 0e 00                      ; CLITERAL 0
0862: 0e 00                      ; CLITERAL 0
0864: 0c                         ; RET
0865: 22                         ; RTOD
0866: 02                         ; FETCH
0867: 21                         ; DTOR
0868: 08 30 08 00 00             ; JMP 0830
086d: 0c                         ; RET
;
086e: 18 31 f4 00 00             ; DICTP isHEX? (f431)
0873: 0b 5e 00 00 00             ; CALL BASE (005e)
0878: 02                         ; FETCH
0879: 0e 10                      ; CLITERAL 16
087b: 16                         ; EQ
087c: 0c                         ; RET
;
087d: 18 1c f4 00 00             ; DICTP isNumChar? (f41c)
0882: 06                         ; DUP
0883: 0e 30                      ; CLITERAL 48
0885: 0e 39                      ; CLITERAL 57
0887: 0b 82 06 00 00             ; CALL BETWEEN (0682)
088c: 09 97 08 00 00             ; JMPZ 0897
0891: 0e 30                      ; CLITERAL 48
0893: 12                         ; SUB
0894: 0e 01                      ; CLITERAL 1
0896: 0c                         ; RET
0897: 0b 6e 08 00 00             ; CALL isHEX? (086e)
089c: 09 cb 08 00 00             ; JMPZ 08cb
08a1: 06                         ; DUP
08a2: 0e 41                      ; CLITERAL 65
08a4: 0e 46                      ; CLITERAL 70
08a6: 0b 82 06 00 00             ; CALL BETWEEN (0682)
08ab: 09 b6 08 00 00             ; JMPZ 08b6
08b0: 0e 37                      ; CLITERAL 55
08b2: 12                         ; SUB
08b3: 0e 01                      ; CLITERAL 1
08b5: 0c                         ; RET
08b6: 06                         ; DUP
08b7: 0e 61                      ; CLITERAL 97
08b9: 0e 66                      ; CLITERAL 102
08bb: 0b 82 06 00 00             ; CALL BETWEEN (0682)
08c0: 09 cb 08 00 00             ; JMPZ 08cb
08c5: 0e 57                      ; CLITERAL 87
08c7: 12                         ; SUB
08c8: 0e 01                      ; CLITERAL 1
08ca: 0c                         ; RET
08cb: 0e 00                      ; CLITERAL 0
08cd: 0c                         ; RET
;
08ce: 18 0b f4 00 00             ; DICTP NEGATE (f40b)
08d3: 0e 00                      ; CLITERAL 0
08d5: 04                         ; SWAP
08d6: 12                         ; SUB
08d7: 0c                         ; RET
;
08d8: 18 fd f3 00 00             ; DICTP ABS (f3fd)
08dd: 06                         ; DUP
08de: 0e 00                      ; CLITERAL 0
08e0: 15                         ; LT
08e1: 09 eb 08 00 00             ; JMPZ 08eb
08e6: 0b ce 08 00 00             ; CALL NEGATE (08ce)
08eb: 0c                         ; RET
;
08ec: 18 e9 f3 00 00             ; DICTP isNumber? (f3e9)
08f1: 06                         ; DUP
08f2: 0f                         ; CFETCH
08f3: 0e 2d                      ; CLITERAL 45
08f5: 16                         ; EQ
08f6: 06                         ; DUP
08f7: 0b a9 00 00 00             ; CALL #NEG (00a9)
08fc: 03                         ; STORE
08fd: 09 03 09 00 00             ; JMPZ 0903
0902: 2c                         ; INC
0903: 0e 00                      ; CLITERAL 0
0905: 21                         ; DTOR
0906: 06                         ; DUP
0907: 0f                         ; CFETCH
0908: 06                         ; DUP
0909: 0e 00                      ; CLITERAL 0
090b: 16                         ; EQ
090c: 09 27 09 00 00             ; JMPZ 0927
0911: 05                         ; DROP
0912: 05                         ; DROP
0913: 22                         ; RTOD
0914: 0b a9 00 00 00             ; CALL #NEG (00a9)
0919: 02                         ; FETCH
091a: 09 24 09 00 00             ; JMPZ 0924
091f: 0b ce 08 00 00             ; CALL NEGATE (08ce)
0924: 0e 01                      ; CLITERAL 1
0926: 0c                         ; RET
0927: 0b 7d 08 00 00             ; CALL isNumChar? (087d)
092c: 09 41 09 00 00             ; JMPZ 0941
0931: 22                         ; RTOD
0932: 0b 5e 00 00 00             ; CALL BASE (005e)
0937: 02                         ; FETCH
0938: 13                         ; MUL
0939: 11                         ; ADD
093a: 21                         ; DTOR
093b: 2c                         ; INC
093c: 08 46 09 00 00             ; JMP 0946
0941: 05                         ; DROP
0942: 22                         ; RTOD
0943: 0e 00                      ; CLITERAL 0
0945: 0c                         ; RET
0946: 08 06 09 00 00             ; JMP 0906
094b: 0c                         ; RET
;
094c: 18 d9 f3 00 00             ; DICTP SPACE (f3d9)
0951: 0e 20                      ; CLITERAL 32
0953: 19                         ; EMIT
0954: 0c                         ; RET
;
0955: 18 cc f3 00 00             ; DICTP <# (f3cc)
095a: 0b a9 00 00 00             ; CALL #NEG (00a9)
095f: 0b 98 03 00 00             ; CALL OFF (0398)
0964: 0b b8 00 00 00             ; CALL #LEN (00b8)
0969: 0b 98 03 00 00             ; CALL OFF (0398)
096e: 06                         ; DUP
096f: 0e 00                      ; CLITERAL 0
0971: 15                         ; LT
0972: 09 86 09 00 00             ; JMPZ 0986
0977: 0b ce 08 00 00             ; CALL NEGATE (08ce)
097c: 0b a9 00 00 00             ; CALL #NEG (00a9)
0981: 0b 8e 03 00 00             ; CALL ON (038e)
0986: 0e 00                      ; CLITERAL 0
0988: 04                         ; SWAP
0989: 0c                         ; RET
;
098a: 18 c0 f3 00 00             ; DICTP # (f3c0)
098f: 0b 5e 00 00 00             ; CALL BASE (005e)
0994: 02                         ; FETCH
0995: 29                         ; RESET
0996: 04                         ; SWAP
0997: 0e 30                      ; CLITERAL 48
0999: 11                         ; ADD
099a: 06                         ; DUP
099b: 0e 39                      ; CLITERAL 57
099d: 17                         ; GT
099e: 09 a6 09 00 00             ; JMPZ 09a6
09a3: 0e 07                      ; CLITERAL 7
09a5: 11                         ; ADD
09a6: 0b b8 00 00 00             ; CALL #LEN (00b8)
09ab: 0b 5e 05 00 00             ; CALL ++ (055e)
09b0: 04                         ; SWAP
09b1: 0c                         ; RET
;
09b2: 18 b3 f3 00 00             ; DICTP #S (f3b3)
09b7: 0b 8a 09 00 00             ; CALL # (098a)
09bc: 06                         ; DUP
09bd: 0e 00                      ; CLITERAL 0
09bf: 16                         ; EQ
09c0: 09 b7 09 00 00             ; JMPZ 09b7
09c5: 0c                         ; RET
;
09c6: 18 a6 f3 00 00             ; DICTP #> (f3a6)
09cb: 0c                         ; RET
;
09cc: 18 98 f3 00 00             ; DICTP #P- (f398)
09d1: 05                         ; DROP
09d2: 0b a9 00 00 00             ; CALL #NEG (00a9)
09d7: 02                         ; FETCH
09d8: 09 e0 09 00 00             ; JMPZ 09e0
09dd: 0e 2d                      ; CLITERAL 45
09df: 19                         ; EMIT
09e0: 0c                         ; RET
;
09e1: 18 8b f3 00 00             ; DICTP #P (f38b)
09e6: 0b cc 09 00 00             ; CALL #P- (09cc)
09eb: 19                         ; EMIT
09ec: 06                         ; DUP
09ed: 0e 00                      ; CLITERAL 0
09ef: 16                         ; EQ
09f0: 09 eb 09 00 00             ; JMPZ 09eb
09f5: 05                         ; DROP
09f6: 0c                         ; RET
;
09f7: 18 7d f3 00 00             ; DICTP (.) (f37d)
09fc: 0b 55 09 00 00             ; CALL <# (0955)
0a01: 0b b2 09 00 00             ; CALL #S (09b2)
0a06: 0b c6 09 00 00             ; CALL #> (09c6)
0a0b: 0b e1 09 00 00             ; CALL #P (09e1)
0a10: 0c                         ; RET
;
0a11: 18 71 f3 00 00             ; DICTP . (f371)
0a16: 0b f7 09 00 00             ; CALL (.) (09f7)
0a1b: 0b 4c 09 00 00             ; CALL SPACE (094c)
0a20: 0c                         ; RET
;
0a21: 18 64 f3 00 00             ; DICTP .2 (f364)
0a26: 0b 55 09 00 00             ; CALL <# (0955)
0a2b: 0b 8a 09 00 00             ; CALL # (098a)
0a30: 0b 8a 09 00 00             ; CALL # (098a)
0a35: 0b c6 09 00 00             ; CALL #> (09c6)
0a3a: 0b e1 09 00 00             ; CALL #P (09e1)
0a3f: 0c                         ; RET
;
0a40: 18 57 f3 00 00             ; DICTP .3 (f357)
0a45: 0b 55 09 00 00             ; CALL <# (0955)
0a4a: 0b 8a 09 00 00             ; CALL # (098a)
0a4f: 0b 8a 09 00 00             ; CALL # (098a)
0a54: 0b 8a 09 00 00             ; CALL # (098a)
0a59: 0b c6 09 00 00             ; CALL #> (09c6)
0a5e: 0b e1 09 00 00             ; CALL #P (09e1)
0a63: 0c                         ; RET
;
0a64: 18 4a f3 00 00             ; DICTP .4 (f34a)
0a69: 0b 55 09 00 00             ; CALL <# (0955)
0a6e: 0b 8a 09 00 00             ; CALL # (098a)
0a73: 0b 8a 09 00 00             ; CALL # (098a)
0a78: 0b 8a 09 00 00             ; CALL # (098a)
0a7d: 0b 8a 09 00 00             ; CALL # (098a)
0a82: 0b c6 09 00 00             ; CALL #> (09c6)
0a87: 0b e1 09 00 00             ; CALL #P (09e1)
0a8c: 0c                         ; RET
;
0a8d: 18 3b f3 00 00             ; DICTP HEX. (f33b)
0a92: 0b 5e 00 00 00             ; CALL BASE (005e)
0a97: 02                         ; FETCH
0a98: 04                         ; SWAP
0a99: 0b 56 03 00 00             ; CALL HEX (0356)
0a9e: 0b f7 09 00 00             ; CALL (.) (09f7)
0aa3: 0b 5e 00 00 00             ; CALL BASE (005e)
0aa8: 03                         ; STORE
0aa9: 0c                         ; RET
;
0aaa: 18 2b f3 00 00             ; DICTP HEX.2 (f32b)
0aaf: 0b 5e 00 00 00             ; CALL BASE (005e)
0ab4: 02                         ; FETCH
0ab5: 04                         ; SWAP
0ab6: 0b 56 03 00 00             ; CALL HEX (0356)
0abb: 0b 21 0a 00 00             ; CALL .2 (0a21)
0ac0: 0b 5e 00 00 00             ; CALL BASE (005e)
0ac5: 03                         ; STORE
0ac6: 0c                         ; RET
;
0ac7: 18 1b f3 00 00             ; DICTP HEX.4 (f31b)
0acc: 0b 5e 00 00 00             ; CALL BASE (005e)
0ad1: 02                         ; FETCH
0ad2: 04                         ; SWAP
0ad3: 0b 56 03 00 00             ; CALL HEX (0356)
0ad8: 0b 64 0a 00 00             ; CALL .4 (0a64)
0add: 0b 5e 00 00 00             ; CALL BASE (005e)
0ae2: 03                         ; STORE
0ae3: 0c                         ; RET
;
0ae4: 18 08 f3 00 00             ; DICTP DECIMAL. (f308)
0ae9: 0b 5e 00 00 00             ; CALL BASE (005e)
0aee: 02                         ; FETCH
0aef: 04                         ; SWAP
0af0: 0b 64 03 00 00             ; CALL DECIMAL (0364)
0af5: 0b f7 09 00 00             ; CALL (.) (09f7)
0afa: 0b 5e 00 00 00             ; CALL BASE (005e)
0aff: 03                         ; STORE
0b00: 0c                         ; RET
;
0b01: 18 f4 f2 00 00             ; DICTP DECIMAL.3 (f2f4)
0b06: 0b 5e 00 00 00             ; CALL BASE (005e)
0b0b: 02                         ; FETCH
0b0c: 04                         ; SWAP
0b0d: 0b 64 03 00 00             ; CALL DECIMAL (0364)
0b12: 0b 40 0a 00 00             ; CALL .3 (0a40)
0b17: 0b 5e 00 00 00             ; CALL BASE (005e)
0b1c: 03                         ; STORE
0b1d: 0c                         ; RET
;
0b1e: 18 e2 f2 00 00             ; DICTP BINARY. (f2e2)
0b23: 0b 5e 00 00 00             ; CALL BASE (005e)
0b28: 02                         ; FETCH
0b29: 04                         ; SWAP
0b2a: 0b 80 03 00 00             ; CALL BINARY (0380)
0b2f: 0b f7 09 00 00             ; CALL (.) (09f7)
0b34: 0b 5e 00 00 00             ; CALL BASE (005e)
0b39: 03                         ; STORE
0b3a: 0c                         ; RET
;
0b3b: 18 d4 f2 00 00             ; DICTP MIN (f2d4)
0b40: 1a                         ; OVER
0b41: 1a                         ; OVER
0b42: 17                         ; GT
0b43: 09 49 0b 00 00             ; JMPZ 0b49
0b48: 04                         ; SWAP
0b49: 05                         ; DROP
0b4a: 0c                         ; RET
;
0b4b: 18 c6 f2 00 00             ; DICTP MAX (f2c6)
0b50: 1a                         ; OVER
0b51: 1a                         ; OVER
0b52: 15                         ; LT
0b53: 09 59 0b 00 00             ; JMPZ 0b59
0b58: 04                         ; SWAP
0b59: 05                         ; DROP
0b5a: 0c                         ; RET
;
0b5b: 18 b9 f2 00 00             ; DICTP .S (f2b9)
0b60: 0e 20                      ; CLITERAL 32
0b62: 19                         ; EMIT
0b63: 26                         ; DEPTH
0b64: 0e 00                      ; CLITERAL 0
0b66: 15                         ; LT
0b67: 09 8a 0b 00 00             ; JMPZ 0b8a
0b6c: 07 10 53 74 61 63 6b 20 75 6e 64 65 72 66 6c 6f 77 21 00 ; SLITERAL (0b6d) [Stack underflow!]
0b7f: 0b ce 05 00 00             ; CALL COUNT (05ce)
0b84: 0b d8 05 00 00             ; CALL TYPE (05d8)
0b89: fe                         ; RESET
0b8a: 26                         ; DEPTH
0b8b: 0e 00                      ; CLITERAL 0
0b8d: 16                         ; EQ
0b8e: 09 9d 0b 00 00             ; JMPZ 0b9d
0b93: 0e 28                      ; CLITERAL 40
0b95: 19                         ; EMIT
0b96: 0e ed                      ; CLITERAL 237
0b98: 19                         ; EMIT
0b99: 0e 29                      ; CLITERAL 41
0b9b: 19                         ; EMIT
0b9c: 0c                         ; RET
0b9d: 0e 28                      ; CLITERAL 40
0b9f: 19                         ; EMIT
0ba0: 0b 4c 09 00 00             ; CALL SPACE (094c)
0ba5: 26                         ; DEPTH
0ba6: 2e                         ; DEC
0ba7: 21                         ; DTOR
0ba8: 22                         ; RTOD
0ba9: 06                         ; DUP
0baa: 21                         ; DTOR
0bab: 25                         ; PICK
0bac: 0b 11 0a 00 00             ; CALL . (0a11)
0bb1: 22                         ; RTOD
0bb2: 06                         ; DUP
0bb3: 21                         ; DTOR
0bb4: 09 c1 0b 00 00             ; JMPZ 0bc1
0bb9: 22                         ; RTOD
0bba: 2e                         ; DEC
0bbb: 21                         ; DTOR
0bbc: 08 c7 0b 00 00             ; JMP 0bc7
0bc1: 22                         ; RTOD
0bc2: 05                         ; DROP
0bc3: 0e 29                      ; CLITERAL 41
0bc5: 19                         ; EMIT
0bc6: 0c                         ; RET
0bc7: 08 a8 0b 00 00             ; JMP 0ba8
0bcc: 0c                         ; RET
;
0bcd: 18 a5 f2 00 00             ; DICTP .(MEM_SZ) (f2a5)
0bd2: 07 08 4d 65 6d 6f 72 79 3a 20 00 ; SLITERAL (0bd3) [Memory: ]
0bdd: 0b f8 05 00 00             ; CALL CT (05f8)
0be2: 0b 87 04 00 00             ; CALL MEM_SZ (0487)
0be7: 06                         ; DUP
0be8: 0b 8d 0a 00 00             ; CALL HEX. (0a8d)
0bed: 07 02 20 28 00             ; SLITERAL (0bee) [ (]
0bf2: 0b f8 05 00 00             ; CALL CT (05f8)
0bf7: 0b f7 09 00 00             ; CALL (.) (09f7)
0bfc: 07 01 29 00                ; SLITERAL (0bfd) [)]
0c00: 0b f8 05 00 00             ; CALL CT (05f8)
0c05: 0c                         ; RET
;
0c06: 18 93 f2 00 00             ; DICTP .(HERE) (f293)
0c0b: 07 06 48 45 52 45 3a 20 00 ; SLITERAL (0c0c) [HERE: ]
0c14: 0b f8 05 00 00             ; CALL CT (05f8)
0c19: 0b 0c 01 00 00             ; CALL HERE (010c)
0c1e: 06                         ; DUP
0c1f: 0b 8d 0a 00 00             ; CALL HEX. (0a8d)
0c24: 07 02 20 28 00             ; SLITERAL (0c25) [ (]
0c29: 0b f8 05 00 00             ; CALL CT (05f8)
0c2e: 0b f7 09 00 00             ; CALL (.) (09f7)
0c33: 07 01 29 00                ; SLITERAL (0c34) [)]
0c37: 0b f8 05 00 00             ; CALL CT (05f8)
0c3c: 0c                         ; RET
;
0c3d: 18 81 f2 00 00             ; DICTP .(LAST) (f281)
0c42: 07 06 4c 41 53 54 3a 20 00 ; SLITERAL (0c43) [LAST: ]
0c4b: 0b f8 05 00 00             ; CALL CT (05f8)
0c50: 0b 18 01 00 00             ; CALL LAST (0118)
0c55: 06                         ; DUP
0c56: 0b 8d 0a 00 00             ; CALL HEX. (0a8d)
0c5b: 07 02 20 28 00             ; SLITERAL (0c5c) [ (]
0c60: 0b f8 05 00 00             ; CALL CT (05f8)
0c65: 0b f7 09 00 00             ; CALL (.) (09f7)
0c6a: 07 01 29 00                ; SLITERAL (0c6b) [)]
0c6e: 0b f8 05 00 00             ; CALL CT (05f8)
0c73: 0c                         ; RET
;
0c74: 18 6b f2 00 00             ; DICTP .WORD-SHORT (f26b)
0c79: 06                         ; DUP
0c7a: 0b 78 07 00 00             ; CALL DICT>NAME (0778)
0c7f: 0b f8 05 00 00             ; CALL CT (05f8)
0c84: 0e 20                      ; CLITERAL 32
0c86: 19                         ; EMIT
0c87: 02                         ; FETCH
0c88: 0c                         ; RET
;
0c89: 18 5b f2 00 00             ; DICTP WORDS (f25b)
0c8e: 0b 18 01 00 00             ; CALL LAST (0118)
0c93: 06                         ; DUP
0c94: 02                         ; FETCH
0c95: 0e 00                      ; CLITERAL 0
0c97: 16                         ; EQ
0c98: 09 a5 0c 00 00             ; JMPZ 0ca5
0c9d: 05                         ; DROP
0c9e: 0e 0d                      ; CLITERAL 13
0ca0: 19                         ; EMIT
0ca1: 0e 0a                      ; CLITERAL 10
0ca3: 19                         ; EMIT
0ca4: 0c                         ; RET
0ca5: 0b 74 0c 00 00             ; CALL .WORD-SHORT (0c74)
0caa: 08 93 0c 00 00             ; JMP 0c93
0caf: 0c                         ; RET
;
0cb0: 18 46 f2 00 00             ; DICTP .WORD-LONG (f246)
0cb5: 06                         ; DUP
0cb6: 0b 8d 0a 00 00             ; CALL HEX. (0a8d)
0cbb: 0e 3a                      ; CLITERAL 58
0cbd: 19                         ; EMIT
0cbe: 0e 20                      ; CLITERAL 32
0cc0: 19                         ; EMIT
0cc1: 06                         ; DUP
0cc2: 0b 78 07 00 00             ; CALL DICT>NAME (0778)
0cc7: 0b f8 05 00 00             ; CALL CT (05f8)
0ccc: 0e 20                      ; CLITERAL 32
0cce: 19                         ; EMIT
0ccf: 06                         ; DUP
0cd0: 0b b5 07 00 00             ; CALL DICT.GetXT (07b5)
0cd5: 0e 28                      ; CLITERAL 40
0cd7: 19                         ; EMIT
0cd8: 0b c7 0a 00 00             ; CALL HEX.4 (0ac7)
0cdd: 0e 29                      ; CLITERAL 41
0cdf: 19                         ; EMIT
0ce0: 06                         ; DUP
0ce1: 0b 69 07 00 00             ; CALL DICT>FLAGS (0769)
0ce6: 0f                         ; CFETCH
0ce7: 06                         ; DUP
0ce8: 07 09 2c 20 46 6c 61 67 73 3a 20 00 ; SLITERAL (0ce9) [, Flags: ]
0cf4: 0b f8 05 00 00             ; CALL CT (05f8)
0cf9: 0b aa 0a 00 00             ; CALL HEX.2 (0aaa)
0cfe: 06                         ; DUP
0cff: 0b fc 07 00 00             ; CALL FLAGS.ISINLINE? (07fc)
0d04: 09 1a 0d 00 00             ; JMPZ 0d1a
0d09: 07 09 20 28 49 4e 4c 49 4e 45 29 00 ; SLITERAL (0d0a) [ (INLINE)]
0d15: 0b f8 05 00 00             ; CALL CT (05f8)
0d1a: 0b f3 07 00 00             ; CALL FLAGS.ISIMMEDIATE? (07f3)
0d1f: 09 38 0d 00 00             ; JMPZ 0d38
0d24: 07 0c 20 28 49 4d 4d 45 44 49 41 54 45 29 00 ; SLITERAL (0d25) [ (IMMEDIATE)]
0d33: 0b f8 05 00 00             ; CALL CT (05f8)
0d38: 0e 0d                      ; CLITERAL 13
0d3a: 19                         ; EMIT
0d3b: 0e 0a                      ; CLITERAL 10
0d3d: 19                         ; EMIT
0d3e: 02                         ; FETCH
0d3f: 0c                         ; RET
;
0d40: 18 35 f2 00 00             ; DICTP WORDSV (f235)
0d45: 0b 3d 0c 00 00             ; CALL .(LAST) (0c3d)
0d4a: 0e 0d                      ; CLITERAL 13
0d4c: 19                         ; EMIT
0d4d: 0e 0a                      ; CLITERAL 10
0d4f: 19                         ; EMIT
0d50: 0b 18 01 00 00             ; CALL LAST (0118)
0d55: 06                         ; DUP
0d56: 02                         ; FETCH
0d57: 0e 00                      ; CLITERAL 0
0d59: 16                         ; EQ
0d5a: 09 67 0d 00 00             ; JMPZ 0d67
0d5f: 05                         ; DROP
0d60: 0e 0d                      ; CLITERAL 13
0d62: 19                         ; EMIT
0d63: 0e 0a                      ; CLITERAL 10
0d65: 19                         ; EMIT
0d66: 0c                         ; RET
0d67: 0b b0 0c 00 00             ; CALL .WORD-LONG (0cb0)
0d6c: 08 55 0d 00 00             ; JMP 0d55
0d71: 0c                         ; RET
;
0d72: 18 21 f2 00 00             ; DICTP NUM-WORDS (f221)
0d77: 0e 00                      ; CLITERAL 0
0d79: 21                         ; DTOR
0d7a: 0b 18 01 00 00             ; CALL LAST (0118)
0d7f: 06                         ; DUP
0d80: 02                         ; FETCH
0d81: 0e 00                      ; CLITERAL 0
0d83: 16                         ; EQ
0d84: 09 92 0d 00 00             ; JMPZ 0d92
0d89: 05                         ; DROP
0d8a: 22                         ; RTOD
0d8b: 0e 0d                      ; CLITERAL 13
0d8d: 19                         ; EMIT
0d8e: 0e 0a                      ; CLITERAL 10
0d90: 19                         ; EMIT
0d91: 0c                         ; RET
0d92: 22                         ; RTOD
0d93: 2c                         ; INC
0d94: 21                         ; DTOR
0d95: 02                         ; FETCH
0d96: 08 7f 0d 00 00             ; JMP 0d7f
0d9b: 0c                         ; RET
;
0d9c: 18 10 f2 00 00             ; DICTP .lastx (f210)
0da1: 0e 0d                      ; CLITERAL 13
0da3: 19                         ; EMIT
0da4: 0e 0a                      ; CLITERAL 10
0da6: 19                         ; EMIT
0da7: 0b 18 01 00 00             ; CALL LAST (0118)
0dac: 04                         ; SWAP
0dad: 04                         ; SWAP
0dae: 0b b0 0c 00 00             ; CALL .WORD-LONG (0cb0)
0db3: 04                         ; SWAP
0db4: 2e                         ; DEC
0db5: 06                         ; DUP
0db6: 0a ad 0d 00 00             ; JMPNZ 0dad
0dbb: 05                         ; DROP
0dbc: 05                         ; DROP
0dbd: 0c                         ; RET
;
0dbe: 18 fe f1 00 00             ; DICTP EXECUTE (f1fe)
0dc3: 22                         ; RTOD
0dc4: 05                         ; DROP
0dc5: 21                         ; DTOR
0dc6: 0c                         ; RET
;
0dc7: 18 eb f1 00 00             ; DICTP find.ret (f1eb)
0dcc: 06                         ; DUP
0dcd: 0f                         ; CFETCH
0dce: 0e 0c                      ; CLITERAL 12
0dd0: 16                         ; EQ
0dd1: 09 d7 0d 00 00             ; JMPZ 0dd7
0dd6: 0c                         ; RET
0dd7: 2c                         ; INC
0dd8: 08 cc 0d 00 00             ; JMP 0dcc
0ddd: 0c                         ; RET
;
0dde: 18 d8 f1 00 00             ; DICTP (inline) (f1d8)
0de3: 1a                         ; OVER
0de4: 1a                         ; OVER
0de5: 15                         ; LT
0de6: 09 ec 0d 00 00             ; JMPZ 0dec
0deb: 04                         ; SWAP
0dec: 06                         ; DUP
0ded: 0f                         ; CFETCH
0dee: 0b 24 01 00 00             ; CALL C, (0124)
0df3: 2c                         ; INC
0df4: 1a                         ; OVER
0df5: 1a                         ; OVER
0df6: 17                         ; GT
0df7: 0a ec 0d 00 00             ; JMPNZ 0dec
0dfc: 05                         ; DROP
0dfd: 05                         ; DROP
0dfe: 0c                         ; RET
;
0dff: 18 c8 f1 00 00             ; DICTP DOES> (f1c8)
0e04: 22                         ; RTOD
0e05: 06                         ; DUP
0e06: 0b c7 0d 00 00             ; CALL find.ret (0dc7)
0e0b: 06                         ; DUP
0e0c: 21                         ; DTOR
0e0d: 2c                         ; INC
0e0e: 0b de 0d 00 00             ; CALL (inline) (0dde)
0e13: 0c                         ; RET
;
0e14: 18 b2 f1 00 00             ; DICTP Copy.INLINE (f1b2)
0e19: 06                         ; DUP
0e1a: 0f                         ; CFETCH
0e1b: 0e 18                      ; CLITERAL 24
0e1d: 16                         ; EQ
0e1e: 09 2a 0e 00 00             ; JMPZ 0e2a
0e23: 2c                         ; INC
0e24: 0b 04 01 00 00             ; CALL CELL (0104)
0e29: 11                         ; ADD
0e2a: 06                         ; DUP
0e2b: 0b c7 0d 00 00             ; CALL find.ret (0dc7)
0e30: 0b de 0d 00 00             ; CALL (inline) (0dde)
0e35: 0c                         ; RET
;
0e36: 18 a1 f1 00 00             ; DICTP strlen (f1a1)
0e3b: 0e 00                      ; CLITERAL 0
0e3d: 04                         ; SWAP
0e3e: 04                         ; SWAP
0e3f: 1a                         ; OVER
0e40: 0f                         ; CFETCH
0e41: 06                         ; DUP
0e42: 09 4d 0e 00 00             ; JMPZ 0e4d
0e47: 05                         ; DROP
0e48: 2c                         ; INC
0e49: 04                         ; SWAP
0e4a: 2c                         ; INC
0e4b: 0e 01                      ; CLITERAL 1
0e4d: 0a 3e 0e 00 00             ; JMPNZ 0e3e
0e52: 04                         ; SWAP
0e53: 05                         ; DROP
0e54: 0c                         ; RET
;
0e55: 18 91 f1 00 00             ; DICTP cstr, (f191)
0e5a: 06                         ; DUP
0e5b: 0f                         ; CFETCH
0e5c: 1a                         ; OVER
0e5d: 11                         ; ADD
0e5e: 2c                         ; INC
0e5f: 2c                         ; INC
0e60: 0b de 0d 00 00             ; CALL (inline) (0dde)
0e65: 0c                         ; RET
;
0e66: 18 7d f1 00 00             ; DICTP [COMPILE] (f17d)
0e6b: 0b fc 07 00 00             ; CALL FLAGS.ISINLINE? (07fc)
0e70: 09 7f 0e 00 00             ; JMPZ 0e7f
0e75: 0b 14 0e 00 00             ; CALL Copy.INLINE (0e14)
0e7a: 08 89 0e 00 00             ; JMP 0e89
0e7f: 0b db 01 00 00             ; CALL CALL (01db)
0e84: 0b 3e 01 00 00             ; CALL , (013e)
0e89: 0c                         ; RET
;
0e8a: 18 67 f1 00 00             ; DICTP executeWord (f167)
0e8f: 21                         ; DTOR
0e90: 22                         ; RTOD
0e91: 06                         ; DUP
0e92: 21                         ; DTOR
0e93: 0b 25 08 00 00             ; CALL findInDict (0825)
0e98: 09 d4 0e 00 00             ; JMPZ 0ed4
0e9d: 22                         ; RTOD
0e9e: 05                         ; DROP
0e9f: 0b a2 03 00 00             ; CALL ?COMPILING (03a2)
0ea4: 09 c9 0e 00 00             ; JMPZ 0ec9
0ea9: 06                         ; DUP
0eaa: 0b f3 07 00 00             ; CALL FLAGS.ISIMMEDIATE? (07f3)
0eaf: 09 bf 0e 00 00             ; JMPZ 0ebf
0eb4: 05                         ; DROP
0eb5: 0b be 0d 00 00             ; CALL EXECUTE (0dbe)
0eba: 08 c4 0e 00 00             ; JMP 0ec4
0ebf: 0b 66 0e 00 00             ; CALL [COMPILE] (0e66)
0ec4: 08 cf 0e 00 00             ; JMP 0ecf
0ec9: 05                         ; DROP
0eca: 0b be 0d 00 00             ; CALL EXECUTE (0dbe)
0ecf: 08 2a 0f 00 00             ; JMP 0f2a
0ed4: 05                         ; DROP
0ed5: 05                         ; DROP
0ed6: 22                         ; RTOD
0ed7: 06                         ; DUP
0ed8: 21                         ; DTOR
0ed9: 0b ec 08 00 00             ; CALL isNumber? (08ec)
0ede: 09 1c 0f 00 00             ; JMPZ 0f1c
0ee3: 0b a2 03 00 00             ; CALL ?COMPILING (03a2)
0ee8: 09 17 0f 00 00             ; JMPZ 0f17
0eed: 06                         ; DUP
0eee: 0e 00                      ; CLITERAL 0
0ef0: 0e ff                      ; CLITERAL 255
0ef2: 0b 82 06 00 00             ; CALL BETWEEN (0682)
0ef7: 09 0d 0f 00 00             ; JMPZ 0f0d
0efc: 0e 0e                      ; CLITERAL 14
0efe: 0b 24 01 00 00             ; CALL C, (0124)
0f03: 0b 24 01 00 00             ; CALL C, (0124)
0f08: 08 17 0f 00 00             ; JMP 0f17
0f0d: 0b 77 01 00 00             ; CALL LITERAL (0177)
0f12: 0b 3e 01 00 00             ; CALL , (013e)
0f17: 08 28 0f 00 00             ; JMP 0f28
0f1c: 05                         ; DROP
0f1d: 07 02 3f 3f 00             ; SLITERAL (0f1e) [??]
0f22: 0b f8 05 00 00             ; CALL CT (05f8)
0f27: fe                         ; RESET
0f28: 22                         ; RTOD
0f29: 05                         ; DROP
0f2a: 0c                         ; RET
;
0f2b: 18 50 f1 00 00             ; DICTP executeInput (f150)
0f30: 0b 8b 00 00 00             ; CALL >IN (008b)
0f35: 02                         ; FETCH
0f36: 0b f6 06 00 00             ; CALL skipWS (06f6)
0f3b: 0b 8b 00 00 00             ; CALL >IN (008b)
0f40: 03                         ; STORE
0f41: 0b 8b 00 00 00             ; CALL >IN (008b)
0f46: 02                         ; FETCH
0f47: 0f                         ; CFETCH
0f48: 09 68 0f 00 00             ; JMPZ 0f68
0f4d: 0b 8b 00 00 00             ; CALL >IN (008b)
0f52: 02                         ; FETCH
0f53: 0b 1f 07 00 00             ; CALL getOneWord (071f)
0f58: 0b 8b 00 00 00             ; CALL >IN (008b)
0f5d: 03                         ; STORE
0f5e: 0b 8a 0e 00 00             ; CALL executeWord (0e8a)
0f63: 08 69 0f 00 00             ; JMP 0f69
0f68: 0c                         ; RET
0f69: 08 30 0f 00 00             ; JMP 0f30
0f6e: 0c                         ; RET
;
0f6f: 18 42 f1 00 00             ; DICTP Pad (f142)
0f74: 0b 18 01 00 00             ; CALL LAST (0118)
0f79: 0e c8                      ; CLITERAL 200
0f7b: 12                         ; SUB
0f7c: 06                         ; DUP
0f7d: 0b 0c 01 00 00             ; CALL HERE (010c)
0f82: 15                         ; LT
0f83: 09 9a 0f 00 00             ; JMPZ 0f9a
0f88: 07 0e 4f 75 74 20 6f 66 20 4d 65 6d 6f 72 79 21 00 ; SLITERAL (0f89) [Out of Memory!]
0f99: fe                         ; RESET
0f9a: 0c                         ; RET
;
0f9b: 18 27 f1 00 00             ; DICTP LoadingFromFile? (f127)
0fa0: 0b c7 00 00 00             ; CALL INPUT-FP (00c7)
0fa5: 02                         ; FETCH
0fa6: 0c                         ; RET
;
0fa7: 18 0d f1 00 00             ; DICTP getLineFromFile (f10d)
0fac: 0e c8                      ; CLITERAL 200
0fae: 0b c7 00 00 00             ; CALL INPUT-FP (00c7)
0fb3: 02                         ; FETCH
0fb4: 1e                         ; FREADLINE
0fb5: 0e 00                      ; CLITERAL 0
0fb7: 16                         ; EQ
0fb8: 09 c7 0f 00 00             ; JMPZ 0fc7
0fbd: 0b c7 00 00 00             ; CALL INPUT-FP (00c7)
0fc2: 0b 98 03 00 00             ; CALL OFF (0398)
0fc7: 0c                         ; RET
;
0fc8: 18 fb f0 00 00             ; DICTP getLine (f0fb)
0fcd: 0e 00                      ; CLITERAL 0
0fcf: 0b 6f 0f 00 00             ; CALL Pad (0f6f)
0fd4: 06                         ; DUP
0fd5: 2c                         ; INC
0fd6: 0b 8b 00 00 00             ; CALL >IN (008b)
0fdb: 03                         ; STORE
0fdc: 10                         ; CSTORE
0fdd: 0b 9b 0f 00 00             ; CALL LoadingFromFile? (0f9b)
0fe2: 09 f2 0f 00 00             ; JMPZ 0ff2
0fe7: 0b 6f 0f 00 00             ; CALL Pad (0f6f)
0fec: 0b a7 0f 00 00             ; CALL getLineFromFile (0fa7)
0ff1: 0c                         ; RET
0ff2: 0e 00                      ; CLITERAL 0
0ff4: 0b 8b 00 00 00             ; CALL >IN (008b)
0ff9: 02                         ; FETCH
0ffa: 10                         ; CSTORE
0ffb: 27                         ; GETCH
0ffc: 06                         ; DUP
0ffd: 0e 0d                      ; CLITERAL 13
0fff: 16                         ; EQ
1000: 09 0f 10 00 00             ; JMPZ 100f
1005: 05                         ; DROP
1006: 0b 6f 0f 00 00             ; CALL Pad (0f6f)
100b: 0e 20                      ; CLITERAL 32
100d: 19                         ; EMIT
100e: 0c                         ; RET
100f: 06                         ; DUP
1010: 0e 09                      ; CLITERAL 9
1012: 16                         ; EQ
1013: 09 1b 10 00 00             ; JMPZ 101b
1018: 05                         ; DROP
1019: 0e 20                      ; CLITERAL 32
101b: 06                         ; DUP
101c: 0e 03                      ; CLITERAL 3
101e: 16                         ; EQ
101f: 09 25 10 00 00             ; JMPZ 1025
1024: ff                         ; BYE
1025: 06                         ; DUP
1026: 0e 08                      ; CLITERAL 8
1028: 16                         ; EQ
1029: 09 61 10 00 00             ; JMPZ 1061
102e: 0b 6f 0f 00 00             ; CALL Pad (0f6f)
1033: 0f                         ; CFETCH
1034: 0e 00                      ; CLITERAL 0
1036: 17                         ; GT
1037: 09 5b 10 00 00             ; JMPZ 105b
103c: 0b 6f 0f 00 00             ; CALL Pad (0f6f)
1041: 0b 83 05 00 00             ; CALL C-- (0583)
1046: 0b 8b 00 00 00             ; CALL >IN (008b)
104b: 0b 6b 05 00 00             ; CALL -- (056b)
1050: 06                         ; DUP
1051: 19                         ; EMIT
1052: 0e 20                      ; CLITERAL 32
1054: 19                         ; EMIT
1055: 19                         ; EMIT
1056: 08 5c 10 00 00             ; JMP 105c
105b: 05                         ; DROP
105c: 08 93 10 00 00             ; JMP 1093
1061: 06                         ; DUP
1062: 0e 20                      ; CLITERAL 32
1064: 0e 7f                      ; CLITERAL 127
1066: 0b 82 06 00 00             ; CALL BETWEEN (0682)
106b: 09 92 10 00 00             ; JMPZ 1092
1070: 06                         ; DUP
1071: 19                         ; EMIT
1072: 0b 8b 00 00 00             ; CALL >IN (008b)
1077: 02                         ; FETCH
1078: 10                         ; CSTORE
1079: 0b 8b 00 00 00             ; CALL >IN (008b)
107e: 0b 5e 05 00 00             ; CALL ++ (055e)
1083: 0b 6f 0f 00 00             ; CALL Pad (0f6f)
1088: 0b 78 05 00 00             ; CALL C++ (0578)
108d: 08 93 10 00 00             ; JMP 1093
1092: 05                         ; DROP
1093: 08 f2 0f 00 00             ; JMP 0ff2
1098: 0c                         ; RET
;
1099: 18 e8 f0 00 00             ; DICTP strcpy2c (f0e8)
109e: 06                         ; DUP
109f: 21                         ; DTOR
10a0: 0e 00                      ; CLITERAL 0
10a2: 1a                         ; OVER
10a3: 10                         ; CSTORE
10a4: 2c                         ; INC
10a5: 04                         ; SWAP
10a6: 06                         ; DUP
10a7: 0f                         ; CFETCH
10a8: 06                         ; DUP
10a9: 09 c3 10 00 00             ; JMPZ 10c3
10ae: 0e 02                      ; CLITERAL 2
10b0: 25                         ; PICK
10b1: 10                         ; CSTORE
10b2: 04                         ; SWAP
10b3: 2c                         ; INC
10b4: 04                         ; SWAP
10b5: 2c                         ; INC
10b6: 22                         ; RTOD
10b7: 06                         ; DUP
10b8: 21                         ; DTOR
10b9: 0b 78 05 00 00             ; CALL C++ (0578)
10be: 08 cc 10 00 00             ; JMP 10cc
10c3: 21                         ; DTOR
10c4: 04                         ; SWAP
10c5: 22                         ; RTOD
10c6: 04                         ; SWAP
10c7: 10                         ; CSTORE
10c8: 05                         ; DROP
10c9: 22                         ; RTOD
10ca: 05                         ; DROP
10cb: 0c                         ; RET
10cc: 08 a6 10 00 00             ; JMP 10a6
10d1: 0c                         ; RET
;
10d2: 18 d2 f0 00 00             ; DICTP Define-Word (f0d2)
10d7: 0b 18 01 00 00             ; CALL LAST (0118)
10dc: 1a                         ; OVER
10dd: 0b 36 0e 00 00             ; CALL strlen (0e36)
10e2: 0e 02                      ; CLITERAL 2
10e4: 0b 04 01 00 00             ; CALL CELL (0104)
10e9: 13                         ; MUL
10ea: 0e 03                      ; CLITERAL 3
10ec: 11                         ; ADD
10ed: 11                         ; ADD
10ee: 12                         ; SUB
10ef: 06                         ; DUP
10f0: 21                         ; DTOR
10f1: 21                         ; DTOR
10f2: 0b 18 01 00 00             ; CALL LAST (0118)
10f7: 22                         ; RTOD
10f8: 06                         ; DUP
10f9: 21                         ; DTOR
10fa: 03                         ; STORE
10fb: 22                         ; RTOD
10fc: 0b 04 01 00 00             ; CALL CELL (0104)
1101: 11                         ; ADD
1102: 21                         ; DTOR
1103: 0b 0c 01 00 00             ; CALL HERE (010c)
1108: 22                         ; RTOD
1109: 06                         ; DUP
110a: 21                         ; DTOR
110b: 03                         ; STORE
110c: 22                         ; RTOD
110d: 0b 04 01 00 00             ; CALL CELL (0104)
1112: 11                         ; ADD
1113: 21                         ; DTOR
1114: 0e 00                      ; CLITERAL 0
1116: 22                         ; RTOD
1117: 06                         ; DUP
1118: 21                         ; DTOR
1119: 10                         ; CSTORE
111a: 22                         ; RTOD
111b: 2c                         ; INC
111c: 21                         ; DTOR
111d: 22                         ; RTOD
111e: 0b 99 10 00 00             ; CALL strcpy2c (1099)
1123: 22                         ; RTOD
1124: 0b 4f 00 00 00             ; CALL (LAST) (004f)
1129: 03                         ; STORE
112a: 0c                         ; RET
;
112b: 18 bc f0 00 00             ; DICTP CREATE-NAME (f0bc)
1130: 0b 8b 00 00 00             ; CALL >IN (008b)
1135: 02                         ; FETCH
1136: 0b f6 06 00 00             ; CALL skipWS (06f6)
113b: 0b 8b 00 00 00             ; CALL >IN (008b)
1140: 03                         ; STORE
1141: 0b 8b 00 00 00             ; CALL >IN (008b)
1146: 02                         ; FETCH
1147: 0f                         ; CFETCH
1148: 09 82 11 00 00             ; JMPZ 1182
114d: 0b 8b 00 00 00             ; CALL >IN (008b)
1152: 02                         ; FETCH
1153: 0b 1f 07 00 00             ; CALL getOneWord (071f)
1158: 0b 8b 00 00 00             ; CALL >IN (008b)
115d: 03                         ; STORE
115e: 06                         ; DUP
115f: 0f                         ; CFETCH
1160: 09 80 11 00 00             ; JMPZ 1180
1165: 0b d2 10 00 00             ; CALL Define-Word (10d2)
116a: 0e 18                      ; CLITERAL 24
116c: 0b 24 01 00 00             ; CALL C, (0124)
1171: 0b 18 01 00 00             ; CALL LAST (0118)
1176: 0b 3e 01 00 00             ; CALL , (013e)
117b: 08 82 11 00 00             ; JMP 1182
1180: 05                         ; DROP
1181: fe                         ; RESET
1182: 0c                         ; RET
;
1183: 18 b0 f0 00 00             ; DICTP : (f0b0)
1188: 0b 2b 11 00 00             ; CALL CREATE-NAME (112b)
118d: 0b 6d 00 00 00             ; CALL STATE (006d)
1192: 0b 8e 03 00 00             ; CALL ON (038e)
1197: 0c                         ; RET
;
1198: 18 9e f0 00 00             ; DICTP :NONAME (f09e)
119d: 0b 0c 01 00 00             ; CALL HERE (010c)
11a2: 0b 6d 00 00 00             ; CALL STATE (006d)
11a7: 0b 8e 03 00 00             ; CALL ON (038e)
11ac: 0c                         ; RET
;
11ad: 18 92 f0 00 00             ; DICTP ; (f092)
11b2: 0b e8 01 00 00             ; CALL RET (01e8)
11b7: 0b 6d 00 00 00             ; CALL STATE (006d)
11bc: 0b 98 03 00 00             ; CALL OFF (0398)
11c1: 0c                         ; RET
;
11c2: 18 7d f0 00 00             ; DICTP ForgetLast (f07d)
11c7: 0b 18 01 00 00             ; CALL LAST (0118)
11cc: 0b 04 01 00 00             ; CALL CELL (0104)
11d1: 11                         ; ADD
11d2: 02                         ; FETCH
11d3: 0b 40 00 00 00             ; CALL (HERE) (0040)
11d8: 03                         ; STORE
11d9: 0b 18 01 00 00             ; CALL LAST (0118)
11de: 02                         ; FETCH
11df: 0b 4f 00 00 00             ; CALL (LAST) (004f)
11e4: 03                         ; STORE
11e5: 0c                         ; RET
;
11e6: 18 68 f0 00 00             ; DICTP resetState (f068)
11eb: 0b a2 03 00 00             ; CALL ?COMPILING (03a2)
11f0: 09 fa 11 00 00             ; JMPZ 11fa
11f5: 0b c2 11 00 00             ; CALL ForgetLast (11c2)
11fa: 0b 6d 00 00 00             ; CALL STATE (006d)
11ff: 0b 98 03 00 00             ; CALL OFF (0398)
1204: 0b 64 03 00 00             ; CALL DECIMAL (0364)
1209: 0c                         ; RET
;
120a: 18 58 f0 00 00             ; DICTP ALLOT (f058)
120f: 0b 0c 01 00 00             ; CALL HERE (010c)
1214: 11                         ; ADD
1215: 0b 40 00 00 00             ; CALL (HERE) (0040)
121a: 03                         ; STORE
121b: 0c                         ; RET
;
121c: 18 4c f0 00 00             ; DICTP ? (f04c)
1221: 02                         ; FETCH
1222: 0b 11 0a 00 00             ; CALL . (0a11)
1227: 0c                         ; RET
;
1228: 18 3f f0 00 00             ; DICTP C? (f03f)
122d: 0f                         ; CFETCH
122e: 0b 11 0a 00 00             ; CALL . (0a11)
1233: 0c                         ; RET
;
1234: 18 30 f0 00 00             ; DICTP FREE (f030)
1239: 0b 18 01 00 00             ; CALL LAST (0118)
123e: 0b 0c 01 00 00             ; CALL HERE (010c)
1243: 12                         ; SUB
1244: 0c                         ; RET
;
1245: 18 20 f0 00 00             ; DICTP .FREE (f020)
124a: 0b 34 12 00 00             ; CALL FREE (1234)
124f: 0b f7 09 00 00             ; CALL (.) (09f7)
1254: 07 0c 20 62 79 74 65 73 20 66 72 65 65 2e 00 ; SLITERAL (1255) [ bytes free.]
1263: 0b f8 05 00 00             ; CALL CT (05f8)
1268: 0c                         ; RET
;
1269: 18 0d f0 00 00             ; DICTP mainLoop (f00d)
126e: 0b e6 11 00 00             ; CALL resetState (11e6)
1273: 0b 9a 06 00 00             ; CALL tmp-init (069a)
1278: 0b a2 03 00 00             ; CALL ?COMPILING (03a2)
127d: 0e 00                      ; CLITERAL 0
127f: 16                         ; EQ
1280: 09 95 12 00 00             ; JMPZ 1295
1285: 07 03 20 4f 4b 00          ; SLITERAL (1286) [ OK]
128b: 0b f8 05 00 00             ; CALL CT (05f8)
1290: 0b 5b 0b 00 00             ; CALL .S (0b5b)
1295: 0e 0d                      ; CLITERAL 13
1297: 19                         ; EMIT
1298: 0e 0a                      ; CLITERAL 10
129a: 19                         ; EMIT
129b: 0b c8 0f 00 00             ; CALL getLine (0fc8)
12a0: 2c                         ; INC
12a1: 0b 8b 00 00 00             ; CALL >IN (008b)
12a6: 03                         ; STORE
12a7: 0b 2b 0f 00 00             ; CALL executeInput (0f2b)
12ac: 0e 20                      ; CLITERAL 32
12ae: 19                         ; EMIT
12af: 08 73 12 00 00             ; JMP 1273
12b4: 0c                         ; RET
;
12b5: 18 fe ef 00 00             ; DICTP main (effe)
12ba: 0b 6d 00 00 00             ; CALL STATE (006d)
12bf: 02                         ; FETCH
12c0: 0e 63                      ; CLITERAL 99
12c2: 16                         ; EQ
12c3: 09 e0 12 00 00             ; JMPZ 12e0
12c8: 0b 6d 00 00 00             ; CALL STATE (006d)
12cd: 0b 98 03 00 00             ; CALL OFF (0398)
12d2: 07 06 48 65 6c 6c 6f 2e 00 ; SLITERAL (12d3) [Hello.]
12db: 0b f8 05 00 00             ; CALL CT (05f8)
12e0: 0b 69 12 00 00             ; CALL mainLoop (1269)
12e5: 0c                         ; RET
;
12e6: 18 e7 ef 00 00             ; DICTP file-getLine (efe7)
12eb: 0b 6f 0f 00 00             ; CALL Pad (0f6f)
12f0: 04                         ; SWAP
12f1: 0e c8                      ; CLITERAL 200
12f3: 04                         ; SWAP
12f4: 1e                         ; FREADLINE
12f5: 0b 6f 0f 00 00             ; CALL Pad (0f6f)
12fa: 04                         ; SWAP
12fb: 0c                         ; RET
;
12fc: 18 d8 ef 00 00             ; DICTP load (efd8)
1301: 0e 00                      ; CLITERAL 0
1303: 0e 00                      ; CLITERAL 0
1305: 1c                         ; FOPEN
1306: 0e 00                      ; CLITERAL 0
1308: 16                         ; EQ
1309: 09 28 13 00 00             ; JMPZ 1328
130e: 07 11 43 61 6e 6e 6f 74 20 6f 70 65 6e 20 66 69 6c 65 2e 00 ; SLITERAL (130f) [Cannot open file.]
1322: 0b f8 05 00 00             ; CALL CT (05f8)
1327: 0c                         ; RET
1328: 0b c7 00 00 00             ; CALL INPUT-FP (00c7)
132d: 03                         ; STORE
132e: 0b c7 00 00 00             ; CALL INPUT-FP (00c7)
1333: 02                         ; FETCH
1334: 0b e6 12 00 00             ; CALL file-getLine (12e6)
1339: 09 4f 13 00 00             ; JMPZ 134f
133e: 2c                         ; INC
133f: 0b 8b 00 00 00             ; CALL >IN (008b)
1344: 03                         ; STORE
1345: 0b 2b 0f 00 00             ; CALL executeInput (0f2b)
134a: 08 62 13 00 00             ; JMP 1362
134f: 05                         ; DROP
1350: 0b c7 00 00 00             ; CALL INPUT-FP (00c7)
1355: 02                         ; FETCH
1356: 20                         ; FCLOSE
1357: 0b c7 00 00 00             ; CALL INPUT-FP (00c7)
135c: 0b 98 03 00 00             ; CALL OFF (0398)
1361: 0c                         ; RET
1362: 08 2e 13 00 00             ; JMP 132e
1367: 0c                         ; RET
;
1368: 18 c4 ef 00 00             ; DICTP STR.EMPTY (efc4)
136d: 0e 00                      ; CLITERAL 0
136f: 1a                         ; OVER
1370: 03                         ; STORE
1371: 0c                         ; RET
;
1372: 18 b2 ef 00 00             ; DICTP STR.LEN (efb2)
1377: 06                         ; DUP
1378: 0f                         ; CFETCH
1379: 0c                         ; RET
;
137a: 18 9f ef 00 00             ; DICTP STR.CATC (ef9f)
137f: 1a                         ; OVER
1380: 06                         ; DUP
1381: 0b 78 05 00 00             ; CALL C++ (0578)
1386: 06                         ; DUP
1387: 0f                         ; CFETCH
1388: 11                         ; ADD
1389: 0e 00                      ; CLITERAL 0
138b: 1a                         ; OVER
138c: 2c                         ; INC
138d: 10                         ; CSTORE
138e: 10                         ; CSTORE
138f: 0c                         ; RET
;
1390: 18 88 ef 00 00             ; DICTP STR.NULLTERM (ef88)
1395: 06                         ; DUP
1396: 06                         ; DUP
1397: 0f                         ; CFETCH
1398: 11                         ; ADD
1399: 2c                         ; INC
139a: 0e 00                      ; CLITERAL 0
139c: 04                         ; SWAP
139d: 10                         ; CSTORE
139e: 0c                         ; RET
;
139f: 18 7b ef 00 00             ; DICTP I" (ef7b)
13a4: 0b 0c 01 00 00             ; CALL HERE (010c)
13a9: 0e 64                      ; CLITERAL 100
13ab: 11                         ; ADD
13ac: 0e 00                      ; CLITERAL 0
13ae: 1a                         ; OVER
13af: 03                         ; STORE
13b0: 0b 8b 00 00 00             ; CALL >IN (008b)
13b5: 02                         ; FETCH
13b6: 0f                         ; CFETCH
13b7: 06                         ; DUP
13b8: 0e 00                      ; CLITERAL 0
13ba: 16                         ; EQ
13bb: 09 dc 13 00 00             ; JMPZ 13dc
13c0: 07 10 6d 69 73 73 69 6e 67 20 63 6c 6f 73 69 6e 67 20 00 ; SLITERAL (13c1) [missing closing ]
13d3: 0b f8 05 00 00             ; CALL CT (05f8)
13d8: 0e 22                      ; CLITERAL 34
13da: 19                         ; EMIT
13db: fe                         ; RESET
13dc: 0b 8b 00 00 00             ; CALL >IN (008b)
13e1: 0b 5e 05 00 00             ; CALL ++ (055e)
13e6: 06                         ; DUP
13e7: 0e 22                      ; CLITERAL 34
13e9: 16                         ; EQ
13ea: 09 f1 13 00 00             ; JMPZ 13f1
13ef: 05                         ; DROP
13f0: 0c                         ; RET
13f1: 0b 7a 13 00 00             ; CALL STR.CATC (137a)
13f6: 08 b0 13 00 00             ; JMP 13b0
13fb: 0c                         ; RET
;
13fc: 18 6f ef 00 00             ; DICTP " (ef6f)
1401: 0b a2 03 00 00             ; CALL ?COMPILING (03a2)
1406: 0e 00                      ; CLITERAL 0
1408: 16                         ; EQ
1409: 09 14 14 00 00             ; JMPZ 1414
140e: 0b 9f 13 00 00             ; CALL I" (139f)
1413: 0c                         ; RET
1414: 0b a7 01 00 00             ; CALL SLITERAL (01a7)
1419: 0b 0c 01 00 00             ; CALL HERE (010c)
141e: 0e 00                      ; CLITERAL 0
1420: 0b 24 01 00 00             ; CALL C, (0124)
1425: 0b 8b 00 00 00             ; CALL >IN (008b)
142a: 02                         ; FETCH
142b: 0f                         ; CFETCH
142c: 06                         ; DUP
142d: 0e 00                      ; CLITERAL 0
142f: 16                         ; EQ
1430: 09 5d 14 00 00             ; JMPZ 145d
1435: 05                         ; DROP
1436: 2e                         ; DEC
1437: 0b 40 00 00 00             ; CALL (HERE) (0040)
143c: 03                         ; STORE
143d: 07 11 6d 69 73 73 69 6e 67 20 63 6c 6f 73 69 6e 67 20 27 00 ; SLITERAL (143e) [missing closing ']
1451: 0b f8 05 00 00             ; CALL CT (05f8)
1456: 0e 22                      ; CLITERAL 34
1458: 19                         ; EMIT
1459: 0e 27                      ; CLITERAL 39
145b: 19                         ; EMIT
145c: fe                         ; RESET
145d: 0b 8b 00 00 00             ; CALL >IN (008b)
1462: 0b 5e 05 00 00             ; CALL ++ (055e)
1467: 06                         ; DUP
1468: 0e 22                      ; CLITERAL 34
146a: 16                         ; EQ
146b: 09 83 14 00 00             ; JMPZ 1483
1470: 05                         ; DROP
1471: 0b 0c 01 00 00             ; CALL HERE (010c)
1476: 0e 00                      ; CLITERAL 0
1478: 0b 24 01 00 00             ; CALL C, (0124)
147d: 1a                         ; OVER
147e: 12                         ; SUB
147f: 2e                         ; DEC
1480: 04                         ; SWAP
1481: 10                         ; CSTORE
1482: 0c                         ; RET
1483: 0b 24 01 00 00             ; CALL C, (0124)
1488: 08 25 14 00 00             ; JMP 1425
148d: 0c                         ; RET
;
148e: 18 62 ef 00 00             ; DICTP ll (ef62)
1493: 07 09 6c 6f 61 64 73 2e 34 74 68 00 ; SLITERAL (1494) [loads.4th]
149f: 0b fc 12 00 00             ; CALL load (12fc)
14a4: 0c                         ; RET
;
14a5: 18 4f ef 00 00             ; DICTP sys-info (ef4f)
14aa: 0b cd 0b 00 00             ; CALL .(MEM_SZ) (0bcd)
14af: 0e 2c                      ; CLITERAL 44
14b1: 19                         ; EMIT
14b2: 0e 20                      ; CLITERAL 32
14b4: 19                         ; EMIT
14b5: 0b 06 0c 00 00             ; CALL .(HERE) (0c06)
14ba: 0e 2c                      ; CLITERAL 44
14bc: 19                         ; EMIT
14bd: 0e 20                      ; CLITERAL 32
14bf: 19                         ; EMIT
14c0: 0b 3d 0c 00 00             ; CALL .(LAST) (0c3d)
14c5: 0e 2c                      ; CLITERAL 44
14c7: 19                         ; EMIT
14c8: 0e 20                      ; CLITERAL 32
14ca: 19                         ; EMIT
14cb: 0b 45 12 00 00             ; CALL .FREE (1245)
14d0: 0e 0d                      ; CLITERAL 13
14d2: 19                         ; EMIT
14d3: 0e 0a                      ; CLITERAL 10
14d5: 19                         ; EMIT
14d6: 0c                         ; RET
;
14d7: 18 3c ef 00 00             ; DICTP VARIABLE (ef3c)
14dc: 0b 2b 11 00 00             ; CALL CREATE-NAME (112b)
14e1: 0b 0c 01 00 00             ; CALL HERE (010c)
14e6: 0e 02                      ; CLITERAL 2
14e8: 11                         ; ADD
14e9: 0b 04 01 00 00             ; CALL CELL (0104)
14ee: 11                         ; ADD
14ef: 0b 77 01 00 00             ; CALL LITERAL (0177)
14f4: 0b 3e 01 00 00             ; CALL , (013e)
14f9: 0b e8 01 00 00             ; CALL RET (01e8)
14fe: 0e 00                      ; CLITERAL 0
1500: 0b 3e 01 00 00             ; CALL , (013e)
1505: 0c                         ; RET
;
1506: 18 2a ef 00 00             ; DICTP countTo (ef2a)
150b: 07 0c 63 6f 75 6e 74 69 6e 67 20 74 6f 20 00 ; SLITERAL (150c) [counting to ]
151a: 0b f8 05 00 00             ; CALL CT (05f8)
151f: 06                         ; DUP
1520: 0b 11 0a 00 00             ; CALL . (0a11)
1525: 07 04 2e 2e 2e 20 00       ; SLITERAL (1526) [... ]
152c: 0b f8 05 00 00             ; CALL CT (05f8)
1531: 0e 01                      ; CLITERAL 1
1533: 1a                         ; OVER
1534: 1a                         ; OVER
1535: 15                         ; LT
1536: 09 3e 15 00 00             ; JMPZ 153e
153b: 05                         ; DROP
153c: 05                         ; DROP
153d: 0c                         ; RET
153e: 2c                         ; INC
153f: 08 33 15 00 00             ; JMP 1533
1544: 0c                         ; RET
;
1545: 18 13 ef 00 00             ; DICTP countTo-FAST (ef13)
154a: 07 0c 63 6f 75 6e 74 69 6e 67 20 74 6f 20 00 ; SLITERAL (154b) [counting to ]
1559: 0b f8 05 00 00             ; CALL CT (05f8)
155e: 06                         ; DUP
155f: 0b 11 0a 00 00             ; CALL . (0a11)
1564: 07 04 2e 2e 2e 20 00       ; SLITERAL (1565) [... ]
156b: 0b f8 05 00 00             ; CALL CT (05f8)
1570: 2e                         ; DEC
1571: 06                         ; DUP
1572: 0a 70 15 00 00             ; JMPNZ 1570
1577: 05                         ; DROP
1578: 0c                         ; RET
;
1579: 18 02 ef 00 00             ; DICTP period (ef02)
157e: 0e 2e                      ; CLITERAL 46
1580: 19                         ; EMIT
1581: 0c                         ; RET
;
1582: 18 ec ee 00 00             ; DICTP start-timer (eeec)
1587: 2f                         ; GETTICK
1588: 0c                         ; RET
;
1589: 18 de ee 00 00             ; DICTP .ms (eede)
158e: 01 e8 03 00 00             ; LITERAL 1000 (3e8)
1593: 29                         ; RESET
1594: 0b f7 09 00 00             ; CALL (.) (09f7)
1599: 0b 79 15 00 00             ; CALL period (1579)
159e: 0b 40 0a 00 00             ; CALL .3 (0a40)
15a3: 07 08 20 73 65 63 6f 6e 64 73 00 ; SLITERAL (15a4) [ seconds]
15ae: 0b f8 05 00 00             ; CALL CT (05f8)
15b3: 0c                         ; RET
;
15b4: 18 cc ee 00 00             ; DICTP elapsed (eecc)
15b9: 2f                         ; GETTICK
15ba: 04                         ; SWAP
15bb: 12                         ; SUB
15bc: 0b 89 15 00 00             ; CALL .ms (1589)
15c1: 0c                         ; RET
;
15c2: 18 be ee 00 00             ; DICTP mil (eebe)
15c7: 01 e8 03 00 00             ; LITERAL 1000 (3e8)
15cc: 06                         ; DUP
15cd: 13                         ; MUL
15ce: 13                         ; MUL
15cf: 0c                         ; RET
;
15d0: 18 ae ee 00 00             ; DICTP bench (eeae)
15d5: 0e 0d                      ; CLITERAL 13
15d7: 19                         ; EMIT
15d8: 0e 0a                      ; CLITERAL 10
15da: 19                         ; EMIT
15db: 0b 82 15 00 00             ; CALL start-timer (1582)
15e0: 04                         ; SWAP
15e1: 0b 45 15 00 00             ; CALL countTo-FAST (1545)
15e6: 0b b4 15 00 00             ; CALL elapsed (15b4)
15eb: 0c                         ; RET
;
; End of code, Dictionary:
;
eeae: be ee 00 00                ; bench - (next: eebe mil)
eeb2: d0 15 00 00 00             ; XT=15d0, flags=00
eeb7: 05 62 65 6e 63 68 00       ; 5, bench
;
eebe: cc ee 00 00                ; mil - (next: eecc elapsed)
eec2: c2 15 00 00 00             ; XT=15c2, flags=00
eec7: 03 6d 69 6c 00             ; 3, mil
;
eecc: de ee 00 00                ; elapsed - (next: eede .ms)
eed0: b4 15 00 00 00             ; XT=15b4, flags=00
eed5: 07 65 6c 61 70 73 65 64 00 ; 7, elapsed
;
eede: ec ee 00 00                ; .ms - (next: eeec start-timer)
eee2: 89 15 00 00 00             ; XT=1589, flags=00
eee7: 03 2e 6d 73 00             ; 3, .ms
;
eeec: 02 ef 00 00                ; start-timer - (next: ef02 period)
eef0: 82 15 00 00 00             ; XT=1582, flags=00
eef5: 0b 73 74 61 72 74 2d 74 69 6d 65 72 00 ; 11, start-timer
;
ef02: 13 ef 00 00                ; period - (next: ef13 countTo-FAST)
ef06: 79 15 00 00 00             ; XT=1579, flags=00
ef0b: 06 70 65 72 69 6f 64 00    ; 6, period
;
ef13: 2a ef 00 00                ; countTo-FAST - (next: ef2a countTo)
ef17: 45 15 00 00 00             ; XT=1545, flags=00
ef1c: 0c 63 6f 75 6e 74 54 6f 2d 46 41 53 54 00 ; 12, countTo-FAST
;
ef2a: 3c ef 00 00                ; countTo - (next: ef3c VARIABLE)
ef2e: 06 15 00 00 00             ; XT=1506, flags=00
ef33: 07 63 6f 75 6e 74 54 6f 00 ; 7, countTo
;
ef3c: 4f ef 00 00                ; VARIABLE - (next: ef4f sys-info)
ef40: d7 14 00 00 00             ; XT=14d7, flags=00
ef45: 08 56 41 52 49 41 42 4c 45 00 ; 8, VARIABLE
;
ef4f: 62 ef 00 00                ; sys-info - (next: ef62 ll)
ef53: a5 14 00 00 00             ; XT=14a5, flags=00
ef58: 08 73 79 73 2d 69 6e 66 6f 00 ; 8, sys-info
;
ef62: 6f ef 00 00                ; ll - (next: ef6f ")
ef66: 8e 14 00 00 00             ; XT=148e, flags=00
ef6b: 02 6c 6c 00                ; 2, ll
;
ef6f: 7b ef 00 00                ; " - (next: ef7b I")
ef73: fc 13 00 00 01             ; XT=13fc, flags=01
ef78: 01 22 00                   ; 1, "
;
ef7b: 88 ef 00 00                ; I" - (next: ef88 STR.NULLTERM)
ef7f: 9f 13 00 00 00             ; XT=139f, flags=00
ef84: 02 49 22 00                ; 2, I"
;
ef88: 9f ef 00 00                ; STR.NULLTERM - (next: ef9f STR.CATC)
ef8c: 90 13 00 00 00             ; XT=1390, flags=00
ef91: 0c 53 54 52 2e 4e 55 4c 4c 54 45 52 4d 00 ; 12, STR.NULLTERM
;
ef9f: b2 ef 00 00                ; STR.CATC - (next: efb2 STR.LEN)
efa3: 7a 13 00 00 00             ; XT=137a, flags=00
efa8: 08 53 54 52 2e 43 41 54 43 00 ; 8, STR.CATC
;
efb2: c4 ef 00 00                ; STR.LEN - (next: efc4 STR.EMPTY)
efb6: 72 13 00 00 02             ; XT=1372, flags=02
efbb: 07 53 54 52 2e 4c 45 4e 00 ; 7, STR.LEN
;
efc4: d8 ef 00 00                ; STR.EMPTY - (next: efd8 load)
efc8: 68 13 00 00 02             ; XT=1368, flags=02
efcd: 09 53 54 52 2e 45 4d 50 54 59 00 ; 9, STR.EMPTY
;
efd8: e7 ef 00 00                ; load - (next: efe7 file-getLine)
efdc: fc 12 00 00 00             ; XT=12fc, flags=00
efe1: 04 6c 6f 61 64 00          ; 4, load
;
efe7: fe ef 00 00                ; file-getLine - (next: effe main)
efeb: e6 12 00 00 00             ; XT=12e6, flags=00
eff0: 0c 66 69 6c 65 2d 67 65 74 4c 69 6e 65 00 ; 12, file-getLine
;
effe: 0d f0 00 00                ; main - (next: f00d mainLoop)
f002: b5 12 00 00 00             ; XT=12b5, flags=00
f007: 04 6d 61 69 6e 00          ; 4, main
;
f00d: 20 f0 00 00                ; mainLoop - (next: f020 .FREE)
f011: 69 12 00 00 00             ; XT=1269, flags=00
f016: 08 6d 61 69 6e 4c 6f 6f 70 00 ; 8, mainLoop
;
f020: 30 f0 00 00                ; .FREE - (next: f030 FREE)
f024: 45 12 00 00 00             ; XT=1245, flags=00
f029: 05 2e 46 52 45 45 00       ; 5, .FREE
;
f030: 3f f0 00 00                ; FREE - (next: f03f C?)
f034: 34 12 00 00 00             ; XT=1234, flags=00
f039: 04 46 52 45 45 00          ; 4, FREE
;
f03f: 4c f0 00 00                ; C? - (next: f04c ?)
f043: 28 12 00 00 00             ; XT=1228, flags=00
f048: 02 43 3f 00                ; 2, C?
;
f04c: 58 f0 00 00                ; ? - (next: f058 ALLOT)
f050: 1c 12 00 00 00             ; XT=121c, flags=00
f055: 01 3f 00                   ; 1, ?
;
f058: 68 f0 00 00                ; ALLOT - (next: f068 resetState)
f05c: 0a 12 00 00 00             ; XT=120a, flags=00
f061: 05 41 4c 4c 4f 54 00       ; 5, ALLOT
;
f068: 7d f0 00 00                ; resetState - (next: f07d ForgetLast)
f06c: e6 11 00 00 00             ; XT=11e6, flags=00
f071: 0a 72 65 73 65 74 53 74 61 74 65 00 ; 10, resetState
;
f07d: 92 f0 00 00                ; ForgetLast - (next: f092 ;)
f081: c2 11 00 00 00             ; XT=11c2, flags=00
f086: 0a 46 6f 72 67 65 74 4c 61 73 74 00 ; 10, ForgetLast
;
f092: 9e f0 00 00                ; ; - (next: f09e :NONAME)
f096: ad 11 00 00 01             ; XT=11ad, flags=01
f09b: 01 3b 00                   ; 1, ;
;
f09e: b0 f0 00 00                ; :NONAME - (next: f0b0 :)
f0a2: 98 11 00 00 00             ; XT=1198, flags=00
f0a7: 07 3a 4e 4f 4e 41 4d 45 00 ; 7, :NONAME
;
f0b0: bc f0 00 00                ; : - (next: f0bc CREATE-NAME)
f0b4: 83 11 00 00 00             ; XT=1183, flags=00
f0b9: 01 3a 00                   ; 1, :
;
f0bc: d2 f0 00 00                ; CREATE-NAME - (next: f0d2 Define-Word)
f0c0: 2b 11 00 00 00             ; XT=112b, flags=00
f0c5: 0b 43 52 45 41 54 45 2d 4e 41 4d 45 00 ; 11, CREATE-NAME
;
f0d2: e8 f0 00 00                ; Define-Word - (next: f0e8 strcpy2c)
f0d6: d2 10 00 00 00             ; XT=10d2, flags=00
f0db: 0b 44 65 66 69 6e 65 2d 57 6f 72 64 00 ; 11, Define-Word
;
f0e8: fb f0 00 00                ; strcpy2c - (next: f0fb getLine)
f0ec: 99 10 00 00 00             ; XT=1099, flags=00
f0f1: 08 73 74 72 63 70 79 32 63 00 ; 8, strcpy2c
;
f0fb: 0d f1 00 00                ; getLine - (next: f10d getLineFromFile)
f0ff: c8 0f 00 00 00             ; XT=0fc8, flags=00
f104: 07 67 65 74 4c 69 6e 65 00 ; 7, getLine
;
f10d: 27 f1 00 00                ; getLineFromFile - (next: f127 LoadingFromFile?)
f111: a7 0f 00 00 00             ; XT=0fa7, flags=00
f116: 0f 67 65 74 4c 69 6e 65 46 72 6f 6d 46 69 6c 65 00 ; 15, getLineFromFile
;
f127: 42 f1 00 00                ; LoadingFromFile? - (next: f142 Pad)
f12b: 9b 0f 00 00 00             ; XT=0f9b, flags=00
f130: 10 4c 6f 61 64 69 6e 67 46 72 6f 6d 46 69 6c 65 3f 00 ; 16, LoadingFromFile?
;
f142: 50 f1 00 00                ; Pad - (next: f150 executeInput)
f146: 6f 0f 00 00 00             ; XT=0f6f, flags=00
f14b: 03 50 61 64 00             ; 3, Pad
;
f150: 67 f1 00 00                ; executeInput - (next: f167 executeWord)
f154: 2b 0f 00 00 00             ; XT=0f2b, flags=00
f159: 0c 65 78 65 63 75 74 65 49 6e 70 75 74 00 ; 12, executeInput
;
f167: 7d f1 00 00                ; executeWord - (next: f17d [COMPILE])
f16b: 8a 0e 00 00 00             ; XT=0e8a, flags=00
f170: 0b 65 78 65 63 75 74 65 57 6f 72 64 00 ; 11, executeWord
;
f17d: 91 f1 00 00                ; [COMPILE] - (next: f191 cstr,)
f181: 66 0e 00 00 00             ; XT=0e66, flags=00
f186: 09 5b 43 4f 4d 50 49 4c 45 5d 00 ; 9, [COMPILE]
;
f191: a1 f1 00 00                ; cstr, - (next: f1a1 strlen)
f195: 55 0e 00 00 00             ; XT=0e55, flags=00
f19a: 05 63 73 74 72 2c 00       ; 5, cstr,
;
f1a1: b2 f1 00 00                ; strlen - (next: f1b2 Copy.INLINE)
f1a5: 36 0e 00 00 00             ; XT=0e36, flags=00
f1aa: 06 73 74 72 6c 65 6e 00    ; 6, strlen
;
f1b2: c8 f1 00 00                ; Copy.INLINE - (next: f1c8 DOES>)
f1b6: 14 0e 00 00 00             ; XT=0e14, flags=00
f1bb: 0b 43 6f 70 79 2e 49 4e 4c 49 4e 45 00 ; 11, Copy.INLINE
;
f1c8: d8 f1 00 00                ; DOES> - (next: f1d8 (inline))
f1cc: ff 0d 00 00 00             ; XT=0dff, flags=00
f1d1: 05 44 4f 45 53 3e 00       ; 5, DOES>
;
f1d8: eb f1 00 00                ; (inline) - (next: f1eb find.ret)
f1dc: de 0d 00 00 00             ; XT=0dde, flags=00
f1e1: 08 28 69 6e 6c 69 6e 65 29 00 ; 8, (inline)
;
f1eb: fe f1 00 00                ; find.ret - (next: f1fe EXECUTE)
f1ef: c7 0d 00 00 00             ; XT=0dc7, flags=00
f1f4: 08 66 69 6e 64 2e 72 65 74 00 ; 8, find.ret
;
f1fe: 10 f2 00 00                ; EXECUTE - (next: f210 .lastx)
f202: be 0d 00 00 00             ; XT=0dbe, flags=00
f207: 07 45 58 45 43 55 54 45 00 ; 7, EXECUTE
;
f210: 21 f2 00 00                ; .lastx - (next: f221 NUM-WORDS)
f214: 9c 0d 00 00 00             ; XT=0d9c, flags=00
f219: 06 2e 6c 61 73 74 78 00    ; 6, .lastx
;
f221: 35 f2 00 00                ; NUM-WORDS - (next: f235 WORDSV)
f225: 72 0d 00 00 00             ; XT=0d72, flags=00
f22a: 09 4e 55 4d 2d 57 4f 52 44 53 00 ; 9, NUM-WORDS
;
f235: 46 f2 00 00                ; WORDSV - (next: f246 .WORD-LONG)
f239: 40 0d 00 00 00             ; XT=0d40, flags=00
f23e: 06 57 4f 52 44 53 56 00    ; 6, WORDSV
;
f246: 5b f2 00 00                ; .WORD-LONG - (next: f25b WORDS)
f24a: b0 0c 00 00 00             ; XT=0cb0, flags=00
f24f: 0a 2e 57 4f 52 44 2d 4c 4f 4e 47 00 ; 10, .WORD-LONG
;
f25b: 6b f2 00 00                ; WORDS - (next: f26b .WORD-SHORT)
f25f: 89 0c 00 00 00             ; XT=0c89, flags=00
f264: 05 57 4f 52 44 53 00       ; 5, WORDS
;
f26b: 81 f2 00 00                ; .WORD-SHORT - (next: f281 .(LAST))
f26f: 74 0c 00 00 00             ; XT=0c74, flags=00
f274: 0b 2e 57 4f 52 44 2d 53 48 4f 52 54 00 ; 11, .WORD-SHORT
;
f281: 93 f2 00 00                ; .(LAST) - (next: f293 .(HERE))
f285: 3d 0c 00 00 00             ; XT=0c3d, flags=00
f28a: 07 2e 28 4c 41 53 54 29 00 ; 7, .(LAST)
;
f293: a5 f2 00 00                ; .(HERE) - (next: f2a5 .(MEM_SZ))
f297: 06 0c 00 00 00             ; XT=0c06, flags=00
f29c: 07 2e 28 48 45 52 45 29 00 ; 7, .(HERE)
;
f2a5: b9 f2 00 00                ; .(MEM_SZ) - (next: f2b9 .S)
f2a9: cd 0b 00 00 00             ; XT=0bcd, flags=00
f2ae: 09 2e 28 4d 45 4d 5f 53 5a 29 00 ; 9, .(MEM_SZ)
;
f2b9: c6 f2 00 00                ; .S - (next: f2c6 MAX)
f2bd: 5b 0b 00 00 00             ; XT=0b5b, flags=00
f2c2: 02 2e 53 00                ; 2, .S
;
f2c6: d4 f2 00 00                ; MAX - (next: f2d4 MIN)
f2ca: 4b 0b 00 00 00             ; XT=0b4b, flags=00
f2cf: 03 4d 41 58 00             ; 3, MAX
;
f2d4: e2 f2 00 00                ; MIN - (next: f2e2 BINARY.)
f2d8: 3b 0b 00 00 00             ; XT=0b3b, flags=00
f2dd: 03 4d 49 4e 00             ; 3, MIN
;
f2e2: f4 f2 00 00                ; BINARY. - (next: f2f4 DECIMAL.3)
f2e6: 1e 0b 00 00 00             ; XT=0b1e, flags=00
f2eb: 07 42 49 4e 41 52 59 2e 00 ; 7, BINARY.
;
f2f4: 08 f3 00 00                ; DECIMAL.3 - (next: f308 DECIMAL.)
f2f8: 01 0b 00 00 00             ; XT=0b01, flags=00
f2fd: 09 44 45 43 49 4d 41 4c 2e 33 00 ; 9, DECIMAL.3
;
f308: 1b f3 00 00                ; DECIMAL. - (next: f31b HEX.4)
f30c: e4 0a 00 00 00             ; XT=0ae4, flags=00
f311: 08 44 45 43 49 4d 41 4c 2e 00 ; 8, DECIMAL.
;
f31b: 2b f3 00 00                ; HEX.4 - (next: f32b HEX.2)
f31f: c7 0a 00 00 00             ; XT=0ac7, flags=00
f324: 05 48 45 58 2e 34 00       ; 5, HEX.4
;
f32b: 3b f3 00 00                ; HEX.2 - (next: f33b HEX.)
f32f: aa 0a 00 00 00             ; XT=0aaa, flags=00
f334: 05 48 45 58 2e 32 00       ; 5, HEX.2
;
f33b: 4a f3 00 00                ; HEX. - (next: f34a .4)
f33f: 8d 0a 00 00 00             ; XT=0a8d, flags=00
f344: 04 48 45 58 2e 00          ; 4, HEX.
;
f34a: 57 f3 00 00                ; .4 - (next: f357 .3)
f34e: 64 0a 00 00 00             ; XT=0a64, flags=00
f353: 02 2e 34 00                ; 2, .4
;
f357: 64 f3 00 00                ; .3 - (next: f364 .2)
f35b: 40 0a 00 00 00             ; XT=0a40, flags=00
f360: 02 2e 33 00                ; 2, .3
;
f364: 71 f3 00 00                ; .2 - (next: f371 .)
f368: 21 0a 00 00 00             ; XT=0a21, flags=00
f36d: 02 2e 32 00                ; 2, .2
;
f371: 7d f3 00 00                ; . - (next: f37d (.))
f375: 11 0a 00 00 00             ; XT=0a11, flags=00
f37a: 01 2e 00                   ; 1, .
;
f37d: 8b f3 00 00                ; (.) - (next: f38b #P)
f381: f7 09 00 00 00             ; XT=09f7, flags=00
f386: 03 28 2e 29 00             ; 3, (.)
;
f38b: 98 f3 00 00                ; #P - (next: f398 #P-)
f38f: e1 09 00 00 00             ; XT=09e1, flags=00
f394: 02 23 50 00                ; 2, #P
;
f398: a6 f3 00 00                ; #P- - (next: f3a6 #>)
f39c: cc 09 00 00 00             ; XT=09cc, flags=00
f3a1: 03 23 50 2d 00             ; 3, #P-
;
f3a6: b3 f3 00 00                ; #> - (next: f3b3 #S)
f3aa: c6 09 00 00 00             ; XT=09c6, flags=00
f3af: 02 23 3e 00                ; 2, #>
;
f3b3: c0 f3 00 00                ; #S - (next: f3c0 #)
f3b7: b2 09 00 00 00             ; XT=09b2, flags=00
f3bc: 02 23 53 00                ; 2, #S
;
f3c0: cc f3 00 00                ; # - (next: f3cc <#)
f3c4: 8a 09 00 00 00             ; XT=098a, flags=00
f3c9: 01 23 00                   ; 1, #
;
f3cc: d9 f3 00 00                ; <# - (next: f3d9 SPACE)
f3d0: 55 09 00 00 00             ; XT=0955, flags=00
f3d5: 02 3c 23 00                ; 2, <#
;
f3d9: e9 f3 00 00                ; SPACE - (next: f3e9 isNumber?)
f3dd: 4c 09 00 00 00             ; XT=094c, flags=00
f3e2: 05 53 50 41 43 45 00       ; 5, SPACE
;
f3e9: fd f3 00 00                ; isNumber? - (next: f3fd ABS)
f3ed: ec 08 00 00 00             ; XT=08ec, flags=00
f3f2: 09 69 73 4e 75 6d 62 65 72 3f 00 ; 9, isNumber?
;
f3fd: 0b f4 00 00                ; ABS - (next: f40b NEGATE)
f401: d8 08 00 00 00             ; XT=08d8, flags=00
f406: 03 41 42 53 00             ; 3, ABS
;
f40b: 1c f4 00 00                ; NEGATE - (next: f41c isNumChar?)
f40f: ce 08 00 00 00             ; XT=08ce, flags=00
f414: 06 4e 45 47 41 54 45 00    ; 6, NEGATE
;
f41c: 31 f4 00 00                ; isNumChar? - (next: f431 isHEX?)
f420: 7d 08 00 00 00             ; XT=087d, flags=00
f425: 0a 69 73 4e 75 6d 43 68 61 72 3f 00 ; 10, isNumChar?
;
f431: 42 f4 00 00                ; isHEX? - (next: f442 findInDict)
f435: 6e 08 00 00 00             ; XT=086e, flags=00
f43a: 06 69 73 48 45 58 3f 00    ; 6, isHEX?
;
f442: 57 f4 00 00                ; findInDict - (next: f457 DICT.GetINLINE)
f446: 25 08 00 00 00             ; XT=0825, flags=00
f44b: 0a 66 69 6e 64 49 6e 44 69 63 74 00 ; 10, findInDict
;
f457: 70 f4 00 00                ; DICT.GetINLINE - (next: f470 DICT.GetIMMEDIATE)
f45b: 15 08 00 00 00             ; XT=0815, flags=00
f460: 0e 44 49 43 54 2e 47 65 74 49 4e 4c 49 4e 45 00 ; 14, DICT.GetINLINE
;
f470: 8c f4 00 00                ; DICT.GetIMMEDIATE - (next: f48c FLAGS.ISINLINE?)
f474: 05 08 00 00 00             ; XT=0805, flags=00
f479: 11 44 49 43 54 2e 47 65 74 49 4d 4d 45 44 49 41 54 45 00 ; 17, DICT.GetIMMEDIATE
;
f48c: a6 f4 00 00                ; FLAGS.ISINLINE? - (next: f4a6 FLAGS.ISIMMEDIATE?)
f490: fc 07 00 00 00             ; XT=07fc, flags=00
f495: 0f 46 4c 41 47 53 2e 49 53 49 4e 4c 49 4e 45 3f 00 ; 15, FLAGS.ISINLINE?
;
f4a6: c3 f4 00 00                ; FLAGS.ISIMMEDIATE? - (next: f4c3 XT.GetDICTP)
f4aa: f3 07 00 00 00             ; XT=07f3, flags=00
f4af: 12 46 4c 41 47 53 2e 49 53 49 4d 4d 45 44 49 41 54 45 3f 00 ; 18, FLAGS.ISIMMEDIATE?
;
f4c3: d9 f4 00 00                ; XT.GetDICTP - (next: f4d9 DICTP>NAME)
f4c7: da 07 00 00 00             ; XT=07da, flags=00
f4cc: 0b 58 54 2e 47 65 74 44 49 43 54 50 00 ; 11, XT.GetDICTP
;
f4d9: ee f4 00 00                ; DICTP>NAME - (next: f4ee DICT.GetFLAGS)
f4dd: cd 07 00 00 00             ; XT=07cd, flags=00
f4e2: 0a 44 49 43 54 50 3e 4e 41 4d 45 00 ; 10, DICTP>NAME
;
f4ee: 06 f5 00 00                ; DICT.GetFLAGS - (next: f506 DICT.GetXT)
f4f2: c1 07 00 00 00             ; XT=07c1, flags=00
f4f7: 0d 44 49 43 54 2e 47 65 74 46 4c 41 47 53 00 ; 13, DICT.GetFLAGS
;
f506: 1b f5 00 00                ; DICT.GetXT - (next: f51b NAME>DICT)
f50a: b5 07 00 00 00             ; XT=07b5, flags=00
f50f: 0a 44 49 43 54 2e 47 65 74 58 54 00 ; 10, DICT.GetXT
;
f51b: 2f f5 00 00                ; NAME>DICT - (next: f52f FLAGS>DICT)
f51f: a5 07 00 00 00             ; XT=07a5, flags=00
f524: 09 4e 41 4d 45 3e 44 49 43 54 00 ; 9, NAME>DICT
;
f52f: 44 f5 00 00                ; FLAGS>DICT - (next: f544 XT>DICT)
f533: 96 07 00 00 00             ; XT=0796, flags=00
f538: 0a 46 4c 41 47 53 3e 44 49 43 54 00 ; 10, FLAGS>DICT
;
f544: 56 f5 00 00                ; XT>DICT - (next: f556 NEXT>DICT)
f548: 8a 07 00 00 00             ; XT=078a, flags=00
f54d: 07 58 54 3e 44 49 43 54 00 ; 7, XT>DICT
;
f556: 6a f5 00 00                ; NEXT>DICT - (next: f56a DICT>NAME)
f55a: 84 07 00 00 00             ; XT=0784, flags=00
f55f: 09 4e 45 58 54 3e 44 49 43 54 00 ; 9, NEXT>DICT
;
f56a: 7e f5 00 00                ; DICT>NAME - (next: f57e DICT>FLAGS)
f56e: 78 07 00 00 00             ; XT=0778, flags=00
f573: 09 44 49 43 54 3e 4e 41 4d 45 00 ; 9, DICT>NAME
;
f57e: 93 f5 00 00                ; DICT>FLAGS - (next: f593 DICT>XT)
f582: 69 07 00 00 00             ; XT=0769, flags=00
f587: 0a 44 49 43 54 3e 46 4c 41 47 53 00 ; 10, DICT>FLAGS
;
f593: a5 f5 00 00                ; DICT>XT - (next: f5a5 DICT>NEXT)
f597: 5d 07 00 00 00             ; XT=075d, flags=00
f59c: 07 44 49 43 54 3e 58 54 00 ; 7, DICT>XT
;
f5a5: b9 f5 00 00                ; DICT>NEXT - (next: f5b9 getOneWord)
f5a9: 57 07 00 00 00             ; XT=0757, flags=00
f5ae: 09 44 49 43 54 3e 4e 45 58 54 00 ; 9, DICT>NEXT
;
f5b9: ce f5 00 00                ; getOneWord - (next: f5ce skipWS)
f5bd: 1f 07 00 00 00             ; XT=071f, flags=00
f5c2: 0a 67 65 74 4f 6e 65 57 6f 72 64 00 ; 10, getOneWord
;
f5ce: df f5 00 00                ; skipWS - (next: f5df getInput)
f5d2: f6 06 00 00 00             ; XT=06f6, flags=00
f5d7: 06 73 6b 69 70 57 53 00    ; 6, skipWS
;
f5df: f2 f5 00 00                ; getInput - (next: f5f2 PAD)
f5e3: e0 06 00 00 00             ; XT=06e0, flags=00
f5e8: 08 67 65 74 49 6e 70 75 74 00 ; 8, getInput
;
f5f2: 00 f6 00 00                ; PAD - (next: f600 tmp-alloc)
f5f6: ce 06 00 00 00             ; XT=06ce, flags=00
f5fb: 03 50 41 44 00             ; 3, PAD
;
f600: 14 f6 00 00                ; tmp-alloc - (next: f614 tmp-cur)
f604: b7 06 00 00 00             ; XT=06b7, flags=00
f609: 09 74 6d 70 2d 61 6c 6c 6f 63 00 ; 9, tmp-alloc
;
f614: 26 f6 00 00                ; tmp-cur - (next: f626 tmp-init)
f618: ab 06 00 00 00             ; XT=06ab, flags=00
f61d: 07 74 6d 70 2d 63 75 72 00 ; 7, tmp-cur
;
f626: 39 f6 00 00                ; tmp-init - (next: f639 BETWEEN)
f62a: 9a 06 00 00 00             ; XT=069a, flags=00
f62f: 08 74 6d 70 2d 69 6e 69 74 00 ; 8, tmp-init
;
f639: 4b f6 00 00                ; BETWEEN - (next: f64b CR)
f63d: 82 06 00 00 00             ; XT=0682, flags=00
f642: 07 42 45 54 57 45 45 4e 00 ; 7, BETWEEN
;
f64b: 58 f6 00 00                ; CR - (next: f658 CRLF)
f64f: 76 06 00 00 02             ; XT=0676, flags=02
f654: 02 43 52 00                ; 2, CR
;
f658: 67 f6 00 00                ; CRLF - (next: f667 BL)
f65c: 6a 06 00 00 02             ; XT=066a, flags=02
f661: 04 43 52 4c 46 00          ; 4, CRLF
;
f667: 74 f6 00 00                ; BL - (next: f674 ()
f66b: 61 06 00 00 02             ; XT=0661, flags=02
f670: 02 42 4c 00                ; 2, BL
;
f674: 80 f6 00 00                ; ( - (next: f680 \)
f678: 17 06 00 00 01             ; XT=0617, flags=01
f67d: 01 28 00                   ; 1, (
;
f680: 8c f6 00 00                ; \ - (next: f68c CT)
f684: 08 06 00 00 01             ; XT=0608, flags=01
f689: 01 5c 00                   ; 1, \
;
f68c: 99 f6 00 00                ; CT - (next: f699 TYPE)
f690: f8 05 00 00 00             ; XT=05f8, flags=00
f695: 02 43 54 00                ; 2, CT
;
f699: a8 f6 00 00                ; TYPE - (next: f6a8 COUNT)
f69d: d8 05 00 00 00             ; XT=05d8, flags=00
f6a2: 04 54 59 50 45 00          ; 4, TYPE
;
f6a8: b8 f6 00 00                ; COUNT - (next: f6b8 NOT)
f6ac: ce 05 00 00 00             ; XT=05ce, flags=00
f6b1: 05 43 4f 55 4e 54 00       ; 5, COUNT
;
f6b8: c6 f6 00 00                ; NOT - (next: f6c6 FALSE)
f6bc: c5 05 00 00 02             ; XT=05c5, flags=02
f6c1: 03 4e 4f 54 00             ; 3, NOT
;
f6c6: d6 f6 00 00                ; FALSE - (next: f6d6 TRUE)
f6ca: bd 05 00 00 02             ; XT=05bd, flags=02
f6cf: 05 46 41 4c 53 45 00       ; 5, FALSE
;
f6d6: e5 f6 00 00                ; TRUE - (next: f6e5 >=)
f6da: b5 05 00 00 02             ; XT=05b5, flags=02
f6df: 04 54 52 55 45 00          ; 4, TRUE
;
f6e5: f2 f6 00 00                ; >= - (next: f6f2 <=)
f6e9: ab 05 00 00 02             ; XT=05ab, flags=02
f6ee: 02 3e 3d 00                ; 2, >=
;
f6f2: ff f6 00 00                ; <= - (next: f6ff <>)
f6f6: a1 05 00 00 02             ; XT=05a1, flags=02
f6fb: 02 3c 3d 00                ; 2, <=
;
f6ff: 0c f7 00 00                ; <> - (next: f70c 0=)
f703: 97 05 00 00 02             ; XT=0597, flags=02
f708: 02 3c 3e 00                ; 2, <>
;
f70c: 19 f7 00 00                ; 0= - (next: f719 C--)
f710: 8e 05 00 00 02             ; XT=058e, flags=02
f715: 02 30 3d 00                ; 2, 0=
;
f719: 27 f7 00 00                ; C-- - (next: f727 C++)
f71d: 83 05 00 00 00             ; XT=0583, flags=00
f722: 03 43 2d 2d 00             ; 3, C--
;
f727: 35 f7 00 00                ; C++ - (next: f735 --)
f72b: 78 05 00 00 00             ; XT=0578, flags=00
f730: 03 43 2b 2b 00             ; 3, C++
;
f735: 42 f7 00 00                ; -- - (next: f742 ++)
f739: 6b 05 00 00 00             ; XT=056b, flags=00
f73e: 02 2d 2d 00                ; 2, --
;
f742: 4f f7 00 00                ; ++ - (next: f74f +!)
f746: 5e 05 00 00 00             ; XT=055e, flags=00
f74b: 02 2b 2b 00                ; 2, ++
;
f74f: 5c f7 00 00                ; +! - (next: f75c -=)
f753: 52 05 00 00 00             ; XT=0552, flags=00
f758: 02 2b 21 00                ; 2, +!
;
f75c: 69 f7 00 00                ; -= - (next: f769 +=)
f760: 46 05 00 00 00             ; XT=0546, flags=00
f765: 02 2d 3d 00                ; 2, -=
;
f769: 76 f7 00 00                ; += - (next: f776 -!)
f76d: 3b 05 00 00 00             ; XT=053b, flags=00
f772: 02 2b 3d 00                ; 2, +=
;
f776: 83 f7 00 00                ; -! - (next: f783 2/)
f77a: 2f 05 00 00 00             ; XT=052f, flags=00
f77f: 02 2d 21 00                ; 2, -!
;
f783: 90 f7 00 00                ; 2/ - (next: f790 2*)
f787: 24 05 00 00 02             ; XT=0524, flags=02
f78c: 02 32 2f 00                ; 2, 2/
;
f790: 9d f7 00 00                ; 2* - (next: f79d 1-)
f794: 1b 05 00 00 02             ; XT=051b, flags=02
f799: 02 32 2a 00                ; 2, 2*
;
f79d: aa f7 00 00                ; 1- - (next: f7aa 1+)
f7a1: 14 05 00 00 02             ; XT=0514, flags=02
f7a6: 02 31 2d 00                ; 2, 1-
;
f7aa: b7 f7 00 00                ; 1+ - (next: f7b7 MOD)
f7ae: 0d 05 00 00 02             ; XT=050d, flags=02
f7b3: 02 31 2b 00                ; 2, 1+
;
f7b7: c5 f7 00 00                ; MOD - (next: f7c5 /)
f7bb: 05 05 00 00 02             ; XT=0505, flags=02
f7c0: 03 4d 4f 44 00             ; 3, MOD
;
f7c5: d1 f7 00 00                ; / - (next: f7d1 -ROT)
f7c9: fc 04 00 00 02             ; XT=04fc, flags=02
f7ce: 01 2f 00                   ; 1, /
;
f7d1: e0 f7 00 00                ; -ROT - (next: f7e0 ROT)
f7d5: f2 04 00 00 02             ; XT=04f2, flags=02
f7da: 04 2d 52 4f 54 00          ; 4, -ROT
;
f7e0: ee f7 00 00                ; ROT - (next: f7ee NIP)
f7e4: e8 04 00 00 02             ; XT=04e8, flags=02
f7e9: 03 52 4f 54 00             ; 3, ROT
;
f7ee: fc f7 00 00                ; NIP - (next: f7fc TUCK)
f7f2: e0 04 00 00 02             ; XT=04e0, flags=02
f7f7: 03 4e 49 50 00             ; 3, NIP
;
f7fc: 0b f8 00 00                ; TUCK - (next: f80b 2DROP)
f800: d8 04 00 00 02             ; XT=04d8, flags=02
f805: 04 54 55 43 4b 00          ; 4, TUCK
;
f80b: 1b f8 00 00                ; 2DROP - (next: f81b 2DUP)
f80f: d0 04 00 00 02             ; XT=04d0, flags=02
f814: 05 32 44 52 4f 50 00       ; 5, 2DROP
;
f81b: 2a f8 00 00                ; 2DUP - (next: f82a RDROP)
f81f: c8 04 00 00 02             ; XT=04c8, flags=02
f824: 04 32 44 55 50 00          ; 4, 2DUP
;
f82a: 3a f8 00 00                ; RDROP - (next: f83a R@)
f82e: c0 04 00 00 02             ; XT=04c0, flags=02
f833: 05 52 44 52 4f 50 00       ; 5, RDROP
;
f83a: 47 f8 00 00                ; R@ - (next: f847 DEBUG-OFF)
f83e: b7 04 00 00 02             ; XT=04b7, flags=02
f843: 02 52 40 00                ; 2, R@
;
f847: 5b f8 00 00                ; DEBUG-OFF - (next: f85b DEBUG-ON)
f84b: ae 04 00 00 02             ; XT=04ae, flags=02
f850: 09 44 45 42 55 47 2d 4f 46 46 00 ; 9, DEBUG-OFF
;
f85b: 6e f8 00 00                ; DEBUG-ON - (next: f86e TRACE-OFF)
f85f: a5 04 00 00 02             ; XT=04a5, flags=02
f864: 08 44 45 42 55 47 2d 4f 4e 00 ; 8, DEBUG-ON
;
f86e: 82 f8 00 00                ; TRACE-OFF - (next: f882 TRACE-ON)
f872: 9c 04 00 00 02             ; XT=049c, flags=02
f877: 09 54 52 41 43 45 2d 4f 46 46 00 ; 9, TRACE-OFF
;
f882: 95 f8 00 00                ; TRACE-ON - (next: f895 MEM_SZ)
f886: 93 04 00 00 02             ; XT=0493, flags=02
f88b: 08 54 52 41 43 45 2d 4f 4e 00 ; 8, TRACE-ON
;
f895: a6 f8 00 00                ; MEM_SZ - (next: f8a6 LEAVE)
f899: 87 04 00 00 00             ; XT=0487, flags=00
f89e: 06 4d 45 4d 5f 53 5a 00    ; 6, MEM_SZ
;
f8a6: b6 f8 00 00                ; LEAVE - (next: f8b6 UNTIL)
f8aa: 72 04 00 00 01             ; XT=0472, flags=01
f8af: 05 4c 45 41 56 45 00       ; 5, LEAVE
;
f8b6: c6 f8 00 00                ; UNTIL - (next: f8c6 WHILE)
f8ba: 58 04 00 00 01             ; XT=0458, flags=01
f8bf: 05 55 4e 54 49 4c 00       ; 5, UNTIL
;
f8c6: d6 f8 00 00                ; WHILE - (next: f8d6 AGAIN)
f8ca: 3e 04 00 00 01             ; XT=043e, flags=01
f8cf: 05 57 48 49 4c 45 00       ; 5, WHILE
;
f8d6: e6 f8 00 00                ; AGAIN - (next: f8e6 BEGIN)
f8da: 24 04 00 00 01             ; XT=0424, flags=01
f8df: 05 41 47 41 49 4e 00       ; 5, AGAIN
;
f8e6: f6 f8 00 00                ; BEGIN - (next: f8f6 THEN)
f8ea: 0f 04 00 00 01             ; XT=040f, flags=01
f8ef: 05 42 45 47 49 4e 00       ; 5, BEGIN
;
f8f6: 05 f9 00 00                ; THEN - (next: f905 ELSE)
f8fa: f8 03 00 00 01             ; XT=03f8, flags=01
f8ff: 04 54 48 45 4e 00          ; 4, THEN
;
f905: 14 f9 00 00                ; ELSE - (next: f914 IF)
f909: cf 03 00 00 01             ; XT=03cf, flags=01
f90e: 04 45 4c 53 45 00          ; 4, ELSE
;
f914: 21 f9 00 00                ; IF - (next: f921 ?COMPILING)
f918: ae 03 00 00 01             ; XT=03ae, flags=01
f91d: 02 49 46 00                ; 2, IF
;
f921: 36 f9 00 00                ; ?COMPILING - (next: f936 OFF)
f925: a2 03 00 00 00             ; XT=03a2, flags=00
f92a: 0a 3f 43 4f 4d 50 49 4c 49 4e 47 00 ; 10, ?COMPILING
;
f936: 44 f9 00 00                ; OFF - (next: f944 ON)
f93a: 98 03 00 00 00             ; XT=0398, flags=00
f93f: 03 4f 46 46 00             ; 3, OFF
;
f944: 51 f9 00 00                ; ON - (next: f951 BINARY)
f948: 8e 03 00 00 00             ; XT=038e, flags=00
f94d: 02 4f 4e 00                ; 2, ON
;
f951: 62 f9 00 00                ; BINARY - (next: f962 OCTAL)
f955: 80 03 00 00 00             ; XT=0380, flags=00
f95a: 06 42 49 4e 41 52 59 00    ; 6, BINARY
;
f962: 72 f9 00 00                ; OCTAL - (next: f972 DECIMAL)
f966: 72 03 00 00 00             ; XT=0372, flags=00
f96b: 05 4f 43 54 41 4c 00       ; 5, OCTAL
;
f972: 84 f9 00 00                ; DECIMAL - (next: f984 HEX)
f976: 64 03 00 00 00             ; XT=0364, flags=00
f97b: 07 44 45 43 49 4d 41 4c 00 ; 7, DECIMAL
;
f984: 92 f9 00 00                ; HEX - (next: f992 FLAG_INLINE)
f988: 56 03 00 00 00             ; XT=0356, flags=00
f98d: 03 48 45 58 00             ; 3, HEX
;
f992: a8 f9 00 00                ; FLAG_INLINE - (next: f9a8 FLAG_IMMEDIATE)
f996: 4e 03 00 00 02             ; XT=034e, flags=02
f99b: 0b 46 4c 41 47 5f 49 4e 4c 49 4e 45 00 ; 11, FLAG_INLINE
;
f9a8: c1 f9 00 00                ; FLAG_IMMEDIATE - (next: f9c1 CELLS)
f9ac: 46 03 00 00 02             ; XT=0346, flags=02
f9b1: 0e 46 4c 41 47 5f 49 4d 4d 45 44 49 41 54 45 00 ; 14, FLAG_IMMEDIATE
;
f9c1: d1 f9 00 00                ; CELLS - (next: f9d1 IMMEDIATE)
f9c5: 3a 03 00 00 02             ; XT=033a, flags=02
f9ca: 05 43 45 4c 4c 53 00       ; 5, CELLS
;
f9d1: e5 f9 00 00                ; IMMEDIATE - (next: f9e5 INLINE)
f9d5: 1f 03 00 00 00             ; XT=031f, flags=00
f9da: 09 49 4d 4d 45 44 49 41 54 45 00 ; 9, IMMEDIATE
;
f9e5: f6 f9 00 00                ; INLINE - (next: f9f6 BYE)
f9e9: 04 03 00 00 00             ; XT=0304, flags=00
f9ee: 06 49 4e 4c 49 4e 45 00    ; 6, INLINE
;
f9f6: 04 fa 00 00                ; BYE - (next: fa04 RESET)
f9fa: fd 02 00 00 02             ; XT=02fd, flags=02
f9ff: 03 42 59 45 00             ; 3, BYE
;
fa04: 14 fa 00 00                ; RESET - (next: fa14 BREAK)
fa08: f6 02 00 00 02             ; XT=02f6, flags=02
fa0d: 05 52 45 53 45 54 00       ; 5, RESET
;
fa14: 24 fa 00 00                ; BREAK - (next: fa24 NOP)
fa18: ef 02 00 00 02             ; XT=02ef, flags=02
fa1d: 05 42 52 45 41 4b 00       ; 5, BREAK
;
fa24: 32 fa 00 00                ; NOP - (next: fa32 GETTICK)
fa28: e8 02 00 00 02             ; XT=02e8, flags=02
fa2d: 03 4e 4f 50 00             ; 3, NOP
;
fa32: 44 fa 00 00                ; GETTICK - (next: fa44 DEC)
fa36: e1 02 00 00 02             ; XT=02e1, flags=02
fa3b: 07 47 45 54 54 49 43 4b 00 ; 7, GETTICK
;
fa44: 52 fa 00 00                ; DEC - (next: fa52 RDEPTH)
fa48: da 02 00 00 02             ; XT=02da, flags=02
fa4d: 03 44 45 43 00             ; 3, DEC
;
fa52: 63 fa 00 00                ; RDEPTH - (next: fa63 INC)
fa56: d3 02 00 00 02             ; XT=02d3, flags=02
fa5b: 06 52 44 45 50 54 48 00    ; 6, RDEPTH
;
fa63: 71 fa 00 00                ; INC - (next: fa71 /MOD)
fa67: cc 02 00 00 02             ; XT=02cc, flags=02
fa6c: 03 49 4e 43 00             ; 3, INC
;
fa71: 80 fa 00 00                ; /MOD - (next: fa80 COMPAREI)
fa75: c5 02 00 00 02             ; XT=02c5, flags=02
fa7a: 04 2f 4d 4f 44 00          ; 4, /MOD
;
fa80: 93 fa 00 00                ; COMPAREI - (next: fa93 GETCH)
fa84: be 02 00 00 02             ; XT=02be, flags=02
fa89: 08 43 4f 4d 50 41 52 45 49 00 ; 8, COMPAREI
;
fa93: a3 fa 00 00                ; GETCH - (next: faa3 DEPTH)
fa97: b7 02 00 00 02             ; XT=02b7, flags=02
fa9c: 05 47 45 54 43 48 00       ; 5, GETCH
;
faa3: b3 fa 00 00                ; DEPTH - (next: fab3 PICK)
faa7: b0 02 00 00 02             ; XT=02b0, flags=02
faac: 05 44 45 50 54 48 00       ; 5, DEPTH
;
fab3: c2 fa 00 00                ; PICK - (next: fac2 AND)
fab7: a9 02 00 00 02             ; XT=02a9, flags=02
fabc: 04 50 49 43 4b 00          ; 4, PICK
;
fac2: d0 fa 00 00                ; AND - (next: fad0 LOGLEVEL)
fac6: a2 02 00 00 02             ; XT=02a2, flags=02
facb: 03 41 4e 44 00             ; 3, AND
;
fad0: e3 fa 00 00                ; LOGLEVEL - (next: fae3 R>)
fad4: 9b 02 00 00 02             ; XT=029b, flags=02
fad9: 08 4c 4f 47 4c 45 56 45 4c 00 ; 8, LOGLEVEL
;
fae3: f0 fa 00 00                ; R> - (next: faf0 >R)
fae7: 94 02 00 00 02             ; XT=0294, flags=02
faec: 02 52 3e 00                ; 2, R>
;
faf0: fd fa 00 00                ; >R - (next: fafd FCLOSE)
faf4: 8d 02 00 00 02             ; XT=028d, flags=02
faf9: 02 3e 52 00                ; 2, >R
;
fafd: 0e fb 00 00                ; FCLOSE - (next: fb0e FWRITE)
fb01: 86 02 00 00 02             ; XT=0286, flags=02
fb06: 06 46 43 4c 4f 53 45 00    ; 6, FCLOSE
;
fb0e: 1f fb 00 00                ; FWRITE - (next: fb1f FREADLINE)
fb12: 7f 02 00 00 02             ; XT=027f, flags=02
fb17: 06 46 57 52 49 54 45 00    ; 6, FWRITE
;
fb1f: 33 fb 00 00                ; FREADLINE - (next: fb33 FREAD)
fb23: 78 02 00 00 02             ; XT=0278, flags=02
fb28: 09 46 52 45 41 44 4c 49 4e 45 00 ; 9, FREADLINE
;
fb33: 43 fb 00 00                ; FREAD - (next: fb43 FOPEN)
fb37: 71 02 00 00 02             ; XT=0271, flags=02
fb3c: 05 46 52 45 41 44 00       ; 5, FREAD
;
fb43: 53 fb 00 00                ; FOPEN - (next: fb53 COMPARE)
fb47: 6a 02 00 00 02             ; XT=026a, flags=02
fb4c: 05 46 4f 50 45 4e 00       ; 5, FOPEN
;
fb53: 65 fb 00 00                ; COMPARE - (next: fb65 OVER)
fb57: 63 02 00 00 02             ; XT=0263, flags=02
fb5c: 07 43 4f 4d 50 41 52 45 00 ; 7, COMPARE
;
fb65: 74 fb 00 00                ; OVER - (next: fb74 EMIT)
fb69: 5c 02 00 00 02             ; XT=025c, flags=02
fb6e: 04 4f 56 45 52 00          ; 4, OVER
;
fb74: 83 fb 00 00                ; EMIT - (next: fb83 DICTP)
fb78: 55 02 00 00 02             ; XT=0255, flags=02
fb7d: 04 45 4d 49 54 00          ; 4, EMIT
;
fb83: 93 fb 00 00                ; DICTP - (next: fb93 >)
fb87: 48 02 00 00 02             ; XT=0248, flags=02
fb8c: 05 44 49 43 54 50 00       ; 5, DICTP
;
fb93: 9f fb 00 00                ; > - (next: fb9f =)
fb97: 41 02 00 00 02             ; XT=0241, flags=02
fb9c: 01 3e 00                   ; 1, >
;
fb9f: ab fb 00 00                ; = - (next: fbab <)
fba3: 3a 02 00 00 02             ; XT=023a, flags=02
fba8: 01 3d 00                   ; 1, =
;
fbab: b7 fb 00 00                ; < - (next: fbb7 /)
fbaf: 33 02 00 00 02             ; XT=0233, flags=02
fbb4: 01 3c 00                   ; 1, <
;
fbb7: c3 fb 00 00                ; / - (next: fbc3 *)
fbbb: 2c 02 00 00 02             ; XT=022c, flags=02
fbc0: 01 2f 00                   ; 1, /
;
fbc3: cf fb 00 00                ; * - (next: fbcf -)
fbc7: 25 02 00 00 02             ; XT=0225, flags=02
fbcc: 01 2a 00                   ; 1, *
;
fbcf: db fb 00 00                ; - - (next: fbdb +)
fbd3: 1e 02 00 00 02             ; XT=021e, flags=02
fbd8: 01 2d 00                   ; 1, -
;
fbdb: e7 fb 00 00                ; + - (next: fbe7 C!)
fbdf: 17 02 00 00 02             ; XT=0217, flags=02
fbe4: 01 2b 00                   ; 1, +
;
fbe7: f4 fb 00 00                ; C! - (next: fbf4 C@)
fbeb: 10 02 00 00 02             ; XT=0210, flags=02
fbf0: 02 43 21 00                ; 2, C!
;
fbf4: 01 fc 00 00                ; C@ - (next: fc01 CLITERAL)
fbf8: 09 02 00 00 02             ; XT=0209, flags=02
fbfd: 02 43 40 00                ; 2, C@
;
fc01: 14 fc 00 00                ; CLITERAL - (next: fc14 OR)
fc05: fc 01 00 00 02             ; XT=01fc, flags=02
fc0a: 08 43 4c 49 54 45 52 41 4c 00 ; 8, CLITERAL
;
fc14: 21 fc 00 00                ; OR - (next: fc21 RET)
fc18: f5 01 00 00 02             ; XT=01f5, flags=02
fc1d: 02 4f 52 00                ; 2, OR
;
fc21: 2f fc 00 00                ; RET - (next: fc2f CALL)
fc25: e8 01 00 00 00             ; XT=01e8, flags=00
fc2a: 03 52 45 54 00             ; 3, RET
;
fc2f: 3e fc 00 00                ; CALL - (next: fc3e JMPNZ)
fc33: db 01 00 00 00             ; XT=01db, flags=00
fc38: 04 43 41 4c 4c 00          ; 4, CALL
;
fc3e: 4e fc 00 00                ; JMPNZ - (next: fc4e JMPZ)
fc42: ce 01 00 00 00             ; XT=01ce, flags=00
fc47: 05 4a 4d 50 4e 5a 00       ; 5, JMPNZ
;
fc4e: 5d fc 00 00                ; JMPZ - (next: fc5d JMP)
fc52: c1 01 00 00 00             ; XT=01c1, flags=00
fc57: 04 4a 4d 50 5a 00          ; 4, JMPZ
;
fc5d: 6b fc 00 00                ; JMP - (next: fc6b SLITERAL)
fc61: b4 01 00 00 00             ; XT=01b4, flags=00
fc66: 03 4a 4d 50 00             ; 3, JMP
;
fc6b: 7e fc 00 00                ; SLITERAL - (next: fc7e DUP)
fc6f: a7 01 00 00 00             ; XT=01a7, flags=00
fc74: 08 53 4c 49 54 45 52 41 4c 00 ; 8, SLITERAL
;
fc7e: 8c fc 00 00                ; DUP - (next: fc8c DROP)
fc82: a0 01 00 00 02             ; XT=01a0, flags=02
fc87: 03 44 55 50 00             ; 3, DUP
;
fc8c: 9b fc 00 00                ; DROP - (next: fc9b SWAP)
fc90: 99 01 00 00 02             ; XT=0199, flags=02
fc95: 04 44 52 4f 50 00          ; 4, DROP
;
fc9b: aa fc 00 00                ; SWAP - (next: fcaa !)
fc9f: 92 01 00 00 02             ; XT=0192, flags=02
fca4: 04 53 57 41 50 00          ; 4, SWAP
;
fcaa: b6 fc 00 00                ; ! - (next: fcb6 @)
fcae: 8b 01 00 00 02             ; XT=018b, flags=02
fcb3: 01 21 00                   ; 1, !
;
fcb6: c2 fc 00 00                ; @ - (next: fcc2 LITERAL)
fcba: 84 01 00 00 02             ; XT=0184, flags=02
fcbf: 01 40 00                   ; 1, @
;
fcc2: d4 fc 00 00                ; LITERAL - (next: fcd4 ])
fcc6: 77 01 00 00 00             ; XT=0177, flags=00
fccb: 07 4c 49 54 45 52 41 4c 00 ; 7, LITERAL
;
fcd4: e0 fc 00 00                ; ] - (next: fce0 [)
fcd8: 69 01 00 00 01             ; XT=0169, flags=01
fcdd: 01 5d 00                   ; 1, ]
;
fce0: ec fc 00 00                ; [ - (next: fcec ,)
fce4: 5b 01 00 00 01             ; XT=015b, flags=01
fce9: 01 5b 00                   ; 1, [
;
fcec: f8 fc 00 00                ; , - (next: fcf8 C,)
fcf0: 3e 01 00 00 00             ; XT=013e, flags=00
fcf5: 01 2c 00                   ; 1, ,
;
fcf8: 05 fd 00 00                ; C, - (next: fd05 LAST)
fcfc: 24 01 00 00 00             ; XT=0124, flags=00
fd01: 02 43 2c 00                ; 2, C,
;
fd05: 14 fd 00 00                ; LAST - (next: fd14 HERE)
fd09: 18 01 00 00 00             ; XT=0118, flags=00
fd0e: 04 4c 41 53 54 00          ; 4, LAST
;
fd14: 23 fd 00 00                ; HERE - (next: fd23 CELL)
fd18: 0c 01 00 00 00             ; XT=010c, flags=00
fd1d: 04 48 45 52 45 00          ; 4, HERE
;
fd23: 32 fd 00 00                ; CELL - (next: fd32 T3)
fd27: 04 01 00 00 00             ; XT=0104, flags=00
fd2c: 04 43 45 4c 4c 00          ; 4, CELL
;
fd32: 3f fd 00 00                ; T3 - (next: fd3f T2)
fd36: f4 00 00 00 00             ; XT=00f4, flags=00
fd3b: 02 54 33 00                ; 2, T3
;
fd3f: 4c fd 00 00                ; T2 - (next: fd4c T1)
fd43: e5 00 00 00 00             ; XT=00e5, flags=00
fd48: 02 54 32 00                ; 2, T2
;
fd4c: 59 fd 00 00                ; T1 - (next: fd59 INPUT-FP)
fd50: d6 00 00 00 00             ; XT=00d6, flags=00
fd55: 02 54 31 00                ; 2, T1
;
fd59: 6c fd 00 00                ; INPUT-FP - (next: fd6c #LEN)
fd5d: c7 00 00 00 00             ; XT=00c7, flags=00
fd62: 08 49 4e 50 55 54 2d 46 50 00 ; 8, INPUT-FP
;
fd6c: 7b fd 00 00                ; #LEN - (next: fd7b #NEG)
fd70: b8 00 00 00 00             ; XT=00b8, flags=00
fd75: 04 23 4c 45 4e 00          ; 4, #LEN
;
fd7b: 8a fd 00 00                ; #NEG - (next: fd8a (tmp))
fd7f: a9 00 00 00 00             ; XT=00a9, flags=00
fd84: 04 23 4e 45 47 00          ; 4, #NEG
;
fd8a: 9a fd 00 00                ; (tmp) - (next: fd9a >IN)
fd8e: 9a 00 00 00 00             ; XT=009a, flags=00
fd93: 05 28 74 6d 70 29 00       ; 5, (tmp)
;
fd9a: a8 fd 00 00                ; >IN - (next: fda8 (MEM_SZ))
fd9e: 8b 00 00 00 00             ; XT=008b, flags=00
fda3: 03 3e 49 4e 00             ; 3, >IN
;
fda8: bb fd 00 00                ; (MEM_SZ) - (next: fdbb STATE)
fdac: 7c 00 00 00 00             ; XT=007c, flags=00
fdb1: 08 28 4d 45 4d 5f 53 5a 29 00 ; 8, (MEM_SZ)
;
fdbb: cb fd 00 00                ; STATE - (next: fdcb BASE)
fdbf: 6d 00 00 00 00             ; XT=006d, flags=00
fdc4: 05 53 54 41 54 45 00       ; 5, STATE
;
fdcb: da fd 00 00                ; BASE - (next: fdda (LAST))
fdcf: 5e 00 00 00 00             ; XT=005e, flags=00
fdd4: 04 42 41 53 45 00          ; 4, BASE
;
fdda: eb fd 00 00                ; (LAST) - (next: fdeb (HERE))
fdde: 4f 00 00 00 00             ; XT=004f, flags=00
fde3: 06 28 4c 41 53 54 29 00    ; 6, (LAST)
;
fdeb: fc fd 00 00                ; (HERE) - (next: fdfc <end>)
fdef: 40 00 00 00 00             ; XT=0040, flags=00
fdf4: 06 28 48 45 52 45 29 00    ; 6, (HERE)
;
fdfc: 00 00 00 00                ; End.
