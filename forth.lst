; memory-size: 65536 bytes, (10000 hex)
; data-stack: fe00, grows up
; return-stack: fffc, grows down
;
0000: 08 03 11 00 00             ; JMP main (1103)
;
0005: 00 00 00
0008: 00000004 00000000
0010: 00001323 0000f12f 0000000a 00000000
0020: 00000000 00010000 00000000 00000000
0030: 00000000 00000000 00000000 00000000
;
0040: 18 eb ff 00 00             ; DICTP (HERE) (ffeb)
0045: 01 4b 00 00 00             ; LITERAL 75 (0x004b)
004a: 0c                         ; RET
004b: 23 13 00 00                ; dw 0x1323
;
004f: 18 da ff 00 00             ; DICTP (LAST) (ffda)
0054: 01 5a 00 00 00             ; LITERAL 90 (0x005a)
0059: 0c                         ; RET
005a: 2f f1 00 00                ; dw 0xf12f
;
005e: 18 cb ff 00 00             ; DICTP BASE (ffcb)
0063: 01 69 00 00 00             ; LITERAL 105 (0x0069)
0068: 0c                         ; RET
0069: 0a 00 00 00                ; dw 0x000a
;
006d: 18 bb ff 00 00             ; DICTP STATE (ffbb)
0072: 01 78 00 00 00             ; LITERAL 120 (0x0078)
0077: 0c                         ; RET
0078: 63 00 00 00                ; dw 0x0063
;
007c: 18 a8 ff 00 00             ; DICTP (MEM_SZ) (ffa8)
0081: 01 87 00 00 00             ; LITERAL 135 (0x0087)
0086: 0c                         ; RET
0087: 00 00 01 00                ; dw 0x10000
;
008b: 18 9a ff 00 00             ; DICTP >IN (ff9a)
0090: 01 96 00 00 00             ; LITERAL 150 (0x0096)
0095: 0c                         ; RET
0096: 00 00 00 00                ; dw 0x0000
;
009a: 18 8b ff 00 00             ; DICTP #NEG (ff8b)
009f: 01 a5 00 00 00             ; LITERAL 165 (0x00a5)
00a4: 0c                         ; RET
00a5: 00 00 00 00                ; dw 0x0000
;
00a9: 18 7c ff 00 00             ; DICTP #LEN (ff7c)
00ae: 01 b4 00 00 00             ; LITERAL 180 (0x00b4)
00b3: 0c                         ; RET
00b4: 05 00 00 00                ; dw 0x0005
;
00b8: 18 69 ff 00 00             ; DICTP INPUT-FP (ff69)
00bd: 01 c3 00 00 00             ; LITERAL 195 (0x00c3)
00c2: 0c                         ; RET
00c3: 00 00 00 00                ; dw 0x0000
;
00c7: 18 5c ff 00 00             ; DICTP T1 (ff5c)
00cc: 01 d2 00 00 00             ; LITERAL 210 (0x00d2)
00d1: 0c                         ; RET
00d2: 00 00 00 00                ; dw 0x0000
;
00d6: 18 4f ff 00 00             ; DICTP T2 (ff4f)
00db: 01 e1 00 00 00             ; LITERAL 225 (0x00e1)
00e0: 0c                         ; RET
00e1: 00 00 00 00                ; dw 0x0000
;
00e5: 18 42 ff 00 00             ; DICTP T3 (ff42)
00ea: 01 f0 00 00 00             ; LITERAL 240 (0x00f0)
00ef: 0c                         ; RET
00f0: 00 00 00 00                ; dw 0x0000
;
00f4: fc                         ; NOP
00f5: 18 33 ff 00 00             ; DICTP CELL (ff33)
00fa: 0e 04                      ; CLITERAL 4
00fc: 0c                         ; RET
;
00fd: 18 24 ff 00 00             ; DICTP HERE (ff24)
0102: 0b 40 00 00 00             ; CALL (HERE) (0040)
0107: 02                         ; FETCH
0108: 0c                         ; RET
;
0109: 18 15 ff 00 00             ; DICTP LAST (ff15)
010e: 0b 4f 00 00 00             ; CALL (LAST) (004f)
0113: 02                         ; FETCH
0114: 0c                         ; RET
;
0115: 18 08 ff 00 00             ; DICTP C, (ff08)
011a: 0b fd 00 00 00             ; CALL HERE (00fd)
011f: 10                         ; CSTORE
0120: 0b fd 00 00 00             ; CALL HERE (00fd)
0125: 2c                         ; INC
0126: 0b 40 00 00 00             ; CALL (HERE) (0040)
012b: 03                         ; STORE
012c: 0c                         ; RET
;
012d: 18 fc fe 00 00             ; DICTP , (fefc)
0132: 0b fd 00 00 00             ; CALL HERE (00fd)
0137: 03                         ; STORE
0138: 0b fd 00 00 00             ; CALL HERE (00fd)
013d: 0e 04                      ; CLITERAL 4
013f: 11                         ; ADD
0140: 0b 40 00 00 00             ; CALL (HERE) (0040)
0145: 03                         ; STORE
0146: 0c                         ; RET
;
0147: 18 f0 fe 00 00             ; DICTP [ (fef0)
014c: 0e 00                      ; CLITERAL 0
014e: 0b 6d 00 00 00             ; CALL STATE (006d)
0153: 03                         ; STORE
0154: 0c                         ; RET
;
0155: 18 e4 fe 00 00             ; DICTP ] (fee4)
015a: 0e 01                      ; CLITERAL 1
015c: 0b 6d 00 00 00             ; CALL STATE (006d)
0161: 03                         ; STORE
0162: 0c                         ; RET
;
0163: 18 d2 fe 00 00             ; DICTP LITERAL (fed2)
0168: 0e 01                      ; CLITERAL 1
016a: 0b 15 01 00 00             ; CALL C, (0115)
016f: 0c                         ; RET
;
0170: 18 c6 fe 00 00             ; DICTP @ (fec6)
0175: 02                         ; FETCH
0176: 0c                         ; RET
;
0177: 18 ba fe 00 00             ; DICTP ! (feba)
017c: 03                         ; STORE
017d: 0c                         ; RET
;
017e: 18 ab fe 00 00             ; DICTP SWAP (feab)
0183: 04                         ; SWAP
0184: 0c                         ; RET
;
0185: 18 9c fe 00 00             ; DICTP DROP (fe9c)
018a: 05                         ; DROP
018b: 0c                         ; RET
;
018c: 18 8e fe 00 00             ; DICTP DUP (fe8e)
0191: 06                         ; DUP
0192: 0c                         ; RET
;
0193: 18 7b fe 00 00             ; DICTP SLITERAL (fe7b)
0198: 0e 07                      ; CLITERAL 7
019a: 0b 15 01 00 00             ; CALL C, (0115)
019f: 0c                         ; RET
;
01a0: 18 6d fe 00 00             ; DICTP JMP (fe6d)
01a5: 0e 08                      ; CLITERAL 8
01a7: 0b 15 01 00 00             ; CALL C, (0115)
01ac: 0c                         ; RET
;
01ad: 18 5e fe 00 00             ; DICTP JMPZ (fe5e)
01b2: 0e 09                      ; CLITERAL 9
01b4: 0b 15 01 00 00             ; CALL C, (0115)
01b9: 0c                         ; RET
;
01ba: 18 4e fe 00 00             ; DICTP JMPNZ (fe4e)
01bf: 0e 0a                      ; CLITERAL 10
01c1: 0b 15 01 00 00             ; CALL C, (0115)
01c6: 0c                         ; RET
;
01c7: 18 3f fe 00 00             ; DICTP CALL (fe3f)
01cc: 0e 0b                      ; CLITERAL 11
01ce: 0b 15 01 00 00             ; CALL C, (0115)
01d3: 0c                         ; RET
;
01d4: 18 31 fe 00 00             ; DICTP RET (fe31)
01d9: 0e 0c                      ; CLITERAL 12
01db: 0b 15 01 00 00             ; CALL C, (0115)
01e0: 0c                         ; RET
;
01e1: 18 24 fe 00 00             ; DICTP OR (fe24)
01e6: 0d                         ; OR
01e7: 0c                         ; RET
;
01e8: 18 11 fe 00 00             ; DICTP CLITERAL (fe11)
01ed: 0e 0e                      ; CLITERAL 14
01ef: 0b 15 01 00 00             ; CALL C, (0115)
01f4: 0c                         ; RET
;
01f5: 18 04 fe 00 00             ; DICTP C@ (fe04)
01fa: 0f                         ; CFETCH
01fb: 0c                         ; RET
;
01fc: 18 f7 fd 00 00             ; DICTP C! (fdf7)
0201: 10                         ; CSTORE
0202: 0c                         ; RET
;
0203: 18 eb fd 00 00             ; DICTP + (fdeb)
0208: 11                         ; ADD
0209: 0c                         ; RET
;
020a: 18 df fd 00 00             ; DICTP - (fddf)
020f: 12                         ; SUB
0210: 0c                         ; RET
;
0211: 18 d3 fd 00 00             ; DICTP * (fdd3)
0216: 13                         ; MUL
0217: 0c                         ; RET
;
0218: 18 c7 fd 00 00             ; DICTP / (fdc7)
021d: 14                         ; DIV
021e: 0c                         ; RET
;
021f: 18 bb fd 00 00             ; DICTP < (fdbb)
0224: 15                         ; LT
0225: 0c                         ; RET
;
0226: 18 af fd 00 00             ; DICTP = (fdaf)
022b: 16                         ; EQ
022c: 0c                         ; RET
;
022d: 18 a3 fd 00 00             ; DICTP > (fda3)
0232: 17                         ; GT
0233: 0c                         ; RET
;
0234: 18 93 fd 00 00             ; DICTP DICTP (fd93)
0239: 0e 18                      ; CLITERAL 24
023b: 0b 15 01 00 00             ; CALL C, (0115)
0240: 0c                         ; RET
;
0241: 18 84 fd 00 00             ; DICTP EMIT (fd84)
0246: 19                         ; EMIT
0247: 0c                         ; RET
;
0248: 18 75 fd 00 00             ; DICTP OVER (fd75)
024d: 1a                         ; OVER
024e: 0c                         ; RET
;
024f: 18 63 fd 00 00             ; DICTP COMPARE (fd63)
0254: 1b                         ; COMPARE
0255: 0c                         ; RET
;
0256: 18 53 fd 00 00             ; DICTP FOPEN (fd53)
025b: 1c                         ; FOPEN
025c: 0c                         ; RET
;
025d: 18 43 fd 00 00             ; DICTP FREAD (fd43)
0262: 1d                         ; FREAD
0263: 0c                         ; RET
;
0264: 18 2f fd 00 00             ; DICTP FREADLINE (fd2f)
0269: 1e                         ; FREADLINE
026a: 0c                         ; RET
;
026b: 18 1e fd 00 00             ; DICTP FWRITE (fd1e)
0270: 1f                         ; FWRITE
0271: 0c                         ; RET
;
0272: 18 0d fd 00 00             ; DICTP FCLOSE (fd0d)
0277: 20                         ; FCLOSE
0278: 0c                         ; RET
;
0279: 18 00 fd 00 00             ; DICTP >R (fd00)
027e: 21                         ; DTOR
027f: 0c                         ; RET
;
0280: 18 f3 fc 00 00             ; DICTP R> (fcf3)
0285: 22                         ; RTOD
0286: 0c                         ; RET
;
0287: 18 e0 fc 00 00             ; DICTP LOGLEVEL (fce0)
028c: 23                         ; LOGLEVEL
028d: 0c                         ; RET
;
028e: 18 d2 fc 00 00             ; DICTP AND (fcd2)
0293: 24                         ; AND
0294: 0c                         ; RET
;
0295: 18 c3 fc 00 00             ; DICTP PICK (fcc3)
029a: 25                         ; PICK
029b: 0c                         ; RET
;
029c: 18 b3 fc 00 00             ; DICTP DEPTH (fcb3)
02a1: 26                         ; DEPTH
02a2: 0c                         ; RET
;
02a3: 18 a3 fc 00 00             ; DICTP GETCH (fca3)
02a8: 27                         ; GETCH
02a9: 0c                         ; RET
;
02aa: 18 90 fc 00 00             ; DICTP COMPAREI (fc90)
02af: 28                         ; COMPAREI
02b0: 0c                         ; RET
;
02b1: 18 81 fc 00 00             ; DICTP /MOD (fc81)
02b6: 29                         ; SLASHMOD
02b7: 0c                         ; RET
;
02b8: 18 73 fc 00 00             ; DICTP NOT (fc73)
02bd: 2a                         ; NOT
02be: 0c                         ; RET
;
02bf: 18 62 fc 00 00             ; DICTP RFETCH (fc62)
02c4: 2b                         ; RFETCH
02c5: 0c                         ; RET
;
02c6: 18 54 fc 00 00             ; DICTP INC (fc54)
02cb: 2c                         ; INC
02cc: 0c                         ; RET
;
02cd: 18 43 fc 00 00             ; DICTP RDEPTH (fc43)
02d2: 2d                         ; RDEPTH
02d3: 0c                         ; RET
;
02d4: 18 35 fc 00 00             ; DICTP DEC (fc35)
02d9: 2e                         ; DEC
02da: 0c                         ; RET
;
02db: 18 23 fc 00 00             ; DICTP GETTICK (fc23)
02e0: 2f                         ; GETTICK
02e1: 0c                         ; RET
;
02e2: 18 16 fc 00 00             ; DICTP << (fc16)
02e7: 30                         ; RESET
02e8: 0c                         ; RET
;
02e9: 18 09 fc 00 00             ; DICTP >> (fc09)
02ee: 31                         ; RESET
02ef: 0c                         ; RET
;
02f0: 18 f7 fb 00 00             ; DICTP BRANCHF (fbf7)
02f5: 0e 5a                      ; CLITERAL 90
02f7: 0b 15 01 00 00             ; CALL C, (0115)
02fc: 0c                         ; RET
;
02fd: 18 e4 fb 00 00             ; DICTP BRANCHFZ (fbe4)
0302: 0e 5b                      ; CLITERAL 91
0304: 0b 15 01 00 00             ; CALL C, (0115)
0309: 0c                         ; RET
;
030a: 18 d0 fb 00 00             ; DICTP BRANCHFNZ (fbd0)
030f: 0e 5c                      ; CLITERAL 92
0311: 0b 15 01 00 00             ; CALL C, (0115)
0316: 0c                         ; RET
;
0317: 18 be fb 00 00             ; DICTP BRANCHB (fbbe)
031c: 0e 5d                      ; CLITERAL 93
031e: 0b 15 01 00 00             ; CALL C, (0115)
0323: 0c                         ; RET
;
0324: 18 ab fb 00 00             ; DICTP BRANCHBZ (fbab)
0329: 0e 5e                      ; CLITERAL 94
032b: 0b 15 01 00 00             ; CALL C, (0115)
0330: 0c                         ; RET
;
0331: 18 97 fb 00 00             ; DICTP BRANCHBNZ (fb97)
0336: 0e 5f                      ; CLITERAL 95
0338: 0b 15 01 00 00             ; CALL C, (0115)
033d: 0c                         ; RET
;
033e: 18 89 fb 00 00             ; DICTP NOP (fb89)
0343: fc                         ; NOP
0344: 0c                         ; RET
;
0345: 18 79 fb 00 00             ; DICTP BREAK (fb79)
034a: fd                         ; BREAK
034b: 0c                         ; RET
;
034c: 18 69 fb 00 00             ; DICTP RESET (fb69)
0351: fe                         ; RESET
0352: 0c                         ; RET
;
0353: 18 5b fb 00 00             ; DICTP BYE (fb5b)
0358: ff                         ; BYE
0359: 0c                         ; RET
;
035a: 18 4a fb 00 00             ; DICTP INLINE (fb4a)
035f: 0b 09 01 00 00             ; CALL LAST (0109)
0364: 0e 02                      ; CLITERAL 2
0366: 0e 04                      ; CLITERAL 4
0368: 13                         ; MUL
0369: 11                         ; ADD
036a: 06                         ; DUP
036b: 0f                         ; CFETCH
036c: 0e 02                      ; CLITERAL 2
036e: 0d                         ; OR
036f: 04                         ; SWAP
0370: 10                         ; CSTORE
0371: 0c                         ; RET
;
0372: 18 36 fb 00 00             ; DICTP IMMEDIATE (fb36)
0377: 0b 09 01 00 00             ; CALL LAST (0109)
037c: 0e 02                      ; CLITERAL 2
037e: 0e 04                      ; CLITERAL 4
0380: 13                         ; MUL
0381: 11                         ; ADD
0382: 06                         ; DUP
0383: 0f                         ; CFETCH
0384: 0e 01                      ; CLITERAL 1
0386: 0d                         ; OR
0387: 04                         ; SWAP
0388: 10                         ; CSTORE
0389: 0c                         ; RET
;
038a: 18 26 fb 00 00             ; DICTP CELLS (fb26)
038f: 0e 04                      ; CLITERAL 4
0391: 13                         ; MUL
0392: 0c                         ; RET
;
0393: 18 0d fb 00 00             ; DICTP FLAG_IMMEDIATE (fb0d)
0398: 0e 01                      ; CLITERAL 1
039a: 0c                         ; RET
;
039b: 18 f7 fa 00 00             ; DICTP FLAG_INLINE (faf7)
03a0: 0e 02                      ; CLITERAL 2
03a2: 0c                         ; RET
;
03a3: 18 e9 fa 00 00             ; DICTP HEX (fae9)
03a8: 0e 10                      ; CLITERAL 16
03aa: 0b 5e 00 00 00             ; CALL BASE (005e)
03af: 03                         ; STORE
03b0: 0c                         ; RET
;
03b1: 18 d7 fa 00 00             ; DICTP DECIMAL (fad7)
03b6: 0e 0a                      ; CLITERAL 10
03b8: 0b 5e 00 00 00             ; CALL BASE (005e)
03bd: 03                         ; STORE
03be: 0c                         ; RET
;
03bf: 18 c7 fa 00 00             ; DICTP OCTAL (fac7)
03c4: 0e 08                      ; CLITERAL 8
03c6: 0b 5e 00 00 00             ; CALL BASE (005e)
03cb: 03                         ; STORE
03cc: 0c                         ; RET
;
03cd: 18 b6 fa 00 00             ; DICTP BINARY (fab6)
03d2: 0e 02                      ; CLITERAL 2
03d4: 0b 5e 00 00 00             ; CALL BASE (005e)
03d9: 03                         ; STORE
03da: 0c                         ; RET
;
03db: 18 a9 fa 00 00             ; DICTP ON (faa9)
03e0: 0e 01                      ; CLITERAL 1
03e2: 04                         ; SWAP
03e3: 03                         ; STORE
03e4: 0c                         ; RET
;
03e5: 18 9b fa 00 00             ; DICTP OFF (fa9b)
03ea: 0e 00                      ; CLITERAL 0
03ec: 04                         ; SWAP
03ed: 03                         ; STORE
03ee: 0c                         ; RET
;
03ef: 18 86 fa 00 00             ; DICTP ?COMPILING (fa86)
03f4: 0b 6d 00 00 00             ; CALL STATE (006d)
03f9: 02                         ; FETCH
03fa: 0c                         ; RET
;
03fb: 18 79 fa 00 00             ; DICTP IF (fa79)
0400: 0b ef 03 00 00             ; CALL ?COMPILING (03ef)
0405: 09 1b 04 00 00             ; JMPZ 041b
040a: 0b fd 02 00 00             ; CALL BRANCHFZ (02fd)
040f: 0b fd 00 00 00             ; CALL HERE (00fd)
0414: 0e 00                      ; CLITERAL 0
0416: 0b 15 01 00 00             ; CALL C, (0115)
041b: 0c                         ; RET
;
041c: 18 6a fa 00 00             ; DICTP ELSE (fa6a)
0421: 0b ef 03 00 00             ; CALL ?COMPILING (03ef)
0426: 09 46 04 00 00             ; JMPZ 0446
042b: 0b f0 02 00 00             ; CALL BRANCHF (02f0)
0430: 0b fd 00 00 00             ; CALL HERE (00fd)
0435: 0e 00                      ; CLITERAL 0
0437: 0b 15 01 00 00             ; CALL C, (0115)
043c: 04                         ; SWAP
043d: 0b fd 00 00 00             ; CALL HERE (00fd)
0442: 1a                         ; OVER
0443: 12                         ; SUB
0444: 04                         ; SWAP
0445: 10                         ; CSTORE
0446: 0c                         ; RET
;
0447: 18 5b fa 00 00             ; DICTP THEN (fa5b)
044c: 0b ef 03 00 00             ; CALL ?COMPILING (03ef)
0451: 09 5f 04 00 00             ; JMPZ 045f
0456: 0b fd 00 00 00             ; CALL HERE (00fd)
045b: 1a                         ; OVER
045c: 12                         ; SUB
045d: 04                         ; SWAP
045e: 10                         ; CSTORE
045f: 0c                         ; RET
;
0460: 18 4b fa 00 00             ; DICTP BEGIN (fa4b)
0465: 0b ef 03 00 00             ; CALL ?COMPILING (03ef)
046a: 5b 06                      ; BRANCHFZ 6 (0471)
046c: 0b fd 00 00 00             ; CALL HERE (00fd)
0471: 0c                         ; RET
;
0472: 18 3b fa 00 00             ; DICTP AGAIN (fa3b)
0477: 0b ef 03 00 00             ; CALL ?COMPILING (03ef)
047c: 5b 12                      ; BRANCHFZ 18 (048f)
047e: 0b 17 03 00 00             ; CALL BRANCHB (0317)
0483: 0b fd 00 00 00             ; CALL HERE (00fd)
0488: 04                         ; SWAP
0489: 12                         ; SUB
048a: 0b 15 01 00 00             ; CALL C, (0115)
048f: 0c                         ; RET
;
0490: 18 2b fa 00 00             ; DICTP WHILE (fa2b)
0495: 0b ef 03 00 00             ; CALL ?COMPILING (03ef)
049a: 5b 12                      ; BRANCHFZ 18 (04ad)
049c: 0b 31 03 00 00             ; CALL BRANCHBNZ (0331)
04a1: 0b fd 00 00 00             ; CALL HERE (00fd)
04a6: 04                         ; SWAP
04a7: 12                         ; SUB
04a8: 0b 15 01 00 00             ; CALL C, (0115)
04ad: 0c                         ; RET
;
04ae: 18 1b fa 00 00             ; DICTP UNTIL (fa1b)
04b3: 0b ef 03 00 00             ; CALL ?COMPILING (03ef)
04b8: 5b 12                      ; BRANCHFZ 18 (04cb)
04ba: 0b 24 03 00 00             ; CALL BRANCHBZ (0324)
04bf: 0b fd 00 00 00             ; CALL HERE (00fd)
04c4: 04                         ; SWAP
04c5: 12                         ; SUB
04c6: 0b 15 01 00 00             ; CALL C, (0115)
04cb: 0c                         ; RET
;
04cc: 18 0b fa 00 00             ; DICTP LEAVE (fa0b)
04d1: 0b ef 03 00 00             ; CALL ?COMPILING (03ef)
04d6: 5b 06                      ; BRANCHFZ 6 (04dd)
04d8: 0b d4 01 00 00             ; CALL RET (01d4)
04dd: 0c                         ; RET
;
04de: 18 fa f9 00 00             ; DICTP MEM_SZ (f9fa)
04e3: 0b 7c 00 00 00             ; CALL (MEM_SZ) (007c)
04e8: 02                         ; FETCH
04e9: 0c                         ; RET
;
04ea: 18 e7 f9 00 00             ; DICTP TRACE-ON (f9e7)
04ef: 0e 02                      ; CLITERAL 2
04f1: 23                         ; LOGLEVEL
04f2: 0c                         ; RET
;
04f3: 18 d3 f9 00 00             ; DICTP TRACE-OFF (f9d3)
04f8: 0e 00                      ; CLITERAL 0
04fa: 23                         ; LOGLEVEL
04fb: 0c                         ; RET
;
04fc: 18 c0 f9 00 00             ; DICTP DEBUG-ON (f9c0)
0501: 0e 01                      ; CLITERAL 1
0503: 23                         ; LOGLEVEL
0504: 0c                         ; RET
;
0505: 18 ac f9 00 00             ; DICTP DEBUG-OFF (f9ac)
050a: 0e 00                      ; CLITERAL 0
050c: 23                         ; LOGLEVEL
050d: 0c                         ; RET
;
050e: 18 9f f9 00 00             ; DICTP R@ (f99f)
0513: 2b                         ; RFETCH
0514: 0c                         ; RET
;
0515: 18 8f f9 00 00             ; DICTP RDROP (f98f)
051a: 22                         ; RTOD
051b: 05                         ; DROP
051c: 0c                         ; RET
;
051d: 18 80 f9 00 00             ; DICTP ?DUP (f980)
0522: 06                         ; DUP
0523: 5b 02                      ; BRANCHFZ 2 (0526)
0525: 06                         ; DUP
0526: 0c                         ; RET
;
0527: 18 71 f9 00 00             ; DICTP 2DUP (f971)
052c: 1a                         ; OVER
052d: 1a                         ; OVER
052e: 0c                         ; RET
;
052f: 18 61 f9 00 00             ; DICTP 2DROP (f961)
0534: 05                         ; DROP
0535: 05                         ; DROP
0536: 0c                         ; RET
;
0537: 18 52 f9 00 00             ; DICTP TUCK (f952)
053c: 04                         ; SWAP
053d: 1a                         ; OVER
053e: 0c                         ; RET
;
053f: 18 44 f9 00 00             ; DICTP NIP (f944)
0544: 04                         ; SWAP
0545: 05                         ; DROP
0546: 0c                         ; RET
;
0547: 18 36 f9 00 00             ; DICTP ROT (f936)
054c: 21                         ; DTOR
054d: 04                         ; SWAP
054e: 22                         ; RTOD
054f: 04                         ; SWAP
0550: 0c                         ; RET
;
0551: 18 27 f9 00 00             ; DICTP -ROT (f927)
0556: 04                         ; SWAP
0557: 21                         ; DTOR
0558: 04                         ; SWAP
0559: 22                         ; RTOD
055a: 0c                         ; RET
;
055b: 18 1b f9 00 00             ; DICTP / (f91b)
0560: 29                         ; SLASHMOD
0561: 04                         ; SWAP
0562: 05                         ; DROP
0563: 0c                         ; RET
;
0564: 18 0d f9 00 00             ; DICTP MOD (f90d)
0569: 29                         ; SLASHMOD
056a: 05                         ; DROP
056b: 0c                         ; RET
;
056c: 18 00 f9 00 00             ; DICTP 1+ (f900)
0571: 2c                         ; INC
0572: 0c                         ; RET
;
0573: 18 f3 f8 00 00             ; DICTP 1- (f8f3)
0578: 2e                         ; DEC
0579: 0c                         ; RET
;
057a: 18 e6 f8 00 00             ; DICTP 2* (f8e6)
057f: 0e 02                      ; CLITERAL 2
0581: 13                         ; MUL
0582: 0c                         ; RET
;
0583: 18 d9 f8 00 00             ; DICTP 2/ (f8d9)
0588: 0e 02                      ; CLITERAL 2
058a: 29                         ; SLASHMOD
058b: 04                         ; SWAP
058c: 05                         ; DROP
058d: 0c                         ; RET
;
058e: 18 cc f8 00 00             ; DICTP += (f8cc)
0593: 1a                         ; OVER
0594: 02                         ; FETCH
0595: 11                         ; ADD
0596: 04                         ; SWAP
0597: 03                         ; STORE
0598: 0c                         ; RET
;
0599: 18 bf f8 00 00             ; DICTP -= (f8bf)
059e: 1a                         ; OVER
059f: 02                         ; FETCH
05a0: 04                         ; SWAP
05a1: 12                         ; SUB
05a2: 04                         ; SWAP
05a3: 03                         ; STORE
05a4: 0c                         ; RET
;
05a5: 18 b2 f8 00 00             ; DICTP +! (f8b2)
05aa: 04                         ; SWAP
05ab: 1a                         ; OVER
05ac: 02                         ; FETCH
05ad: 11                         ; ADD
05ae: 04                         ; SWAP
05af: 03                         ; STORE
05b0: 0c                         ; RET
;
05b1: 18 a5 f8 00 00             ; DICTP -! (f8a5)
05b6: 04                         ; SWAP
05b7: 1a                         ; OVER
05b8: 02                         ; FETCH
05b9: 04                         ; SWAP
05ba: 12                         ; SUB
05bb: 04                         ; SWAP
05bc: 03                         ; STORE
05bd: 0c                         ; RET
;
05be: 18 98 f8 00 00             ; DICTP ++ (f898)
05c3: 06                         ; DUP
05c4: 02                         ; FETCH
05c5: 2c                         ; INC
05c6: 04                         ; SWAP
05c7: 03                         ; STORE
05c8: 0c                         ; RET
;
05c9: 18 8b f8 00 00             ; DICTP -- (f88b)
05ce: 06                         ; DUP
05cf: 02                         ; FETCH
05d0: 2e                         ; DEC
05d1: 04                         ; SWAP
05d2: 03                         ; STORE
05d3: 0c                         ; RET
;
05d4: 18 7d f8 00 00             ; DICTP C++ (f87d)
05d9: 06                         ; DUP
05da: 0f                         ; CFETCH
05db: 2c                         ; INC
05dc: 04                         ; SWAP
05dd: 10                         ; CSTORE
05de: 0c                         ; RET
;
05df: 18 6f f8 00 00             ; DICTP C-- (f86f)
05e4: 06                         ; DUP
05e5: 0f                         ; CFETCH
05e6: 2e                         ; DEC
05e7: 04                         ; SWAP
05e8: 10                         ; CSTORE
05e9: 0c                         ; RET
;
05ea: 18 62 f8 00 00             ; DICTP 0= (f862)
05ef: 2a                         ; NOT
05f0: 0c                         ; RET
;
05f1: 18 55 f8 00 00             ; DICTP <> (f855)
05f6: 16                         ; EQ
05f7: 2a                         ; NOT
05f8: 0c                         ; RET
;
05f9: 18 48 f8 00 00             ; DICTP <= (f848)
05fe: 17                         ; GT
05ff: 2a                         ; NOT
0600: 0c                         ; RET
;
0601: 18 3b f8 00 00             ; DICTP >= (f83b)
0606: 15                         ; LT
0607: 2a                         ; NOT
0608: 0c                         ; RET
;
0609: 18 2c f8 00 00             ; DICTP TRUE (f82c)
060e: 01 ff ff ff ff             ; LITERAL -1 (ffffffff)
0613: 0c                         ; RET
;
0614: 18 1c f8 00 00             ; DICTP FALSE (f81c)
0619: 0e 00                      ; CLITERAL 0
061b: 0c                         ; RET
;
061c: 18 0c f8 00 00             ; DICTP COUNT (f80c)
0621: 06                         ; DUP
0622: 2c                         ; INC
0623: 04                         ; SWAP
0624: 0f                         ; CFETCH
0625: 0c                         ; RET
;
0626: 18 fd f7 00 00             ; DICTP TYPE (f7fd)
062b: 06                         ; DUP
062c: 2a                         ; NOT
062d: 5b 04                      ; BRANCHFZ 4 (0632)
062f: 05                         ; DROP
0630: 05                         ; DROP
0631: 0c                         ; RET
0632: 04                         ; SWAP
0633: 06                         ; DUP
0634: 0f                         ; CFETCH
0635: 19                         ; EMIT
0636: 2c                         ; INC
0637: 04                         ; SWAP
0638: 2e                         ; DEC
0639: 5d 0f                      ; BRANCHB 15 (062b)
063b: 0c                         ; RET
;
063c: 18 f0 f7 00 00             ; DICTP CT (f7f0)
0641: 0b 1c 06 00 00             ; CALL COUNT (061c)
0646: 0b 26 06 00 00             ; CALL TYPE (0626)
064b: 0c                         ; RET
;
064c: 18 e4 f7 00 00             ; DICTP \ (f7e4)
0651: 0e 00                      ; CLITERAL 0
0653: 0b 8b 00 00 00             ; CALL >IN (008b)
0658: 02                         ; FETCH
0659: 10                         ; CSTORE
065a: 0c                         ; RET
;
065b: 18 d8 f7 00 00             ; DICTP ( (f7d8)
0660: 0b 8b 00 00 00             ; CALL >IN (008b)
0665: 02                         ; FETCH
0666: 0f                         ; CFETCH
0667: 06                         ; DUP
0668: 2a                         ; NOT
0669: 5b 1d                      ; BRANCHFZ 29 (0687)
066b: 07 13 6d 69 73 73 69 6e 67 20 63 6c 6f 73 69 6e 67 20 27 29 27 00 ; SLITERAL (066c) [missing closing ')']
0681: 0b 3c 06 00 00             ; CALL CT (063c)
0686: fe                         ; RESET
0687: 0b 8b 00 00 00             ; CALL >IN (008b)
068c: 06                         ; DUP
068d: 02                         ; FETCH
068e: 2c                         ; INC
068f: 04                         ; SWAP
0690: 03                         ; STORE
0691: 0e 29                      ; CLITERAL 41
0693: 16                         ; EQ
0694: 5e 35                      ; BRANCHBZ 53 (0660)
0696: 0c                         ; RET
;
0697: 18 c8 f7 00 00             ; DICTP SPACE (f7c8)
069c: 0e 20                      ; CLITERAL 32
069e: 19                         ; EMIT
069f: 0c                         ; RET
;
06a0: 18 bb f7 00 00             ; DICTP BL (f7bb)
06a5: 0e 20                      ; CLITERAL 32
06a7: 19                         ; EMIT
06a8: 0c                         ; RET
;
06a9: 18 ac f7 00 00             ; DICTP CRLF (f7ac)
06ae: 0e 0d                      ; CLITERAL 13
06b0: 19                         ; EMIT
06b1: 0e 0a                      ; CLITERAL 10
06b3: 19                         ; EMIT
06b4: 0c                         ; RET
;
06b5: 18 9f f7 00 00             ; DICTP CR (f79f)
06ba: 0e 0d                      ; CLITERAL 13
06bc: 19                         ; EMIT
06bd: 0e 0a                      ; CLITERAL 10
06bf: 19                         ; EMIT
06c0: 0c                         ; RET
;
06c1: 18 8d f7 00 00             ; DICTP BETWEEN (f78d)
06c6: 0e 02                      ; CLITERAL 2
06c8: 25                         ; PICK
06c9: 15                         ; LT
06ca: 5b 06                      ; BRANCHFZ 6 (06d1)
06cc: 05                         ; DROP
06cd: 05                         ; DROP
06ce: 0e 00                      ; CLITERAL 0
06d0: 0c                         ; RET
06d1: 15                         ; LT
06d2: 2a                         ; NOT
06d3: 0c                         ; RET
;
06d4: 18 7c f7 00 00             ; DICTP skipWS (f77c)
06d9: 06                         ; DUP
06da: 0f                         ; CFETCH
06db: 06                         ; DUP
06dc: 5b 0c                      ; BRANCHFZ 12 (06e9)
06de: 0e 20                      ; CLITERAL 32
06e0: 17                         ; GT
06e1: 5b 04                      ; BRANCHFZ 4 (06e6)
06e3: 0c                         ; RET
06e4: 5a 02                      ; BRANCHF 2 (06e7)
06e6: 2c                         ; INC
06e7: 5a 03                      ; BRANCHF 3 (06eb)
06e9: 05                         ; DROP
06ea: 0c                         ; RET
06eb: 5d 13                      ; BRANCHB 19 (06d9)
06ed: 0c                         ; RET
;
06ee: 18 67 f7 00 00             ; DICTP getOneWord (f767)
06f3: 06                         ; DUP
06f4: 21                         ; DTOR
06f5: 21                         ; DTOR
06f6: 2b                         ; RFETCH
06f7: 0f                         ; CFETCH
06f8: 0e 20                      ; CLITERAL 32
06fa: 17                         ; GT
06fb: 5b 06                      ; BRANCHFZ 6 (0702)
06fd: 22                         ; RTOD
06fe: 2c                         ; INC
06ff: 21                         ; DTOR
0700: 5a 10                      ; BRANCHF 16 (0711)
0702: 2b                         ; RFETCH
0703: 0f                         ; CFETCH
0704: 5b 08                      ; BRANCHFZ 8 (070d)
0706: 0e 00                      ; CLITERAL 0
0708: 2b                         ; RFETCH
0709: 10                         ; CSTORE
070a: 22                         ; RTOD
070b: 2c                         ; INC
070c: 21                         ; DTOR
070d: 22                         ; RTOD
070e: 22                         ; RTOD
070f: 04                         ; SWAP
0710: 0c                         ; RET
0711: 5d 1c                      ; BRANCHB 28 (06f6)
0713: 0c                         ; RET
;
0714: 18 53 f7 00 00             ; DICTP DICT>NEXT (f753)
0719: 0c                         ; RET
;
071a: 18 41 f7 00 00             ; DICTP DICT>XT (f741)
071f: 0e 04                      ; CLITERAL 4
0721: 11                         ; ADD
0722: 0c                         ; RET
;
0723: 18 2c f7 00 00             ; DICTP DICT>FLAGS (f72c)
0728: 0e 02                      ; CLITERAL 2
072a: 0e 04                      ; CLITERAL 4
072c: 13                         ; MUL
072d: 11                         ; ADD
072e: 0c                         ; RET
;
072f: 18 18 f7 00 00             ; DICTP DICT>NAME (f718)
0734: 0b 23 07 00 00             ; CALL DICT>FLAGS (0723)
0739: 2c                         ; INC
073a: 0c                         ; RET
;
073b: 18 04 f7 00 00             ; DICTP NEXT>DICT (f704)
0740: 0c                         ; RET
;
0741: 18 f2 f6 00 00             ; DICTP XT>DICT (f6f2)
0746: 0e 04                      ; CLITERAL 4
0748: 12                         ; SUB
0749: 0c                         ; RET
;
074a: 18 dd f6 00 00             ; DICTP FLAGS>DICT (f6dd)
074f: 0e 02                      ; CLITERAL 2
0751: 0e 04                      ; CLITERAL 4
0753: 13                         ; MUL
0754: 12                         ; SUB
0755: 0c                         ; RET
;
0756: 18 c9 f6 00 00             ; DICTP NAME>DICT (f6c9)
075b: 2e                         ; DEC
075c: 0e 02                      ; CLITERAL 2
075e: 0e 04                      ; CLITERAL 4
0760: 13                         ; MUL
0761: 12                         ; SUB
0762: 0c                         ; RET
;
0763: 18 b4 f6 00 00             ; DICTP DICT.GetXT (f6b4)
0768: 0b 1a 07 00 00             ; CALL DICT>XT (071a)
076d: 02                         ; FETCH
076e: 0c                         ; RET
;
076f: 18 9c f6 00 00             ; DICTP DICT.GetFLAGS (f69c)
0774: 0b 23 07 00 00             ; CALL DICT>FLAGS (0723)
0779: 0f                         ; CFETCH
077a: 0c                         ; RET
;
077b: 18 87 f6 00 00             ; DICTP DICTP>NAME (f687)
0780: 2c                         ; INC
0781: 02                         ; FETCH
0782: 0b 2f 07 00 00             ; CALL DICT>NAME (072f)
0787: 0c                         ; RET
;
0788: 18 71 f6 00 00             ; DICTP XT.GetDICTP (f671)
078d: 06                         ; DUP
078e: 0f                         ; CFETCH
078f: 0e 18                      ; CLITERAL 24
0791: 16                         ; EQ
0792: 5b 05                      ; BRANCHFZ 5 (0798)
0794: 2c                         ; INC
0795: 02                         ; FETCH
0796: 5a 03                      ; BRANCHF 3 (079a)
0798: 05                         ; DROP
0799: fe                         ; RESET
079a: 0c                         ; RET
;
079b: 18 54 f6 00 00             ; DICTP FLAGS.ISIMMEDIATE? (f654)
07a0: 0e 01                      ; CLITERAL 1
07a2: 24                         ; AND
07a3: 0c                         ; RET
;
07a4: 18 3a f6 00 00             ; DICTP FLAGS.ISINLINE? (f63a)
07a9: 0e 02                      ; CLITERAL 2
07ab: 24                         ; AND
07ac: 0c                         ; RET
;
07ad: 18 1e f6 00 00             ; DICTP DICT.GetIMMEDIATE (f61e)
07b2: 0b 6f 07 00 00             ; CALL DICT.GetFLAGS (076f)
07b7: 0b 9b 07 00 00             ; CALL FLAGS.ISIMMEDIATE? (079b)
07bc: 0c                         ; RET
;
07bd: 18 05 f6 00 00             ; DICTP DICT.GetINLINE (f605)
07c2: 0b 6f 07 00 00             ; CALL DICT.GetFLAGS (076f)
07c7: 0b a4 07 00 00             ; CALL FLAGS.ISINLINE? (07a4)
07cc: 0c                         ; RET
;
07cd: 18 f0 f5 00 00             ; DICTP findInDict (f5f0)
07d2: 0b 09 01 00 00             ; CALL LAST (0109)
07d7: 21                         ; DTOR
07d8: 2b                         ; RFETCH
07d9: 06                         ; DUP
07da: 5b 1d                      ; BRANCHFZ 29 (07f8)
07dc: 0b 2f 07 00 00             ; CALL DICT>NAME (072f)
07e1: 2c                         ; INC
07e2: 1a                         ; OVER
07e3: 28                         ; COMPAREI
07e4: 5b 11                      ; BRANCHFZ 17 (07f6)
07e6: 05                         ; DROP
07e7: 2b                         ; RFETCH
07e8: 0b 63 07 00 00             ; CALL DICT.GetXT (0763)
07ed: 22                         ; RTOD
07ee: 0b 6f 07 00 00             ; CALL DICT.GetFLAGS (076f)
07f3: 0e 01                      ; CLITERAL 1
07f5: 0c                         ; RET
07f6: 5a 09                      ; BRANCHF 9 (0800)
07f8: 05                         ; DROP
07f9: 05                         ; DROP
07fa: 22                         ; RTOD
07fb: 0e 00                      ; CLITERAL 0
07fd: 0e 00                      ; CLITERAL 0
07ff: 0c                         ; RET
0800: 22                         ; RTOD
0801: 02                         ; FETCH
0802: 21                         ; DTOR
0803: 5d 2c                      ; BRANCHB 44 (07d8)
0805: 0c                         ; RET
;
0806: 18 df f5 00 00             ; DICTP isHEX? (f5df)
080b: 0b 5e 00 00 00             ; CALL BASE (005e)
0810: 02                         ; FETCH
0811: 0e 10                      ; CLITERAL 16
0813: 16                         ; EQ
0814: 0c                         ; RET
;
0815: 18 ca f5 00 00             ; DICTP isNumChar? (f5ca)
081a: 06                         ; DUP
081b: 0e 30                      ; CLITERAL 48
081d: 0e 39                      ; CLITERAL 57
081f: 0b c1 06 00 00             ; CALL BETWEEN (06c1)
0824: 5b 07                      ; BRANCHFZ 7 (082c)
0826: 0e 30                      ; CLITERAL 48
0828: 12                         ; SUB
0829: 0e 01                      ; CLITERAL 1
082b: 0c                         ; RET
082c: 0b 06 08 00 00             ; CALL isHEX? (0806)
0831: 5b 25                      ; BRANCHFZ 37 (0857)
0833: 06                         ; DUP
0834: 0e 41                      ; CLITERAL 65
0836: 0e 46                      ; CLITERAL 70
0838: 0b c1 06 00 00             ; CALL BETWEEN (06c1)
083d: 5b 07                      ; BRANCHFZ 7 (0845)
083f: 0e 37                      ; CLITERAL 55
0841: 12                         ; SUB
0842: 0e 01                      ; CLITERAL 1
0844: 0c                         ; RET
0845: 06                         ; DUP
0846: 0e 61                      ; CLITERAL 97
0848: 0e 66                      ; CLITERAL 102
084a: 0b c1 06 00 00             ; CALL BETWEEN (06c1)
084f: 5b 07                      ; BRANCHFZ 7 (0857)
0851: 0e 57                      ; CLITERAL 87
0853: 12                         ; SUB
0854: 0e 01                      ; CLITERAL 1
0856: 0c                         ; RET
0857: 0e 00                      ; CLITERAL 0
0859: 0c                         ; RET
;
085a: 18 b9 f5 00 00             ; DICTP NEGATE (f5b9)
085f: 0e 00                      ; CLITERAL 0
0861: 04                         ; SWAP
0862: 12                         ; SUB
0863: 0c                         ; RET
;
0864: 18 ab f5 00 00             ; DICTP ABS (f5ab)
0869: 06                         ; DUP
086a: 0e 00                      ; CLITERAL 0
086c: 15                         ; LT
086d: 5b 06                      ; BRANCHFZ 6 (0874)
086f: 0b 5a 08 00 00             ; CALL NEGATE (085a)
0874: 0c                         ; RET
;
0875: 18 97 f5 00 00             ; DICTP isNumber? (f597)
087a: 06                         ; DUP
087b: 0f                         ; CFETCH
087c: 0e 2d                      ; CLITERAL 45
087e: 16                         ; EQ
087f: 06                         ; DUP
0880: 0b 9a 00 00 00             ; CALL #NEG (009a)
0885: 03                         ; STORE
0886: 5b 02                      ; BRANCHFZ 2 (0889)
0888: 2c                         ; INC
0889: 0e 00                      ; CLITERAL 0
088b: 21                         ; DTOR
088c: 06                         ; DUP
088d: 0f                         ; CFETCH
088e: 06                         ; DUP
088f: 0e 00                      ; CLITERAL 0
0891: 16                         ; EQ
0892: 5b 14                      ; BRANCHFZ 20 (08a7)
0894: 05                         ; DROP
0895: 05                         ; DROP
0896: 22                         ; RTOD
0897: 0b 9a 00 00 00             ; CALL #NEG (009a)
089c: 02                         ; FETCH
089d: 5b 06                      ; BRANCHFZ 6 (08a4)
089f: 0b 5a 08 00 00             ; CALL NEGATE (085a)
08a4: 0e 01                      ; CLITERAL 1
08a6: 0c                         ; RET
08a7: 0b 15 08 00 00             ; CALL isNumChar? (0815)
08ac: 5b 0e                      ; BRANCHFZ 14 (08bb)
08ae: 22                         ; RTOD
08af: 0b 5e 00 00 00             ; CALL BASE (005e)
08b4: 02                         ; FETCH
08b5: 13                         ; MUL
08b6: 11                         ; ADD
08b7: 21                         ; DTOR
08b8: 2c                         ; INC
08b9: 5a 06                      ; BRANCHF 6 (08c0)
08bb: 05                         ; DROP
08bc: 22                         ; RTOD
08bd: 0e 00                      ; CLITERAL 0
08bf: 0c                         ; RET
08c0: 5d 35                      ; BRANCHB 53 (088c)
08c2: 0c                         ; RET
;
08c3: 18 8a f5 00 00             ; DICTP <# (f58a)
08c8: 0b 9a 00 00 00             ; CALL #NEG (009a)
08cd: 0b e5 03 00 00             ; CALL OFF (03e5)
08d2: 0b a9 00 00 00             ; CALL #LEN (00a9)
08d7: 0b e5 03 00 00             ; CALL OFF (03e5)
08dc: 06                         ; DUP
08dd: 0e 00                      ; CLITERAL 0
08df: 15                         ; LT
08e0: 5b 10                      ; BRANCHFZ 16 (08f1)
08e2: 0b 5a 08 00 00             ; CALL NEGATE (085a)
08e7: 0b 9a 00 00 00             ; CALL #NEG (009a)
08ec: 0b db 03 00 00             ; CALL ON (03db)
08f1: 0e 00                      ; CLITERAL 0
08f3: 04                         ; SWAP
08f4: 0c                         ; RET
;
08f5: 18 7e f5 00 00             ; DICTP # (f57e)
08fa: 0b 5e 00 00 00             ; CALL BASE (005e)
08ff: 02                         ; FETCH
0900: 29                         ; SLASHMOD
0901: 04                         ; SWAP
0902: 0e 30                      ; CLITERAL 48
0904: 11                         ; ADD
0905: 06                         ; DUP
0906: 0e 39                      ; CLITERAL 57
0908: 17                         ; GT
0909: 5b 04                      ; BRANCHFZ 4 (090e)
090b: 0e 07                      ; CLITERAL 7
090d: 11                         ; ADD
090e: 0b a9 00 00 00             ; CALL #LEN (00a9)
0913: 06                         ; DUP
0914: 02                         ; FETCH
0915: 2c                         ; INC
0916: 04                         ; SWAP
0917: 03                         ; STORE
0918: 04                         ; SWAP
0919: 0c                         ; RET
;
091a: 18 71 f5 00 00             ; DICTP #S (f571)
091f: 0b f5 08 00 00             ; CALL # (08f5)
0924: 06                         ; DUP
0925: 2a                         ; NOT
0926: 5e 08                      ; BRANCHBZ 8 (091f)
0928: 0c                         ; RET
;
0929: 18 64 f5 00 00             ; DICTP #> (f564)
092e: 0c                         ; RET
;
092f: 18 56 f5 00 00             ; DICTP #P- (f556)
0934: 05                         ; DROP
0935: 0b 9a 00 00 00             ; CALL #NEG (009a)
093a: 02                         ; FETCH
093b: 5b 04                      ; BRANCHFZ 4 (0940)
093d: 0e 2d                      ; CLITERAL 45
093f: 19                         ; EMIT
0940: 0c                         ; RET
;
0941: 18 49 f5 00 00             ; DICTP #P (f549)
0946: 0b 2f 09 00 00             ; CALL #P- (092f)
094b: 19                         ; EMIT
094c: 06                         ; DUP
094d: 2a                         ; NOT
094e: 5e 04                      ; BRANCHBZ 4 (094b)
0950: 05                         ; DROP
0951: 0c                         ; RET
;
0952: 18 3b f5 00 00             ; DICTP (.) (f53b)
0957: 0b c3 08 00 00             ; CALL <# (08c3)
095c: 0b 1a 09 00 00             ; CALL #S (091a)
0961: 0b 29 09 00 00             ; CALL #> (0929)
0966: 0b 41 09 00 00             ; CALL #P (0941)
096b: 0c                         ; RET
;
096c: 18 2f f5 00 00             ; DICTP . (f52f)
0971: 0b 52 09 00 00             ; CALL (.) (0952)
0976: 0e 20                      ; CLITERAL 32
0978: 19                         ; EMIT
0979: 0c                         ; RET
;
097a: 18 22 f5 00 00             ; DICTP .2 (f522)
097f: 0b c3 08 00 00             ; CALL <# (08c3)
0984: 0b f5 08 00 00             ; CALL # (08f5)
0989: 0b f5 08 00 00             ; CALL # (08f5)
098e: 0b 29 09 00 00             ; CALL #> (0929)
0993: 0b 41 09 00 00             ; CALL #P (0941)
0998: 0c                         ; RET
;
0999: 18 15 f5 00 00             ; DICTP .3 (f515)
099e: 0b c3 08 00 00             ; CALL <# (08c3)
09a3: 0b f5 08 00 00             ; CALL # (08f5)
09a8: 0b f5 08 00 00             ; CALL # (08f5)
09ad: 0b f5 08 00 00             ; CALL # (08f5)
09b2: 0b 29 09 00 00             ; CALL #> (0929)
09b7: 0b 41 09 00 00             ; CALL #P (0941)
09bc: 0c                         ; RET
;
09bd: 18 08 f5 00 00             ; DICTP .4 (f508)
09c2: 0b c3 08 00 00             ; CALL <# (08c3)
09c7: 0b f5 08 00 00             ; CALL # (08f5)
09cc: 0b f5 08 00 00             ; CALL # (08f5)
09d1: 0b f5 08 00 00             ; CALL # (08f5)
09d6: 0b f5 08 00 00             ; CALL # (08f5)
09db: 0b 29 09 00 00             ; CALL #> (0929)
09e0: 0b 41 09 00 00             ; CALL #P (0941)
09e5: 0c                         ; RET
;
09e6: 18 f9 f4 00 00             ; DICTP HEX. (f4f9)
09eb: 0b 5e 00 00 00             ; CALL BASE (005e)
09f0: 02                         ; FETCH
09f1: 04                         ; SWAP
09f2: 0b a3 03 00 00             ; CALL HEX (03a3)
09f7: 0b 52 09 00 00             ; CALL (.) (0952)
09fc: 0b 5e 00 00 00             ; CALL BASE (005e)
0a01: 03                         ; STORE
0a02: 0c                         ; RET
;
0a03: 18 e9 f4 00 00             ; DICTP HEX.2 (f4e9)
0a08: 0b 5e 00 00 00             ; CALL BASE (005e)
0a0d: 02                         ; FETCH
0a0e: 04                         ; SWAP
0a0f: 0b a3 03 00 00             ; CALL HEX (03a3)
0a14: 0b 7a 09 00 00             ; CALL .2 (097a)
0a19: 0b 5e 00 00 00             ; CALL BASE (005e)
0a1e: 03                         ; STORE
0a1f: 0c                         ; RET
;
0a20: 18 d9 f4 00 00             ; DICTP HEX.4 (f4d9)
0a25: 0b 5e 00 00 00             ; CALL BASE (005e)
0a2a: 02                         ; FETCH
0a2b: 04                         ; SWAP
0a2c: 0b a3 03 00 00             ; CALL HEX (03a3)
0a31: 0b bd 09 00 00             ; CALL .4 (09bd)
0a36: 0b 5e 00 00 00             ; CALL BASE (005e)
0a3b: 03                         ; STORE
0a3c: 0c                         ; RET
;
0a3d: 18 c6 f4 00 00             ; DICTP DECIMAL. (f4c6)
0a42: 0b 5e 00 00 00             ; CALL BASE (005e)
0a47: 02                         ; FETCH
0a48: 04                         ; SWAP
0a49: 0b b1 03 00 00             ; CALL DECIMAL (03b1)
0a4e: 0b 52 09 00 00             ; CALL (.) (0952)
0a53: 0b 5e 00 00 00             ; CALL BASE (005e)
0a58: 03                         ; STORE
0a59: 0c                         ; RET
;
0a5a: 18 b2 f4 00 00             ; DICTP DECIMAL.3 (f4b2)
0a5f: 0b 5e 00 00 00             ; CALL BASE (005e)
0a64: 02                         ; FETCH
0a65: 04                         ; SWAP
0a66: 0b b1 03 00 00             ; CALL DECIMAL (03b1)
0a6b: 0b 99 09 00 00             ; CALL .3 (0999)
0a70: 0b 5e 00 00 00             ; CALL BASE (005e)
0a75: 03                         ; STORE
0a76: 0c                         ; RET
;
0a77: 18 a0 f4 00 00             ; DICTP BINARY. (f4a0)
0a7c: 0b 5e 00 00 00             ; CALL BASE (005e)
0a81: 02                         ; FETCH
0a82: 04                         ; SWAP
0a83: 0b cd 03 00 00             ; CALL BINARY (03cd)
0a88: 0b 52 09 00 00             ; CALL (.) (0952)
0a8d: 0b 5e 00 00 00             ; CALL BASE (005e)
0a92: 03                         ; STORE
0a93: 0c                         ; RET
;
0a94: 18 92 f4 00 00             ; DICTP MIN (f492)
0a99: 1a                         ; OVER
0a9a: 1a                         ; OVER
0a9b: 17                         ; GT
0a9c: 5b 02                      ; BRANCHFZ 2 (0a9f)
0a9e: 04                         ; SWAP
0a9f: 05                         ; DROP
0aa0: 0c                         ; RET
;
0aa1: 18 84 f4 00 00             ; DICTP MAX (f484)
0aa6: 1a                         ; OVER
0aa7: 1a                         ; OVER
0aa8: 15                         ; LT
0aa9: 5b 02                      ; BRANCHFZ 2 (0aac)
0aab: 04                         ; SWAP
0aac: 05                         ; DROP
0aad: 0c                         ; RET
;
0aae: 18 77 f4 00 00             ; DICTP .S (f477)
0ab3: 0e 20                      ; CLITERAL 32
0ab5: 19                         ; EMIT
0ab6: 26                         ; DEPTH
0ab7: 0e 00                      ; CLITERAL 0
0ab9: 15                         ; LT
0aba: 5b 1f                      ; BRANCHFZ 31 (0ada)
0abc: 07 10 53 74 61 63 6b 20 75 6e 64 65 72 66 6c 6f 77 21 00 ; SLITERAL (0abd) [Stack underflow!]
0acf: 0b 1c 06 00 00             ; CALL COUNT (061c)
0ad4: 0b 26 06 00 00             ; CALL TYPE (0626)
0ad9: fe                         ; RESET
0ada: 26                         ; DEPTH
0adb: 0e 00                      ; CLITERAL 0
0add: 16                         ; EQ
0ade: 5b 0b                      ; BRANCHFZ 11 (0aea)
0ae0: 0e 28                      ; CLITERAL 40
0ae2: 19                         ; EMIT
0ae3: 0e ed                      ; CLITERAL 237
0ae5: 19                         ; EMIT
0ae6: 0e 29                      ; CLITERAL 41
0ae8: 19                         ; EMIT
0ae9: 0c                         ; RET
0aea: 0e 28                      ; CLITERAL 40
0aec: 19                         ; EMIT
0aed: 0e 20                      ; CLITERAL 32
0aef: 19                         ; EMIT
0af0: 26                         ; DEPTH
0af1: 2e                         ; DEC
0af2: 21                         ; DTOR
0af3: 2b                         ; RFETCH
0af4: 25                         ; PICK
0af5: 0b 6c 09 00 00             ; CALL . (096c)
0afa: 2b                         ; RFETCH
0afb: 5b 06                      ; BRANCHFZ 6 (0b02)
0afd: 22                         ; RTOD
0afe: 2e                         ; DEC
0aff: 21                         ; DTOR
0b00: 5a 07                      ; BRANCHF 7 (0b08)
0b02: 22                         ; RTOD
0b03: 05                         ; DROP
0b04: 0e 29                      ; CLITERAL 41
0b06: 19                         ; EMIT
0b07: 0c                         ; RET
0b08: 5d 16                      ; BRANCHB 22 (0af3)
0b0a: 0c                         ; RET
;
0b0b: 18 63 f4 00 00             ; DICTP .(MEM_SZ) (f463)
0b10: 07 08 4d 65 6d 6f 72 79 3a 20 00 ; SLITERAL (0b11) [Memory: ]
0b1b: 0b 3c 06 00 00             ; CALL CT (063c)
0b20: 0b de 04 00 00             ; CALL MEM_SZ (04de)
0b25: 06                         ; DUP
0b26: 0b e6 09 00 00             ; CALL HEX. (09e6)
0b2b: 07 02 20 28 00             ; SLITERAL (0b2c) [ (]
0b30: 0b 3c 06 00 00             ; CALL CT (063c)
0b35: 0b 52 09 00 00             ; CALL (.) (0952)
0b3a: 07 01 29 00                ; SLITERAL (0b3b) [)]
0b3e: 0b 3c 06 00 00             ; CALL CT (063c)
0b43: 0c                         ; RET
;
0b44: 18 51 f4 00 00             ; DICTP .(HERE) (f451)
0b49: 07 06 48 45 52 45 3a 20 00 ; SLITERAL (0b4a) [HERE: ]
0b52: 0b 3c 06 00 00             ; CALL CT (063c)
0b57: 0b fd 00 00 00             ; CALL HERE (00fd)
0b5c: 06                         ; DUP
0b5d: 0b e6 09 00 00             ; CALL HEX. (09e6)
0b62: 07 02 20 28 00             ; SLITERAL (0b63) [ (]
0b67: 0b 3c 06 00 00             ; CALL CT (063c)
0b6c: 0b 52 09 00 00             ; CALL (.) (0952)
0b71: 07 01 29 00                ; SLITERAL (0b72) [)]
0b75: 0b 3c 06 00 00             ; CALL CT (063c)
0b7a: 0c                         ; RET
;
0b7b: 18 3f f4 00 00             ; DICTP .(LAST) (f43f)
0b80: 07 06 4c 41 53 54 3a 20 00 ; SLITERAL (0b81) [LAST: ]
0b89: 0b 3c 06 00 00             ; CALL CT (063c)
0b8e: 0b 09 01 00 00             ; CALL LAST (0109)
0b93: 06                         ; DUP
0b94: 0b e6 09 00 00             ; CALL HEX. (09e6)
0b99: 07 02 20 28 00             ; SLITERAL (0b9a) [ (]
0b9e: 0b 3c 06 00 00             ; CALL CT (063c)
0ba3: 0b 52 09 00 00             ; CALL (.) (0952)
0ba8: 07 01 29 00                ; SLITERAL (0ba9) [)]
0bac: 0b 3c 06 00 00             ; CALL CT (063c)
0bb1: 0c                         ; RET
;
0bb2: 18 29 f4 00 00             ; DICTP .WORD-SHORT (f429)
0bb7: 06                         ; DUP
0bb8: 0b 2f 07 00 00             ; CALL DICT>NAME (072f)
0bbd: 0b 3c 06 00 00             ; CALL CT (063c)
0bc2: 0e 20                      ; CLITERAL 32
0bc4: 19                         ; EMIT
0bc5: 02                         ; FETCH
0bc6: 0c                         ; RET
;
0bc7: 18 19 f4 00 00             ; DICTP WORDS (f419)
0bcc: 0b 09 01 00 00             ; CALL LAST (0109)
0bd1: 06                         ; DUP
0bd2: 02                         ; FETCH
0bd3: 2a                         ; NOT
0bd4: 5b 09                      ; BRANCHFZ 9 (0bde)
0bd6: 05                         ; DROP
0bd7: 0e 0d                      ; CLITERAL 13
0bd9: 19                         ; EMIT
0bda: 0e 0a                      ; CLITERAL 10
0bdc: 19                         ; EMIT
0bdd: 0c                         ; RET
0bde: 0b b2 0b 00 00             ; CALL .WORD-SHORT (0bb2)
0be3: 5d 13                      ; BRANCHB 19 (0bd1)
0be5: 0c                         ; RET
;
0be6: 18 04 f4 00 00             ; DICTP .WORD-LONG (f404)
0beb: 06                         ; DUP
0bec: 0b e6 09 00 00             ; CALL HEX. (09e6)
0bf1: 0e 3a                      ; CLITERAL 58
0bf3: 19                         ; EMIT
0bf4: 0e 20                      ; CLITERAL 32
0bf6: 19                         ; EMIT
0bf7: 06                         ; DUP
0bf8: 0b 2f 07 00 00             ; CALL DICT>NAME (072f)
0bfd: 0b 3c 06 00 00             ; CALL CT (063c)
0c02: 0e 20                      ; CLITERAL 32
0c04: 19                         ; EMIT
0c05: 06                         ; DUP
0c06: 0b 63 07 00 00             ; CALL DICT.GetXT (0763)
0c0b: 0e 28                      ; CLITERAL 40
0c0d: 19                         ; EMIT
0c0e: 0b 20 0a 00 00             ; CALL HEX.4 (0a20)
0c13: 0e 29                      ; CLITERAL 41
0c15: 19                         ; EMIT
0c16: 06                         ; DUP
0c17: 0b 23 07 00 00             ; CALL DICT>FLAGS (0723)
0c1c: 0f                         ; CFETCH
0c1d: 06                         ; DUP
0c1e: 07 09 2c 20 46 6c 61 67 73 3a 20 00 ; SLITERAL (0c1f) [, Flags: ]
0c2a: 0b 3c 06 00 00             ; CALL CT (063c)
0c2f: 0b 03 0a 00 00             ; CALL HEX.2 (0a03)
0c34: 06                         ; DUP
0c35: 0b a4 07 00 00             ; CALL FLAGS.ISINLINE? (07a4)
0c3a: 5b 12                      ; BRANCHFZ 18 (0c4d)
0c3c: 07 09 20 28 49 4e 4c 49 4e 45 29 00 ; SLITERAL (0c3d) [ (INLINE)]
0c48: 0b 3c 06 00 00             ; CALL CT (063c)
0c4d: 0b 9b 07 00 00             ; CALL FLAGS.ISIMMEDIATE? (079b)
0c52: 5b 15                      ; BRANCHFZ 21 (0c68)
0c54: 07 0c 20 28 49 4d 4d 45 44 49 41 54 45 29 00 ; SLITERAL (0c55) [ (IMMEDIATE)]
0c63: 0b 3c 06 00 00             ; CALL CT (063c)
0c68: 0e 0d                      ; CLITERAL 13
0c6a: 19                         ; EMIT
0c6b: 0e 0a                      ; CLITERAL 10
0c6d: 19                         ; EMIT
0c6e: 02                         ; FETCH
0c6f: 0c                         ; RET
;
0c70: 18 f3 f3 00 00             ; DICTP WORDSV (f3f3)
0c75: 0b 7b 0b 00 00             ; CALL .(LAST) (0b7b)
0c7a: 0e 0d                      ; CLITERAL 13
0c7c: 19                         ; EMIT
0c7d: 0e 0a                      ; CLITERAL 10
0c7f: 19                         ; EMIT
0c80: 0b 09 01 00 00             ; CALL LAST (0109)
0c85: 06                         ; DUP
0c86: 02                         ; FETCH
0c87: 2a                         ; NOT
0c88: 5b 09                      ; BRANCHFZ 9 (0c92)
0c8a: 05                         ; DROP
0c8b: 0e 0d                      ; CLITERAL 13
0c8d: 19                         ; EMIT
0c8e: 0e 0a                      ; CLITERAL 10
0c90: 19                         ; EMIT
0c91: 0c                         ; RET
0c92: 0b e6 0b 00 00             ; CALL .WORD-LONG (0be6)
0c97: 5d 13                      ; BRANCHB 19 (0c85)
0c99: 0c                         ; RET
;
0c9a: 18 df f3 00 00             ; DICTP NUM-WORDS (f3df)
0c9f: 0e 00                      ; CLITERAL 0
0ca1: 21                         ; DTOR
0ca2: 0b 09 01 00 00             ; CALL LAST (0109)
0ca7: 06                         ; DUP
0ca8: 02                         ; FETCH
0ca9: 2a                         ; NOT
0caa: 5b 0a                      ; BRANCHFZ 10 (0cb5)
0cac: 05                         ; DROP
0cad: 22                         ; RTOD
0cae: 0e 0d                      ; CLITERAL 13
0cb0: 19                         ; EMIT
0cb1: 0e 0a                      ; CLITERAL 10
0cb3: 19                         ; EMIT
0cb4: 0c                         ; RET
0cb5: 22                         ; RTOD
0cb6: 2c                         ; INC
0cb7: 21                         ; DTOR
0cb8: 02                         ; FETCH
0cb9: 5d 13                      ; BRANCHB 19 (0ca7)
0cbb: 0c                         ; RET
;
0cbc: 18 ce f3 00 00             ; DICTP .lastx (f3ce)
0cc1: 0e 0d                      ; CLITERAL 13
0cc3: 19                         ; EMIT
0cc4: 0e 0a                      ; CLITERAL 10
0cc6: 19                         ; EMIT
0cc7: 0b 09 01 00 00             ; CALL LAST (0109)
0ccc: 04                         ; SWAP
0ccd: 04                         ; SWAP
0cce: 0b e6 0b 00 00             ; CALL .WORD-LONG (0be6)
0cd3: 04                         ; SWAP
0cd4: 2e                         ; DEC
0cd5: 06                         ; DUP
0cd6: 5f 0a                      ; BRANCHBNZ 10 (0ccd)
0cd8: 05                         ; DROP
0cd9: 05                         ; DROP
0cda: 0c                         ; RET
;
0cdb: 18 bc f3 00 00             ; DICTP EXECUTE (f3bc)
0ce0: 22                         ; RTOD
0ce1: 05                         ; DROP
0ce2: 21                         ; DTOR
0ce3: 0c                         ; RET
;
0ce4: 18 a9 f3 00 00             ; DICTP find.ret (f3a9)
0ce9: 06                         ; DUP
0cea: 0f                         ; CFETCH
0ceb: 0e 0c                      ; CLITERAL 12
0ced: 16                         ; EQ
0cee: 5b 02                      ; BRANCHFZ 2 (0cf1)
0cf0: 0c                         ; RET
0cf1: 2c                         ; INC
0cf2: 5d 0a                      ; BRANCHB 10 (0ce9)
0cf4: 0c                         ; RET
;
0cf5: 18 96 f3 00 00             ; DICTP (inline) (f396)
0cfa: 1a                         ; OVER
0cfb: 1a                         ; OVER
0cfc: 15                         ; LT
0cfd: 5b 02                      ; BRANCHFZ 2 (0d00)
0cff: 04                         ; SWAP
0d00: 06                         ; DUP
0d01: 0f                         ; CFETCH
0d02: 0b 15 01 00 00             ; CALL C, (0115)
0d07: 2c                         ; INC
0d08: 1a                         ; OVER
0d09: 1a                         ; OVER
0d0a: 17                         ; GT
0d0b: 5f 0c                      ; BRANCHBNZ 12 (0d00)
0d0d: 05                         ; DROP
0d0e: 05                         ; DROP
0d0f: 0c                         ; RET
;
0d10: 18 86 f3 00 00             ; DICTP DOES> (f386)
0d15: 22                         ; RTOD
0d16: 06                         ; DUP
0d17: 0b e4 0c 00 00             ; CALL find.ret (0ce4)
0d1c: 06                         ; DUP
0d1d: 21                         ; DTOR
0d1e: 2c                         ; INC
0d1f: 0b f5 0c 00 00             ; CALL (inline) (0cf5)
0d24: 0c                         ; RET
;
0d25: 18 70 f3 00 00             ; DICTP Copy.INLINE (f370)
0d2a: 06                         ; DUP
0d2b: 0f                         ; CFETCH
0d2c: 0e 18                      ; CLITERAL 24
0d2e: 16                         ; EQ
0d2f: 5b 05                      ; BRANCHFZ 5 (0d35)
0d31: 2c                         ; INC
0d32: 0e 04                      ; CLITERAL 4
0d34: 11                         ; ADD
0d35: 06                         ; DUP
0d36: 0b e4 0c 00 00             ; CALL find.ret (0ce4)
0d3b: 0b f5 0c 00 00             ; CALL (inline) (0cf5)
0d40: 0c                         ; RET
;
0d41: 18 5f f3 00 00             ; DICTP strlen (f35f)
0d46: 0e 00                      ; CLITERAL 0
0d48: 04                         ; SWAP
0d49: 04                         ; SWAP
0d4a: 1a                         ; OVER
0d4b: 0f                         ; CFETCH
0d4c: 06                         ; DUP
0d4d: 5b 07                      ; BRANCHFZ 7 (0d55)
0d4f: 05                         ; DROP
0d50: 2c                         ; INC
0d51: 04                         ; SWAP
0d52: 2c                         ; INC
0d53: 0e 01                      ; CLITERAL 1
0d55: 5f 0d                      ; BRANCHBNZ 13 (0d49)
0d57: 04                         ; SWAP
0d58: 05                         ; DROP
0d59: 0c                         ; RET
;
0d5a: 18 4f f3 00 00             ; DICTP cstr, (f34f)
0d5f: 06                         ; DUP
0d60: 0f                         ; CFETCH
0d61: 1a                         ; OVER
0d62: 11                         ; ADD
0d63: 2c                         ; INC
0d64: 2c                         ; INC
0d65: 0b f5 0c 00 00             ; CALL (inline) (0cf5)
0d6a: 0c                         ; RET
;
0d6b: 18 3b f3 00 00             ; DICTP [COMPILE] (f33b)
0d70: 0b a4 07 00 00             ; CALL FLAGS.ISINLINE? (07a4)
0d75: 5b 08                      ; BRANCHFZ 8 (0d7e)
0d77: 0b 25 0d 00 00             ; CALL Copy.INLINE (0d25)
0d7c: 5a 0b                      ; BRANCHF 11 (0d88)
0d7e: 0b c7 01 00 00             ; CALL CALL (01c7)
0d83: 0b 2d 01 00 00             ; CALL , (012d)
0d88: 0c                         ; RET
;
0d89: 18 25 f3 00 00             ; DICTP executeWord (f325)
0d8e: 21                         ; DTOR
0d8f: 2b                         ; RFETCH
0d90: 0b cd 07 00 00             ; CALL findInDict (07cd)
0d95: 5b 29                      ; BRANCHFZ 41 (0dbf)
0d97: 22                         ; RTOD
0d98: 05                         ; DROP
0d99: 0b ef 03 00 00             ; CALL ?COMPILING (03ef)
0d9e: 5b 18                      ; BRANCHFZ 24 (0db7)
0da0: 06                         ; DUP
0da1: 0b 9b 07 00 00             ; CALL FLAGS.ISIMMEDIATE? (079b)
0da6: 5b 09                      ; BRANCHFZ 9 (0db0)
0da8: 05                         ; DROP
0da9: 0b db 0c 00 00             ; CALL EXECUTE (0cdb)
0dae: 5a 06                      ; BRANCHF 6 (0db5)
0db0: 0b 6b 0d 00 00             ; CALL [COMPILE] (0d6b)
0db5: 5a 07                      ; BRANCHF 7 (0dbd)
0db7: 05                         ; DROP
0db8: 0b db 0c 00 00             ; CALL EXECUTE (0cdb)
0dbd: 5a 46                      ; BRANCHF 70 (0e04)
0dbf: 05                         ; DROP
0dc0: 05                         ; DROP
0dc1: 2b                         ; RFETCH
0dc2: 0b 75 08 00 00             ; CALL isNumber? (0875)
0dc7: 5b 2e                      ; BRANCHFZ 46 (0df6)
0dc9: 0b ef 03 00 00             ; CALL ?COMPILING (03ef)
0dce: 5b 25                      ; BRANCHFZ 37 (0df4)
0dd0: 06                         ; DUP
0dd1: 0e 00                      ; CLITERAL 0
0dd3: 0e ff                      ; CLITERAL 255
0dd5: 0b c1 06 00 00             ; CALL BETWEEN (06c1)
0dda: 5b 0f                      ; BRANCHFZ 15 (0dea)
0ddc: 0e 0e                      ; CLITERAL 14
0dde: 0b 15 01 00 00             ; CALL C, (0115)
0de3: 0b 15 01 00 00             ; CALL C, (0115)
0de8: 5a 0b                      ; BRANCHF 11 (0df4)
0dea: 0b 63 01 00 00             ; CALL LITERAL (0163)
0def: 0b 2d 01 00 00             ; CALL , (012d)
0df4: 5a 0d                      ; BRANCHF 13 (0e02)
0df6: 05                         ; DROP
0df7: 07 02 3f 3f 00             ; SLITERAL (0df8) [??]
0dfc: 0b 3c 06 00 00             ; CALL CT (063c)
0e01: fe                         ; RESET
0e02: 22                         ; RTOD
0e03: 05                         ; DROP
0e04: 0c                         ; RET
;
0e05: 18 0e f3 00 00             ; DICTP executeInput (f30e)
0e0a: 0b 8b 00 00 00             ; CALL >IN (008b)
0e0f: 02                         ; FETCH
0e10: 0b d4 06 00 00             ; CALL skipWS (06d4)
0e15: 0b 8b 00 00 00             ; CALL >IN (008b)
0e1a: 03                         ; STORE
0e1b: 0b 8b 00 00 00             ; CALL >IN (008b)
0e20: 02                         ; FETCH
0e21: 0f                         ; CFETCH
0e22: 5b 19                      ; BRANCHFZ 25 (0e3c)
0e24: 0b 8b 00 00 00             ; CALL >IN (008b)
0e29: 02                         ; FETCH
0e2a: 0b ee 06 00 00             ; CALL getOneWord (06ee)
0e2f: 0b 8b 00 00 00             ; CALL >IN (008b)
0e34: 03                         ; STORE
0e35: 0b 89 0d 00 00             ; CALL executeWord (0d89)
0e3a: 5a 02                      ; BRANCHF 2 (0e3d)
0e3c: 0c                         ; RET
0e3d: 5d 34                      ; BRANCHB 52 (0e0a)
0e3f: 0c                         ; RET
;
0e40: 18 00 f3 00 00             ; DICTP Pad (f300)
0e45: 0b 09 01 00 00             ; CALL LAST (0109)
0e4a: 0e c8                      ; CLITERAL 200
0e4c: 12                         ; SUB
0e4d: 06                         ; DUP
0e4e: 0b fd 00 00 00             ; CALL HERE (00fd)
0e53: 15                         ; LT
0e54: 5b 13                      ; BRANCHFZ 19 (0e68)
0e56: 07 0e 4f 75 74 20 6f 66 20 4d 65 6d 6f 72 79 21 00 ; SLITERAL (0e57) [Out of Memory!]
0e67: fe                         ; RESET
0e68: 0c                         ; RET
;
0e69: 18 ee f2 00 00             ; DICTP getLine (f2ee)
0e6e: 0e 00                      ; CLITERAL 0
0e70: 0b 40 0e 00 00             ; CALL Pad (0e40)
0e75: 06                         ; DUP
0e76: 2c                         ; INC
0e77: 0b 8b 00 00 00             ; CALL >IN (008b)
0e7c: 03                         ; STORE
0e7d: 10                         ; CSTORE
0e7e: 0e 00                      ; CLITERAL 0
0e80: 0b 8b 00 00 00             ; CALL >IN (008b)
0e85: 02                         ; FETCH
0e86: 10                         ; CSTORE
0e87: 27                         ; GETCH
0e88: 06                         ; DUP
0e89: 0e 0d                      ; CLITERAL 13
0e8b: 16                         ; EQ
0e8c: 5b 0b                      ; BRANCHFZ 11 (0e98)
0e8e: 05                         ; DROP
0e8f: 0b 40 0e 00 00             ; CALL Pad (0e40)
0e94: 0e 20                      ; CLITERAL 32
0e96: 19                         ; EMIT
0e97: 0c                         ; RET
0e98: 06                         ; DUP
0e99: 0e 09                      ; CLITERAL 9
0e9b: 16                         ; EQ
0e9c: 5b 04                      ; BRANCHFZ 4 (0ea1)
0e9e: 05                         ; DROP
0e9f: 0e 20                      ; CLITERAL 32
0ea1: 06                         ; DUP
0ea2: 0e 03                      ; CLITERAL 3
0ea4: 16                         ; EQ
0ea5: 5b 02                      ; BRANCHFZ 2 (0ea8)
0ea7: ff                         ; BYE
0ea8: 06                         ; DUP
0ea9: 0e 08                      ; CLITERAL 8
0eab: 16                         ; EQ
0eac: 5b 2b                      ; BRANCHFZ 43 (0ed8)
0eae: 0b 40 0e 00 00             ; CALL Pad (0e40)
0eb3: 0f                         ; CFETCH
0eb4: 0e 00                      ; CLITERAL 0
0eb6: 17                         ; GT
0eb7: 5b 1d                      ; BRANCHFZ 29 (0ed5)
0eb9: 0b 40 0e 00 00             ; CALL Pad (0e40)
0ebe: 06                         ; DUP
0ebf: 0f                         ; CFETCH
0ec0: 2e                         ; DEC
0ec1: 04                         ; SWAP
0ec2: 10                         ; CSTORE
0ec3: 0b 8b 00 00 00             ; CALL >IN (008b)
0ec8: 06                         ; DUP
0ec9: 02                         ; FETCH
0eca: 2e                         ; DEC
0ecb: 04                         ; SWAP
0ecc: 03                         ; STORE
0ecd: 06                         ; DUP
0ece: 19                         ; EMIT
0ecf: 0e 20                      ; CLITERAL 32
0ed1: 19                         ; EMIT
0ed2: 19                         ; EMIT
0ed3: 5a 02                      ; BRANCHF 2 (0ed6)
0ed5: 05                         ; DROP
0ed6: 5a 2d                      ; BRANCHF 45 (0f04)
0ed8: 06                         ; DUP
0ed9: 0e 20                      ; CLITERAL 32
0edb: 0e 7f                      ; CLITERAL 127
0edd: 0b c1 06 00 00             ; CALL BETWEEN (06c1)
0ee2: 5b 20                      ; BRANCHFZ 32 (0f03)
0ee4: 06                         ; DUP
0ee5: 19                         ; EMIT
0ee6: 0b 8b 00 00 00             ; CALL >IN (008b)
0eeb: 02                         ; FETCH
0eec: 10                         ; CSTORE
0eed: 0b 8b 00 00 00             ; CALL >IN (008b)
0ef2: 06                         ; DUP
0ef3: 02                         ; FETCH
0ef4: 2c                         ; INC
0ef5: 04                         ; SWAP
0ef6: 03                         ; STORE
0ef7: 0b 40 0e 00 00             ; CALL Pad (0e40)
0efc: 06                         ; DUP
0efd: 0f                         ; CFETCH
0efe: 2c                         ; INC
0eff: 04                         ; SWAP
0f00: 10                         ; CSTORE
0f01: 5a 02                      ; BRANCHF 2 (0f04)
0f03: 05                         ; DROP
0f04: 5d 87                      ; BRANCHB 135 (0e7e)
0f06: 0c                         ; RET
;
0f07: 18 db f2 00 00             ; DICTP strcpy2c (f2db)
0f0c: 06                         ; DUP
0f0d: 21                         ; DTOR
0f0e: 0e 00                      ; CLITERAL 0
0f10: 1a                         ; OVER
0f11: 10                         ; CSTORE
0f12: 2c                         ; INC
0f13: 04                         ; SWAP
0f14: 06                         ; DUP
0f15: 0f                         ; CFETCH
0f16: 06                         ; DUP
0f17: 5b 11                      ; BRANCHFZ 17 (0f29)
0f19: 0e 02                      ; CLITERAL 2
0f1b: 25                         ; PICK
0f1c: 10                         ; CSTORE
0f1d: 04                         ; SWAP
0f1e: 2c                         ; INC
0f1f: 04                         ; SWAP
0f20: 2c                         ; INC
0f21: 2b                         ; RFETCH
0f22: 06                         ; DUP
0f23: 0f                         ; CFETCH
0f24: 2c                         ; INC
0f25: 04                         ; SWAP
0f26: 10                         ; CSTORE
0f27: 5a 0a                      ; BRANCHF 10 (0f32)
0f29: 21                         ; DTOR
0f2a: 04                         ; SWAP
0f2b: 22                         ; RTOD
0f2c: 04                         ; SWAP
0f2d: 10                         ; CSTORE
0f2e: 05                         ; DROP
0f2f: 22                         ; RTOD
0f30: 05                         ; DROP
0f31: 0c                         ; RET
0f32: 5d 1f                      ; BRANCHB 31 (0f14)
0f34: 0c                         ; RET
;
0f35: 18 c5 f2 00 00             ; DICTP Define-Word (f2c5)
0f3a: 0b 09 01 00 00             ; CALL LAST (0109)
0f3f: 1a                         ; OVER
0f40: 0b 41 0d 00 00             ; CALL strlen (0d41)
0f45: 0e 02                      ; CLITERAL 2
0f47: 0e 04                      ; CLITERAL 4
0f49: 13                         ; MUL
0f4a: 0e 03                      ; CLITERAL 3
0f4c: 11                         ; ADD
0f4d: 11                         ; ADD
0f4e: 12                         ; SUB
0f4f: 06                         ; DUP
0f50: 21                         ; DTOR
0f51: 21                         ; DTOR
0f52: 0b 09 01 00 00             ; CALL LAST (0109)
0f57: 2b                         ; RFETCH
0f58: 03                         ; STORE
0f59: 22                         ; RTOD
0f5a: 0e 04                      ; CLITERAL 4
0f5c: 11                         ; ADD
0f5d: 21                         ; DTOR
0f5e: 0b fd 00 00 00             ; CALL HERE (00fd)
0f63: 2b                         ; RFETCH
0f64: 03                         ; STORE
0f65: 22                         ; RTOD
0f66: 0e 04                      ; CLITERAL 4
0f68: 11                         ; ADD
0f69: 21                         ; DTOR
0f6a: 0e 00                      ; CLITERAL 0
0f6c: 2b                         ; RFETCH
0f6d: 10                         ; CSTORE
0f6e: 22                         ; RTOD
0f6f: 2c                         ; INC
0f70: 21                         ; DTOR
0f71: 22                         ; RTOD
0f72: 0b 07 0f 00 00             ; CALL strcpy2c (0f07)
0f77: 22                         ; RTOD
0f78: 0b 4f 00 00 00             ; CALL (LAST) (004f)
0f7d: 03                         ; STORE
0f7e: 0c                         ; RET
;
0f7f: 18 af f2 00 00             ; DICTP CREATE-NAME (f2af)
0f84: 0b 8b 00 00 00             ; CALL >IN (008b)
0f89: 02                         ; FETCH
0f8a: 0b d4 06 00 00             ; CALL skipWS (06d4)
0f8f: 0b 8b 00 00 00             ; CALL >IN (008b)
0f94: 03                         ; STORE
0f95: 0b 8b 00 00 00             ; CALL >IN (008b)
0f9a: 02                         ; FETCH
0f9b: 0f                         ; CFETCH
0f9c: 5b 30                      ; BRANCHFZ 48 (0fcd)
0f9e: 0b 8b 00 00 00             ; CALL >IN (008b)
0fa3: 02                         ; FETCH
0fa4: 0b ee 06 00 00             ; CALL getOneWord (06ee)
0fa9: 0b 8b 00 00 00             ; CALL >IN (008b)
0fae: 03                         ; STORE
0faf: 06                         ; DUP
0fb0: 0f                         ; CFETCH
0fb1: 5b 19                      ; BRANCHFZ 25 (0fcb)
0fb3: 0b 35 0f 00 00             ; CALL Define-Word (0f35)
0fb8: 0e 18                      ; CLITERAL 24
0fba: 0b 15 01 00 00             ; CALL C, (0115)
0fbf: 0b 09 01 00 00             ; CALL LAST (0109)
0fc4: 0b 2d 01 00 00             ; CALL , (012d)
0fc9: 5a 03                      ; BRANCHF 3 (0fcd)
0fcb: 05                         ; DROP
0fcc: fe                         ; RESET
0fcd: 0c                         ; RET
;
0fce: 18 a3 f2 00 00             ; DICTP : (f2a3)
0fd3: 0b 7f 0f 00 00             ; CALL CREATE-NAME (0f7f)
0fd8: 0b 6d 00 00 00             ; CALL STATE (006d)
0fdd: 0b db 03 00 00             ; CALL ON (03db)
0fe2: 0c                         ; RET
;
0fe3: 18 91 f2 00 00             ; DICTP :NONAME (f291)
0fe8: 0b fd 00 00 00             ; CALL HERE (00fd)
0fed: 0b 6d 00 00 00             ; CALL STATE (006d)
0ff2: 0b db 03 00 00             ; CALL ON (03db)
0ff7: 0c                         ; RET
;
0ff8: 18 85 f2 00 00             ; DICTP ; (f285)
0ffd: 0b d4 01 00 00             ; CALL RET (01d4)
1002: 0b 6d 00 00 00             ; CALL STATE (006d)
1007: 0b e5 03 00 00             ; CALL OFF (03e5)
100c: 0c                         ; RET
;
100d: 18 70 f2 00 00             ; DICTP ForgetLast (f270)
1012: 0b 09 01 00 00             ; CALL LAST (0109)
1017: 0e 04                      ; CLITERAL 4
1019: 11                         ; ADD
101a: 02                         ; FETCH
101b: 0b 40 00 00 00             ; CALL (HERE) (0040)
1020: 03                         ; STORE
1021: 0b 09 01 00 00             ; CALL LAST (0109)
1026: 02                         ; FETCH
1027: 0b 4f 00 00 00             ; CALL (LAST) (004f)
102c: 03                         ; STORE
102d: 0c                         ; RET
;
102e: 18 5b f2 00 00             ; DICTP resetState (f25b)
1033: 0b ef 03 00 00             ; CALL ?COMPILING (03ef)
1038: 5b 06                      ; BRANCHFZ 6 (103f)
103a: 0b 0d 10 00 00             ; CALL ForgetLast (100d)
103f: 0b 6d 00 00 00             ; CALL STATE (006d)
1044: 0b e5 03 00 00             ; CALL OFF (03e5)
1049: 0b b1 03 00 00             ; CALL DECIMAL (03b1)
104e: 0b b8 00 00 00             ; CALL INPUT-FP (00b8)
1053: 02                         ; FETCH
1054: 0b 1d 05 00 00             ; CALL ?DUP (051d)
1059: 5b 0a                      ; BRANCHFZ 10 (1064)
105b: 20                         ; FCLOSE
105c: 0e 00                      ; CLITERAL 0
105e: 0b b8 00 00 00             ; CALL INPUT-FP (00b8)
1063: 03                         ; STORE
1064: 0c                         ; RET
;
1065: 18 4b f2 00 00             ; DICTP ALLOT (f24b)
106a: 0b fd 00 00 00             ; CALL HERE (00fd)
106f: 11                         ; ADD
1070: 0b 40 00 00 00             ; CALL (HERE) (0040)
1075: 03                         ; STORE
1076: 0c                         ; RET
;
1077: 18 3f f2 00 00             ; DICTP ? (f23f)
107c: 02                         ; FETCH
107d: 0b 6c 09 00 00             ; CALL . (096c)
1082: 0c                         ; RET
;
1083: 18 32 f2 00 00             ; DICTP C? (f232)
1088: 0f                         ; CFETCH
1089: 0b 6c 09 00 00             ; CALL . (096c)
108e: 0c                         ; RET
;
108f: 18 23 f2 00 00             ; DICTP FREE (f223)
1094: 0b 09 01 00 00             ; CALL LAST (0109)
1099: 0b fd 00 00 00             ; CALL HERE (00fd)
109e: 12                         ; SUB
109f: 0c                         ; RET
;
10a0: 18 13 f2 00 00             ; DICTP .FREE (f213)
10a5: 0b 8f 10 00 00             ; CALL FREE (108f)
10aa: 0b 52 09 00 00             ; CALL (.) (0952)
10af: 07 0c 20 62 79 74 65 73 20 66 72 65 65 2e 00 ; SLITERAL (10b0) [ bytes free.]
10be: 0b 3c 06 00 00             ; CALL CT (063c)
10c3: 0c                         ; RET
;
10c4: 18 00 f2 00 00             ; DICTP mainLoop (f200)
10c9: 0b 2e 10 00 00             ; CALL resetState (102e)
10ce: 0b ef 03 00 00             ; CALL ?COMPILING (03ef)
10d3: 2a                         ; NOT
10d4: 5b 11                      ; BRANCHFZ 17 (10e6)
10d6: 07 03 20 4f 4b 00          ; SLITERAL (10d7) [ OK]
10dc: 0b 3c 06 00 00             ; CALL CT (063c)
10e1: 0b ae 0a 00 00             ; CALL .S (0aae)
10e6: 0e 0d                      ; CLITERAL 13
10e8: 19                         ; EMIT
10e9: 0e 0a                      ; CLITERAL 10
10eb: 19                         ; EMIT
10ec: 0b 69 0e 00 00             ; CALL getLine (0e69)
10f1: 2c                         ; INC
10f2: 0b 8b 00 00 00             ; CALL >IN (008b)
10f7: 03                         ; STORE
10f8: 0b 05 0e 00 00             ; CALL executeInput (0e05)
10fd: 0e 20                      ; CLITERAL 32
10ff: 19                         ; EMIT
1100: 5d 33                      ; BRANCHB 51 (10ce)
1102: 0c                         ; RET
;
1103: 18 f1 f1 00 00             ; DICTP main (f1f1)
1108: 0b 6d 00 00 00             ; CALL STATE (006d)
110d: 02                         ; FETCH
110e: 0e 63                      ; CLITERAL 99
1110: 16                         ; EQ
1111: 5b 19                      ; BRANCHFZ 25 (112b)
1113: 0b 6d 00 00 00             ; CALL STATE (006d)
1118: 0b e5 03 00 00             ; CALL OFF (03e5)
111d: 07 06 48 65 6c 6c 6f 2e 00 ; SLITERAL (111e) [Hello.]
1126: 0b 3c 06 00 00             ; CALL CT (063c)
112b: 0b c4 10 00 00             ; CALL mainLoop (10c4)
1130: 0c                         ; RET
;
1131: 18 da f1 00 00             ; DICTP file-getLine (f1da)
1136: 0b 40 0e 00 00             ; CALL Pad (0e40)
113b: 04                         ; SWAP
113c: 0e c8                      ; CLITERAL 200
113e: 04                         ; SWAP
113f: 1e                         ; FREADLINE
1140: 0b 40 0e 00 00             ; CALL Pad (0e40)
1145: 04                         ; SWAP
1146: 0c                         ; RET
;
1147: 18 cb f1 00 00             ; DICTP load (f1cb)
114c: 0e 00                      ; CLITERAL 0
114e: 0e 00                      ; CLITERAL 0
1150: 1c                         ; FOPEN
1151: 2a                         ; NOT
1152: 5b 1b                      ; BRANCHFZ 27 (116e)
1154: 07 11 43 61 6e 6e 6f 74 20 6f 70 65 6e 20 66 69 6c 65 2e 00 ; SLITERAL (1155) [Cannot open file.]
1168: 0b 3c 06 00 00             ; CALL CT (063c)
116d: 0c                         ; RET
116e: 0b b8 00 00 00             ; CALL INPUT-FP (00b8)
1173: 03                         ; STORE
1174: 0b b8 00 00 00             ; CALL INPUT-FP (00b8)
1179: 02                         ; FETCH
117a: 0b 31 11 00 00             ; CALL file-getLine (1131)
117f: 5b 0f                      ; BRANCHFZ 15 (118f)
1181: 2c                         ; INC
1182: 0b 8b 00 00 00             ; CALL >IN (008b)
1187: 03                         ; STORE
1188: 0b 05 0e 00 00             ; CALL executeInput (0e05)
118d: 5a 12                      ; BRANCHF 18 (11a0)
118f: 05                         ; DROP
1190: 0b b8 00 00 00             ; CALL INPUT-FP (00b8)
1195: 02                         ; FETCH
1196: 20                         ; FCLOSE
1197: 0e 00                      ; CLITERAL 0
1199: 0b b8 00 00 00             ; CALL INPUT-FP (00b8)
119e: 03                         ; STORE
119f: 0c                         ; RET
11a0: 5d 2d                      ; BRANCHB 45 (1174)
11a2: 0c                         ; RET
;
11a3: 18 b7 f1 00 00             ; DICTP STR.EMPTY (f1b7)
11a8: 0e 00                      ; CLITERAL 0
11aa: 1a                         ; OVER
11ab: 03                         ; STORE
11ac: 0c                         ; RET
;
11ad: 18 a5 f1 00 00             ; DICTP STR.LEN (f1a5)
11b2: 06                         ; DUP
11b3: 0f                         ; CFETCH
11b4: 0c                         ; RET
;
11b5: 18 92 f1 00 00             ; DICTP STR.CATC (f192)
11ba: 1a                         ; OVER
11bb: 06                         ; DUP
11bc: 06                         ; DUP
11bd: 0f                         ; CFETCH
11be: 2c                         ; INC
11bf: 04                         ; SWAP
11c0: 10                         ; CSTORE
11c1: 06                         ; DUP
11c2: 0f                         ; CFETCH
11c3: 11                         ; ADD
11c4: 0e 00                      ; CLITERAL 0
11c6: 1a                         ; OVER
11c7: 2c                         ; INC
11c8: 10                         ; CSTORE
11c9: 10                         ; CSTORE
11ca: 0c                         ; RET
;
11cb: 18 7b f1 00 00             ; DICTP STR.NULLTERM (f17b)
11d0: 06                         ; DUP
11d1: 06                         ; DUP
11d2: 0f                         ; CFETCH
11d3: 11                         ; ADD
11d4: 2c                         ; INC
11d5: 0e 00                      ; CLITERAL 0
11d7: 04                         ; SWAP
11d8: 10                         ; CSTORE
11d9: 0c                         ; RET
;
11da: 18 6e f1 00 00             ; DICTP I" (f16e)
11df: 0b fd 00 00 00             ; CALL HERE (00fd)
11e4: 0e 64                      ; CLITERAL 100
11e6: 11                         ; ADD
11e7: 0e 00                      ; CLITERAL 0
11e9: 1a                         ; OVER
11ea: 03                         ; STORE
11eb: 0b 8b 00 00 00             ; CALL >IN (008b)
11f0: 02                         ; FETCH
11f1: 0f                         ; CFETCH
11f2: 06                         ; DUP
11f3: 2a                         ; NOT
11f4: 5b 1d                      ; BRANCHFZ 29 (1212)
11f6: 07 10 6d 69 73 73 69 6e 67 20 63 6c 6f 73 69 6e 67 20 00 ; SLITERAL (11f7) [missing closing ]
1209: 0b 3c 06 00 00             ; CALL CT (063c)
120e: 0e 22                      ; CLITERAL 34
1210: 19                         ; EMIT
1211: fe                         ; RESET
1212: 0b 8b 00 00 00             ; CALL >IN (008b)
1217: 06                         ; DUP
1218: 02                         ; FETCH
1219: 2c                         ; INC
121a: 04                         ; SWAP
121b: 03                         ; STORE
121c: 06                         ; DUP
121d: 0e 22                      ; CLITERAL 34
121f: 16                         ; EQ
1220: 5b 03                      ; BRANCHFZ 3 (1224)
1222: 05                         ; DROP
1223: 0c                         ; RET
1224: 0b b5 11 00 00             ; CALL STR.CATC (11b5)
1229: 5d 3f                      ; BRANCHB 63 (11eb)
122b: 0c                         ; RET
;
122c: 18 62 f1 00 00             ; DICTP " (f162)
1231: 0b ef 03 00 00             ; CALL ?COMPILING (03ef)
1236: 2a                         ; NOT
1237: 5b 07                      ; BRANCHFZ 7 (123f)
1239: 0b da 11 00 00             ; CALL I" (11da)
123e: 0c                         ; RET
123f: 0b 93 01 00 00             ; CALL SLITERAL (0193)
1244: 0b fd 00 00 00             ; CALL HERE (00fd)
1249: 0e 00                      ; CLITERAL 0
124b: 0b 15 01 00 00             ; CALL C, (0115)
1250: 0b 8b 00 00 00             ; CALL >IN (008b)
1255: 02                         ; FETCH
1256: 0f                         ; CFETCH
1257: 06                         ; DUP
1258: 2a                         ; NOT
1259: 5b 29                      ; BRANCHFZ 41 (1283)
125b: 05                         ; DROP
125c: 2e                         ; DEC
125d: 0b 40 00 00 00             ; CALL (HERE) (0040)
1262: 03                         ; STORE
1263: 07 11 6d 69 73 73 69 6e 67 20 63 6c 6f 73 69 6e 67 20 27 00 ; SLITERAL (1264) [missing closing ']
1277: 0b 3c 06 00 00             ; CALL CT (063c)
127c: 0e 22                      ; CLITERAL 34
127e: 19                         ; EMIT
127f: 0e 27                      ; CLITERAL 39
1281: 19                         ; EMIT
1282: fe                         ; RESET
1283: 0b 8b 00 00 00             ; CALL >IN (008b)
1288: 06                         ; DUP
1289: 02                         ; FETCH
128a: 2c                         ; INC
128b: 04                         ; SWAP
128c: 03                         ; STORE
128d: 06                         ; DUP
128e: 0e 22                      ; CLITERAL 34
1290: 16                         ; EQ
1291: 5b 14                      ; BRANCHFZ 20 (12a6)
1293: 05                         ; DROP
1294: 0b fd 00 00 00             ; CALL HERE (00fd)
1299: 0e 00                      ; CLITERAL 0
129b: 0b 15 01 00 00             ; CALL C, (0115)
12a0: 1a                         ; OVER
12a1: 12                         ; SUB
12a2: 2e                         ; DEC
12a3: 04                         ; SWAP
12a4: 10                         ; CSTORE
12a5: 0c                         ; RET
12a6: 0b 15 01 00 00             ; CALL C, (0115)
12ab: 5d 5c                      ; BRANCHB 92 (1250)
12ad: 0c                         ; RET
;
12ae: 18 55 f1 00 00             ; DICTP ll (f155)
12b3: 07 09 6c 6f 61 64 73 2e 34 74 68 00 ; SLITERAL (12b4) [loads.4th]
12bf: 0b 47 11 00 00             ; CALL load (1147)
12c4: 0c                         ; RET
;
12c5: 18 42 f1 00 00             ; DICTP sys-info (f142)
12ca: 0b 0b 0b 00 00             ; CALL .(MEM_SZ) (0b0b)
12cf: 0e 2c                      ; CLITERAL 44
12d1: 19                         ; EMIT
12d2: 0e 20                      ; CLITERAL 32
12d4: 19                         ; EMIT
12d5: 0b 44 0b 00 00             ; CALL .(HERE) (0b44)
12da: 0e 2c                      ; CLITERAL 44
12dc: 19                         ; EMIT
12dd: 0e 20                      ; CLITERAL 32
12df: 19                         ; EMIT
12e0: 0b 7b 0b 00 00             ; CALL .(LAST) (0b7b)
12e5: 0e 2c                      ; CLITERAL 44
12e7: 19                         ; EMIT
12e8: 0e 20                      ; CLITERAL 32
12ea: 19                         ; EMIT
12eb: 0b a0 10 00 00             ; CALL .FREE (10a0)
12f0: 0e 0d                      ; CLITERAL 13
12f2: 19                         ; EMIT
12f3: 0e 0a                      ; CLITERAL 10
12f5: 19                         ; EMIT
12f6: 0c                         ; RET
;
12f7: 18 2f f1 00 00             ; DICTP VARIABLE (f12f)
12fc: 0b 7f 0f 00 00             ; CALL CREATE-NAME (0f7f)
1301: 0b fd 00 00 00             ; CALL HERE (00fd)
1306: 0e 02                      ; CLITERAL 2
1308: 11                         ; ADD
1309: 0e 04                      ; CLITERAL 4
130b: 11                         ; ADD
130c: 0b 63 01 00 00             ; CALL LITERAL (0163)
1311: 0b 2d 01 00 00             ; CALL , (012d)
1316: 0b d4 01 00 00             ; CALL RET (01d4)
131b: 0e 00                      ; CLITERAL 0
131d: 0b 2d 01 00 00             ; CALL , (012d)
1322: 0c                         ; RET
;
; End of code, Dictionary:
;
f12f: 42 f1 00 00                ; VARIABLE - (next: f142 sys-info)
f133: f7 12 00 00 00             ; XT=12f7, flags=00
f138: 08 56 41 52 49 41 42 4c 45 00 ; 8, VARIABLE
;
f142: 55 f1 00 00                ; sys-info - (next: f155 ll)
f146: c5 12 00 00 00             ; XT=12c5, flags=00
f14b: 08 73 79 73 2d 69 6e 66 6f 00 ; 8, sys-info
;
f155: 62 f1 00 00                ; ll - (next: f162 ")
f159: ae 12 00 00 00             ; XT=12ae, flags=00
f15e: 02 6c 6c 00                ; 2, ll
;
f162: 6e f1 00 00                ; " - (next: f16e I")
f166: 2c 12 00 00 01             ; XT=122c, flags=01
f16b: 01 22 00                   ; 1, "
;
f16e: 7b f1 00 00                ; I" - (next: f17b STR.NULLTERM)
f172: da 11 00 00 00             ; XT=11da, flags=00
f177: 02 49 22 00                ; 2, I"
;
f17b: 92 f1 00 00                ; STR.NULLTERM - (next: f192 STR.CATC)
f17f: cb 11 00 00 00             ; XT=11cb, flags=00
f184: 0c 53 54 52 2e 4e 55 4c 4c 54 45 52 4d 00 ; 12, STR.NULLTERM
;
f192: a5 f1 00 00                ; STR.CATC - (next: f1a5 STR.LEN)
f196: b5 11 00 00 00             ; XT=11b5, flags=00
f19b: 08 53 54 52 2e 43 41 54 43 00 ; 8, STR.CATC
;
f1a5: b7 f1 00 00                ; STR.LEN - (next: f1b7 STR.EMPTY)
f1a9: ad 11 00 00 02             ; XT=11ad, flags=02
f1ae: 07 53 54 52 2e 4c 45 4e 00 ; 7, STR.LEN
;
f1b7: cb f1 00 00                ; STR.EMPTY - (next: f1cb load)
f1bb: a3 11 00 00 02             ; XT=11a3, flags=02
f1c0: 09 53 54 52 2e 45 4d 50 54 59 00 ; 9, STR.EMPTY
;
f1cb: da f1 00 00                ; load - (next: f1da file-getLine)
f1cf: 47 11 00 00 00             ; XT=1147, flags=00
f1d4: 04 6c 6f 61 64 00          ; 4, load
;
f1da: f1 f1 00 00                ; file-getLine - (next: f1f1 main)
f1de: 31 11 00 00 00             ; XT=1131, flags=00
f1e3: 0c 66 69 6c 65 2d 67 65 74 4c 69 6e 65 00 ; 12, file-getLine
;
f1f1: 00 f2 00 00                ; main - (next: f200 mainLoop)
f1f5: 03 11 00 00 00             ; XT=1103, flags=00
f1fa: 04 6d 61 69 6e 00          ; 4, main
;
f200: 13 f2 00 00                ; mainLoop - (next: f213 .FREE)
f204: c4 10 00 00 00             ; XT=10c4, flags=00
f209: 08 6d 61 69 6e 4c 6f 6f 70 00 ; 8, mainLoop
;
f213: 23 f2 00 00                ; .FREE - (next: f223 FREE)
f217: a0 10 00 00 00             ; XT=10a0, flags=00
f21c: 05 2e 46 52 45 45 00       ; 5, .FREE
;
f223: 32 f2 00 00                ; FREE - (next: f232 C?)
f227: 8f 10 00 00 00             ; XT=108f, flags=00
f22c: 04 46 52 45 45 00          ; 4, FREE
;
f232: 3f f2 00 00                ; C? - (next: f23f ?)
f236: 83 10 00 00 00             ; XT=1083, flags=00
f23b: 02 43 3f 00                ; 2, C?
;
f23f: 4b f2 00 00                ; ? - (next: f24b ALLOT)
f243: 77 10 00 00 00             ; XT=1077, flags=00
f248: 01 3f 00                   ; 1, ?
;
f24b: 5b f2 00 00                ; ALLOT - (next: f25b resetState)
f24f: 65 10 00 00 00             ; XT=1065, flags=00
f254: 05 41 4c 4c 4f 54 00       ; 5, ALLOT
;
f25b: 70 f2 00 00                ; resetState - (next: f270 ForgetLast)
f25f: 2e 10 00 00 00             ; XT=102e, flags=00
f264: 0a 72 65 73 65 74 53 74 61 74 65 00 ; 10, resetState
;
f270: 85 f2 00 00                ; ForgetLast - (next: f285 ;)
f274: 0d 10 00 00 00             ; XT=100d, flags=00
f279: 0a 46 6f 72 67 65 74 4c 61 73 74 00 ; 10, ForgetLast
;
f285: 91 f2 00 00                ; ; - (next: f291 :NONAME)
f289: f8 0f 00 00 01             ; XT=0ff8, flags=01
f28e: 01 3b 00                   ; 1, ;
;
f291: a3 f2 00 00                ; :NONAME - (next: f2a3 :)
f295: e3 0f 00 00 00             ; XT=0fe3, flags=00
f29a: 07 3a 4e 4f 4e 41 4d 45 00 ; 7, :NONAME
;
f2a3: af f2 00 00                ; : - (next: f2af CREATE-NAME)
f2a7: ce 0f 00 00 00             ; XT=0fce, flags=00
f2ac: 01 3a 00                   ; 1, :
;
f2af: c5 f2 00 00                ; CREATE-NAME - (next: f2c5 Define-Word)
f2b3: 7f 0f 00 00 00             ; XT=0f7f, flags=00
f2b8: 0b 43 52 45 41 54 45 2d 4e 41 4d 45 00 ; 11, CREATE-NAME
;
f2c5: db f2 00 00                ; Define-Word - (next: f2db strcpy2c)
f2c9: 35 0f 00 00 00             ; XT=0f35, flags=00
f2ce: 0b 44 65 66 69 6e 65 2d 57 6f 72 64 00 ; 11, Define-Word
;
f2db: ee f2 00 00                ; strcpy2c - (next: f2ee getLine)
f2df: 07 0f 00 00 00             ; XT=0f07, flags=00
f2e4: 08 73 74 72 63 70 79 32 63 00 ; 8, strcpy2c
;
f2ee: 00 f3 00 00                ; getLine - (next: f300 Pad)
f2f2: 69 0e 00 00 00             ; XT=0e69, flags=00
f2f7: 07 67 65 74 4c 69 6e 65 00 ; 7, getLine
;
f300: 0e f3 00 00                ; Pad - (next: f30e executeInput)
f304: 40 0e 00 00 00             ; XT=0e40, flags=00
f309: 03 50 61 64 00             ; 3, Pad
;
f30e: 25 f3 00 00                ; executeInput - (next: f325 executeWord)
f312: 05 0e 00 00 00             ; XT=0e05, flags=00
f317: 0c 65 78 65 63 75 74 65 49 6e 70 75 74 00 ; 12, executeInput
;
f325: 3b f3 00 00                ; executeWord - (next: f33b [COMPILE])
f329: 89 0d 00 00 00             ; XT=0d89, flags=00
f32e: 0b 65 78 65 63 75 74 65 57 6f 72 64 00 ; 11, executeWord
;
f33b: 4f f3 00 00                ; [COMPILE] - (next: f34f cstr,)
f33f: 6b 0d 00 00 00             ; XT=0d6b, flags=00
f344: 09 5b 43 4f 4d 50 49 4c 45 5d 00 ; 9, [COMPILE]
;
f34f: 5f f3 00 00                ; cstr, - (next: f35f strlen)
f353: 5a 0d 00 00 00             ; XT=0d5a, flags=00
f358: 05 63 73 74 72 2c 00       ; 5, cstr,
;
f35f: 70 f3 00 00                ; strlen - (next: f370 Copy.INLINE)
f363: 41 0d 00 00 00             ; XT=0d41, flags=00
f368: 06 73 74 72 6c 65 6e 00    ; 6, strlen
;
f370: 86 f3 00 00                ; Copy.INLINE - (next: f386 DOES>)
f374: 25 0d 00 00 00             ; XT=0d25, flags=00
f379: 0b 43 6f 70 79 2e 49 4e 4c 49 4e 45 00 ; 11, Copy.INLINE
;
f386: 96 f3 00 00                ; DOES> - (next: f396 (inline))
f38a: 10 0d 00 00 00             ; XT=0d10, flags=00
f38f: 05 44 4f 45 53 3e 00       ; 5, DOES>
;
f396: a9 f3 00 00                ; (inline) - (next: f3a9 find.ret)
f39a: f5 0c 00 00 00             ; XT=0cf5, flags=00
f39f: 08 28 69 6e 6c 69 6e 65 29 00 ; 8, (inline)
;
f3a9: bc f3 00 00                ; find.ret - (next: f3bc EXECUTE)
f3ad: e4 0c 00 00 00             ; XT=0ce4, flags=00
f3b2: 08 66 69 6e 64 2e 72 65 74 00 ; 8, find.ret
;
f3bc: ce f3 00 00                ; EXECUTE - (next: f3ce .lastx)
f3c0: db 0c 00 00 00             ; XT=0cdb, flags=00
f3c5: 07 45 58 45 43 55 54 45 00 ; 7, EXECUTE
;
f3ce: df f3 00 00                ; .lastx - (next: f3df NUM-WORDS)
f3d2: bc 0c 00 00 00             ; XT=0cbc, flags=00
f3d7: 06 2e 6c 61 73 74 78 00    ; 6, .lastx
;
f3df: f3 f3 00 00                ; NUM-WORDS - (next: f3f3 WORDSV)
f3e3: 9a 0c 00 00 00             ; XT=0c9a, flags=00
f3e8: 09 4e 55 4d 2d 57 4f 52 44 53 00 ; 9, NUM-WORDS
;
f3f3: 04 f4 00 00                ; WORDSV - (next: f404 .WORD-LONG)
f3f7: 70 0c 00 00 00             ; XT=0c70, flags=00
f3fc: 06 57 4f 52 44 53 56 00    ; 6, WORDSV
;
f404: 19 f4 00 00                ; .WORD-LONG - (next: f419 WORDS)
f408: e6 0b 00 00 00             ; XT=0be6, flags=00
f40d: 0a 2e 57 4f 52 44 2d 4c 4f 4e 47 00 ; 10, .WORD-LONG
;
f419: 29 f4 00 00                ; WORDS - (next: f429 .WORD-SHORT)
f41d: c7 0b 00 00 00             ; XT=0bc7, flags=00
f422: 05 57 4f 52 44 53 00       ; 5, WORDS
;
f429: 3f f4 00 00                ; .WORD-SHORT - (next: f43f .(LAST))
f42d: b2 0b 00 00 00             ; XT=0bb2, flags=00
f432: 0b 2e 57 4f 52 44 2d 53 48 4f 52 54 00 ; 11, .WORD-SHORT
;
f43f: 51 f4 00 00                ; .(LAST) - (next: f451 .(HERE))
f443: 7b 0b 00 00 00             ; XT=0b7b, flags=00
f448: 07 2e 28 4c 41 53 54 29 00 ; 7, .(LAST)
;
f451: 63 f4 00 00                ; .(HERE) - (next: f463 .(MEM_SZ))
f455: 44 0b 00 00 00             ; XT=0b44, flags=00
f45a: 07 2e 28 48 45 52 45 29 00 ; 7, .(HERE)
;
f463: 77 f4 00 00                ; .(MEM_SZ) - (next: f477 .S)
f467: 0b 0b 00 00 00             ; XT=0b0b, flags=00
f46c: 09 2e 28 4d 45 4d 5f 53 5a 29 00 ; 9, .(MEM_SZ)
;
f477: 84 f4 00 00                ; .S - (next: f484 MAX)
f47b: ae 0a 00 00 00             ; XT=0aae, flags=00
f480: 02 2e 53 00                ; 2, .S
;
f484: 92 f4 00 00                ; MAX - (next: f492 MIN)
f488: a1 0a 00 00 00             ; XT=0aa1, flags=00
f48d: 03 4d 41 58 00             ; 3, MAX
;
f492: a0 f4 00 00                ; MIN - (next: f4a0 BINARY.)
f496: 94 0a 00 00 00             ; XT=0a94, flags=00
f49b: 03 4d 49 4e 00             ; 3, MIN
;
f4a0: b2 f4 00 00                ; BINARY. - (next: f4b2 DECIMAL.3)
f4a4: 77 0a 00 00 00             ; XT=0a77, flags=00
f4a9: 07 42 49 4e 41 52 59 2e 00 ; 7, BINARY.
;
f4b2: c6 f4 00 00                ; DECIMAL.3 - (next: f4c6 DECIMAL.)
f4b6: 5a 0a 00 00 00             ; XT=0a5a, flags=00
f4bb: 09 44 45 43 49 4d 41 4c 2e 33 00 ; 9, DECIMAL.3
;
f4c6: d9 f4 00 00                ; DECIMAL. - (next: f4d9 HEX.4)
f4ca: 3d 0a 00 00 00             ; XT=0a3d, flags=00
f4cf: 08 44 45 43 49 4d 41 4c 2e 00 ; 8, DECIMAL.
;
f4d9: e9 f4 00 00                ; HEX.4 - (next: f4e9 HEX.2)
f4dd: 20 0a 00 00 00             ; XT=0a20, flags=00
f4e2: 05 48 45 58 2e 34 00       ; 5, HEX.4
;
f4e9: f9 f4 00 00                ; HEX.2 - (next: f4f9 HEX.)
f4ed: 03 0a 00 00 00             ; XT=0a03, flags=00
f4f2: 05 48 45 58 2e 32 00       ; 5, HEX.2
;
f4f9: 08 f5 00 00                ; HEX. - (next: f508 .4)
f4fd: e6 09 00 00 00             ; XT=09e6, flags=00
f502: 04 48 45 58 2e 00          ; 4, HEX.
;
f508: 15 f5 00 00                ; .4 - (next: f515 .3)
f50c: bd 09 00 00 00             ; XT=09bd, flags=00
f511: 02 2e 34 00                ; 2, .4
;
f515: 22 f5 00 00                ; .3 - (next: f522 .2)
f519: 99 09 00 00 00             ; XT=0999, flags=00
f51e: 02 2e 33 00                ; 2, .3
;
f522: 2f f5 00 00                ; .2 - (next: f52f .)
f526: 7a 09 00 00 00             ; XT=097a, flags=00
f52b: 02 2e 32 00                ; 2, .2
;
f52f: 3b f5 00 00                ; . - (next: f53b (.))
f533: 6c 09 00 00 00             ; XT=096c, flags=00
f538: 01 2e 00                   ; 1, .
;
f53b: 49 f5 00 00                ; (.) - (next: f549 #P)
f53f: 52 09 00 00 00             ; XT=0952, flags=00
f544: 03 28 2e 29 00             ; 3, (.)
;
f549: 56 f5 00 00                ; #P - (next: f556 #P-)
f54d: 41 09 00 00 00             ; XT=0941, flags=00
f552: 02 23 50 00                ; 2, #P
;
f556: 64 f5 00 00                ; #P- - (next: f564 #>)
f55a: 2f 09 00 00 00             ; XT=092f, flags=00
f55f: 03 23 50 2d 00             ; 3, #P-
;
f564: 71 f5 00 00                ; #> - (next: f571 #S)
f568: 29 09 00 00 00             ; XT=0929, flags=00
f56d: 02 23 3e 00                ; 2, #>
;
f571: 7e f5 00 00                ; #S - (next: f57e #)
f575: 1a 09 00 00 00             ; XT=091a, flags=00
f57a: 02 23 53 00                ; 2, #S
;
f57e: 8a f5 00 00                ; # - (next: f58a <#)
f582: f5 08 00 00 00             ; XT=08f5, flags=00
f587: 01 23 00                   ; 1, #
;
f58a: 97 f5 00 00                ; <# - (next: f597 isNumber?)
f58e: c3 08 00 00 00             ; XT=08c3, flags=00
f593: 02 3c 23 00                ; 2, <#
;
f597: ab f5 00 00                ; isNumber? - (next: f5ab ABS)
f59b: 75 08 00 00 00             ; XT=0875, flags=00
f5a0: 09 69 73 4e 75 6d 62 65 72 3f 00 ; 9, isNumber?
;
f5ab: b9 f5 00 00                ; ABS - (next: f5b9 NEGATE)
f5af: 64 08 00 00 00             ; XT=0864, flags=00
f5b4: 03 41 42 53 00             ; 3, ABS
;
f5b9: ca f5 00 00                ; NEGATE - (next: f5ca isNumChar?)
f5bd: 5a 08 00 00 00             ; XT=085a, flags=00
f5c2: 06 4e 45 47 41 54 45 00    ; 6, NEGATE
;
f5ca: df f5 00 00                ; isNumChar? - (next: f5df isHEX?)
f5ce: 15 08 00 00 00             ; XT=0815, flags=00
f5d3: 0a 69 73 4e 75 6d 43 68 61 72 3f 00 ; 10, isNumChar?
;
f5df: f0 f5 00 00                ; isHEX? - (next: f5f0 findInDict)
f5e3: 06 08 00 00 00             ; XT=0806, flags=00
f5e8: 06 69 73 48 45 58 3f 00    ; 6, isHEX?
;
f5f0: 05 f6 00 00                ; findInDict - (next: f605 DICT.GetINLINE)
f5f4: cd 07 00 00 00             ; XT=07cd, flags=00
f5f9: 0a 66 69 6e 64 49 6e 44 69 63 74 00 ; 10, findInDict
;
f605: 1e f6 00 00                ; DICT.GetINLINE - (next: f61e DICT.GetIMMEDIATE)
f609: bd 07 00 00 00             ; XT=07bd, flags=00
f60e: 0e 44 49 43 54 2e 47 65 74 49 4e 4c 49 4e 45 00 ; 14, DICT.GetINLINE
;
f61e: 3a f6 00 00                ; DICT.GetIMMEDIATE - (next: f63a FLAGS.ISINLINE?)
f622: ad 07 00 00 00             ; XT=07ad, flags=00
f627: 11 44 49 43 54 2e 47 65 74 49 4d 4d 45 44 49 41 54 45 00 ; 17, DICT.GetIMMEDIATE
;
f63a: 54 f6 00 00                ; FLAGS.ISINLINE? - (next: f654 FLAGS.ISIMMEDIATE?)
f63e: a4 07 00 00 00             ; XT=07a4, flags=00
f643: 0f 46 4c 41 47 53 2e 49 53 49 4e 4c 49 4e 45 3f 00 ; 15, FLAGS.ISINLINE?
;
f654: 71 f6 00 00                ; FLAGS.ISIMMEDIATE? - (next: f671 XT.GetDICTP)
f658: 9b 07 00 00 00             ; XT=079b, flags=00
f65d: 12 46 4c 41 47 53 2e 49 53 49 4d 4d 45 44 49 41 54 45 3f 00 ; 18, FLAGS.ISIMMEDIATE?
;
f671: 87 f6 00 00                ; XT.GetDICTP - (next: f687 DICTP>NAME)
f675: 88 07 00 00 00             ; XT=0788, flags=00
f67a: 0b 58 54 2e 47 65 74 44 49 43 54 50 00 ; 11, XT.GetDICTP
;
f687: 9c f6 00 00                ; DICTP>NAME - (next: f69c DICT.GetFLAGS)
f68b: 7b 07 00 00 00             ; XT=077b, flags=00
f690: 0a 44 49 43 54 50 3e 4e 41 4d 45 00 ; 10, DICTP>NAME
;
f69c: b4 f6 00 00                ; DICT.GetFLAGS - (next: f6b4 DICT.GetXT)
f6a0: 6f 07 00 00 00             ; XT=076f, flags=00
f6a5: 0d 44 49 43 54 2e 47 65 74 46 4c 41 47 53 00 ; 13, DICT.GetFLAGS
;
f6b4: c9 f6 00 00                ; DICT.GetXT - (next: f6c9 NAME>DICT)
f6b8: 63 07 00 00 00             ; XT=0763, flags=00
f6bd: 0a 44 49 43 54 2e 47 65 74 58 54 00 ; 10, DICT.GetXT
;
f6c9: dd f6 00 00                ; NAME>DICT - (next: f6dd FLAGS>DICT)
f6cd: 56 07 00 00 00             ; XT=0756, flags=00
f6d2: 09 4e 41 4d 45 3e 44 49 43 54 00 ; 9, NAME>DICT
;
f6dd: f2 f6 00 00                ; FLAGS>DICT - (next: f6f2 XT>DICT)
f6e1: 4a 07 00 00 00             ; XT=074a, flags=00
f6e6: 0a 46 4c 41 47 53 3e 44 49 43 54 00 ; 10, FLAGS>DICT
;
f6f2: 04 f7 00 00                ; XT>DICT - (next: f704 NEXT>DICT)
f6f6: 41 07 00 00 00             ; XT=0741, flags=00
f6fb: 07 58 54 3e 44 49 43 54 00 ; 7, XT>DICT
;
f704: 18 f7 00 00                ; NEXT>DICT - (next: f718 DICT>NAME)
f708: 3b 07 00 00 00             ; XT=073b, flags=00
f70d: 09 4e 45 58 54 3e 44 49 43 54 00 ; 9, NEXT>DICT
;
f718: 2c f7 00 00                ; DICT>NAME - (next: f72c DICT>FLAGS)
f71c: 2f 07 00 00 00             ; XT=072f, flags=00
f721: 09 44 49 43 54 3e 4e 41 4d 45 00 ; 9, DICT>NAME
;
f72c: 41 f7 00 00                ; DICT>FLAGS - (next: f741 DICT>XT)
f730: 23 07 00 00 00             ; XT=0723, flags=00
f735: 0a 44 49 43 54 3e 46 4c 41 47 53 00 ; 10, DICT>FLAGS
;
f741: 53 f7 00 00                ; DICT>XT - (next: f753 DICT>NEXT)
f745: 1a 07 00 00 00             ; XT=071a, flags=00
f74a: 07 44 49 43 54 3e 58 54 00 ; 7, DICT>XT
;
f753: 67 f7 00 00                ; DICT>NEXT - (next: f767 getOneWord)
f757: 14 07 00 00 00             ; XT=0714, flags=00
f75c: 09 44 49 43 54 3e 4e 45 58 54 00 ; 9, DICT>NEXT
;
f767: 7c f7 00 00                ; getOneWord - (next: f77c skipWS)
f76b: ee 06 00 00 00             ; XT=06ee, flags=00
f770: 0a 67 65 74 4f 6e 65 57 6f 72 64 00 ; 10, getOneWord
;
f77c: 8d f7 00 00                ; skipWS - (next: f78d BETWEEN)
f780: d4 06 00 00 00             ; XT=06d4, flags=00
f785: 06 73 6b 69 70 57 53 00    ; 6, skipWS
;
f78d: 9f f7 00 00                ; BETWEEN - (next: f79f CR)
f791: c1 06 00 00 00             ; XT=06c1, flags=00
f796: 07 42 45 54 57 45 45 4e 00 ; 7, BETWEEN
;
f79f: ac f7 00 00                ; CR - (next: f7ac CRLF)
f7a3: b5 06 00 00 02             ; XT=06b5, flags=02
f7a8: 02 43 52 00                ; 2, CR
;
f7ac: bb f7 00 00                ; CRLF - (next: f7bb BL)
f7b0: a9 06 00 00 02             ; XT=06a9, flags=02
f7b5: 04 43 52 4c 46 00          ; 4, CRLF
;
f7bb: c8 f7 00 00                ; BL - (next: f7c8 SPACE)
f7bf: a0 06 00 00 02             ; XT=06a0, flags=02
f7c4: 02 42 4c 00                ; 2, BL
;
f7c8: d8 f7 00 00                ; SPACE - (next: f7d8 ()
f7cc: 97 06 00 00 02             ; XT=0697, flags=02
f7d1: 05 53 50 41 43 45 00       ; 5, SPACE
;
f7d8: e4 f7 00 00                ; ( - (next: f7e4 \)
f7dc: 5b 06 00 00 01             ; XT=065b, flags=01
f7e1: 01 28 00                   ; 1, (
;
f7e4: f0 f7 00 00                ; \ - (next: f7f0 CT)
f7e8: 4c 06 00 00 01             ; XT=064c, flags=01
f7ed: 01 5c 00                   ; 1, \
;
f7f0: fd f7 00 00                ; CT - (next: f7fd TYPE)
f7f4: 3c 06 00 00 00             ; XT=063c, flags=00
f7f9: 02 43 54 00                ; 2, CT
;
f7fd: 0c f8 00 00                ; TYPE - (next: f80c COUNT)
f801: 26 06 00 00 00             ; XT=0626, flags=00
f806: 04 54 59 50 45 00          ; 4, TYPE
;
f80c: 1c f8 00 00                ; COUNT - (next: f81c FALSE)
f810: 1c 06 00 00 00             ; XT=061c, flags=00
f815: 05 43 4f 55 4e 54 00       ; 5, COUNT
;
f81c: 2c f8 00 00                ; FALSE - (next: f82c TRUE)
f820: 14 06 00 00 02             ; XT=0614, flags=02
f825: 05 46 41 4c 53 45 00       ; 5, FALSE
;
f82c: 3b f8 00 00                ; TRUE - (next: f83b >=)
f830: 09 06 00 00 02             ; XT=0609, flags=02
f835: 04 54 52 55 45 00          ; 4, TRUE
;
f83b: 48 f8 00 00                ; >= - (next: f848 <=)
f83f: 01 06 00 00 02             ; XT=0601, flags=02
f844: 02 3e 3d 00                ; 2, >=
;
f848: 55 f8 00 00                ; <= - (next: f855 <>)
f84c: f9 05 00 00 02             ; XT=05f9, flags=02
f851: 02 3c 3d 00                ; 2, <=
;
f855: 62 f8 00 00                ; <> - (next: f862 0=)
f859: f1 05 00 00 02             ; XT=05f1, flags=02
f85e: 02 3c 3e 00                ; 2, <>
;
f862: 6f f8 00 00                ; 0= - (next: f86f C--)
f866: ea 05 00 00 02             ; XT=05ea, flags=02
f86b: 02 30 3d 00                ; 2, 0=
;
f86f: 7d f8 00 00                ; C-- - (next: f87d C++)
f873: df 05 00 00 02             ; XT=05df, flags=02
f878: 03 43 2d 2d 00             ; 3, C--
;
f87d: 8b f8 00 00                ; C++ - (next: f88b --)
f881: d4 05 00 00 02             ; XT=05d4, flags=02
f886: 03 43 2b 2b 00             ; 3, C++
;
f88b: 98 f8 00 00                ; -- - (next: f898 ++)
f88f: c9 05 00 00 02             ; XT=05c9, flags=02
f894: 02 2d 2d 00                ; 2, --
;
f898: a5 f8 00 00                ; ++ - (next: f8a5 -!)
f89c: be 05 00 00 02             ; XT=05be, flags=02
f8a1: 02 2b 2b 00                ; 2, ++
;
f8a5: b2 f8 00 00                ; -! - (next: f8b2 +!)
f8a9: b1 05 00 00 00             ; XT=05b1, flags=00
f8ae: 02 2d 21 00                ; 2, -!
;
f8b2: bf f8 00 00                ; +! - (next: f8bf -=)
f8b6: a5 05 00 00 00             ; XT=05a5, flags=00
f8bb: 02 2b 21 00                ; 2, +!
;
f8bf: cc f8 00 00                ; -= - (next: f8cc +=)
f8c3: 99 05 00 00 02             ; XT=0599, flags=02
f8c8: 02 2d 3d 00                ; 2, -=
;
f8cc: d9 f8 00 00                ; += - (next: f8d9 2/)
f8d0: 8e 05 00 00 02             ; XT=058e, flags=02
f8d5: 02 2b 3d 00                ; 2, +=
;
f8d9: e6 f8 00 00                ; 2/ - (next: f8e6 2*)
f8dd: 83 05 00 00 02             ; XT=0583, flags=02
f8e2: 02 32 2f 00                ; 2, 2/
;
f8e6: f3 f8 00 00                ; 2* - (next: f8f3 1-)
f8ea: 7a 05 00 00 02             ; XT=057a, flags=02
f8ef: 02 32 2a 00                ; 2, 2*
;
f8f3: 00 f9 00 00                ; 1- - (next: f900 1+)
f8f7: 73 05 00 00 02             ; XT=0573, flags=02
f8fc: 02 31 2d 00                ; 2, 1-
;
f900: 0d f9 00 00                ; 1+ - (next: f90d MOD)
f904: 6c 05 00 00 02             ; XT=056c, flags=02
f909: 02 31 2b 00                ; 2, 1+
;
f90d: 1b f9 00 00                ; MOD - (next: f91b /)
f911: 64 05 00 00 02             ; XT=0564, flags=02
f916: 03 4d 4f 44 00             ; 3, MOD
;
f91b: 27 f9 00 00                ; / - (next: f927 -ROT)
f91f: 5b 05 00 00 02             ; XT=055b, flags=02
f924: 01 2f 00                   ; 1, /
;
f927: 36 f9 00 00                ; -ROT - (next: f936 ROT)
f92b: 51 05 00 00 02             ; XT=0551, flags=02
f930: 04 2d 52 4f 54 00          ; 4, -ROT
;
f936: 44 f9 00 00                ; ROT - (next: f944 NIP)
f93a: 47 05 00 00 02             ; XT=0547, flags=02
f93f: 03 52 4f 54 00             ; 3, ROT
;
f944: 52 f9 00 00                ; NIP - (next: f952 TUCK)
f948: 3f 05 00 00 02             ; XT=053f, flags=02
f94d: 03 4e 49 50 00             ; 3, NIP
;
f952: 61 f9 00 00                ; TUCK - (next: f961 2DROP)
f956: 37 05 00 00 02             ; XT=0537, flags=02
f95b: 04 54 55 43 4b 00          ; 4, TUCK
;
f961: 71 f9 00 00                ; 2DROP - (next: f971 2DUP)
f965: 2f 05 00 00 02             ; XT=052f, flags=02
f96a: 05 32 44 52 4f 50 00       ; 5, 2DROP
;
f971: 80 f9 00 00                ; 2DUP - (next: f980 ?DUP)
f975: 27 05 00 00 02             ; XT=0527, flags=02
f97a: 04 32 44 55 50 00          ; 4, 2DUP
;
f980: 8f f9 00 00                ; ?DUP - (next: f98f RDROP)
f984: 1d 05 00 00 00             ; XT=051d, flags=00
f989: 04 3f 44 55 50 00          ; 4, ?DUP
;
f98f: 9f f9 00 00                ; RDROP - (next: f99f R@)
f993: 15 05 00 00 02             ; XT=0515, flags=02
f998: 05 52 44 52 4f 50 00       ; 5, RDROP
;
f99f: ac f9 00 00                ; R@ - (next: f9ac DEBUG-OFF)
f9a3: 0e 05 00 00 02             ; XT=050e, flags=02
f9a8: 02 52 40 00                ; 2, R@
;
f9ac: c0 f9 00 00                ; DEBUG-OFF - (next: f9c0 DEBUG-ON)
f9b0: 05 05 00 00 02             ; XT=0505, flags=02
f9b5: 09 44 45 42 55 47 2d 4f 46 46 00 ; 9, DEBUG-OFF
;
f9c0: d3 f9 00 00                ; DEBUG-ON - (next: f9d3 TRACE-OFF)
f9c4: fc 04 00 00 02             ; XT=04fc, flags=02
f9c9: 08 44 45 42 55 47 2d 4f 4e 00 ; 8, DEBUG-ON
;
f9d3: e7 f9 00 00                ; TRACE-OFF - (next: f9e7 TRACE-ON)
f9d7: f3 04 00 00 02             ; XT=04f3, flags=02
f9dc: 09 54 52 41 43 45 2d 4f 46 46 00 ; 9, TRACE-OFF
;
f9e7: fa f9 00 00                ; TRACE-ON - (next: f9fa MEM_SZ)
f9eb: ea 04 00 00 02             ; XT=04ea, flags=02
f9f0: 08 54 52 41 43 45 2d 4f 4e 00 ; 8, TRACE-ON
;
f9fa: 0b fa 00 00                ; MEM_SZ - (next: fa0b LEAVE)
f9fe: de 04 00 00 00             ; XT=04de, flags=00
fa03: 06 4d 45 4d 5f 53 5a 00    ; 6, MEM_SZ
;
fa0b: 1b fa 00 00                ; LEAVE - (next: fa1b UNTIL)
fa0f: cc 04 00 00 01             ; XT=04cc, flags=01
fa14: 05 4c 45 41 56 45 00       ; 5, LEAVE
;
fa1b: 2b fa 00 00                ; UNTIL - (next: fa2b WHILE)
fa1f: ae 04 00 00 01             ; XT=04ae, flags=01
fa24: 05 55 4e 54 49 4c 00       ; 5, UNTIL
;
fa2b: 3b fa 00 00                ; WHILE - (next: fa3b AGAIN)
fa2f: 90 04 00 00 01             ; XT=0490, flags=01
fa34: 05 57 48 49 4c 45 00       ; 5, WHILE
;
fa3b: 4b fa 00 00                ; AGAIN - (next: fa4b BEGIN)
fa3f: 72 04 00 00 01             ; XT=0472, flags=01
fa44: 05 41 47 41 49 4e 00       ; 5, AGAIN
;
fa4b: 5b fa 00 00                ; BEGIN - (next: fa5b THEN)
fa4f: 60 04 00 00 01             ; XT=0460, flags=01
fa54: 05 42 45 47 49 4e 00       ; 5, BEGIN
;
fa5b: 6a fa 00 00                ; THEN - (next: fa6a ELSE)
fa5f: 47 04 00 00 01             ; XT=0447, flags=01
fa64: 04 54 48 45 4e 00          ; 4, THEN
;
fa6a: 79 fa 00 00                ; ELSE - (next: fa79 IF)
fa6e: 1c 04 00 00 01             ; XT=041c, flags=01
fa73: 04 45 4c 53 45 00          ; 4, ELSE
;
fa79: 86 fa 00 00                ; IF - (next: fa86 ?COMPILING)
fa7d: fb 03 00 00 01             ; XT=03fb, flags=01
fa82: 02 49 46 00                ; 2, IF
;
fa86: 9b fa 00 00                ; ?COMPILING - (next: fa9b OFF)
fa8a: ef 03 00 00 00             ; XT=03ef, flags=00
fa8f: 0a 3f 43 4f 4d 50 49 4c 49 4e 47 00 ; 10, ?COMPILING
;
fa9b: a9 fa 00 00                ; OFF - (next: faa9 ON)
fa9f: e5 03 00 00 00             ; XT=03e5, flags=00
faa4: 03 4f 46 46 00             ; 3, OFF
;
faa9: b6 fa 00 00                ; ON - (next: fab6 BINARY)
faad: db 03 00 00 00             ; XT=03db, flags=00
fab2: 02 4f 4e 00                ; 2, ON
;
fab6: c7 fa 00 00                ; BINARY - (next: fac7 OCTAL)
faba: cd 03 00 00 00             ; XT=03cd, flags=00
fabf: 06 42 49 4e 41 52 59 00    ; 6, BINARY
;
fac7: d7 fa 00 00                ; OCTAL - (next: fad7 DECIMAL)
facb: bf 03 00 00 00             ; XT=03bf, flags=00
fad0: 05 4f 43 54 41 4c 00       ; 5, OCTAL
;
fad7: e9 fa 00 00                ; DECIMAL - (next: fae9 HEX)
fadb: b1 03 00 00 00             ; XT=03b1, flags=00
fae0: 07 44 45 43 49 4d 41 4c 00 ; 7, DECIMAL
;
fae9: f7 fa 00 00                ; HEX - (next: faf7 FLAG_INLINE)
faed: a3 03 00 00 00             ; XT=03a3, flags=00
faf2: 03 48 45 58 00             ; 3, HEX
;
faf7: 0d fb 00 00                ; FLAG_INLINE - (next: fb0d FLAG_IMMEDIATE)
fafb: 9b 03 00 00 02             ; XT=039b, flags=02
fb00: 0b 46 4c 41 47 5f 49 4e 4c 49 4e 45 00 ; 11, FLAG_INLINE
;
fb0d: 26 fb 00 00                ; FLAG_IMMEDIATE - (next: fb26 CELLS)
fb11: 93 03 00 00 02             ; XT=0393, flags=02
fb16: 0e 46 4c 41 47 5f 49 4d 4d 45 44 49 41 54 45 00 ; 14, FLAG_IMMEDIATE
;
fb26: 36 fb 00 00                ; CELLS - (next: fb36 IMMEDIATE)
fb2a: 8a 03 00 00 02             ; XT=038a, flags=02
fb2f: 05 43 45 4c 4c 53 00       ; 5, CELLS
;
fb36: 4a fb 00 00                ; IMMEDIATE - (next: fb4a INLINE)
fb3a: 72 03 00 00 00             ; XT=0372, flags=00
fb3f: 09 49 4d 4d 45 44 49 41 54 45 00 ; 9, IMMEDIATE
;
fb4a: 5b fb 00 00                ; INLINE - (next: fb5b BYE)
fb4e: 5a 03 00 00 00             ; XT=035a, flags=00
fb53: 06 49 4e 4c 49 4e 45 00    ; 6, INLINE
;
fb5b: 69 fb 00 00                ; BYE - (next: fb69 RESET)
fb5f: 53 03 00 00 02             ; XT=0353, flags=02
fb64: 03 42 59 45 00             ; 3, BYE
;
fb69: 79 fb 00 00                ; RESET - (next: fb79 BREAK)
fb6d: 4c 03 00 00 02             ; XT=034c, flags=02
fb72: 05 52 45 53 45 54 00       ; 5, RESET
;
fb79: 89 fb 00 00                ; BREAK - (next: fb89 NOP)
fb7d: 45 03 00 00 02             ; XT=0345, flags=02
fb82: 05 42 52 45 41 4b 00       ; 5, BREAK
;
fb89: 97 fb 00 00                ; NOP - (next: fb97 BRANCHBNZ)
fb8d: 3e 03 00 00 02             ; XT=033e, flags=02
fb92: 03 4e 4f 50 00             ; 3, NOP
;
fb97: ab fb 00 00                ; BRANCHBNZ - (next: fbab BRANCHBZ)
fb9b: 31 03 00 00 00             ; XT=0331, flags=00
fba0: 09 42 52 41 4e 43 48 42 4e 5a 00 ; 9, BRANCHBNZ
;
fbab: be fb 00 00                ; BRANCHBZ - (next: fbbe BRANCHB)
fbaf: 24 03 00 00 00             ; XT=0324, flags=00
fbb4: 08 42 52 41 4e 43 48 42 5a 00 ; 8, BRANCHBZ
;
fbbe: d0 fb 00 00                ; BRANCHB - (next: fbd0 BRANCHFNZ)
fbc2: 17 03 00 00 00             ; XT=0317, flags=00
fbc7: 07 42 52 41 4e 43 48 42 00 ; 7, BRANCHB
;
fbd0: e4 fb 00 00                ; BRANCHFNZ - (next: fbe4 BRANCHFZ)
fbd4: 0a 03 00 00 00             ; XT=030a, flags=00
fbd9: 09 42 52 41 4e 43 48 46 4e 5a 00 ; 9, BRANCHFNZ
;
fbe4: f7 fb 00 00                ; BRANCHFZ - (next: fbf7 BRANCHF)
fbe8: fd 02 00 00 00             ; XT=02fd, flags=00
fbed: 08 42 52 41 4e 43 48 46 5a 00 ; 8, BRANCHFZ
;
fbf7: 09 fc 00 00                ; BRANCHF - (next: fc09 >>)
fbfb: f0 02 00 00 00             ; XT=02f0, flags=00
fc00: 07 42 52 41 4e 43 48 46 00 ; 7, BRANCHF
;
fc09: 16 fc 00 00                ; >> - (next: fc16 <<)
fc0d: e9 02 00 00 02             ; XT=02e9, flags=02
fc12: 02 3e 3e 00                ; 2, >>
;
fc16: 23 fc 00 00                ; << - (next: fc23 GETTICK)
fc1a: e2 02 00 00 02             ; XT=02e2, flags=02
fc1f: 02 3c 3c 00                ; 2, <<
;
fc23: 35 fc 00 00                ; GETTICK - (next: fc35 DEC)
fc27: db 02 00 00 02             ; XT=02db, flags=02
fc2c: 07 47 45 54 54 49 43 4b 00 ; 7, GETTICK
;
fc35: 43 fc 00 00                ; DEC - (next: fc43 RDEPTH)
fc39: d4 02 00 00 02             ; XT=02d4, flags=02
fc3e: 03 44 45 43 00             ; 3, DEC
;
fc43: 54 fc 00 00                ; RDEPTH - (next: fc54 INC)
fc47: cd 02 00 00 02             ; XT=02cd, flags=02
fc4c: 06 52 44 45 50 54 48 00    ; 6, RDEPTH
;
fc54: 62 fc 00 00                ; INC - (next: fc62 RFETCH)
fc58: c6 02 00 00 02             ; XT=02c6, flags=02
fc5d: 03 49 4e 43 00             ; 3, INC
;
fc62: 73 fc 00 00                ; RFETCH - (next: fc73 NOT)
fc66: bf 02 00 00 02             ; XT=02bf, flags=02
fc6b: 06 52 46 45 54 43 48 00    ; 6, RFETCH
;
fc73: 81 fc 00 00                ; NOT - (next: fc81 /MOD)
fc77: b8 02 00 00 02             ; XT=02b8, flags=02
fc7c: 03 4e 4f 54 00             ; 3, NOT
;
fc81: 90 fc 00 00                ; /MOD - (next: fc90 COMPAREI)
fc85: b1 02 00 00 02             ; XT=02b1, flags=02
fc8a: 04 2f 4d 4f 44 00          ; 4, /MOD
;
fc90: a3 fc 00 00                ; COMPAREI - (next: fca3 GETCH)
fc94: aa 02 00 00 02             ; XT=02aa, flags=02
fc99: 08 43 4f 4d 50 41 52 45 49 00 ; 8, COMPAREI
;
fca3: b3 fc 00 00                ; GETCH - (next: fcb3 DEPTH)
fca7: a3 02 00 00 02             ; XT=02a3, flags=02
fcac: 05 47 45 54 43 48 00       ; 5, GETCH
;
fcb3: c3 fc 00 00                ; DEPTH - (next: fcc3 PICK)
fcb7: 9c 02 00 00 02             ; XT=029c, flags=02
fcbc: 05 44 45 50 54 48 00       ; 5, DEPTH
;
fcc3: d2 fc 00 00                ; PICK - (next: fcd2 AND)
fcc7: 95 02 00 00 02             ; XT=0295, flags=02
fccc: 04 50 49 43 4b 00          ; 4, PICK
;
fcd2: e0 fc 00 00                ; AND - (next: fce0 LOGLEVEL)
fcd6: 8e 02 00 00 02             ; XT=028e, flags=02
fcdb: 03 41 4e 44 00             ; 3, AND
;
fce0: f3 fc 00 00                ; LOGLEVEL - (next: fcf3 R>)
fce4: 87 02 00 00 02             ; XT=0287, flags=02
fce9: 08 4c 4f 47 4c 45 56 45 4c 00 ; 8, LOGLEVEL
;
fcf3: 00 fd 00 00                ; R> - (next: fd00 >R)
fcf7: 80 02 00 00 02             ; XT=0280, flags=02
fcfc: 02 52 3e 00                ; 2, R>
;
fd00: 0d fd 00 00                ; >R - (next: fd0d FCLOSE)
fd04: 79 02 00 00 02             ; XT=0279, flags=02
fd09: 02 3e 52 00                ; 2, >R
;
fd0d: 1e fd 00 00                ; FCLOSE - (next: fd1e FWRITE)
fd11: 72 02 00 00 02             ; XT=0272, flags=02
fd16: 06 46 43 4c 4f 53 45 00    ; 6, FCLOSE
;
fd1e: 2f fd 00 00                ; FWRITE - (next: fd2f FREADLINE)
fd22: 6b 02 00 00 02             ; XT=026b, flags=02
fd27: 06 46 57 52 49 54 45 00    ; 6, FWRITE
;
fd2f: 43 fd 00 00                ; FREADLINE - (next: fd43 FREAD)
fd33: 64 02 00 00 02             ; XT=0264, flags=02
fd38: 09 46 52 45 41 44 4c 49 4e 45 00 ; 9, FREADLINE
;
fd43: 53 fd 00 00                ; FREAD - (next: fd53 FOPEN)
fd47: 5d 02 00 00 02             ; XT=025d, flags=02
fd4c: 05 46 52 45 41 44 00       ; 5, FREAD
;
fd53: 63 fd 00 00                ; FOPEN - (next: fd63 COMPARE)
fd57: 56 02 00 00 02             ; XT=0256, flags=02
fd5c: 05 46 4f 50 45 4e 00       ; 5, FOPEN
;
fd63: 75 fd 00 00                ; COMPARE - (next: fd75 OVER)
fd67: 4f 02 00 00 02             ; XT=024f, flags=02
fd6c: 07 43 4f 4d 50 41 52 45 00 ; 7, COMPARE
;
fd75: 84 fd 00 00                ; OVER - (next: fd84 EMIT)
fd79: 48 02 00 00 02             ; XT=0248, flags=02
fd7e: 04 4f 56 45 52 00          ; 4, OVER
;
fd84: 93 fd 00 00                ; EMIT - (next: fd93 DICTP)
fd88: 41 02 00 00 02             ; XT=0241, flags=02
fd8d: 04 45 4d 49 54 00          ; 4, EMIT
;
fd93: a3 fd 00 00                ; DICTP - (next: fda3 >)
fd97: 34 02 00 00 02             ; XT=0234, flags=02
fd9c: 05 44 49 43 54 50 00       ; 5, DICTP
;
fda3: af fd 00 00                ; > - (next: fdaf =)
fda7: 2d 02 00 00 02             ; XT=022d, flags=02
fdac: 01 3e 00                   ; 1, >
;
fdaf: bb fd 00 00                ; = - (next: fdbb <)
fdb3: 26 02 00 00 02             ; XT=0226, flags=02
fdb8: 01 3d 00                   ; 1, =
;
fdbb: c7 fd 00 00                ; < - (next: fdc7 /)
fdbf: 1f 02 00 00 02             ; XT=021f, flags=02
fdc4: 01 3c 00                   ; 1, <
;
fdc7: d3 fd 00 00                ; / - (next: fdd3 *)
fdcb: 18 02 00 00 02             ; XT=0218, flags=02
fdd0: 01 2f 00                   ; 1, /
;
fdd3: df fd 00 00                ; * - (next: fddf -)
fdd7: 11 02 00 00 02             ; XT=0211, flags=02
fddc: 01 2a 00                   ; 1, *
;
fddf: eb fd 00 00                ; - - (next: fdeb +)
fde3: 0a 02 00 00 02             ; XT=020a, flags=02
fde8: 01 2d 00                   ; 1, -
;
fdeb: f7 fd 00 00                ; + - (next: fdf7 C!)
fdef: 03 02 00 00 02             ; XT=0203, flags=02
fdf4: 01 2b 00                   ; 1, +
;
fdf7: 04 fe 00 00                ; C! - (next: fe04 C@)
fdfb: fc 01 00 00 02             ; XT=01fc, flags=02
fe00: 02 43 21 00                ; 2, C!
;
fe04: 11 fe 00 00                ; C@ - (next: fe11 CLITERAL)
fe08: f5 01 00 00 02             ; XT=01f5, flags=02
fe0d: 02 43 40 00                ; 2, C@
;
fe11: 24 fe 00 00                ; CLITERAL - (next: fe24 OR)
fe15: e8 01 00 00 02             ; XT=01e8, flags=02
fe1a: 08 43 4c 49 54 45 52 41 4c 00 ; 8, CLITERAL
;
fe24: 31 fe 00 00                ; OR - (next: fe31 RET)
fe28: e1 01 00 00 02             ; XT=01e1, flags=02
fe2d: 02 4f 52 00                ; 2, OR
;
fe31: 3f fe 00 00                ; RET - (next: fe3f CALL)
fe35: d4 01 00 00 00             ; XT=01d4, flags=00
fe3a: 03 52 45 54 00             ; 3, RET
;
fe3f: 4e fe 00 00                ; CALL - (next: fe4e JMPNZ)
fe43: c7 01 00 00 00             ; XT=01c7, flags=00
fe48: 04 43 41 4c 4c 00          ; 4, CALL
;
fe4e: 5e fe 00 00                ; JMPNZ - (next: fe5e JMPZ)
fe52: ba 01 00 00 00             ; XT=01ba, flags=00
fe57: 05 4a 4d 50 4e 5a 00       ; 5, JMPNZ
;
fe5e: 6d fe 00 00                ; JMPZ - (next: fe6d JMP)
fe62: ad 01 00 00 00             ; XT=01ad, flags=00
fe67: 04 4a 4d 50 5a 00          ; 4, JMPZ
;
fe6d: 7b fe 00 00                ; JMP - (next: fe7b SLITERAL)
fe71: a0 01 00 00 00             ; XT=01a0, flags=00
fe76: 03 4a 4d 50 00             ; 3, JMP
;
fe7b: 8e fe 00 00                ; SLITERAL - (next: fe8e DUP)
fe7f: 93 01 00 00 00             ; XT=0193, flags=00
fe84: 08 53 4c 49 54 45 52 41 4c 00 ; 8, SLITERAL
;
fe8e: 9c fe 00 00                ; DUP - (next: fe9c DROP)
fe92: 8c 01 00 00 02             ; XT=018c, flags=02
fe97: 03 44 55 50 00             ; 3, DUP
;
fe9c: ab fe 00 00                ; DROP - (next: feab SWAP)
fea0: 85 01 00 00 02             ; XT=0185, flags=02
fea5: 04 44 52 4f 50 00          ; 4, DROP
;
feab: ba fe 00 00                ; SWAP - (next: feba !)
feaf: 7e 01 00 00 02             ; XT=017e, flags=02
feb4: 04 53 57 41 50 00          ; 4, SWAP
;
feba: c6 fe 00 00                ; ! - (next: fec6 @)
febe: 77 01 00 00 02             ; XT=0177, flags=02
fec3: 01 21 00                   ; 1, !
;
fec6: d2 fe 00 00                ; @ - (next: fed2 LITERAL)
feca: 70 01 00 00 02             ; XT=0170, flags=02
fecf: 01 40 00                   ; 1, @
;
fed2: e4 fe 00 00                ; LITERAL - (next: fee4 ])
fed6: 63 01 00 00 00             ; XT=0163, flags=00
fedb: 07 4c 49 54 45 52 41 4c 00 ; 7, LITERAL
;
fee4: f0 fe 00 00                ; ] - (next: fef0 [)
fee8: 55 01 00 00 01             ; XT=0155, flags=01
feed: 01 5d 00                   ; 1, ]
;
fef0: fc fe 00 00                ; [ - (next: fefc ,)
fef4: 47 01 00 00 01             ; XT=0147, flags=01
fef9: 01 5b 00                   ; 1, [
;
fefc: 08 ff 00 00                ; , - (next: ff08 C,)
ff00: 2d 01 00 00 00             ; XT=012d, flags=00
ff05: 01 2c 00                   ; 1, ,
;
ff08: 15 ff 00 00                ; C, - (next: ff15 LAST)
ff0c: 15 01 00 00 00             ; XT=0115, flags=00
ff11: 02 43 2c 00                ; 2, C,
;
ff15: 24 ff 00 00                ; LAST - (next: ff24 HERE)
ff19: 09 01 00 00 00             ; XT=0109, flags=00
ff1e: 04 4c 41 53 54 00          ; 4, LAST
;
ff24: 33 ff 00 00                ; HERE - (next: ff33 CELL)
ff28: fd 00 00 00 00             ; XT=00fd, flags=00
ff2d: 04 48 45 52 45 00          ; 4, HERE
;
ff33: 42 ff 00 00                ; CELL - (next: ff42 T3)
ff37: f5 00 00 00 02             ; XT=00f5, flags=02
ff3c: 04 43 45 4c 4c 00          ; 4, CELL
;
ff42: 4f ff 00 00                ; T3 - (next: ff4f T2)
ff46: e5 00 00 00 00             ; XT=00e5, flags=00
ff4b: 02 54 33 00                ; 2, T3
;
ff4f: 5c ff 00 00                ; T2 - (next: ff5c T1)
ff53: d6 00 00 00 00             ; XT=00d6, flags=00
ff58: 02 54 32 00                ; 2, T2
;
ff5c: 69 ff 00 00                ; T1 - (next: ff69 INPUT-FP)
ff60: c7 00 00 00 00             ; XT=00c7, flags=00
ff65: 02 54 31 00                ; 2, T1
;
ff69: 7c ff 00 00                ; INPUT-FP - (next: ff7c #LEN)
ff6d: b8 00 00 00 00             ; XT=00b8, flags=00
ff72: 08 49 4e 50 55 54 2d 46 50 00 ; 8, INPUT-FP
;
ff7c: 8b ff 00 00                ; #LEN - (next: ff8b #NEG)
ff80: a9 00 00 00 00             ; XT=00a9, flags=00
ff85: 04 23 4c 45 4e 00          ; 4, #LEN
;
ff8b: 9a ff 00 00                ; #NEG - (next: ff9a >IN)
ff8f: 9a 00 00 00 00             ; XT=009a, flags=00
ff94: 04 23 4e 45 47 00          ; 4, #NEG
;
ff9a: a8 ff 00 00                ; >IN - (next: ffa8 (MEM_SZ))
ff9e: 8b 00 00 00 00             ; XT=008b, flags=00
ffa3: 03 3e 49 4e 00             ; 3, >IN
;
ffa8: bb ff 00 00                ; (MEM_SZ) - (next: ffbb STATE)
ffac: 7c 00 00 00 00             ; XT=007c, flags=00
ffb1: 08 28 4d 45 4d 5f 53 5a 29 00 ; 8, (MEM_SZ)
;
ffbb: cb ff 00 00                ; STATE - (next: ffcb BASE)
ffbf: 6d 00 00 00 00             ; XT=006d, flags=00
ffc4: 05 53 54 41 54 45 00       ; 5, STATE
;
ffcb: da ff 00 00                ; BASE - (next: ffda (LAST))
ffcf: 5e 00 00 00 00             ; XT=005e, flags=00
ffd4: 04 42 41 53 45 00          ; 4, BASE
;
ffda: eb ff 00 00                ; (LAST) - (next: ffeb (HERE))
ffde: 4f 00 00 00 00             ; XT=004f, flags=00
ffe3: 06 28 4c 41 53 54 29 00    ; 6, (LAST)
;
ffeb: fc ff 00 00                ; (HERE) - (next: fffc <end>)
ffef: 40 00 00 00 00             ; XT=0040, flags=00
fff4: 06 28 48 45 52 45 29 00    ; 6, (HERE)
;
fffc: 00 00 00 00                ; End.
