; memory-size: 65536 bytes, (10000 hex)
; data-stack: fe00, grows up
; return-stack: fffc, grows down
;
0000: 08 b7 12 00 00             ; JMP main (12b7)
;
0005: 00 0a 04
0008: 00000000 00000000
0010: 000014ca 0000edda 00000000 00000000
0020: 00000063 00010000 00000000 00000000
0030: 00000000 00000000 00000000 00000000
;
0040: 18 ed fd 00 00             ; DICTP BASE (fded)
0045: 0e 06                      ; CLITERAL 6
0047: 0c                         ; RET
;
0048: 18 de fd 00 00             ; DICTP CELL (fdde)
004d: 0e 04                      ; CLITERAL 4
004f: 0c                         ; RET
;
0050: 18 d1 fd 00 00             ; DICTP DP (fdd1)
0055: 0e 10                      ; CLITERAL 16
0057: 0c                         ; RET
;
0058: 18 c0 fd 00 00             ; DICTP (LAST) (fdc0)
005d: 0e 14                      ; CLITERAL 20
005f: 0c                         ; RET
;
0060: 18 ad fd 00 00             ; DICTP INPUT-FP (fdad)
0065: 0e 1c                      ; CLITERAL 28
0067: 0c                         ; RET
;
0068: 18 9d fd 00 00             ; DICTP STATE (fd9d)
006d: 0e 20                      ; CLITERAL 32
006f: 0c                         ; RET
;
0070: 18 90 fd 00 00             ; DICTP C, (fd90)
0075: 0e 10                      ; CLITERAL 16
0077: 02                         ; FETCH
0078: 10                         ; CSTORE
0079: 0e 10                      ; CLITERAL 16
007b: 02                         ; FETCH
007c: 0e 01                      ; CLITERAL 1
007e: 11                         ; ADD
007f: 0e 10                      ; CLITERAL 16
0081: 03                         ; STORE
0082: 0c                         ; RET
;
0083: 18 7f fd 00 00             ; DICTP a.PUSH (fd7f)
0088: 0e 01                      ; CLITERAL 1
008a: 0b 70 00 00 00             ; CALL C, (0070)
008f: 0c                         ; RET
;
0090: 18 6d fd 00 00             ; DICTP a.CPUSH (fd6d)
0095: 0e 0e                      ; CLITERAL 14
0097: 0b 70 00 00 00             ; CALL C, (0070)
009c: 0c                         ; RET
;
009d: 18 5b fd 00 00             ; DICTP a.FETCH (fd5b)
00a2: 0e 02                      ; CLITERAL 2
00a4: 0b 70 00 00 00             ; CALL C, (0070)
00a9: 0c                         ; RET
;
00aa: 18 49 fd 00 00             ; DICTP a.STORE (fd49)
00af: 0e 03                      ; CLITERAL 3
00b1: 0b 70 00 00 00             ; CALL C, (0070)
00b6: 0c                         ; RET
;
00b7: 18 36 fd 00 00             ; DICTP a.CFETCH (fd36)
00bc: 0e 0f                      ; CLITERAL 15
00be: 0b 70 00 00 00             ; CALL C, (0070)
00c3: 0c                         ; RET
;
00c4: 18 23 fd 00 00             ; DICTP a.CSTORE (fd23)
00c9: 0e 10                      ; CLITERAL 16
00cb: 0b 70 00 00 00             ; CALL C, (0070)
00d0: 0c                         ; RET
;
00d1: 18 12 fd 00 00             ; DICTP a.SWAP (fd12)
00d6: 0e 04                      ; CLITERAL 4
00d8: 0b 70 00 00 00             ; CALL C, (0070)
00dd: 0c                         ; RET
;
00de: 18 01 fd 00 00             ; DICTP a.DROP (fd01)
00e3: 0e 05                      ; CLITERAL 5
00e5: 0b 70 00 00 00             ; CALL C, (0070)
00ea: 0c                         ; RET
;
00eb: 18 f1 fc 00 00             ; DICTP a.DUP (fcf1)
00f0: 0e 06                      ; CLITERAL 6
00f2: 0b 70 00 00 00             ; CALL C, (0070)
00f7: 0c                         ; RET
;
00f8: 18 e0 fc 00 00             ; DICTP a.OVER (fce0)
00fd: 0e 1a                      ; CLITERAL 26
00ff: 0b 70 00 00 00             ; CALL C, (0070)
0104: 0c                         ; RET
;
0105: 18 d0 fc 00 00             ; DICTP a.JMP (fcd0)
010a: 0e 08                      ; CLITERAL 8
010c: 0b 70 00 00 00             ; CALL C, (0070)
0111: 0c                         ; RET
;
0112: 18 bf fc 00 00             ; DICTP a.JMPZ (fcbf)
0117: 0e 09                      ; CLITERAL 9
0119: 0b 70 00 00 00             ; CALL C, (0070)
011e: 0c                         ; RET
;
011f: 18 ad fc 00 00             ; DICTP a.JMPNZ (fcad)
0124: 0e 0a                      ; CLITERAL 10
0126: 0b 70 00 00 00             ; CALL C, (0070)
012b: 0c                         ; RET
;
012c: 18 9c fc 00 00             ; DICTP a.CALL (fc9c)
0131: 0e 0b                      ; CLITERAL 11
0133: 0b 70 00 00 00             ; CALL C, (0070)
0138: 0c                         ; RET
;
0139: 18 8c fc 00 00             ; DICTP a.RET (fc8c)
013e: 0e 0c                      ; CLITERAL 12
0140: 0b 70 00 00 00             ; CALL C, (0070)
0145: 0c                         ; RET
;
0146: 18 78 fc 00 00             ; DICTP a.COMPARE (fc78)
014b: 0e 1b                      ; CLITERAL 27
014d: 0b 70 00 00 00             ; CALL C, (0070)
0152: 0c                         ; RET
;
0153: 18 63 fc 00 00             ; DICTP a.COMPAREI (fc63)
0158: 0e 28                      ; CLITERAL 40
015a: 0b 70 00 00 00             ; CALL C, (0070)
015f: 0c                         ; RET
;
0160: 18 53 fc 00 00             ; DICTP a.ADD (fc53)
0165: 0e 11                      ; CLITERAL 17
0167: 0b 70 00 00 00             ; CALL C, (0070)
016c: 0c                         ; RET
;
016d: 18 43 fc 00 00             ; DICTP a.SUB (fc43)
0172: 0e 12                      ; CLITERAL 18
0174: 0b 70 00 00 00             ; CALL C, (0070)
0179: 0c                         ; RET
;
017a: 18 33 fc 00 00             ; DICTP a.MUL (fc33)
017f: 0e 13                      ; CLITERAL 19
0181: 0b 70 00 00 00             ; CALL C, (0070)
0186: 0c                         ; RET
;
0187: 18 23 fc 00 00             ; DICTP a.DIV (fc23)
018c: 0e 14                      ; CLITERAL 20
018e: 0b 70 00 00 00             ; CALL C, (0070)
0193: 0c                         ; RET
;
0194: 18 14 fc 00 00             ; DICTP a.LT (fc14)
0199: 0e 15                      ; CLITERAL 21
019b: 0b 70 00 00 00             ; CALL C, (0070)
01a0: 0c                         ; RET
;
01a1: 18 05 fc 00 00             ; DICTP a.EQ (fc05)
01a6: 0e 16                      ; CLITERAL 22
01a8: 0b 70 00 00 00             ; CALL C, (0070)
01ad: 0c                         ; RET
;
01ae: 18 f6 fb 00 00             ; DICTP a.GT (fbf6)
01b3: 0e 17                      ; CLITERAL 23
01b5: 0b 70 00 00 00             ; CALL C, (0070)
01ba: 0c                         ; RET
;
01bb: 18 e4 fb 00 00             ; DICTP a.DICTP (fbe4)
01c0: 0e 18                      ; CLITERAL 24
01c2: 0b 70 00 00 00             ; CALL C, (0070)
01c7: 0c                         ; RET
;
01c8: 18 d3 fb 00 00             ; DICTP a.EMIT (fbd3)
01cd: 0e 19                      ; CLITERAL 25
01cf: 0b 70 00 00 00             ; CALL C, (0070)
01d4: 0c                         ; RET
;
01d5: 18 c1 fb 00 00             ; DICTP a.FOPEN (fbc1)
01da: 0e 1c                      ; CLITERAL 28
01dc: 0b 70 00 00 00             ; CALL C, (0070)
01e1: 0c                         ; RET
;
01e2: 18 af fb 00 00             ; DICTP a.FREAD (fbaf)
01e7: 0e 1d                      ; CLITERAL 29
01e9: 0b 70 00 00 00             ; CALL C, (0070)
01ee: 0c                         ; RET
;
01ef: 18 99 fb 00 00             ; DICTP a.FREADLINE (fb99)
01f4: 0e 1e                      ; CLITERAL 30
01f6: 0b 70 00 00 00             ; CALL C, (0070)
01fb: 0c                         ; RET
;
01fc: 18 86 fb 00 00             ; DICTP a.FWRITE (fb86)
0201: 0e 1f                      ; CLITERAL 31
0203: 0b 70 00 00 00             ; CALL C, (0070)
0208: 0c                         ; RET
;
0209: 18 73 fb 00 00             ; DICTP a.FCLOSE (fb73)
020e: 0e 20                      ; CLITERAL 32
0210: 0b 70 00 00 00             ; CALL C, (0070)
0215: 0c                         ; RET
;
0216: 18 5e fb 00 00             ; DICTP a.SLITERAL (fb5e)
021b: 0e 07                      ; CLITERAL 7
021d: 0b 70 00 00 00             ; CALL C, (0070)
0222: 0c                         ; RET
;
0223: 18 4d fb 00 00             ; DICTP a.DTOR (fb4d)
0228: 0e 21                      ; CLITERAL 33
022a: 0b 70 00 00 00             ; CALL C, (0070)
022f: 0c                         ; RET
;
0230: 18 3c fb 00 00             ; DICTP a.RTOD (fb3c)
0235: 0e 22                      ; CLITERAL 34
0237: 0b 70 00 00 00             ; CALL C, (0070)
023c: 0c                         ; RET
;
023d: 18 2b fb 00 00             ; DICTP a.PICK (fb2b)
0242: 0e 25                      ; CLITERAL 37
0244: 0b 70 00 00 00             ; CALL C, (0070)
0249: 0c                         ; RET
;
024a: 18 16 fb 00 00             ; DICTP a.LOGLEVEL (fb16)
024f: 0e 23                      ; CLITERAL 35
0251: 0b 70 00 00 00             ; CALL C, (0070)
0256: 0c                         ; RET
;
0257: 18 04 fb 00 00             ; DICTP a.DEPTH (fb04)
025c: 0e 26                      ; CLITERAL 38
025e: 0b 70 00 00 00             ; CALL C, (0070)
0263: 0c                         ; RET
;
0264: 18 f4 fa 00 00             ; DICTP a.AND (faf4)
0269: 0e 24                      ; CLITERAL 36
026b: 0b 70 00 00 00             ; CALL C, (0070)
0270: 0c                         ; RET
;
0271: 18 e5 fa 00 00             ; DICTP a.OR (fae5)
0276: 0e 0d                      ; CLITERAL 13
0278: 0b 70 00 00 00             ; CALL C, (0070)
027d: 0c                         ; RET
;
027e: 18 d3 fa 00 00             ; DICTP a.GETCH (fad3)
0283: 0e 27                      ; CLITERAL 39
0285: 0b 70 00 00 00             ; CALL C, (0070)
028a: 0c                         ; RET
;
028b: 18 bc fa 00 00             ; DICTP a.USTACKINIT (fabc)
0290: 0e 29                      ; CLITERAL 41
0292: 0b 70 00 00 00             ; CALL C, (0070)
0297: 0c                         ; RET
;
0298: 18 aa fa 00 00             ; DICTP a.UPUSH (faaa)
029d: 0e 2a                      ; CLITERAL 42
029f: 0b 70 00 00 00             ; CALL C, (0070)
02a4: 0c                         ; RET
;
02a5: 18 99 fa 00 00             ; DICTP a.UPOP (fa99)
02aa: 0e 2b                      ; CLITERAL 43
02ac: 0b 70 00 00 00             ; CALL C, (0070)
02b1: 0c                         ; RET
;
02b2: 18 87 fa 00 00             ; DICTP a.BREAK (fa87)
02b7: 0e fd                      ; CLITERAL 253
02b9: 0b 70 00 00 00             ; CALL C, (0070)
02be: 0c                         ; RET
;
02bf: 18 75 fa 00 00             ; DICTP a.RESET (fa75)
02c4: 0e fe                      ; CLITERAL 254
02c6: 0b 70 00 00 00             ; CALL C, (0070)
02cb: 0c                         ; RET
;
02cc: 18 65 fa 00 00             ; DICTP a.BYE (fa65)
02d1: 0e ff                      ; CLITERAL 255
02d3: 0b 70 00 00 00             ; CALL C, (0070)
02d8: 0c                         ; RET
;
02d9: 18 59 fa 00 00             ; DICTP @ (fa59)
02de: 02                         ; FETCH
02df: 0c                         ; RET
;
02e0: 18 4d fa 00 00             ; DICTP ! (fa4d)
02e5: 03                         ; STORE
02e6: 0c                         ; RET
;
02e7: 18 40 fa 00 00             ; DICTP C@ (fa40)
02ec: 0f                         ; CFETCH
02ed: 0c                         ; RET
;
02ee: 18 33 fa 00 00             ; DICTP C! (fa33)
02f3: 10                         ; CSTORE
02f4: 0c                         ; RET
;
02f5: 18 24 fa 00 00             ; DICTP SWAP (fa24)
02fa: 04                         ; SWAP
02fb: 0c                         ; RET
;
02fc: 18 15 fa 00 00             ; DICTP DROP (fa15)
0301: 05                         ; DROP
0302: 0c                         ; RET
;
0303: 18 07 fa 00 00             ; DICTP DUP (fa07)
0308: 06                         ; DUP
0309: 0c                         ; RET
;
030a: 18 f8 f9 00 00             ; DICTP OVER (f9f8)
030f: 1a                         ; OVER
0310: 0c                         ; RET
;
0311: 18 e6 f9 00 00             ; DICTP COMPARE (f9e6)
0316: 1b                         ; COMPARE
0317: 0c                         ; RET
;
0318: 18 d3 f9 00 00             ; DICTP COMPAREI (f9d3)
031d: 28                         ; COMPAREI
031e: 0c                         ; RET
;
031f: 18 c7 f9 00 00             ; DICTP + (f9c7)
0324: 11                         ; ADD
0325: 0c                         ; RET
;
0326: 18 bb f9 00 00             ; DICTP - (f9bb)
032b: 12                         ; SUB
032c: 0c                         ; RET
;
032d: 18 af f9 00 00             ; DICTP * (f9af)
0332: 13                         ; MUL
0333: 0c                         ; RET
;
0334: 18 a3 f9 00 00             ; DICTP / (f9a3)
0339: 14                         ; DIV
033a: 0c                         ; RET
;
033b: 18 97 f9 00 00             ; DICTP < (f997)
0340: 15                         ; LT
0341: 0c                         ; RET
;
0342: 18 8b f9 00 00             ; DICTP = (f98b)
0347: 16                         ; EQ
0348: 0c                         ; RET
;
0349: 18 7f f9 00 00             ; DICTP > (f97f)
034e: 17                         ; GT
034f: 0c                         ; RET
;
0350: 18 70 f9 00 00             ; DICTP EMIT (f970)
0355: 19                         ; EMIT
0356: 0c                         ; RET
;
0357: 18 60 f9 00 00             ; DICTP FOPEN (f960)
035c: 1c                         ; FOPEN
035d: 0c                         ; RET
;
035e: 18 50 f9 00 00             ; DICTP FREAD (f950)
0363: 1d                         ; FREAD
0364: 0c                         ; RET
;
0365: 18 3c f9 00 00             ; DICTP FREADLINE (f93c)
036a: 1e                         ; FREADLINE
036b: 0c                         ; RET
;
036c: 18 2b f9 00 00             ; DICTP FWRITE (f92b)
0371: 1f                         ; FWRITE
0372: 0c                         ; RET
;
0373: 18 1a f9 00 00             ; DICTP FCLOSE (f91a)
0378: 20                         ; FCLOSE
0379: 0c                         ; RET
;
037a: 18 0d f9 00 00             ; DICTP >R (f90d)
037f: 21                         ; DTOR
0380: 0c                         ; RET
;
0381: 18 00 f9 00 00             ; DICTP R> (f900)
0386: 22                         ; RTOD
0387: 0c                         ; RET
;
0388: 18 f1 f8 00 00             ; DICTP PICK (f8f1)
038d: 25                         ; PICK
038e: 0c                         ; RET
;
038f: 18 e1 f8 00 00             ; DICTP DEPTH (f8e1)
0394: 26                         ; DEPTH
0395: 0c                         ; RET
;
0396: 18 d3 f8 00 00             ; DICTP AND (f8d3)
039b: 24                         ; AND
039c: 0c                         ; RET
;
039d: 18 c6 f8 00 00             ; DICTP OR (f8c6)
03a2: 0d                         ; OR
03a3: 0c                         ; RET
;
03a4: 18 b6 f8 00 00             ; DICTP GETCH (f8b6)
03a9: 27                         ; GETCH
03aa: 0c                         ; RET
;
03ab: 18 a1 f8 00 00             ; DICTP USTACKINIT (f8a1)
03b0: 29                         ; USTACKINIT
03b1: 0c                         ; RET
;
03b2: 18 8f f8 00 00             ; DICTP >USTACK (f88f)
03b7: 2a                         ; UPUSH
03b8: 0c                         ; RET
;
03b9: 18 7d f8 00 00             ; DICTP USTACK> (f87d)
03be: 2b                         ; UPOP
03bf: 0c                         ; RET
;
03c0: 18 6d f8 00 00             ; DICTP BREAK (f86d)
03c5: fd                         ; BREAK
03c6: 0c                         ; RET
;
03c7: 18 5d f8 00 00             ; DICTP RESET (f85d)
03cc: fe                         ; RESET
03cd: 0c                         ; RET
;
03ce: 18 4f f8 00 00             ; DICTP BYE (f84f)
03d3: ff                         ; BYE
03d4: 0c                         ; RET
;
03d5: 18 3e f8 00 00             ; DICTP INLINE (f83e)
03da: 0e 14                      ; CLITERAL 20
03dc: 02                         ; FETCH
03dd: 0e 02                      ; CLITERAL 2
03df: 0e 04                      ; CLITERAL 4
03e1: 13                         ; MUL
03e2: 11                         ; ADD
03e3: 06                         ; DUP
03e4: 0f                         ; CFETCH
03e5: 0e 02                      ; CLITERAL 2
03e7: 0d                         ; OR
03e8: 04                         ; SWAP
03e9: 10                         ; CSTORE
03ea: 0c                         ; RET
;
03eb: 18 2e f8 00 00             ; DICTP CELLS (f82e)
03f0: 0e 04                      ; CLITERAL 4
03f2: 13                         ; MUL
03f3: 0c                         ; RET
;
03f4: 18 15 f8 00 00             ; DICTP FLAG_IMMEDIATE (f815)
03f9: 0e 01                      ; CLITERAL 1
03fb: 0c                         ; RET
;
03fc: 18 ff f7 00 00             ; DICTP FLAG_INLINE (f7ff)
0401: 0e 02                      ; CLITERAL 2
0403: 0c                         ; RET
;
0404: 18 eb f7 00 00             ; DICTP IMMEDIATE (f7eb)
0409: 0e 14                      ; CLITERAL 20
040b: 02                         ; FETCH
040c: 0e 02                      ; CLITERAL 2
040e: 0e 04                      ; CLITERAL 4
0410: 13                         ; MUL
0411: 11                         ; ADD
0412: 06                         ; DUP
0413: 0f                         ; CFETCH
0414: 0e 01                      ; CLITERAL 1
0416: 0d                         ; OR
0417: 04                         ; SWAP
0418: 10                         ; CSTORE
0419: 0c                         ; RET
;
041a: 18 dc f7 00 00             ; DICTP LAST (f7dc)
041f: 0e 14                      ; CLITERAL 20
0421: 02                         ; FETCH
0422: 0c                         ; RET
;
0423: 18 cd f7 00 00             ; DICTP HERE (f7cd)
0428: 0e 10                      ; CLITERAL 16
042a: 02                         ; FETCH
042b: 0c                         ; RET
;
042c: 18 c1 f7 00 00             ; DICTP , (f7c1)
0431: 0e 10                      ; CLITERAL 16
0433: 02                         ; FETCH
0434: 03                         ; STORE
0435: 0e 10                      ; CLITERAL 16
0437: 02                         ; FETCH
0438: 0e 04                      ; CLITERAL 4
043a: 11                         ; ADD
043b: 0e 10                      ; CLITERAL 16
043d: 03                         ; STORE
043e: 0c                         ; RET
;
043f: 18 ae f7 00 00             ; DICTP LOGLEVEL (f7ae)
0444: 23                         ; LOGLEVEL
0445: 0c                         ; RET
;
0446: 18 9b f7 00 00             ; DICTP TRACE-ON (f79b)
044b: 0e 02                      ; CLITERAL 2
044d: 23                         ; LOGLEVEL
044e: 0c                         ; RET
;
044f: 18 87 f7 00 00             ; DICTP TRACE-OFF (f787)
0454: 0e 00                      ; CLITERAL 0
0456: 23                         ; LOGLEVEL
0457: 0c                         ; RET
;
0458: 18 74 f7 00 00             ; DICTP DEBUG-ON (f774)
045d: 0e 01                      ; CLITERAL 1
045f: 23                         ; LOGLEVEL
0460: 0c                         ; RET
;
0461: 18 60 f7 00 00             ; DICTP DEBUG-OFF (f760)
0466: 0e 00                      ; CLITERAL 0
0468: 23                         ; LOGLEVEL
0469: 0c                         ; RET
;
046a: 18 52 f7 00 00             ; DICTP HEX (f752)
046f: 0e 10                      ; CLITERAL 16
0471: 0e 06                      ; CLITERAL 6
0473: 10                         ; CSTORE
0474: 0c                         ; RET
;
0475: 18 40 f7 00 00             ; DICTP DECIMAL (f740)
047a: 0e 0a                      ; CLITERAL 10
047c: 0e 06                      ; CLITERAL 6
047e: 10                         ; CSTORE
047f: 0c                         ; RET
;
0480: 18 30 f7 00 00             ; DICTP OCTAL (f730)
0485: 0e 08                      ; CLITERAL 8
0487: 0e 06                      ; CLITERAL 6
0489: 10                         ; CSTORE
048a: 0c                         ; RET
;
048b: 18 1f f7 00 00             ; DICTP BINARY (f71f)
0490: 0e 02                      ; CLITERAL 2
0492: 0e 06                      ; CLITERAL 6
0494: 10                         ; CSTORE
0495: 0c                         ; RET
;
0496: 18 12 f7 00 00             ; DICTP ON (f712)
049b: 0e 01                      ; CLITERAL 1
049d: 04                         ; SWAP
049e: 03                         ; STORE
049f: 0c                         ; RET
;
04a0: 18 04 f7 00 00             ; DICTP OFF (f704)
04a5: 0e 00                      ; CLITERAL 0
04a7: 04                         ; SWAP
04a8: 03                         ; STORE
04a9: 0c                         ; RET
;
04aa: 18 f8 f6 00 00             ; DICTP [ (f6f8)
04af: 0e 00                      ; CLITERAL 0
04b1: 0e 20                      ; CLITERAL 32
04b3: 03                         ; STORE
04b4: 0c                         ; RET
;
04b5: 18 ec f6 00 00             ; DICTP ] (f6ec)
04ba: 0e 01                      ; CLITERAL 1
04bc: 0e 20                      ; CLITERAL 32
04be: 03                         ; STORE
04bf: 0c                         ; RET
;
04c0: 18 d7 f6 00 00             ; DICTP ?COMPILING (f6d7)
04c5: 0e 20                      ; CLITERAL 32
04c7: 02                         ; FETCH
04c8: 0c                         ; RET
;
04c9: 18 c8 f6 00 00             ; DICTP THEN (f6c8)
04ce: 0b c0 04 00 00             ; CALL ?COMPILING (04c0)
04d3: 09 dd 04 00 00             ; JMPZ 04dd
04d8: 0e 10                      ; CLITERAL 16
04da: 02                         ; FETCH
04db: 04                         ; SWAP
04dc: 03                         ; STORE
04dd: 0c                         ; RET
;
04de: 18 bb f6 00 00             ; DICTP IF (f6bb)
04e3: 0b c0 04 00 00             ; CALL ?COMPILING (04c0)
04e8: 09 fe 04 00 00             ; JMPZ 04fe
04ed: 0e 09                      ; CLITERAL 9
04ef: 0b 70 00 00 00             ; CALL C, (0070)
04f4: 0e 10                      ; CLITERAL 16
04f6: 02                         ; FETCH
04f7: 0e 00                      ; CLITERAL 0
04f9: 0b 2c 04 00 00             ; CALL , (042c)
04fe: 0c                         ; RET
;
04ff: 18 ac f6 00 00             ; DICTP ELSE (f6ac)
0504: 0b c0 04 00 00             ; CALL ?COMPILING (04c0)
0509: 09 25 05 00 00             ; JMPZ 0525
050e: 0e 08                      ; CLITERAL 8
0510: 0b 70 00 00 00             ; CALL C, (0070)
0515: 0e 10                      ; CLITERAL 16
0517: 02                         ; FETCH
0518: 04                         ; SWAP
0519: 0e 00                      ; CLITERAL 0
051b: 0b 2c 04 00 00             ; CALL , (042c)
0520: 0e 10                      ; CLITERAL 16
0522: 02                         ; FETCH
0523: 04                         ; SWAP
0524: 03                         ; STORE
0525: 0c                         ; RET
;
0526: 18 9e f6 00 00             ; DICTP >IN (f69e)
052b: 01 31 05 00 00             ; LITERAL 1329 (531)
0530: 0c                         ; RET
0531: 00                         ; RESET
0532: 00                         ; RESET
0533: 00                         ; RESET
0534: 00                         ; RESET
0535: 0c                         ; RET
;
0536: 18 8e f6 00 00             ; DICTP isNeg (f68e)
053b: 01 41 05 00 00             ; LITERAL 1345 (541)
0540: 0c                         ; RET
0541: 00                         ; RESET
0542: 00                         ; RESET
0543: 00                         ; RESET
0544: 00                         ; RESET
0545: 0c                         ; RET
;
0546: 18 7d f6 00 00             ; DICTP MEM_SZ (f67d)
054b: 0e 24                      ; CLITERAL 36
054d: 02                         ; FETCH
054e: 0c                         ; RET
;
054f: 18 70 f6 00 00             ; DICTP R@ (f670)
0554: 22                         ; RTOD
0555: 06                         ; DUP
0556: 21                         ; DTOR
0557: 0c                         ; RET
;
0558: 18 60 f6 00 00             ; DICTP RDROP (f660)
055d: 22                         ; RTOD
055e: 05                         ; DROP
055f: 0c                         ; RET
;
0560: 18 51 f6 00 00             ; DICTP 2DUP (f651)
0565: 1a                         ; OVER
0566: 1a                         ; OVER
0567: 0c                         ; RET
;
0568: 18 41 f6 00 00             ; DICTP 2DROP (f641)
056d: 05                         ; DROP
056e: 05                         ; DROP
056f: 0c                         ; RET
;
0570: 18 32 f6 00 00             ; DICTP TUCK (f632)
0575: 04                         ; SWAP
0576: 1a                         ; OVER
0577: 0c                         ; RET
;
0578: 18 24 f6 00 00             ; DICTP NIP (f624)
057d: 04                         ; SWAP
057e: 05                         ; DROP
057f: 0c                         ; RET
;
0580: 18 16 f6 00 00             ; DICTP ROT (f616)
0585: 21                         ; DTOR
0586: 04                         ; SWAP
0587: 22                         ; RTOD
0588: 04                         ; SWAP
0589: 0c                         ; RET
;
058a: 18 07 f6 00 00             ; DICTP -ROT (f607)
058f: 04                         ; SWAP
0590: 21                         ; DTOR
0591: 04                         ; SWAP
0592: 22                         ; RTOD
0593: 0c                         ; RET
;
0594: 18 fa f5 00 00             ; DICTP 1+ (f5fa)
0599: 0e 01                      ; CLITERAL 1
059b: 11                         ; ADD
059c: 0c                         ; RET
;
059d: 18 ed f5 00 00             ; DICTP 1- (f5ed)
05a2: 0e 01                      ; CLITERAL 1
05a4: 12                         ; SUB
05a5: 0c                         ; RET
;
05a6: 18 e0 f5 00 00             ; DICTP 2* (f5e0)
05ab: 0e 02                      ; CLITERAL 2
05ad: 13                         ; MUL
05ae: 0c                         ; RET
;
05af: 18 d3 f5 00 00             ; DICTP 2/ (f5d3)
05b4: 0e 02                      ; CLITERAL 2
05b6: 14                         ; DIV
05b7: 0c                         ; RET
;
05b8: 18 c6 f5 00 00             ; DICTP += (f5c6)
05bd: 1a                         ; OVER
05be: 02                         ; FETCH
05bf: 11                         ; ADD
05c0: 04                         ; SWAP
05c1: 03                         ; STORE
05c2: 0c                         ; RET
;
05c3: 18 b9 f5 00 00             ; DICTP -= (f5b9)
05c8: 1a                         ; OVER
05c9: 02                         ; FETCH
05ca: 04                         ; SWAP
05cb: 12                         ; SUB
05cc: 04                         ; SWAP
05cd: 03                         ; STORE
05ce: 0c                         ; RET
;
05cf: 18 ac f5 00 00             ; DICTP ++ (f5ac)
05d4: 0e 01                      ; CLITERAL 1
05d6: 0b b8 05 00 00             ; CALL += (05b8)
05db: 0c                         ; RET
;
05dc: 18 9f f5 00 00             ; DICTP -- (f59f)
05e1: 0e 01                      ; CLITERAL 1
05e3: 0b c3 05 00 00             ; CALL -= (05c3)
05e8: 0c                         ; RET
;
05e9: 18 91 f5 00 00             ; DICTP C++ (f591)
05ee: 06                         ; DUP
05ef: 0f                         ; CFETCH
05f0: 0e 01                      ; CLITERAL 1
05f2: 11                         ; ADD
05f3: 04                         ; SWAP
05f4: 10                         ; CSTORE
05f5: 0c                         ; RET
;
05f6: 18 83 f5 00 00             ; DICTP C-- (f583)
05fb: 06                         ; DUP
05fc: 0f                         ; CFETCH
05fd: 0e 01                      ; CLITERAL 1
05ff: 12                         ; SUB
0600: 04                         ; SWAP
0601: 10                         ; CSTORE
0602: 0c                         ; RET
;
0603: 18 76 f5 00 00             ; DICTP +! (f576)
0608: 04                         ; SWAP
0609: 1a                         ; OVER
060a: 02                         ; FETCH
060b: 11                         ; ADD
060c: 04                         ; SWAP
060d: 03                         ; STORE
060e: 0c                         ; RET
;
060f: 18 68 f5 00 00             ; DICTP C+! (f568)
0614: 04                         ; SWAP
0615: 1a                         ; OVER
0616: 0f                         ; CFETCH
0617: 11                         ; ADD
0618: 04                         ; SWAP
0619: 10                         ; CSTORE
061a: 0c                         ; RET
;
061b: 18 5b f5 00 00             ; DICTP 0= (f55b)
0620: 0e 00                      ; CLITERAL 0
0622: 16                         ; EQ
0623: 0c                         ; RET
;
0624: 18 4e f5 00 00             ; DICTP <> (f54e)
0629: 16                         ; EQ
062a: 0e 00                      ; CLITERAL 0
062c: 16                         ; EQ
062d: 0c                         ; RET
;
062e: 18 41 f5 00 00             ; DICTP <= (f541)
0633: 17                         ; GT
0634: 0e 00                      ; CLITERAL 0
0636: 16                         ; EQ
0637: 0c                         ; RET
;
0638: 18 34 f5 00 00             ; DICTP >= (f534)
063d: 15                         ; LT
063e: 0e 00                      ; CLITERAL 0
0640: 16                         ; EQ
0641: 0c                         ; RET
;
0642: 18 25 f5 00 00             ; DICTP TRUE (f525)
0647: 0e 01                      ; CLITERAL 1
0649: 0c                         ; RET
;
064a: 18 15 f5 00 00             ; DICTP FALSE (f515)
064f: 0e 00                      ; CLITERAL 0
0651: 0c                         ; RET
;
0652: 18 07 f5 00 00             ; DICTP NOT (f507)
0657: 0e 00                      ; CLITERAL 0
0659: 16                         ; EQ
065a: 0c                         ; RET
;
065b: 18 f7 f4 00 00             ; DICTP LEAVE (f4f7)
0660: 0b c0 04 00 00             ; CALL ?COMPILING (04c0)
0665: 09 71 06 00 00             ; JMPZ 0671
066a: 0e 0c                      ; CLITERAL 12
066c: 0b 70 00 00 00             ; CALL C, (0070)
0671: 0c                         ; RET
;
0672: 18 e7 f4 00 00             ; DICTP BEGIN (f4e7)
0677: 0b c0 04 00 00             ; CALL ?COMPILING (04c0)
067c: 09 84 06 00 00             ; JMPZ 0684
0681: 0e 10                      ; CLITERAL 16
0683: 02                         ; FETCH
0684: 0c                         ; RET
;
0685: 18 d7 f4 00 00             ; DICTP AGAIN (f4d7)
068a: 0b c0 04 00 00             ; CALL ?COMPILING (04c0)
068f: 09 a0 06 00 00             ; JMPZ 06a0
0694: 0e 08                      ; CLITERAL 8
0696: 0b 70 00 00 00             ; CALL C, (0070)
069b: 0b 2c 04 00 00             ; CALL , (042c)
06a0: 0c                         ; RET
;
06a1: 18 c7 f4 00 00             ; DICTP WHILE (f4c7)
06a6: 0b c0 04 00 00             ; CALL ?COMPILING (04c0)
06ab: 09 bc 06 00 00             ; JMPZ 06bc
06b0: 0e 0a                      ; CLITERAL 10
06b2: 0b 70 00 00 00             ; CALL C, (0070)
06b7: 0b 2c 04 00 00             ; CALL , (042c)
06bc: 0c                         ; RET
;
06bd: 18 b7 f4 00 00             ; DICTP UNTIL (f4b7)
06c2: 0b c0 04 00 00             ; CALL ?COMPILING (04c0)
06c7: 09 d8 06 00 00             ; JMPZ 06d8
06cc: 0e 09                      ; CLITERAL 9
06ce: 0b 70 00 00 00             ; CALL C, (0070)
06d3: 0b 2c 04 00 00             ; CALL , (042c)
06d8: 0c                         ; RET
;
06d9: 18 a7 f4 00 00             ; DICTP COUNT (f4a7)
06de: 06                         ; DUP
06df: 0e 01                      ; CLITERAL 1
06e1: 11                         ; ADD
06e2: 04                         ; SWAP
06e3: 0f                         ; CFETCH
06e4: 0c                         ; RET
;
06e5: 18 98 f4 00 00             ; DICTP TYPE (f498)
06ea: 1a                         ; OVER
06eb: 11                         ; ADD
06ec: 04                         ; SWAP
06ed: 1a                         ; OVER
06ee: 1a                         ; OVER
06ef: 17                         ; GT
06f0: 0e 00                      ; CLITERAL 0
06f2: 16                         ; EQ
06f3: 09 fb 06 00 00             ; JMPZ 06fb
06f8: 05                         ; DROP
06f9: 05                         ; DROP
06fa: 0c                         ; RET
06fb: 06                         ; DUP
06fc: 0f                         ; CFETCH
06fd: 19                         ; EMIT
06fe: 0e 01                      ; CLITERAL 1
0700: 11                         ; ADD
0701: 08 ed 06 00 00             ; JMP 06ed
0706: 0c                         ; RET
;
0707: 18 8b f4 00 00             ; DICTP CT (f48b)
070c: 0b d9 06 00 00             ; CALL COUNT (06d9)
0711: 0b e5 06 00 00             ; CALL TYPE (06e5)
0716: 0c                         ; RET
;
0717: 18 7f f4 00 00             ; DICTP \ (f47f)
071c: 0e 00                      ; CLITERAL 0
071e: 0b 26 05 00 00             ; CALL >IN (0526)
0723: 02                         ; FETCH
0724: 10                         ; CSTORE
0725: 0c                         ; RET
;
0726: 18 73 f4 00 00             ; DICTP ( (f473)
072b: 0b 26 05 00 00             ; CALL >IN (0526)
0730: 02                         ; FETCH
0731: 0f                         ; CFETCH
0732: 06                         ; DUP
0733: 0e 00                      ; CLITERAL 0
0735: 16                         ; EQ
0736: 09 57 07 00 00             ; JMPZ 0757
073b: 07 13 6d 69 73 73 69 6e 67 20 63 6c 6f 73 69 6e 67 20 27 29 27 00 ; SLITERAL (073c) [missing closing ')']
0751: 0b 07 07 00 00             ; CALL CT (0707)
0756: fe                         ; RESET
0757: 0b 26 05 00 00             ; CALL >IN (0526)
075c: 0b cf 05 00 00             ; CALL ++ (05cf)
0761: 0e 29                      ; CLITERAL 41
0763: 16                         ; EQ
0764: 09 6a 07 00 00             ; JMPZ 076a
0769: 0c                         ; RET
076a: 08 2b 07 00 00             ; JMP 072b
076f: 0c                         ; RET
;
0770: 18 66 f4 00 00             ; DICTP BL (f466)
0775: 0e 20                      ; CLITERAL 32
0777: 19                         ; EMIT
0778: 0c                         ; RET
;
0779: 18 57 f4 00 00             ; DICTP CRLF (f457)
077e: 0e 0d                      ; CLITERAL 13
0780: 19                         ; EMIT
0781: 0e 0a                      ; CLITERAL 10
0783: 19                         ; EMIT
0784: 0c                         ; RET
;
0785: 18 4a f4 00 00             ; DICTP CR (f44a)
078a: 0e 0d                      ; CLITERAL 13
078c: 19                         ; EMIT
078d: 0e 0a                      ; CLITERAL 10
078f: 19                         ; EMIT
0790: 0c                         ; RET
;
0791: 18 38 f4 00 00             ; DICTP BETWEEN (f438)
0796: 0e 02                      ; CLITERAL 2
0798: 25                         ; PICK
0799: 15                         ; LT
079a: 09 a4 07 00 00             ; JMPZ 07a4
079f: 05                         ; DROP
07a0: 05                         ; DROP
07a1: 0e 00                      ; CLITERAL 0
07a3: 0c                         ; RET
07a4: 15                         ; LT
07a5: 0e 00                      ; CLITERAL 0
07a7: 16                         ; EQ
07a8: 0c                         ; RET
;
07a9: 18 28 f4 00 00             ; DICTP (tmp) (f428)
07ae: 01 b4 07 00 00             ; LITERAL 1972 (7b4)
07b3: 0c                         ; RET
07b4: 00                         ; RESET
07b5: 00                         ; RESET
07b6: 00                         ; RESET
07b7: 00                         ; RESET
07b8: 0c                         ; RET
;
07b9: 18 15 f4 00 00             ; DICTP tmp-init (f415)
07be: 0e 14                      ; CLITERAL 20
07c0: 02                         ; FETCH
07c1: 0b a9 07 00 00             ; CALL (tmp) (07a9)
07c6: 03                         ; STORE
07c7: 0c                         ; RET
;
07c8: 18 03 f4 00 00             ; DICTP tmp-cur (f403)
07cd: 0b a9 07 00 00             ; CALL (tmp) (07a9)
07d2: 02                         ; FETCH
07d3: 0c                         ; RET
;
07d4: 18 ef f3 00 00             ; DICTP tmp-alloc (f3ef)
07d9: 0b a9 07 00 00             ; CALL (tmp) (07a9)
07de: 04                         ; SWAP
07df: 1a                         ; OVER
07e0: 02                         ; FETCH
07e1: 04                         ; SWAP
07e2: 12                         ; SUB
07e3: 04                         ; SWAP
07e4: 03                         ; STORE
07e5: 0b c8 07 00 00             ; CALL tmp-cur (07c8)
07ea: 0c                         ; RET
;
07eb: 18 e1 f3 00 00             ; DICTP PAD (f3e1)
07f0: 0b b9 07 00 00             ; CALL tmp-init (07b9)
07f5: 0e c8                      ; CLITERAL 200
07f7: 0b d4 07 00 00             ; CALL tmp-alloc (07d4)
07fc: 0c                         ; RET
;
07fd: 18 ce f3 00 00             ; DICTP getInput (f3ce)
0802: 0b eb 07 00 00             ; CALL PAD (07eb)
0807: 0e 80                      ; CLITERAL 128
0809: 0e 00                      ; CLITERAL 0
080b: 1e                         ; FREADLINE
080c: 05                         ; DROP
080d: 0b eb 07 00 00             ; CALL PAD (07eb)
0812: 0c                         ; RET
;
0813: 18 bd f3 00 00             ; DICTP skipWS (f3bd)
0818: 06                         ; DUP
0819: 0f                         ; CFETCH
081a: 06                         ; DUP
081b: 09 36 08 00 00             ; JMPZ 0836
0820: 0e 20                      ; CLITERAL 32
0822: 17                         ; GT
0823: 09 2e 08 00 00             ; JMPZ 082e
0828: 0c                         ; RET
0829: 08 31 08 00 00             ; JMP 0831
082e: 0e 01                      ; CLITERAL 1
0830: 11                         ; ADD
0831: 08 38 08 00 00             ; JMP 0838
0836: 05                         ; DROP
0837: 0c                         ; RET
0838: 08 18 08 00 00             ; JMP 0818
083d: 0c                         ; RET
;
083e: 18 a8 f3 00 00             ; DICTP getOneWord (f3a8)
0843: 06                         ; DUP
0844: 21                         ; DTOR
0845: 21                         ; DTOR
0846: 22                         ; RTOD
0847: 06                         ; DUP
0848: 21                         ; DTOR
0849: 0f                         ; CFETCH
084a: 0e 20                      ; CLITERAL 32
084c: 17                         ; GT
084d: 09 5c 08 00 00             ; JMPZ 085c
0852: 22                         ; RTOD
0853: 0e 01                      ; CLITERAL 1
0855: 11                         ; ADD
0856: 21                         ; DTOR
0857: 08 74 08 00 00             ; JMP 0874
085c: 22                         ; RTOD
085d: 06                         ; DUP
085e: 21                         ; DTOR
085f: 0f                         ; CFETCH
0860: 09 70 08 00 00             ; JMPZ 0870
0865: 0e 00                      ; CLITERAL 0
0867: 22                         ; RTOD
0868: 06                         ; DUP
0869: 21                         ; DTOR
086a: 10                         ; CSTORE
086b: 22                         ; RTOD
086c: 0e 01                      ; CLITERAL 1
086e: 11                         ; ADD
086f: 21                         ; DTOR
0870: 22                         ; RTOD
0871: 22                         ; RTOD
0872: 04                         ; SWAP
0873: 0c                         ; RET
0874: 08 46 08 00 00             ; JMP 0846
0879: 0c                         ; RET
;
087a: 18 94 f3 00 00             ; DICTP DICT>NEXT (f394)
087f: 0c                         ; RET
;
0880: 18 82 f3 00 00             ; DICTP DICT>XT (f382)
0885: 0e 04                      ; CLITERAL 4
0887: 11                         ; ADD
0888: 0c                         ; RET
;
0889: 18 6d f3 00 00             ; DICTP DICT>FLAGS (f36d)
088e: 0e 02                      ; CLITERAL 2
0890: 0e 04                      ; CLITERAL 4
0892: 13                         ; MUL
0893: 11                         ; ADD
0894: 0c                         ; RET
;
0895: 18 59 f3 00 00             ; DICTP DICT>NAME (f359)
089a: 0b 89 08 00 00             ; CALL DICT>FLAGS (0889)
089f: 0e 01                      ; CLITERAL 1
08a1: 11                         ; ADD
08a2: 0c                         ; RET
;
08a3: 18 45 f3 00 00             ; DICTP NEXT>DICT (f345)
08a8: 0c                         ; RET
;
08a9: 18 33 f3 00 00             ; DICTP XT>DICT (f333)
08ae: 0e 04                      ; CLITERAL 4
08b0: 12                         ; SUB
08b1: 0c                         ; RET
;
08b2: 18 1e f3 00 00             ; DICTP FLAGS>DICT (f31e)
08b7: 0e 02                      ; CLITERAL 2
08b9: 0e 04                      ; CLITERAL 4
08bb: 13                         ; MUL
08bc: 12                         ; SUB
08bd: 0c                         ; RET
;
08be: 18 0a f3 00 00             ; DICTP NAME>DICT (f30a)
08c3: 0e 01                      ; CLITERAL 1
08c5: 12                         ; SUB
08c6: 0e 02                      ; CLITERAL 2
08c8: 0e 04                      ; CLITERAL 4
08ca: 13                         ; MUL
08cb: 12                         ; SUB
08cc: 0c                         ; RET
;
08cd: 18 f5 f2 00 00             ; DICTP DICT.GetXT (f2f5)
08d2: 0b 80 08 00 00             ; CALL DICT>XT (0880)
08d7: 02                         ; FETCH
08d8: 0c                         ; RET
;
08d9: 18 dd f2 00 00             ; DICTP DICT.GetFLAGS (f2dd)
08de: 0b 89 08 00 00             ; CALL DICT>FLAGS (0889)
08e3: 0f                         ; CFETCH
08e4: 0c                         ; RET
;
08e5: 18 c8 f2 00 00             ; DICTP DICTP>NAME (f2c8)
08ea: 0e 01                      ; CLITERAL 1
08ec: 11                         ; ADD
08ed: 02                         ; FETCH
08ee: 0b 95 08 00 00             ; CALL DICT>NAME (0895)
08f3: 0c                         ; RET
;
08f4: 18 b2 f2 00 00             ; DICTP XT.GetDICTP (f2b2)
08f9: 06                         ; DUP
08fa: 0f                         ; CFETCH
08fb: 0e 18                      ; CLITERAL 24
08fd: 16                         ; EQ
08fe: 09 0c 09 00 00             ; JMPZ 090c
0903: 0e 01                      ; CLITERAL 1
0905: 11                         ; ADD
0906: 02                         ; FETCH
0907: 08 0e 09 00 00             ; JMP 090e
090c: 05                         ; DROP
090d: fe                         ; RESET
090e: 0c                         ; RET
;
090f: 18 95 f2 00 00             ; DICTP FLAGS.ISIMMEDIATE? (f295)
0914: 0e 01                      ; CLITERAL 1
0916: 24                         ; AND
0917: 0c                         ; RET
;
0918: 18 7b f2 00 00             ; DICTP FLAGS.ISINLINE? (f27b)
091d: 0e 02                      ; CLITERAL 2
091f: 24                         ; AND
0920: 0c                         ; RET
;
0921: 18 5f f2 00 00             ; DICTP DICT.GetIMMEDIATE (f25f)
0926: 0b d9 08 00 00             ; CALL DICT.GetFLAGS (08d9)
092b: 0b 0f 09 00 00             ; CALL FLAGS.ISIMMEDIATE? (090f)
0930: 0c                         ; RET
;
0931: 18 46 f2 00 00             ; DICTP DICT.GetINLINE (f246)
0936: 0b d9 08 00 00             ; CALL DICT.GetFLAGS (08d9)
093b: 0b 18 09 00 00             ; CALL FLAGS.ISINLINE? (0918)
0940: 0c                         ; RET
;
0941: 18 31 f2 00 00             ; DICTP findInDict (f231)
0946: 0e 14                      ; CLITERAL 20
0948: 02                         ; FETCH
0949: 21                         ; DTOR
094a: 22                         ; RTOD
094b: 06                         ; DUP
094c: 21                         ; DTOR
094d: 06                         ; DUP
094e: 09 79 09 00 00             ; JMPZ 0979
0953: 0b 95 08 00 00             ; CALL DICT>NAME (0895)
0958: 0e 01                      ; CLITERAL 1
095a: 11                         ; ADD
095b: 1a                         ; OVER
095c: 28                         ; COMPAREI
095d: 09 74 09 00 00             ; JMPZ 0974
0962: 05                         ; DROP
0963: 22                         ; RTOD
0964: 06                         ; DUP
0965: 21                         ; DTOR
0966: 0b cd 08 00 00             ; CALL DICT.GetXT (08cd)
096b: 22                         ; RTOD
096c: 0b d9 08 00 00             ; CALL DICT.GetFLAGS (08d9)
0971: 0e 01                      ; CLITERAL 1
0973: 0c                         ; RET
0974: 08 81 09 00 00             ; JMP 0981
0979: 05                         ; DROP
097a: 05                         ; DROP
097b: 22                         ; RTOD
097c: 0e 00                      ; CLITERAL 0
097e: 0e 00                      ; CLITERAL 0
0980: 0c                         ; RET
0981: 22                         ; RTOD
0982: 02                         ; FETCH
0983: 21                         ; DTOR
0984: 08 4a 09 00 00             ; JMP 094a
0989: 0c                         ; RET
;
098a: 18 20 f2 00 00             ; DICTP isHEX? (f220)
098f: 0e 06                      ; CLITERAL 6
0991: 0f                         ; CFETCH
0992: 0e 10                      ; CLITERAL 16
0994: 16                         ; EQ
0995: 0c                         ; RET
;
0996: 18 0b f2 00 00             ; DICTP isNumChar? (f20b)
099b: 06                         ; DUP
099c: 0e 30                      ; CLITERAL 48
099e: 0e 39                      ; CLITERAL 57
09a0: 0b 91 07 00 00             ; CALL BETWEEN (0791)
09a5: 09 b0 09 00 00             ; JMPZ 09b0
09aa: 0e 30                      ; CLITERAL 48
09ac: 12                         ; SUB
09ad: 0e 01                      ; CLITERAL 1
09af: 0c                         ; RET
09b0: 0b 8a 09 00 00             ; CALL isHEX? (098a)
09b5: 09 e4 09 00 00             ; JMPZ 09e4
09ba: 06                         ; DUP
09bb: 0e 41                      ; CLITERAL 65
09bd: 0e 46                      ; CLITERAL 70
09bf: 0b 91 07 00 00             ; CALL BETWEEN (0791)
09c4: 09 cf 09 00 00             ; JMPZ 09cf
09c9: 0e 37                      ; CLITERAL 55
09cb: 12                         ; SUB
09cc: 0e 01                      ; CLITERAL 1
09ce: 0c                         ; RET
09cf: 06                         ; DUP
09d0: 0e 61                      ; CLITERAL 97
09d2: 0e 66                      ; CLITERAL 102
09d4: 0b 91 07 00 00             ; CALL BETWEEN (0791)
09d9: 09 e4 09 00 00             ; JMPZ 09e4
09de: 0e 57                      ; CLITERAL 87
09e0: 12                         ; SUB
09e1: 0e 01                      ; CLITERAL 1
09e3: 0c                         ; RET
09e4: 0e 00                      ; CLITERAL 0
09e6: 0c                         ; RET
;
09e7: 18 fa f1 00 00             ; DICTP NEGATE (f1fa)
09ec: 0e 00                      ; CLITERAL 0
09ee: 04                         ; SWAP
09ef: 12                         ; SUB
09f0: 0c                         ; RET
;
09f1: 18 ec f1 00 00             ; DICTP ABS (f1ec)
09f6: 06                         ; DUP
09f7: 0e 00                      ; CLITERAL 0
09f9: 15                         ; LT
09fa: 09 04 0a 00 00             ; JMPZ 0a04
09ff: 0b e7 09 00 00             ; CALL NEGATE (09e7)
0a04: 0c                         ; RET
;
0a05: 18 d8 f1 00 00             ; DICTP isNumber? (f1d8)
0a0a: 06                         ; DUP
0a0b: 0f                         ; CFETCH
0a0c: 0e 2d                      ; CLITERAL 45
0a0e: 16                         ; EQ
0a0f: 06                         ; DUP
0a10: 0b 36 05 00 00             ; CALL isNeg (0536)
0a15: 10                         ; CSTORE
0a16: 09 1e 0a 00 00             ; JMPZ 0a1e
0a1b: 0e 01                      ; CLITERAL 1
0a1d: 11                         ; ADD
0a1e: 0e 00                      ; CLITERAL 0
0a20: 21                         ; DTOR
0a21: 06                         ; DUP
0a22: 0f                         ; CFETCH
0a23: 06                         ; DUP
0a24: 0e 00                      ; CLITERAL 0
0a26: 16                         ; EQ
0a27: 09 42 0a 00 00             ; JMPZ 0a42
0a2c: 05                         ; DROP
0a2d: 05                         ; DROP
0a2e: 22                         ; RTOD
0a2f: 0b 36 05 00 00             ; CALL isNeg (0536)
0a34: 0f                         ; CFETCH
0a35: 09 3f 0a 00 00             ; JMPZ 0a3f
0a3a: 0b e7 09 00 00             ; CALL NEGATE (09e7)
0a3f: 0e 01                      ; CLITERAL 1
0a41: 0c                         ; RET
0a42: 0b 96 09 00 00             ; CALL isNumChar? (0996)
0a47: 09 5b 0a 00 00             ; JMPZ 0a5b
0a4c: 22                         ; RTOD
0a4d: 0e 06                      ; CLITERAL 6
0a4f: 0f                         ; CFETCH
0a50: 13                         ; MUL
0a51: 11                         ; ADD
0a52: 21                         ; DTOR
0a53: 0e 01                      ; CLITERAL 1
0a55: 11                         ; ADD
0a56: 08 60 0a 00 00             ; JMP 0a60
0a5b: 05                         ; DROP
0a5c: 22                         ; RTOD
0a5d: 0e 00                      ; CLITERAL 0
0a5f: 0c                         ; RET
0a60: 08 21 0a 00 00             ; JMP 0a21
0a65: 0c                         ; RET
;
0a66: 18 ca f1 00 00             ; DICTP MOD (f1ca)
0a6b: 1a                         ; OVER
0a6c: 1a                         ; OVER
0a6d: 14                         ; DIV
0a6e: 13                         ; MUL
0a6f: 12                         ; SUB
0a70: 0c                         ; RET
;
0a71: 18 bb f1 00 00             ; DICTP /MOD (f1bb)
0a76: 1a                         ; OVER
0a77: 1a                         ; OVER
0a78: 14                         ; DIV
0a79: 06                         ; DUP
0a7a: 21                         ; DTOR
0a7b: 13                         ; MUL
0a7c: 12                         ; SUB
0a7d: 22                         ; RTOD
0a7e: 04                         ; SWAP
0a7f: 0c                         ; RET
;
0a80: 18 ad f1 00 00             ; DICTP (.) (f1ad)
0a85: 06                         ; DUP
0a86: 0e 00                      ; CLITERAL 0
0a88: 16                         ; EQ
0a89: 09 93 0a 00 00             ; JMPZ 0a93
0a8e: 05                         ; DROP
0a8f: 0e 30                      ; CLITERAL 48
0a91: 19                         ; EMIT
0a92: 0c                         ; RET
0a93: 06                         ; DUP
0a94: 0e 00                      ; CLITERAL 0
0a96: 15                         ; LT
0a97: 09 a8 0a 00 00             ; JMPZ 0aa8
0a9c: 0b e7 09 00 00             ; CALL NEGATE (09e7)
0aa1: 0e 01                      ; CLITERAL 1
0aa3: 08 aa 0a 00 00             ; JMP 0aaa
0aa8: 0e 00                      ; CLITERAL 0
0aaa: 21                         ; DTOR
0aab: 0e 00                      ; CLITERAL 0
0aad: 04                         ; SWAP
0aae: 06                         ; DUP
0aaf: 09 d1 0a 00 00             ; JMPZ 0ad1
0ab4: 0e 06                      ; CLITERAL 6
0ab6: 0f                         ; CFETCH
0ab7: 0b 71 0a 00 00             ; CALL /MOD (0a71)
0abc: 0e 30                      ; CLITERAL 48
0abe: 1a                         ; OVER
0abf: 0e 09                      ; CLITERAL 9
0ac1: 17                         ; GT
0ac2: 09 ca 0a 00 00             ; JMPZ 0aca
0ac7: 0e 07                      ; CLITERAL 7
0ac9: 11                         ; ADD
0aca: 11                         ; ADD
0acb: 04                         ; SWAP
0acc: 08 ee 0a 00 00             ; JMP 0aee
0ad1: 05                         ; DROP
0ad2: 22                         ; RTOD
0ad3: 09 db 0a 00 00             ; JMPZ 0adb
0ad8: 0e 2d                      ; CLITERAL 45
0ada: 19                         ; EMIT
0adb: 06                         ; DUP
0adc: 09 e7 0a 00 00             ; JMPZ 0ae7
0ae1: 19                         ; EMIT
0ae2: 08 e9 0a 00 00             ; JMP 0ae9
0ae7: 05                         ; DROP
0ae8: 0c                         ; RET
0ae9: 08 db 0a 00 00             ; JMP 0adb
0aee: 08 ae 0a 00 00             ; JMP 0aae
0af3: 0c                         ; RET
;
0af4: 18 a1 f1 00 00             ; DICTP . (f1a1)
0af9: 0e 20                      ; CLITERAL 32
0afb: 19                         ; EMIT
0afc: 0b 80 0a 00 00             ; CALL (.) (0a80)
0b01: 0c                         ; RET
;
0b02: 18 92 f1 00 00             ; DICTP HEX. (f192)
0b07: 0e 06                      ; CLITERAL 6
0b09: 0f                         ; CFETCH
0b0a: 04                         ; SWAP
0b0b: 0b 6a 04 00 00             ; CALL HEX (046a)
0b10: 06                         ; DUP
0b11: 0e 10                      ; CLITERAL 16
0b13: 15                         ; LT
0b14: 09 1c 0b 00 00             ; JMPZ 0b1c
0b19: 0e 30                      ; CLITERAL 48
0b1b: 19                         ; EMIT
0b1c: 0b 80 0a 00 00             ; CALL (.) (0a80)
0b21: 0e 06                      ; CLITERAL 6
0b23: 10                         ; CSTORE
0b24: 0c                         ; RET
;
0b25: 18 7f f1 00 00             ; DICTP DECIMAL. (f17f)
0b2a: 0e 06                      ; CLITERAL 6
0b2c: 0f                         ; CFETCH
0b2d: 04                         ; SWAP
0b2e: 0b 75 04 00 00             ; CALL DECIMAL (0475)
0b33: 0b 80 0a 00 00             ; CALL (.) (0a80)
0b38: 0e 06                      ; CLITERAL 6
0b3a: 10                         ; CSTORE
0b3b: 0c                         ; RET
;
0b3c: 18 6d f1 00 00             ; DICTP BINARY. (f16d)
0b41: 0e 06                      ; CLITERAL 6
0b43: 0f                         ; CFETCH
0b44: 04                         ; SWAP
0b45: 0b 8b 04 00 00             ; CALL BINARY (048b)
0b4a: 0b 80 0a 00 00             ; CALL (.) (0a80)
0b4f: 0e 06                      ; CLITERAL 6
0b51: 10                         ; CSTORE
0b52: 0c                         ; RET
;
0b53: 18 5f f1 00 00             ; DICTP MIN (f15f)
0b58: 1a                         ; OVER
0b59: 1a                         ; OVER
0b5a: 17                         ; GT
0b5b: 09 61 0b 00 00             ; JMPZ 0b61
0b60: 04                         ; SWAP
0b61: 05                         ; DROP
0b62: 0c                         ; RET
;
0b63: 18 51 f1 00 00             ; DICTP MAX (f151)
0b68: 1a                         ; OVER
0b69: 1a                         ; OVER
0b6a: 15                         ; LT
0b6b: 09 71 0b 00 00             ; JMPZ 0b71
0b70: 04                         ; SWAP
0b71: 05                         ; DROP
0b72: 0c                         ; RET
;
0b73: 18 44 f1 00 00             ; DICTP .S (f144)
0b78: 0e 20                      ; CLITERAL 32
0b7a: 19                         ; EMIT
0b7b: 26                         ; DEPTH
0b7c: 0e 00                      ; CLITERAL 0
0b7e: 15                         ; LT
0b7f: 09 a2 0b 00 00             ; JMPZ 0ba2
0b84: 07 10 53 74 61 63 6b 20 75 6e 64 65 72 66 6c 6f 77 21 00 ; SLITERAL (0b85) [Stack underflow!]
0b97: 0b d9 06 00 00             ; CALL COUNT (06d9)
0b9c: 0b e5 06 00 00             ; CALL TYPE (06e5)
0ba1: fe                         ; RESET
0ba2: 26                         ; DEPTH
0ba3: 0e 00                      ; CLITERAL 0
0ba5: 16                         ; EQ
0ba6: 09 b5 0b 00 00             ; JMPZ 0bb5
0bab: 0e 28                      ; CLITERAL 40
0bad: 19                         ; EMIT
0bae: 0e ed                      ; CLITERAL 237
0bb0: 19                         ; EMIT
0bb1: 0e 29                      ; CLITERAL 41
0bb3: 19                         ; EMIT
0bb4: 0c                         ; RET
0bb5: 0e 28                      ; CLITERAL 40
0bb7: 19                         ; EMIT
0bb8: 26                         ; DEPTH
0bb9: 0e 01                      ; CLITERAL 1
0bbb: 12                         ; SUB
0bbc: 21                         ; DTOR
0bbd: 22                         ; RTOD
0bbe: 06                         ; DUP
0bbf: 21                         ; DTOR
0bc0: 25                         ; PICK
0bc1: 0b f4 0a 00 00             ; CALL . (0af4)
0bc6: 22                         ; RTOD
0bc7: 06                         ; DUP
0bc8: 21                         ; DTOR
0bc9: 09 d8 0b 00 00             ; JMPZ 0bd8
0bce: 22                         ; RTOD
0bcf: 0e 01                      ; CLITERAL 1
0bd1: 12                         ; SUB
0bd2: 21                         ; DTOR
0bd3: 08 e1 0b 00 00             ; JMP 0be1
0bd8: 22                         ; RTOD
0bd9: 05                         ; DROP
0bda: 0e 20                      ; CLITERAL 32
0bdc: 19                         ; EMIT
0bdd: 0e 29                      ; CLITERAL 41
0bdf: 19                         ; EMIT
0be0: 0c                         ; RET
0be1: 08 bd 0b 00 00             ; JMP 0bbd
0be6: 0c                         ; RET
;
0be7: 18 30 f1 00 00             ; DICTP .(MEM_SZ) (f130)
0bec: 07 08 4d 65 6d 6f 72 79 3a 20 00 ; SLITERAL (0bed) [Memory: ]
0bf7: 0b 07 07 00 00             ; CALL CT (0707)
0bfc: 0b 46 05 00 00             ; CALL MEM_SZ (0546)
0c01: 06                         ; DUP
0c02: 0b 02 0b 00 00             ; CALL HEX. (0b02)
0c07: 07 02 20 28 00             ; SLITERAL (0c08) [ (]
0c0c: 0b 07 07 00 00             ; CALL CT (0707)
0c11: 0b 80 0a 00 00             ; CALL (.) (0a80)
0c16: 07 01 29 00                ; SLITERAL (0c17) [)]
0c1a: 0b 07 07 00 00             ; CALL CT (0707)
0c1f: 0c                         ; RET
;
0c20: 18 1e f1 00 00             ; DICTP .(HERE) (f11e)
0c25: 07 06 48 45 52 45 3a 20 00 ; SLITERAL (0c26) [HERE: ]
0c2e: 0b 07 07 00 00             ; CALL CT (0707)
0c33: 0e 10                      ; CLITERAL 16
0c35: 02                         ; FETCH
0c36: 06                         ; DUP
0c37: 0b 02 0b 00 00             ; CALL HEX. (0b02)
0c3c: 07 02 20 28 00             ; SLITERAL (0c3d) [ (]
0c41: 0b 07 07 00 00             ; CALL CT (0707)
0c46: 0b 80 0a 00 00             ; CALL (.) (0a80)
0c4b: 07 01 29 00                ; SLITERAL (0c4c) [)]
0c4f: 0b 07 07 00 00             ; CALL CT (0707)
0c54: 0c                         ; RET
;
0c55: 18 0c f1 00 00             ; DICTP .(LAST) (f10c)
0c5a: 07 06 4c 41 53 54 3a 20 00 ; SLITERAL (0c5b) [LAST: ]
0c63: 0b 07 07 00 00             ; CALL CT (0707)
0c68: 0e 14                      ; CLITERAL 20
0c6a: 02                         ; FETCH
0c6b: 06                         ; DUP
0c6c: 0b 02 0b 00 00             ; CALL HEX. (0b02)
0c71: 07 02 20 28 00             ; SLITERAL (0c72) [ (]
0c76: 0b 07 07 00 00             ; CALL CT (0707)
0c7b: 0b 80 0a 00 00             ; CALL (.) (0a80)
0c80: 07 01 29 00                ; SLITERAL (0c81) [)]
0c84: 0b 07 07 00 00             ; CALL CT (0707)
0c89: 0c                         ; RET
;
0c8a: 18 f6 f0 00 00             ; DICTP .WORD-SHORT (f0f6)
0c8f: 06                         ; DUP
0c90: 0b 95 08 00 00             ; CALL DICT>NAME (0895)
0c95: 0b 07 07 00 00             ; CALL CT (0707)
0c9a: 0e 20                      ; CLITERAL 32
0c9c: 19                         ; EMIT
0c9d: 02                         ; FETCH
0c9e: 0c                         ; RET
;
0c9f: 18 e6 f0 00 00             ; DICTP WORDS (f0e6)
0ca4: 0e 14                      ; CLITERAL 20
0ca6: 02                         ; FETCH
0ca7: 06                         ; DUP
0ca8: 02                         ; FETCH
0ca9: 0e 00                      ; CLITERAL 0
0cab: 16                         ; EQ
0cac: 09 b9 0c 00 00             ; JMPZ 0cb9
0cb1: 05                         ; DROP
0cb2: 0e 0d                      ; CLITERAL 13
0cb4: 19                         ; EMIT
0cb5: 0e 0a                      ; CLITERAL 10
0cb7: 19                         ; EMIT
0cb8: 0c                         ; RET
0cb9: 0b 8a 0c 00 00             ; CALL .WORD-SHORT (0c8a)
0cbe: 08 a7 0c 00 00             ; JMP 0ca7
0cc3: 0c                         ; RET
;
0cc4: 18 d1 f0 00 00             ; DICTP .WORD-LONG (f0d1)
0cc9: 06                         ; DUP
0cca: 0b 02 0b 00 00             ; CALL HEX. (0b02)
0ccf: 0e 3a                      ; CLITERAL 58
0cd1: 19                         ; EMIT
0cd2: 0e 20                      ; CLITERAL 32
0cd4: 19                         ; EMIT
0cd5: 06                         ; DUP
0cd6: 0b 95 08 00 00             ; CALL DICT>NAME (0895)
0cdb: 0b 07 07 00 00             ; CALL CT (0707)
0ce0: 0e 20                      ; CLITERAL 32
0ce2: 19                         ; EMIT
0ce3: 06                         ; DUP
0ce4: 0b cd 08 00 00             ; CALL DICT.GetXT (08cd)
0ce9: 0e 28                      ; CLITERAL 40
0ceb: 19                         ; EMIT
0cec: 0b 02 0b 00 00             ; CALL HEX. (0b02)
0cf1: 0e 29                      ; CLITERAL 41
0cf3: 19                         ; EMIT
0cf4: 06                         ; DUP
0cf5: 0b 89 08 00 00             ; CALL DICT>FLAGS (0889)
0cfa: 0f                         ; CFETCH
0cfb: 06                         ; DUP
0cfc: 07 09 2c 20 46 6c 61 67 73 3a 20 00 ; SLITERAL (0cfd) [, Flags: ]
0d08: 0b 07 07 00 00             ; CALL CT (0707)
0d0d: 0b 02 0b 00 00             ; CALL HEX. (0b02)
0d12: 06                         ; DUP
0d13: 0b 18 09 00 00             ; CALL FLAGS.ISINLINE? (0918)
0d18: 09 2e 0d 00 00             ; JMPZ 0d2e
0d1d: 07 09 20 28 49 4e 4c 49 4e 45 29 00 ; SLITERAL (0d1e) [ (INLINE)]
0d29: 0b 07 07 00 00             ; CALL CT (0707)
0d2e: 0b 0f 09 00 00             ; CALL FLAGS.ISIMMEDIATE? (090f)
0d33: 09 4c 0d 00 00             ; JMPZ 0d4c
0d38: 07 0c 20 28 49 4d 4d 45 44 49 41 54 45 29 00 ; SLITERAL (0d39) [ (IMMEDIATE)]
0d47: 0b 07 07 00 00             ; CALL CT (0707)
0d4c: 0e 0d                      ; CLITERAL 13
0d4e: 19                         ; EMIT
0d4f: 0e 0a                      ; CLITERAL 10
0d51: 19                         ; EMIT
0d52: 02                         ; FETCH
0d53: 0c                         ; RET
;
0d54: 18 c0 f0 00 00             ; DICTP WORDSV (f0c0)
0d59: 0b 55 0c 00 00             ; CALL .(LAST) (0c55)
0d5e: 0e 0d                      ; CLITERAL 13
0d60: 19                         ; EMIT
0d61: 0e 0a                      ; CLITERAL 10
0d63: 19                         ; EMIT
0d64: 0e 14                      ; CLITERAL 20
0d66: 02                         ; FETCH
0d67: 06                         ; DUP
0d68: 02                         ; FETCH
0d69: 0e 00                      ; CLITERAL 0
0d6b: 16                         ; EQ
0d6c: 09 79 0d 00 00             ; JMPZ 0d79
0d71: 05                         ; DROP
0d72: 0e 0d                      ; CLITERAL 13
0d74: 19                         ; EMIT
0d75: 0e 0a                      ; CLITERAL 10
0d77: 19                         ; EMIT
0d78: 0c                         ; RET
0d79: 0b c4 0c 00 00             ; CALL .WORD-LONG (0cc4)
0d7e: 08 67 0d 00 00             ; JMP 0d67
0d83: 0c                         ; RET
;
0d84: 18 ac f0 00 00             ; DICTP NUM-WORDS (f0ac)
0d89: 0e 00                      ; CLITERAL 0
0d8b: 21                         ; DTOR
0d8c: 0e 14                      ; CLITERAL 20
0d8e: 02                         ; FETCH
0d8f: 06                         ; DUP
0d90: 02                         ; FETCH
0d91: 0e 00                      ; CLITERAL 0
0d93: 16                         ; EQ
0d94: 09 a2 0d 00 00             ; JMPZ 0da2
0d99: 05                         ; DROP
0d9a: 22                         ; RTOD
0d9b: 0e 0d                      ; CLITERAL 13
0d9d: 19                         ; EMIT
0d9e: 0e 0a                      ; CLITERAL 10
0da0: 19                         ; EMIT
0da1: 0c                         ; RET
0da2: 22                         ; RTOD
0da3: 0e 01                      ; CLITERAL 1
0da5: 11                         ; ADD
0da6: 21                         ; DTOR
0da7: 02                         ; FETCH
0da8: 08 8f 0d 00 00             ; JMP 0d8f
0dad: 0c                         ; RET
;
0dae: 18 9b f0 00 00             ; DICTP .lastx (f09b)
0db3: 0e 0d                      ; CLITERAL 13
0db5: 19                         ; EMIT
0db6: 0e 0a                      ; CLITERAL 10
0db8: 19                         ; EMIT
0db9: 0e 14                      ; CLITERAL 20
0dbb: 02                         ; FETCH
0dbc: 04                         ; SWAP
0dbd: 0e 00                      ; CLITERAL 0
0dbf: 1a                         ; OVER
0dc0: 1a                         ; OVER
0dc1: 17                         ; GT
0dc2: 09 dc 0d 00 00             ; JMPZ 0ddc
0dc7: 21                         ; DTOR
0dc8: 04                         ; SWAP
0dc9: 22                         ; RTOD
0dca: 04                         ; SWAP
0dcb: 0b c4 0c 00 00             ; CALL .WORD-LONG (0cc4)
0dd0: 04                         ; SWAP
0dd1: 21                         ; DTOR
0dd2: 04                         ; SWAP
0dd3: 22                         ; RTOD
0dd4: 0e 01                      ; CLITERAL 1
0dd6: 11                         ; ADD
0dd7: 08 e0 0d 00 00             ; JMP 0de0
0ddc: 05                         ; DROP
0ddd: 05                         ; DROP
0dde: 05                         ; DROP
0ddf: 0c                         ; RET
0de0: 08 bf 0d 00 00             ; JMP 0dbf
0de5: 0c                         ; RET
;
0de6: 18 89 f0 00 00             ; DICTP EXECUTE (f089)
0deb: 22                         ; RTOD
0dec: 05                         ; DROP
0ded: 21                         ; DTOR
0dee: 0c                         ; RET
;
0def: 18 76 f0 00 00             ; DICTP find.ret (f076)
0df4: 06                         ; DUP
0df5: 0f                         ; CFETCH
0df6: 0e 0c                      ; CLITERAL 12
0df8: 16                         ; EQ
0df9: 09 ff 0d 00 00             ; JMPZ 0dff
0dfe: 0c                         ; RET
0dff: 0e 01                      ; CLITERAL 1
0e01: 11                         ; ADD
0e02: 08 f4 0d 00 00             ; JMP 0df4
0e07: 0c                         ; RET
;
0e08: 18 63 f0 00 00             ; DICTP (inline) (f063)
0e0d: 1a                         ; OVER
0e0e: 1a                         ; OVER
0e0f: 15                         ; LT
0e10: 09 16 0e 00 00             ; JMPZ 0e16
0e15: 04                         ; SWAP
0e16: 06                         ; DUP
0e17: 0f                         ; CFETCH
0e18: 0b 70 00 00 00             ; CALL C, (0070)
0e1d: 0e 01                      ; CLITERAL 1
0e1f: 11                         ; ADD
0e20: 1a                         ; OVER
0e21: 1a                         ; OVER
0e22: 17                         ; GT
0e23: 0a 16 0e 00 00             ; JMPNZ 0e16
0e28: 05                         ; DROP
0e29: 05                         ; DROP
0e2a: 0c                         ; RET
;
0e2b: 18 53 f0 00 00             ; DICTP DOES> (f053)
0e30: 22                         ; RTOD
0e31: 06                         ; DUP
0e32: 0b ef 0d 00 00             ; CALL find.ret (0def)
0e37: 06                         ; DUP
0e38: 21                         ; DTOR
0e39: 0e 01                      ; CLITERAL 1
0e3b: 11                         ; ADD
0e3c: 0b 08 0e 00 00             ; CALL (inline) (0e08)
0e41: 0c                         ; RET
;
0e42: 18 3d f0 00 00             ; DICTP Copy.INLINE (f03d)
0e47: 06                         ; DUP
0e48: 0f                         ; CFETCH
0e49: 0e 18                      ; CLITERAL 24
0e4b: 16                         ; EQ
0e4c: 09 57 0e 00 00             ; JMPZ 0e57
0e51: 0e 01                      ; CLITERAL 1
0e53: 11                         ; ADD
0e54: 0e 04                      ; CLITERAL 4
0e56: 11                         ; ADD
0e57: 06                         ; DUP
0e58: 0b ef 0d 00 00             ; CALL find.ret (0def)
0e5d: 0b 08 0e 00 00             ; CALL (inline) (0e08)
0e62: 0c                         ; RET
;
0e63: 18 2c f0 00 00             ; DICTP strlen (f02c)
0e68: 0e 00                      ; CLITERAL 0
0e6a: 04                         ; SWAP
0e6b: 04                         ; SWAP
0e6c: 1a                         ; OVER
0e6d: 0f                         ; CFETCH
0e6e: 06                         ; DUP
0e6f: 09 7e 0e 00 00             ; JMPZ 0e7e
0e74: 05                         ; DROP
0e75: 0e 01                      ; CLITERAL 1
0e77: 11                         ; ADD
0e78: 04                         ; SWAP
0e79: 0e 01                      ; CLITERAL 1
0e7b: 11                         ; ADD
0e7c: 0e 01                      ; CLITERAL 1
0e7e: 0a 6b 0e 00 00             ; JMPNZ 0e6b
0e83: 04                         ; SWAP
0e84: 05                         ; DROP
0e85: 0c                         ; RET
;
0e86: 18 1c f0 00 00             ; DICTP cstr, (f01c)
0e8b: 06                         ; DUP
0e8c: 0f                         ; CFETCH
0e8d: 1a                         ; OVER
0e8e: 11                         ; ADD
0e8f: 0e 01                      ; CLITERAL 1
0e91: 11                         ; ADD
0e92: 0e 01                      ; CLITERAL 1
0e94: 11                         ; ADD
0e95: 0b 08 0e 00 00             ; CALL (inline) (0e08)
0e9a: 0c                         ; RET
;
0e9b: 18 08 f0 00 00             ; DICTP [COMPILE] (f008)
0ea0: 0b 18 09 00 00             ; CALL FLAGS.ISINLINE? (0918)
0ea5: 09 b4 0e 00 00             ; JMPZ 0eb4
0eaa: 0b 42 0e 00 00             ; CALL Copy.INLINE (0e42)
0eaf: 08 c0 0e 00 00             ; JMP 0ec0
0eb4: 0e 0b                      ; CLITERAL 11
0eb6: 0b 70 00 00 00             ; CALL C, (0070)
0ebb: 0b 2c 04 00 00             ; CALL , (042c)
0ec0: 0c                         ; RET
;
0ec1: 18 f2 ef 00 00             ; DICTP executeWord (eff2)
0ec6: 21                         ; DTOR
0ec7: 22                         ; RTOD
0ec8: 06                         ; DUP
0ec9: 21                         ; DTOR
0eca: 0b 41 09 00 00             ; CALL findInDict (0941)
0ecf: 09 0b 0f 00 00             ; JMPZ 0f0b
0ed4: 22                         ; RTOD
0ed5: 05                         ; DROP
0ed6: 0b c0 04 00 00             ; CALL ?COMPILING (04c0)
0edb: 09 00 0f 00 00             ; JMPZ 0f00
0ee0: 06                         ; DUP
0ee1: 0b 0f 09 00 00             ; CALL FLAGS.ISIMMEDIATE? (090f)
0ee6: 09 f6 0e 00 00             ; JMPZ 0ef6
0eeb: 05                         ; DROP
0eec: 0b e6 0d 00 00             ; CALL EXECUTE (0de6)
0ef1: 08 fb 0e 00 00             ; JMP 0efb
0ef6: 0b 9b 0e 00 00             ; CALL [COMPILE] (0e9b)
0efb: 08 06 0f 00 00             ; JMP 0f06
0f00: 05                         ; DROP
0f01: 0b e6 0d 00 00             ; CALL EXECUTE (0de6)
0f06: 08 63 0f 00 00             ; JMP 0f63
0f0b: 05                         ; DROP
0f0c: 05                         ; DROP
0f0d: 22                         ; RTOD
0f0e: 06                         ; DUP
0f0f: 21                         ; DTOR
0f10: 0b 05 0a 00 00             ; CALL isNumber? (0a05)
0f15: 09 55 0f 00 00             ; JMPZ 0f55
0f1a: 0b c0 04 00 00             ; CALL ?COMPILING (04c0)
0f1f: 09 50 0f 00 00             ; JMPZ 0f50
0f24: 06                         ; DUP
0f25: 0e 00                      ; CLITERAL 0
0f27: 0e ff                      ; CLITERAL 255
0f29: 0b 91 07 00 00             ; CALL BETWEEN (0791)
0f2e: 09 44 0f 00 00             ; JMPZ 0f44
0f33: 0e 0e                      ; CLITERAL 14
0f35: 0b 70 00 00 00             ; CALL C, (0070)
0f3a: 0b 70 00 00 00             ; CALL C, (0070)
0f3f: 08 50 0f 00 00             ; JMP 0f50
0f44: 0e 01                      ; CLITERAL 1
0f46: 0b 70 00 00 00             ; CALL C, (0070)
0f4b: 0b 2c 04 00 00             ; CALL , (042c)
0f50: 08 61 0f 00 00             ; JMP 0f61
0f55: 05                         ; DROP
0f56: 07 02 3f 3f 00             ; SLITERAL (0f57) [??]
0f5b: 0b 07 07 00 00             ; CALL CT (0707)
0f60: fe                         ; RESET
0f61: 22                         ; RTOD
0f62: 05                         ; DROP
0f63: 0c                         ; RET
;
0f64: 18 db ef 00 00             ; DICTP executeInput (efdb)
0f69: 0b 26 05 00 00             ; CALL >IN (0526)
0f6e: 02                         ; FETCH
0f6f: 0b 13 08 00 00             ; CALL skipWS (0813)
0f74: 0b 26 05 00 00             ; CALL >IN (0526)
0f79: 03                         ; STORE
0f7a: 0b 26 05 00 00             ; CALL >IN (0526)
0f7f: 02                         ; FETCH
0f80: 0f                         ; CFETCH
0f81: 09 a1 0f 00 00             ; JMPZ 0fa1
0f86: 0b 26 05 00 00             ; CALL >IN (0526)
0f8b: 02                         ; FETCH
0f8c: 0b 3e 08 00 00             ; CALL getOneWord (083e)
0f91: 0b 26 05 00 00             ; CALL >IN (0526)
0f96: 03                         ; STORE
0f97: 0b c1 0e 00 00             ; CALL executeWord (0ec1)
0f9c: 08 a2 0f 00 00             ; JMP 0fa2
0fa1: 0c                         ; RET
0fa2: 08 69 0f 00 00             ; JMP 0f69
0fa7: 0c                         ; RET
;
0fa8: 18 cd ef 00 00             ; DICTP Pad (efcd)
0fad: 0e 14                      ; CLITERAL 20
0faf: 02                         ; FETCH
0fb0: 0e c8                      ; CLITERAL 200
0fb2: 12                         ; SUB
0fb3: 06                         ; DUP
0fb4: 0e 10                      ; CLITERAL 16
0fb6: 02                         ; FETCH
0fb7: 15                         ; LT
0fb8: 09 cf 0f 00 00             ; JMPZ 0fcf
0fbd: 07 0e 4f 75 74 20 6f 66 20 4d 65 6d 6f 72 79 21 00 ; SLITERAL (0fbe) [Out of Memory!]
0fce: fe                         ; RESET
0fcf: 0c                         ; RET
;
0fd0: 18 b2 ef 00 00             ; DICTP LoadingFromFile? (efb2)
0fd5: 0e 1c                      ; CLITERAL 28
0fd7: 02                         ; FETCH
0fd8: 0c                         ; RET
;
0fd9: 18 98 ef 00 00             ; DICTP getLineFromFile (ef98)
0fde: 0e c8                      ; CLITERAL 200
0fe0: 0e 1c                      ; CLITERAL 28
0fe2: 02                         ; FETCH
0fe3: 1e                         ; FREADLINE
0fe4: 0e 00                      ; CLITERAL 0
0fe6: 16                         ; EQ
0fe7: 09 f3 0f 00 00             ; JMPZ 0ff3
0fec: 0e 1c                      ; CLITERAL 28
0fee: 0b a0 04 00 00             ; CALL OFF (04a0)
0ff3: 0c                         ; RET
;
0ff4: 18 86 ef 00 00             ; DICTP getLine (ef86)
0ff9: 0e 00                      ; CLITERAL 0
0ffb: 0b a8 0f 00 00             ; CALL Pad (0fa8)
1000: 06                         ; DUP
1001: 0e 01                      ; CLITERAL 1
1003: 11                         ; ADD
1004: 0b 26 05 00 00             ; CALL >IN (0526)
1009: 03                         ; STORE
100a: 10                         ; CSTORE
100b: 0b d0 0f 00 00             ; CALL LoadingFromFile? (0fd0)
1010: 09 20 10 00 00             ; JMPZ 1020
1015: 0b a8 0f 00 00             ; CALL Pad (0fa8)
101a: 0b d9 0f 00 00             ; CALL getLineFromFile (0fd9)
101f: 0c                         ; RET
1020: 0e 00                      ; CLITERAL 0
1022: 0b 26 05 00 00             ; CALL >IN (0526)
1027: 02                         ; FETCH
1028: 10                         ; CSTORE
1029: 27                         ; GETCH
102a: 06                         ; DUP
102b: 0e 0d                      ; CLITERAL 13
102d: 16                         ; EQ
102e: 09 3d 10 00 00             ; JMPZ 103d
1033: 05                         ; DROP
1034: 0b a8 0f 00 00             ; CALL Pad (0fa8)
1039: 0e 20                      ; CLITERAL 32
103b: 19                         ; EMIT
103c: 0c                         ; RET
103d: 06                         ; DUP
103e: 0e 09                      ; CLITERAL 9
1040: 16                         ; EQ
1041: 09 49 10 00 00             ; JMPZ 1049
1046: 05                         ; DROP
1047: 0e 20                      ; CLITERAL 32
1049: 06                         ; DUP
104a: 0e 03                      ; CLITERAL 3
104c: 16                         ; EQ
104d: 09 53 10 00 00             ; JMPZ 1053
1052: ff                         ; BYE
1053: 06                         ; DUP
1054: 0e 08                      ; CLITERAL 8
1056: 16                         ; EQ
1057: 09 8f 10 00 00             ; JMPZ 108f
105c: 0b a8 0f 00 00             ; CALL Pad (0fa8)
1061: 0f                         ; CFETCH
1062: 0e 00                      ; CLITERAL 0
1064: 17                         ; GT
1065: 09 89 10 00 00             ; JMPZ 1089
106a: 0b a8 0f 00 00             ; CALL Pad (0fa8)
106f: 0b f6 05 00 00             ; CALL C-- (05f6)
1074: 0b 26 05 00 00             ; CALL >IN (0526)
1079: 0b dc 05 00 00             ; CALL -- (05dc)
107e: 06                         ; DUP
107f: 19                         ; EMIT
1080: 0e 20                      ; CLITERAL 32
1082: 19                         ; EMIT
1083: 19                         ; EMIT
1084: 08 8a 10 00 00             ; JMP 108a
1089: 05                         ; DROP
108a: 08 c1 10 00 00             ; JMP 10c1
108f: 06                         ; DUP
1090: 0e 20                      ; CLITERAL 32
1092: 0e 7f                      ; CLITERAL 127
1094: 0b 91 07 00 00             ; CALL BETWEEN (0791)
1099: 09 c0 10 00 00             ; JMPZ 10c0
109e: 06                         ; DUP
109f: 19                         ; EMIT
10a0: 0b 26 05 00 00             ; CALL >IN (0526)
10a5: 02                         ; FETCH
10a6: 10                         ; CSTORE
10a7: 0b 26 05 00 00             ; CALL >IN (0526)
10ac: 0b cf 05 00 00             ; CALL ++ (05cf)
10b1: 0b a8 0f 00 00             ; CALL Pad (0fa8)
10b6: 0b e9 05 00 00             ; CALL C++ (05e9)
10bb: 08 c1 10 00 00             ; JMP 10c1
10c0: 05                         ; DROP
10c1: 08 20 10 00 00             ; JMP 1020
10c6: 0c                         ; RET
;
10c7: 18 73 ef 00 00             ; DICTP strcpy2c (ef73)
10cc: 06                         ; DUP
10cd: 21                         ; DTOR
10ce: 0e 00                      ; CLITERAL 0
10d0: 1a                         ; OVER
10d1: 10                         ; CSTORE
10d2: 0e 01                      ; CLITERAL 1
10d4: 11                         ; ADD
10d5: 04                         ; SWAP
10d6: 06                         ; DUP
10d7: 0f                         ; CFETCH
10d8: 06                         ; DUP
10d9: 09 f7 10 00 00             ; JMPZ 10f7
10de: 0e 02                      ; CLITERAL 2
10e0: 25                         ; PICK
10e1: 10                         ; CSTORE
10e2: 04                         ; SWAP
10e3: 0e 01                      ; CLITERAL 1
10e5: 11                         ; ADD
10e6: 04                         ; SWAP
10e7: 0e 01                      ; CLITERAL 1
10e9: 11                         ; ADD
10ea: 22                         ; RTOD
10eb: 06                         ; DUP
10ec: 21                         ; DTOR
10ed: 0b e9 05 00 00             ; CALL C++ (05e9)
10f2: 08 00 11 00 00             ; JMP 1100
10f7: 21                         ; DTOR
10f8: 04                         ; SWAP
10f9: 22                         ; RTOD
10fa: 04                         ; SWAP
10fb: 10                         ; CSTORE
10fc: 05                         ; DROP
10fd: 22                         ; RTOD
10fe: 05                         ; DROP
10ff: 0c                         ; RET
1100: 08 d6 10 00 00             ; JMP 10d6
1105: 0c                         ; RET
;
1106: 18 5d ef 00 00             ; DICTP Define-Word (ef5d)
110b: 0e 14                      ; CLITERAL 20
110d: 02                         ; FETCH
110e: 1a                         ; OVER
110f: 0b 63 0e 00 00             ; CALL strlen (0e63)
1114: 0e 02                      ; CLITERAL 2
1116: 0e 04                      ; CLITERAL 4
1118: 13                         ; MUL
1119: 0e 03                      ; CLITERAL 3
111b: 11                         ; ADD
111c: 11                         ; ADD
111d: 12                         ; SUB
111e: 06                         ; DUP
111f: 21                         ; DTOR
1120: 21                         ; DTOR
1121: 0e 14                      ; CLITERAL 20
1123: 02                         ; FETCH
1124: 22                         ; RTOD
1125: 06                         ; DUP
1126: 21                         ; DTOR
1127: 03                         ; STORE
1128: 22                         ; RTOD
1129: 0e 04                      ; CLITERAL 4
112b: 11                         ; ADD
112c: 21                         ; DTOR
112d: 0e 10                      ; CLITERAL 16
112f: 02                         ; FETCH
1130: 22                         ; RTOD
1131: 06                         ; DUP
1132: 21                         ; DTOR
1133: 03                         ; STORE
1134: 22                         ; RTOD
1135: 0e 04                      ; CLITERAL 4
1137: 11                         ; ADD
1138: 21                         ; DTOR
1139: 0e 00                      ; CLITERAL 0
113b: 22                         ; RTOD
113c: 06                         ; DUP
113d: 21                         ; DTOR
113e: 10                         ; CSTORE
113f: 22                         ; RTOD
1140: 0e 01                      ; CLITERAL 1
1142: 11                         ; ADD
1143: 21                         ; DTOR
1144: 22                         ; RTOD
1145: 0b c7 10 00 00             ; CALL strcpy2c (10c7)
114a: 22                         ; RTOD
114b: 0e 14                      ; CLITERAL 20
114d: 03                         ; STORE
114e: 0c                         ; RET
;
114f: 18 47 ef 00 00             ; DICTP CREATE-NAME (ef47)
1154: 0b 26 05 00 00             ; CALL >IN (0526)
1159: 02                         ; FETCH
115a: 0b 13 08 00 00             ; CALL skipWS (0813)
115f: 0b 26 05 00 00             ; CALL >IN (0526)
1164: 03                         ; STORE
1165: 0b 26 05 00 00             ; CALL >IN (0526)
116a: 02                         ; FETCH
116b: 0f                         ; CFETCH
116c: 09 a4 11 00 00             ; JMPZ 11a4
1171: 0b 26 05 00 00             ; CALL >IN (0526)
1176: 02                         ; FETCH
1177: 0b 3e 08 00 00             ; CALL getOneWord (083e)
117c: 0b 26 05 00 00             ; CALL >IN (0526)
1181: 03                         ; STORE
1182: 06                         ; DUP
1183: 0f                         ; CFETCH
1184: 09 a2 11 00 00             ; JMPZ 11a2
1189: 0b 06 11 00 00             ; CALL Define-Word (1106)
118e: 0e 18                      ; CLITERAL 24
1190: 0b 70 00 00 00             ; CALL C, (0070)
1195: 0e 14                      ; CLITERAL 20
1197: 02                         ; FETCH
1198: 0b 2c 04 00 00             ; CALL , (042c)
119d: 08 a4 11 00 00             ; JMP 11a4
11a2: 05                         ; DROP
11a3: fe                         ; RESET
11a4: 0c                         ; RET
;
11a5: 18 3b ef 00 00             ; DICTP : (ef3b)
11aa: 0b 4f 11 00 00             ; CALL CREATE-NAME (114f)
11af: 0e 20                      ; CLITERAL 32
11b1: 0b 96 04 00 00             ; CALL ON (0496)
11b6: 0c                         ; RET
;
11b7: 18 29 ef 00 00             ; DICTP :NONAME (ef29)
11bc: 0e 10                      ; CLITERAL 16
11be: 02                         ; FETCH
11bf: 0e 20                      ; CLITERAL 32
11c1: 0b 96 04 00 00             ; CALL ON (0496)
11c6: 0c                         ; RET
;
11c7: 18 1d ef 00 00             ; DICTP ; (ef1d)
11cc: 0e 0c                      ; CLITERAL 12
11ce: 0b 70 00 00 00             ; CALL C, (0070)
11d3: 0e 20                      ; CLITERAL 32
11d5: 0b a0 04 00 00             ; CALL OFF (04a0)
11da: 0c                         ; RET
;
11db: 18 08 ef 00 00             ; DICTP ForgetLast (ef08)
11e0: 0e 14                      ; CLITERAL 20
11e2: 02                         ; FETCH
11e3: 0e 04                      ; CLITERAL 4
11e5: 11                         ; ADD
11e6: 02                         ; FETCH
11e7: 0e 10                      ; CLITERAL 16
11e9: 03                         ; STORE
11ea: 0e 14                      ; CLITERAL 20
11ec: 02                         ; FETCH
11ed: 02                         ; FETCH
11ee: 0e 14                      ; CLITERAL 20
11f0: 03                         ; STORE
11f1: 0c                         ; RET
;
11f2: 18 f3 ee 00 00             ; DICTP resetState (eef3)
11f7: 0b c0 04 00 00             ; CALL ?COMPILING (04c0)
11fc: 09 06 12 00 00             ; JMPZ 1206
1201: 0b db 11 00 00             ; CALL ForgetLast (11db)
1206: 0e 20                      ; CLITERAL 32
1208: 0b a0 04 00 00             ; CALL OFF (04a0)
120d: 0b 75 04 00 00             ; CALL DECIMAL (0475)
1212: 0c                         ; RET
;
1213: 18 e3 ee 00 00             ; DICTP ALLOT (eee3)
1218: 0e 10                      ; CLITERAL 16
121a: 02                         ; FETCH
121b: 11                         ; ADD
121c: 0e 10                      ; CLITERAL 16
121e: 03                         ; STORE
121f: 0c                         ; RET
;
1220: 18 d7 ee 00 00             ; DICTP ? (eed7)
1225: 02                         ; FETCH
1226: 0b f4 0a 00 00             ; CALL . (0af4)
122b: 0c                         ; RET
;
122c: 18 ca ee 00 00             ; DICTP C? (eeca)
1231: 0f                         ; CFETCH
1232: 0b f4 0a 00 00             ; CALL . (0af4)
1237: 0c                         ; RET
;
1238: 18 bb ee 00 00             ; DICTP FREE (eebb)
123d: 0e 14                      ; CLITERAL 20
123f: 02                         ; FETCH
1240: 0e 10                      ; CLITERAL 16
1242: 02                         ; FETCH
1243: 12                         ; SUB
1244: 0c                         ; RET
;
1245: 18 ab ee 00 00             ; DICTP .FREE (eeab)
124a: 0b 38 12 00 00             ; CALL FREE (1238)
124f: 0b 80 0a 00 00             ; CALL (.) (0a80)
1254: 07 0c 20 62 79 74 65 73 20 66 72 65 65 2e 00 ; SLITERAL (1255) [ bytes free.]
1263: 0b 07 07 00 00             ; CALL CT (0707)
1268: 0c                         ; RET
;
1269: 18 98 ee 00 00             ; DICTP mainLoop (ee98)
126e: 0b f2 11 00 00             ; CALL resetState (11f2)
1273: 0b b9 07 00 00             ; CALL tmp-init (07b9)
1278: 0b c0 04 00 00             ; CALL ?COMPILING (04c0)
127d: 0e 00                      ; CLITERAL 0
127f: 16                         ; EQ
1280: 09 95 12 00 00             ; JMPZ 1295
1285: 07 03 20 4f 4b 00          ; SLITERAL (1286) [ OK]
128b: 0b 07 07 00 00             ; CALL CT (0707)
1290: 0b 73 0b 00 00             ; CALL .S (0b73)
1295: 0e 0d                      ; CLITERAL 13
1297: 19                         ; EMIT
1298: 0e 0a                      ; CLITERAL 10
129a: 19                         ; EMIT
129b: 0b f4 0f 00 00             ; CALL getLine (0ff4)
12a0: 0e 01                      ; CLITERAL 1
12a2: 11                         ; ADD
12a3: 0b 26 05 00 00             ; CALL >IN (0526)
12a8: 03                         ; STORE
12a9: 0b 64 0f 00 00             ; CALL executeInput (0f64)
12ae: 0e 20                      ; CLITERAL 32
12b0: 19                         ; EMIT
12b1: 08 73 12 00 00             ; JMP 1273
12b6: 0c                         ; RET
;
12b7: 18 89 ee 00 00             ; DICTP main (ee89)
12bc: 0e 20                      ; CLITERAL 32
12be: 02                         ; FETCH
12bf: 0e 63                      ; CLITERAL 99
12c1: 16                         ; EQ
12c2: 09 dc 12 00 00             ; JMPZ 12dc
12c7: 0e 20                      ; CLITERAL 32
12c9: 0b a0 04 00 00             ; CALL OFF (04a0)
12ce: 07 06 48 65 6c 6c 6f 2e 00 ; SLITERAL (12cf) [Hello.]
12d7: 0b 07 07 00 00             ; CALL CT (0707)
12dc: 0b 69 12 00 00             ; CALL mainLoop (1269)
12e1: 0c                         ; RET
;
12e2: 18 72 ee 00 00             ; DICTP file-getLine (ee72)
12e7: 0b a8 0f 00 00             ; CALL Pad (0fa8)
12ec: 04                         ; SWAP
12ed: 0e c8                      ; CLITERAL 200
12ef: 04                         ; SWAP
12f0: 1e                         ; FREADLINE
12f1: 0b a8 0f 00 00             ; CALL Pad (0fa8)
12f6: 04                         ; SWAP
12f7: 0c                         ; RET
;
12f8: 18 63 ee 00 00             ; DICTP load (ee63)
12fd: 0e 00                      ; CLITERAL 0
12ff: 0e 00                      ; CLITERAL 0
1301: 1c                         ; FOPEN
1302: 0e 00                      ; CLITERAL 0
1304: 16                         ; EQ
1305: 09 24 13 00 00             ; JMPZ 1324
130a: 07 11 43 61 6e 6e 6f 74 20 6f 70 65 6e 20 66 69 6c 65 2e 00 ; SLITERAL (130b) [Cannot open file.]
131e: 0b 07 07 00 00             ; CALL CT (0707)
1323: 0c                         ; RET
1324: 0e 1c                      ; CLITERAL 28
1326: 03                         ; STORE
1327: 0e 1c                      ; CLITERAL 28
1329: 02                         ; FETCH
132a: 0b e2 12 00 00             ; CALL file-getLine (12e2)
132f: 09 47 13 00 00             ; JMPZ 1347
1334: 0e 01                      ; CLITERAL 1
1336: 11                         ; ADD
1337: 0b 26 05 00 00             ; CALL >IN (0526)
133c: 03                         ; STORE
133d: 0b 64 0f 00 00             ; CALL executeInput (0f64)
1342: 08 54 13 00 00             ; JMP 1354
1347: 05                         ; DROP
1348: 0e 1c                      ; CLITERAL 28
134a: 02                         ; FETCH
134b: 20                         ; FCLOSE
134c: 0e 1c                      ; CLITERAL 28
134e: 0b a0 04 00 00             ; CALL OFF (04a0)
1353: 0c                         ; RET
1354: 08 27 13 00 00             ; JMP 1327
1359: 0c                         ; RET
;
135a: 18 4f ee 00 00             ; DICTP STR.EMPTY (ee4f)
135f: 0e 00                      ; CLITERAL 0
1361: 1a                         ; OVER
1362: 03                         ; STORE
1363: 0c                         ; RET
;
1364: 18 3d ee 00 00             ; DICTP STR.LEN (ee3d)
1369: 06                         ; DUP
136a: 0f                         ; CFETCH
136b: 0c                         ; RET
;
136c: 18 2a ee 00 00             ; DICTP STR.CATC (ee2a)
1371: 1a                         ; OVER
1372: 06                         ; DUP
1373: 0b e9 05 00 00             ; CALL C++ (05e9)
1378: 06                         ; DUP
1379: 0f                         ; CFETCH
137a: 11                         ; ADD
137b: 0e 00                      ; CLITERAL 0
137d: 1a                         ; OVER
137e: 0e 01                      ; CLITERAL 1
1380: 11                         ; ADD
1381: 10                         ; CSTORE
1382: 10                         ; CSTORE
1383: 0c                         ; RET
;
1384: 18 13 ee 00 00             ; DICTP STR.NULLTERM (ee13)
1389: 06                         ; DUP
138a: 06                         ; DUP
138b: 0f                         ; CFETCH
138c: 11                         ; ADD
138d: 0e 01                      ; CLITERAL 1
138f: 11                         ; ADD
1390: 0e 00                      ; CLITERAL 0
1392: 04                         ; SWAP
1393: 10                         ; CSTORE
1394: 0c                         ; RET
;
1395: 18 06 ee 00 00             ; DICTP I" (ee06)
139a: 0e 10                      ; CLITERAL 16
139c: 02                         ; FETCH
139d: 0e 64                      ; CLITERAL 100
139f: 11                         ; ADD
13a0: 0e 00                      ; CLITERAL 0
13a2: 1a                         ; OVER
13a3: 03                         ; STORE
13a4: 0b 26 05 00 00             ; CALL >IN (0526)
13a9: 02                         ; FETCH
13aa: 0f                         ; CFETCH
13ab: 06                         ; DUP
13ac: 0e 00                      ; CLITERAL 0
13ae: 16                         ; EQ
13af: 09 d0 13 00 00             ; JMPZ 13d0
13b4: 07 10 6d 69 73 73 69 6e 67 20 63 6c 6f 73 69 6e 67 20 00 ; SLITERAL (13b5) [missing closing ]
13c7: 0b 07 07 00 00             ; CALL CT (0707)
13cc: 0e 22                      ; CLITERAL 34
13ce: 19                         ; EMIT
13cf: fe                         ; RESET
13d0: 0b 26 05 00 00             ; CALL >IN (0526)
13d5: 0b cf 05 00 00             ; CALL ++ (05cf)
13da: 06                         ; DUP
13db: 0e 22                      ; CLITERAL 34
13dd: 16                         ; EQ
13de: 09 e5 13 00 00             ; JMPZ 13e5
13e3: 05                         ; DROP
13e4: 0c                         ; RET
13e5: 0b 6c 13 00 00             ; CALL STR.CATC (136c)
13ea: 08 a4 13 00 00             ; JMP 13a4
13ef: 0c                         ; RET
;
13f0: 18 fa ed 00 00             ; DICTP " (edfa)
13f5: 0b c0 04 00 00             ; CALL ?COMPILING (04c0)
13fa: 0e 00                      ; CLITERAL 0
13fc: 16                         ; EQ
13fd: 09 08 14 00 00             ; JMPZ 1408
1402: 0b 95 13 00 00             ; CALL I" (1395)
1407: 0c                         ; RET
1408: 0e 07                      ; CLITERAL 7
140a: 0b 70 00 00 00             ; CALL C, (0070)
140f: 0e 10                      ; CLITERAL 16
1411: 02                         ; FETCH
1412: 0e 00                      ; CLITERAL 0
1414: 0b 70 00 00 00             ; CALL C, (0070)
1419: 0b 26 05 00 00             ; CALL >IN (0526)
141e: 02                         ; FETCH
141f: 0f                         ; CFETCH
1420: 06                         ; DUP
1421: 0e 00                      ; CLITERAL 0
1423: 16                         ; EQ
1424: 09 50 14 00 00             ; JMPZ 1450
1429: 05                         ; DROP
142a: 0e 01                      ; CLITERAL 1
142c: 12                         ; SUB
142d: 0e 10                      ; CLITERAL 16
142f: 03                         ; STORE
1430: 07 11 6d 69 73 73 69 6e 67 20 63 6c 6f 73 69 6e 67 20 27 00 ; SLITERAL (1431) [missing closing ']
1444: 0b 07 07 00 00             ; CALL CT (0707)
1449: 0e 22                      ; CLITERAL 34
144b: 19                         ; EMIT
144c: 0e 27                      ; CLITERAL 39
144e: 19                         ; EMIT
144f: fe                         ; RESET
1450: 0b 26 05 00 00             ; CALL >IN (0526)
1455: 0b cf 05 00 00             ; CALL ++ (05cf)
145a: 06                         ; DUP
145b: 0e 22                      ; CLITERAL 34
145d: 16                         ; EQ
145e: 09 76 14 00 00             ; JMPZ 1476
1463: 05                         ; DROP
1464: 0e 10                      ; CLITERAL 16
1466: 02                         ; FETCH
1467: 0e 00                      ; CLITERAL 0
1469: 0b 70 00 00 00             ; CALL C, (0070)
146e: 1a                         ; OVER
146f: 12                         ; SUB
1470: 0e 01                      ; CLITERAL 1
1472: 12                         ; SUB
1473: 04                         ; SWAP
1474: 10                         ; CSTORE
1475: 0c                         ; RET
1476: 0b 70 00 00 00             ; CALL C, (0070)
147b: 08 19 14 00 00             ; JMP 1419
1480: 0c                         ; RET
;
1481: 18 ed ed 00 00             ; DICTP ll (eded)
1486: 07 09 6c 6f 61 64 73 2e 34 74 68 00 ; SLITERAL (1487) [loads.4th]
1492: 0b f8 12 00 00             ; CALL load (12f8)
1497: 0c                         ; RET
;
1498: 18 da ed 00 00             ; DICTP sys-info (edda)
149d: 0b e7 0b 00 00             ; CALL .(MEM_SZ) (0be7)
14a2: 0e 2c                      ; CLITERAL 44
14a4: 19                         ; EMIT
14a5: 0e 20                      ; CLITERAL 32
14a7: 19                         ; EMIT
14a8: 0b 20 0c 00 00             ; CALL .(HERE) (0c20)
14ad: 0e 2c                      ; CLITERAL 44
14af: 19                         ; EMIT
14b0: 0e 20                      ; CLITERAL 32
14b2: 19                         ; EMIT
14b3: 0b 55 0c 00 00             ; CALL .(LAST) (0c55)
14b8: 0e 2c                      ; CLITERAL 44
14ba: 19                         ; EMIT
14bb: 0e 20                      ; CLITERAL 32
14bd: 19                         ; EMIT
14be: 0b 45 12 00 00             ; CALL .FREE (1245)
14c3: 0e 0d                      ; CLITERAL 13
14c5: 19                         ; EMIT
14c6: 0e 0a                      ; CLITERAL 10
14c8: 19                         ; EMIT
14c9: 0c                         ; RET
;
; End of code, Dictionary:
;
edda: ed ed 00 00                ; sys-info - (next: eded ll)
edde: 98 14 00 00 00             ; XT=1498, flags=00
ede3: 08 73 79 73 2d 69 6e 66 6f 00 ; 8, sys-info
;
eded: fa ed 00 00                ; ll - (next: edfa ")
edf1: 81 14 00 00 00             ; XT=1481, flags=00
edf6: 02 6c 6c 00                ; 2, ll
;
edfa: 06 ee 00 00                ; " - (next: ee06 I")
edfe: f0 13 00 00 01             ; XT=13f0, flags=01
ee03: 01 22 00                   ; 1, "
;
ee06: 13 ee 00 00                ; I" - (next: ee13 STR.NULLTERM)
ee0a: 95 13 00 00 00             ; XT=1395, flags=00
ee0f: 02 49 22 00                ; 2, I"
;
ee13: 2a ee 00 00                ; STR.NULLTERM - (next: ee2a STR.CATC)
ee17: 84 13 00 00 00             ; XT=1384, flags=00
ee1c: 0c 53 54 52 2e 4e 55 4c 4c 54 45 52 4d 00 ; 12, STR.NULLTERM
;
ee2a: 3d ee 00 00                ; STR.CATC - (next: ee3d STR.LEN)
ee2e: 6c 13 00 00 00             ; XT=136c, flags=00
ee33: 08 53 54 52 2e 43 41 54 43 00 ; 8, STR.CATC
;
ee3d: 4f ee 00 00                ; STR.LEN - (next: ee4f STR.EMPTY)
ee41: 64 13 00 00 02             ; XT=1364, flags=02
ee46: 07 53 54 52 2e 4c 45 4e 00 ; 7, STR.LEN
;
ee4f: 63 ee 00 00                ; STR.EMPTY - (next: ee63 load)
ee53: 5a 13 00 00 02             ; XT=135a, flags=02
ee58: 09 53 54 52 2e 45 4d 50 54 59 00 ; 9, STR.EMPTY
;
ee63: 72 ee 00 00                ; load - (next: ee72 file-getLine)
ee67: f8 12 00 00 00             ; XT=12f8, flags=00
ee6c: 04 6c 6f 61 64 00          ; 4, load
;
ee72: 89 ee 00 00                ; file-getLine - (next: ee89 main)
ee76: e2 12 00 00 00             ; XT=12e2, flags=00
ee7b: 0c 66 69 6c 65 2d 67 65 74 4c 69 6e 65 00 ; 12, file-getLine
;
ee89: 98 ee 00 00                ; main - (next: ee98 mainLoop)
ee8d: b7 12 00 00 00             ; XT=12b7, flags=00
ee92: 04 6d 61 69 6e 00          ; 4, main
;
ee98: ab ee 00 00                ; mainLoop - (next: eeab .FREE)
ee9c: 69 12 00 00 00             ; XT=1269, flags=00
eea1: 08 6d 61 69 6e 4c 6f 6f 70 00 ; 8, mainLoop
;
eeab: bb ee 00 00                ; .FREE - (next: eebb FREE)
eeaf: 45 12 00 00 00             ; XT=1245, flags=00
eeb4: 05 2e 46 52 45 45 00       ; 5, .FREE
;
eebb: ca ee 00 00                ; FREE - (next: eeca C?)
eebf: 38 12 00 00 00             ; XT=1238, flags=00
eec4: 04 46 52 45 45 00          ; 4, FREE
;
eeca: d7 ee 00 00                ; C? - (next: eed7 ?)
eece: 2c 12 00 00 00             ; XT=122c, flags=00
eed3: 02 43 3f 00                ; 2, C?
;
eed7: e3 ee 00 00                ; ? - (next: eee3 ALLOT)
eedb: 20 12 00 00 00             ; XT=1220, flags=00
eee0: 01 3f 00                   ; 1, ?
;
eee3: f3 ee 00 00                ; ALLOT - (next: eef3 resetState)
eee7: 13 12 00 00 00             ; XT=1213, flags=00
eeec: 05 41 4c 4c 4f 54 00       ; 5, ALLOT
;
eef3: 08 ef 00 00                ; resetState - (next: ef08 ForgetLast)
eef7: f2 11 00 00 00             ; XT=11f2, flags=00
eefc: 0a 72 65 73 65 74 53 74 61 74 65 00 ; 10, resetState
;
ef08: 1d ef 00 00                ; ForgetLast - (next: ef1d ;)
ef0c: db 11 00 00 00             ; XT=11db, flags=00
ef11: 0a 46 6f 72 67 65 74 4c 61 73 74 00 ; 10, ForgetLast
;
ef1d: 29 ef 00 00                ; ; - (next: ef29 :NONAME)
ef21: c7 11 00 00 01             ; XT=11c7, flags=01
ef26: 01 3b 00                   ; 1, ;
;
ef29: 3b ef 00 00                ; :NONAME - (next: ef3b :)
ef2d: b7 11 00 00 00             ; XT=11b7, flags=00
ef32: 07 3a 4e 4f 4e 41 4d 45 00 ; 7, :NONAME
;
ef3b: 47 ef 00 00                ; : - (next: ef47 CREATE-NAME)
ef3f: a5 11 00 00 00             ; XT=11a5, flags=00
ef44: 01 3a 00                   ; 1, :
;
ef47: 5d ef 00 00                ; CREATE-NAME - (next: ef5d Define-Word)
ef4b: 4f 11 00 00 00             ; XT=114f, flags=00
ef50: 0b 43 52 45 41 54 45 2d 4e 41 4d 45 00 ; 11, CREATE-NAME
;
ef5d: 73 ef 00 00                ; Define-Word - (next: ef73 strcpy2c)
ef61: 06 11 00 00 00             ; XT=1106, flags=00
ef66: 0b 44 65 66 69 6e 65 2d 57 6f 72 64 00 ; 11, Define-Word
;
ef73: 86 ef 00 00                ; strcpy2c - (next: ef86 getLine)
ef77: c7 10 00 00 00             ; XT=10c7, flags=00
ef7c: 08 73 74 72 63 70 79 32 63 00 ; 8, strcpy2c
;
ef86: 98 ef 00 00                ; getLine - (next: ef98 getLineFromFile)
ef8a: f4 0f 00 00 00             ; XT=0ff4, flags=00
ef8f: 07 67 65 74 4c 69 6e 65 00 ; 7, getLine
;
ef98: b2 ef 00 00                ; getLineFromFile - (next: efb2 LoadingFromFile?)
ef9c: d9 0f 00 00 00             ; XT=0fd9, flags=00
efa1: 0f 67 65 74 4c 69 6e 65 46 72 6f 6d 46 69 6c 65 00 ; 15, getLineFromFile
;
efb2: cd ef 00 00                ; LoadingFromFile? - (next: efcd Pad)
efb6: d0 0f 00 00 00             ; XT=0fd0, flags=00
efbb: 10 4c 6f 61 64 69 6e 67 46 72 6f 6d 46 69 6c 65 3f 00 ; 16, LoadingFromFile?
;
efcd: db ef 00 00                ; Pad - (next: efdb executeInput)
efd1: a8 0f 00 00 00             ; XT=0fa8, flags=00
efd6: 03 50 61 64 00             ; 3, Pad
;
efdb: f2 ef 00 00                ; executeInput - (next: eff2 executeWord)
efdf: 64 0f 00 00 00             ; XT=0f64, flags=00
efe4: 0c 65 78 65 63 75 74 65 49 6e 70 75 74 00 ; 12, executeInput
;
eff2: 08 f0 00 00                ; executeWord - (next: f008 [COMPILE])
eff6: c1 0e 00 00 00             ; XT=0ec1, flags=00
effb: 0b 65 78 65 63 75 74 65 57 6f 72 64 00 ; 11, executeWord
;
f008: 1c f0 00 00                ; [COMPILE] - (next: f01c cstr,)
f00c: 9b 0e 00 00 00             ; XT=0e9b, flags=00
f011: 09 5b 43 4f 4d 50 49 4c 45 5d 00 ; 9, [COMPILE]
;
f01c: 2c f0 00 00                ; cstr, - (next: f02c strlen)
f020: 86 0e 00 00 00             ; XT=0e86, flags=00
f025: 05 63 73 74 72 2c 00       ; 5, cstr,
;
f02c: 3d f0 00 00                ; strlen - (next: f03d Copy.INLINE)
f030: 63 0e 00 00 00             ; XT=0e63, flags=00
f035: 06 73 74 72 6c 65 6e 00    ; 6, strlen
;
f03d: 53 f0 00 00                ; Copy.INLINE - (next: f053 DOES>)
f041: 42 0e 00 00 00             ; XT=0e42, flags=00
f046: 0b 43 6f 70 79 2e 49 4e 4c 49 4e 45 00 ; 11, Copy.INLINE
;
f053: 63 f0 00 00                ; DOES> - (next: f063 (inline))
f057: 2b 0e 00 00 00             ; XT=0e2b, flags=00
f05c: 05 44 4f 45 53 3e 00       ; 5, DOES>
;
f063: 76 f0 00 00                ; (inline) - (next: f076 find.ret)
f067: 08 0e 00 00 00             ; XT=0e08, flags=00
f06c: 08 28 69 6e 6c 69 6e 65 29 00 ; 8, (inline)
;
f076: 89 f0 00 00                ; find.ret - (next: f089 EXECUTE)
f07a: ef 0d 00 00 00             ; XT=0def, flags=00
f07f: 08 66 69 6e 64 2e 72 65 74 00 ; 8, find.ret
;
f089: 9b f0 00 00                ; EXECUTE - (next: f09b .lastx)
f08d: e6 0d 00 00 00             ; XT=0de6, flags=00
f092: 07 45 58 45 43 55 54 45 00 ; 7, EXECUTE
;
f09b: ac f0 00 00                ; .lastx - (next: f0ac NUM-WORDS)
f09f: ae 0d 00 00 00             ; XT=0dae, flags=00
f0a4: 06 2e 6c 61 73 74 78 00    ; 6, .lastx
;
f0ac: c0 f0 00 00                ; NUM-WORDS - (next: f0c0 WORDSV)
f0b0: 84 0d 00 00 00             ; XT=0d84, flags=00
f0b5: 09 4e 55 4d 2d 57 4f 52 44 53 00 ; 9, NUM-WORDS
;
f0c0: d1 f0 00 00                ; WORDSV - (next: f0d1 .WORD-LONG)
f0c4: 54 0d 00 00 00             ; XT=0d54, flags=00
f0c9: 06 57 4f 52 44 53 56 00    ; 6, WORDSV
;
f0d1: e6 f0 00 00                ; .WORD-LONG - (next: f0e6 WORDS)
f0d5: c4 0c 00 00 00             ; XT=0cc4, flags=00
f0da: 0a 2e 57 4f 52 44 2d 4c 4f 4e 47 00 ; 10, .WORD-LONG
;
f0e6: f6 f0 00 00                ; WORDS - (next: f0f6 .WORD-SHORT)
f0ea: 9f 0c 00 00 00             ; XT=0c9f, flags=00
f0ef: 05 57 4f 52 44 53 00       ; 5, WORDS
;
f0f6: 0c f1 00 00                ; .WORD-SHORT - (next: f10c .(LAST))
f0fa: 8a 0c 00 00 00             ; XT=0c8a, flags=00
f0ff: 0b 2e 57 4f 52 44 2d 53 48 4f 52 54 00 ; 11, .WORD-SHORT
;
f10c: 1e f1 00 00                ; .(LAST) - (next: f11e .(HERE))
f110: 55 0c 00 00 00             ; XT=0c55, flags=00
f115: 07 2e 28 4c 41 53 54 29 00 ; 7, .(LAST)
;
f11e: 30 f1 00 00                ; .(HERE) - (next: f130 .(MEM_SZ))
f122: 20 0c 00 00 00             ; XT=0c20, flags=00
f127: 07 2e 28 48 45 52 45 29 00 ; 7, .(HERE)
;
f130: 44 f1 00 00                ; .(MEM_SZ) - (next: f144 .S)
f134: e7 0b 00 00 00             ; XT=0be7, flags=00
f139: 09 2e 28 4d 45 4d 5f 53 5a 29 00 ; 9, .(MEM_SZ)
;
f144: 51 f1 00 00                ; .S - (next: f151 MAX)
f148: 73 0b 00 00 00             ; XT=0b73, flags=00
f14d: 02 2e 53 00                ; 2, .S
;
f151: 5f f1 00 00                ; MAX - (next: f15f MIN)
f155: 63 0b 00 00 00             ; XT=0b63, flags=00
f15a: 03 4d 41 58 00             ; 3, MAX
;
f15f: 6d f1 00 00                ; MIN - (next: f16d BINARY.)
f163: 53 0b 00 00 00             ; XT=0b53, flags=00
f168: 03 4d 49 4e 00             ; 3, MIN
;
f16d: 7f f1 00 00                ; BINARY. - (next: f17f DECIMAL.)
f171: 3c 0b 00 00 00             ; XT=0b3c, flags=00
f176: 07 42 49 4e 41 52 59 2e 00 ; 7, BINARY.
;
f17f: 92 f1 00 00                ; DECIMAL. - (next: f192 HEX.)
f183: 25 0b 00 00 00             ; XT=0b25, flags=00
f188: 08 44 45 43 49 4d 41 4c 2e 00 ; 8, DECIMAL.
;
f192: a1 f1 00 00                ; HEX. - (next: f1a1 .)
f196: 02 0b 00 00 00             ; XT=0b02, flags=00
f19b: 04 48 45 58 2e 00          ; 4, HEX.
;
f1a1: ad f1 00 00                ; . - (next: f1ad (.))
f1a5: f4 0a 00 00 00             ; XT=0af4, flags=00
f1aa: 01 2e 00                   ; 1, .
;
f1ad: bb f1 00 00                ; (.) - (next: f1bb /MOD)
f1b1: 80 0a 00 00 00             ; XT=0a80, flags=00
f1b6: 03 28 2e 29 00             ; 3, (.)
;
f1bb: ca f1 00 00                ; /MOD - (next: f1ca MOD)
f1bf: 71 0a 00 00 00             ; XT=0a71, flags=00
f1c4: 04 2f 4d 4f 44 00          ; 4, /MOD
;
f1ca: d8 f1 00 00                ; MOD - (next: f1d8 isNumber?)
f1ce: 66 0a 00 00 00             ; XT=0a66, flags=00
f1d3: 03 4d 4f 44 00             ; 3, MOD
;
f1d8: ec f1 00 00                ; isNumber? - (next: f1ec ABS)
f1dc: 05 0a 00 00 00             ; XT=0a05, flags=00
f1e1: 09 69 73 4e 75 6d 62 65 72 3f 00 ; 9, isNumber?
;
f1ec: fa f1 00 00                ; ABS - (next: f1fa NEGATE)
f1f0: f1 09 00 00 00             ; XT=09f1, flags=00
f1f5: 03 41 42 53 00             ; 3, ABS
;
f1fa: 0b f2 00 00                ; NEGATE - (next: f20b isNumChar?)
f1fe: e7 09 00 00 00             ; XT=09e7, flags=00
f203: 06 4e 45 47 41 54 45 00    ; 6, NEGATE
;
f20b: 20 f2 00 00                ; isNumChar? - (next: f220 isHEX?)
f20f: 96 09 00 00 00             ; XT=0996, flags=00
f214: 0a 69 73 4e 75 6d 43 68 61 72 3f 00 ; 10, isNumChar?
;
f220: 31 f2 00 00                ; isHEX? - (next: f231 findInDict)
f224: 8a 09 00 00 00             ; XT=098a, flags=00
f229: 06 69 73 48 45 58 3f 00    ; 6, isHEX?
;
f231: 46 f2 00 00                ; findInDict - (next: f246 DICT.GetINLINE)
f235: 41 09 00 00 00             ; XT=0941, flags=00
f23a: 0a 66 69 6e 64 49 6e 44 69 63 74 00 ; 10, findInDict
;
f246: 5f f2 00 00                ; DICT.GetINLINE - (next: f25f DICT.GetIMMEDIATE)
f24a: 31 09 00 00 00             ; XT=0931, flags=00
f24f: 0e 44 49 43 54 2e 47 65 74 49 4e 4c 49 4e 45 00 ; 14, DICT.GetINLINE
;
f25f: 7b f2 00 00                ; DICT.GetIMMEDIATE - (next: f27b FLAGS.ISINLINE?)
f263: 21 09 00 00 00             ; XT=0921, flags=00
f268: 11 44 49 43 54 2e 47 65 74 49 4d 4d 45 44 49 41 54 45 00 ; 17, DICT.GetIMMEDIATE
;
f27b: 95 f2 00 00                ; FLAGS.ISINLINE? - (next: f295 FLAGS.ISIMMEDIATE?)
f27f: 18 09 00 00 00             ; XT=0918, flags=00
f284: 0f 46 4c 41 47 53 2e 49 53 49 4e 4c 49 4e 45 3f 00 ; 15, FLAGS.ISINLINE?
;
f295: b2 f2 00 00                ; FLAGS.ISIMMEDIATE? - (next: f2b2 XT.GetDICTP)
f299: 0f 09 00 00 00             ; XT=090f, flags=00
f29e: 12 46 4c 41 47 53 2e 49 53 49 4d 4d 45 44 49 41 54 45 3f 00 ; 18, FLAGS.ISIMMEDIATE?
;
f2b2: c8 f2 00 00                ; XT.GetDICTP - (next: f2c8 DICTP>NAME)
f2b6: f4 08 00 00 00             ; XT=08f4, flags=00
f2bb: 0b 58 54 2e 47 65 74 44 49 43 54 50 00 ; 11, XT.GetDICTP
;
f2c8: dd f2 00 00                ; DICTP>NAME - (next: f2dd DICT.GetFLAGS)
f2cc: e5 08 00 00 00             ; XT=08e5, flags=00
f2d1: 0a 44 49 43 54 50 3e 4e 41 4d 45 00 ; 10, DICTP>NAME
;
f2dd: f5 f2 00 00                ; DICT.GetFLAGS - (next: f2f5 DICT.GetXT)
f2e1: d9 08 00 00 00             ; XT=08d9, flags=00
f2e6: 0d 44 49 43 54 2e 47 65 74 46 4c 41 47 53 00 ; 13, DICT.GetFLAGS
;
f2f5: 0a f3 00 00                ; DICT.GetXT - (next: f30a NAME>DICT)
f2f9: cd 08 00 00 00             ; XT=08cd, flags=00
f2fe: 0a 44 49 43 54 2e 47 65 74 58 54 00 ; 10, DICT.GetXT
;
f30a: 1e f3 00 00                ; NAME>DICT - (next: f31e FLAGS>DICT)
f30e: be 08 00 00 00             ; XT=08be, flags=00
f313: 09 4e 41 4d 45 3e 44 49 43 54 00 ; 9, NAME>DICT
;
f31e: 33 f3 00 00                ; FLAGS>DICT - (next: f333 XT>DICT)
f322: b2 08 00 00 00             ; XT=08b2, flags=00
f327: 0a 46 4c 41 47 53 3e 44 49 43 54 00 ; 10, FLAGS>DICT
;
f333: 45 f3 00 00                ; XT>DICT - (next: f345 NEXT>DICT)
f337: a9 08 00 00 00             ; XT=08a9, flags=00
f33c: 07 58 54 3e 44 49 43 54 00 ; 7, XT>DICT
;
f345: 59 f3 00 00                ; NEXT>DICT - (next: f359 DICT>NAME)
f349: a3 08 00 00 00             ; XT=08a3, flags=00
f34e: 09 4e 45 58 54 3e 44 49 43 54 00 ; 9, NEXT>DICT
;
f359: 6d f3 00 00                ; DICT>NAME - (next: f36d DICT>FLAGS)
f35d: 95 08 00 00 00             ; XT=0895, flags=00
f362: 09 44 49 43 54 3e 4e 41 4d 45 00 ; 9, DICT>NAME
;
f36d: 82 f3 00 00                ; DICT>FLAGS - (next: f382 DICT>XT)
f371: 89 08 00 00 00             ; XT=0889, flags=00
f376: 0a 44 49 43 54 3e 46 4c 41 47 53 00 ; 10, DICT>FLAGS
;
f382: 94 f3 00 00                ; DICT>XT - (next: f394 DICT>NEXT)
f386: 80 08 00 00 00             ; XT=0880, flags=00
f38b: 07 44 49 43 54 3e 58 54 00 ; 7, DICT>XT
;
f394: a8 f3 00 00                ; DICT>NEXT - (next: f3a8 getOneWord)
f398: 7a 08 00 00 00             ; XT=087a, flags=00
f39d: 09 44 49 43 54 3e 4e 45 58 54 00 ; 9, DICT>NEXT
;
f3a8: bd f3 00 00                ; getOneWord - (next: f3bd skipWS)
f3ac: 3e 08 00 00 00             ; XT=083e, flags=00
f3b1: 0a 67 65 74 4f 6e 65 57 6f 72 64 00 ; 10, getOneWord
;
f3bd: ce f3 00 00                ; skipWS - (next: f3ce getInput)
f3c1: 13 08 00 00 00             ; XT=0813, flags=00
f3c6: 06 73 6b 69 70 57 53 00    ; 6, skipWS
;
f3ce: e1 f3 00 00                ; getInput - (next: f3e1 PAD)
f3d2: fd 07 00 00 00             ; XT=07fd, flags=00
f3d7: 08 67 65 74 49 6e 70 75 74 00 ; 8, getInput
;
f3e1: ef f3 00 00                ; PAD - (next: f3ef tmp-alloc)
f3e5: eb 07 00 00 00             ; XT=07eb, flags=00
f3ea: 03 50 41 44 00             ; 3, PAD
;
f3ef: 03 f4 00 00                ; tmp-alloc - (next: f403 tmp-cur)
f3f3: d4 07 00 00 00             ; XT=07d4, flags=00
f3f8: 09 74 6d 70 2d 61 6c 6c 6f 63 00 ; 9, tmp-alloc
;
f403: 15 f4 00 00                ; tmp-cur - (next: f415 tmp-init)
f407: c8 07 00 00 00             ; XT=07c8, flags=00
f40c: 07 74 6d 70 2d 63 75 72 00 ; 7, tmp-cur
;
f415: 28 f4 00 00                ; tmp-init - (next: f428 (tmp))
f419: b9 07 00 00 00             ; XT=07b9, flags=00
f41e: 08 74 6d 70 2d 69 6e 69 74 00 ; 8, tmp-init
;
f428: 38 f4 00 00                ; (tmp) - (next: f438 BETWEEN)
f42c: a9 07 00 00 00             ; XT=07a9, flags=00
f431: 05 28 74 6d 70 29 00       ; 5, (tmp)
;
f438: 4a f4 00 00                ; BETWEEN - (next: f44a CR)
f43c: 91 07 00 00 00             ; XT=0791, flags=00
f441: 07 42 45 54 57 45 45 4e 00 ; 7, BETWEEN
;
f44a: 57 f4 00 00                ; CR - (next: f457 CRLF)
f44e: 85 07 00 00 02             ; XT=0785, flags=02
f453: 02 43 52 00                ; 2, CR
;
f457: 66 f4 00 00                ; CRLF - (next: f466 BL)
f45b: 79 07 00 00 02             ; XT=0779, flags=02
f460: 04 43 52 4c 46 00          ; 4, CRLF
;
f466: 73 f4 00 00                ; BL - (next: f473 ()
f46a: 70 07 00 00 02             ; XT=0770, flags=02
f46f: 02 42 4c 00                ; 2, BL
;
f473: 7f f4 00 00                ; ( - (next: f47f \)
f477: 26 07 00 00 01             ; XT=0726, flags=01
f47c: 01 28 00                   ; 1, (
;
f47f: 8b f4 00 00                ; \ - (next: f48b CT)
f483: 17 07 00 00 01             ; XT=0717, flags=01
f488: 01 5c 00                   ; 1, \
;
f48b: 98 f4 00 00                ; CT - (next: f498 TYPE)
f48f: 07 07 00 00 00             ; XT=0707, flags=00
f494: 02 43 54 00                ; 2, CT
;
f498: a7 f4 00 00                ; TYPE - (next: f4a7 COUNT)
f49c: e5 06 00 00 00             ; XT=06e5, flags=00
f4a1: 04 54 59 50 45 00          ; 4, TYPE
;
f4a7: b7 f4 00 00                ; COUNT - (next: f4b7 UNTIL)
f4ab: d9 06 00 00 00             ; XT=06d9, flags=00
f4b0: 05 43 4f 55 4e 54 00       ; 5, COUNT
;
f4b7: c7 f4 00 00                ; UNTIL - (next: f4c7 WHILE)
f4bb: bd 06 00 00 01             ; XT=06bd, flags=01
f4c0: 05 55 4e 54 49 4c 00       ; 5, UNTIL
;
f4c7: d7 f4 00 00                ; WHILE - (next: f4d7 AGAIN)
f4cb: a1 06 00 00 01             ; XT=06a1, flags=01
f4d0: 05 57 48 49 4c 45 00       ; 5, WHILE
;
f4d7: e7 f4 00 00                ; AGAIN - (next: f4e7 BEGIN)
f4db: 85 06 00 00 01             ; XT=0685, flags=01
f4e0: 05 41 47 41 49 4e 00       ; 5, AGAIN
;
f4e7: f7 f4 00 00                ; BEGIN - (next: f4f7 LEAVE)
f4eb: 72 06 00 00 01             ; XT=0672, flags=01
f4f0: 05 42 45 47 49 4e 00       ; 5, BEGIN
;
f4f7: 07 f5 00 00                ; LEAVE - (next: f507 NOT)
f4fb: 5b 06 00 00 01             ; XT=065b, flags=01
f500: 05 4c 45 41 56 45 00       ; 5, LEAVE
;
f507: 15 f5 00 00                ; NOT - (next: f515 FALSE)
f50b: 52 06 00 00 02             ; XT=0652, flags=02
f510: 03 4e 4f 54 00             ; 3, NOT
;
f515: 25 f5 00 00                ; FALSE - (next: f525 TRUE)
f519: 4a 06 00 00 02             ; XT=064a, flags=02
f51e: 05 46 41 4c 53 45 00       ; 5, FALSE
;
f525: 34 f5 00 00                ; TRUE - (next: f534 >=)
f529: 42 06 00 00 02             ; XT=0642, flags=02
f52e: 04 54 52 55 45 00          ; 4, TRUE
;
f534: 41 f5 00 00                ; >= - (next: f541 <=)
f538: 38 06 00 00 02             ; XT=0638, flags=02
f53d: 02 3e 3d 00                ; 2, >=
;
f541: 4e f5 00 00                ; <= - (next: f54e <>)
f545: 2e 06 00 00 02             ; XT=062e, flags=02
f54a: 02 3c 3d 00                ; 2, <=
;
f54e: 5b f5 00 00                ; <> - (next: f55b 0=)
f552: 24 06 00 00 02             ; XT=0624, flags=02
f557: 02 3c 3e 00                ; 2, <>
;
f55b: 68 f5 00 00                ; 0= - (next: f568 C+!)
f55f: 1b 06 00 00 02             ; XT=061b, flags=02
f564: 02 30 3d 00                ; 2, 0=
;
f568: 76 f5 00 00                ; C+! - (next: f576 +!)
f56c: 0f 06 00 00 00             ; XT=060f, flags=00
f571: 03 43 2b 21 00             ; 3, C+!
;
f576: 83 f5 00 00                ; +! - (next: f583 C--)
f57a: 03 06 00 00 00             ; XT=0603, flags=00
f57f: 02 2b 21 00                ; 2, +!
;
f583: 91 f5 00 00                ; C-- - (next: f591 C++)
f587: f6 05 00 00 00             ; XT=05f6, flags=00
f58c: 03 43 2d 2d 00             ; 3, C--
;
f591: 9f f5 00 00                ; C++ - (next: f59f --)
f595: e9 05 00 00 00             ; XT=05e9, flags=00
f59a: 03 43 2b 2b 00             ; 3, C++
;
f59f: ac f5 00 00                ; -- - (next: f5ac ++)
f5a3: dc 05 00 00 00             ; XT=05dc, flags=00
f5a8: 02 2d 2d 00                ; 2, --
;
f5ac: b9 f5 00 00                ; ++ - (next: f5b9 -=)
f5b0: cf 05 00 00 00             ; XT=05cf, flags=00
f5b5: 02 2b 2b 00                ; 2, ++
;
f5b9: c6 f5 00 00                ; -= - (next: f5c6 +=)
f5bd: c3 05 00 00 00             ; XT=05c3, flags=00
f5c2: 02 2d 3d 00                ; 2, -=
;
f5c6: d3 f5 00 00                ; += - (next: f5d3 2/)
f5ca: b8 05 00 00 00             ; XT=05b8, flags=00
f5cf: 02 2b 3d 00                ; 2, +=
;
f5d3: e0 f5 00 00                ; 2/ - (next: f5e0 2*)
f5d7: af 05 00 00 02             ; XT=05af, flags=02
f5dc: 02 32 2f 00                ; 2, 2/
;
f5e0: ed f5 00 00                ; 2* - (next: f5ed 1-)
f5e4: a6 05 00 00 02             ; XT=05a6, flags=02
f5e9: 02 32 2a 00                ; 2, 2*
;
f5ed: fa f5 00 00                ; 1- - (next: f5fa 1+)
f5f1: 9d 05 00 00 02             ; XT=059d, flags=02
f5f6: 02 31 2d 00                ; 2, 1-
;
f5fa: 07 f6 00 00                ; 1+ - (next: f607 -ROT)
f5fe: 94 05 00 00 02             ; XT=0594, flags=02
f603: 02 31 2b 00                ; 2, 1+
;
f607: 16 f6 00 00                ; -ROT - (next: f616 ROT)
f60b: 8a 05 00 00 02             ; XT=058a, flags=02
f610: 04 2d 52 4f 54 00          ; 4, -ROT
;
f616: 24 f6 00 00                ; ROT - (next: f624 NIP)
f61a: 80 05 00 00 02             ; XT=0580, flags=02
f61f: 03 52 4f 54 00             ; 3, ROT
;
f624: 32 f6 00 00                ; NIP - (next: f632 TUCK)
f628: 78 05 00 00 02             ; XT=0578, flags=02
f62d: 03 4e 49 50 00             ; 3, NIP
;
f632: 41 f6 00 00                ; TUCK - (next: f641 2DROP)
f636: 70 05 00 00 02             ; XT=0570, flags=02
f63b: 04 54 55 43 4b 00          ; 4, TUCK
;
f641: 51 f6 00 00                ; 2DROP - (next: f651 2DUP)
f645: 68 05 00 00 02             ; XT=0568, flags=02
f64a: 05 32 44 52 4f 50 00       ; 5, 2DROP
;
f651: 60 f6 00 00                ; 2DUP - (next: f660 RDROP)
f655: 60 05 00 00 02             ; XT=0560, flags=02
f65a: 04 32 44 55 50 00          ; 4, 2DUP
;
f660: 70 f6 00 00                ; RDROP - (next: f670 R@)
f664: 58 05 00 00 02             ; XT=0558, flags=02
f669: 05 52 44 52 4f 50 00       ; 5, RDROP
;
f670: 7d f6 00 00                ; R@ - (next: f67d MEM_SZ)
f674: 4f 05 00 00 02             ; XT=054f, flags=02
f679: 02 52 40 00                ; 2, R@
;
f67d: 8e f6 00 00                ; MEM_SZ - (next: f68e isNeg)
f681: 46 05 00 00 00             ; XT=0546, flags=00
f686: 06 4d 45 4d 5f 53 5a 00    ; 6, MEM_SZ
;
f68e: 9e f6 00 00                ; isNeg - (next: f69e >IN)
f692: 36 05 00 00 00             ; XT=0536, flags=00
f697: 05 69 73 4e 65 67 00       ; 5, isNeg
;
f69e: ac f6 00 00                ; >IN - (next: f6ac ELSE)
f6a2: 26 05 00 00 00             ; XT=0526, flags=00
f6a7: 03 3e 49 4e 00             ; 3, >IN
;
f6ac: bb f6 00 00                ; ELSE - (next: f6bb IF)
f6b0: ff 04 00 00 01             ; XT=04ff, flags=01
f6b5: 04 45 4c 53 45 00          ; 4, ELSE
;
f6bb: c8 f6 00 00                ; IF - (next: f6c8 THEN)
f6bf: de 04 00 00 01             ; XT=04de, flags=01
f6c4: 02 49 46 00                ; 2, IF
;
f6c8: d7 f6 00 00                ; THEN - (next: f6d7 ?COMPILING)
f6cc: c9 04 00 00 01             ; XT=04c9, flags=01
f6d1: 04 54 48 45 4e 00          ; 4, THEN
;
f6d7: ec f6 00 00                ; ?COMPILING - (next: f6ec ])
f6db: c0 04 00 00 00             ; XT=04c0, flags=00
f6e0: 0a 3f 43 4f 4d 50 49 4c 49 4e 47 00 ; 10, ?COMPILING
;
f6ec: f8 f6 00 00                ; ] - (next: f6f8 [)
f6f0: b5 04 00 00 01             ; XT=04b5, flags=01
f6f5: 01 5d 00                   ; 1, ]
;
f6f8: 04 f7 00 00                ; [ - (next: f704 OFF)
f6fc: aa 04 00 00 01             ; XT=04aa, flags=01
f701: 01 5b 00                   ; 1, [
;
f704: 12 f7 00 00                ; OFF - (next: f712 ON)
f708: a0 04 00 00 00             ; XT=04a0, flags=00
f70d: 03 4f 46 46 00             ; 3, OFF
;
f712: 1f f7 00 00                ; ON - (next: f71f BINARY)
f716: 96 04 00 00 00             ; XT=0496, flags=00
f71b: 02 4f 4e 00                ; 2, ON
;
f71f: 30 f7 00 00                ; BINARY - (next: f730 OCTAL)
f723: 8b 04 00 00 00             ; XT=048b, flags=00
f728: 06 42 49 4e 41 52 59 00    ; 6, BINARY
;
f730: 40 f7 00 00                ; OCTAL - (next: f740 DECIMAL)
f734: 80 04 00 00 00             ; XT=0480, flags=00
f739: 05 4f 43 54 41 4c 00       ; 5, OCTAL
;
f740: 52 f7 00 00                ; DECIMAL - (next: f752 HEX)
f744: 75 04 00 00 00             ; XT=0475, flags=00
f749: 07 44 45 43 49 4d 41 4c 00 ; 7, DECIMAL
;
f752: 60 f7 00 00                ; HEX - (next: f760 DEBUG-OFF)
f756: 6a 04 00 00 00             ; XT=046a, flags=00
f75b: 03 48 45 58 00             ; 3, HEX
;
f760: 74 f7 00 00                ; DEBUG-OFF - (next: f774 DEBUG-ON)
f764: 61 04 00 00 00             ; XT=0461, flags=00
f769: 09 44 45 42 55 47 2d 4f 46 46 00 ; 9, DEBUG-OFF
;
f774: 87 f7 00 00                ; DEBUG-ON - (next: f787 TRACE-OFF)
f778: 58 04 00 00 00             ; XT=0458, flags=00
f77d: 08 44 45 42 55 47 2d 4f 4e 00 ; 8, DEBUG-ON
;
f787: 9b f7 00 00                ; TRACE-OFF - (next: f79b TRACE-ON)
f78b: 4f 04 00 00 00             ; XT=044f, flags=00
f790: 09 54 52 41 43 45 2d 4f 46 46 00 ; 9, TRACE-OFF
;
f79b: ae f7 00 00                ; TRACE-ON - (next: f7ae LOGLEVEL)
f79f: 46 04 00 00 00             ; XT=0446, flags=00
f7a4: 08 54 52 41 43 45 2d 4f 4e 00 ; 8, TRACE-ON
;
f7ae: c1 f7 00 00                ; LOGLEVEL - (next: f7c1 ,)
f7b2: 3f 04 00 00 02             ; XT=043f, flags=02
f7b7: 08 4c 4f 47 4c 45 56 45 4c 00 ; 8, LOGLEVEL
;
f7c1: cd f7 00 00                ; , - (next: f7cd HERE)
f7c5: 2c 04 00 00 00             ; XT=042c, flags=00
f7ca: 01 2c 00                   ; 1, ,
;
f7cd: dc f7 00 00                ; HERE - (next: f7dc LAST)
f7d1: 23 04 00 00 02             ; XT=0423, flags=02
f7d6: 04 48 45 52 45 00          ; 4, HERE
;
f7dc: eb f7 00 00                ; LAST - (next: f7eb IMMEDIATE)
f7e0: 1a 04 00 00 02             ; XT=041a, flags=02
f7e5: 04 4c 41 53 54 00          ; 4, LAST
;
f7eb: ff f7 00 00                ; IMMEDIATE - (next: f7ff FLAG_INLINE)
f7ef: 04 04 00 00 00             ; XT=0404, flags=00
f7f4: 09 49 4d 4d 45 44 49 41 54 45 00 ; 9, IMMEDIATE
;
f7ff: 15 f8 00 00                ; FLAG_INLINE - (next: f815 FLAG_IMMEDIATE)
f803: fc 03 00 00 02             ; XT=03fc, flags=02
f808: 0b 46 4c 41 47 5f 49 4e 4c 49 4e 45 00 ; 11, FLAG_INLINE
;
f815: 2e f8 00 00                ; FLAG_IMMEDIATE - (next: f82e CELLS)
f819: f4 03 00 00 02             ; XT=03f4, flags=02
f81e: 0e 46 4c 41 47 5f 49 4d 4d 45 44 49 41 54 45 00 ; 14, FLAG_IMMEDIATE
;
f82e: 3e f8 00 00                ; CELLS - (next: f83e INLINE)
f832: eb 03 00 00 02             ; XT=03eb, flags=02
f837: 05 43 45 4c 4c 53 00       ; 5, CELLS
;
f83e: 4f f8 00 00                ; INLINE - (next: f84f BYE)
f842: d5 03 00 00 00             ; XT=03d5, flags=00
f847: 06 49 4e 4c 49 4e 45 00    ; 6, INLINE
;
f84f: 5d f8 00 00                ; BYE - (next: f85d RESET)
f853: ce 03 00 00 02             ; XT=03ce, flags=02
f858: 03 42 59 45 00             ; 3, BYE
;
f85d: 6d f8 00 00                ; RESET - (next: f86d BREAK)
f861: c7 03 00 00 02             ; XT=03c7, flags=02
f866: 05 52 45 53 45 54 00       ; 5, RESET
;
f86d: 7d f8 00 00                ; BREAK - (next: f87d USTACK>)
f871: c0 03 00 00 02             ; XT=03c0, flags=02
f876: 05 42 52 45 41 4b 00       ; 5, BREAK
;
f87d: 8f f8 00 00                ; USTACK> - (next: f88f >USTACK)
f881: b9 03 00 00 02             ; XT=03b9, flags=02
f886: 07 55 53 54 41 43 4b 3e 00 ; 7, USTACK>
;
f88f: a1 f8 00 00                ; >USTACK - (next: f8a1 USTACKINIT)
f893: b2 03 00 00 02             ; XT=03b2, flags=02
f898: 07 3e 55 53 54 41 43 4b 00 ; 7, >USTACK
;
f8a1: b6 f8 00 00                ; USTACKINIT - (next: f8b6 GETCH)
f8a5: ab 03 00 00 02             ; XT=03ab, flags=02
f8aa: 0a 55 53 54 41 43 4b 49 4e 49 54 00 ; 10, USTACKINIT
;
f8b6: c6 f8 00 00                ; GETCH - (next: f8c6 OR)
f8ba: a4 03 00 00 02             ; XT=03a4, flags=02
f8bf: 05 47 45 54 43 48 00       ; 5, GETCH
;
f8c6: d3 f8 00 00                ; OR - (next: f8d3 AND)
f8ca: 9d 03 00 00 02             ; XT=039d, flags=02
f8cf: 02 4f 52 00                ; 2, OR
;
f8d3: e1 f8 00 00                ; AND - (next: f8e1 DEPTH)
f8d7: 96 03 00 00 02             ; XT=0396, flags=02
f8dc: 03 41 4e 44 00             ; 3, AND
;
f8e1: f1 f8 00 00                ; DEPTH - (next: f8f1 PICK)
f8e5: 8f 03 00 00 02             ; XT=038f, flags=02
f8ea: 05 44 45 50 54 48 00       ; 5, DEPTH
;
f8f1: 00 f9 00 00                ; PICK - (next: f900 R>)
f8f5: 88 03 00 00 02             ; XT=0388, flags=02
f8fa: 04 50 49 43 4b 00          ; 4, PICK
;
f900: 0d f9 00 00                ; R> - (next: f90d >R)
f904: 81 03 00 00 02             ; XT=0381, flags=02
f909: 02 52 3e 00                ; 2, R>
;
f90d: 1a f9 00 00                ; >R - (next: f91a FCLOSE)
f911: 7a 03 00 00 02             ; XT=037a, flags=02
f916: 02 3e 52 00                ; 2, >R
;
f91a: 2b f9 00 00                ; FCLOSE - (next: f92b FWRITE)
f91e: 73 03 00 00 02             ; XT=0373, flags=02
f923: 06 46 43 4c 4f 53 45 00    ; 6, FCLOSE
;
f92b: 3c f9 00 00                ; FWRITE - (next: f93c FREADLINE)
f92f: 6c 03 00 00 02             ; XT=036c, flags=02
f934: 06 46 57 52 49 54 45 00    ; 6, FWRITE
;
f93c: 50 f9 00 00                ; FREADLINE - (next: f950 FREAD)
f940: 65 03 00 00 02             ; XT=0365, flags=02
f945: 09 46 52 45 41 44 4c 49 4e 45 00 ; 9, FREADLINE
;
f950: 60 f9 00 00                ; FREAD - (next: f960 FOPEN)
f954: 5e 03 00 00 02             ; XT=035e, flags=02
f959: 05 46 52 45 41 44 00       ; 5, FREAD
;
f960: 70 f9 00 00                ; FOPEN - (next: f970 EMIT)
f964: 57 03 00 00 02             ; XT=0357, flags=02
f969: 05 46 4f 50 45 4e 00       ; 5, FOPEN
;
f970: 7f f9 00 00                ; EMIT - (next: f97f >)
f974: 50 03 00 00 02             ; XT=0350, flags=02
f979: 04 45 4d 49 54 00          ; 4, EMIT
;
f97f: 8b f9 00 00                ; > - (next: f98b =)
f983: 49 03 00 00 02             ; XT=0349, flags=02
f988: 01 3e 00                   ; 1, >
;
f98b: 97 f9 00 00                ; = - (next: f997 <)
f98f: 42 03 00 00 02             ; XT=0342, flags=02
f994: 01 3d 00                   ; 1, =
;
f997: a3 f9 00 00                ; < - (next: f9a3 /)
f99b: 3b 03 00 00 02             ; XT=033b, flags=02
f9a0: 01 3c 00                   ; 1, <
;
f9a3: af f9 00 00                ; / - (next: f9af *)
f9a7: 34 03 00 00 02             ; XT=0334, flags=02
f9ac: 01 2f 00                   ; 1, /
;
f9af: bb f9 00 00                ; * - (next: f9bb -)
f9b3: 2d 03 00 00 02             ; XT=032d, flags=02
f9b8: 01 2a 00                   ; 1, *
;
f9bb: c7 f9 00 00                ; - - (next: f9c7 +)
f9bf: 26 03 00 00 02             ; XT=0326, flags=02
f9c4: 01 2d 00                   ; 1, -
;
f9c7: d3 f9 00 00                ; + - (next: f9d3 COMPAREI)
f9cb: 1f 03 00 00 02             ; XT=031f, flags=02
f9d0: 01 2b 00                   ; 1, +
;
f9d3: e6 f9 00 00                ; COMPAREI - (next: f9e6 COMPARE)
f9d7: 18 03 00 00 02             ; XT=0318, flags=02
f9dc: 08 43 4f 4d 50 41 52 45 49 00 ; 8, COMPAREI
;
f9e6: f8 f9 00 00                ; COMPARE - (next: f9f8 OVER)
f9ea: 11 03 00 00 02             ; XT=0311, flags=02
f9ef: 07 43 4f 4d 50 41 52 45 00 ; 7, COMPARE
;
f9f8: 07 fa 00 00                ; OVER - (next: fa07 DUP)
f9fc: 0a 03 00 00 02             ; XT=030a, flags=02
fa01: 04 4f 56 45 52 00          ; 4, OVER
;
fa07: 15 fa 00 00                ; DUP - (next: fa15 DROP)
fa0b: 03 03 00 00 02             ; XT=0303, flags=02
fa10: 03 44 55 50 00             ; 3, DUP
;
fa15: 24 fa 00 00                ; DROP - (next: fa24 SWAP)
fa19: fc 02 00 00 02             ; XT=02fc, flags=02
fa1e: 04 44 52 4f 50 00          ; 4, DROP
;
fa24: 33 fa 00 00                ; SWAP - (next: fa33 C!)
fa28: f5 02 00 00 02             ; XT=02f5, flags=02
fa2d: 04 53 57 41 50 00          ; 4, SWAP
;
fa33: 40 fa 00 00                ; C! - (next: fa40 C@)
fa37: ee 02 00 00 02             ; XT=02ee, flags=02
fa3c: 02 43 21 00                ; 2, C!
;
fa40: 4d fa 00 00                ; C@ - (next: fa4d !)
fa44: e7 02 00 00 02             ; XT=02e7, flags=02
fa49: 02 43 40 00                ; 2, C@
;
fa4d: 59 fa 00 00                ; ! - (next: fa59 @)
fa51: e0 02 00 00 02             ; XT=02e0, flags=02
fa56: 01 21 00                   ; 1, !
;
fa59: 65 fa 00 00                ; @ - (next: fa65 a.BYE)
fa5d: d9 02 00 00 02             ; XT=02d9, flags=02
fa62: 01 40 00                   ; 1, @
;
fa65: 75 fa 00 00                ; a.BYE - (next: fa75 a.RESET)
fa69: cc 02 00 00 01             ; XT=02cc, flags=01
fa6e: 05 61 2e 42 59 45 00       ; 5, a.BYE
;
fa75: 87 fa 00 00                ; a.RESET - (next: fa87 a.BREAK)
fa79: bf 02 00 00 01             ; XT=02bf, flags=01
fa7e: 07 61 2e 52 45 53 45 54 00 ; 7, a.RESET
;
fa87: 99 fa 00 00                ; a.BREAK - (next: fa99 a.UPOP)
fa8b: b2 02 00 00 01             ; XT=02b2, flags=01
fa90: 07 61 2e 42 52 45 41 4b 00 ; 7, a.BREAK
;
fa99: aa fa 00 00                ; a.UPOP - (next: faaa a.UPUSH)
fa9d: a5 02 00 00 01             ; XT=02a5, flags=01
faa2: 06 61 2e 55 50 4f 50 00    ; 6, a.UPOP
;
faaa: bc fa 00 00                ; a.UPUSH - (next: fabc a.USTACKINIT)
faae: 98 02 00 00 01             ; XT=0298, flags=01
fab3: 07 61 2e 55 50 55 53 48 00 ; 7, a.UPUSH
;
fabc: d3 fa 00 00                ; a.USTACKINIT - (next: fad3 a.GETCH)
fac0: 8b 02 00 00 01             ; XT=028b, flags=01
fac5: 0c 61 2e 55 53 54 41 43 4b 49 4e 49 54 00 ; 12, a.USTACKINIT
;
fad3: e5 fa 00 00                ; a.GETCH - (next: fae5 a.OR)
fad7: 7e 02 00 00 01             ; XT=027e, flags=01
fadc: 07 61 2e 47 45 54 43 48 00 ; 7, a.GETCH
;
fae5: f4 fa 00 00                ; a.OR - (next: faf4 a.AND)
fae9: 71 02 00 00 01             ; XT=0271, flags=01
faee: 04 61 2e 4f 52 00          ; 4, a.OR
;
faf4: 04 fb 00 00                ; a.AND - (next: fb04 a.DEPTH)
faf8: 64 02 00 00 01             ; XT=0264, flags=01
fafd: 05 61 2e 41 4e 44 00       ; 5, a.AND
;
fb04: 16 fb 00 00                ; a.DEPTH - (next: fb16 a.LOGLEVEL)
fb08: 57 02 00 00 01             ; XT=0257, flags=01
fb0d: 07 61 2e 44 45 50 54 48 00 ; 7, a.DEPTH
;
fb16: 2b fb 00 00                ; a.LOGLEVEL - (next: fb2b a.PICK)
fb1a: 4a 02 00 00 01             ; XT=024a, flags=01
fb1f: 0a 61 2e 4c 4f 47 4c 45 56 45 4c 00 ; 10, a.LOGLEVEL
;
fb2b: 3c fb 00 00                ; a.PICK - (next: fb3c a.RTOD)
fb2f: 3d 02 00 00 01             ; XT=023d, flags=01
fb34: 06 61 2e 50 49 43 4b 00    ; 6, a.PICK
;
fb3c: 4d fb 00 00                ; a.RTOD - (next: fb4d a.DTOR)
fb40: 30 02 00 00 01             ; XT=0230, flags=01
fb45: 06 61 2e 52 54 4f 44 00    ; 6, a.RTOD
;
fb4d: 5e fb 00 00                ; a.DTOR - (next: fb5e a.SLITERAL)
fb51: 23 02 00 00 01             ; XT=0223, flags=01
fb56: 06 61 2e 44 54 4f 52 00    ; 6, a.DTOR
;
fb5e: 73 fb 00 00                ; a.SLITERAL - (next: fb73 a.FCLOSE)
fb62: 16 02 00 00 01             ; XT=0216, flags=01
fb67: 0a 61 2e 53 4c 49 54 45 52 41 4c 00 ; 10, a.SLITERAL
;
fb73: 86 fb 00 00                ; a.FCLOSE - (next: fb86 a.FWRITE)
fb77: 09 02 00 00 01             ; XT=0209, flags=01
fb7c: 08 61 2e 46 43 4c 4f 53 45 00 ; 8, a.FCLOSE
;
fb86: 99 fb 00 00                ; a.FWRITE - (next: fb99 a.FREADLINE)
fb8a: fc 01 00 00 01             ; XT=01fc, flags=01
fb8f: 08 61 2e 46 57 52 49 54 45 00 ; 8, a.FWRITE
;
fb99: af fb 00 00                ; a.FREADLINE - (next: fbaf a.FREAD)
fb9d: ef 01 00 00 01             ; XT=01ef, flags=01
fba2: 0b 61 2e 46 52 45 41 44 4c 49 4e 45 00 ; 11, a.FREADLINE
;
fbaf: c1 fb 00 00                ; a.FREAD - (next: fbc1 a.FOPEN)
fbb3: e2 01 00 00 01             ; XT=01e2, flags=01
fbb8: 07 61 2e 46 52 45 41 44 00 ; 7, a.FREAD
;
fbc1: d3 fb 00 00                ; a.FOPEN - (next: fbd3 a.EMIT)
fbc5: d5 01 00 00 01             ; XT=01d5, flags=01
fbca: 07 61 2e 46 4f 50 45 4e 00 ; 7, a.FOPEN
;
fbd3: e4 fb 00 00                ; a.EMIT - (next: fbe4 a.DICTP)
fbd7: c8 01 00 00 01             ; XT=01c8, flags=01
fbdc: 06 61 2e 45 4d 49 54 00    ; 6, a.EMIT
;
fbe4: f6 fb 00 00                ; a.DICTP - (next: fbf6 a.GT)
fbe8: bb 01 00 00 01             ; XT=01bb, flags=01
fbed: 07 61 2e 44 49 43 54 50 00 ; 7, a.DICTP
;
fbf6: 05 fc 00 00                ; a.GT - (next: fc05 a.EQ)
fbfa: ae 01 00 00 01             ; XT=01ae, flags=01
fbff: 04 61 2e 47 54 00          ; 4, a.GT
;
fc05: 14 fc 00 00                ; a.EQ - (next: fc14 a.LT)
fc09: a1 01 00 00 01             ; XT=01a1, flags=01
fc0e: 04 61 2e 45 51 00          ; 4, a.EQ
;
fc14: 23 fc 00 00                ; a.LT - (next: fc23 a.DIV)
fc18: 94 01 00 00 01             ; XT=0194, flags=01
fc1d: 04 61 2e 4c 54 00          ; 4, a.LT
;
fc23: 33 fc 00 00                ; a.DIV - (next: fc33 a.MUL)
fc27: 87 01 00 00 01             ; XT=0187, flags=01
fc2c: 05 61 2e 44 49 56 00       ; 5, a.DIV
;
fc33: 43 fc 00 00                ; a.MUL - (next: fc43 a.SUB)
fc37: 7a 01 00 00 01             ; XT=017a, flags=01
fc3c: 05 61 2e 4d 55 4c 00       ; 5, a.MUL
;
fc43: 53 fc 00 00                ; a.SUB - (next: fc53 a.ADD)
fc47: 6d 01 00 00 01             ; XT=016d, flags=01
fc4c: 05 61 2e 53 55 42 00       ; 5, a.SUB
;
fc53: 63 fc 00 00                ; a.ADD - (next: fc63 a.COMPAREI)
fc57: 60 01 00 00 01             ; XT=0160, flags=01
fc5c: 05 61 2e 41 44 44 00       ; 5, a.ADD
;
fc63: 78 fc 00 00                ; a.COMPAREI - (next: fc78 a.COMPARE)
fc67: 53 01 00 00 01             ; XT=0153, flags=01
fc6c: 0a 61 2e 43 4f 4d 50 41 52 45 49 00 ; 10, a.COMPAREI
;
fc78: 8c fc 00 00                ; a.COMPARE - (next: fc8c a.RET)
fc7c: 46 01 00 00 01             ; XT=0146, flags=01
fc81: 09 61 2e 43 4f 4d 50 41 52 45 00 ; 9, a.COMPARE
;
fc8c: 9c fc 00 00                ; a.RET - (next: fc9c a.CALL)
fc90: 39 01 00 00 01             ; XT=0139, flags=01
fc95: 05 61 2e 52 45 54 00       ; 5, a.RET
;
fc9c: ad fc 00 00                ; a.CALL - (next: fcad a.JMPNZ)
fca0: 2c 01 00 00 01             ; XT=012c, flags=01
fca5: 06 61 2e 43 41 4c 4c 00    ; 6, a.CALL
;
fcad: bf fc 00 00                ; a.JMPNZ - (next: fcbf a.JMPZ)
fcb1: 1f 01 00 00 01             ; XT=011f, flags=01
fcb6: 07 61 2e 4a 4d 50 4e 5a 00 ; 7, a.JMPNZ
;
fcbf: d0 fc 00 00                ; a.JMPZ - (next: fcd0 a.JMP)
fcc3: 12 01 00 00 01             ; XT=0112, flags=01
fcc8: 06 61 2e 4a 4d 50 5a 00    ; 6, a.JMPZ
;
fcd0: e0 fc 00 00                ; a.JMP - (next: fce0 a.OVER)
fcd4: 05 01 00 00 01             ; XT=0105, flags=01
fcd9: 05 61 2e 4a 4d 50 00       ; 5, a.JMP
;
fce0: f1 fc 00 00                ; a.OVER - (next: fcf1 a.DUP)
fce4: f8 00 00 00 01             ; XT=00f8, flags=01
fce9: 06 61 2e 4f 56 45 52 00    ; 6, a.OVER
;
fcf1: 01 fd 00 00                ; a.DUP - (next: fd01 a.DROP)
fcf5: eb 00 00 00 01             ; XT=00eb, flags=01
fcfa: 05 61 2e 44 55 50 00       ; 5, a.DUP
;
fd01: 12 fd 00 00                ; a.DROP - (next: fd12 a.SWAP)
fd05: de 00 00 00 01             ; XT=00de, flags=01
fd0a: 06 61 2e 44 52 4f 50 00    ; 6, a.DROP
;
fd12: 23 fd 00 00                ; a.SWAP - (next: fd23 a.CSTORE)
fd16: d1 00 00 00 01             ; XT=00d1, flags=01
fd1b: 06 61 2e 53 57 41 50 00    ; 6, a.SWAP
;
fd23: 36 fd 00 00                ; a.CSTORE - (next: fd36 a.CFETCH)
fd27: c4 00 00 00 01             ; XT=00c4, flags=01
fd2c: 08 61 2e 43 53 54 4f 52 45 00 ; 8, a.CSTORE
;
fd36: 49 fd 00 00                ; a.CFETCH - (next: fd49 a.STORE)
fd3a: b7 00 00 00 01             ; XT=00b7, flags=01
fd3f: 08 61 2e 43 46 45 54 43 48 00 ; 8, a.CFETCH
;
fd49: 5b fd 00 00                ; a.STORE - (next: fd5b a.FETCH)
fd4d: aa 00 00 00 01             ; XT=00aa, flags=01
fd52: 07 61 2e 53 54 4f 52 45 00 ; 7, a.STORE
;
fd5b: 6d fd 00 00                ; a.FETCH - (next: fd6d a.CPUSH)
fd5f: 9d 00 00 00 01             ; XT=009d, flags=01
fd64: 07 61 2e 46 45 54 43 48 00 ; 7, a.FETCH
;
fd6d: 7f fd 00 00                ; a.CPUSH - (next: fd7f a.PUSH)
fd71: 90 00 00 00 01             ; XT=0090, flags=01
fd76: 07 61 2e 43 50 55 53 48 00 ; 7, a.CPUSH
;
fd7f: 90 fd 00 00                ; a.PUSH - (next: fd90 C,)
fd83: 83 00 00 00 01             ; XT=0083, flags=01
fd88: 06 61 2e 50 55 53 48 00    ; 6, a.PUSH
;
fd90: 9d fd 00 00                ; C, - (next: fd9d STATE)
fd94: 70 00 00 00 00             ; XT=0070, flags=00
fd99: 02 43 2c 00                ; 2, C,
;
fd9d: ad fd 00 00                ; STATE - (next: fdad INPUT-FP)
fda1: 68 00 00 00 02             ; XT=0068, flags=02
fda6: 05 53 54 41 54 45 00       ; 5, STATE
;
fdad: c0 fd 00 00                ; INPUT-FP - (next: fdc0 (LAST))
fdb1: 60 00 00 00 02             ; XT=0060, flags=02
fdb6: 08 49 4e 50 55 54 2d 46 50 00 ; 8, INPUT-FP
;
fdc0: d1 fd 00 00                ; (LAST) - (next: fdd1 DP)
fdc4: 58 00 00 00 02             ; XT=0058, flags=02
fdc9: 06 28 4c 41 53 54 29 00    ; 6, (LAST)
;
fdd1: de fd 00 00                ; DP - (next: fdde CELL)
fdd5: 50 00 00 00 02             ; XT=0050, flags=02
fdda: 02 44 50 00                ; 2, DP
;
fdde: ed fd 00 00                ; CELL - (next: fded BASE)
fde2: 48 00 00 00 02             ; XT=0048, flags=02
fde7: 04 43 45 4c 4c 00          ; 4, CELL
;
fded: fc fd 00 00                ; BASE - (next: fdfc <end>)
fdf1: 40 00 00 00 02             ; XT=0040, flags=02
fdf6: 04 42 41 53 45 00          ; 4, BASE
;
fdfc: 00 00 00 00                ; End.
