; memory-size: 65536 bytes, (10000 hex)
; data-stack: fe00, grows up
; return-stack: fffc, grows down
;
0000: 08 e2 05 00 00             ; JMP (tmp) (05e2)
;
0005: 00 0a 04
0008: 00000000 00000000
0010: 000005f0 0000f6ab 00000000 00000000
0020: 00000000 00010000 00000000 00000000
0030: 00000000 00000000 00000000 00000000
;
0040: 18 ed fd 00 00             ; DICTP BASE (fded)
0045: 0e 06                      ; CLITERAL 6
0047: 0c                         ; RET
;
0048: 18 de fd 00 00             ; DICTP CELL (fdde)
004d: 0e 04                      ; CLITERAL 4
004f: 0c                         ; RET
;
0050: 18 cd fd 00 00             ; DICTP (HERE) (fdcd)
0055: 0e 10                      ; CLITERAL 16
0057: 0c                         ; RET
;
0058: 18 bc fd 00 00             ; DICTP (LAST) (fdbc)
005d: 0e 14                      ; CLITERAL 20
005f: 0c                         ; RET
;
0060: 18 a9 fd 00 00             ; DICTP INPUT-FP (fda9)
0065: 0e 1c                      ; CLITERAL 28
0067: 0c                         ; RET
;
0068: 18 99 fd 00 00             ; DICTP STATE (fd99)
006d: 0e 20                      ; CLITERAL 32
006f: 0c                         ; RET
;
0070: 18 8c fd 00 00             ; DICTP C, (fd8c)
0075: 0e 10                      ; CLITERAL 16
0077: 02                         ; FETCH
0078: 10                         ; CSTORE
0079: 0e 10                      ; CLITERAL 16
007b: 02                         ; FETCH
007c: 0e 01                      ; CLITERAL 1
007e: 11                         ; ADD
007f: 0e 10                      ; CLITERAL 16
0081: 03                         ; STORE
0082: 0c                         ; RET
;
0083: 18 80 fd 00 00             ; DICTP , (fd80)
0088: 0e 10                      ; CLITERAL 16
008a: 02                         ; FETCH
008b: 03                         ; STORE
008c: 0e 10                      ; CLITERAL 16
008e: 02                         ; FETCH
008f: 0e 04                      ; CLITERAL 4
0091: 11                         ; ADD
0092: 0e 10                      ; CLITERAL 16
0094: 03                         ; STORE
0095: 0c                         ; RET
;
0096: 18 74 fd 00 00             ; DICTP [ (fd74)
009b: 0e 00                      ; CLITERAL 0
009d: 0e 20                      ; CLITERAL 32
009f: 03                         ; STORE
00a0: 0c                         ; RET
;
00a1: 18 68 fd 00 00             ; DICTP ] (fd68)
00a6: 0e 01                      ; CLITERAL 1
00a8: 0e 20                      ; CLITERAL 32
00aa: 03                         ; STORE
00ab: 0c                         ; RET
;
00ac: 18 56 fd 00 00             ; DICTP LITERAL (fd56)
00b1: 0e 01                      ; CLITERAL 1
00b3: 0b 70 00 00 00             ; CALL C, (0070)
00b8: 0c                         ; RET
;
00b9: 18 4a fd 00 00             ; DICTP @ (fd4a)
00be: 02                         ; FETCH
00bf: 0c                         ; RET
;
00c0: 18 3e fd 00 00             ; DICTP ! (fd3e)
00c5: 03                         ; STORE
00c6: 0c                         ; RET
;
00c7: 18 2f fd 00 00             ; DICTP SWAP (fd2f)
00cc: 04                         ; SWAP
00cd: 0c                         ; RET
;
00ce: 18 20 fd 00 00             ; DICTP DROP (fd20)
00d3: 05                         ; DROP
00d4: 0c                         ; RET
;
00d5: 18 12 fd 00 00             ; DICTP DUP (fd12)
00da: 06                         ; DUP
00db: 0c                         ; RET
;
00dc: 18 ff fc 00 00             ; DICTP SLITERAL (fcff)
00e1: 0e 07                      ; CLITERAL 7
00e3: 0b 70 00 00 00             ; CALL C, (0070)
00e8: 0c                         ; RET
;
00e9: 18 f1 fc 00 00             ; DICTP JMP (fcf1)
00ee: 0e 08                      ; CLITERAL 8
00f0: 0b 70 00 00 00             ; CALL C, (0070)
00f5: 0c                         ; RET
;
00f6: 18 e2 fc 00 00             ; DICTP JMPZ (fce2)
00fb: 0e 09                      ; CLITERAL 9
00fd: 0b 70 00 00 00             ; CALL C, (0070)
0102: 0c                         ; RET
;
0103: 18 d2 fc 00 00             ; DICTP JMPNZ (fcd2)
0108: 0e 0a                      ; CLITERAL 10
010a: 0b 70 00 00 00             ; CALL C, (0070)
010f: 0c                         ; RET
;
0110: 18 c3 fc 00 00             ; DICTP CALL (fcc3)
0115: 0e 0b                      ; CLITERAL 11
0117: 0b 70 00 00 00             ; CALL C, (0070)
011c: 0c                         ; RET
;
011d: 18 b5 fc 00 00             ; DICTP RET (fcb5)
0122: 0e 0c                      ; CLITERAL 12
0124: 0b 70 00 00 00             ; CALL C, (0070)
0129: 0c                         ; RET
;
012a: 18 a8 fc 00 00             ; DICTP OR (fca8)
012f: 0d                         ; OR
0130: 0c                         ; RET
;
0131: 18 95 fc 00 00             ; DICTP CLITERAL (fc95)
0136: 0e 0e                      ; CLITERAL 14
0138: 0b 70 00 00 00             ; CALL C, (0070)
013d: 0c                         ; RET
;
013e: 18 88 fc 00 00             ; DICTP C@ (fc88)
0143: 0f                         ; CFETCH
0144: 0c                         ; RET
;
0145: 18 7b fc 00 00             ; DICTP C! (fc7b)
014a: 10                         ; CSTORE
014b: 0c                         ; RET
;
014c: 18 6f fc 00 00             ; DICTP + (fc6f)
0151: 11                         ; ADD
0152: 0c                         ; RET
;
0153: 18 63 fc 00 00             ; DICTP - (fc63)
0158: 12                         ; SUB
0159: 0c                         ; RET
;
015a: 18 57 fc 00 00             ; DICTP * (fc57)
015f: 13                         ; MUL
0160: 0c                         ; RET
;
0161: 18 4b fc 00 00             ; DICTP / (fc4b)
0166: 14                         ; DIV
0167: 0c                         ; RET
;
0168: 18 3f fc 00 00             ; DICTP < (fc3f)
016d: 15                         ; LT
016e: 0c                         ; RET
;
016f: 18 33 fc 00 00             ; DICTP = (fc33)
0174: 16                         ; EQ
0175: 0c                         ; RET
;
0176: 18 27 fc 00 00             ; DICTP > (fc27)
017b: 17                         ; GT
017c: 0c                         ; RET
;
017d: 18 17 fc 00 00             ; DICTP DICTP (fc17)
0182: 0e 18                      ; CLITERAL 24
0184: 0b 70 00 00 00             ; CALL C, (0070)
0189: 0c                         ; RET
;
018a: 18 08 fc 00 00             ; DICTP EMIT (fc08)
018f: 19                         ; EMIT
0190: 0c                         ; RET
;
0191: 18 f9 fb 00 00             ; DICTP OVER (fbf9)
0196: 1a                         ; OVER
0197: 0c                         ; RET
;
0198: 18 e7 fb 00 00             ; DICTP COMPARE (fbe7)
019d: 1b                         ; COMPARE
019e: 0c                         ; RET
;
019f: 18 d7 fb 00 00             ; DICTP FOPEN (fbd7)
01a4: 1c                         ; FOPEN
01a5: 0c                         ; RET
;
01a6: 18 c7 fb 00 00             ; DICTP FREAD (fbc7)
01ab: 1d                         ; FREAD
01ac: 0c                         ; RET
;
01ad: 18 b3 fb 00 00             ; DICTP FREADLINE (fbb3)
01b2: 1e                         ; FREADLINE
01b3: 0c                         ; RET
;
01b4: 18 a2 fb 00 00             ; DICTP FWRITE (fba2)
01b9: 1f                         ; FWRITE
01ba: 0c                         ; RET
;
01bb: 18 91 fb 00 00             ; DICTP FCLOSE (fb91)
01c0: 20                         ; FCLOSE
01c1: 0c                         ; RET
;
01c2: 18 84 fb 00 00             ; DICTP >R (fb84)
01c7: 21                         ; DTOR
01c8: 0c                         ; RET
;
01c9: 18 77 fb 00 00             ; DICTP R> (fb77)
01ce: 22                         ; RTOD
01cf: 0c                         ; RET
;
01d0: 18 64 fb 00 00             ; DICTP LOGLEVEL (fb64)
01d5: 23                         ; LOGLEVEL
01d6: 0c                         ; RET
;
01d7: 18 56 fb 00 00             ; DICTP AND (fb56)
01dc: 24                         ; AND
01dd: 0c                         ; RET
;
01de: 18 47 fb 00 00             ; DICTP PICK (fb47)
01e3: 25                         ; PICK
01e4: 0c                         ; RET
;
01e5: 18 37 fb 00 00             ; DICTP DEPTH (fb37)
01ea: 26                         ; DEPTH
01eb: 0c                         ; RET
;
01ec: 18 27 fb 00 00             ; DICTP GETCH (fb27)
01f1: 27                         ; GETCH
01f2: 0c                         ; RET
;
01f3: 18 14 fb 00 00             ; DICTP COMPAREI (fb14)
01f8: 28                         ; COMPAREI
01f9: 0c                         ; RET
;
01fa: 18 03 fb 00 00             ; DICTP USINIT (fb03)
01ff: 29                         ; USTACKINIT
0200: 0c                         ; RET
;
0201: 18 f2 fa 00 00             ; DICTP USPUSH (faf2)
0206: 2a                         ; UPUSH
0207: 0c                         ; RET
;
0208: 18 e2 fa 00 00             ; DICTP USPOP (fae2)
020d: 2b                         ; UPOP
020e: 0c                         ; RET
;
020f: 18 d2 fa 00 00             ; DICTP BREAK (fad2)
0214: fd                         ; BREAK
0215: 0c                         ; RET
;
0216: 18 c2 fa 00 00             ; DICTP RESET (fac2)
021b: fe                         ; RESET
021c: 0c                         ; RET
;
021d: 18 b4 fa 00 00             ; DICTP BYE (fab4)
0222: ff                         ; BYE
0223: 0c                         ; RET
;
0224: 18 a3 fa 00 00             ; DICTP INLINE (faa3)
0229: 0e 14                      ; CLITERAL 20
022b: 02                         ; FETCH
022c: 0e 02                      ; CLITERAL 2
022e: 0e 04                      ; CLITERAL 4
0230: 13                         ; MUL
0231: 11                         ; ADD
0232: 06                         ; DUP
0233: 0f                         ; CFETCH
0234: 0e 02                      ; CLITERAL 2
0236: 0d                         ; OR
0237: 04                         ; SWAP
0238: 10                         ; CSTORE
0239: 0c                         ; RET
;
023a: 18 8f fa 00 00             ; DICTP IMMEDIATE (fa8f)
023f: 0e 14                      ; CLITERAL 20
0241: 02                         ; FETCH
0242: 0e 02                      ; CLITERAL 2
0244: 0e 04                      ; CLITERAL 4
0246: 13                         ; MUL
0247: 11                         ; ADD
0248: 06                         ; DUP
0249: 0f                         ; CFETCH
024a: 0e 01                      ; CLITERAL 1
024c: 0d                         ; OR
024d: 04                         ; SWAP
024e: 10                         ; CSTORE
024f: 0c                         ; RET
;
0250: 18 7f fa 00 00             ; DICTP CELLS (fa7f)
0255: 0e 04                      ; CLITERAL 4
0257: 13                         ; MUL
0258: 0c                         ; RET
;
0259: 18 66 fa 00 00             ; DICTP FLAG_IMMEDIATE (fa66)
025e: 0e 01                      ; CLITERAL 1
0260: 0c                         ; RET
;
0261: 18 50 fa 00 00             ; DICTP FLAG_INLINE (fa50)
0266: 0e 02                      ; CLITERAL 2
0268: 0c                         ; RET
;
0269: 18 41 fa 00 00             ; DICTP LAST (fa41)
026e: 0e 14                      ; CLITERAL 20
0270: 02                         ; FETCH
0271: 0c                         ; RET
;
0272: 18 32 fa 00 00             ; DICTP HERE (fa32)
0277: 0e 10                      ; CLITERAL 16
0279: 02                         ; FETCH
027a: 0c                         ; RET
;
027b: 18 26 fa 00 00             ; DICTP , (fa26)
0280: 0e 10                      ; CLITERAL 16
0282: 02                         ; FETCH
0283: 03                         ; STORE
0284: 0e 10                      ; CLITERAL 16
0286: 02                         ; FETCH
0287: 0e 04                      ; CLITERAL 4
0289: 11                         ; ADD
028a: 0e 10                      ; CLITERAL 16
028c: 03                         ; STORE
028d: 0c                         ; RET
;
028e: 18 19 fa 00 00             ; DICTP C, (fa19)
0293: 0e 10                      ; CLITERAL 16
0295: 02                         ; FETCH
0296: 10                         ; CSTORE
0297: 0e 10                      ; CLITERAL 16
0299: 02                         ; FETCH
029a: 0e 01                      ; CLITERAL 1
029c: 11                         ; ADD
029d: 0e 10                      ; CLITERAL 16
029f: 03                         ; STORE
02a0: 0c                         ; RET
;
02a1: 18 0b fa 00 00             ; DICTP HEX (fa0b)
02a6: 0e 10                      ; CLITERAL 16
02a8: 0e 06                      ; CLITERAL 6
02aa: 10                         ; CSTORE
02ab: 0c                         ; RET
;
02ac: 18 f9 f9 00 00             ; DICTP DECIMAL (f9f9)
02b1: 0e 0a                      ; CLITERAL 10
02b3: 0e 06                      ; CLITERAL 6
02b5: 10                         ; CSTORE
02b6: 0c                         ; RET
;
02b7: 18 e9 f9 00 00             ; DICTP OCTAL (f9e9)
02bc: 0e 08                      ; CLITERAL 8
02be: 0e 06                      ; CLITERAL 6
02c0: 10                         ; CSTORE
02c1: 0c                         ; RET
;
02c2: 18 d8 f9 00 00             ; DICTP BINARY (f9d8)
02c7: 0e 02                      ; CLITERAL 2
02c9: 0e 06                      ; CLITERAL 6
02cb: 10                         ; CSTORE
02cc: 0c                         ; RET
;
02cd: 18 cb f9 00 00             ; DICTP ON (f9cb)
02d2: 0e 01                      ; CLITERAL 1
02d4: 04                         ; SWAP
02d5: 03                         ; STORE
02d6: 0c                         ; RET
;
02d7: 18 bd f9 00 00             ; DICTP OFF (f9bd)
02dc: 0e 00                      ; CLITERAL 0
02de: 04                         ; SWAP
02df: 03                         ; STORE
02e0: 0c                         ; RET
;
02e1: 18 a8 f9 00 00             ; DICTP ?COMPILING (f9a8)
02e6: 0e 20                      ; CLITERAL 32
02e8: 02                         ; FETCH
02e9: 0c                         ; RET
;
02ea: 18 9b f9 00 00             ; DICTP IF (f99b)
02ef: 0b e1 02 00 00             ; CALL ?COMPILING (02e1)
02f4: 09 08 03 00 00             ; JMPZ 0308
02f9: 0b f6 00 00 00             ; CALL JMPZ (00f6)
02fe: 0e 10                      ; CLITERAL 16
0300: 02                         ; FETCH
0301: 0e 00                      ; CLITERAL 0
0303: 0b 7b 02 00 00             ; CALL , (027b)
0308: 0c                         ; RET
;
0309: 18 8c f9 00 00             ; DICTP ELSE (f98c)
030e: 0b e1 02 00 00             ; CALL ?COMPILING (02e1)
0313: 09 2d 03 00 00             ; JMPZ 032d
0318: 0b e9 00 00 00             ; CALL JMP (00e9)
031d: 0e 10                      ; CLITERAL 16
031f: 02                         ; FETCH
0320: 04                         ; SWAP
0321: 0e 00                      ; CLITERAL 0
0323: 0b 7b 02 00 00             ; CALL , (027b)
0328: 0e 10                      ; CLITERAL 16
032a: 02                         ; FETCH
032b: 04                         ; SWAP
032c: 03                         ; STORE
032d: 0c                         ; RET
;
032e: 18 7d f9 00 00             ; DICTP THEN (f97d)
0333: 0b e1 02 00 00             ; CALL ?COMPILING (02e1)
0338: 09 42 03 00 00             ; JMPZ 0342
033d: 0e 10                      ; CLITERAL 16
033f: 02                         ; FETCH
0340: 04                         ; SWAP
0341: 03                         ; STORE
0342: 0c                         ; RET
;
0343: 18 6d f9 00 00             ; DICTP BEGIN (f96d)
0348: 0b e1 02 00 00             ; CALL ?COMPILING (02e1)
034d: 09 55 03 00 00             ; JMPZ 0355
0352: 0e 10                      ; CLITERAL 16
0354: 02                         ; FETCH
0355: 0c                         ; RET
;
0356: 18 5d f9 00 00             ; DICTP AGAIN (f95d)
035b: 0b e1 02 00 00             ; CALL ?COMPILING (02e1)
0360: 09 6f 03 00 00             ; JMPZ 036f
0365: 0b e9 00 00 00             ; CALL JMP (00e9)
036a: 0b 7b 02 00 00             ; CALL , (027b)
036f: 0c                         ; RET
;
0370: 18 4d f9 00 00             ; DICTP WHILE (f94d)
0375: 0b e1 02 00 00             ; CALL ?COMPILING (02e1)
037a: 09 89 03 00 00             ; JMPZ 0389
037f: 0b 03 01 00 00             ; CALL JMPNZ (0103)
0384: 0b 7b 02 00 00             ; CALL , (027b)
0389: 0c                         ; RET
;
038a: 18 3d f9 00 00             ; DICTP UNTIL (f93d)
038f: 0b e1 02 00 00             ; CALL ?COMPILING (02e1)
0394: 09 a3 03 00 00             ; JMPZ 03a3
0399: 0b f6 00 00 00             ; CALL JMPZ (00f6)
039e: 0b 7b 02 00 00             ; CALL , (027b)
03a3: 0c                         ; RET
;
03a4: 18 2d f9 00 00             ; DICTP LEAVE (f92d)
03a9: 0b e1 02 00 00             ; CALL ?COMPILING (02e1)
03ae: 09 b8 03 00 00             ; JMPZ 03b8
03b3: 0b 1d 01 00 00             ; CALL RET (011d)
03b8: 0c                         ; RET
;
03b9: 18 1f f9 00 00             ; DICTP >IN (f91f)
03be: 01 c4 03 00 00             ; LITERAL 964 (3c4)
03c3: 0c                         ; RET
03c4: 00                         ; RESET
03c5: 00                         ; RESET
03c6: 00                         ; RESET
03c7: 00                         ; RESET
03c8: 0c                         ; RET
;
03c9: 18 0f f9 00 00             ; DICTP isNeg (f90f)
03ce: 01 d4 03 00 00             ; LITERAL 980 (3d4)
03d3: 0c                         ; RET
03d4: 00                         ; RESET
03d5: 00                         ; RESET
03d6: 00                         ; RESET
03d7: 00                         ; RESET
03d8: 0c                         ; RET
;
03d9: 18 fe f8 00 00             ; DICTP MEM_SZ (f8fe)
03de: 0e 24                      ; CLITERAL 36
03e0: 02                         ; FETCH
03e1: 0c                         ; RET
;
03e2: 18 eb f8 00 00             ; DICTP TRACE-ON (f8eb)
03e7: 0e 02                      ; CLITERAL 2
03e9: 23                         ; LOGLEVEL
03ea: 0c                         ; RET
;
03eb: 18 d7 f8 00 00             ; DICTP TRACE-OFF (f8d7)
03f0: 0e 00                      ; CLITERAL 0
03f2: 23                         ; LOGLEVEL
03f3: 0c                         ; RET
;
03f4: 18 c4 f8 00 00             ; DICTP DEBUG-ON (f8c4)
03f9: 0e 01                      ; CLITERAL 1
03fb: 23                         ; LOGLEVEL
03fc: 0c                         ; RET
;
03fd: 18 b0 f8 00 00             ; DICTP DEBUG-OFF (f8b0)
0402: 0e 00                      ; CLITERAL 0
0404: 23                         ; LOGLEVEL
0405: 0c                         ; RET
;
0406: 18 a3 f8 00 00             ; DICTP R@ (f8a3)
040b: 22                         ; RTOD
040c: 06                         ; DUP
040d: 21                         ; DTOR
040e: 0c                         ; RET
;
040f: 18 93 f8 00 00             ; DICTP RDROP (f893)
0414: 22                         ; RTOD
0415: 05                         ; DROP
0416: 0c                         ; RET
;
0417: 18 84 f8 00 00             ; DICTP 2DUP (f884)
041c: 1a                         ; OVER
041d: 1a                         ; OVER
041e: 0c                         ; RET
;
041f: 18 74 f8 00 00             ; DICTP 2DROP (f874)
0424: 05                         ; DROP
0425: 05                         ; DROP
0426: 0c                         ; RET
;
0427: 18 65 f8 00 00             ; DICTP TUCK (f865)
042c: 04                         ; SWAP
042d: 1a                         ; OVER
042e: 0c                         ; RET
;
042f: 18 57 f8 00 00             ; DICTP NIP (f857)
0434: 04                         ; SWAP
0435: 05                         ; DROP
0436: 0c                         ; RET
;
0437: 18 49 f8 00 00             ; DICTP ROT (f849)
043c: 21                         ; DTOR
043d: 04                         ; SWAP
043e: 22                         ; RTOD
043f: 04                         ; SWAP
0440: 0c                         ; RET
;
0441: 18 3a f8 00 00             ; DICTP -ROT (f83a)
0446: 04                         ; SWAP
0447: 21                         ; DTOR
0448: 04                         ; SWAP
0449: 22                         ; RTOD
044a: 0c                         ; RET
;
044b: 18 2d f8 00 00             ; DICTP 1+ (f82d)
0450: 0e 01                      ; CLITERAL 1
0452: 11                         ; ADD
0453: 0c                         ; RET
;
0454: 18 20 f8 00 00             ; DICTP 1- (f820)
0459: 0e 01                      ; CLITERAL 1
045b: 12                         ; SUB
045c: 0c                         ; RET
;
045d: 18 13 f8 00 00             ; DICTP 2* (f813)
0462: 0e 02                      ; CLITERAL 2
0464: 13                         ; MUL
0465: 0c                         ; RET
;
0466: 18 06 f8 00 00             ; DICTP 2/ (f806)
046b: 0e 02                      ; CLITERAL 2
046d: 14                         ; DIV
046e: 0c                         ; RET
;
046f: 18 f9 f7 00 00             ; DICTP += (f7f9)
0474: 1a                         ; OVER
0475: 02                         ; FETCH
0476: 11                         ; ADD
0477: 04                         ; SWAP
0478: 03                         ; STORE
0479: 0c                         ; RET
;
047a: 18 ec f7 00 00             ; DICTP -= (f7ec)
047f: 1a                         ; OVER
0480: 02                         ; FETCH
0481: 04                         ; SWAP
0482: 12                         ; SUB
0483: 04                         ; SWAP
0484: 03                         ; STORE
0485: 0c                         ; RET
;
0486: 18 df f7 00 00             ; DICTP ++ (f7df)
048b: 0e 01                      ; CLITERAL 1
048d: 0b 6f 04 00 00             ; CALL += (046f)
0492: 0c                         ; RET
;
0493: 18 d2 f7 00 00             ; DICTP -- (f7d2)
0498: 0e 01                      ; CLITERAL 1
049a: 0b 7a 04 00 00             ; CALL -= (047a)
049f: 0c                         ; RET
;
04a0: 18 c4 f7 00 00             ; DICTP C++ (f7c4)
04a5: 06                         ; DUP
04a6: 0f                         ; CFETCH
04a7: 0e 01                      ; CLITERAL 1
04a9: 11                         ; ADD
04aa: 04                         ; SWAP
04ab: 10                         ; CSTORE
04ac: 0c                         ; RET
;
04ad: 18 b6 f7 00 00             ; DICTP C-- (f7b6)
04b2: 06                         ; DUP
04b3: 0f                         ; CFETCH
04b4: 0e 01                      ; CLITERAL 1
04b6: 12                         ; SUB
04b7: 04                         ; SWAP
04b8: 10                         ; CSTORE
04b9: 0c                         ; RET
;
04ba: 18 a9 f7 00 00             ; DICTP +! (f7a9)
04bf: 04                         ; SWAP
04c0: 1a                         ; OVER
04c1: 02                         ; FETCH
04c2: 11                         ; ADD
04c3: 04                         ; SWAP
04c4: 03                         ; STORE
04c5: 0c                         ; RET
;
04c6: 18 9b f7 00 00             ; DICTP C+! (f79b)
04cb: 04                         ; SWAP
04cc: 1a                         ; OVER
04cd: 0f                         ; CFETCH
04ce: 11                         ; ADD
04cf: 04                         ; SWAP
04d0: 10                         ; CSTORE
04d1: 0c                         ; RET
;
04d2: 18 8e f7 00 00             ; DICTP 0= (f78e)
04d7: 0e 00                      ; CLITERAL 0
04d9: 16                         ; EQ
04da: 0c                         ; RET
;
04db: 18 81 f7 00 00             ; DICTP <> (f781)
04e0: 16                         ; EQ
04e1: 0e 00                      ; CLITERAL 0
04e3: 16                         ; EQ
04e4: 0c                         ; RET
;
04e5: 18 74 f7 00 00             ; DICTP <= (f774)
04ea: 17                         ; GT
04eb: 0e 00                      ; CLITERAL 0
04ed: 16                         ; EQ
04ee: 0c                         ; RET
;
04ef: 18 67 f7 00 00             ; DICTP >= (f767)
04f4: 15                         ; LT
04f5: 0e 00                      ; CLITERAL 0
04f7: 16                         ; EQ
04f8: 0c                         ; RET
;
04f9: 18 58 f7 00 00             ; DICTP TRUE (f758)
04fe: 0e 01                      ; CLITERAL 1
0500: 0c                         ; RET
;
0501: 18 48 f7 00 00             ; DICTP FALSE (f748)
0506: 0e 00                      ; CLITERAL 0
0508: 0c                         ; RET
;
0509: 18 3a f7 00 00             ; DICTP NOT (f73a)
050e: 0e 00                      ; CLITERAL 0
0510: 16                         ; EQ
0511: 0c                         ; RET
;
0512: 18 2a f7 00 00             ; DICTP COUNT (f72a)
0517: 06                         ; DUP
0518: 0e 01                      ; CLITERAL 1
051a: 11                         ; ADD
051b: 04                         ; SWAP
051c: 0f                         ; CFETCH
051d: 0c                         ; RET
;
051e: 18 1b f7 00 00             ; DICTP TYPE (f71b)
0523: 1a                         ; OVER
0524: 11                         ; ADD
0525: 04                         ; SWAP
0526: 1a                         ; OVER
0527: 1a                         ; OVER
0528: 17                         ; GT
0529: 0e 00                      ; CLITERAL 0
052b: 16                         ; EQ
052c: 09 34 05 00 00             ; JMPZ 0534
0531: 05                         ; DROP
0532: 05                         ; DROP
0533: 0c                         ; RET
0534: 06                         ; DUP
0535: 0f                         ; CFETCH
0536: 19                         ; EMIT
0537: 0e 01                      ; CLITERAL 1
0539: 11                         ; ADD
053a: 08 26 05 00 00             ; JMP 0526
053f: 0c                         ; RET
;
0540: 18 0e f7 00 00             ; DICTP CT (f70e)
0545: 0b 12 05 00 00             ; CALL COUNT (0512)
054a: 0b 1e 05 00 00             ; CALL TYPE (051e)
054f: 0c                         ; RET
;
0550: 18 02 f7 00 00             ; DICTP \ (f702)
0555: 0e 00                      ; CLITERAL 0
0557: 0b b9 03 00 00             ; CALL >IN (03b9)
055c: 02                         ; FETCH
055d: 10                         ; CSTORE
055e: 0c                         ; RET
;
055f: 18 f6 f6 00 00             ; DICTP ( (f6f6)
0564: 0b b9 03 00 00             ; CALL >IN (03b9)
0569: 02                         ; FETCH
056a: 0f                         ; CFETCH
056b: 06                         ; DUP
056c: 0e 00                      ; CLITERAL 0
056e: 16                         ; EQ
056f: 09 90 05 00 00             ; JMPZ 0590
0574: 07 13 6d 69 73 73 69 6e 67 20 63 6c 6f 73 69 6e 67 20 27 29 27 00 ; SLITERAL (0575) [missing closing ')']
058a: 0b 40 05 00 00             ; CALL CT (0540)
058f: fe                         ; RESET
0590: 0b b9 03 00 00             ; CALL >IN (03b9)
0595: 0b 86 04 00 00             ; CALL ++ (0486)
059a: 0e 29                      ; CLITERAL 41
059c: 16                         ; EQ
059d: 09 a3 05 00 00             ; JMPZ 05a3
05a2: 0c                         ; RET
05a3: 08 64 05 00 00             ; JMP 0564
05a8: 0c                         ; RET
;
05a9: 18 e9 f6 00 00             ; DICTP BL (f6e9)
05ae: 0e 20                      ; CLITERAL 32
05b0: 19                         ; EMIT
05b1: 0c                         ; RET
;
05b2: 18 da f6 00 00             ; DICTP CRLF (f6da)
05b7: 0e 0d                      ; CLITERAL 13
05b9: 19                         ; EMIT
05ba: 0e 0a                      ; CLITERAL 10
05bc: 19                         ; EMIT
05bd: 0c                         ; RET
;
05be: 18 cd f6 00 00             ; DICTP CR (f6cd)
05c3: 0e 0d                      ; CLITERAL 13
05c5: 19                         ; EMIT
05c6: 0e 0a                      ; CLITERAL 10
05c8: 19                         ; EMIT
05c9: 0c                         ; RET
;
05ca: 18 bb f6 00 00             ; DICTP BETWEEN (f6bb)
05cf: 0e 02                      ; CLITERAL 2
05d1: 25                         ; PICK
05d2: 15                         ; LT
05d3: 09 dd 05 00 00             ; JMPZ 05dd
05d8: 05                         ; DROP
05d9: 05                         ; DROP
05da: 0e 00                      ; CLITERAL 0
05dc: 0c                         ; RET
05dd: 15                         ; LT
05de: 0e 00                      ; CLITERAL 0
05e0: 16                         ; EQ
05e1: 0c                         ; RET
;
05e2: 18 ab f6 00 00             ; DICTP (tmp) (f6ab)
05e7: ec                         ; RESET
05e8: 05                         ; DROP
05e9: 00                         ; RESET
05ea: 00                         ; RESET
05eb: 0c                         ; RET
05ec: 00                         ; RESET
05ed: 00                         ; RESET
05ee: 00                         ; RESET
05ef: 00                         ; RESET
;
; End of code, Dictionary:
;
f6ab: bb f6 00 00                ; (tmp) - (next: f6bb BETWEEN)
f6af: e2 05 00 00 00             ; XT=05e2, flags=00
f6b4: 05 28 74 6d 70 29 00       ; 5, (tmp)
;
f6bb: cd f6 00 00                ; BETWEEN - (next: f6cd CR)
f6bf: ca 05 00 00 00             ; XT=05ca, flags=00
f6c4: 07 42 45 54 57 45 45 4e 00 ; 7, BETWEEN
;
f6cd: da f6 00 00                ; CR - (next: f6da CRLF)
f6d1: be 05 00 00 02             ; XT=05be, flags=02
f6d6: 02 43 52 00                ; 2, CR
;
f6da: e9 f6 00 00                ; CRLF - (next: f6e9 BL)
f6de: b2 05 00 00 02             ; XT=05b2, flags=02
f6e3: 04 43 52 4c 46 00          ; 4, CRLF
;
f6e9: f6 f6 00 00                ; BL - (next: f6f6 ()
f6ed: a9 05 00 00 02             ; XT=05a9, flags=02
f6f2: 02 42 4c 00                ; 2, BL
;
f6f6: 02 f7 00 00                ; ( - (next: f702 \)
f6fa: 5f 05 00 00 01             ; XT=055f, flags=01
f6ff: 01 28 00                   ; 1, (
;
f702: 0e f7 00 00                ; \ - (next: f70e CT)
f706: 50 05 00 00 01             ; XT=0550, flags=01
f70b: 01 5c 00                   ; 1, \
;
f70e: 1b f7 00 00                ; CT - (next: f71b TYPE)
f712: 40 05 00 00 00             ; XT=0540, flags=00
f717: 02 43 54 00                ; 2, CT
;
f71b: 2a f7 00 00                ; TYPE - (next: f72a COUNT)
f71f: 1e 05 00 00 00             ; XT=051e, flags=00
f724: 04 54 59 50 45 00          ; 4, TYPE
;
f72a: 3a f7 00 00                ; COUNT - (next: f73a NOT)
f72e: 12 05 00 00 00             ; XT=0512, flags=00
f733: 05 43 4f 55 4e 54 00       ; 5, COUNT
;
f73a: 48 f7 00 00                ; NOT - (next: f748 FALSE)
f73e: 09 05 00 00 02             ; XT=0509, flags=02
f743: 03 4e 4f 54 00             ; 3, NOT
;
f748: 58 f7 00 00                ; FALSE - (next: f758 TRUE)
f74c: 01 05 00 00 02             ; XT=0501, flags=02
f751: 05 46 41 4c 53 45 00       ; 5, FALSE
;
f758: 67 f7 00 00                ; TRUE - (next: f767 >=)
f75c: f9 04 00 00 02             ; XT=04f9, flags=02
f761: 04 54 52 55 45 00          ; 4, TRUE
;
f767: 74 f7 00 00                ; >= - (next: f774 <=)
f76b: ef 04 00 00 02             ; XT=04ef, flags=02
f770: 02 3e 3d 00                ; 2, >=
;
f774: 81 f7 00 00                ; <= - (next: f781 <>)
f778: e5 04 00 00 02             ; XT=04e5, flags=02
f77d: 02 3c 3d 00                ; 2, <=
;
f781: 8e f7 00 00                ; <> - (next: f78e 0=)
f785: db 04 00 00 02             ; XT=04db, flags=02
f78a: 02 3c 3e 00                ; 2, <>
;
f78e: 9b f7 00 00                ; 0= - (next: f79b C+!)
f792: d2 04 00 00 02             ; XT=04d2, flags=02
f797: 02 30 3d 00                ; 2, 0=
;
f79b: a9 f7 00 00                ; C+! - (next: f7a9 +!)
f79f: c6 04 00 00 00             ; XT=04c6, flags=00
f7a4: 03 43 2b 21 00             ; 3, C+!
;
f7a9: b6 f7 00 00                ; +! - (next: f7b6 C--)
f7ad: ba 04 00 00 00             ; XT=04ba, flags=00
f7b2: 02 2b 21 00                ; 2, +!
;
f7b6: c4 f7 00 00                ; C-- - (next: f7c4 C++)
f7ba: ad 04 00 00 00             ; XT=04ad, flags=00
f7bf: 03 43 2d 2d 00             ; 3, C--
;
f7c4: d2 f7 00 00                ; C++ - (next: f7d2 --)
f7c8: a0 04 00 00 00             ; XT=04a0, flags=00
f7cd: 03 43 2b 2b 00             ; 3, C++
;
f7d2: df f7 00 00                ; -- - (next: f7df ++)
f7d6: 93 04 00 00 00             ; XT=0493, flags=00
f7db: 02 2d 2d 00                ; 2, --
;
f7df: ec f7 00 00                ; ++ - (next: f7ec -=)
f7e3: 86 04 00 00 00             ; XT=0486, flags=00
f7e8: 02 2b 2b 00                ; 2, ++
;
f7ec: f9 f7 00 00                ; -= - (next: f7f9 +=)
f7f0: 7a 04 00 00 00             ; XT=047a, flags=00
f7f5: 02 2d 3d 00                ; 2, -=
;
f7f9: 06 f8 00 00                ; += - (next: f806 2/)
f7fd: 6f 04 00 00 00             ; XT=046f, flags=00
f802: 02 2b 3d 00                ; 2, +=
;
f806: 13 f8 00 00                ; 2/ - (next: f813 2*)
f80a: 66 04 00 00 02             ; XT=0466, flags=02
f80f: 02 32 2f 00                ; 2, 2/
;
f813: 20 f8 00 00                ; 2* - (next: f820 1-)
f817: 5d 04 00 00 02             ; XT=045d, flags=02
f81c: 02 32 2a 00                ; 2, 2*
;
f820: 2d f8 00 00                ; 1- - (next: f82d 1+)
f824: 54 04 00 00 02             ; XT=0454, flags=02
f829: 02 31 2d 00                ; 2, 1-
;
f82d: 3a f8 00 00                ; 1+ - (next: f83a -ROT)
f831: 4b 04 00 00 02             ; XT=044b, flags=02
f836: 02 31 2b 00                ; 2, 1+
;
f83a: 49 f8 00 00                ; -ROT - (next: f849 ROT)
f83e: 41 04 00 00 02             ; XT=0441, flags=02
f843: 04 2d 52 4f 54 00          ; 4, -ROT
;
f849: 57 f8 00 00                ; ROT - (next: f857 NIP)
f84d: 37 04 00 00 02             ; XT=0437, flags=02
f852: 03 52 4f 54 00             ; 3, ROT
;
f857: 65 f8 00 00                ; NIP - (next: f865 TUCK)
f85b: 2f 04 00 00 02             ; XT=042f, flags=02
f860: 03 4e 49 50 00             ; 3, NIP
;
f865: 74 f8 00 00                ; TUCK - (next: f874 2DROP)
f869: 27 04 00 00 02             ; XT=0427, flags=02
f86e: 04 54 55 43 4b 00          ; 4, TUCK
;
f874: 84 f8 00 00                ; 2DROP - (next: f884 2DUP)
f878: 1f 04 00 00 02             ; XT=041f, flags=02
f87d: 05 32 44 52 4f 50 00       ; 5, 2DROP
;
f884: 93 f8 00 00                ; 2DUP - (next: f893 RDROP)
f888: 17 04 00 00 02             ; XT=0417, flags=02
f88d: 04 32 44 55 50 00          ; 4, 2DUP
;
f893: a3 f8 00 00                ; RDROP - (next: f8a3 R@)
f897: 0f 04 00 00 02             ; XT=040f, flags=02
f89c: 05 52 44 52 4f 50 00       ; 5, RDROP
;
f8a3: b0 f8 00 00                ; R@ - (next: f8b0 DEBUG-OFF)
f8a7: 06 04 00 00 02             ; XT=0406, flags=02
f8ac: 02 52 40 00                ; 2, R@
;
f8b0: c4 f8 00 00                ; DEBUG-OFF - (next: f8c4 DEBUG-ON)
f8b4: fd 03 00 00 02             ; XT=03fd, flags=02
f8b9: 09 44 45 42 55 47 2d 4f 46 46 00 ; 9, DEBUG-OFF
;
f8c4: d7 f8 00 00                ; DEBUG-ON - (next: f8d7 TRACE-OFF)
f8c8: f4 03 00 00 02             ; XT=03f4, flags=02
f8cd: 08 44 45 42 55 47 2d 4f 4e 00 ; 8, DEBUG-ON
;
f8d7: eb f8 00 00                ; TRACE-OFF - (next: f8eb TRACE-ON)
f8db: eb 03 00 00 02             ; XT=03eb, flags=02
f8e0: 09 54 52 41 43 45 2d 4f 46 46 00 ; 9, TRACE-OFF
;
f8eb: fe f8 00 00                ; TRACE-ON - (next: f8fe MEM_SZ)
f8ef: e2 03 00 00 02             ; XT=03e2, flags=02
f8f4: 08 54 52 41 43 45 2d 4f 4e 00 ; 8, TRACE-ON
;
f8fe: 0f f9 00 00                ; MEM_SZ - (next: f90f isNeg)
f902: d9 03 00 00 00             ; XT=03d9, flags=00
f907: 06 4d 45 4d 5f 53 5a 00    ; 6, MEM_SZ
;
f90f: 1f f9 00 00                ; isNeg - (next: f91f >IN)
f913: c9 03 00 00 00             ; XT=03c9, flags=00
f918: 05 69 73 4e 65 67 00       ; 5, isNeg
;
f91f: 2d f9 00 00                ; >IN - (next: f92d LEAVE)
f923: b9 03 00 00 00             ; XT=03b9, flags=00
f928: 03 3e 49 4e 00             ; 3, >IN
;
f92d: 3d f9 00 00                ; LEAVE - (next: f93d UNTIL)
f931: a4 03 00 00 01             ; XT=03a4, flags=01
f936: 05 4c 45 41 56 45 00       ; 5, LEAVE
;
f93d: 4d f9 00 00                ; UNTIL - (next: f94d WHILE)
f941: 8a 03 00 00 01             ; XT=038a, flags=01
f946: 05 55 4e 54 49 4c 00       ; 5, UNTIL
;
f94d: 5d f9 00 00                ; WHILE - (next: f95d AGAIN)
f951: 70 03 00 00 01             ; XT=0370, flags=01
f956: 05 57 48 49 4c 45 00       ; 5, WHILE
;
f95d: 6d f9 00 00                ; AGAIN - (next: f96d BEGIN)
f961: 56 03 00 00 01             ; XT=0356, flags=01
f966: 05 41 47 41 49 4e 00       ; 5, AGAIN
;
f96d: 7d f9 00 00                ; BEGIN - (next: f97d THEN)
f971: 43 03 00 00 01             ; XT=0343, flags=01
f976: 05 42 45 47 49 4e 00       ; 5, BEGIN
;
f97d: 8c f9 00 00                ; THEN - (next: f98c ELSE)
f981: 2e 03 00 00 01             ; XT=032e, flags=01
f986: 04 54 48 45 4e 00          ; 4, THEN
;
f98c: 9b f9 00 00                ; ELSE - (next: f99b IF)
f990: 09 03 00 00 01             ; XT=0309, flags=01
f995: 04 45 4c 53 45 00          ; 4, ELSE
;
f99b: a8 f9 00 00                ; IF - (next: f9a8 ?COMPILING)
f99f: ea 02 00 00 01             ; XT=02ea, flags=01
f9a4: 02 49 46 00                ; 2, IF
;
f9a8: bd f9 00 00                ; ?COMPILING - (next: f9bd OFF)
f9ac: e1 02 00 00 00             ; XT=02e1, flags=00
f9b1: 0a 3f 43 4f 4d 50 49 4c 49 4e 47 00 ; 10, ?COMPILING
;
f9bd: cb f9 00 00                ; OFF - (next: f9cb ON)
f9c1: d7 02 00 00 00             ; XT=02d7, flags=00
f9c6: 03 4f 46 46 00             ; 3, OFF
;
f9cb: d8 f9 00 00                ; ON - (next: f9d8 BINARY)
f9cf: cd 02 00 00 00             ; XT=02cd, flags=00
f9d4: 02 4f 4e 00                ; 2, ON
;
f9d8: e9 f9 00 00                ; BINARY - (next: f9e9 OCTAL)
f9dc: c2 02 00 00 00             ; XT=02c2, flags=00
f9e1: 06 42 49 4e 41 52 59 00    ; 6, BINARY
;
f9e9: f9 f9 00 00                ; OCTAL - (next: f9f9 DECIMAL)
f9ed: b7 02 00 00 00             ; XT=02b7, flags=00
f9f2: 05 4f 43 54 41 4c 00       ; 5, OCTAL
;
f9f9: 0b fa 00 00                ; DECIMAL - (next: fa0b HEX)
f9fd: ac 02 00 00 00             ; XT=02ac, flags=00
fa02: 07 44 45 43 49 4d 41 4c 00 ; 7, DECIMAL
;
fa0b: 19 fa 00 00                ; HEX - (next: fa19 C,)
fa0f: a1 02 00 00 00             ; XT=02a1, flags=00
fa14: 03 48 45 58 00             ; 3, HEX
;
fa19: 26 fa 00 00                ; C, - (next: fa26 ,)
fa1d: 8e 02 00 00 00             ; XT=028e, flags=00
fa22: 02 43 2c 00                ; 2, C,
;
fa26: 32 fa 00 00                ; , - (next: fa32 HERE)
fa2a: 7b 02 00 00 00             ; XT=027b, flags=00
fa2f: 01 2c 00                   ; 1, ,
;
fa32: 41 fa 00 00                ; HERE - (next: fa41 LAST)
fa36: 72 02 00 00 02             ; XT=0272, flags=02
fa3b: 04 48 45 52 45 00          ; 4, HERE
;
fa41: 50 fa 00 00                ; LAST - (next: fa50 FLAG_INLINE)
fa45: 69 02 00 00 02             ; XT=0269, flags=02
fa4a: 04 4c 41 53 54 00          ; 4, LAST
;
fa50: 66 fa 00 00                ; FLAG_INLINE - (next: fa66 FLAG_IMMEDIATE)
fa54: 61 02 00 00 02             ; XT=0261, flags=02
fa59: 0b 46 4c 41 47 5f 49 4e 4c 49 4e 45 00 ; 11, FLAG_INLINE
;
fa66: 7f fa 00 00                ; FLAG_IMMEDIATE - (next: fa7f CELLS)
fa6a: 59 02 00 00 02             ; XT=0259, flags=02
fa6f: 0e 46 4c 41 47 5f 49 4d 4d 45 44 49 41 54 45 00 ; 14, FLAG_IMMEDIATE
;
fa7f: 8f fa 00 00                ; CELLS - (next: fa8f IMMEDIATE)
fa83: 50 02 00 00 02             ; XT=0250, flags=02
fa88: 05 43 45 4c 4c 53 00       ; 5, CELLS
;
fa8f: a3 fa 00 00                ; IMMEDIATE - (next: faa3 INLINE)
fa93: 3a 02 00 00 00             ; XT=023a, flags=00
fa98: 09 49 4d 4d 45 44 49 41 54 45 00 ; 9, IMMEDIATE
;
faa3: b4 fa 00 00                ; INLINE - (next: fab4 BYE)
faa7: 24 02 00 00 00             ; XT=0224, flags=00
faac: 06 49 4e 4c 49 4e 45 00    ; 6, INLINE
;
fab4: c2 fa 00 00                ; BYE - (next: fac2 RESET)
fab8: 1d 02 00 00 02             ; XT=021d, flags=02
fabd: 03 42 59 45 00             ; 3, BYE
;
fac2: d2 fa 00 00                ; RESET - (next: fad2 BREAK)
fac6: 16 02 00 00 02             ; XT=0216, flags=02
facb: 05 52 45 53 45 54 00       ; 5, RESET
;
fad2: e2 fa 00 00                ; BREAK - (next: fae2 USPOP)
fad6: 0f 02 00 00 02             ; XT=020f, flags=02
fadb: 05 42 52 45 41 4b 00       ; 5, BREAK
;
fae2: f2 fa 00 00                ; USPOP - (next: faf2 USPUSH)
fae6: 08 02 00 00 02             ; XT=0208, flags=02
faeb: 05 55 53 50 4f 50 00       ; 5, USPOP
;
faf2: 03 fb 00 00                ; USPUSH - (next: fb03 USINIT)
faf6: 01 02 00 00 02             ; XT=0201, flags=02
fafb: 06 55 53 50 55 53 48 00    ; 6, USPUSH
;
fb03: 14 fb 00 00                ; USINIT - (next: fb14 COMPAREI)
fb07: fa 01 00 00 02             ; XT=01fa, flags=02
fb0c: 06 55 53 49 4e 49 54 00    ; 6, USINIT
;
fb14: 27 fb 00 00                ; COMPAREI - (next: fb27 GETCH)
fb18: f3 01 00 00 02             ; XT=01f3, flags=02
fb1d: 08 43 4f 4d 50 41 52 45 49 00 ; 8, COMPAREI
;
fb27: 37 fb 00 00                ; GETCH - (next: fb37 DEPTH)
fb2b: ec 01 00 00 02             ; XT=01ec, flags=02
fb30: 05 47 45 54 43 48 00       ; 5, GETCH
;
fb37: 47 fb 00 00                ; DEPTH - (next: fb47 PICK)
fb3b: e5 01 00 00 02             ; XT=01e5, flags=02
fb40: 05 44 45 50 54 48 00       ; 5, DEPTH
;
fb47: 56 fb 00 00                ; PICK - (next: fb56 AND)
fb4b: de 01 00 00 02             ; XT=01de, flags=02
fb50: 04 50 49 43 4b 00          ; 4, PICK
;
fb56: 64 fb 00 00                ; AND - (next: fb64 LOGLEVEL)
fb5a: d7 01 00 00 02             ; XT=01d7, flags=02
fb5f: 03 41 4e 44 00             ; 3, AND
;
fb64: 77 fb 00 00                ; LOGLEVEL - (next: fb77 R>)
fb68: d0 01 00 00 02             ; XT=01d0, flags=02
fb6d: 08 4c 4f 47 4c 45 56 45 4c 00 ; 8, LOGLEVEL
;
fb77: 84 fb 00 00                ; R> - (next: fb84 >R)
fb7b: c9 01 00 00 02             ; XT=01c9, flags=02
fb80: 02 52 3e 00                ; 2, R>
;
fb84: 91 fb 00 00                ; >R - (next: fb91 FCLOSE)
fb88: c2 01 00 00 02             ; XT=01c2, flags=02
fb8d: 02 3e 52 00                ; 2, >R
;
fb91: a2 fb 00 00                ; FCLOSE - (next: fba2 FWRITE)
fb95: bb 01 00 00 02             ; XT=01bb, flags=02
fb9a: 06 46 43 4c 4f 53 45 00    ; 6, FCLOSE
;
fba2: b3 fb 00 00                ; FWRITE - (next: fbb3 FREADLINE)
fba6: b4 01 00 00 02             ; XT=01b4, flags=02
fbab: 06 46 57 52 49 54 45 00    ; 6, FWRITE
;
fbb3: c7 fb 00 00                ; FREADLINE - (next: fbc7 FREAD)
fbb7: ad 01 00 00 02             ; XT=01ad, flags=02
fbbc: 09 46 52 45 41 44 4c 49 4e 45 00 ; 9, FREADLINE
;
fbc7: d7 fb 00 00                ; FREAD - (next: fbd7 FOPEN)
fbcb: a6 01 00 00 02             ; XT=01a6, flags=02
fbd0: 05 46 52 45 41 44 00       ; 5, FREAD
;
fbd7: e7 fb 00 00                ; FOPEN - (next: fbe7 COMPARE)
fbdb: 9f 01 00 00 02             ; XT=019f, flags=02
fbe0: 05 46 4f 50 45 4e 00       ; 5, FOPEN
;
fbe7: f9 fb 00 00                ; COMPARE - (next: fbf9 OVER)
fbeb: 98 01 00 00 02             ; XT=0198, flags=02
fbf0: 07 43 4f 4d 50 41 52 45 00 ; 7, COMPARE
;
fbf9: 08 fc 00 00                ; OVER - (next: fc08 EMIT)
fbfd: 91 01 00 00 02             ; XT=0191, flags=02
fc02: 04 4f 56 45 52 00          ; 4, OVER
;
fc08: 17 fc 00 00                ; EMIT - (next: fc17 DICTP)
fc0c: 8a 01 00 00 02             ; XT=018a, flags=02
fc11: 04 45 4d 49 54 00          ; 4, EMIT
;
fc17: 27 fc 00 00                ; DICTP - (next: fc27 >)
fc1b: 7d 01 00 00 02             ; XT=017d, flags=02
fc20: 05 44 49 43 54 50 00       ; 5, DICTP
;
fc27: 33 fc 00 00                ; > - (next: fc33 =)
fc2b: 76 01 00 00 02             ; XT=0176, flags=02
fc30: 01 3e 00                   ; 1, >
;
fc33: 3f fc 00 00                ; = - (next: fc3f <)
fc37: 6f 01 00 00 02             ; XT=016f, flags=02
fc3c: 01 3d 00                   ; 1, =
;
fc3f: 4b fc 00 00                ; < - (next: fc4b /)
fc43: 68 01 00 00 02             ; XT=0168, flags=02
fc48: 01 3c 00                   ; 1, <
;
fc4b: 57 fc 00 00                ; / - (next: fc57 *)
fc4f: 61 01 00 00 02             ; XT=0161, flags=02
fc54: 01 2f 00                   ; 1, /
;
fc57: 63 fc 00 00                ; * - (next: fc63 -)
fc5b: 5a 01 00 00 02             ; XT=015a, flags=02
fc60: 01 2a 00                   ; 1, *
;
fc63: 6f fc 00 00                ; - - (next: fc6f +)
fc67: 53 01 00 00 02             ; XT=0153, flags=02
fc6c: 01 2d 00                   ; 1, -
;
fc6f: 7b fc 00 00                ; + - (next: fc7b C!)
fc73: 4c 01 00 00 02             ; XT=014c, flags=02
fc78: 01 2b 00                   ; 1, +
;
fc7b: 88 fc 00 00                ; C! - (next: fc88 C@)
fc7f: 45 01 00 00 02             ; XT=0145, flags=02
fc84: 02 43 21 00                ; 2, C!
;
fc88: 95 fc 00 00                ; C@ - (next: fc95 CLITERAL)
fc8c: 3e 01 00 00 02             ; XT=013e, flags=02
fc91: 02 43 40 00                ; 2, C@
;
fc95: a8 fc 00 00                ; CLITERAL - (next: fca8 OR)
fc99: 31 01 00 00 02             ; XT=0131, flags=02
fc9e: 08 43 4c 49 54 45 52 41 4c 00 ; 8, CLITERAL
;
fca8: b5 fc 00 00                ; OR - (next: fcb5 RET)
fcac: 2a 01 00 00 02             ; XT=012a, flags=02
fcb1: 02 4f 52 00                ; 2, OR
;
fcb5: c3 fc 00 00                ; RET - (next: fcc3 CALL)
fcb9: 1d 01 00 00 00             ; XT=011d, flags=00
fcbe: 03 52 45 54 00             ; 3, RET
;
fcc3: d2 fc 00 00                ; CALL - (next: fcd2 JMPNZ)
fcc7: 10 01 00 00 00             ; XT=0110, flags=00
fccc: 04 43 41 4c 4c 00          ; 4, CALL
;
fcd2: e2 fc 00 00                ; JMPNZ - (next: fce2 JMPZ)
fcd6: 03 01 00 00 00             ; XT=0103, flags=00
fcdb: 05 4a 4d 50 4e 5a 00       ; 5, JMPNZ
;
fce2: f1 fc 00 00                ; JMPZ - (next: fcf1 JMP)
fce6: f6 00 00 00 00             ; XT=00f6, flags=00
fceb: 04 4a 4d 50 5a 00          ; 4, JMPZ
;
fcf1: ff fc 00 00                ; JMP - (next: fcff SLITERAL)
fcf5: e9 00 00 00 00             ; XT=00e9, flags=00
fcfa: 03 4a 4d 50 00             ; 3, JMP
;
fcff: 12 fd 00 00                ; SLITERAL - (next: fd12 DUP)
fd03: dc 00 00 00 00             ; XT=00dc, flags=00
fd08: 08 53 4c 49 54 45 52 41 4c 00 ; 8, SLITERAL
;
fd12: 20 fd 00 00                ; DUP - (next: fd20 DROP)
fd16: d5 00 00 00 02             ; XT=00d5, flags=02
fd1b: 03 44 55 50 00             ; 3, DUP
;
fd20: 2f fd 00 00                ; DROP - (next: fd2f SWAP)
fd24: ce 00 00 00 02             ; XT=00ce, flags=02
fd29: 04 44 52 4f 50 00          ; 4, DROP
;
fd2f: 3e fd 00 00                ; SWAP - (next: fd3e !)
fd33: c7 00 00 00 02             ; XT=00c7, flags=02
fd38: 04 53 57 41 50 00          ; 4, SWAP
;
fd3e: 4a fd 00 00                ; ! - (next: fd4a @)
fd42: c0 00 00 00 02             ; XT=00c0, flags=02
fd47: 01 21 00                   ; 1, !
;
fd4a: 56 fd 00 00                ; @ - (next: fd56 LITERAL)
fd4e: b9 00 00 00 02             ; XT=00b9, flags=02
fd53: 01 40 00                   ; 1, @
;
fd56: 68 fd 00 00                ; LITERAL - (next: fd68 ])
fd5a: ac 00 00 00 00             ; XT=00ac, flags=00
fd5f: 07 4c 49 54 45 52 41 4c 00 ; 7, LITERAL
;
fd68: 74 fd 00 00                ; ] - (next: fd74 [)
fd6c: a1 00 00 00 01             ; XT=00a1, flags=01
fd71: 01 5d 00                   ; 1, ]
;
fd74: 80 fd 00 00                ; [ - (next: fd80 ,)
fd78: 96 00 00 00 01             ; XT=0096, flags=01
fd7d: 01 5b 00                   ; 1, [
;
fd80: 8c fd 00 00                ; , - (next: fd8c C,)
fd84: 83 00 00 00 00             ; XT=0083, flags=00
fd89: 01 2c 00                   ; 1, ,
;
fd8c: 99 fd 00 00                ; C, - (next: fd99 STATE)
fd90: 70 00 00 00 00             ; XT=0070, flags=00
fd95: 02 43 2c 00                ; 2, C,
;
fd99: a9 fd 00 00                ; STATE - (next: fda9 INPUT-FP)
fd9d: 68 00 00 00 02             ; XT=0068, flags=02
fda2: 05 53 54 41 54 45 00       ; 5, STATE
;
fda9: bc fd 00 00                ; INPUT-FP - (next: fdbc (LAST))
fdad: 60 00 00 00 02             ; XT=0060, flags=02
fdb2: 08 49 4e 50 55 54 2d 46 50 00 ; 8, INPUT-FP
;
fdbc: cd fd 00 00                ; (LAST) - (next: fdcd (HERE))
fdc0: 58 00 00 00 02             ; XT=0058, flags=02
fdc5: 06 28 4c 41 53 54 29 00    ; 6, (LAST)
;
fdcd: de fd 00 00                ; (HERE) - (next: fdde CELL)
fdd1: 50 00 00 00 02             ; XT=0050, flags=02
fdd6: 06 28 48 45 52 45 29 00    ; 6, (HERE)
;
fdde: ed fd 00 00                ; CELL - (next: fded BASE)
fde2: 48 00 00 00 02             ; XT=0048, flags=02
fde7: 04 43 45 4c 4c 00          ; 4, CELL
;
fded: fc fd 00 00                ; BASE - (next: fdfc <end>)
fdf1: 40 00 00 00 02             ; XT=0040, flags=02
fdf6: 04 42 41 53 45 00          ; 4, BASE
;
fdfc: 00 00 00 00                ; End.
