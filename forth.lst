; memory-size: 65536 bytes, (10000 hex)
0000: 08 ed 12 00 00             ; JMP main (12ed)
;
0005: 00 00 00
0008: 00000004 00000000
0010: 000015c0 0000f0a8 0000000a 00000000
0020: 00000000 00010000 00000000 00000000
0030: 00000000 00000000 00000000 00000000
;
0040: 18 eb ff 00 00             ; DICTP (HERE) (ffeb)
0045: 01 4b 00 00 00             ; LITERAL 75 (0x004b)
004a: 0c                         ; RET
004b: c0 15 00 00                ; dw 0x15c0
;
004f: 18 da ff 00 00             ; DICTP (LAST) (ffda)
0054: 01 5a 00 00 00             ; LITERAL 90 (0x005a)
0059: 0c                         ; RET
005a: a8 f0 00 00                ; dw 0xf0a8
;
005e: 18 cb ff 00 00             ; DICTP BASE (ffcb)
0063: 01 69 00 00 00             ; LITERAL 105 (0x0069)
0068: 0c                         ; RET
0069: 0a 00 00 00                ; dw 0x000a
;
006d: 18 bb ff 00 00             ; DICTP STATE (ffbb)
0072: 01 78 00 00 00             ; LITERAL 120 (0x0078)
0077: 0c                         ; RET
0078: 63 00 00 00                ; dw 0x0063
;
007c: 18 a8 ff 00 00             ; DICTP (MEM_SZ) (ffa8)
0081: 01 87 00 00 00             ; LITERAL 135 (0x0087)
0086: 0c                         ; RET
0087: 00 00 01 00                ; dw 0x10000
;
008b: 18 9a ff 00 00             ; DICTP >IN (ff9a)
0090: 01 96 00 00 00             ; LITERAL 150 (0x0096)
0095: 0c                         ; RET
0096: 00 00 00 00                ; dw 0x0000
;
009a: 18 8b ff 00 00             ; DICTP #NEG (ff8b)
009f: 01 a5 00 00 00             ; LITERAL 165 (0x00a5)
00a4: 0c                         ; RET
00a5: 00 00 00 00                ; dw 0x0000
;
00a9: 18 7c ff 00 00             ; DICTP #LEN (ff7c)
00ae: 01 b4 00 00 00             ; LITERAL 180 (0x00b4)
00b3: 0c                         ; RET
00b4: 05 00 00 00                ; dw 0x0005
;
00b8: 18 69 ff 00 00             ; DICTP INPUT-FP (ff69)
00bd: 01 c3 00 00 00             ; LITERAL 195 (0x00c3)
00c2: 0c                         ; RET
00c3: 00 00 00 00                ; dw 0x0000
;
00c7: 18 5c ff 00 00             ; DICTP T1 (ff5c)
00cc: 01 d2 00 00 00             ; LITERAL 210 (0x00d2)
00d1: 0c                         ; RET
00d2: 00 00 00 00                ; dw 0x0000
;
00d6: 18 4f ff 00 00             ; DICTP T2 (ff4f)
00db: 01 e1 00 00 00             ; LITERAL 225 (0x00e1)
00e0: 0c                         ; RET
00e1: 00 00 00 00                ; dw 0x0000
;
00e5: 18 42 ff 00 00             ; DICTP T3 (ff42)
00ea: 01 f0 00 00 00             ; LITERAL 240 (0x00f0)
00ef: 0c                         ; RET
00f0: 00 00 00 00                ; dw 0x0000
;
00f4: fc                         ; NOP
00f5: 18 33 ff 00 00             ; DICTP CELL (ff33)
00fa: 0e 04                      ; CLITERAL 4
00fc: 0c                         ; RET
;
00fd: 18 24 ff 00 00             ; DICTP HERE (ff24)
0102: 0b 40 00 00 00             ; CALL (HERE) (0040)
0107: 02                         ; FETCH
0108: 0c                         ; RET
;
0109: 18 15 ff 00 00             ; DICTP LAST (ff15)
010e: 0b 4f 00 00 00             ; CALL (LAST) (004f)
0113: 02                         ; FETCH
0114: 0c                         ; RET
;
0115: 18 08 ff 00 00             ; DICTP C, (ff08)
011a: 0b fd 00 00 00             ; CALL HERE (00fd)
011f: 10                         ; CSTORE
0120: 0b fd 00 00 00             ; CALL HERE (00fd)
0125: 2c                         ; INC
0126: 0b 40 00 00 00             ; CALL (HERE) (0040)
012b: 03                         ; STORE
012c: 0c                         ; RET
;
012d: 18 fc fe 00 00             ; DICTP , (fefc)
0132: 0b fd 00 00 00             ; CALL HERE (00fd)
0137: 03                         ; STORE
0138: 0b fd 00 00 00             ; CALL HERE (00fd)
013d: 0e 04                      ; CLITERAL 4
013f: 11                         ; ADD
0140: 0b 40 00 00 00             ; CALL (HERE) (0040)
0145: 03                         ; STORE
0146: 0c                         ; RET
;
0147: 18 f0 fe 00 00             ; DICTP [ (fef0)
014c: 0e 00                      ; CLITERAL 0
014e: 0b 6d 00 00 00             ; CALL STATE (006d)
0153: 03                         ; STORE
0154: 0c                         ; RET
;
0155: 18 e4 fe 00 00             ; DICTP ] (fee4)
015a: 0e 01                      ; CLITERAL 1
015c: 0b 6d 00 00 00             ; CALL STATE (006d)
0161: 03                         ; STORE
0162: 0c                         ; RET
;
0163: 18 d2 fe 00 00             ; DICTP LITERAL (fed2)
0168: 0e 01                      ; CLITERAL 1
016a: 0b 15 01 00 00             ; CALL C, (0115)
016f: 0c                         ; RET
;
0170: 18 c6 fe 00 00             ; DICTP @ (fec6)
0175: 02                         ; FETCH
0176: 0c                         ; RET
;
0177: 18 ba fe 00 00             ; DICTP ! (feba)
017c: 03                         ; STORE
017d: 0c                         ; RET
;
017e: 18 ab fe 00 00             ; DICTP SWAP (feab)
0183: 04                         ; SWAP
0184: 0c                         ; RET
;
0185: 18 9c fe 00 00             ; DICTP DROP (fe9c)
018a: 05                         ; DROP
018b: 0c                         ; RET
;
018c: 18 8e fe 00 00             ; DICTP DUP (fe8e)
0191: 06                         ; DUP
0192: 0c                         ; RET
;
0193: 18 7b fe 00 00             ; DICTP SLITERAL (fe7b)
0198: 0e 07                      ; CLITERAL 7
019a: 0b 15 01 00 00             ; CALL C, (0115)
019f: 0c                         ; RET
;
01a0: 18 6d fe 00 00             ; DICTP JMP (fe6d)
01a5: 0e 08                      ; CLITERAL 8
01a7: 0b 15 01 00 00             ; CALL C, (0115)
01ac: 0c                         ; RET
;
01ad: 18 5e fe 00 00             ; DICTP JMPZ (fe5e)
01b2: 0e 09                      ; CLITERAL 9
01b4: 0b 15 01 00 00             ; CALL C, (0115)
01b9: 0c                         ; RET
;
01ba: 18 4e fe 00 00             ; DICTP JMPNZ (fe4e)
01bf: 0e 0a                      ; CLITERAL 10
01c1: 0b 15 01 00 00             ; CALL C, (0115)
01c6: 0c                         ; RET
;
01c7: 18 3f fe 00 00             ; DICTP CALL (fe3f)
01cc: 0e 0b                      ; CLITERAL 11
01ce: 0b 15 01 00 00             ; CALL C, (0115)
01d3: 0c                         ; RET
;
01d4: 18 31 fe 00 00             ; DICTP RET (fe31)
01d9: 0e 0c                      ; CLITERAL 12
01db: 0b 15 01 00 00             ; CALL C, (0115)
01e0: 0c                         ; RET
;
01e1: 18 24 fe 00 00             ; DICTP OR (fe24)
01e6: 0d                         ; OR
01e7: 0c                         ; RET
;
01e8: 18 11 fe 00 00             ; DICTP CLITERAL (fe11)
01ed: 0e 0e                      ; CLITERAL 14
01ef: 0b 15 01 00 00             ; CALL C, (0115)
01f4: 0c                         ; RET
;
01f5: 18 04 fe 00 00             ; DICTP C@ (fe04)
01fa: 0f                         ; CFETCH
01fb: 0c                         ; RET
;
01fc: 18 f7 fd 00 00             ; DICTP C! (fdf7)
0201: 10                         ; CSTORE
0202: 0c                         ; RET
;
0203: 18 eb fd 00 00             ; DICTP + (fdeb)
0208: 11                         ; ADD
0209: 0c                         ; RET
;
020a: 18 df fd 00 00             ; DICTP - (fddf)
020f: 12                         ; SUB
0210: 0c                         ; RET
;
0211: 18 d3 fd 00 00             ; DICTP * (fdd3)
0216: 13                         ; MUL
0217: 0c                         ; RET
;
0218: 18 c7 fd 00 00             ; DICTP / (fdc7)
021d: 14                         ; DIV
021e: 0c                         ; RET
;
021f: 18 bb fd 00 00             ; DICTP < (fdbb)
0224: 15                         ; LT
0225: 0c                         ; RET
;
0226: 18 af fd 00 00             ; DICTP = (fdaf)
022b: 16                         ; EQ
022c: 0c                         ; RET
;
022d: 18 a3 fd 00 00             ; DICTP > (fda3)
0232: 17                         ; GT
0233: 0c                         ; RET
;
0234: 18 93 fd 00 00             ; DICTP DICTP (fd93)
0239: 0e 18                      ; CLITERAL 24
023b: 0b 15 01 00 00             ; CALL C, (0115)
0240: 0c                         ; RET
;
0241: 18 84 fd 00 00             ; DICTP EMIT (fd84)
0246: 19                         ; EMIT
0247: 0c                         ; RET
;
0248: 18 75 fd 00 00             ; DICTP OVER (fd75)
024d: 1a                         ; OVER
024e: 0c                         ; RET
;
024f: 18 63 fd 00 00             ; DICTP COMPARE (fd63)
0254: 1b                         ; COMPARE
0255: 0c                         ; RET
;
0256: 18 53 fd 00 00             ; DICTP FOPEN (fd53)
025b: 1c                         ; FOPEN
025c: 0c                         ; RET
;
025d: 18 43 fd 00 00             ; DICTP FREAD (fd43)
0262: 1d                         ; FREAD
0263: 0c                         ; RET
;
0264: 18 2f fd 00 00             ; DICTP FREADLINE (fd2f)
0269: 1e                         ; FREADLINE
026a: 0c                         ; RET
;
026b: 18 1e fd 00 00             ; DICTP FWRITE (fd1e)
0270: 1f                         ; FWRITE
0271: 0c                         ; RET
;
0272: 18 0d fd 00 00             ; DICTP FCLOSE (fd0d)
0277: 20                         ; FCLOSE
0278: 0c                         ; RET
;
0279: 18 00 fd 00 00             ; DICTP >R (fd00)
027e: 21                         ; DTOR
027f: 0c                         ; RET
;
0280: 18 f3 fc 00 00             ; DICTP R> (fcf3)
0285: 22                         ; RTOD
0286: 0c                         ; RET
;
0287: 18 e5 fc 00 00             ; DICTP COM (fce5)
028c: 23                         ; RESET
028d: 0c                         ; RET
;
028e: 18 d7 fc 00 00             ; DICTP AND (fcd7)
0293: 24                         ; AND
0294: 0c                         ; RET
;
0295: 18 c8 fc 00 00             ; DICTP PICK (fcc8)
029a: 25                         ; PICK
029b: 0c                         ; RET
;
029c: 18 b8 fc 00 00             ; DICTP DEPTH (fcb8)
02a1: 26                         ; DEPTH
02a2: 0c                         ; RET
;
02a3: 18 a8 fc 00 00             ; DICTP GETCH (fca8)
02a8: 27                         ; GETCH
02a9: 0c                         ; RET
;
02aa: 18 95 fc 00 00             ; DICTP COMPAREI (fc95)
02af: 28                         ; COMPAREI
02b0: 0c                         ; RET
;
02b1: 18 86 fc 00 00             ; DICTP /MOD (fc86)
02b6: 29                         ; SLASHMOD
02b7: 0c                         ; RET
;
02b8: 18 78 fc 00 00             ; DICTP NOT (fc78)
02bd: 2a                         ; NOT
02be: 0c                         ; RET
;
02bf: 18 67 fc 00 00             ; DICTP RFETCH (fc67)
02c4: 2b                         ; RFETCH
02c5: 0c                         ; RET
;
02c6: 18 59 fc 00 00             ; DICTP INC (fc59)
02cb: 2c                         ; INC
02cc: 0c                         ; RET
;
02cd: 18 48 fc 00 00             ; DICTP RDEPTH (fc48)
02d2: 2d                         ; RDEPTH
02d3: 0c                         ; RET
;
02d4: 18 3a fc 00 00             ; DICTP DEC (fc3a)
02d9: 2e                         ; DEC
02da: 0c                         ; RET
;
02db: 18 28 fc 00 00             ; DICTP GETTICK (fc28)
02e0: 2f                         ; GETTICK
02e1: 0c                         ; RET
;
02e2: 18 17 fc 00 00             ; DICTP LSHIFT (fc17)
02e7: 30                         ; SHIFTLEFT
02e8: 0c                         ; RET
;
02e9: 18 06 fc 00 00             ; DICTP RSHIFT (fc06)
02ee: 31                         ; SHIFTRIGHT
02ef: 0c                         ; RET
;
02f0: 18 f9 fb 00 00             ; DICTP +! (fbf9)
02f5: 32                         ; PLUSSTORE
02f6: 0c                         ; RET
;
02f7: 18 e4 fb 00 00             ; DICTP OPEN-BLOCK (fbe4)
02fc: 33                         ; RESET
02fd: 0c                         ; RET
;
02fe: 18 d3 fb 00 00             ; DICTP GOTOXY (fbd3)
0303: 34                         ; GOTOXY
0304: 0c                         ; RET
;
0305: 18 c4 fb 00 00             ; DICTP >SRC (fbc4)
030a: 35                         ; TOSRC
030b: 0c                         ; RET
;
030c: 18 b5 fb 00 00             ; DICTP SRC? (fbb5)
0311: 36                         ; SRCQ
0312: 0c                         ; RET
;
0313: 18 a6 fb 00 00             ; DICTP SRC+ (fba6)
0318: 37                         ; SRCP4
0319: 0c                         ; RET
;
031a: 18 96 fb 00 00             ; DICTP SRC+1 (fb96)
031f: 38                         ; SRCP1
0320: 0c                         ; RET
;
0321: 18 87 fb 00 00             ; DICTP >DST (fb87)
0326: 39                         ; TODST
0327: 0c                         ; RET
;
0328: 18 78 fb 00 00             ; DICTP DST? (fb78)
032d: 3a                         ; DSTQ
032e: 0c                         ; RET
;
032f: 18 69 fb 00 00             ; DICTP DST+ (fb69)
0334: 3b                         ; DSTP4
0335: 0c                         ; RET
;
0336: 18 59 fb 00 00             ; DICTP DST+1 (fb59)
033b: 3c                         ; DSTP1
033c: 0c                         ; RET
;
033d: 18 4b fb 00 00             ; DICTP NOP (fb4b)
0342: fc                         ; NOP
0343: 0c                         ; RET
;
0344: 18 3b fb 00 00             ; DICTP BREAK (fb3b)
0349: fd                         ; BREAK
034a: 0c                         ; RET
;
034b: 18 2b fb 00 00             ; DICTP RESET (fb2b)
0350: fe                         ; RESET
0351: 0c                         ; RET
;
0352: 18 1d fb 00 00             ; DICTP BYE (fb1d)
0357: ff                         ; BYE
0358: 0c                         ; RET
;
0359: 18 0c fb 00 00             ; DICTP INLINE (fb0c)
035e: 0b 09 01 00 00             ; CALL LAST (0109)
0363: 0e 02                      ; CLITERAL 2
0365: 0e 04                      ; CLITERAL 4
0367: 13                         ; MUL
0368: 11                         ; ADD
0369: 06                         ; DUP
036a: 0f                         ; CFETCH
036b: 0e 02                      ; CLITERAL 2
036d: 0d                         ; OR
036e: 04                         ; SWAP
036f: 10                         ; CSTORE
0370: 0c                         ; RET
;
0371: 18 f8 fa 00 00             ; DICTP IMMEDIATE (faf8)
0376: 0b 09 01 00 00             ; CALL LAST (0109)
037b: 0e 02                      ; CLITERAL 2
037d: 0e 04                      ; CLITERAL 4
037f: 13                         ; MUL
0380: 11                         ; ADD
0381: 06                         ; DUP
0382: 0f                         ; CFETCH
0383: 0e 01                      ; CLITERAL 1
0385: 0d                         ; OR
0386: 04                         ; SWAP
0387: 10                         ; CSTORE
0388: 0c                         ; RET
;
0389: 18 e8 fa 00 00             ; DICTP CELLS (fae8)
038e: 0e 04                      ; CLITERAL 4
0390: 13                         ; MUL
0391: 0c                         ; RET
;
0392: 18 cf fa 00 00             ; DICTP FLAG_IMMEDIATE (facf)
0397: 0e 01                      ; CLITERAL 1
0399: 0c                         ; RET
;
039a: 18 b9 fa 00 00             ; DICTP FLAG_INLINE (fab9)
039f: 0e 02                      ; CLITERAL 2
03a1: 0c                         ; RET
;
03a2: 18 ab fa 00 00             ; DICTP HEX (faab)
03a7: 0e 10                      ; CLITERAL 16
03a9: 0b 5e 00 00 00             ; CALL BASE (005e)
03ae: 03                         ; STORE
03af: 0c                         ; RET
;
03b0: 18 99 fa 00 00             ; DICTP DECIMAL (fa99)
03b5: 0e 0a                      ; CLITERAL 10
03b7: 0b 5e 00 00 00             ; CALL BASE (005e)
03bc: 03                         ; STORE
03bd: 0c                         ; RET
;
03be: 18 89 fa 00 00             ; DICTP OCTAL (fa89)
03c3: 0e 08                      ; CLITERAL 8
03c5: 0b 5e 00 00 00             ; CALL BASE (005e)
03ca: 03                         ; STORE
03cb: 0c                         ; RET
;
03cc: 18 78 fa 00 00             ; DICTP BINARY (fa78)
03d1: 0e 02                      ; CLITERAL 2
03d3: 0b 5e 00 00 00             ; CALL BASE (005e)
03d8: 03                         ; STORE
03d9: 0c                         ; RET
;
03da: 18 6b fa 00 00             ; DICTP ON (fa6b)
03df: 0e 01                      ; CLITERAL 1
03e1: 04                         ; SWAP
03e2: 03                         ; STORE
03e3: 0c                         ; RET
;
03e4: 18 5d fa 00 00             ; DICTP OFF (fa5d)
03e9: 0e 00                      ; CLITERAL 0
03eb: 04                         ; SWAP
03ec: 03                         ; STORE
03ed: 0c                         ; RET
;
03ee: 18 48 fa 00 00             ; DICTP ?COMPILING (fa48)
03f3: 0b 6d 00 00 00             ; CALL STATE (006d)
03f8: 02                         ; FETCH
03f9: 0c                         ; RET
;
03fa: 18 3b fa 00 00             ; DICTP IF (fa3b)
03ff: 0b ee 03 00 00             ; CALL ?COMPILING (03ee)
0404: 09 1a 04 00 00             ; JMPZ 041a
0409: 0b ad 01 00 00             ; CALL JMPZ (01ad)
040e: 0b fd 00 00 00             ; CALL HERE (00fd)
0413: 0e 00                      ; CLITERAL 0
0415: 0b 2d 01 00 00             ; CALL , (012d)
041a: 0c                         ; RET
;
041b: 18 2c fa 00 00             ; DICTP ELSE (fa2c)
0420: 0b ee 03 00 00             ; CALL ?COMPILING (03ee)
0425: 09 43 04 00 00             ; JMPZ 0443
042a: 0b a0 01 00 00             ; CALL JMP (01a0)
042f: 0b fd 00 00 00             ; CALL HERE (00fd)
0434: 0e 00                      ; CLITERAL 0
0436: 0b 2d 01 00 00             ; CALL , (012d)
043b: 04                         ; SWAP
043c: 0b fd 00 00 00             ; CALL HERE (00fd)
0441: 04                         ; SWAP
0442: 03                         ; STORE
0443: 0c                         ; RET
;
0444: 18 1d fa 00 00             ; DICTP THEN (fa1d)
0449: 0b ee 03 00 00             ; CALL ?COMPILING (03ee)
044e: 09 5a 04 00 00             ; JMPZ 045a
0453: 0b fd 00 00 00             ; CALL HERE (00fd)
0458: 04                         ; SWAP
0459: 03                         ; STORE
045a: 0c                         ; RET
;
045b: 18 0d fa 00 00             ; DICTP BEGIN (fa0d)
0460: 0b ee 03 00 00             ; CALL ?COMPILING (03ee)
0465: 09 6f 04 00 00             ; JMPZ 046f
046a: 0b fd 00 00 00             ; CALL HERE (00fd)
046f: 0c                         ; RET
;
0470: 18 fd f9 00 00             ; DICTP AGAIN (f9fd)
0475: 0b ee 03 00 00             ; CALL ?COMPILING (03ee)
047a: 09 89 04 00 00             ; JMPZ 0489
047f: 0b a0 01 00 00             ; CALL JMP (01a0)
0484: 0b 2d 01 00 00             ; CALL , (012d)
0489: 0c                         ; RET
;
048a: 18 ed f9 00 00             ; DICTP WHILE (f9ed)
048f: 0b ee 03 00 00             ; CALL ?COMPILING (03ee)
0494: 09 a3 04 00 00             ; JMPZ 04a3
0499: 0b ba 01 00 00             ; CALL JMPNZ (01ba)
049e: 0b 2d 01 00 00             ; CALL , (012d)
04a3: 0c                         ; RET
;
04a4: 18 dd f9 00 00             ; DICTP UNTIL (f9dd)
04a9: 0b ee 03 00 00             ; CALL ?COMPILING (03ee)
04ae: 09 bd 04 00 00             ; JMPZ 04bd
04b3: 0b ad 01 00 00             ; CALL JMPZ (01ad)
04b8: 0b 2d 01 00 00             ; CALL , (012d)
04bd: 0c                         ; RET
;
04be: 18 cd f9 00 00             ; DICTP LEAVE (f9cd)
04c3: 0b ee 03 00 00             ; CALL ?COMPILING (03ee)
04c8: 09 d2 04 00 00             ; JMPZ 04d2
04cd: 0b d4 01 00 00             ; CALL RET (01d4)
04d2: 0c                         ; RET
;
04d3: 18 bc f9 00 00             ; DICTP MEM_SZ (f9bc)
04d8: 0b 7c 00 00 00             ; CALL (MEM_SZ) (007c)
04dd: 02                         ; FETCH
04de: 0c                         ; RET
;
04df: 18 af f9 00 00             ; DICTP R@ (f9af)
04e4: 2b                         ; RFETCH
04e5: 0c                         ; RET
;
04e6: 18 9f f9 00 00             ; DICTP RDROP (f99f)
04eb: 22                         ; RTOD
04ec: 05                         ; DROP
04ed: 0c                         ; RET
;
04ee: 18 90 f9 00 00             ; DICTP ?DUP (f990)
04f3: 06                         ; DUP
04f4: 09 fa 04 00 00             ; JMPZ 04fa
04f9: 06                         ; DUP
04fa: 0c                         ; RET
;
04fb: 18 81 f9 00 00             ; DICTP 2DUP (f981)
0500: 1a                         ; OVER
0501: 1a                         ; OVER
0502: 0c                         ; RET
;
0503: 18 71 f9 00 00             ; DICTP 2DROP (f971)
0508: 05                         ; DROP
0509: 05                         ; DROP
050a: 0c                         ; RET
;
050b: 18 62 f9 00 00             ; DICTP TUCK (f962)
0510: 04                         ; SWAP
0511: 1a                         ; OVER
0512: 0c                         ; RET
;
0513: 18 54 f9 00 00             ; DICTP NIP (f954)
0518: 04                         ; SWAP
0519: 05                         ; DROP
051a: 0c                         ; RET
;
051b: 18 46 f9 00 00             ; DICTP ROT (f946)
0520: 21                         ; DTOR
0521: 04                         ; SWAP
0522: 22                         ; RTOD
0523: 04                         ; SWAP
0524: 0c                         ; RET
;
0525: 18 37 f9 00 00             ; DICTP -ROT (f937)
052a: 04                         ; SWAP
052b: 21                         ; DTOR
052c: 04                         ; SWAP
052d: 22                         ; RTOD
052e: 0c                         ; RET
;
052f: 18 2b f9 00 00             ; DICTP / (f92b)
0534: 29                         ; SLASHMOD
0535: 04                         ; SWAP
0536: 05                         ; DROP
0537: 0c                         ; RET
;
0538: 18 1d f9 00 00             ; DICTP MOD (f91d)
053d: 29                         ; SLASHMOD
053e: 05                         ; DROP
053f: 0c                         ; RET
;
0540: 18 10 f9 00 00             ; DICTP 1+ (f910)
0545: 2c                         ; INC
0546: 0c                         ; RET
;
0547: 18 03 f9 00 00             ; DICTP 1- (f903)
054c: 2e                         ; DEC
054d: 0c                         ; RET
;
054e: 18 f6 f8 00 00             ; DICTP 2* (f8f6)
0553: 0e 02                      ; CLITERAL 2
0555: 13                         ; MUL
0556: 0c                         ; RET
;
0557: 18 e9 f8 00 00             ; DICTP 2/ (f8e9)
055c: 0e 02                      ; CLITERAL 2
055e: 29                         ; SLASHMOD
055f: 04                         ; SWAP
0560: 05                         ; DROP
0561: 0c                         ; RET
;
0562: 18 dc f8 00 00             ; DICTP += (f8dc)
0567: 1a                         ; OVER
0568: 02                         ; FETCH
0569: 11                         ; ADD
056a: 04                         ; SWAP
056b: 03                         ; STORE
056c: 0c                         ; RET
;
056d: 18 cf f8 00 00             ; DICTP -= (f8cf)
0572: 1a                         ; OVER
0573: 02                         ; FETCH
0574: 04                         ; SWAP
0575: 12                         ; SUB
0576: 04                         ; SWAP
0577: 03                         ; STORE
0578: 0c                         ; RET
;
0579: 18 c2 f8 00 00             ; DICTP -! (f8c2)
057e: 04                         ; SWAP
057f: 1a                         ; OVER
0580: 02                         ; FETCH
0581: 04                         ; SWAP
0582: 12                         ; SUB
0583: 04                         ; SWAP
0584: 03                         ; STORE
0585: 0c                         ; RET
;
0586: 18 b5 f8 00 00             ; DICTP ++ (f8b5)
058b: 06                         ; DUP
058c: 02                         ; FETCH
058d: 2c                         ; INC
058e: 04                         ; SWAP
058f: 03                         ; STORE
0590: 0c                         ; RET
;
0591: 18 a8 f8 00 00             ; DICTP -- (f8a8)
0596: 06                         ; DUP
0597: 02                         ; FETCH
0598: 2e                         ; DEC
0599: 04                         ; SWAP
059a: 03                         ; STORE
059b: 0c                         ; RET
;
059c: 18 9a f8 00 00             ; DICTP C++ (f89a)
05a1: 06                         ; DUP
05a2: 0f                         ; CFETCH
05a3: 2c                         ; INC
05a4: 04                         ; SWAP
05a5: 10                         ; CSTORE
05a6: 0c                         ; RET
;
05a7: 18 8c f8 00 00             ; DICTP C-- (f88c)
05ac: 06                         ; DUP
05ad: 0f                         ; CFETCH
05ae: 2e                         ; DEC
05af: 04                         ; SWAP
05b0: 10                         ; CSTORE
05b1: 0c                         ; RET
;
05b2: 18 7f f8 00 00             ; DICTP 0= (f87f)
05b7: 2a                         ; NOT
05b8: 0c                         ; RET
;
05b9: 18 72 f8 00 00             ; DICTP <> (f872)
05be: 16                         ; EQ
05bf: 2a                         ; NOT
05c0: 0c                         ; RET
;
05c1: 18 65 f8 00 00             ; DICTP <= (f865)
05c6: 17                         ; GT
05c7: 2a                         ; NOT
05c8: 0c                         ; RET
;
05c9: 18 58 f8 00 00             ; DICTP >= (f858)
05ce: 15                         ; LT
05cf: 2a                         ; NOT
05d0: 0c                         ; RET
;
05d1: 18 49 f8 00 00             ; DICTP TRUE (f849)
05d6: 01 ff ff ff ff             ; LITERAL -1 (ffffffff)
05db: 0c                         ; RET
;
05dc: 18 39 f8 00 00             ; DICTP FALSE (f839)
05e1: 0e 00                      ; CLITERAL 0
05e3: 0c                         ; RET
;
05e4: 18 29 f8 00 00             ; DICTP COUNT (f829)
05e9: 06                         ; DUP
05ea: 2c                         ; INC
05eb: 04                         ; SWAP
05ec: 0f                         ; CFETCH
05ed: 0c                         ; RET
;
05ee: 18 1a f8 00 00             ; DICTP TYPE (f81a)
05f3: 06                         ; DUP
05f4: 2a                         ; NOT
05f5: 09 fd 05 00 00             ; JMPZ 05fd
05fa: 05                         ; DROP
05fb: 05                         ; DROP
05fc: 0c                         ; RET
05fd: 04                         ; SWAP
05fe: 06                         ; DUP
05ff: 0f                         ; CFETCH
0600: 19                         ; EMIT
0601: 2c                         ; INC
0602: 04                         ; SWAP
0603: 2e                         ; DEC
0604: 08 f3 05 00 00             ; JMP 05f3
0609: 0c                         ; RET
;
060a: 18 0d f8 00 00             ; DICTP CT (f80d)
060f: 0b e4 05 00 00             ; CALL COUNT (05e4)
0614: 0b ee 05 00 00             ; CALL TYPE (05ee)
0619: 0c                         ; RET
;
061a: 18 01 f8 00 00             ; DICTP \ (f801)
061f: 0e 00                      ; CLITERAL 0
0621: 0b 8b 00 00 00             ; CALL >IN (008b)
0626: 02                         ; FETCH
0627: 10                         ; CSTORE
0628: 0c                         ; RET
;
0629: 18 f5 f7 00 00             ; DICTP ( (f7f5)
062e: 0b 8b 00 00 00             ; CALL >IN (008b)
0633: 02                         ; FETCH
0634: 0f                         ; CFETCH
0635: 06                         ; DUP
0636: 2a                         ; NOT
0637: 09 58 06 00 00             ; JMPZ 0658
063c: 07 13 6d 69 73 73 69 6e 67 20 63 6c 6f 73 69 6e 67 20 27 29 27 00 ; SLITERAL (063d) [missing closing ')']
0652: 0b 0a 06 00 00             ; CALL CT (060a)
0657: fe                         ; RESET
0658: 0b 8b 00 00 00             ; CALL >IN (008b)
065d: 06                         ; DUP
065e: 02                         ; FETCH
065f: 2c                         ; INC
0660: 04                         ; SWAP
0661: 03                         ; STORE
0662: 0e 29                      ; CLITERAL 41
0664: 16                         ; EQ
0665: 09 2e 06 00 00             ; JMPZ 062e
066a: 0c                         ; RET
;
066b: 18 e5 f7 00 00             ; DICTP SPACE (f7e5)
0670: 0e 20                      ; CLITERAL 32
0672: 19                         ; EMIT
0673: 0c                         ; RET
;
0674: 18 d8 f7 00 00             ; DICTP BL (f7d8)
0679: 0e 20                      ; CLITERAL 32
067b: 19                         ; EMIT
067c: 0c                         ; RET
;
067d: 18 c9 f7 00 00             ; DICTP CRLF (f7c9)
0682: 0e 0d                      ; CLITERAL 13
0684: 19                         ; EMIT
0685: 0e 0a                      ; CLITERAL 10
0687: 19                         ; EMIT
0688: 0c                         ; RET
;
0689: 18 bc f7 00 00             ; DICTP CR (f7bc)
068e: 0e 0d                      ; CLITERAL 13
0690: 19                         ; EMIT
0691: 0e 0a                      ; CLITERAL 10
0693: 19                         ; EMIT
0694: 0c                         ; RET
;
0695: 18 aa f7 00 00             ; DICTP BETWEEN (f7aa)
069a: 0e 02                      ; CLITERAL 2
069c: 25                         ; PICK
069d: 15                         ; LT
069e: 09 a8 06 00 00             ; JMPZ 06a8
06a3: 05                         ; DROP
06a4: 05                         ; DROP
06a5: 0e 00                      ; CLITERAL 0
06a7: 0c                         ; RET
06a8: 15                         ; LT
06a9: 2a                         ; NOT
06aa: 0c                         ; RET
;
06ab: 18 99 f7 00 00             ; DICTP skipWS (f799)
06b0: 06                         ; DUP
06b1: 0f                         ; CFETCH
06b2: 06                         ; DUP
06b3: 09 cc 06 00 00             ; JMPZ 06cc
06b8: 0e 20                      ; CLITERAL 32
06ba: 17                         ; GT
06bb: 09 c6 06 00 00             ; JMPZ 06c6
06c0: 0c                         ; RET
06c1: 08 c7 06 00 00             ; JMP 06c7
06c6: 2c                         ; INC
06c7: 08 ce 06 00 00             ; JMP 06ce
06cc: 05                         ; DROP
06cd: 0c                         ; RET
06ce: 08 b0 06 00 00             ; JMP 06b0
06d3: 0c                         ; RET
;
06d4: 18 86 f7 00 00             ; DICTP to-upper (f786)
06d9: 06                         ; DUP
06da: 0e 61                      ; CLITERAL 97
06dc: 15                         ; LT
06dd: 09 e3 06 00 00             ; JMPZ 06e3
06e2: 0c                         ; RET
06e3: 06                         ; DUP
06e4: 0e 7a                      ; CLITERAL 122
06e6: 17                         ; GT
06e7: 09 ed 06 00 00             ; JMPZ 06ed
06ec: 0c                         ; RET
06ed: 0e 20                      ; CLITERAL 32
06ef: 12                         ; SUB
06f0: 0c                         ; RET
;
06f1: 18 73 f7 00 00             ; DICTP to-lower (f773)
06f6: 06                         ; DUP
06f7: 0e 41                      ; CLITERAL 65
06f9: 15                         ; LT
06fa: 09 00 07 00 00             ; JMPZ 0700
06ff: 0c                         ; RET
0700: 06                         ; DUP
0701: 0e 5a                      ; CLITERAL 90
0703: 17                         ; GT
0704: 09 0a 07 00 00             ; JMPZ 070a
0709: 0c                         ; RET
070a: 0e 20                      ; CLITERAL 32
070c: 11                         ; ADD
070d: 0c                         ; RET
;
070e: 18 5f f7 00 00             ; DICTP char-find (f75f)
0713: 04                         ; SWAP
0714: 0b d6 00 00 00             ; CALL T2 (00d6)
0719: 03                         ; STORE
071a: 0e 00                      ; CLITERAL 0
071c: 21                         ; DTOR
071d: 0b e4 05 00 00             ; CALL COUNT (05e4)
0722: 06                         ; DUP
0723: 2a                         ; NOT
0724: 09 33 07 00 00             ; JMPZ 0733
0729: 05                         ; DROP
072a: 05                         ; DROP
072b: 22                         ; RTOD
072c: 05                         ; DROP
072d: 01 ff ff ff ff             ; LITERAL -1 (ffffffff)
0732: 0c                         ; RET
0733: 1a                         ; OVER
0734: 0f                         ; CFETCH
0735: 0b d6 00 00 00             ; CALL T2 (00d6)
073a: 02                         ; FETCH
073b: 16                         ; EQ
073c: 09 45 07 00 00             ; JMPZ 0745
0741: 05                         ; DROP
0742: 05                         ; DROP
0743: 22                         ; RTOD
0744: 0c                         ; RET
0745: 22                         ; RTOD
0746: 2c                         ; INC
0747: 21                         ; DTOR
0748: 2e                         ; DEC
0749: 04                         ; SWAP
074a: 2c                         ; INC
074b: 04                         ; SWAP
074c: 08 22 07 00 00             ; JMP 0722
0751: 0c                         ; RET
;
0752: 18 4a f7 00 00             ; DICTP getOneWord (f74a)
0757: 06                         ; DUP
0758: 21                         ; DTOR
0759: 21                         ; DTOR
075a: 2b                         ; RFETCH
075b: 0f                         ; CFETCH
075c: 0e 20                      ; CLITERAL 32
075e: 17                         ; GT
075f: 09 6c 07 00 00             ; JMPZ 076c
0764: 22                         ; RTOD
0765: 2c                         ; INC
0766: 21                         ; DTOR
0767: 08 7e 07 00 00             ; JMP 077e
076c: 2b                         ; RFETCH
076d: 0f                         ; CFETCH
076e: 09 7a 07 00 00             ; JMPZ 077a
0773: 0e 00                      ; CLITERAL 0
0775: 2b                         ; RFETCH
0776: 10                         ; CSTORE
0777: 22                         ; RTOD
0778: 2c                         ; INC
0779: 21                         ; DTOR
077a: 22                         ; RTOD
077b: 22                         ; RTOD
077c: 04                         ; SWAP
077d: 0c                         ; RET
077e: 08 5a 07 00 00             ; JMP 075a
0783: 0c                         ; RET
;
0784: 18 36 f7 00 00             ; DICTP DICT>NEXT (f736)
0789: 0c                         ; RET
;
078a: 18 24 f7 00 00             ; DICTP DICT>XT (f724)
078f: 0e 04                      ; CLITERAL 4
0791: 11                         ; ADD
0792: 0c                         ; RET
;
0793: 18 0f f7 00 00             ; DICTP DICT>FLAGS (f70f)
0798: 0e 02                      ; CLITERAL 2
079a: 0e 04                      ; CLITERAL 4
079c: 13                         ; MUL
079d: 11                         ; ADD
079e: 0c                         ; RET
;
079f: 18 fb f6 00 00             ; DICTP DICT>NAME (f6fb)
07a4: 0b 93 07 00 00             ; CALL DICT>FLAGS (0793)
07a9: 2c                         ; INC
07aa: 0c                         ; RET
;
07ab: 18 e7 f6 00 00             ; DICTP NEXT>DICT (f6e7)
07b0: 0c                         ; RET
;
07b1: 18 d5 f6 00 00             ; DICTP XT>DICT (f6d5)
07b6: 0e 04                      ; CLITERAL 4
07b8: 12                         ; SUB
07b9: 0c                         ; RET
;
07ba: 18 c0 f6 00 00             ; DICTP FLAGS>DICT (f6c0)
07bf: 0e 02                      ; CLITERAL 2
07c1: 0e 04                      ; CLITERAL 4
07c3: 13                         ; MUL
07c4: 12                         ; SUB
07c5: 0c                         ; RET
;
07c6: 18 ac f6 00 00             ; DICTP NAME>DICT (f6ac)
07cb: 2e                         ; DEC
07cc: 0e 02                      ; CLITERAL 2
07ce: 0e 04                      ; CLITERAL 4
07d0: 13                         ; MUL
07d1: 12                         ; SUB
07d2: 0c                         ; RET
;
07d3: 18 97 f6 00 00             ; DICTP DICT.GetXT (f697)
07d8: 0b 8a 07 00 00             ; CALL DICT>XT (078a)
07dd: 02                         ; FETCH
07de: 0c                         ; RET
;
07df: 18 7f f6 00 00             ; DICTP DICT.GetFLAGS (f67f)
07e4: 0b 93 07 00 00             ; CALL DICT>FLAGS (0793)
07e9: 0f                         ; CFETCH
07ea: 0c                         ; RET
;
07eb: 18 6a f6 00 00             ; DICTP DICTP>NAME (f66a)
07f0: 2c                         ; INC
07f1: 02                         ; FETCH
07f2: 0b 9f 07 00 00             ; CALL DICT>NAME (079f)
07f7: 0c                         ; RET
;
07f8: 18 54 f6 00 00             ; DICTP XT.GetDICTP (f654)
07fd: 06                         ; DUP
07fe: 0f                         ; CFETCH
07ff: 0e 18                      ; CLITERAL 24
0801: 16                         ; EQ
0802: 09 0e 08 00 00             ; JMPZ 080e
0807: 2c                         ; INC
0808: 02                         ; FETCH
0809: 08 10 08 00 00             ; JMP 0810
080e: 05                         ; DROP
080f: fe                         ; RESET
0810: 0c                         ; RET
;
0811: 18 37 f6 00 00             ; DICTP FLAGS.ISIMMEDIATE? (f637)
0816: 0e 01                      ; CLITERAL 1
0818: 24                         ; AND
0819: 0c                         ; RET
;
081a: 18 1d f6 00 00             ; DICTP FLAGS.ISINLINE? (f61d)
081f: 0e 02                      ; CLITERAL 2
0821: 24                         ; AND
0822: 0c                         ; RET
;
0823: 18 01 f6 00 00             ; DICTP DICT.GetIMMEDIATE (f601)
0828: 0b df 07 00 00             ; CALL DICT.GetFLAGS (07df)
082d: 0b 11 08 00 00             ; CALL FLAGS.ISIMMEDIATE? (0811)
0832: 0c                         ; RET
;
0833: 18 e8 f5 00 00             ; DICTP DICT.GetINLINE (f5e8)
0838: 0b df 07 00 00             ; CALL DICT.GetFLAGS (07df)
083d: 0b 1a 08 00 00             ; CALL FLAGS.ISINLINE? (081a)
0842: 0c                         ; RET
;
0843: 18 d3 f5 00 00             ; DICTP findInDict (f5d3)
0848: 0b 09 01 00 00             ; CALL LAST (0109)
084d: 21                         ; DTOR
084e: 2b                         ; RFETCH
084f: 06                         ; DUP
0850: 09 77 08 00 00             ; JMPZ 0877
0855: 0b 9f 07 00 00             ; CALL DICT>NAME (079f)
085a: 2c                         ; INC
085b: 1a                         ; OVER
085c: 28                         ; COMPAREI
085d: 09 72 08 00 00             ; JMPZ 0872
0862: 05                         ; DROP
0863: 2b                         ; RFETCH
0864: 0b d3 07 00 00             ; CALL DICT.GetXT (07d3)
0869: 22                         ; RTOD
086a: 0b df 07 00 00             ; CALL DICT.GetFLAGS (07df)
086f: 0e 01                      ; CLITERAL 1
0871: 0c                         ; RET
0872: 08 7f 08 00 00             ; JMP 087f
0877: 05                         ; DROP
0878: 05                         ; DROP
0879: 22                         ; RTOD
087a: 0e 00                      ; CLITERAL 0
087c: 0e 00                      ; CLITERAL 0
087e: 0c                         ; RET
087f: 22                         ; RTOD
0880: 02                         ; FETCH
0881: 21                         ; DTOR
0882: 08 4e 08 00 00             ; JMP 084e
0887: 0c                         ; RET
;
0888: 18 bc f5 00 00             ; DICTP is-num-char? (f5bc)
088d: 0b d4 06 00 00             ; CALL to-upper (06d4)
0892: 04                         ; SWAP
0893: 21                         ; DTOR
0894: 07 10 30 31 32 33 34 35 36 37 38 39 41 42 43 44 45 46 00 ; SLITERAL (0895) [0123456789ABCDEF]
08a7: 0b 0e 07 00 00             ; CALL char-find (070e)
08ac: 06                         ; DUP
08ad: 0e 00                      ; CLITERAL 0
08af: 15                         ; LT
08b0: 09 ba 08 00 00             ; JMPZ 08ba
08b5: 0e 00                      ; CLITERAL 0
08b7: 22                         ; RTOD
08b8: 05                         ; DROP
08b9: 0c                         ; RET
08ba: 22                         ; RTOD
08bb: 2e                         ; DEC
08bc: 1a                         ; OVER
08bd: 15                         ; LT
08be: 09 ca 08 00 00             ; JMPZ 08ca
08c3: 0e 00                      ; CLITERAL 0
08c5: 08 cc 08 00 00             ; JMP 08cc
08ca: 0e 01                      ; CLITERAL 1
08cc: 0c                         ; RET
;
08cd: 18 ab f5 00 00             ; DICTP NEGATE (f5ab)
08d2: 0e 00                      ; CLITERAL 0
08d4: 04                         ; SWAP
08d5: 12                         ; SUB
08d6: 0c                         ; RET
;
08d7: 18 9d f5 00 00             ; DICTP ABS (f59d)
08dc: 06                         ; DUP
08dd: 0e 00                      ; CLITERAL 0
08df: 15                         ; LT
08e0: 09 ea 08 00 00             ; JMPZ 08ea
08e5: 0b cd 08 00 00             ; CALL NEGATE (08cd)
08ea: 0c                         ; RET
;
08eb: 18 88 f5 00 00             ; DICTP parse-char (f588)
08f0: 06                         ; DUP
08f1: 2c                         ; INC
08f2: 0f                         ; CFETCH
08f3: 0e 27                      ; CLITERAL 39
08f5: 16                         ; EQ
08f6: 2a                         ; NOT
08f7: 09 ff 08 00 00             ; JMPZ 08ff
08fc: 0e 00                      ; CLITERAL 0
08fe: 0c                         ; RET
08ff: 06                         ; DUP
0900: 0e 02                      ; CLITERAL 2
0902: 11                         ; ADD
0903: 0f                         ; CFETCH
0904: 09 10 09 00 00             ; JMPZ 0910
0909: 0e 00                      ; CLITERAL 0
090b: 08 13 09 00 00             ; JMP 0913
0910: 0f                         ; CFETCH
0911: 0e 01                      ; CLITERAL 1
0913: 0c                         ; RET
;
0914: 18 74 f5 00 00             ; DICTP isNumber? (f574)
0919: 06                         ; DUP
091a: 0f                         ; CFETCH
091b: 0e 27                      ; CLITERAL 39
091d: 16                         ; EQ
091e: 09 2a 09 00 00             ; JMPZ 092a
0923: 2c                         ; INC
0924: 0b eb 08 00 00             ; CALL parse-char (08eb)
0929: 0c                         ; RET
092a: 0b 5e 00 00 00             ; CALL BASE (005e)
092f: 02                         ; FETCH
0930: 0b e5 00 00 00             ; CALL T3 (00e5)
0935: 03                         ; STORE
0936: 06                         ; DUP
0937: 0f                         ; CFETCH
0938: 0e 24                      ; CLITERAL 36
093a: 16                         ; EQ
093b: 09 49 09 00 00             ; JMPZ 0949
0940: 2c                         ; INC
0941: 0e 10                      ; CLITERAL 16
0943: 0b e5 00 00 00             ; CALL T3 (00e5)
0948: 03                         ; STORE
0949: 06                         ; DUP
094a: 0f                         ; CFETCH
094b: 0e 23                      ; CLITERAL 35
094d: 16                         ; EQ
094e: 09 5c 09 00 00             ; JMPZ 095c
0953: 2c                         ; INC
0954: 0e 0a                      ; CLITERAL 10
0956: 0b e5 00 00 00             ; CALL T3 (00e5)
095b: 03                         ; STORE
095c: 06                         ; DUP
095d: 0f                         ; CFETCH
095e: 0e 25                      ; CLITERAL 37
0960: 16                         ; EQ
0961: 09 6f 09 00 00             ; JMPZ 096f
0966: 2c                         ; INC
0967: 0e 02                      ; CLITERAL 2
0969: 0b e5 00 00 00             ; CALL T3 (00e5)
096e: 03                         ; STORE
096f: 0b 9a 00 00 00             ; CALL #NEG (009a)
0974: 0b e4 03 00 00             ; CALL OFF (03e4)
0979: 0b e5 00 00 00             ; CALL T3 (00e5)
097e: 02                         ; FETCH
097f: 0e 0a                      ; CLITERAL 10
0981: 16                         ; EQ
0982: 09 99 09 00 00             ; JMPZ 0999
0987: 06                         ; DUP
0988: 0f                         ; CFETCH
0989: 0e 2d                      ; CLITERAL 45
098b: 16                         ; EQ
098c: 06                         ; DUP
098d: 0b 9a 00 00 00             ; CALL #NEG (009a)
0992: 03                         ; STORE
0993: 09 99 09 00 00             ; JMPZ 0999
0998: 2c                         ; INC
0999: 0e 00                      ; CLITERAL 0
099b: 21                         ; DTOR
099c: 06                         ; DUP
099d: 0f                         ; CFETCH
099e: 06                         ; DUP
099f: 0e 00                      ; CLITERAL 0
09a1: 16                         ; EQ
09a2: 09 bd 09 00 00             ; JMPZ 09bd
09a7: 05                         ; DROP
09a8: 05                         ; DROP
09a9: 22                         ; RTOD
09aa: 0b 9a 00 00 00             ; CALL #NEG (009a)
09af: 02                         ; FETCH
09b0: 09 ba 09 00 00             ; JMPZ 09ba
09b5: 0b cd 08 00 00             ; CALL NEGATE (08cd)
09ba: 0e 01                      ; CLITERAL 1
09bc: 0c                         ; RET
09bd: 0b e5 00 00 00             ; CALL T3 (00e5)
09c2: 02                         ; FETCH
09c3: 04                         ; SWAP
09c4: 0b 88 08 00 00             ; CALL is-num-char? (0888)
09c9: 09 de 09 00 00             ; JMPZ 09de
09ce: 22                         ; RTOD
09cf: 0b e5 00 00 00             ; CALL T3 (00e5)
09d4: 02                         ; FETCH
09d5: 13                         ; MUL
09d6: 11                         ; ADD
09d7: 21                         ; DTOR
09d8: 2c                         ; INC
09d9: 08 e3 09 00 00             ; JMP 09e3
09de: 05                         ; DROP
09df: 22                         ; RTOD
09e0: 0e 00                      ; CLITERAL 0
09e2: 0c                         ; RET
09e3: 08 9c 09 00 00             ; JMP 099c
09e8: 0c                         ; RET
;
09e9: 18 67 f5 00 00             ; DICTP <# (f567)
09ee: 0b 9a 00 00 00             ; CALL #NEG (009a)
09f3: 0b e4 03 00 00             ; CALL OFF (03e4)
09f8: 0b a9 00 00 00             ; CALL #LEN (00a9)
09fd: 0b e4 03 00 00             ; CALL OFF (03e4)
0a02: 06                         ; DUP
0a03: 0e 00                      ; CLITERAL 0
0a05: 15                         ; LT
0a06: 09 1a 0a 00 00             ; JMPZ 0a1a
0a0b: 0b cd 08 00 00             ; CALL NEGATE (08cd)
0a10: 0b 9a 00 00 00             ; CALL #NEG (009a)
0a15: 0b da 03 00 00             ; CALL ON (03da)
0a1a: 0e 00                      ; CLITERAL 0
0a1c: 04                         ; SWAP
0a1d: 0c                         ; RET
;
0a1e: 18 5b f5 00 00             ; DICTP # (f55b)
0a23: 0b 5e 00 00 00             ; CALL BASE (005e)
0a28: 02                         ; FETCH
0a29: 29                         ; SLASHMOD
0a2a: 04                         ; SWAP
0a2b: 0e 30                      ; CLITERAL 48
0a2d: 11                         ; ADD
0a2e: 06                         ; DUP
0a2f: 0e 39                      ; CLITERAL 57
0a31: 17                         ; GT
0a32: 09 3a 0a 00 00             ; JMPZ 0a3a
0a37: 0e 07                      ; CLITERAL 7
0a39: 11                         ; ADD
0a3a: 0b a9 00 00 00             ; CALL #LEN (00a9)
0a3f: 06                         ; DUP
0a40: 02                         ; FETCH
0a41: 2c                         ; INC
0a42: 04                         ; SWAP
0a43: 03                         ; STORE
0a44: 04                         ; SWAP
0a45: 0c                         ; RET
;
0a46: 18 4e f5 00 00             ; DICTP #S (f54e)
0a4b: 0b 1e 0a 00 00             ; CALL # (0a1e)
0a50: 06                         ; DUP
0a51: 2a                         ; NOT
0a52: 09 4b 0a 00 00             ; JMPZ 0a4b
0a57: 0c                         ; RET
;
0a58: 18 41 f5 00 00             ; DICTP #> (f541)
0a5d: 0c                         ; RET
;
0a5e: 18 33 f5 00 00             ; DICTP #P- (f533)
0a63: 05                         ; DROP
0a64: 0b 9a 00 00 00             ; CALL #NEG (009a)
0a69: 02                         ; FETCH
0a6a: 09 72 0a 00 00             ; JMPZ 0a72
0a6f: 0e 2d                      ; CLITERAL 45
0a71: 19                         ; EMIT
0a72: 0c                         ; RET
;
0a73: 18 26 f5 00 00             ; DICTP #P (f526)
0a78: 0b 5e 0a 00 00             ; CALL #P- (0a5e)
0a7d: 19                         ; EMIT
0a7e: 06                         ; DUP
0a7f: 2a                         ; NOT
0a80: 09 7d 0a 00 00             ; JMPZ 0a7d
0a85: 05                         ; DROP
0a86: 0c                         ; RET
;
0a87: 18 18 f5 00 00             ; DICTP (.) (f518)
0a8c: 0b e9 09 00 00             ; CALL <# (09e9)
0a91: 0b 46 0a 00 00             ; CALL #S (0a46)
0a96: 0b 58 0a 00 00             ; CALL #> (0a58)
0a9b: 0b 73 0a 00 00             ; CALL #P (0a73)
0aa0: 0c                         ; RET
;
0aa1: 18 0c f5 00 00             ; DICTP . (f50c)
0aa6: 0b 87 0a 00 00             ; CALL (.) (0a87)
0aab: 0e 20                      ; CLITERAL 32
0aad: 19                         ; EMIT
0aae: 0c                         ; RET
;
0aaf: 18 ff f4 00 00             ; DICTP .2 (f4ff)
0ab4: 0b e9 09 00 00             ; CALL <# (09e9)
0ab9: 0b 1e 0a 00 00             ; CALL # (0a1e)
0abe: 0b 1e 0a 00 00             ; CALL # (0a1e)
0ac3: 0b 58 0a 00 00             ; CALL #> (0a58)
0ac8: 0b 73 0a 00 00             ; CALL #P (0a73)
0acd: 0c                         ; RET
;
0ace: 18 f2 f4 00 00             ; DICTP .3 (f4f2)
0ad3: 0b e9 09 00 00             ; CALL <# (09e9)
0ad8: 0b 1e 0a 00 00             ; CALL # (0a1e)
0add: 0b 1e 0a 00 00             ; CALL # (0a1e)
0ae2: 0b 1e 0a 00 00             ; CALL # (0a1e)
0ae7: 0b 58 0a 00 00             ; CALL #> (0a58)
0aec: 0b 73 0a 00 00             ; CALL #P (0a73)
0af1: 0c                         ; RET
;
0af2: 18 e5 f4 00 00             ; DICTP .4 (f4e5)
0af7: 0b e9 09 00 00             ; CALL <# (09e9)
0afc: 0b 1e 0a 00 00             ; CALL # (0a1e)
0b01: 0b 1e 0a 00 00             ; CALL # (0a1e)
0b06: 0b 1e 0a 00 00             ; CALL # (0a1e)
0b0b: 0b 1e 0a 00 00             ; CALL # (0a1e)
0b10: 0b 58 0a 00 00             ; CALL #> (0a58)
0b15: 0b 73 0a 00 00             ; CALL #P (0a73)
0b1a: 0c                         ; RET
;
0b1b: 18 d6 f4 00 00             ; DICTP HEX. (f4d6)
0b20: 0b 5e 00 00 00             ; CALL BASE (005e)
0b25: 02                         ; FETCH
0b26: 04                         ; SWAP
0b27: 0b a2 03 00 00             ; CALL HEX (03a2)
0b2c: 0b 87 0a 00 00             ; CALL (.) (0a87)
0b31: 0b 5e 00 00 00             ; CALL BASE (005e)
0b36: 03                         ; STORE
0b37: 0c                         ; RET
;
0b38: 18 c6 f4 00 00             ; DICTP HEX.2 (f4c6)
0b3d: 0b 5e 00 00 00             ; CALL BASE (005e)
0b42: 02                         ; FETCH
0b43: 04                         ; SWAP
0b44: 0b a2 03 00 00             ; CALL HEX (03a2)
0b49: 0b af 0a 00 00             ; CALL .2 (0aaf)
0b4e: 0b 5e 00 00 00             ; CALL BASE (005e)
0b53: 03                         ; STORE
0b54: 0c                         ; RET
;
0b55: 18 b6 f4 00 00             ; DICTP HEX.4 (f4b6)
0b5a: 0b 5e 00 00 00             ; CALL BASE (005e)
0b5f: 02                         ; FETCH
0b60: 04                         ; SWAP
0b61: 0b a2 03 00 00             ; CALL HEX (03a2)
0b66: 0b f2 0a 00 00             ; CALL .4 (0af2)
0b6b: 0b 5e 00 00 00             ; CALL BASE (005e)
0b70: 03                         ; STORE
0b71: 0c                         ; RET
;
0b72: 18 a3 f4 00 00             ; DICTP DECIMAL. (f4a3)
0b77: 0b 5e 00 00 00             ; CALL BASE (005e)
0b7c: 02                         ; FETCH
0b7d: 04                         ; SWAP
0b7e: 0b b0 03 00 00             ; CALL DECIMAL (03b0)
0b83: 0b 87 0a 00 00             ; CALL (.) (0a87)
0b88: 0b 5e 00 00 00             ; CALL BASE (005e)
0b8d: 03                         ; STORE
0b8e: 0c                         ; RET
;
0b8f: 18 8f f4 00 00             ; DICTP DECIMAL.3 (f48f)
0b94: 0b 5e 00 00 00             ; CALL BASE (005e)
0b99: 02                         ; FETCH
0b9a: 04                         ; SWAP
0b9b: 0b b0 03 00 00             ; CALL DECIMAL (03b0)
0ba0: 0b ce 0a 00 00             ; CALL .3 (0ace)
0ba5: 0b 5e 00 00 00             ; CALL BASE (005e)
0baa: 03                         ; STORE
0bab: 0c                         ; RET
;
0bac: 18 7d f4 00 00             ; DICTP BINARY. (f47d)
0bb1: 0b 5e 00 00 00             ; CALL BASE (005e)
0bb6: 02                         ; FETCH
0bb7: 04                         ; SWAP
0bb8: 0b cc 03 00 00             ; CALL BINARY (03cc)
0bbd: 0b 87 0a 00 00             ; CALL (.) (0a87)
0bc2: 0b 5e 00 00 00             ; CALL BASE (005e)
0bc7: 03                         ; STORE
0bc8: 0c                         ; RET
;
0bc9: 18 6f f4 00 00             ; DICTP MIN (f46f)
0bce: 1a                         ; OVER
0bcf: 1a                         ; OVER
0bd0: 17                         ; GT
0bd1: 09 d7 0b 00 00             ; JMPZ 0bd7
0bd6: 04                         ; SWAP
0bd7: 05                         ; DROP
0bd8: 0c                         ; RET
;
0bd9: 18 61 f4 00 00             ; DICTP MAX (f461)
0bde: 1a                         ; OVER
0bdf: 1a                         ; OVER
0be0: 15                         ; LT
0be1: 09 e7 0b 00 00             ; JMPZ 0be7
0be6: 04                         ; SWAP
0be7: 05                         ; DROP
0be8: 0c                         ; RET
;
0be9: 18 54 f4 00 00             ; DICTP .S (f454)
0bee: 0e 20                      ; CLITERAL 32
0bf0: 19                         ; EMIT
0bf1: 26                         ; DEPTH
0bf2: 0e 00                      ; CLITERAL 0
0bf4: 15                         ; LT
0bf5: 09 18 0c 00 00             ; JMPZ 0c18
0bfa: 07 10 53 74 61 63 6b 20 75 6e 64 65 72 66 6c 6f 77 21 00 ; SLITERAL (0bfb) [Stack underflow!]
0c0d: 0b e4 05 00 00             ; CALL COUNT (05e4)
0c12: 0b ee 05 00 00             ; CALL TYPE (05ee)
0c17: fe                         ; RESET
0c18: 26                         ; DEPTH
0c19: 0e 00                      ; CLITERAL 0
0c1b: 16                         ; EQ
0c1c: 09 2b 0c 00 00             ; JMPZ 0c2b
0c21: 0e 28                      ; CLITERAL 40
0c23: 19                         ; EMIT
0c24: 0e ed                      ; CLITERAL 237
0c26: 19                         ; EMIT
0c27: 0e 29                      ; CLITERAL 41
0c29: 19                         ; EMIT
0c2a: 0c                         ; RET
0c2b: 0e 28                      ; CLITERAL 40
0c2d: 19                         ; EMIT
0c2e: 0e 20                      ; CLITERAL 32
0c30: 19                         ; EMIT
0c31: 26                         ; DEPTH
0c32: 2e                         ; DEC
0c33: 21                         ; DTOR
0c34: 2b                         ; RFETCH
0c35: 25                         ; PICK
0c36: 0b a1 0a 00 00             ; CALL . (0aa1)
0c3b: 2b                         ; RFETCH
0c3c: 09 49 0c 00 00             ; JMPZ 0c49
0c41: 22                         ; RTOD
0c42: 2e                         ; DEC
0c43: 21                         ; DTOR
0c44: 08 4f 0c 00 00             ; JMP 0c4f
0c49: 22                         ; RTOD
0c4a: 05                         ; DROP
0c4b: 0e 29                      ; CLITERAL 41
0c4d: 19                         ; EMIT
0c4e: 0c                         ; RET
0c4f: 08 34 0c 00 00             ; JMP 0c34
0c54: 0c                         ; RET
;
0c55: 18 40 f4 00 00             ; DICTP .(MEM_SZ) (f440)
0c5a: 07 08 4d 65 6d 6f 72 79 3a 20 00 ; SLITERAL (0c5b) [Memory: ]
0c65: 0b 0a 06 00 00             ; CALL CT (060a)
0c6a: 0b d3 04 00 00             ; CALL MEM_SZ (04d3)
0c6f: 06                         ; DUP
0c70: 0b 1b 0b 00 00             ; CALL HEX. (0b1b)
0c75: 07 02 20 28 00             ; SLITERAL (0c76) [ (]
0c7a: 0b 0a 06 00 00             ; CALL CT (060a)
0c7f: 0b 87 0a 00 00             ; CALL (.) (0a87)
0c84: 07 01 29 00                ; SLITERAL (0c85) [)]
0c88: 0b 0a 06 00 00             ; CALL CT (060a)
0c8d: 0c                         ; RET
;
0c8e: 18 2e f4 00 00             ; DICTP .(HERE) (f42e)
0c93: 07 06 48 45 52 45 3a 20 00 ; SLITERAL (0c94) [HERE: ]
0c9c: 0b 0a 06 00 00             ; CALL CT (060a)
0ca1: 0b fd 00 00 00             ; CALL HERE (00fd)
0ca6: 06                         ; DUP
0ca7: 0b 1b 0b 00 00             ; CALL HEX. (0b1b)
0cac: 07 02 20 28 00             ; SLITERAL (0cad) [ (]
0cb1: 0b 0a 06 00 00             ; CALL CT (060a)
0cb6: 0b 87 0a 00 00             ; CALL (.) (0a87)
0cbb: 07 01 29 00                ; SLITERAL (0cbc) [)]
0cbf: 0b 0a 06 00 00             ; CALL CT (060a)
0cc4: 0c                         ; RET
;
0cc5: 18 1c f4 00 00             ; DICTP .(LAST) (f41c)
0cca: 07 06 4c 41 53 54 3a 20 00 ; SLITERAL (0ccb) [LAST: ]
0cd3: 0b 0a 06 00 00             ; CALL CT (060a)
0cd8: 0b 09 01 00 00             ; CALL LAST (0109)
0cdd: 06                         ; DUP
0cde: 0b 1b 0b 00 00             ; CALL HEX. (0b1b)
0ce3: 07 02 20 28 00             ; SLITERAL (0ce4) [ (]
0ce8: 0b 0a 06 00 00             ; CALL CT (060a)
0ced: 0b 87 0a 00 00             ; CALL (.) (0a87)
0cf2: 07 01 29 00                ; SLITERAL (0cf3) [)]
0cf6: 0b 0a 06 00 00             ; CALL CT (060a)
0cfb: 0c                         ; RET
;
0cfc: 18 06 f4 00 00             ; DICTP .WORD-SHORT (f406)
0d01: 06                         ; DUP
0d02: 0b 9f 07 00 00             ; CALL DICT>NAME (079f)
0d07: 0b 0a 06 00 00             ; CALL CT (060a)
0d0c: 0e 20                      ; CLITERAL 32
0d0e: 19                         ; EMIT
0d0f: 02                         ; FETCH
0d10: 0c                         ; RET
;
0d11: 18 f6 f3 00 00             ; DICTP WORDS (f3f6)
0d16: 0b 09 01 00 00             ; CALL LAST (0109)
0d1b: 06                         ; DUP
0d1c: 02                         ; FETCH
0d1d: 2a                         ; NOT
0d1e: 09 2b 0d 00 00             ; JMPZ 0d2b
0d23: 05                         ; DROP
0d24: 0e 0d                      ; CLITERAL 13
0d26: 19                         ; EMIT
0d27: 0e 0a                      ; CLITERAL 10
0d29: 19                         ; EMIT
0d2a: 0c                         ; RET
0d2b: 0b fc 0c 00 00             ; CALL .WORD-SHORT (0cfc)
0d30: 08 1b 0d 00 00             ; JMP 0d1b
0d35: 0c                         ; RET
;
0d36: 18 e1 f3 00 00             ; DICTP .WORD-LONG (f3e1)
0d3b: 06                         ; DUP
0d3c: 0b 1b 0b 00 00             ; CALL HEX. (0b1b)
0d41: 0e 3a                      ; CLITERAL 58
0d43: 19                         ; EMIT
0d44: 0e 20                      ; CLITERAL 32
0d46: 19                         ; EMIT
0d47: 06                         ; DUP
0d48: 0b 9f 07 00 00             ; CALL DICT>NAME (079f)
0d4d: 0b 0a 06 00 00             ; CALL CT (060a)
0d52: 0e 20                      ; CLITERAL 32
0d54: 19                         ; EMIT
0d55: 06                         ; DUP
0d56: 0b d3 07 00 00             ; CALL DICT.GetXT (07d3)
0d5b: 0e 28                      ; CLITERAL 40
0d5d: 19                         ; EMIT
0d5e: 0b 55 0b 00 00             ; CALL HEX.4 (0b55)
0d63: 0e 29                      ; CLITERAL 41
0d65: 19                         ; EMIT
0d66: 06                         ; DUP
0d67: 0b 93 07 00 00             ; CALL DICT>FLAGS (0793)
0d6c: 0f                         ; CFETCH
0d6d: 06                         ; DUP
0d6e: 07 09 2c 20 46 6c 61 67 73 3a 20 00 ; SLITERAL (0d6f) [, Flags: ]
0d7a: 0b 0a 06 00 00             ; CALL CT (060a)
0d7f: 0b 38 0b 00 00             ; CALL HEX.2 (0b38)
0d84: 06                         ; DUP
0d85: 0b 1a 08 00 00             ; CALL FLAGS.ISINLINE? (081a)
0d8a: 09 a0 0d 00 00             ; JMPZ 0da0
0d8f: 07 09 20 28 49 4e 4c 49 4e 45 29 00 ; SLITERAL (0d90) [ (INLINE)]
0d9b: 0b 0a 06 00 00             ; CALL CT (060a)
0da0: 0b 11 08 00 00             ; CALL FLAGS.ISIMMEDIATE? (0811)
0da5: 09 be 0d 00 00             ; JMPZ 0dbe
0daa: 07 0c 20 28 49 4d 4d 45 44 49 41 54 45 29 00 ; SLITERAL (0dab) [ (IMMEDIATE)]
0db9: 0b 0a 06 00 00             ; CALL CT (060a)
0dbe: 0e 0d                      ; CLITERAL 13
0dc0: 19                         ; EMIT
0dc1: 0e 0a                      ; CLITERAL 10
0dc3: 19                         ; EMIT
0dc4: 02                         ; FETCH
0dc5: 0c                         ; RET
;
0dc6: 18 d0 f3 00 00             ; DICTP WORDSV (f3d0)
0dcb: 0b c5 0c 00 00             ; CALL .(LAST) (0cc5)
0dd0: 0e 0d                      ; CLITERAL 13
0dd2: 19                         ; EMIT
0dd3: 0e 0a                      ; CLITERAL 10
0dd5: 19                         ; EMIT
0dd6: 0b 09 01 00 00             ; CALL LAST (0109)
0ddb: 06                         ; DUP
0ddc: 02                         ; FETCH
0ddd: 2a                         ; NOT
0dde: 09 eb 0d 00 00             ; JMPZ 0deb
0de3: 05                         ; DROP
0de4: 0e 0d                      ; CLITERAL 13
0de6: 19                         ; EMIT
0de7: 0e 0a                      ; CLITERAL 10
0de9: 19                         ; EMIT
0dea: 0c                         ; RET
0deb: 0b 36 0d 00 00             ; CALL .WORD-LONG (0d36)
0df0: 08 db 0d 00 00             ; JMP 0ddb
0df5: 0c                         ; RET
;
0df6: 18 bc f3 00 00             ; DICTP NUM-WORDS (f3bc)
0dfb: 0e 00                      ; CLITERAL 0
0dfd: 21                         ; DTOR
0dfe: 0b 09 01 00 00             ; CALL LAST (0109)
0e03: 06                         ; DUP
0e04: 02                         ; FETCH
0e05: 2a                         ; NOT
0e06: 09 14 0e 00 00             ; JMPZ 0e14
0e0b: 05                         ; DROP
0e0c: 22                         ; RTOD
0e0d: 0e 0d                      ; CLITERAL 13
0e0f: 19                         ; EMIT
0e10: 0e 0a                      ; CLITERAL 10
0e12: 19                         ; EMIT
0e13: 0c                         ; RET
0e14: 22                         ; RTOD
0e15: 2c                         ; INC
0e16: 21                         ; DTOR
0e17: 02                         ; FETCH
0e18: 08 03 0e 00 00             ; JMP 0e03
0e1d: 0c                         ; RET
;
0e1e: 18 ab f3 00 00             ; DICTP .lastx (f3ab)
0e23: 0e 0d                      ; CLITERAL 13
0e25: 19                         ; EMIT
0e26: 0e 0a                      ; CLITERAL 10
0e28: 19                         ; EMIT
0e29: 0b 09 01 00 00             ; CALL LAST (0109)
0e2e: 04                         ; SWAP
0e2f: 04                         ; SWAP
0e30: 0b 36 0d 00 00             ; CALL .WORD-LONG (0d36)
0e35: 04                         ; SWAP
0e36: 2e                         ; DEC
0e37: 06                         ; DUP
0e38: 0a 2f 0e 00 00             ; JMPNZ 0e2f
0e3d: 05                         ; DROP
0e3e: 05                         ; DROP
0e3f: 0c                         ; RET
;
0e40: 18 99 f3 00 00             ; DICTP EXECUTE (f399)
0e45: 22                         ; RTOD
0e46: 05                         ; DROP
0e47: 21                         ; DTOR
0e48: 0c                         ; RET
;
0e49: 18 86 f3 00 00             ; DICTP find.ret (f386)
0e4e: 06                         ; DUP
0e4f: 0f                         ; CFETCH
0e50: 0e 0c                      ; CLITERAL 12
0e52: 16                         ; EQ
0e53: 09 59 0e 00 00             ; JMPZ 0e59
0e58: 0c                         ; RET
0e59: 2c                         ; INC
0e5a: 08 4e 0e 00 00             ; JMP 0e4e
0e5f: 0c                         ; RET
;
0e60: 18 73 f3 00 00             ; DICTP (inline) (f373)
0e65: 1a                         ; OVER
0e66: 1a                         ; OVER
0e67: 15                         ; LT
0e68: 09 6e 0e 00 00             ; JMPZ 0e6e
0e6d: 04                         ; SWAP
0e6e: 06                         ; DUP
0e6f: 0f                         ; CFETCH
0e70: 0b 15 01 00 00             ; CALL C, (0115)
0e75: 2c                         ; INC
0e76: 1a                         ; OVER
0e77: 1a                         ; OVER
0e78: 17                         ; GT
0e79: 0a 6e 0e 00 00             ; JMPNZ 0e6e
0e7e: 05                         ; DROP
0e7f: 05                         ; DROP
0e80: 0c                         ; RET
;
0e81: 18 63 f3 00 00             ; DICTP DOES> (f363)
0e86: 22                         ; RTOD
0e87: 06                         ; DUP
0e88: 0b 49 0e 00 00             ; CALL find.ret (0e49)
0e8d: 06                         ; DUP
0e8e: 21                         ; DTOR
0e8f: 2c                         ; INC
0e90: 0b 60 0e 00 00             ; CALL (inline) (0e60)
0e95: 0c                         ; RET
;
0e96: 18 4d f3 00 00             ; DICTP Copy.INLINE (f34d)
0e9b: 06                         ; DUP
0e9c: 0f                         ; CFETCH
0e9d: 0e 18                      ; CLITERAL 24
0e9f: 16                         ; EQ
0ea0: 09 a9 0e 00 00             ; JMPZ 0ea9
0ea5: 2c                         ; INC
0ea6: 0e 04                      ; CLITERAL 4
0ea8: 11                         ; ADD
0ea9: 06                         ; DUP
0eaa: 0b 49 0e 00 00             ; CALL find.ret (0e49)
0eaf: 0b 60 0e 00 00             ; CALL (inline) (0e60)
0eb4: 0c                         ; RET
;
0eb5: 18 3c f3 00 00             ; DICTP strlen (f33c)
0eba: 0e 00                      ; CLITERAL 0
0ebc: 04                         ; SWAP
0ebd: 04                         ; SWAP
0ebe: 1a                         ; OVER
0ebf: 0f                         ; CFETCH
0ec0: 06                         ; DUP
0ec1: 09 cc 0e 00 00             ; JMPZ 0ecc
0ec6: 05                         ; DROP
0ec7: 2c                         ; INC
0ec8: 04                         ; SWAP
0ec9: 2c                         ; INC
0eca: 0e 01                      ; CLITERAL 1
0ecc: 0a bd 0e 00 00             ; JMPNZ 0ebd
0ed1: 04                         ; SWAP
0ed2: 05                         ; DROP
0ed3: 0c                         ; RET
;
0ed4: 18 2c f3 00 00             ; DICTP cstr, (f32c)
0ed9: 06                         ; DUP
0eda: 0f                         ; CFETCH
0edb: 1a                         ; OVER
0edc: 11                         ; ADD
0edd: 2c                         ; INC
0ede: 2c                         ; INC
0edf: 0b 60 0e 00 00             ; CALL (inline) (0e60)
0ee4: 0c                         ; RET
;
0ee5: 18 18 f3 00 00             ; DICTP [COMPILE] (f318)
0eea: 0b 1a 08 00 00             ; CALL FLAGS.ISINLINE? (081a)
0eef: 09 fe 0e 00 00             ; JMPZ 0efe
0ef4: 0b 96 0e 00 00             ; CALL Copy.INLINE (0e96)
0ef9: 08 08 0f 00 00             ; JMP 0f08
0efe: 0b c7 01 00 00             ; CALL CALL (01c7)
0f03: 0b 2d 01 00 00             ; CALL , (012d)
0f08: 0c                         ; RET
;
0f09: 18 02 f3 00 00             ; DICTP executeWord (f302)
0f0e: 21                         ; DTOR
0f0f: 2b                         ; RFETCH
0f10: 0b 43 08 00 00             ; CALL findInDict (0843)
0f15: 09 51 0f 00 00             ; JMPZ 0f51
0f1a: 22                         ; RTOD
0f1b: 05                         ; DROP
0f1c: 0b ee 03 00 00             ; CALL ?COMPILING (03ee)
0f21: 09 46 0f 00 00             ; JMPZ 0f46
0f26: 06                         ; DUP
0f27: 0b 11 08 00 00             ; CALL FLAGS.ISIMMEDIATE? (0811)
0f2c: 09 3c 0f 00 00             ; JMPZ 0f3c
0f31: 05                         ; DROP
0f32: 0b 40 0e 00 00             ; CALL EXECUTE (0e40)
0f37: 08 41 0f 00 00             ; JMP 0f41
0f3c: 0b e5 0e 00 00             ; CALL [COMPILE] (0ee5)
0f41: 08 4c 0f 00 00             ; JMP 0f4c
0f46: 05                         ; DROP
0f47: 0b 40 0e 00 00             ; CALL EXECUTE (0e40)
0f4c: 08 a5 0f 00 00             ; JMP 0fa5
0f51: 05                         ; DROP
0f52: 05                         ; DROP
0f53: 2b                         ; RFETCH
0f54: 0b 14 09 00 00             ; CALL isNumber? (0914)
0f59: 09 97 0f 00 00             ; JMPZ 0f97
0f5e: 0b ee 03 00 00             ; CALL ?COMPILING (03ee)
0f63: 09 92 0f 00 00             ; JMPZ 0f92
0f68: 06                         ; DUP
0f69: 0e 00                      ; CLITERAL 0
0f6b: 0e ff                      ; CLITERAL 255
0f6d: 0b 95 06 00 00             ; CALL BETWEEN (0695)
0f72: 09 88 0f 00 00             ; JMPZ 0f88
0f77: 0e 0e                      ; CLITERAL 14
0f79: 0b 15 01 00 00             ; CALL C, (0115)
0f7e: 0b 15 01 00 00             ; CALL C, (0115)
0f83: 08 92 0f 00 00             ; JMP 0f92
0f88: 0b 63 01 00 00             ; CALL LITERAL (0163)
0f8d: 0b 2d 01 00 00             ; CALL , (012d)
0f92: 08 a3 0f 00 00             ; JMP 0fa3
0f97: 05                         ; DROP
0f98: 07 02 3f 3f 00             ; SLITERAL (0f99) [??]
0f9d: 0b 0a 06 00 00             ; CALL CT (060a)
0fa2: fe                         ; RESET
0fa3: 22                         ; RTOD
0fa4: 05                         ; DROP
0fa5: 0c                         ; RET
;
0fa6: 18 eb f2 00 00             ; DICTP executeInput (f2eb)
0fab: 0b 8b 00 00 00             ; CALL >IN (008b)
0fb0: 02                         ; FETCH
0fb1: 0b ab 06 00 00             ; CALL skipWS (06ab)
0fb6: 0b 8b 00 00 00             ; CALL >IN (008b)
0fbb: 03                         ; STORE
0fbc: 0b 8b 00 00 00             ; CALL >IN (008b)
0fc1: 02                         ; FETCH
0fc2: 0f                         ; CFETCH
0fc3: 09 e3 0f 00 00             ; JMPZ 0fe3
0fc8: 0b 8b 00 00 00             ; CALL >IN (008b)
0fcd: 02                         ; FETCH
0fce: 0b 52 07 00 00             ; CALL getOneWord (0752)
0fd3: 0b 8b 00 00 00             ; CALL >IN (008b)
0fd8: 03                         ; STORE
0fd9: 0b 09 0f 00 00             ; CALL executeWord (0f09)
0fde: 08 e4 0f 00 00             ; JMP 0fe4
0fe3: 0c                         ; RET
0fe4: 08 ab 0f 00 00             ; JMP 0fab
0fe9: 0c                         ; RET
;
0fea: 18 dd f2 00 00             ; DICTP Pad (f2dd)
0fef: 0b 09 01 00 00             ; CALL LAST (0109)
0ff4: 0e c8                      ; CLITERAL 200
0ff6: 12                         ; SUB
0ff7: 06                         ; DUP
0ff8: 0b fd 00 00 00             ; CALL HERE (00fd)
0ffd: 15                         ; LT
0ffe: 09 15 10 00 00             ; JMPZ 1015
1003: 07 0e 4f 75 74 20 6f 66 20 4d 65 6d 6f 72 79 21 00 ; SLITERAL (1004) [Out of Memory!]
1014: fe                         ; RESET
1015: 0c                         ; RET
;
1016: 18 cb f2 00 00             ; DICTP getLine (f2cb)
101b: 0e 00                      ; CLITERAL 0
101d: 0b ea 0f 00 00             ; CALL Pad (0fea)
1022: 06                         ; DUP
1023: 2c                         ; INC
1024: 0b 8b 00 00 00             ; CALL >IN (008b)
1029: 03                         ; STORE
102a: 10                         ; CSTORE
102b: 0e 00                      ; CLITERAL 0
102d: 0b 8b 00 00 00             ; CALL >IN (008b)
1032: 02                         ; FETCH
1033: 10                         ; CSTORE
1034: 27                         ; GETCH
1035: 06                         ; DUP
1036: 0e 0d                      ; CLITERAL 13
1038: 16                         ; EQ
1039: 09 48 10 00 00             ; JMPZ 1048
103e: 05                         ; DROP
103f: 0b ea 0f 00 00             ; CALL Pad (0fea)
1044: 0e 20                      ; CLITERAL 32
1046: 19                         ; EMIT
1047: 0c                         ; RET
1048: 06                         ; DUP
1049: 0e 09                      ; CLITERAL 9
104b: 16                         ; EQ
104c: 09 54 10 00 00             ; JMPZ 1054
1051: 05                         ; DROP
1052: 0e 20                      ; CLITERAL 32
1054: 06                         ; DUP
1055: 0e 03                      ; CLITERAL 3
1057: 16                         ; EQ
1058: 09 5e 10 00 00             ; JMPZ 105e
105d: ff                         ; BYE
105e: 06                         ; DUP
105f: 0e 08                      ; CLITERAL 8
1061: 16                         ; EQ
1062: 09 9a 10 00 00             ; JMPZ 109a
1067: 0b ea 0f 00 00             ; CALL Pad (0fea)
106c: 0f                         ; CFETCH
106d: 0e 00                      ; CLITERAL 0
106f: 17                         ; GT
1070: 09 94 10 00 00             ; JMPZ 1094
1075: 0b ea 0f 00 00             ; CALL Pad (0fea)
107a: 06                         ; DUP
107b: 0f                         ; CFETCH
107c: 2e                         ; DEC
107d: 04                         ; SWAP
107e: 10                         ; CSTORE
107f: 0b 8b 00 00 00             ; CALL >IN (008b)
1084: 06                         ; DUP
1085: 02                         ; FETCH
1086: 2e                         ; DEC
1087: 04                         ; SWAP
1088: 03                         ; STORE
1089: 06                         ; DUP
108a: 19                         ; EMIT
108b: 0e 20                      ; CLITERAL 32
108d: 19                         ; EMIT
108e: 19                         ; EMIT
108f: 08 95 10 00 00             ; JMP 1095
1094: 05                         ; DROP
1095: 08 cc 10 00 00             ; JMP 10cc
109a: 06                         ; DUP
109b: 0e 20                      ; CLITERAL 32
109d: 0e 7f                      ; CLITERAL 127
109f: 0b 95 06 00 00             ; CALL BETWEEN (0695)
10a4: 09 cb 10 00 00             ; JMPZ 10cb
10a9: 06                         ; DUP
10aa: 19                         ; EMIT
10ab: 0b 8b 00 00 00             ; CALL >IN (008b)
10b0: 02                         ; FETCH
10b1: 10                         ; CSTORE
10b2: 0b 8b 00 00 00             ; CALL >IN (008b)
10b7: 06                         ; DUP
10b8: 02                         ; FETCH
10b9: 2c                         ; INC
10ba: 04                         ; SWAP
10bb: 03                         ; STORE
10bc: 0b ea 0f 00 00             ; CALL Pad (0fea)
10c1: 06                         ; DUP
10c2: 0f                         ; CFETCH
10c3: 2c                         ; INC
10c4: 04                         ; SWAP
10c5: 10                         ; CSTORE
10c6: 08 cc 10 00 00             ; JMP 10cc
10cb: 05                         ; DROP
10cc: 08 2b 10 00 00             ; JMP 102b
10d1: 0c                         ; RET
;
10d2: 18 b8 f2 00 00             ; DICTP strcpy2c (f2b8)
10d7: 06                         ; DUP
10d8: 21                         ; DTOR
10d9: 0e 00                      ; CLITERAL 0
10db: 1a                         ; OVER
10dc: 10                         ; CSTORE
10dd: 2c                         ; INC
10de: 04                         ; SWAP
10df: 06                         ; DUP
10e0: 0f                         ; CFETCH
10e1: 06                         ; DUP
10e2: 09 fa 10 00 00             ; JMPZ 10fa
10e7: 0e 02                      ; CLITERAL 2
10e9: 25                         ; PICK
10ea: 10                         ; CSTORE
10eb: 04                         ; SWAP
10ec: 2c                         ; INC
10ed: 04                         ; SWAP
10ee: 2c                         ; INC
10ef: 2b                         ; RFETCH
10f0: 06                         ; DUP
10f1: 0f                         ; CFETCH
10f2: 2c                         ; INC
10f3: 04                         ; SWAP
10f4: 10                         ; CSTORE
10f5: 08 03 11 00 00             ; JMP 1103
10fa: 21                         ; DTOR
10fb: 04                         ; SWAP
10fc: 22                         ; RTOD
10fd: 04                         ; SWAP
10fe: 10                         ; CSTORE
10ff: 05                         ; DROP
1100: 22                         ; RTOD
1101: 05                         ; DROP
1102: 0c                         ; RET
1103: 08 df 10 00 00             ; JMP 10df
1108: 0c                         ; RET
;
1109: 18 a2 f2 00 00             ; DICTP Define-Word (f2a2)
110e: 0b 09 01 00 00             ; CALL LAST (0109)
1113: 1a                         ; OVER
1114: 0b b5 0e 00 00             ; CALL strlen (0eb5)
1119: 0e 02                      ; CLITERAL 2
111b: 0e 04                      ; CLITERAL 4
111d: 13                         ; MUL
111e: 0e 03                      ; CLITERAL 3
1120: 11                         ; ADD
1121: 11                         ; ADD
1122: 12                         ; SUB
1123: 06                         ; DUP
1124: 21                         ; DTOR
1125: 21                         ; DTOR
1126: 0b 09 01 00 00             ; CALL LAST (0109)
112b: 2b                         ; RFETCH
112c: 03                         ; STORE
112d: 22                         ; RTOD
112e: 0e 04                      ; CLITERAL 4
1130: 11                         ; ADD
1131: 21                         ; DTOR
1132: 0b fd 00 00 00             ; CALL HERE (00fd)
1137: 2b                         ; RFETCH
1138: 03                         ; STORE
1139: 22                         ; RTOD
113a: 0e 04                      ; CLITERAL 4
113c: 11                         ; ADD
113d: 21                         ; DTOR
113e: 0e 00                      ; CLITERAL 0
1140: 2b                         ; RFETCH
1141: 10                         ; CSTORE
1142: 22                         ; RTOD
1143: 2c                         ; INC
1144: 21                         ; DTOR
1145: 22                         ; RTOD
1146: 0b d2 10 00 00             ; CALL strcpy2c (10d2)
114b: 22                         ; RTOD
114c: 0b 4f 00 00 00             ; CALL (LAST) (004f)
1151: 03                         ; STORE
1152: 0c                         ; RET
;
1153: 18 8c f2 00 00             ; DICTP CREATE-NAME (f28c)
1158: 0b 8b 00 00 00             ; CALL >IN (008b)
115d: 02                         ; FETCH
115e: 0b ab 06 00 00             ; CALL skipWS (06ab)
1163: 0b 8b 00 00 00             ; CALL >IN (008b)
1168: 03                         ; STORE
1169: 0b 8b 00 00 00             ; CALL >IN (008b)
116e: 02                         ; FETCH
116f: 0f                         ; CFETCH
1170: 09 aa 11 00 00             ; JMPZ 11aa
1175: 0b 8b 00 00 00             ; CALL >IN (008b)
117a: 02                         ; FETCH
117b: 0b 52 07 00 00             ; CALL getOneWord (0752)
1180: 0b 8b 00 00 00             ; CALL >IN (008b)
1185: 03                         ; STORE
1186: 06                         ; DUP
1187: 0f                         ; CFETCH
1188: 09 a8 11 00 00             ; JMPZ 11a8
118d: 0b 09 11 00 00             ; CALL Define-Word (1109)
1192: 0e 18                      ; CLITERAL 24
1194: 0b 15 01 00 00             ; CALL C, (0115)
1199: 0b 09 01 00 00             ; CALL LAST (0109)
119e: 0b 2d 01 00 00             ; CALL , (012d)
11a3: 08 aa 11 00 00             ; JMP 11aa
11a8: 05                         ; DROP
11a9: fe                         ; RESET
11aa: 0c                         ; RET
;
11ab: 18 80 f2 00 00             ; DICTP : (f280)
11b0: 0b 53 11 00 00             ; CALL CREATE-NAME (1153)
11b5: 0b 6d 00 00 00             ; CALL STATE (006d)
11ba: 0b da 03 00 00             ; CALL ON (03da)
11bf: 0c                         ; RET
;
11c0: 18 6e f2 00 00             ; DICTP :NONAME (f26e)
11c5: 0b fd 00 00 00             ; CALL HERE (00fd)
11ca: 0b 6d 00 00 00             ; CALL STATE (006d)
11cf: 0b da 03 00 00             ; CALL ON (03da)
11d4: 0c                         ; RET
;
11d5: 18 62 f2 00 00             ; DICTP ; (f262)
11da: 0b d4 01 00 00             ; CALL RET (01d4)
11df: 0b 6d 00 00 00             ; CALL STATE (006d)
11e4: 0b e4 03 00 00             ; CALL OFF (03e4)
11e9: 0c                         ; RET
;
11ea: 18 4d f2 00 00             ; DICTP ForgetLast (f24d)
11ef: 0b 09 01 00 00             ; CALL LAST (0109)
11f4: 0e 04                      ; CLITERAL 4
11f6: 11                         ; ADD
11f7: 02                         ; FETCH
11f8: 0b 40 00 00 00             ; CALL (HERE) (0040)
11fd: 03                         ; STORE
11fe: 0b 09 01 00 00             ; CALL LAST (0109)
1203: 02                         ; FETCH
1204: 0b 4f 00 00 00             ; CALL (LAST) (004f)
1209: 03                         ; STORE
120a: 0c                         ; RET
;
120b: 18 37 f2 00 00             ; DICTP close-input (f237)
1210: 0b b8 00 00 00             ; CALL INPUT-FP (00b8)
1215: 02                         ; FETCH
1216: 20                         ; FCLOSE
1217: 0e 00                      ; CLITERAL 0
1219: 0b b8 00 00 00             ; CALL INPUT-FP (00b8)
121e: 03                         ; STORE
121f: 0c                         ; RET
;
1220: 18 22 f2 00 00             ; DICTP resetState (f222)
1225: 0b ee 03 00 00             ; CALL ?COMPILING (03ee)
122a: 09 34 12 00 00             ; JMPZ 1234
122f: 0b ea 11 00 00             ; CALL ForgetLast (11ea)
1234: 0b b0 03 00 00             ; CALL DECIMAL (03b0)
1239: 0b 6d 00 00 00             ; CALL STATE (006d)
123e: 0b e4 03 00 00             ; CALL OFF (03e4)
1243: 0b 0b 12 00 00             ; CALL close-input (120b)
1248: 0c                         ; RET
;
1249: 18 12 f2 00 00             ; DICTP ALLOT (f212)
124e: 0b fd 00 00 00             ; CALL HERE (00fd)
1253: 11                         ; ADD
1254: 0b 40 00 00 00             ; CALL (HERE) (0040)
1259: 03                         ; STORE
125a: 0c                         ; RET
;
125b: 18 06 f2 00 00             ; DICTP ? (f206)
1260: 02                         ; FETCH
1261: 0b a1 0a 00 00             ; CALL . (0aa1)
1266: 0c                         ; RET
;
1267: 18 f9 f1 00 00             ; DICTP C? (f1f9)
126c: 0f                         ; CFETCH
126d: 0b a1 0a 00 00             ; CALL . (0aa1)
1272: 0c                         ; RET
;
1273: 18 ea f1 00 00             ; DICTP FREE (f1ea)
1278: 0b 09 01 00 00             ; CALL LAST (0109)
127d: 0b fd 00 00 00             ; CALL HERE (00fd)
1282: 12                         ; SUB
1283: 0c                         ; RET
;
1284: 18 da f1 00 00             ; DICTP .FREE (f1da)
1289: 0b 73 12 00 00             ; CALL FREE (1273)
128e: 0b 87 0a 00 00             ; CALL (.) (0a87)
1293: 07 0c 20 62 79 74 65 73 20 66 72 65 65 2e 00 ; SLITERAL (1294) [ bytes free.]
12a2: 0b 0a 06 00 00             ; CALL CT (060a)
12a7: 0c                         ; RET
;
12a8: 18 c7 f1 00 00             ; DICTP mainLoop (f1c7)
12ad: 0b 20 12 00 00             ; CALL resetState (1220)
12b2: 0b ee 03 00 00             ; CALL ?COMPILING (03ee)
12b7: 2a                         ; NOT
12b8: 09 cd 12 00 00             ; JMPZ 12cd
12bd: 07 03 20 4f 4b 00          ; SLITERAL (12be) [ OK]
12c3: 0b 0a 06 00 00             ; CALL CT (060a)
12c8: 0b e9 0b 00 00             ; CALL .S (0be9)
12cd: 0e 0d                      ; CLITERAL 13
12cf: 19                         ; EMIT
12d0: 0e 0a                      ; CLITERAL 10
12d2: 19                         ; EMIT
12d3: 0b 16 10 00 00             ; CALL getLine (1016)
12d8: 2c                         ; INC
12d9: 0b 8b 00 00 00             ; CALL >IN (008b)
12de: 03                         ; STORE
12df: 0b a6 0f 00 00             ; CALL executeInput (0fa6)
12e4: 0e 20                      ; CLITERAL 32
12e6: 19                         ; EMIT
12e7: 08 b2 12 00 00             ; JMP 12b2
12ec: 0c                         ; RET
;
12ed: 18 b8 f1 00 00             ; DICTP main (f1b8)
12f2: 0b 6d 00 00 00             ; CALL STATE (006d)
12f7: 02                         ; FETCH
12f8: 0e 63                      ; CLITERAL 99
12fa: 16                         ; EQ
12fb: 09 18 13 00 00             ; JMPZ 1318
1300: 0b 6d 00 00 00             ; CALL STATE (006d)
1305: 0b e4 03 00 00             ; CALL OFF (03e4)
130a: 07 06 48 65 6c 6c 6f 2e 00 ; SLITERAL (130b) [Hello.]
1313: 0b 0a 06 00 00             ; CALL CT (060a)
1318: 0b a8 12 00 00             ; CALL mainLoop (12a8)
131d: 0c                         ; RET
;
131e: 18 a1 f1 00 00             ; DICTP file-getLine (f1a1)
1323: 0b ea 0f 00 00             ; CALL Pad (0fea)
1328: 04                         ; SWAP
1329: 0e c8                      ; CLITERAL 200
132b: 04                         ; SWAP
132c: 1e                         ; FREADLINE
132d: 0b ea 0f 00 00             ; CALL Pad (0fea)
1332: 04                         ; SWAP
1333: 0c                         ; RET
;
1334: 18 8e f1 00 00             ; DICTP load-sub (f18e)
1339: 0b b8 00 00 00             ; CALL INPUT-FP (00b8)
133e: 02                         ; FETCH
133f: 0b 1e 13 00 00             ; CALL file-getLine (131e)
1344: 09 5a 13 00 00             ; JMPZ 135a
1349: 2c                         ; INC
134a: 0b 8b 00 00 00             ; CALL >IN (008b)
134f: 03                         ; STORE
1350: 0b a6 0f 00 00             ; CALL executeInput (0fa6)
1355: 08 61 13 00 00             ; JMP 1361
135a: 05                         ; DROP
135b: 0b 0b 12 00 00             ; CALL close-input (120b)
1360: 0c                         ; RET
1361: 08 39 13 00 00             ; JMP 1339
1366: 0c                         ; RET
;
1367: 18 7a f1 00 00             ; DICTP load-file (f17a)
136c: 0b 0b 12 00 00             ; CALL close-input (120b)
1371: 0e 00                      ; CLITERAL 0
1373: 0e 00                      ; CLITERAL 0
1375: 1c                         ; FOPEN
1376: 2a                         ; NOT
1377: 09 97 13 00 00             ; JMPZ 1397
137c: 07 11 43 61 6e 6e 6f 74 20 6f 70 65 6e 20 66 69 6c 65 2e 00 ; SLITERAL (137d) [Cannot open file.]
1390: 0b 0a 06 00 00             ; CALL CT (060a)
1395: 05                         ; DROP
1396: 0c                         ; RET
1397: 0b b8 00 00 00             ; CALL INPUT-FP (00b8)
139c: 03                         ; STORE
139d: 0b 34 13 00 00             ; CALL load-sub (1334)
13a2: 0c                         ; RET
;
13a3: 18 6b f1 00 00             ; DICTP LOAD (f16b)
13a8: 0b b8 00 00 00             ; CALL INPUT-FP (00b8)
13ad: 02                         ; FETCH
13ae: 21                         ; DTOR
13af: 33                         ; RESET
13b0: 09 d1 13 00 00             ; JMPZ 13d1
13b5: 0b b8 00 00 00             ; CALL INPUT-FP (00b8)
13ba: 03                         ; STORE
13bb: 0b 34 13 00 00             ; CALL load-sub (1334)
13c0: 0b 0b 12 00 00             ; CALL close-input (120b)
13c5: 22                         ; RTOD
13c6: 0b b8 00 00 00             ; CALL INPUT-FP (00b8)
13cb: 03                         ; STORE
13cc: 08 f8 13 00 00             ; JMP 13f8
13d1: 07 17 43 61 6e 6e 6f 74 20 6f 70 65 6e 20 62 6c 6f 63 6b 20 66 69 6c 65 2e 00 ; SLITERAL (13d2) [Cannot open block file.]
13eb: 0b 0a 06 00 00             ; CALL CT (060a)
13f0: 05                         ; DROP
13f1: 22                         ; RTOD
13f2: 0b b8 00 00 00             ; CALL INPUT-FP (00b8)
13f7: 03                         ; STORE
13f8: 0c                         ; RET
;
13f9: 18 5c f1 00 00             ; DICTP THRU (f15c)
13fe: 04                         ; SWAP
13ff: 1a                         ; OVER
1400: 1a                         ; OVER
1401: 15                         ; LT
1402: 09 0a 14 00 00             ; JMPZ 140a
1407: 05                         ; DROP
1408: 05                         ; DROP
1409: 0c                         ; RET
140a: 06                         ; DUP
140b: 04                         ; SWAP
140c: 21                         ; DTOR
140d: 04                         ; SWAP
140e: 22                         ; RTOD
140f: 21                         ; DTOR
1410: 21                         ; DTOR
1411: 0b a3 13 00 00             ; CALL LOAD (13a3)
1416: 22                         ; RTOD
1417: 22                         ; RTOD
1418: 2c                         ; INC
1419: 08 ff 13 00 00             ; JMP 13ff
141e: 0c                         ; RET
;
141f: 18 48 f1 00 00             ; DICTP STR.EMPTY (f148)
1424: 0e 00                      ; CLITERAL 0
1426: 1a                         ; OVER
1427: 03                         ; STORE
1428: 0c                         ; RET
;
1429: 18 36 f1 00 00             ; DICTP STR.LEN (f136)
142e: 06                         ; DUP
142f: 0f                         ; CFETCH
1430: 0c                         ; RET
;
1431: 18 23 f1 00 00             ; DICTP STR.CATC (f123)
1436: 1a                         ; OVER
1437: 06                         ; DUP
1438: 06                         ; DUP
1439: 0f                         ; CFETCH
143a: 2c                         ; INC
143b: 04                         ; SWAP
143c: 10                         ; CSTORE
143d: 06                         ; DUP
143e: 0f                         ; CFETCH
143f: 11                         ; ADD
1440: 0e 00                      ; CLITERAL 0
1442: 1a                         ; OVER
1443: 2c                         ; INC
1444: 10                         ; CSTORE
1445: 10                         ; CSTORE
1446: 0c                         ; RET
;
1447: 18 0c f1 00 00             ; DICTP STR.NULLTERM (f10c)
144c: 06                         ; DUP
144d: 06                         ; DUP
144e: 0f                         ; CFETCH
144f: 11                         ; ADD
1450: 2c                         ; INC
1451: 0e 00                      ; CLITERAL 0
1453: 04                         ; SWAP
1454: 10                         ; CSTORE
1455: 0c                         ; RET
;
1456: 18 ff f0 00 00             ; DICTP I" (f0ff)
145b: 0b fd 00 00 00             ; CALL HERE (00fd)
1460: 0e 64                      ; CLITERAL 100
1462: 11                         ; ADD
1463: 0e 00                      ; CLITERAL 0
1465: 1a                         ; OVER
1466: 03                         ; STORE
1467: 0b 8b 00 00 00             ; CALL >IN (008b)
146c: 02                         ; FETCH
146d: 0f                         ; CFETCH
146e: 06                         ; DUP
146f: 2a                         ; NOT
1470: 09 91 14 00 00             ; JMPZ 1491
1475: 07 10 6d 69 73 73 69 6e 67 20 63 6c 6f 73 69 6e 67 20 00 ; SLITERAL (1476) [missing closing ]
1488: 0b 0a 06 00 00             ; CALL CT (060a)
148d: 0e 22                      ; CLITERAL 34
148f: 19                         ; EMIT
1490: fe                         ; RESET
1491: 0b 8b 00 00 00             ; CALL >IN (008b)
1496: 06                         ; DUP
1497: 02                         ; FETCH
1498: 2c                         ; INC
1499: 04                         ; SWAP
149a: 03                         ; STORE
149b: 06                         ; DUP
149c: 0e 22                      ; CLITERAL 34
149e: 16                         ; EQ
149f: 09 a6 14 00 00             ; JMPZ 14a6
14a4: 05                         ; DROP
14a5: 0c                         ; RET
14a6: 0b 31 14 00 00             ; CALL STR.CATC (1431)
14ab: 08 67 14 00 00             ; JMP 1467
14b0: 0c                         ; RET
;
14b1: 18 f3 f0 00 00             ; DICTP " (f0f3)
14b6: 0b ee 03 00 00             ; CALL ?COMPILING (03ee)
14bb: 2a                         ; NOT
14bc: 09 c7 14 00 00             ; JMPZ 14c7
14c1: 0b 56 14 00 00             ; CALL I" (1456)
14c6: 0c                         ; RET
14c7: 0b 93 01 00 00             ; CALL SLITERAL (0193)
14cc: 0b fd 00 00 00             ; CALL HERE (00fd)
14d1: 0e 00                      ; CLITERAL 0
14d3: 0b 15 01 00 00             ; CALL C, (0115)
14d8: 0b 8b 00 00 00             ; CALL >IN (008b)
14dd: 02                         ; FETCH
14de: 0f                         ; CFETCH
14df: 06                         ; DUP
14e0: 2a                         ; NOT
14e1: 09 0e 15 00 00             ; JMPZ 150e
14e6: 05                         ; DROP
14e7: 2e                         ; DEC
14e8: 0b 40 00 00 00             ; CALL (HERE) (0040)
14ed: 03                         ; STORE
14ee: 07 11 6d 69 73 73 69 6e 67 20 63 6c 6f 73 69 6e 67 20 27 00 ; SLITERAL (14ef) [missing closing ']
1502: 0b 0a 06 00 00             ; CALL CT (060a)
1507: 0e 22                      ; CLITERAL 34
1509: 19                         ; EMIT
150a: 0e 27                      ; CLITERAL 39
150c: 19                         ; EMIT
150d: fe                         ; RESET
150e: 0b 8b 00 00 00             ; CALL >IN (008b)
1513: 06                         ; DUP
1514: 02                         ; FETCH
1515: 2c                         ; INC
1516: 04                         ; SWAP
1517: 03                         ; STORE
1518: 06                         ; DUP
1519: 0e 22                      ; CLITERAL 34
151b: 16                         ; EQ
151c: 09 34 15 00 00             ; JMPZ 1534
1521: 05                         ; DROP
1522: 0b fd 00 00 00             ; CALL HERE (00fd)
1527: 0e 00                      ; CLITERAL 0
1529: 0b 15 01 00 00             ; CALL C, (0115)
152e: 1a                         ; OVER
152f: 12                         ; SUB
1530: 2e                         ; DEC
1531: 04                         ; SWAP
1532: 10                         ; CSTORE
1533: 0c                         ; RET
1534: 0b 15 01 00 00             ; CALL C, (0115)
1539: 08 d8 14 00 00             ; JMP 14d8
153e: 0c                         ; RET
;
153f: 18 e0 f0 00 00             ; DICTP sys-info (f0e0)
1544: 0b 55 0c 00 00             ; CALL .(MEM_SZ) (0c55)
1549: 0e 2c                      ; CLITERAL 44
154b: 19                         ; EMIT
154c: 0e 20                      ; CLITERAL 32
154e: 19                         ; EMIT
154f: 0b 8e 0c 00 00             ; CALL .(HERE) (0c8e)
1554: 0e 2c                      ; CLITERAL 44
1556: 19                         ; EMIT
1557: 0e 20                      ; CLITERAL 32
1559: 19                         ; EMIT
155a: 0b c5 0c 00 00             ; CALL .(LAST) (0cc5)
155f: 0e 2c                      ; CLITERAL 44
1561: 19                         ; EMIT
1562: 0e 20                      ; CLITERAL 32
1564: 19                         ; EMIT
1565: 0b 84 12 00 00             ; CALL .FREE (1284)
156a: 0e 0d                      ; CLITERAL 13
156c: 19                         ; EMIT
156d: 0e 0a                      ; CLITERAL 10
156f: 19                         ; EMIT
1570: 0c                         ; RET
;
1571: 18 cd f0 00 00             ; DICTP VARIABLE (f0cd)
1576: 0b 53 11 00 00             ; CALL CREATE-NAME (1153)
157b: 0b fd 00 00 00             ; CALL HERE (00fd)
1580: 0e 02                      ; CLITERAL 2
1582: 11                         ; ADD
1583: 0e 04                      ; CLITERAL 4
1585: 11                         ; ADD
1586: 0b 63 01 00 00             ; CALL LITERAL (0163)
158b: 0b 2d 01 00 00             ; CALL , (012d)
1590: 0b d4 01 00 00             ; CALL RET (01d4)
1595: 0e 00                      ; CLITERAL 0
1597: 0b 2d 01 00 00             ; CALL , (012d)
159c: 0c                         ; RET
;
159d: 18 b8 f0 00 00             ; DICTP bench-loop (f0b8)
15a2: 2e                         ; DEC
15a3: 06                         ; DUP
15a4: 0a a2 15 00 00             ; JMPNZ 15a2
15a9: 05                         ; DROP
15aa: 0c                         ; RET
;
15ab: 18 a8 f0 00 00             ; DICTP bench (f0a8)
15b0: 2f                         ; GETTICK
15b1: 04                         ; SWAP
15b2: 0b 9d 15 00 00             ; CALL bench-loop (159d)
15b7: 2f                         ; GETTICK
15b8: 04                         ; SWAP
15b9: 12                         ; SUB
15ba: 0b a1 0a 00 00             ; CALL . (0aa1)
15bf: 0c                         ; RET
;
; End of code, Dictionary:
;
f0a8: b8 f0 00 00                ; bench - (next: f0b8 bench-loop)
f0ac: ab 15 00 00 00             ; XT=15ab, flags=00
f0b1: 05 62 65 6e 63 68 00       ; 5, bench
;
f0b8: cd f0 00 00                ; bench-loop - (next: f0cd VARIABLE)
f0bc: 9d 15 00 00 00             ; XT=159d, flags=00
f0c1: 0a 62 65 6e 63 68 2d 6c 6f 6f 70 00 ; 10, bench-loop
;
f0cd: e0 f0 00 00                ; VARIABLE - (next: f0e0 sys-info)
f0d1: 71 15 00 00 00             ; XT=1571, flags=00
f0d6: 08 56 41 52 49 41 42 4c 45 00 ; 8, VARIABLE
;
f0e0: f3 f0 00 00                ; sys-info - (next: f0f3 ")
f0e4: 3f 15 00 00 00             ; XT=153f, flags=00
f0e9: 08 73 79 73 2d 69 6e 66 6f 00 ; 8, sys-info
;
f0f3: ff f0 00 00                ; " - (next: f0ff I")
f0f7: b1 14 00 00 01             ; XT=14b1, flags=01
f0fc: 01 22 00                   ; 1, "
;
f0ff: 0c f1 00 00                ; I" - (next: f10c STR.NULLTERM)
f103: 56 14 00 00 00             ; XT=1456, flags=00
f108: 02 49 22 00                ; 2, I"
;
f10c: 23 f1 00 00                ; STR.NULLTERM - (next: f123 STR.CATC)
f110: 47 14 00 00 00             ; XT=1447, flags=00
f115: 0c 53 54 52 2e 4e 55 4c 4c 54 45 52 4d 00 ; 12, STR.NULLTERM
;
f123: 36 f1 00 00                ; STR.CATC - (next: f136 STR.LEN)
f127: 31 14 00 00 00             ; XT=1431, flags=00
f12c: 08 53 54 52 2e 43 41 54 43 00 ; 8, STR.CATC
;
f136: 48 f1 00 00                ; STR.LEN - (next: f148 STR.EMPTY)
f13a: 29 14 00 00 02             ; XT=1429, flags=02
f13f: 07 53 54 52 2e 4c 45 4e 00 ; 7, STR.LEN
;
f148: 5c f1 00 00                ; STR.EMPTY - (next: f15c THRU)
f14c: 1f 14 00 00 02             ; XT=141f, flags=02
f151: 09 53 54 52 2e 45 4d 50 54 59 00 ; 9, STR.EMPTY
;
f15c: 6b f1 00 00                ; THRU - (next: f16b LOAD)
f160: f9 13 00 00 00             ; XT=13f9, flags=00
f165: 04 54 48 52 55 00          ; 4, THRU
;
f16b: 7a f1 00 00                ; LOAD - (next: f17a load-file)
f16f: a3 13 00 00 00             ; XT=13a3, flags=00
f174: 04 4c 4f 41 44 00          ; 4, LOAD
;
f17a: 8e f1 00 00                ; load-file - (next: f18e load-sub)
f17e: 67 13 00 00 00             ; XT=1367, flags=00
f183: 09 6c 6f 61 64 2d 66 69 6c 65 00 ; 9, load-file
;
f18e: a1 f1 00 00                ; load-sub - (next: f1a1 file-getLine)
f192: 34 13 00 00 00             ; XT=1334, flags=00
f197: 08 6c 6f 61 64 2d 73 75 62 00 ; 8, load-sub
;
f1a1: b8 f1 00 00                ; file-getLine - (next: f1b8 main)
f1a5: 1e 13 00 00 00             ; XT=131e, flags=00
f1aa: 0c 66 69 6c 65 2d 67 65 74 4c 69 6e 65 00 ; 12, file-getLine
;
f1b8: c7 f1 00 00                ; main - (next: f1c7 mainLoop)
f1bc: ed 12 00 00 00             ; XT=12ed, flags=00
f1c1: 04 6d 61 69 6e 00          ; 4, main
;
f1c7: da f1 00 00                ; mainLoop - (next: f1da .FREE)
f1cb: a8 12 00 00 00             ; XT=12a8, flags=00
f1d0: 08 6d 61 69 6e 4c 6f 6f 70 00 ; 8, mainLoop
;
f1da: ea f1 00 00                ; .FREE - (next: f1ea FREE)
f1de: 84 12 00 00 00             ; XT=1284, flags=00
f1e3: 05 2e 46 52 45 45 00       ; 5, .FREE
;
f1ea: f9 f1 00 00                ; FREE - (next: f1f9 C?)
f1ee: 73 12 00 00 00             ; XT=1273, flags=00
f1f3: 04 46 52 45 45 00          ; 4, FREE
;
f1f9: 06 f2 00 00                ; C? - (next: f206 ?)
f1fd: 67 12 00 00 00             ; XT=1267, flags=00
f202: 02 43 3f 00                ; 2, C?
;
f206: 12 f2 00 00                ; ? - (next: f212 ALLOT)
f20a: 5b 12 00 00 00             ; XT=125b, flags=00
f20f: 01 3f 00                   ; 1, ?
;
f212: 22 f2 00 00                ; ALLOT - (next: f222 resetState)
f216: 49 12 00 00 00             ; XT=1249, flags=00
f21b: 05 41 4c 4c 4f 54 00       ; 5, ALLOT
;
f222: 37 f2 00 00                ; resetState - (next: f237 close-input)
f226: 20 12 00 00 00             ; XT=1220, flags=00
f22b: 0a 72 65 73 65 74 53 74 61 74 65 00 ; 10, resetState
;
f237: 4d f2 00 00                ; close-input - (next: f24d ForgetLast)
f23b: 0b 12 00 00 00             ; XT=120b, flags=00
f240: 0b 63 6c 6f 73 65 2d 69 6e 70 75 74 00 ; 11, close-input
;
f24d: 62 f2 00 00                ; ForgetLast - (next: f262 ;)
f251: ea 11 00 00 00             ; XT=11ea, flags=00
f256: 0a 46 6f 72 67 65 74 4c 61 73 74 00 ; 10, ForgetLast
;
f262: 6e f2 00 00                ; ; - (next: f26e :NONAME)
f266: d5 11 00 00 01             ; XT=11d5, flags=01
f26b: 01 3b 00                   ; 1, ;
;
f26e: 80 f2 00 00                ; :NONAME - (next: f280 :)
f272: c0 11 00 00 00             ; XT=11c0, flags=00
f277: 07 3a 4e 4f 4e 41 4d 45 00 ; 7, :NONAME
;
f280: 8c f2 00 00                ; : - (next: f28c CREATE-NAME)
f284: ab 11 00 00 00             ; XT=11ab, flags=00
f289: 01 3a 00                   ; 1, :
;
f28c: a2 f2 00 00                ; CREATE-NAME - (next: f2a2 Define-Word)
f290: 53 11 00 00 00             ; XT=1153, flags=00
f295: 0b 43 52 45 41 54 45 2d 4e 41 4d 45 00 ; 11, CREATE-NAME
;
f2a2: b8 f2 00 00                ; Define-Word - (next: f2b8 strcpy2c)
f2a6: 09 11 00 00 00             ; XT=1109, flags=00
f2ab: 0b 44 65 66 69 6e 65 2d 57 6f 72 64 00 ; 11, Define-Word
;
f2b8: cb f2 00 00                ; strcpy2c - (next: f2cb getLine)
f2bc: d2 10 00 00 00             ; XT=10d2, flags=00
f2c1: 08 73 74 72 63 70 79 32 63 00 ; 8, strcpy2c
;
f2cb: dd f2 00 00                ; getLine - (next: f2dd Pad)
f2cf: 16 10 00 00 00             ; XT=1016, flags=00
f2d4: 07 67 65 74 4c 69 6e 65 00 ; 7, getLine
;
f2dd: eb f2 00 00                ; Pad - (next: f2eb executeInput)
f2e1: ea 0f 00 00 00             ; XT=0fea, flags=00
f2e6: 03 50 61 64 00             ; 3, Pad
;
f2eb: 02 f3 00 00                ; executeInput - (next: f302 executeWord)
f2ef: a6 0f 00 00 00             ; XT=0fa6, flags=00
f2f4: 0c 65 78 65 63 75 74 65 49 6e 70 75 74 00 ; 12, executeInput
;
f302: 18 f3 00 00                ; executeWord - (next: f318 [COMPILE])
f306: 09 0f 00 00 00             ; XT=0f09, flags=00
f30b: 0b 65 78 65 63 75 74 65 57 6f 72 64 00 ; 11, executeWord
;
f318: 2c f3 00 00                ; [COMPILE] - (next: f32c cstr,)
f31c: e5 0e 00 00 00             ; XT=0ee5, flags=00
f321: 09 5b 43 4f 4d 50 49 4c 45 5d 00 ; 9, [COMPILE]
;
f32c: 3c f3 00 00                ; cstr, - (next: f33c strlen)
f330: d4 0e 00 00 00             ; XT=0ed4, flags=00
f335: 05 63 73 74 72 2c 00       ; 5, cstr,
;
f33c: 4d f3 00 00                ; strlen - (next: f34d Copy.INLINE)
f340: b5 0e 00 00 00             ; XT=0eb5, flags=00
f345: 06 73 74 72 6c 65 6e 00    ; 6, strlen
;
f34d: 63 f3 00 00                ; Copy.INLINE - (next: f363 DOES>)
f351: 96 0e 00 00 00             ; XT=0e96, flags=00
f356: 0b 43 6f 70 79 2e 49 4e 4c 49 4e 45 00 ; 11, Copy.INLINE
;
f363: 73 f3 00 00                ; DOES> - (next: f373 (inline))
f367: 81 0e 00 00 00             ; XT=0e81, flags=00
f36c: 05 44 4f 45 53 3e 00       ; 5, DOES>
;
f373: 86 f3 00 00                ; (inline) - (next: f386 find.ret)
f377: 60 0e 00 00 00             ; XT=0e60, flags=00
f37c: 08 28 69 6e 6c 69 6e 65 29 00 ; 8, (inline)
;
f386: 99 f3 00 00                ; find.ret - (next: f399 EXECUTE)
f38a: 49 0e 00 00 00             ; XT=0e49, flags=00
f38f: 08 66 69 6e 64 2e 72 65 74 00 ; 8, find.ret
;
f399: ab f3 00 00                ; EXECUTE - (next: f3ab .lastx)
f39d: 40 0e 00 00 00             ; XT=0e40, flags=00
f3a2: 07 45 58 45 43 55 54 45 00 ; 7, EXECUTE
;
f3ab: bc f3 00 00                ; .lastx - (next: f3bc NUM-WORDS)
f3af: 1e 0e 00 00 00             ; XT=0e1e, flags=00
f3b4: 06 2e 6c 61 73 74 78 00    ; 6, .lastx
;
f3bc: d0 f3 00 00                ; NUM-WORDS - (next: f3d0 WORDSV)
f3c0: f6 0d 00 00 00             ; XT=0df6, flags=00
f3c5: 09 4e 55 4d 2d 57 4f 52 44 53 00 ; 9, NUM-WORDS
;
f3d0: e1 f3 00 00                ; WORDSV - (next: f3e1 .WORD-LONG)
f3d4: c6 0d 00 00 00             ; XT=0dc6, flags=00
f3d9: 06 57 4f 52 44 53 56 00    ; 6, WORDSV
;
f3e1: f6 f3 00 00                ; .WORD-LONG - (next: f3f6 WORDS)
f3e5: 36 0d 00 00 00             ; XT=0d36, flags=00
f3ea: 0a 2e 57 4f 52 44 2d 4c 4f 4e 47 00 ; 10, .WORD-LONG
;
f3f6: 06 f4 00 00                ; WORDS - (next: f406 .WORD-SHORT)
f3fa: 11 0d 00 00 00             ; XT=0d11, flags=00
f3ff: 05 57 4f 52 44 53 00       ; 5, WORDS
;
f406: 1c f4 00 00                ; .WORD-SHORT - (next: f41c .(LAST))
f40a: fc 0c 00 00 00             ; XT=0cfc, flags=00
f40f: 0b 2e 57 4f 52 44 2d 53 48 4f 52 54 00 ; 11, .WORD-SHORT
;
f41c: 2e f4 00 00                ; .(LAST) - (next: f42e .(HERE))
f420: c5 0c 00 00 00             ; XT=0cc5, flags=00
f425: 07 2e 28 4c 41 53 54 29 00 ; 7, .(LAST)
;
f42e: 40 f4 00 00                ; .(HERE) - (next: f440 .(MEM_SZ))
f432: 8e 0c 00 00 00             ; XT=0c8e, flags=00
f437: 07 2e 28 48 45 52 45 29 00 ; 7, .(HERE)
;
f440: 54 f4 00 00                ; .(MEM_SZ) - (next: f454 .S)
f444: 55 0c 00 00 00             ; XT=0c55, flags=00
f449: 09 2e 28 4d 45 4d 5f 53 5a 29 00 ; 9, .(MEM_SZ)
;
f454: 61 f4 00 00                ; .S - (next: f461 MAX)
f458: e9 0b 00 00 00             ; XT=0be9, flags=00
f45d: 02 2e 53 00                ; 2, .S
;
f461: 6f f4 00 00                ; MAX - (next: f46f MIN)
f465: d9 0b 00 00 00             ; XT=0bd9, flags=00
f46a: 03 4d 41 58 00             ; 3, MAX
;
f46f: 7d f4 00 00                ; MIN - (next: f47d BINARY.)
f473: c9 0b 00 00 00             ; XT=0bc9, flags=00
f478: 03 4d 49 4e 00             ; 3, MIN
;
f47d: 8f f4 00 00                ; BINARY. - (next: f48f DECIMAL.3)
f481: ac 0b 00 00 00             ; XT=0bac, flags=00
f486: 07 42 49 4e 41 52 59 2e 00 ; 7, BINARY.
;
f48f: a3 f4 00 00                ; DECIMAL.3 - (next: f4a3 DECIMAL.)
f493: 8f 0b 00 00 00             ; XT=0b8f, flags=00
f498: 09 44 45 43 49 4d 41 4c 2e 33 00 ; 9, DECIMAL.3
;
f4a3: b6 f4 00 00                ; DECIMAL. - (next: f4b6 HEX.4)
f4a7: 72 0b 00 00 00             ; XT=0b72, flags=00
f4ac: 08 44 45 43 49 4d 41 4c 2e 00 ; 8, DECIMAL.
;
f4b6: c6 f4 00 00                ; HEX.4 - (next: f4c6 HEX.2)
f4ba: 55 0b 00 00 00             ; XT=0b55, flags=00
f4bf: 05 48 45 58 2e 34 00       ; 5, HEX.4
;
f4c6: d6 f4 00 00                ; HEX.2 - (next: f4d6 HEX.)
f4ca: 38 0b 00 00 00             ; XT=0b38, flags=00
f4cf: 05 48 45 58 2e 32 00       ; 5, HEX.2
;
f4d6: e5 f4 00 00                ; HEX. - (next: f4e5 .4)
f4da: 1b 0b 00 00 00             ; XT=0b1b, flags=00
f4df: 04 48 45 58 2e 00          ; 4, HEX.
;
f4e5: f2 f4 00 00                ; .4 - (next: f4f2 .3)
f4e9: f2 0a 00 00 00             ; XT=0af2, flags=00
f4ee: 02 2e 34 00                ; 2, .4
;
f4f2: ff f4 00 00                ; .3 - (next: f4ff .2)
f4f6: ce 0a 00 00 00             ; XT=0ace, flags=00
f4fb: 02 2e 33 00                ; 2, .3
;
f4ff: 0c f5 00 00                ; .2 - (next: f50c .)
f503: af 0a 00 00 00             ; XT=0aaf, flags=00
f508: 02 2e 32 00                ; 2, .2
;
f50c: 18 f5 00 00                ; . - (next: f518 (.))
f510: a1 0a 00 00 00             ; XT=0aa1, flags=00
f515: 01 2e 00                   ; 1, .
;
f518: 26 f5 00 00                ; (.) - (next: f526 #P)
f51c: 87 0a 00 00 00             ; XT=0a87, flags=00
f521: 03 28 2e 29 00             ; 3, (.)
;
f526: 33 f5 00 00                ; #P - (next: f533 #P-)
f52a: 73 0a 00 00 00             ; XT=0a73, flags=00
f52f: 02 23 50 00                ; 2, #P
;
f533: 41 f5 00 00                ; #P- - (next: f541 #>)
f537: 5e 0a 00 00 00             ; XT=0a5e, flags=00
f53c: 03 23 50 2d 00             ; 3, #P-
;
f541: 4e f5 00 00                ; #> - (next: f54e #S)
f545: 58 0a 00 00 00             ; XT=0a58, flags=00
f54a: 02 23 3e 00                ; 2, #>
;
f54e: 5b f5 00 00                ; #S - (next: f55b #)
f552: 46 0a 00 00 00             ; XT=0a46, flags=00
f557: 02 23 53 00                ; 2, #S
;
f55b: 67 f5 00 00                ; # - (next: f567 <#)
f55f: 1e 0a 00 00 00             ; XT=0a1e, flags=00
f564: 01 23 00                   ; 1, #
;
f567: 74 f5 00 00                ; <# - (next: f574 isNumber?)
f56b: e9 09 00 00 00             ; XT=09e9, flags=00
f570: 02 3c 23 00                ; 2, <#
;
f574: 88 f5 00 00                ; isNumber? - (next: f588 parse-char)
f578: 14 09 00 00 00             ; XT=0914, flags=00
f57d: 09 69 73 4e 75 6d 62 65 72 3f 00 ; 9, isNumber?
;
f588: 9d f5 00 00                ; parse-char - (next: f59d ABS)
f58c: eb 08 00 00 00             ; XT=08eb, flags=00
f591: 0a 70 61 72 73 65 2d 63 68 61 72 00 ; 10, parse-char
;
f59d: ab f5 00 00                ; ABS - (next: f5ab NEGATE)
f5a1: d7 08 00 00 00             ; XT=08d7, flags=00
f5a6: 03 41 42 53 00             ; 3, ABS
;
f5ab: bc f5 00 00                ; NEGATE - (next: f5bc is-num-char?)
f5af: cd 08 00 00 00             ; XT=08cd, flags=00
f5b4: 06 4e 45 47 41 54 45 00    ; 6, NEGATE
;
f5bc: d3 f5 00 00                ; is-num-char? - (next: f5d3 findInDict)
f5c0: 88 08 00 00 00             ; XT=0888, flags=00
f5c5: 0c 69 73 2d 6e 75 6d 2d 63 68 61 72 3f 00 ; 12, is-num-char?
;
f5d3: e8 f5 00 00                ; findInDict - (next: f5e8 DICT.GetINLINE)
f5d7: 43 08 00 00 00             ; XT=0843, flags=00
f5dc: 0a 66 69 6e 64 49 6e 44 69 63 74 00 ; 10, findInDict
;
f5e8: 01 f6 00 00                ; DICT.GetINLINE - (next: f601 DICT.GetIMMEDIATE)
f5ec: 33 08 00 00 00             ; XT=0833, flags=00
f5f1: 0e 44 49 43 54 2e 47 65 74 49 4e 4c 49 4e 45 00 ; 14, DICT.GetINLINE
;
f601: 1d f6 00 00                ; DICT.GetIMMEDIATE - (next: f61d FLAGS.ISINLINE?)
f605: 23 08 00 00 00             ; XT=0823, flags=00
f60a: 11 44 49 43 54 2e 47 65 74 49 4d 4d 45 44 49 41 54 45 00 ; 17, DICT.GetIMMEDIATE
;
f61d: 37 f6 00 00                ; FLAGS.ISINLINE? - (next: f637 FLAGS.ISIMMEDIATE?)
f621: 1a 08 00 00 00             ; XT=081a, flags=00
f626: 0f 46 4c 41 47 53 2e 49 53 49 4e 4c 49 4e 45 3f 00 ; 15, FLAGS.ISINLINE?
;
f637: 54 f6 00 00                ; FLAGS.ISIMMEDIATE? - (next: f654 XT.GetDICTP)
f63b: 11 08 00 00 00             ; XT=0811, flags=00
f640: 12 46 4c 41 47 53 2e 49 53 49 4d 4d 45 44 49 41 54 45 3f 00 ; 18, FLAGS.ISIMMEDIATE?
;
f654: 6a f6 00 00                ; XT.GetDICTP - (next: f66a DICTP>NAME)
f658: f8 07 00 00 00             ; XT=07f8, flags=00
f65d: 0b 58 54 2e 47 65 74 44 49 43 54 50 00 ; 11, XT.GetDICTP
;
f66a: 7f f6 00 00                ; DICTP>NAME - (next: f67f DICT.GetFLAGS)
f66e: eb 07 00 00 00             ; XT=07eb, flags=00
f673: 0a 44 49 43 54 50 3e 4e 41 4d 45 00 ; 10, DICTP>NAME
;
f67f: 97 f6 00 00                ; DICT.GetFLAGS - (next: f697 DICT.GetXT)
f683: df 07 00 00 00             ; XT=07df, flags=00
f688: 0d 44 49 43 54 2e 47 65 74 46 4c 41 47 53 00 ; 13, DICT.GetFLAGS
;
f697: ac f6 00 00                ; DICT.GetXT - (next: f6ac NAME>DICT)
f69b: d3 07 00 00 00             ; XT=07d3, flags=00
f6a0: 0a 44 49 43 54 2e 47 65 74 58 54 00 ; 10, DICT.GetXT
;
f6ac: c0 f6 00 00                ; NAME>DICT - (next: f6c0 FLAGS>DICT)
f6b0: c6 07 00 00 00             ; XT=07c6, flags=00
f6b5: 09 4e 41 4d 45 3e 44 49 43 54 00 ; 9, NAME>DICT
;
f6c0: d5 f6 00 00                ; FLAGS>DICT - (next: f6d5 XT>DICT)
f6c4: ba 07 00 00 00             ; XT=07ba, flags=00
f6c9: 0a 46 4c 41 47 53 3e 44 49 43 54 00 ; 10, FLAGS>DICT
;
f6d5: e7 f6 00 00                ; XT>DICT - (next: f6e7 NEXT>DICT)
f6d9: b1 07 00 00 00             ; XT=07b1, flags=00
f6de: 07 58 54 3e 44 49 43 54 00 ; 7, XT>DICT
;
f6e7: fb f6 00 00                ; NEXT>DICT - (next: f6fb DICT>NAME)
f6eb: ab 07 00 00 00             ; XT=07ab, flags=00
f6f0: 09 4e 45 58 54 3e 44 49 43 54 00 ; 9, NEXT>DICT
;
f6fb: 0f f7 00 00                ; DICT>NAME - (next: f70f DICT>FLAGS)
f6ff: 9f 07 00 00 00             ; XT=079f, flags=00
f704: 09 44 49 43 54 3e 4e 41 4d 45 00 ; 9, DICT>NAME
;
f70f: 24 f7 00 00                ; DICT>FLAGS - (next: f724 DICT>XT)
f713: 93 07 00 00 00             ; XT=0793, flags=00
f718: 0a 44 49 43 54 3e 46 4c 41 47 53 00 ; 10, DICT>FLAGS
;
f724: 36 f7 00 00                ; DICT>XT - (next: f736 DICT>NEXT)
f728: 8a 07 00 00 00             ; XT=078a, flags=00
f72d: 07 44 49 43 54 3e 58 54 00 ; 7, DICT>XT
;
f736: 4a f7 00 00                ; DICT>NEXT - (next: f74a getOneWord)
f73a: 84 07 00 00 00             ; XT=0784, flags=00
f73f: 09 44 49 43 54 3e 4e 45 58 54 00 ; 9, DICT>NEXT
;
f74a: 5f f7 00 00                ; getOneWord - (next: f75f char-find)
f74e: 52 07 00 00 00             ; XT=0752, flags=00
f753: 0a 67 65 74 4f 6e 65 57 6f 72 64 00 ; 10, getOneWord
;
f75f: 73 f7 00 00                ; char-find - (next: f773 to-lower)
f763: 0e 07 00 00 00             ; XT=070e, flags=00
f768: 09 63 68 61 72 2d 66 69 6e 64 00 ; 9, char-find
;
f773: 86 f7 00 00                ; to-lower - (next: f786 to-upper)
f777: f1 06 00 00 00             ; XT=06f1, flags=00
f77c: 08 74 6f 2d 6c 6f 77 65 72 00 ; 8, to-lower
;
f786: 99 f7 00 00                ; to-upper - (next: f799 skipWS)
f78a: d4 06 00 00 00             ; XT=06d4, flags=00
f78f: 08 74 6f 2d 75 70 70 65 72 00 ; 8, to-upper
;
f799: aa f7 00 00                ; skipWS - (next: f7aa BETWEEN)
f79d: ab 06 00 00 00             ; XT=06ab, flags=00
f7a2: 06 73 6b 69 70 57 53 00    ; 6, skipWS
;
f7aa: bc f7 00 00                ; BETWEEN - (next: f7bc CR)
f7ae: 95 06 00 00 00             ; XT=0695, flags=00
f7b3: 07 42 45 54 57 45 45 4e 00 ; 7, BETWEEN
;
f7bc: c9 f7 00 00                ; CR - (next: f7c9 CRLF)
f7c0: 89 06 00 00 02             ; XT=0689, flags=02
f7c5: 02 43 52 00                ; 2, CR
;
f7c9: d8 f7 00 00                ; CRLF - (next: f7d8 BL)
f7cd: 7d 06 00 00 02             ; XT=067d, flags=02
f7d2: 04 43 52 4c 46 00          ; 4, CRLF
;
f7d8: e5 f7 00 00                ; BL - (next: f7e5 SPACE)
f7dc: 74 06 00 00 02             ; XT=0674, flags=02
f7e1: 02 42 4c 00                ; 2, BL
;
f7e5: f5 f7 00 00                ; SPACE - (next: f7f5 ()
f7e9: 6b 06 00 00 02             ; XT=066b, flags=02
f7ee: 05 53 50 41 43 45 00       ; 5, SPACE
;
f7f5: 01 f8 00 00                ; ( - (next: f801 \)
f7f9: 29 06 00 00 01             ; XT=0629, flags=01
f7fe: 01 28 00                   ; 1, (
;
f801: 0d f8 00 00                ; \ - (next: f80d CT)
f805: 1a 06 00 00 01             ; XT=061a, flags=01
f80a: 01 5c 00                   ; 1, \
;
f80d: 1a f8 00 00                ; CT - (next: f81a TYPE)
f811: 0a 06 00 00 00             ; XT=060a, flags=00
f816: 02 43 54 00                ; 2, CT
;
f81a: 29 f8 00 00                ; TYPE - (next: f829 COUNT)
f81e: ee 05 00 00 00             ; XT=05ee, flags=00
f823: 04 54 59 50 45 00          ; 4, TYPE
;
f829: 39 f8 00 00                ; COUNT - (next: f839 FALSE)
f82d: e4 05 00 00 00             ; XT=05e4, flags=00
f832: 05 43 4f 55 4e 54 00       ; 5, COUNT
;
f839: 49 f8 00 00                ; FALSE - (next: f849 TRUE)
f83d: dc 05 00 00 02             ; XT=05dc, flags=02
f842: 05 46 41 4c 53 45 00       ; 5, FALSE
;
f849: 58 f8 00 00                ; TRUE - (next: f858 >=)
f84d: d1 05 00 00 02             ; XT=05d1, flags=02
f852: 04 54 52 55 45 00          ; 4, TRUE
;
f858: 65 f8 00 00                ; >= - (next: f865 <=)
f85c: c9 05 00 00 02             ; XT=05c9, flags=02
f861: 02 3e 3d 00                ; 2, >=
;
f865: 72 f8 00 00                ; <= - (next: f872 <>)
f869: c1 05 00 00 02             ; XT=05c1, flags=02
f86e: 02 3c 3d 00                ; 2, <=
;
f872: 7f f8 00 00                ; <> - (next: f87f 0=)
f876: b9 05 00 00 02             ; XT=05b9, flags=02
f87b: 02 3c 3e 00                ; 2, <>
;
f87f: 8c f8 00 00                ; 0= - (next: f88c C--)
f883: b2 05 00 00 02             ; XT=05b2, flags=02
f888: 02 30 3d 00                ; 2, 0=
;
f88c: 9a f8 00 00                ; C-- - (next: f89a C++)
f890: a7 05 00 00 02             ; XT=05a7, flags=02
f895: 03 43 2d 2d 00             ; 3, C--
;
f89a: a8 f8 00 00                ; C++ - (next: f8a8 --)
f89e: 9c 05 00 00 02             ; XT=059c, flags=02
f8a3: 03 43 2b 2b 00             ; 3, C++
;
f8a8: b5 f8 00 00                ; -- - (next: f8b5 ++)
f8ac: 91 05 00 00 02             ; XT=0591, flags=02
f8b1: 02 2d 2d 00                ; 2, --
;
f8b5: c2 f8 00 00                ; ++ - (next: f8c2 -!)
f8b9: 86 05 00 00 02             ; XT=0586, flags=02
f8be: 02 2b 2b 00                ; 2, ++
;
f8c2: cf f8 00 00                ; -! - (next: f8cf -=)
f8c6: 79 05 00 00 00             ; XT=0579, flags=00
f8cb: 02 2d 21 00                ; 2, -!
;
f8cf: dc f8 00 00                ; -= - (next: f8dc +=)
f8d3: 6d 05 00 00 02             ; XT=056d, flags=02
f8d8: 02 2d 3d 00                ; 2, -=
;
f8dc: e9 f8 00 00                ; += - (next: f8e9 2/)
f8e0: 62 05 00 00 02             ; XT=0562, flags=02
f8e5: 02 2b 3d 00                ; 2, +=
;
f8e9: f6 f8 00 00                ; 2/ - (next: f8f6 2*)
f8ed: 57 05 00 00 02             ; XT=0557, flags=02
f8f2: 02 32 2f 00                ; 2, 2/
;
f8f6: 03 f9 00 00                ; 2* - (next: f903 1-)
f8fa: 4e 05 00 00 02             ; XT=054e, flags=02
f8ff: 02 32 2a 00                ; 2, 2*
;
f903: 10 f9 00 00                ; 1- - (next: f910 1+)
f907: 47 05 00 00 02             ; XT=0547, flags=02
f90c: 02 31 2d 00                ; 2, 1-
;
f910: 1d f9 00 00                ; 1+ - (next: f91d MOD)
f914: 40 05 00 00 02             ; XT=0540, flags=02
f919: 02 31 2b 00                ; 2, 1+
;
f91d: 2b f9 00 00                ; MOD - (next: f92b /)
f921: 38 05 00 00 02             ; XT=0538, flags=02
f926: 03 4d 4f 44 00             ; 3, MOD
;
f92b: 37 f9 00 00                ; / - (next: f937 -ROT)
f92f: 2f 05 00 00 02             ; XT=052f, flags=02
f934: 01 2f 00                   ; 1, /
;
f937: 46 f9 00 00                ; -ROT - (next: f946 ROT)
f93b: 25 05 00 00 02             ; XT=0525, flags=02
f940: 04 2d 52 4f 54 00          ; 4, -ROT
;
f946: 54 f9 00 00                ; ROT - (next: f954 NIP)
f94a: 1b 05 00 00 02             ; XT=051b, flags=02
f94f: 03 52 4f 54 00             ; 3, ROT
;
f954: 62 f9 00 00                ; NIP - (next: f962 TUCK)
f958: 13 05 00 00 02             ; XT=0513, flags=02
f95d: 03 4e 49 50 00             ; 3, NIP
;
f962: 71 f9 00 00                ; TUCK - (next: f971 2DROP)
f966: 0b 05 00 00 02             ; XT=050b, flags=02
f96b: 04 54 55 43 4b 00          ; 4, TUCK
;
f971: 81 f9 00 00                ; 2DROP - (next: f981 2DUP)
f975: 03 05 00 00 02             ; XT=0503, flags=02
f97a: 05 32 44 52 4f 50 00       ; 5, 2DROP
;
f981: 90 f9 00 00                ; 2DUP - (next: f990 ?DUP)
f985: fb 04 00 00 02             ; XT=04fb, flags=02
f98a: 04 32 44 55 50 00          ; 4, 2DUP
;
f990: 9f f9 00 00                ; ?DUP - (next: f99f RDROP)
f994: ee 04 00 00 00             ; XT=04ee, flags=00
f999: 04 3f 44 55 50 00          ; 4, ?DUP
;
f99f: af f9 00 00                ; RDROP - (next: f9af R@)
f9a3: e6 04 00 00 02             ; XT=04e6, flags=02
f9a8: 05 52 44 52 4f 50 00       ; 5, RDROP
;
f9af: bc f9 00 00                ; R@ - (next: f9bc MEM_SZ)
f9b3: df 04 00 00 02             ; XT=04df, flags=02
f9b8: 02 52 40 00                ; 2, R@
;
f9bc: cd f9 00 00                ; MEM_SZ - (next: f9cd LEAVE)
f9c0: d3 04 00 00 00             ; XT=04d3, flags=00
f9c5: 06 4d 45 4d 5f 53 5a 00    ; 6, MEM_SZ
;
f9cd: dd f9 00 00                ; LEAVE - (next: f9dd UNTIL)
f9d1: be 04 00 00 01             ; XT=04be, flags=01
f9d6: 05 4c 45 41 56 45 00       ; 5, LEAVE
;
f9dd: ed f9 00 00                ; UNTIL - (next: f9ed WHILE)
f9e1: a4 04 00 00 01             ; XT=04a4, flags=01
f9e6: 05 55 4e 54 49 4c 00       ; 5, UNTIL
;
f9ed: fd f9 00 00                ; WHILE - (next: f9fd AGAIN)
f9f1: 8a 04 00 00 01             ; XT=048a, flags=01
f9f6: 05 57 48 49 4c 45 00       ; 5, WHILE
;
f9fd: 0d fa 00 00                ; AGAIN - (next: fa0d BEGIN)
fa01: 70 04 00 00 01             ; XT=0470, flags=01
fa06: 05 41 47 41 49 4e 00       ; 5, AGAIN
;
fa0d: 1d fa 00 00                ; BEGIN - (next: fa1d THEN)
fa11: 5b 04 00 00 01             ; XT=045b, flags=01
fa16: 05 42 45 47 49 4e 00       ; 5, BEGIN
;
fa1d: 2c fa 00 00                ; THEN - (next: fa2c ELSE)
fa21: 44 04 00 00 01             ; XT=0444, flags=01
fa26: 04 54 48 45 4e 00          ; 4, THEN
;
fa2c: 3b fa 00 00                ; ELSE - (next: fa3b IF)
fa30: 1b 04 00 00 01             ; XT=041b, flags=01
fa35: 04 45 4c 53 45 00          ; 4, ELSE
;
fa3b: 48 fa 00 00                ; IF - (next: fa48 ?COMPILING)
fa3f: fa 03 00 00 01             ; XT=03fa, flags=01
fa44: 02 49 46 00                ; 2, IF
;
fa48: 5d fa 00 00                ; ?COMPILING - (next: fa5d OFF)
fa4c: ee 03 00 00 00             ; XT=03ee, flags=00
fa51: 0a 3f 43 4f 4d 50 49 4c 49 4e 47 00 ; 10, ?COMPILING
;
fa5d: 6b fa 00 00                ; OFF - (next: fa6b ON)
fa61: e4 03 00 00 00             ; XT=03e4, flags=00
fa66: 03 4f 46 46 00             ; 3, OFF
;
fa6b: 78 fa 00 00                ; ON - (next: fa78 BINARY)
fa6f: da 03 00 00 00             ; XT=03da, flags=00
fa74: 02 4f 4e 00                ; 2, ON
;
fa78: 89 fa 00 00                ; BINARY - (next: fa89 OCTAL)
fa7c: cc 03 00 00 00             ; XT=03cc, flags=00
fa81: 06 42 49 4e 41 52 59 00    ; 6, BINARY
;
fa89: 99 fa 00 00                ; OCTAL - (next: fa99 DECIMAL)
fa8d: be 03 00 00 00             ; XT=03be, flags=00
fa92: 05 4f 43 54 41 4c 00       ; 5, OCTAL
;
fa99: ab fa 00 00                ; DECIMAL - (next: faab HEX)
fa9d: b0 03 00 00 00             ; XT=03b0, flags=00
faa2: 07 44 45 43 49 4d 41 4c 00 ; 7, DECIMAL
;
faab: b9 fa 00 00                ; HEX - (next: fab9 FLAG_INLINE)
faaf: a2 03 00 00 00             ; XT=03a2, flags=00
fab4: 03 48 45 58 00             ; 3, HEX
;
fab9: cf fa 00 00                ; FLAG_INLINE - (next: facf FLAG_IMMEDIATE)
fabd: 9a 03 00 00 02             ; XT=039a, flags=02
fac2: 0b 46 4c 41 47 5f 49 4e 4c 49 4e 45 00 ; 11, FLAG_INLINE
;
facf: e8 fa 00 00                ; FLAG_IMMEDIATE - (next: fae8 CELLS)
fad3: 92 03 00 00 02             ; XT=0392, flags=02
fad8: 0e 46 4c 41 47 5f 49 4d 4d 45 44 49 41 54 45 00 ; 14, FLAG_IMMEDIATE
;
fae8: f8 fa 00 00                ; CELLS - (next: faf8 IMMEDIATE)
faec: 89 03 00 00 02             ; XT=0389, flags=02
faf1: 05 43 45 4c 4c 53 00       ; 5, CELLS
;
faf8: 0c fb 00 00                ; IMMEDIATE - (next: fb0c INLINE)
fafc: 71 03 00 00 00             ; XT=0371, flags=00
fb01: 09 49 4d 4d 45 44 49 41 54 45 00 ; 9, IMMEDIATE
;
fb0c: 1d fb 00 00                ; INLINE - (next: fb1d BYE)
fb10: 59 03 00 00 00             ; XT=0359, flags=00
fb15: 06 49 4e 4c 49 4e 45 00    ; 6, INLINE
;
fb1d: 2b fb 00 00                ; BYE - (next: fb2b RESET)
fb21: 52 03 00 00 02             ; XT=0352, flags=02
fb26: 03 42 59 45 00             ; 3, BYE
;
fb2b: 3b fb 00 00                ; RESET - (next: fb3b BREAK)
fb2f: 4b 03 00 00 02             ; XT=034b, flags=02
fb34: 05 52 45 53 45 54 00       ; 5, RESET
;
fb3b: 4b fb 00 00                ; BREAK - (next: fb4b NOP)
fb3f: 44 03 00 00 02             ; XT=0344, flags=02
fb44: 05 42 52 45 41 4b 00       ; 5, BREAK
;
fb4b: 59 fb 00 00                ; NOP - (next: fb59 DST+1)
fb4f: 3d 03 00 00 02             ; XT=033d, flags=02
fb54: 03 4e 4f 50 00             ; 3, NOP
;
fb59: 69 fb 00 00                ; DST+1 - (next: fb69 DST+)
fb5d: 36 03 00 00 02             ; XT=0336, flags=02
fb62: 05 44 53 54 2b 31 00       ; 5, DST+1
;
fb69: 78 fb 00 00                ; DST+ - (next: fb78 DST?)
fb6d: 2f 03 00 00 02             ; XT=032f, flags=02
fb72: 04 44 53 54 2b 00          ; 4, DST+
;
fb78: 87 fb 00 00                ; DST? - (next: fb87 >DST)
fb7c: 28 03 00 00 02             ; XT=0328, flags=02
fb81: 04 44 53 54 3f 00          ; 4, DST?
;
fb87: 96 fb 00 00                ; >DST - (next: fb96 SRC+1)
fb8b: 21 03 00 00 02             ; XT=0321, flags=02
fb90: 04 3e 44 53 54 00          ; 4, >DST
;
fb96: a6 fb 00 00                ; SRC+1 - (next: fba6 SRC+)
fb9a: 1a 03 00 00 02             ; XT=031a, flags=02
fb9f: 05 53 52 43 2b 31 00       ; 5, SRC+1
;
fba6: b5 fb 00 00                ; SRC+ - (next: fbb5 SRC?)
fbaa: 13 03 00 00 02             ; XT=0313, flags=02
fbaf: 04 53 52 43 2b 00          ; 4, SRC+
;
fbb5: c4 fb 00 00                ; SRC? - (next: fbc4 >SRC)
fbb9: 0c 03 00 00 02             ; XT=030c, flags=02
fbbe: 04 53 52 43 3f 00          ; 4, SRC?
;
fbc4: d3 fb 00 00                ; >SRC - (next: fbd3 GOTOXY)
fbc8: 05 03 00 00 02             ; XT=0305, flags=02
fbcd: 04 3e 53 52 43 00          ; 4, >SRC
;
fbd3: e4 fb 00 00                ; GOTOXY - (next: fbe4 OPEN-BLOCK)
fbd7: fe 02 00 00 02             ; XT=02fe, flags=02
fbdc: 06 47 4f 54 4f 58 59 00    ; 6, GOTOXY
;
fbe4: f9 fb 00 00                ; OPEN-BLOCK - (next: fbf9 +!)
fbe8: f7 02 00 00 02             ; XT=02f7, flags=02
fbed: 0a 4f 50 45 4e 2d 42 4c 4f 43 4b 00 ; 10, OPEN-BLOCK
;
fbf9: 06 fc 00 00                ; +! - (next: fc06 RSHIFT)
fbfd: f0 02 00 00 02             ; XT=02f0, flags=02
fc02: 02 2b 21 00                ; 2, +!
;
fc06: 17 fc 00 00                ; RSHIFT - (next: fc17 LSHIFT)
fc0a: e9 02 00 00 02             ; XT=02e9, flags=02
fc0f: 06 52 53 48 49 46 54 00    ; 6, RSHIFT
;
fc17: 28 fc 00 00                ; LSHIFT - (next: fc28 GETTICK)
fc1b: e2 02 00 00 02             ; XT=02e2, flags=02
fc20: 06 4c 53 48 49 46 54 00    ; 6, LSHIFT
;
fc28: 3a fc 00 00                ; GETTICK - (next: fc3a DEC)
fc2c: db 02 00 00 02             ; XT=02db, flags=02
fc31: 07 47 45 54 54 49 43 4b 00 ; 7, GETTICK
;
fc3a: 48 fc 00 00                ; DEC - (next: fc48 RDEPTH)
fc3e: d4 02 00 00 02             ; XT=02d4, flags=02
fc43: 03 44 45 43 00             ; 3, DEC
;
fc48: 59 fc 00 00                ; RDEPTH - (next: fc59 INC)
fc4c: cd 02 00 00 02             ; XT=02cd, flags=02
fc51: 06 52 44 45 50 54 48 00    ; 6, RDEPTH
;
fc59: 67 fc 00 00                ; INC - (next: fc67 RFETCH)
fc5d: c6 02 00 00 02             ; XT=02c6, flags=02
fc62: 03 49 4e 43 00             ; 3, INC
;
fc67: 78 fc 00 00                ; RFETCH - (next: fc78 NOT)
fc6b: bf 02 00 00 02             ; XT=02bf, flags=02
fc70: 06 52 46 45 54 43 48 00    ; 6, RFETCH
;
fc78: 86 fc 00 00                ; NOT - (next: fc86 /MOD)
fc7c: b8 02 00 00 02             ; XT=02b8, flags=02
fc81: 03 4e 4f 54 00             ; 3, NOT
;
fc86: 95 fc 00 00                ; /MOD - (next: fc95 COMPAREI)
fc8a: b1 02 00 00 02             ; XT=02b1, flags=02
fc8f: 04 2f 4d 4f 44 00          ; 4, /MOD
;
fc95: a8 fc 00 00                ; COMPAREI - (next: fca8 GETCH)
fc99: aa 02 00 00 02             ; XT=02aa, flags=02
fc9e: 08 43 4f 4d 50 41 52 45 49 00 ; 8, COMPAREI
;
fca8: b8 fc 00 00                ; GETCH - (next: fcb8 DEPTH)
fcac: a3 02 00 00 02             ; XT=02a3, flags=02
fcb1: 05 47 45 54 43 48 00       ; 5, GETCH
;
fcb8: c8 fc 00 00                ; DEPTH - (next: fcc8 PICK)
fcbc: 9c 02 00 00 02             ; XT=029c, flags=02
fcc1: 05 44 45 50 54 48 00       ; 5, DEPTH
;
fcc8: d7 fc 00 00                ; PICK - (next: fcd7 AND)
fccc: 95 02 00 00 02             ; XT=0295, flags=02
fcd1: 04 50 49 43 4b 00          ; 4, PICK
;
fcd7: e5 fc 00 00                ; AND - (next: fce5 COM)
fcdb: 8e 02 00 00 02             ; XT=028e, flags=02
fce0: 03 41 4e 44 00             ; 3, AND
;
fce5: f3 fc 00 00                ; COM - (next: fcf3 R>)
fce9: 87 02 00 00 02             ; XT=0287, flags=02
fcee: 03 43 4f 4d 00             ; 3, COM
;
fcf3: 00 fd 00 00                ; R> - (next: fd00 >R)
fcf7: 80 02 00 00 02             ; XT=0280, flags=02
fcfc: 02 52 3e 00                ; 2, R>
;
fd00: 0d fd 00 00                ; >R - (next: fd0d FCLOSE)
fd04: 79 02 00 00 02             ; XT=0279, flags=02
fd09: 02 3e 52 00                ; 2, >R
;
fd0d: 1e fd 00 00                ; FCLOSE - (next: fd1e FWRITE)
fd11: 72 02 00 00 02             ; XT=0272, flags=02
fd16: 06 46 43 4c 4f 53 45 00    ; 6, FCLOSE
;
fd1e: 2f fd 00 00                ; FWRITE - (next: fd2f FREADLINE)
fd22: 6b 02 00 00 02             ; XT=026b, flags=02
fd27: 06 46 57 52 49 54 45 00    ; 6, FWRITE
;
fd2f: 43 fd 00 00                ; FREADLINE - (next: fd43 FREAD)
fd33: 64 02 00 00 02             ; XT=0264, flags=02
fd38: 09 46 52 45 41 44 4c 49 4e 45 00 ; 9, FREADLINE
;
fd43: 53 fd 00 00                ; FREAD - (next: fd53 FOPEN)
fd47: 5d 02 00 00 02             ; XT=025d, flags=02
fd4c: 05 46 52 45 41 44 00       ; 5, FREAD
;
fd53: 63 fd 00 00                ; FOPEN - (next: fd63 COMPARE)
fd57: 56 02 00 00 02             ; XT=0256, flags=02
fd5c: 05 46 4f 50 45 4e 00       ; 5, FOPEN
;
fd63: 75 fd 00 00                ; COMPARE - (next: fd75 OVER)
fd67: 4f 02 00 00 02             ; XT=024f, flags=02
fd6c: 07 43 4f 4d 50 41 52 45 00 ; 7, COMPARE
;
fd75: 84 fd 00 00                ; OVER - (next: fd84 EMIT)
fd79: 48 02 00 00 02             ; XT=0248, flags=02
fd7e: 04 4f 56 45 52 00          ; 4, OVER
;
fd84: 93 fd 00 00                ; EMIT - (next: fd93 DICTP)
fd88: 41 02 00 00 02             ; XT=0241, flags=02
fd8d: 04 45 4d 49 54 00          ; 4, EMIT
;
fd93: a3 fd 00 00                ; DICTP - (next: fda3 >)
fd97: 34 02 00 00 02             ; XT=0234, flags=02
fd9c: 05 44 49 43 54 50 00       ; 5, DICTP
;
fda3: af fd 00 00                ; > - (next: fdaf =)
fda7: 2d 02 00 00 02             ; XT=022d, flags=02
fdac: 01 3e 00                   ; 1, >
;
fdaf: bb fd 00 00                ; = - (next: fdbb <)
fdb3: 26 02 00 00 02             ; XT=0226, flags=02
fdb8: 01 3d 00                   ; 1, =
;
fdbb: c7 fd 00 00                ; < - (next: fdc7 /)
fdbf: 1f 02 00 00 02             ; XT=021f, flags=02
fdc4: 01 3c 00                   ; 1, <
;
fdc7: d3 fd 00 00                ; / - (next: fdd3 *)
fdcb: 18 02 00 00 02             ; XT=0218, flags=02
fdd0: 01 2f 00                   ; 1, /
;
fdd3: df fd 00 00                ; * - (next: fddf -)
fdd7: 11 02 00 00 02             ; XT=0211, flags=02
fddc: 01 2a 00                   ; 1, *
;
fddf: eb fd 00 00                ; - - (next: fdeb +)
fde3: 0a 02 00 00 02             ; XT=020a, flags=02
fde8: 01 2d 00                   ; 1, -
;
fdeb: f7 fd 00 00                ; + - (next: fdf7 C!)
fdef: 03 02 00 00 02             ; XT=0203, flags=02
fdf4: 01 2b 00                   ; 1, +
;
fdf7: 04 fe 00 00                ; C! - (next: fe04 C@)
fdfb: fc 01 00 00 02             ; XT=01fc, flags=02
fe00: 02 43 21 00                ; 2, C!
;
fe04: 11 fe 00 00                ; C@ - (next: fe11 CLITERAL)
fe08: f5 01 00 00 02             ; XT=01f5, flags=02
fe0d: 02 43 40 00                ; 2, C@
;
fe11: 24 fe 00 00                ; CLITERAL - (next: fe24 OR)
fe15: e8 01 00 00 02             ; XT=01e8, flags=02
fe1a: 08 43 4c 49 54 45 52 41 4c 00 ; 8, CLITERAL
;
fe24: 31 fe 00 00                ; OR - (next: fe31 RET)
fe28: e1 01 00 00 02             ; XT=01e1, flags=02
fe2d: 02 4f 52 00                ; 2, OR
;
fe31: 3f fe 00 00                ; RET - (next: fe3f CALL)
fe35: d4 01 00 00 00             ; XT=01d4, flags=00
fe3a: 03 52 45 54 00             ; 3, RET
;
fe3f: 4e fe 00 00                ; CALL - (next: fe4e JMPNZ)
fe43: c7 01 00 00 00             ; XT=01c7, flags=00
fe48: 04 43 41 4c 4c 00          ; 4, CALL
;
fe4e: 5e fe 00 00                ; JMPNZ - (next: fe5e JMPZ)
fe52: ba 01 00 00 00             ; XT=01ba, flags=00
fe57: 05 4a 4d 50 4e 5a 00       ; 5, JMPNZ
;
fe5e: 6d fe 00 00                ; JMPZ - (next: fe6d JMP)
fe62: ad 01 00 00 00             ; XT=01ad, flags=00
fe67: 04 4a 4d 50 5a 00          ; 4, JMPZ
;
fe6d: 7b fe 00 00                ; JMP - (next: fe7b SLITERAL)
fe71: a0 01 00 00 00             ; XT=01a0, flags=00
fe76: 03 4a 4d 50 00             ; 3, JMP
;
fe7b: 8e fe 00 00                ; SLITERAL - (next: fe8e DUP)
fe7f: 93 01 00 00 00             ; XT=0193, flags=00
fe84: 08 53 4c 49 54 45 52 41 4c 00 ; 8, SLITERAL
;
fe8e: 9c fe 00 00                ; DUP - (next: fe9c DROP)
fe92: 8c 01 00 00 02             ; XT=018c, flags=02
fe97: 03 44 55 50 00             ; 3, DUP
;
fe9c: ab fe 00 00                ; DROP - (next: feab SWAP)
fea0: 85 01 00 00 02             ; XT=0185, flags=02
fea5: 04 44 52 4f 50 00          ; 4, DROP
;
feab: ba fe 00 00                ; SWAP - (next: feba !)
feaf: 7e 01 00 00 02             ; XT=017e, flags=02
feb4: 04 53 57 41 50 00          ; 4, SWAP
;
feba: c6 fe 00 00                ; ! - (next: fec6 @)
febe: 77 01 00 00 02             ; XT=0177, flags=02
fec3: 01 21 00                   ; 1, !
;
fec6: d2 fe 00 00                ; @ - (next: fed2 LITERAL)
feca: 70 01 00 00 02             ; XT=0170, flags=02
fecf: 01 40 00                   ; 1, @
;
fed2: e4 fe 00 00                ; LITERAL - (next: fee4 ])
fed6: 63 01 00 00 00             ; XT=0163, flags=00
fedb: 07 4c 49 54 45 52 41 4c 00 ; 7, LITERAL
;
fee4: f0 fe 00 00                ; ] - (next: fef0 [)
fee8: 55 01 00 00 01             ; XT=0155, flags=01
feed: 01 5d 00                   ; 1, ]
;
fef0: fc fe 00 00                ; [ - (next: fefc ,)
fef4: 47 01 00 00 01             ; XT=0147, flags=01
fef9: 01 5b 00                   ; 1, [
;
fefc: 08 ff 00 00                ; , - (next: ff08 C,)
ff00: 2d 01 00 00 00             ; XT=012d, flags=00
ff05: 01 2c 00                   ; 1, ,
;
ff08: 15 ff 00 00                ; C, - (next: ff15 LAST)
ff0c: 15 01 00 00 00             ; XT=0115, flags=00
ff11: 02 43 2c 00                ; 2, C,
;
ff15: 24 ff 00 00                ; LAST - (next: ff24 HERE)
ff19: 09 01 00 00 00             ; XT=0109, flags=00
ff1e: 04 4c 41 53 54 00          ; 4, LAST
;
ff24: 33 ff 00 00                ; HERE - (next: ff33 CELL)
ff28: fd 00 00 00 00             ; XT=00fd, flags=00
ff2d: 04 48 45 52 45 00          ; 4, HERE
;
ff33: 42 ff 00 00                ; CELL - (next: ff42 T3)
ff37: f5 00 00 00 02             ; XT=00f5, flags=02
ff3c: 04 43 45 4c 4c 00          ; 4, CELL
;
ff42: 4f ff 00 00                ; T3 - (next: ff4f T2)
ff46: e5 00 00 00 00             ; XT=00e5, flags=00
ff4b: 02 54 33 00                ; 2, T3
;
ff4f: 5c ff 00 00                ; T2 - (next: ff5c T1)
ff53: d6 00 00 00 00             ; XT=00d6, flags=00
ff58: 02 54 32 00                ; 2, T2
;
ff5c: 69 ff 00 00                ; T1 - (next: ff69 INPUT-FP)
ff60: c7 00 00 00 00             ; XT=00c7, flags=00
ff65: 02 54 31 00                ; 2, T1
;
ff69: 7c ff 00 00                ; INPUT-FP - (next: ff7c #LEN)
ff6d: b8 00 00 00 00             ; XT=00b8, flags=00
ff72: 08 49 4e 50 55 54 2d 46 50 00 ; 8, INPUT-FP
;
ff7c: 8b ff 00 00                ; #LEN - (next: ff8b #NEG)
ff80: a9 00 00 00 00             ; XT=00a9, flags=00
ff85: 04 23 4c 45 4e 00          ; 4, #LEN
;
ff8b: 9a ff 00 00                ; #NEG - (next: ff9a >IN)
ff8f: 9a 00 00 00 00             ; XT=009a, flags=00
ff94: 04 23 4e 45 47 00          ; 4, #NEG
;
ff9a: a8 ff 00 00                ; >IN - (next: ffa8 (MEM_SZ))
ff9e: 8b 00 00 00 00             ; XT=008b, flags=00
ffa3: 03 3e 49 4e 00             ; 3, >IN
;
ffa8: bb ff 00 00                ; (MEM_SZ) - (next: ffbb STATE)
ffac: 7c 00 00 00 00             ; XT=007c, flags=00
ffb1: 08 28 4d 45 4d 5f 53 5a 29 00 ; 8, (MEM_SZ)
;
ffbb: cb ff 00 00                ; STATE - (next: ffcb BASE)
ffbf: 6d 00 00 00 00             ; XT=006d, flags=00
ffc4: 05 53 54 41 54 45 00       ; 5, STATE
;
ffcb: da ff 00 00                ; BASE - (next: ffda (LAST))
ffcf: 5e 00 00 00 00             ; XT=005e, flags=00
ffd4: 04 42 41 53 45 00          ; 4, BASE
;
ffda: eb ff 00 00                ; (LAST) - (next: ffeb (HERE))
ffde: 4f 00 00 00 00             ; XT=004f, flags=00
ffe3: 06 28 4c 41 53 54 29 00    ; 6, (LAST)
;
ffeb: fc ff 00 00                ; (HERE) - (next: fffc <end>)
ffef: 40 00 00 00 00             ; XT=0040, flags=00
fff4: 06 28 48 45 52 45 29 00    ; 6, (HERE)
;
fffc: 00 00 00 00                ; End.
