; memory-size: 65536 bytes, (10000 hex)
; data-stack: fe00, grows up
; return-stack: fffc, grows down
;
0000: 08 75 12 00 00             ; JMP main (1275)
;
0005: 00 00 00
0008: 00000004 00000000
0010: 0000150a 0000ef59 0000000a 00000000
0020: 00000000 00010000 00000000 00000000
0030: 00000000 00000000 00000000 00000000
;
0040: 18 eb fd 00 00             ; DICTP (HERE) (fdeb)
0045: 01 4b 00 00 00             ; LITERAL 75 (0x004b)
004a: 0c                         ; RET
004b: 0a 15 00 00                ; dw 0x150a
;
004f: 18 da fd 00 00             ; DICTP (LAST) (fdda)
0054: 01 5a 00 00 00             ; LITERAL 90 (0x005a)
0059: 0c                         ; RET
005a: 59 ef 00 00                ; dw 0xef59
;
005e: 18 cb fd 00 00             ; DICTP BASE (fdcb)
0063: 01 69 00 00 00             ; LITERAL 105 (0x0069)
0068: 0c                         ; RET
0069: 0a 00 00 00                ; dw 0x000a
;
006d: 18 bb fd 00 00             ; DICTP STATE (fdbb)
0072: 01 78 00 00 00             ; LITERAL 120 (0x0078)
0077: 0c                         ; RET
0078: 63 00 00 00                ; dw 0x0063
;
007c: 18 a8 fd 00 00             ; DICTP (MEM_SZ) (fda8)
0081: 01 87 00 00 00             ; LITERAL 135 (0x0087)
0086: 0c                         ; RET
0087: 00 00 01 00                ; dw 0x10000
;
008b: 18 9a fd 00 00             ; DICTP >IN (fd9a)
0090: 01 96 00 00 00             ; LITERAL 150 (0x0096)
0095: 0c                         ; RET
0096: 00 00 00 00                ; dw 0x0000
;
009a: 18 8a fd 00 00             ; DICTP (tmp) (fd8a)
009f: 01 a5 00 00 00             ; LITERAL 165 (0x00a5)
00a4: 0c                         ; RET
00a5: 00 00 00 00                ; dw 0x0000
;
00a9: 18 7b fd 00 00             ; DICTP #NEG (fd7b)
00ae: 01 b4 00 00 00             ; LITERAL 180 (0x00b4)
00b3: 0c                         ; RET
00b4: 00 00 00 00                ; dw 0x0000
;
00b8: 18 6c fd 00 00             ; DICTP #LEN (fd6c)
00bd: 01 c3 00 00 00             ; LITERAL 195 (0x00c3)
00c2: 0c                         ; RET
00c3: 05 00 00 00                ; dw 0x0005
;
00c7: 18 59 fd 00 00             ; DICTP INPUT-FP (fd59)
00cc: 01 d2 00 00 00             ; LITERAL 210 (0x00d2)
00d1: 0c                         ; RET
00d2: 00 00 00 00                ; dw 0x0000
;
00d6: 00                         ; RESET
00d7: 18 4a fd 00 00             ; DICTP CELL (fd4a)
00dc: 0e 04                      ; CLITERAL 4
00de: 0c                         ; RET
;
00df: 18 3b fd 00 00             ; DICTP HERE (fd3b)
00e4: 0b 40 00 00 00             ; CALL (HERE) (0040)
00e9: 02                         ; FETCH
00ea: 0c                         ; RET
;
00eb: 18 2c fd 00 00             ; DICTP LAST (fd2c)
00f0: 0b 4f 00 00 00             ; CALL (LAST) (004f)
00f5: 02                         ; FETCH
00f6: 0c                         ; RET
;
00f7: 18 1f fd 00 00             ; DICTP C, (fd1f)
00fc: 0b df 00 00 00             ; CALL HERE (00df)
0101: 10                         ; CSTORE
0102: 0b df 00 00 00             ; CALL HERE (00df)
0107: 0e 01                      ; CLITERAL 1
0109: 11                         ; ADD
010a: 0b 40 00 00 00             ; CALL (HERE) (0040)
010f: 03                         ; STORE
0110: 0c                         ; RET
;
0111: 18 13 fd 00 00             ; DICTP , (fd13)
0116: 0b df 00 00 00             ; CALL HERE (00df)
011b: 03                         ; STORE
011c: 0b df 00 00 00             ; CALL HERE (00df)
0121: 0b d7 00 00 00             ; CALL CELL (00d7)
0126: 11                         ; ADD
0127: 0b 40 00 00 00             ; CALL (HERE) (0040)
012c: 03                         ; STORE
012d: 0c                         ; RET
;
012e: 18 07 fd 00 00             ; DICTP [ (fd07)
0133: 0e 00                      ; CLITERAL 0
0135: 0b 6d 00 00 00             ; CALL STATE (006d)
013a: 03                         ; STORE
013b: 0c                         ; RET
;
013c: 18 fb fc 00 00             ; DICTP ] (fcfb)
0141: 0e 01                      ; CLITERAL 1
0143: 0b 6d 00 00 00             ; CALL STATE (006d)
0148: 03                         ; STORE
0149: 0c                         ; RET
;
014a: 18 e9 fc 00 00             ; DICTP LITERAL (fce9)
014f: 0e 01                      ; CLITERAL 1
0151: 0b f7 00 00 00             ; CALL C, (00f7)
0156: 0c                         ; RET
;
0157: 18 dd fc 00 00             ; DICTP @ (fcdd)
015c: 02                         ; FETCH
015d: 0c                         ; RET
;
015e: 18 d1 fc 00 00             ; DICTP ! (fcd1)
0163: 03                         ; STORE
0164: 0c                         ; RET
;
0165: 18 c2 fc 00 00             ; DICTP SWAP (fcc2)
016a: 04                         ; SWAP
016b: 0c                         ; RET
;
016c: 18 b3 fc 00 00             ; DICTP DROP (fcb3)
0171: 05                         ; DROP
0172: 0c                         ; RET
;
0173: 18 a5 fc 00 00             ; DICTP DUP (fca5)
0178: 06                         ; DUP
0179: 0c                         ; RET
;
017a: 18 92 fc 00 00             ; DICTP SLITERAL (fc92)
017f: 0e 07                      ; CLITERAL 7
0181: 0b f7 00 00 00             ; CALL C, (00f7)
0186: 0c                         ; RET
;
0187: 18 84 fc 00 00             ; DICTP JMP (fc84)
018c: 0e 08                      ; CLITERAL 8
018e: 0b f7 00 00 00             ; CALL C, (00f7)
0193: 0c                         ; RET
;
0194: 18 75 fc 00 00             ; DICTP JMPZ (fc75)
0199: 0e 09                      ; CLITERAL 9
019b: 0b f7 00 00 00             ; CALL C, (00f7)
01a0: 0c                         ; RET
;
01a1: 18 65 fc 00 00             ; DICTP JMPNZ (fc65)
01a6: 0e 0a                      ; CLITERAL 10
01a8: 0b f7 00 00 00             ; CALL C, (00f7)
01ad: 0c                         ; RET
;
01ae: 18 56 fc 00 00             ; DICTP CALL (fc56)
01b3: 0e 0b                      ; CLITERAL 11
01b5: 0b f7 00 00 00             ; CALL C, (00f7)
01ba: 0c                         ; RET
;
01bb: 18 48 fc 00 00             ; DICTP RET (fc48)
01c0: 0e 0c                      ; CLITERAL 12
01c2: 0b f7 00 00 00             ; CALL C, (00f7)
01c7: 0c                         ; RET
;
01c8: 18 3b fc 00 00             ; DICTP OR (fc3b)
01cd: 0d                         ; OR
01ce: 0c                         ; RET
;
01cf: 18 28 fc 00 00             ; DICTP CLITERAL (fc28)
01d4: 0e 0e                      ; CLITERAL 14
01d6: 0b f7 00 00 00             ; CALL C, (00f7)
01db: 0c                         ; RET
;
01dc: 18 1b fc 00 00             ; DICTP C@ (fc1b)
01e1: 0f                         ; CFETCH
01e2: 0c                         ; RET
;
01e3: 18 0e fc 00 00             ; DICTP C! (fc0e)
01e8: 10                         ; CSTORE
01e9: 0c                         ; RET
;
01ea: 18 02 fc 00 00             ; DICTP + (fc02)
01ef: 11                         ; ADD
01f0: 0c                         ; RET
;
01f1: 18 f6 fb 00 00             ; DICTP - (fbf6)
01f6: 12                         ; SUB
01f7: 0c                         ; RET
;
01f8: 18 ea fb 00 00             ; DICTP * (fbea)
01fd: 13                         ; MUL
01fe: 0c                         ; RET
;
01ff: 18 de fb 00 00             ; DICTP / (fbde)
0204: 14                         ; DIV
0205: 0c                         ; RET
;
0206: 18 d2 fb 00 00             ; DICTP < (fbd2)
020b: 15                         ; LT
020c: 0c                         ; RET
;
020d: 18 c6 fb 00 00             ; DICTP = (fbc6)
0212: 16                         ; EQ
0213: 0c                         ; RET
;
0214: 18 ba fb 00 00             ; DICTP > (fbba)
0219: 17                         ; GT
021a: 0c                         ; RET
;
021b: 18 aa fb 00 00             ; DICTP DICTP (fbaa)
0220: 0e 18                      ; CLITERAL 24
0222: 0b f7 00 00 00             ; CALL C, (00f7)
0227: 0c                         ; RET
;
0228: 18 9b fb 00 00             ; DICTP EMIT (fb9b)
022d: 19                         ; EMIT
022e: 0c                         ; RET
;
022f: 18 8c fb 00 00             ; DICTP OVER (fb8c)
0234: 1a                         ; OVER
0235: 0c                         ; RET
;
0236: 18 7a fb 00 00             ; DICTP COMPARE (fb7a)
023b: 1b                         ; COMPARE
023c: 0c                         ; RET
;
023d: 18 6a fb 00 00             ; DICTP FOPEN (fb6a)
0242: 1c                         ; FOPEN
0243: 0c                         ; RET
;
0244: 18 5a fb 00 00             ; DICTP FREAD (fb5a)
0249: 1d                         ; FREAD
024a: 0c                         ; RET
;
024b: 18 46 fb 00 00             ; DICTP FREADLINE (fb46)
0250: 1e                         ; FREADLINE
0251: 0c                         ; RET
;
0252: 18 35 fb 00 00             ; DICTP FWRITE (fb35)
0257: 1f                         ; FWRITE
0258: 0c                         ; RET
;
0259: 18 24 fb 00 00             ; DICTP FCLOSE (fb24)
025e: 20                         ; FCLOSE
025f: 0c                         ; RET
;
0260: 18 17 fb 00 00             ; DICTP >R (fb17)
0265: 21                         ; DTOR
0266: 0c                         ; RET
;
0267: 18 0a fb 00 00             ; DICTP R> (fb0a)
026c: 22                         ; RTOD
026d: 0c                         ; RET
;
026e: 18 f7 fa 00 00             ; DICTP LOGLEVEL (faf7)
0273: 23                         ; LOGLEVEL
0274: 0c                         ; RET
;
0275: 18 e9 fa 00 00             ; DICTP AND (fae9)
027a: 24                         ; AND
027b: 0c                         ; RET
;
027c: 18 da fa 00 00             ; DICTP PICK (fada)
0281: 25                         ; PICK
0282: 0c                         ; RET
;
0283: 18 ca fa 00 00             ; DICTP DEPTH (faca)
0288: 26                         ; DEPTH
0289: 0c                         ; RET
;
028a: 18 ba fa 00 00             ; DICTP GETCH (faba)
028f: 27                         ; GETCH
0290: 0c                         ; RET
;
0291: 18 a7 fa 00 00             ; DICTP COMPAREI (faa7)
0296: 28                         ; COMPAREI
0297: 0c                         ; RET
;
0298: 18 96 fa 00 00             ; DICTP USPUSH (fa96)
029d: 2a                         ; UPUSH
029e: 0c                         ; RET
;
029f: 18 86 fa 00 00             ; DICTP USPOP (fa86)
02a4: 2b                         ; UPOP
02a5: 0c                         ; RET
;
02a6: 18 78 fa 00 00             ; DICTP INC (fa78)
02ab: 2c                         ; INC
02ac: 0c                         ; RET
;
02ad: 18 67 fa 00 00             ; DICTP RDEPTH (fa67)
02b2: 2d                         ; RDEPTH
02b3: 0c                         ; RET
;
02b4: 18 59 fa 00 00             ; DICTP DEC (fa59)
02b9: 2e                         ; DEC
02ba: 0c                         ; RET
;
02bb: 18 47 fa 00 00             ; DICTP GETTICK (fa47)
02c0: 2f                         ; GETTICK
02c1: 0c                         ; RET
;
02c2: 18 37 fa 00 00             ; DICTP BREAK (fa37)
02c7: fd                         ; BREAK
02c8: 0c                         ; RET
;
02c9: 18 27 fa 00 00             ; DICTP RESET (fa27)
02ce: fe                         ; RESET
02cf: 0c                         ; RET
;
02d0: 18 19 fa 00 00             ; DICTP BYE (fa19)
02d5: ff                         ; BYE
02d6: 0c                         ; RET
;
02d7: 18 08 fa 00 00             ; DICTP INLINE (fa08)
02dc: 0b eb 00 00 00             ; CALL LAST (00eb)
02e1: 0e 02                      ; CLITERAL 2
02e3: 0b d7 00 00 00             ; CALL CELL (00d7)
02e8: 13                         ; MUL
02e9: 11                         ; ADD
02ea: 06                         ; DUP
02eb: 0f                         ; CFETCH
02ec: 0e 02                      ; CLITERAL 2
02ee: 0d                         ; OR
02ef: 04                         ; SWAP
02f0: 10                         ; CSTORE
02f1: 0c                         ; RET
;
02f2: 18 f4 f9 00 00             ; DICTP IMMEDIATE (f9f4)
02f7: 0b eb 00 00 00             ; CALL LAST (00eb)
02fc: 0e 02                      ; CLITERAL 2
02fe: 0b d7 00 00 00             ; CALL CELL (00d7)
0303: 13                         ; MUL
0304: 11                         ; ADD
0305: 06                         ; DUP
0306: 0f                         ; CFETCH
0307: 0e 01                      ; CLITERAL 1
0309: 0d                         ; OR
030a: 04                         ; SWAP
030b: 10                         ; CSTORE
030c: 0c                         ; RET
;
030d: 18 e4 f9 00 00             ; DICTP CELLS (f9e4)
0312: 0b d7 00 00 00             ; CALL CELL (00d7)
0317: 13                         ; MUL
0318: 0c                         ; RET
;
0319: 18 cb f9 00 00             ; DICTP FLAG_IMMEDIATE (f9cb)
031e: 0e 01                      ; CLITERAL 1
0320: 0c                         ; RET
;
0321: 18 b5 f9 00 00             ; DICTP FLAG_INLINE (f9b5)
0326: 0e 02                      ; CLITERAL 2
0328: 0c                         ; RET
;
0329: 18 a7 f9 00 00             ; DICTP HEX (f9a7)
032e: 0e 10                      ; CLITERAL 16
0330: 0b 5e 00 00 00             ; CALL BASE (005e)
0335: 03                         ; STORE
0336: 0c                         ; RET
;
0337: 18 95 f9 00 00             ; DICTP DECIMAL (f995)
033c: 0e 0a                      ; CLITERAL 10
033e: 0b 5e 00 00 00             ; CALL BASE (005e)
0343: 03                         ; STORE
0344: 0c                         ; RET
;
0345: 18 85 f9 00 00             ; DICTP OCTAL (f985)
034a: 0e 08                      ; CLITERAL 8
034c: 0b 5e 00 00 00             ; CALL BASE (005e)
0351: 03                         ; STORE
0352: 0c                         ; RET
;
0353: 18 74 f9 00 00             ; DICTP BINARY (f974)
0358: 0e 02                      ; CLITERAL 2
035a: 0b 5e 00 00 00             ; CALL BASE (005e)
035f: 03                         ; STORE
0360: 0c                         ; RET
;
0361: 18 67 f9 00 00             ; DICTP ON (f967)
0366: 0e 01                      ; CLITERAL 1
0368: 04                         ; SWAP
0369: 03                         ; STORE
036a: 0c                         ; RET
;
036b: 18 59 f9 00 00             ; DICTP OFF (f959)
0370: 0e 00                      ; CLITERAL 0
0372: 04                         ; SWAP
0373: 03                         ; STORE
0374: 0c                         ; RET
;
0375: 18 44 f9 00 00             ; DICTP ?COMPILING (f944)
037a: 0b 6d 00 00 00             ; CALL STATE (006d)
037f: 02                         ; FETCH
0380: 0c                         ; RET
;
0381: 18 37 f9 00 00             ; DICTP IF (f937)
0386: 0b 75 03 00 00             ; CALL ?COMPILING (0375)
038b: 09 a1 03 00 00             ; JMPZ 03a1
0390: 0b 94 01 00 00             ; CALL JMPZ (0194)
0395: 0b df 00 00 00             ; CALL HERE (00df)
039a: 0e 00                      ; CLITERAL 0
039c: 0b 11 01 00 00             ; CALL , (0111)
03a1: 0c                         ; RET
;
03a2: 18 28 f9 00 00             ; DICTP ELSE (f928)
03a7: 0b 75 03 00 00             ; CALL ?COMPILING (0375)
03ac: 09 ca 03 00 00             ; JMPZ 03ca
03b1: 0b 87 01 00 00             ; CALL JMP (0187)
03b6: 0b df 00 00 00             ; CALL HERE (00df)
03bb: 04                         ; SWAP
03bc: 0e 00                      ; CLITERAL 0
03be: 0b 11 01 00 00             ; CALL , (0111)
03c3: 0b df 00 00 00             ; CALL HERE (00df)
03c8: 04                         ; SWAP
03c9: 03                         ; STORE
03ca: 0c                         ; RET
;
03cb: 18 19 f9 00 00             ; DICTP THEN (f919)
03d0: 0b 75 03 00 00             ; CALL ?COMPILING (0375)
03d5: 09 e1 03 00 00             ; JMPZ 03e1
03da: 0b df 00 00 00             ; CALL HERE (00df)
03df: 04                         ; SWAP
03e0: 03                         ; STORE
03e1: 0c                         ; RET
;
03e2: 18 09 f9 00 00             ; DICTP BEGIN (f909)
03e7: 0b 75 03 00 00             ; CALL ?COMPILING (0375)
03ec: 09 f6 03 00 00             ; JMPZ 03f6
03f1: 0b df 00 00 00             ; CALL HERE (00df)
03f6: 0c                         ; RET
;
03f7: 18 f9 f8 00 00             ; DICTP AGAIN (f8f9)
03fc: 0b 75 03 00 00             ; CALL ?COMPILING (0375)
0401: 09 10 04 00 00             ; JMPZ 0410
0406: 0b 87 01 00 00             ; CALL JMP (0187)
040b: 0b 11 01 00 00             ; CALL , (0111)
0410: 0c                         ; RET
;
0411: 18 e9 f8 00 00             ; DICTP WHILE (f8e9)
0416: 0b 75 03 00 00             ; CALL ?COMPILING (0375)
041b: 09 2a 04 00 00             ; JMPZ 042a
0420: 0b a1 01 00 00             ; CALL JMPNZ (01a1)
0425: 0b 11 01 00 00             ; CALL , (0111)
042a: 0c                         ; RET
;
042b: 18 d9 f8 00 00             ; DICTP UNTIL (f8d9)
0430: 0b 75 03 00 00             ; CALL ?COMPILING (0375)
0435: 09 44 04 00 00             ; JMPZ 0444
043a: 0b 94 01 00 00             ; CALL JMPZ (0194)
043f: 0b 11 01 00 00             ; CALL , (0111)
0444: 0c                         ; RET
;
0445: 18 c9 f8 00 00             ; DICTP LEAVE (f8c9)
044a: 0b 75 03 00 00             ; CALL ?COMPILING (0375)
044f: 09 59 04 00 00             ; JMPZ 0459
0454: 0b bb 01 00 00             ; CALL RET (01bb)
0459: 0c                         ; RET
;
045a: 18 b8 f8 00 00             ; DICTP MEM_SZ (f8b8)
045f: 0b 7c 00 00 00             ; CALL (MEM_SZ) (007c)
0464: 02                         ; FETCH
0465: 0c                         ; RET
;
0466: 18 a5 f8 00 00             ; DICTP TRACE-ON (f8a5)
046b: 0e 02                      ; CLITERAL 2
046d: 23                         ; LOGLEVEL
046e: 0c                         ; RET
;
046f: 18 91 f8 00 00             ; DICTP TRACE-OFF (f891)
0474: 0e 00                      ; CLITERAL 0
0476: 23                         ; LOGLEVEL
0477: 0c                         ; RET
;
0478: 18 7e f8 00 00             ; DICTP DEBUG-ON (f87e)
047d: 0e 01                      ; CLITERAL 1
047f: 23                         ; LOGLEVEL
0480: 0c                         ; RET
;
0481: 18 6a f8 00 00             ; DICTP DEBUG-OFF (f86a)
0486: 0e 00                      ; CLITERAL 0
0488: 23                         ; LOGLEVEL
0489: 0c                         ; RET
;
048a: 18 5d f8 00 00             ; DICTP R@ (f85d)
048f: 22                         ; RTOD
0490: 06                         ; DUP
0491: 21                         ; DTOR
0492: 0c                         ; RET
;
0493: 18 4d f8 00 00             ; DICTP RDROP (f84d)
0498: 22                         ; RTOD
0499: 05                         ; DROP
049a: 0c                         ; RET
;
049b: 18 3e f8 00 00             ; DICTP 2DUP (f83e)
04a0: 1a                         ; OVER
04a1: 1a                         ; OVER
04a2: 0c                         ; RET
;
04a3: 18 2e f8 00 00             ; DICTP 2DROP (f82e)
04a8: 05                         ; DROP
04a9: 05                         ; DROP
04aa: 0c                         ; RET
;
04ab: 18 1f f8 00 00             ; DICTP TUCK (f81f)
04b0: 04                         ; SWAP
04b1: 1a                         ; OVER
04b2: 0c                         ; RET
;
04b3: 18 11 f8 00 00             ; DICTP NIP (f811)
04b8: 04                         ; SWAP
04b9: 05                         ; DROP
04ba: 0c                         ; RET
;
04bb: 18 03 f8 00 00             ; DICTP ROT (f803)
04c0: 21                         ; DTOR
04c1: 04                         ; SWAP
04c2: 22                         ; RTOD
04c3: 04                         ; SWAP
04c4: 0c                         ; RET
;
04c5: 18 f4 f7 00 00             ; DICTP -ROT (f7f4)
04ca: 04                         ; SWAP
04cb: 21                         ; DTOR
04cc: 04                         ; SWAP
04cd: 22                         ; RTOD
04ce: 0c                         ; RET
;
04cf: 18 e7 f7 00 00             ; DICTP 1+ (f7e7)
04d4: 2c                         ; INC
04d5: 0c                         ; RET
;
04d6: 18 da f7 00 00             ; DICTP 1- (f7da)
04db: 2e                         ; DEC
04dc: 0c                         ; RET
;
04dd: 18 cd f7 00 00             ; DICTP 2* (f7cd)
04e2: 0e 02                      ; CLITERAL 2
04e4: 13                         ; MUL
04e5: 0c                         ; RET
;
04e6: 18 c0 f7 00 00             ; DICTP 2/ (f7c0)
04eb: 0e 02                      ; CLITERAL 2
04ed: 14                         ; DIV
04ee: 0c                         ; RET
;
04ef: 18 b3 f7 00 00             ; DICTP += (f7b3)
04f4: 1a                         ; OVER
04f5: 02                         ; FETCH
04f6: 11                         ; ADD
04f7: 04                         ; SWAP
04f8: 03                         ; STORE
04f9: 0c                         ; RET
;
04fa: 18 a6 f7 00 00             ; DICTP -= (f7a6)
04ff: 1a                         ; OVER
0500: 02                         ; FETCH
0501: 04                         ; SWAP
0502: 12                         ; SUB
0503: 04                         ; SWAP
0504: 03                         ; STORE
0505: 0c                         ; RET
;
0506: 18 99 f7 00 00             ; DICTP ++ (f799)
050b: 0e 01                      ; CLITERAL 1
050d: 0b ef 04 00 00             ; CALL += (04ef)
0512: 0c                         ; RET
;
0513: 18 8c f7 00 00             ; DICTP -- (f78c)
0518: 0e 01                      ; CLITERAL 1
051a: 0b fa 04 00 00             ; CALL -= (04fa)
051f: 0c                         ; RET
;
0520: 18 7e f7 00 00             ; DICTP C++ (f77e)
0525: 06                         ; DUP
0526: 0f                         ; CFETCH
0527: 2c                         ; INC
0528: 04                         ; SWAP
0529: 10                         ; CSTORE
052a: 0c                         ; RET
;
052b: 18 70 f7 00 00             ; DICTP C-- (f770)
0530: 06                         ; DUP
0531: 0f                         ; CFETCH
0532: 2e                         ; DEC
0533: 04                         ; SWAP
0534: 10                         ; CSTORE
0535: 0c                         ; RET
;
0536: 18 63 f7 00 00             ; DICTP +! (f763)
053b: 04                         ; SWAP
053c: 1a                         ; OVER
053d: 02                         ; FETCH
053e: 11                         ; ADD
053f: 04                         ; SWAP
0540: 03                         ; STORE
0541: 0c                         ; RET
;
0542: 18 55 f7 00 00             ; DICTP C+! (f755)
0547: 04                         ; SWAP
0548: 1a                         ; OVER
0549: 0f                         ; CFETCH
054a: 11                         ; ADD
054b: 04                         ; SWAP
054c: 10                         ; CSTORE
054d: 0c                         ; RET
;
054e: 18 48 f7 00 00             ; DICTP 0= (f748)
0553: 0e 00                      ; CLITERAL 0
0555: 16                         ; EQ
0556: 0c                         ; RET
;
0557: 18 3b f7 00 00             ; DICTP <> (f73b)
055c: 16                         ; EQ
055d: 0e 00                      ; CLITERAL 0
055f: 16                         ; EQ
0560: 0c                         ; RET
;
0561: 18 2e f7 00 00             ; DICTP <= (f72e)
0566: 17                         ; GT
0567: 0e 00                      ; CLITERAL 0
0569: 16                         ; EQ
056a: 0c                         ; RET
;
056b: 18 21 f7 00 00             ; DICTP >= (f721)
0570: 15                         ; LT
0571: 0e 00                      ; CLITERAL 0
0573: 16                         ; EQ
0574: 0c                         ; RET
;
0575: 18 12 f7 00 00             ; DICTP TRUE (f712)
057a: 0e 01                      ; CLITERAL 1
057c: 0c                         ; RET
;
057d: 18 02 f7 00 00             ; DICTP FALSE (f702)
0582: 0e 00                      ; CLITERAL 0
0584: 0c                         ; RET
;
0585: 18 f4 f6 00 00             ; DICTP NOT (f6f4)
058a: 0e 00                      ; CLITERAL 0
058c: 16                         ; EQ
058d: 0c                         ; RET
;
058e: 18 e4 f6 00 00             ; DICTP COUNT (f6e4)
0593: 06                         ; DUP
0594: 2c                         ; INC
0595: 04                         ; SWAP
0596: 0f                         ; CFETCH
0597: 0c                         ; RET
;
0598: 18 d5 f6 00 00             ; DICTP TYPE (f6d5)
059d: 1a                         ; OVER
059e: 11                         ; ADD
059f: 04                         ; SWAP
05a0: 1a                         ; OVER
05a1: 1a                         ; OVER
05a2: 17                         ; GT
05a3: 0e 00                      ; CLITERAL 0
05a5: 16                         ; EQ
05a6: 09 ae 05 00 00             ; JMPZ 05ae
05ab: 05                         ; DROP
05ac: 05                         ; DROP
05ad: 0c                         ; RET
05ae: 06                         ; DUP
05af: 0f                         ; CFETCH
05b0: 19                         ; EMIT
05b1: 2c                         ; INC
05b2: 08 a0 05 00 00             ; JMP 05a0
05b7: 0c                         ; RET
;
05b8: 18 c8 f6 00 00             ; DICTP CT (f6c8)
05bd: 0b 8e 05 00 00             ; CALL COUNT (058e)
05c2: 0b 98 05 00 00             ; CALL TYPE (0598)
05c7: 0c                         ; RET
;
05c8: 18 bc f6 00 00             ; DICTP \ (f6bc)
05cd: 0e 00                      ; CLITERAL 0
05cf: 0b 8b 00 00 00             ; CALL >IN (008b)
05d4: 02                         ; FETCH
05d5: 10                         ; CSTORE
05d6: 0c                         ; RET
;
05d7: 18 b0 f6 00 00             ; DICTP ( (f6b0)
05dc: 0b 8b 00 00 00             ; CALL >IN (008b)
05e1: 02                         ; FETCH
05e2: 0f                         ; CFETCH
05e3: 06                         ; DUP
05e4: 0e 00                      ; CLITERAL 0
05e6: 16                         ; EQ
05e7: 09 08 06 00 00             ; JMPZ 0608
05ec: 07 13 6d 69 73 73 69 6e 67 20 63 6c 6f 73 69 6e 67 20 27 29 27 00 ; SLITERAL (05ed) [missing closing ')']
0602: 0b b8 05 00 00             ; CALL CT (05b8)
0607: fe                         ; RESET
0608: 0b 8b 00 00 00             ; CALL >IN (008b)
060d: 0b 06 05 00 00             ; CALL ++ (0506)
0612: 0e 29                      ; CLITERAL 41
0614: 16                         ; EQ
0615: 09 1b 06 00 00             ; JMPZ 061b
061a: 0c                         ; RET
061b: 08 dc 05 00 00             ; JMP 05dc
0620: 0c                         ; RET
;
0621: 18 a3 f6 00 00             ; DICTP BL (f6a3)
0626: 0e 20                      ; CLITERAL 32
0628: 19                         ; EMIT
0629: 0c                         ; RET
;
062a: 18 94 f6 00 00             ; DICTP CRLF (f694)
062f: 0e 0d                      ; CLITERAL 13
0631: 19                         ; EMIT
0632: 0e 0a                      ; CLITERAL 10
0634: 19                         ; EMIT
0635: 0c                         ; RET
;
0636: 18 87 f6 00 00             ; DICTP CR (f687)
063b: 0e 0d                      ; CLITERAL 13
063d: 19                         ; EMIT
063e: 0e 0a                      ; CLITERAL 10
0640: 19                         ; EMIT
0641: 0c                         ; RET
;
0642: 18 75 f6 00 00             ; DICTP BETWEEN (f675)
0647: 0e 02                      ; CLITERAL 2
0649: 25                         ; PICK
064a: 15                         ; LT
064b: 09 55 06 00 00             ; JMPZ 0655
0650: 05                         ; DROP
0651: 05                         ; DROP
0652: 0e 00                      ; CLITERAL 0
0654: 0c                         ; RET
0655: 15                         ; LT
0656: 0e 00                      ; CLITERAL 0
0658: 16                         ; EQ
0659: 0c                         ; RET
;
065a: 18 62 f6 00 00             ; DICTP tmp-init (f662)
065f: 0b eb 00 00 00             ; CALL LAST (00eb)
0664: 0b 9a 00 00 00             ; CALL (tmp) (009a)
0669: 03                         ; STORE
066a: 0c                         ; RET
;
066b: 18 50 f6 00 00             ; DICTP tmp-cur (f650)
0670: 0b 9a 00 00 00             ; CALL (tmp) (009a)
0675: 02                         ; FETCH
0676: 0c                         ; RET
;
0677: 18 3c f6 00 00             ; DICTP tmp-alloc (f63c)
067c: 0b 9a 00 00 00             ; CALL (tmp) (009a)
0681: 04                         ; SWAP
0682: 1a                         ; OVER
0683: 02                         ; FETCH
0684: 04                         ; SWAP
0685: 12                         ; SUB
0686: 04                         ; SWAP
0687: 03                         ; STORE
0688: 0b 6b 06 00 00             ; CALL tmp-cur (066b)
068d: 0c                         ; RET
;
068e: 18 2e f6 00 00             ; DICTP PAD (f62e)
0693: 0b 5a 06 00 00             ; CALL tmp-init (065a)
0698: 0e c8                      ; CLITERAL 200
069a: 0b 77 06 00 00             ; CALL tmp-alloc (0677)
069f: 0c                         ; RET
;
06a0: 18 1b f6 00 00             ; DICTP getInput (f61b)
06a5: 0b 8e 06 00 00             ; CALL PAD (068e)
06aa: 0e 80                      ; CLITERAL 128
06ac: 0e 00                      ; CLITERAL 0
06ae: 1e                         ; FREADLINE
06af: 05                         ; DROP
06b0: 0b 8e 06 00 00             ; CALL PAD (068e)
06b5: 0c                         ; RET
;
06b6: 18 0a f6 00 00             ; DICTP skipWS (f60a)
06bb: 06                         ; DUP
06bc: 0f                         ; CFETCH
06bd: 06                         ; DUP
06be: 09 d7 06 00 00             ; JMPZ 06d7
06c3: 0e 20                      ; CLITERAL 32
06c5: 17                         ; GT
06c6: 09 d1 06 00 00             ; JMPZ 06d1
06cb: 0c                         ; RET
06cc: 08 d2 06 00 00             ; JMP 06d2
06d1: 2c                         ; INC
06d2: 08 d9 06 00 00             ; JMP 06d9
06d7: 05                         ; DROP
06d8: 0c                         ; RET
06d9: 08 bb 06 00 00             ; JMP 06bb
06de: 0c                         ; RET
;
06df: 18 f5 f5 00 00             ; DICTP getOneWord (f5f5)
06e4: 06                         ; DUP
06e5: 21                         ; DTOR
06e6: 21                         ; DTOR
06e7: 22                         ; RTOD
06e8: 06                         ; DUP
06e9: 21                         ; DTOR
06ea: 0f                         ; CFETCH
06eb: 0e 20                      ; CLITERAL 32
06ed: 17                         ; GT
06ee: 09 fb 06 00 00             ; JMPZ 06fb
06f3: 22                         ; RTOD
06f4: 2c                         ; INC
06f5: 21                         ; DTOR
06f6: 08 11 07 00 00             ; JMP 0711
06fb: 22                         ; RTOD
06fc: 06                         ; DUP
06fd: 21                         ; DTOR
06fe: 0f                         ; CFETCH
06ff: 09 0d 07 00 00             ; JMPZ 070d
0704: 0e 00                      ; CLITERAL 0
0706: 22                         ; RTOD
0707: 06                         ; DUP
0708: 21                         ; DTOR
0709: 10                         ; CSTORE
070a: 22                         ; RTOD
070b: 2c                         ; INC
070c: 21                         ; DTOR
070d: 22                         ; RTOD
070e: 22                         ; RTOD
070f: 04                         ; SWAP
0710: 0c                         ; RET
0711: 08 e7 06 00 00             ; JMP 06e7
0716: 0c                         ; RET
;
0717: 18 e1 f5 00 00             ; DICTP DICT>NEXT (f5e1)
071c: 0c                         ; RET
;
071d: 18 cf f5 00 00             ; DICTP DICT>XT (f5cf)
0722: 0b d7 00 00 00             ; CALL CELL (00d7)
0727: 11                         ; ADD
0728: 0c                         ; RET
;
0729: 18 ba f5 00 00             ; DICTP DICT>FLAGS (f5ba)
072e: 0e 02                      ; CLITERAL 2
0730: 0b d7 00 00 00             ; CALL CELL (00d7)
0735: 13                         ; MUL
0736: 11                         ; ADD
0737: 0c                         ; RET
;
0738: 18 a6 f5 00 00             ; DICTP DICT>NAME (f5a6)
073d: 0b 29 07 00 00             ; CALL DICT>FLAGS (0729)
0742: 2c                         ; INC
0743: 0c                         ; RET
;
0744: 18 92 f5 00 00             ; DICTP NEXT>DICT (f592)
0749: 0c                         ; RET
;
074a: 18 80 f5 00 00             ; DICTP XT>DICT (f580)
074f: 0b d7 00 00 00             ; CALL CELL (00d7)
0754: 12                         ; SUB
0755: 0c                         ; RET
;
0756: 18 6b f5 00 00             ; DICTP FLAGS>DICT (f56b)
075b: 0e 02                      ; CLITERAL 2
075d: 0b d7 00 00 00             ; CALL CELL (00d7)
0762: 13                         ; MUL
0763: 12                         ; SUB
0764: 0c                         ; RET
;
0765: 18 57 f5 00 00             ; DICTP NAME>DICT (f557)
076a: 2e                         ; DEC
076b: 0e 02                      ; CLITERAL 2
076d: 0b d7 00 00 00             ; CALL CELL (00d7)
0772: 13                         ; MUL
0773: 12                         ; SUB
0774: 0c                         ; RET
;
0775: 18 42 f5 00 00             ; DICTP DICT.GetXT (f542)
077a: 0b 1d 07 00 00             ; CALL DICT>XT (071d)
077f: 02                         ; FETCH
0780: 0c                         ; RET
;
0781: 18 2a f5 00 00             ; DICTP DICT.GetFLAGS (f52a)
0786: 0b 29 07 00 00             ; CALL DICT>FLAGS (0729)
078b: 0f                         ; CFETCH
078c: 0c                         ; RET
;
078d: 18 15 f5 00 00             ; DICTP DICTP>NAME (f515)
0792: 2c                         ; INC
0793: 02                         ; FETCH
0794: 0b 38 07 00 00             ; CALL DICT>NAME (0738)
0799: 0c                         ; RET
;
079a: 18 ff f4 00 00             ; DICTP XT.GetDICTP (f4ff)
079f: 06                         ; DUP
07a0: 0f                         ; CFETCH
07a1: 0e 18                      ; CLITERAL 24
07a3: 16                         ; EQ
07a4: 09 b0 07 00 00             ; JMPZ 07b0
07a9: 2c                         ; INC
07aa: 02                         ; FETCH
07ab: 08 b2 07 00 00             ; JMP 07b2
07b0: 05                         ; DROP
07b1: fe                         ; RESET
07b2: 0c                         ; RET
;
07b3: 18 e2 f4 00 00             ; DICTP FLAGS.ISIMMEDIATE? (f4e2)
07b8: 0e 01                      ; CLITERAL 1
07ba: 24                         ; AND
07bb: 0c                         ; RET
;
07bc: 18 c8 f4 00 00             ; DICTP FLAGS.ISINLINE? (f4c8)
07c1: 0e 02                      ; CLITERAL 2
07c3: 24                         ; AND
07c4: 0c                         ; RET
;
07c5: 18 ac f4 00 00             ; DICTP DICT.GetIMMEDIATE (f4ac)
07ca: 0b 81 07 00 00             ; CALL DICT.GetFLAGS (0781)
07cf: 0b b3 07 00 00             ; CALL FLAGS.ISIMMEDIATE? (07b3)
07d4: 0c                         ; RET
;
07d5: 18 93 f4 00 00             ; DICTP DICT.GetINLINE (f493)
07da: 0b 81 07 00 00             ; CALL DICT.GetFLAGS (0781)
07df: 0b bc 07 00 00             ; CALL FLAGS.ISINLINE? (07bc)
07e4: 0c                         ; RET
;
07e5: 18 7e f4 00 00             ; DICTP findInDict (f47e)
07ea: 0b eb 00 00 00             ; CALL LAST (00eb)
07ef: 21                         ; DTOR
07f0: 22                         ; RTOD
07f1: 06                         ; DUP
07f2: 21                         ; DTOR
07f3: 06                         ; DUP
07f4: 09 1d 08 00 00             ; JMPZ 081d
07f9: 0b 38 07 00 00             ; CALL DICT>NAME (0738)
07fe: 2c                         ; INC
07ff: 1a                         ; OVER
0800: 28                         ; COMPAREI
0801: 09 18 08 00 00             ; JMPZ 0818
0806: 05                         ; DROP
0807: 22                         ; RTOD
0808: 06                         ; DUP
0809: 21                         ; DTOR
080a: 0b 75 07 00 00             ; CALL DICT.GetXT (0775)
080f: 22                         ; RTOD
0810: 0b 81 07 00 00             ; CALL DICT.GetFLAGS (0781)
0815: 0e 01                      ; CLITERAL 1
0817: 0c                         ; RET
0818: 08 25 08 00 00             ; JMP 0825
081d: 05                         ; DROP
081e: 05                         ; DROP
081f: 22                         ; RTOD
0820: 0e 00                      ; CLITERAL 0
0822: 0e 00                      ; CLITERAL 0
0824: 0c                         ; RET
0825: 22                         ; RTOD
0826: 02                         ; FETCH
0827: 21                         ; DTOR
0828: 08 f0 07 00 00             ; JMP 07f0
082d: 0c                         ; RET
;
082e: 18 6d f4 00 00             ; DICTP isHEX? (f46d)
0833: 0b 5e 00 00 00             ; CALL BASE (005e)
0838: 02                         ; FETCH
0839: 0e 10                      ; CLITERAL 16
083b: 16                         ; EQ
083c: 0c                         ; RET
;
083d: 18 58 f4 00 00             ; DICTP isNumChar? (f458)
0842: 06                         ; DUP
0843: 0e 30                      ; CLITERAL 48
0845: 0e 39                      ; CLITERAL 57
0847: 0b 42 06 00 00             ; CALL BETWEEN (0642)
084c: 09 57 08 00 00             ; JMPZ 0857
0851: 0e 30                      ; CLITERAL 48
0853: 12                         ; SUB
0854: 0e 01                      ; CLITERAL 1
0856: 0c                         ; RET
0857: 0b 2e 08 00 00             ; CALL isHEX? (082e)
085c: 09 8b 08 00 00             ; JMPZ 088b
0861: 06                         ; DUP
0862: 0e 41                      ; CLITERAL 65
0864: 0e 46                      ; CLITERAL 70
0866: 0b 42 06 00 00             ; CALL BETWEEN (0642)
086b: 09 76 08 00 00             ; JMPZ 0876
0870: 0e 37                      ; CLITERAL 55
0872: 12                         ; SUB
0873: 0e 01                      ; CLITERAL 1
0875: 0c                         ; RET
0876: 06                         ; DUP
0877: 0e 61                      ; CLITERAL 97
0879: 0e 66                      ; CLITERAL 102
087b: 0b 42 06 00 00             ; CALL BETWEEN (0642)
0880: 09 8b 08 00 00             ; JMPZ 088b
0885: 0e 57                      ; CLITERAL 87
0887: 12                         ; SUB
0888: 0e 01                      ; CLITERAL 1
088a: 0c                         ; RET
088b: 0e 00                      ; CLITERAL 0
088d: 0c                         ; RET
;
088e: 18 47 f4 00 00             ; DICTP NEGATE (f447)
0893: 0e 00                      ; CLITERAL 0
0895: 04                         ; SWAP
0896: 12                         ; SUB
0897: 0c                         ; RET
;
0898: 18 39 f4 00 00             ; DICTP ABS (f439)
089d: 06                         ; DUP
089e: 0e 00                      ; CLITERAL 0
08a0: 15                         ; LT
08a1: 09 ab 08 00 00             ; JMPZ 08ab
08a6: 0b 8e 08 00 00             ; CALL NEGATE (088e)
08ab: 0c                         ; RET
;
08ac: 18 25 f4 00 00             ; DICTP isNumber? (f425)
08b1: 06                         ; DUP
08b2: 0f                         ; CFETCH
08b3: 0e 2d                      ; CLITERAL 45
08b5: 16                         ; EQ
08b6: 06                         ; DUP
08b7: 0b a9 00 00 00             ; CALL #NEG (00a9)
08bc: 03                         ; STORE
08bd: 09 c3 08 00 00             ; JMPZ 08c3
08c2: 2c                         ; INC
08c3: 0e 00                      ; CLITERAL 0
08c5: 21                         ; DTOR
08c6: 06                         ; DUP
08c7: 0f                         ; CFETCH
08c8: 06                         ; DUP
08c9: 0e 00                      ; CLITERAL 0
08cb: 16                         ; EQ
08cc: 09 e7 08 00 00             ; JMPZ 08e7
08d1: 05                         ; DROP
08d2: 05                         ; DROP
08d3: 22                         ; RTOD
08d4: 0b a9 00 00 00             ; CALL #NEG (00a9)
08d9: 02                         ; FETCH
08da: 09 e4 08 00 00             ; JMPZ 08e4
08df: 0b 8e 08 00 00             ; CALL NEGATE (088e)
08e4: 0e 01                      ; CLITERAL 1
08e6: 0c                         ; RET
08e7: 0b 3d 08 00 00             ; CALL isNumChar? (083d)
08ec: 09 01 09 00 00             ; JMPZ 0901
08f1: 22                         ; RTOD
08f2: 0b 5e 00 00 00             ; CALL BASE (005e)
08f7: 02                         ; FETCH
08f8: 13                         ; MUL
08f9: 11                         ; ADD
08fa: 21                         ; DTOR
08fb: 2c                         ; INC
08fc: 08 06 09 00 00             ; JMP 0906
0901: 05                         ; DROP
0902: 22                         ; RTOD
0903: 0e 00                      ; CLITERAL 0
0905: 0c                         ; RET
0906: 08 c6 08 00 00             ; JMP 08c6
090b: 0c                         ; RET
;
090c: 18 17 f4 00 00             ; DICTP MOD (f417)
0911: 1a                         ; OVER
0912: 1a                         ; OVER
0913: 14                         ; DIV
0914: 13                         ; MUL
0915: 12                         ; SUB
0916: 0c                         ; RET
;
0917: 18 08 f4 00 00             ; DICTP /MOD (f408)
091c: 1a                         ; OVER
091d: 1a                         ; OVER
091e: 14                         ; DIV
091f: 06                         ; DUP
0920: 21                         ; DTOR
0921: 13                         ; MUL
0922: 12                         ; SUB
0923: 22                         ; RTOD
0924: 0c                         ; RET
;
0925: 18 f8 f3 00 00             ; DICTP SPACE (f3f8)
092a: 0e 20                      ; CLITERAL 32
092c: 19                         ; EMIT
092d: 0c                         ; RET
;
092e: 18 eb f3 00 00             ; DICTP <# (f3eb)
0933: 0b a9 00 00 00             ; CALL #NEG (00a9)
0938: 0b 6b 03 00 00             ; CALL OFF (036b)
093d: 0b b8 00 00 00             ; CALL #LEN (00b8)
0942: 0b 6b 03 00 00             ; CALL OFF (036b)
0947: 06                         ; DUP
0948: 0e 00                      ; CLITERAL 0
094a: 15                         ; LT
094b: 09 5f 09 00 00             ; JMPZ 095f
0950: 0b 8e 08 00 00             ; CALL NEGATE (088e)
0955: 0b a9 00 00 00             ; CALL #NEG (00a9)
095a: 0b 61 03 00 00             ; CALL ON (0361)
095f: 0e 00                      ; CLITERAL 0
0961: 04                         ; SWAP
0962: 0c                         ; RET
;
0963: 18 df f3 00 00             ; DICTP # (f3df)
0968: 0b 5e 00 00 00             ; CALL BASE (005e)
096d: 02                         ; FETCH
096e: 0b 17 09 00 00             ; CALL /MOD (0917)
0973: 04                         ; SWAP
0974: 0e 30                      ; CLITERAL 48
0976: 11                         ; ADD
0977: 06                         ; DUP
0978: 0e 39                      ; CLITERAL 57
097a: 17                         ; GT
097b: 09 83 09 00 00             ; JMPZ 0983
0980: 0e 07                      ; CLITERAL 7
0982: 11                         ; ADD
0983: 0b b8 00 00 00             ; CALL #LEN (00b8)
0988: 0b 06 05 00 00             ; CALL ++ (0506)
098d: 04                         ; SWAP
098e: 0c                         ; RET
;
098f: 18 d2 f3 00 00             ; DICTP #S (f3d2)
0994: 0b 63 09 00 00             ; CALL # (0963)
0999: 06                         ; DUP
099a: 0e 00                      ; CLITERAL 0
099c: 16                         ; EQ
099d: 09 94 09 00 00             ; JMPZ 0994
09a2: 0c                         ; RET
;
09a3: 18 c5 f3 00 00             ; DICTP #> (f3c5)
09a8: 0c                         ; RET
;
09a9: 18 b7 f3 00 00             ; DICTP #P- (f3b7)
09ae: 05                         ; DROP
09af: 0b a9 00 00 00             ; CALL #NEG (00a9)
09b4: 02                         ; FETCH
09b5: 09 bd 09 00 00             ; JMPZ 09bd
09ba: 0e 2d                      ; CLITERAL 45
09bc: 19                         ; EMIT
09bd: 0c                         ; RET
;
09be: 18 aa f3 00 00             ; DICTP #P (f3aa)
09c3: 0b a9 09 00 00             ; CALL #P- (09a9)
09c8: 19                         ; EMIT
09c9: 06                         ; DUP
09ca: 0e 00                      ; CLITERAL 0
09cc: 16                         ; EQ
09cd: 09 c8 09 00 00             ; JMPZ 09c8
09d2: 05                         ; DROP
09d3: 0c                         ; RET
;
09d4: 18 9c f3 00 00             ; DICTP (.) (f39c)
09d9: 0b 2e 09 00 00             ; CALL <# (092e)
09de: 0b 8f 09 00 00             ; CALL #S (098f)
09e3: 0b a3 09 00 00             ; CALL #> (09a3)
09e8: 0b be 09 00 00             ; CALL #P (09be)
09ed: 0c                         ; RET
;
09ee: 18 90 f3 00 00             ; DICTP . (f390)
09f3: 0b d4 09 00 00             ; CALL (.) (09d4)
09f8: 0b 25 09 00 00             ; CALL SPACE (0925)
09fd: 0c                         ; RET
;
09fe: 18 83 f3 00 00             ; DICTP .2 (f383)
0a03: 0b 2e 09 00 00             ; CALL <# (092e)
0a08: 0b 63 09 00 00             ; CALL # (0963)
0a0d: 0b 63 09 00 00             ; CALL # (0963)
0a12: 0b a3 09 00 00             ; CALL #> (09a3)
0a17: 0b be 09 00 00             ; CALL #P (09be)
0a1c: 0c                         ; RET
;
0a1d: 18 76 f3 00 00             ; DICTP .3 (f376)
0a22: 0b 2e 09 00 00             ; CALL <# (092e)
0a27: 0b 63 09 00 00             ; CALL # (0963)
0a2c: 0b 63 09 00 00             ; CALL # (0963)
0a31: 0b 63 09 00 00             ; CALL # (0963)
0a36: 0b a3 09 00 00             ; CALL #> (09a3)
0a3b: 0b be 09 00 00             ; CALL #P (09be)
0a40: 0c                         ; RET
;
0a41: 18 69 f3 00 00             ; DICTP .4 (f369)
0a46: 0b 2e 09 00 00             ; CALL <# (092e)
0a4b: 0b 63 09 00 00             ; CALL # (0963)
0a50: 0b 63 09 00 00             ; CALL # (0963)
0a55: 0b 63 09 00 00             ; CALL # (0963)
0a5a: 0b 63 09 00 00             ; CALL # (0963)
0a5f: 0b a3 09 00 00             ; CALL #> (09a3)
0a64: 0b be 09 00 00             ; CALL #P (09be)
0a69: 0c                         ; RET
;
0a6a: 18 5a f3 00 00             ; DICTP HEX. (f35a)
0a6f: 0b 5e 00 00 00             ; CALL BASE (005e)
0a74: 02                         ; FETCH
0a75: 04                         ; SWAP
0a76: 0b 29 03 00 00             ; CALL HEX (0329)
0a7b: 0b d4 09 00 00             ; CALL (.) (09d4)
0a80: 0b 5e 00 00 00             ; CALL BASE (005e)
0a85: 03                         ; STORE
0a86: 0c                         ; RET
;
0a87: 18 4a f3 00 00             ; DICTP HEX.2 (f34a)
0a8c: 0b 5e 00 00 00             ; CALL BASE (005e)
0a91: 02                         ; FETCH
0a92: 04                         ; SWAP
0a93: 0b 29 03 00 00             ; CALL HEX (0329)
0a98: 0b fe 09 00 00             ; CALL .2 (09fe)
0a9d: 0b 5e 00 00 00             ; CALL BASE (005e)
0aa2: 03                         ; STORE
0aa3: 0c                         ; RET
;
0aa4: 18 3a f3 00 00             ; DICTP HEX.4 (f33a)
0aa9: 0b 5e 00 00 00             ; CALL BASE (005e)
0aae: 02                         ; FETCH
0aaf: 04                         ; SWAP
0ab0: 0b 29 03 00 00             ; CALL HEX (0329)
0ab5: 0b 41 0a 00 00             ; CALL .4 (0a41)
0aba: 0b 5e 00 00 00             ; CALL BASE (005e)
0abf: 03                         ; STORE
0ac0: 0c                         ; RET
;
0ac1: 18 27 f3 00 00             ; DICTP DECIMAL. (f327)
0ac6: 0b 5e 00 00 00             ; CALL BASE (005e)
0acb: 02                         ; FETCH
0acc: 04                         ; SWAP
0acd: 0b 37 03 00 00             ; CALL DECIMAL (0337)
0ad2: 0b d4 09 00 00             ; CALL (.) (09d4)
0ad7: 0b 5e 00 00 00             ; CALL BASE (005e)
0adc: 03                         ; STORE
0add: 0c                         ; RET
;
0ade: 18 15 f3 00 00             ; DICTP BINARY. (f315)
0ae3: 0b 5e 00 00 00             ; CALL BASE (005e)
0ae8: 02                         ; FETCH
0ae9: 04                         ; SWAP
0aea: 0b 53 03 00 00             ; CALL BINARY (0353)
0aef: 0b d4 09 00 00             ; CALL (.) (09d4)
0af4: 0b 5e 00 00 00             ; CALL BASE (005e)
0af9: 03                         ; STORE
0afa: 0c                         ; RET
;
0afb: 18 07 f3 00 00             ; DICTP MIN (f307)
0b00: 1a                         ; OVER
0b01: 1a                         ; OVER
0b02: 17                         ; GT
0b03: 09 09 0b 00 00             ; JMPZ 0b09
0b08: 04                         ; SWAP
0b09: 05                         ; DROP
0b0a: 0c                         ; RET
;
0b0b: 18 f9 f2 00 00             ; DICTP MAX (f2f9)
0b10: 1a                         ; OVER
0b11: 1a                         ; OVER
0b12: 15                         ; LT
0b13: 09 19 0b 00 00             ; JMPZ 0b19
0b18: 04                         ; SWAP
0b19: 05                         ; DROP
0b1a: 0c                         ; RET
;
0b1b: 18 ec f2 00 00             ; DICTP .S (f2ec)
0b20: 0e 20                      ; CLITERAL 32
0b22: 19                         ; EMIT
0b23: 26                         ; DEPTH
0b24: 0e 00                      ; CLITERAL 0
0b26: 15                         ; LT
0b27: 09 4a 0b 00 00             ; JMPZ 0b4a
0b2c: 07 10 53 74 61 63 6b 20 75 6e 64 65 72 66 6c 6f 77 21 00 ; SLITERAL (0b2d) [Stack underflow!]
0b3f: 0b 8e 05 00 00             ; CALL COUNT (058e)
0b44: 0b 98 05 00 00             ; CALL TYPE (0598)
0b49: fe                         ; RESET
0b4a: 26                         ; DEPTH
0b4b: 0e 00                      ; CLITERAL 0
0b4d: 16                         ; EQ
0b4e: 09 5d 0b 00 00             ; JMPZ 0b5d
0b53: 0e 28                      ; CLITERAL 40
0b55: 19                         ; EMIT
0b56: 0e ed                      ; CLITERAL 237
0b58: 19                         ; EMIT
0b59: 0e 29                      ; CLITERAL 41
0b5b: 19                         ; EMIT
0b5c: 0c                         ; RET
0b5d: 0e 28                      ; CLITERAL 40
0b5f: 19                         ; EMIT
0b60: 0b 25 09 00 00             ; CALL SPACE (0925)
0b65: 26                         ; DEPTH
0b66: 2e                         ; DEC
0b67: 21                         ; DTOR
0b68: 22                         ; RTOD
0b69: 06                         ; DUP
0b6a: 21                         ; DTOR
0b6b: 25                         ; PICK
0b6c: 0b ee 09 00 00             ; CALL . (09ee)
0b71: 22                         ; RTOD
0b72: 06                         ; DUP
0b73: 21                         ; DTOR
0b74: 09 81 0b 00 00             ; JMPZ 0b81
0b79: 22                         ; RTOD
0b7a: 2e                         ; DEC
0b7b: 21                         ; DTOR
0b7c: 08 87 0b 00 00             ; JMP 0b87
0b81: 22                         ; RTOD
0b82: 05                         ; DROP
0b83: 0e 29                      ; CLITERAL 41
0b85: 19                         ; EMIT
0b86: 0c                         ; RET
0b87: 08 68 0b 00 00             ; JMP 0b68
0b8c: 0c                         ; RET
;
0b8d: 18 d8 f2 00 00             ; DICTP .(MEM_SZ) (f2d8)
0b92: 07 08 4d 65 6d 6f 72 79 3a 20 00 ; SLITERAL (0b93) [Memory: ]
0b9d: 0b b8 05 00 00             ; CALL CT (05b8)
0ba2: 0b 5a 04 00 00             ; CALL MEM_SZ (045a)
0ba7: 06                         ; DUP
0ba8: 0b 6a 0a 00 00             ; CALL HEX. (0a6a)
0bad: 07 02 20 28 00             ; SLITERAL (0bae) [ (]
0bb2: 0b b8 05 00 00             ; CALL CT (05b8)
0bb7: 0b d4 09 00 00             ; CALL (.) (09d4)
0bbc: 07 01 29 00                ; SLITERAL (0bbd) [)]
0bc0: 0b b8 05 00 00             ; CALL CT (05b8)
0bc5: 0c                         ; RET
;
0bc6: 18 c6 f2 00 00             ; DICTP .(HERE) (f2c6)
0bcb: 07 06 48 45 52 45 3a 20 00 ; SLITERAL (0bcc) [HERE: ]
0bd4: 0b b8 05 00 00             ; CALL CT (05b8)
0bd9: 0b df 00 00 00             ; CALL HERE (00df)
0bde: 06                         ; DUP
0bdf: 0b 6a 0a 00 00             ; CALL HEX. (0a6a)
0be4: 07 02 20 28 00             ; SLITERAL (0be5) [ (]
0be9: 0b b8 05 00 00             ; CALL CT (05b8)
0bee: 0b d4 09 00 00             ; CALL (.) (09d4)
0bf3: 07 01 29 00                ; SLITERAL (0bf4) [)]
0bf7: 0b b8 05 00 00             ; CALL CT (05b8)
0bfc: 0c                         ; RET
;
0bfd: 18 b4 f2 00 00             ; DICTP .(LAST) (f2b4)
0c02: 07 06 4c 41 53 54 3a 20 00 ; SLITERAL (0c03) [LAST: ]
0c0b: 0b b8 05 00 00             ; CALL CT (05b8)
0c10: 0b eb 00 00 00             ; CALL LAST (00eb)
0c15: 06                         ; DUP
0c16: 0b 6a 0a 00 00             ; CALL HEX. (0a6a)
0c1b: 07 02 20 28 00             ; SLITERAL (0c1c) [ (]
0c20: 0b b8 05 00 00             ; CALL CT (05b8)
0c25: 0b d4 09 00 00             ; CALL (.) (09d4)
0c2a: 07 01 29 00                ; SLITERAL (0c2b) [)]
0c2e: 0b b8 05 00 00             ; CALL CT (05b8)
0c33: 0c                         ; RET
;
0c34: 18 9e f2 00 00             ; DICTP .WORD-SHORT (f29e)
0c39: 06                         ; DUP
0c3a: 0b 38 07 00 00             ; CALL DICT>NAME (0738)
0c3f: 0b b8 05 00 00             ; CALL CT (05b8)
0c44: 0e 20                      ; CLITERAL 32
0c46: 19                         ; EMIT
0c47: 02                         ; FETCH
0c48: 0c                         ; RET
;
0c49: 18 8e f2 00 00             ; DICTP WORDS (f28e)
0c4e: 0b eb 00 00 00             ; CALL LAST (00eb)
0c53: 06                         ; DUP
0c54: 02                         ; FETCH
0c55: 0e 00                      ; CLITERAL 0
0c57: 16                         ; EQ
0c58: 09 65 0c 00 00             ; JMPZ 0c65
0c5d: 05                         ; DROP
0c5e: 0e 0d                      ; CLITERAL 13
0c60: 19                         ; EMIT
0c61: 0e 0a                      ; CLITERAL 10
0c63: 19                         ; EMIT
0c64: 0c                         ; RET
0c65: 0b 34 0c 00 00             ; CALL .WORD-SHORT (0c34)
0c6a: 08 53 0c 00 00             ; JMP 0c53
0c6f: 0c                         ; RET
;
0c70: 18 79 f2 00 00             ; DICTP .WORD-LONG (f279)
0c75: 06                         ; DUP
0c76: 0b 6a 0a 00 00             ; CALL HEX. (0a6a)
0c7b: 0e 3a                      ; CLITERAL 58
0c7d: 19                         ; EMIT
0c7e: 0e 20                      ; CLITERAL 32
0c80: 19                         ; EMIT
0c81: 06                         ; DUP
0c82: 0b 38 07 00 00             ; CALL DICT>NAME (0738)
0c87: 0b b8 05 00 00             ; CALL CT (05b8)
0c8c: 0e 20                      ; CLITERAL 32
0c8e: 19                         ; EMIT
0c8f: 06                         ; DUP
0c90: 0b 75 07 00 00             ; CALL DICT.GetXT (0775)
0c95: 0e 28                      ; CLITERAL 40
0c97: 19                         ; EMIT
0c98: 0b a4 0a 00 00             ; CALL HEX.4 (0aa4)
0c9d: 0e 29                      ; CLITERAL 41
0c9f: 19                         ; EMIT
0ca0: 06                         ; DUP
0ca1: 0b 29 07 00 00             ; CALL DICT>FLAGS (0729)
0ca6: 0f                         ; CFETCH
0ca7: 06                         ; DUP
0ca8: 07 09 2c 20 46 6c 61 67 73 3a 20 00 ; SLITERAL (0ca9) [, Flags: ]
0cb4: 0b b8 05 00 00             ; CALL CT (05b8)
0cb9: 0b 87 0a 00 00             ; CALL HEX.2 (0a87)
0cbe: 06                         ; DUP
0cbf: 0b bc 07 00 00             ; CALL FLAGS.ISINLINE? (07bc)
0cc4: 09 da 0c 00 00             ; JMPZ 0cda
0cc9: 07 09 20 28 49 4e 4c 49 4e 45 29 00 ; SLITERAL (0cca) [ (INLINE)]
0cd5: 0b b8 05 00 00             ; CALL CT (05b8)
0cda: 0b b3 07 00 00             ; CALL FLAGS.ISIMMEDIATE? (07b3)
0cdf: 09 f8 0c 00 00             ; JMPZ 0cf8
0ce4: 07 0c 20 28 49 4d 4d 45 44 49 41 54 45 29 00 ; SLITERAL (0ce5) [ (IMMEDIATE)]
0cf3: 0b b8 05 00 00             ; CALL CT (05b8)
0cf8: 0e 0d                      ; CLITERAL 13
0cfa: 19                         ; EMIT
0cfb: 0e 0a                      ; CLITERAL 10
0cfd: 19                         ; EMIT
0cfe: 02                         ; FETCH
0cff: 0c                         ; RET
;
0d00: 18 68 f2 00 00             ; DICTP WORDSV (f268)
0d05: 0b fd 0b 00 00             ; CALL .(LAST) (0bfd)
0d0a: 0e 0d                      ; CLITERAL 13
0d0c: 19                         ; EMIT
0d0d: 0e 0a                      ; CLITERAL 10
0d0f: 19                         ; EMIT
0d10: 0b eb 00 00 00             ; CALL LAST (00eb)
0d15: 06                         ; DUP
0d16: 02                         ; FETCH
0d17: 0e 00                      ; CLITERAL 0
0d19: 16                         ; EQ
0d1a: 09 27 0d 00 00             ; JMPZ 0d27
0d1f: 05                         ; DROP
0d20: 0e 0d                      ; CLITERAL 13
0d22: 19                         ; EMIT
0d23: 0e 0a                      ; CLITERAL 10
0d25: 19                         ; EMIT
0d26: 0c                         ; RET
0d27: 0b 70 0c 00 00             ; CALL .WORD-LONG (0c70)
0d2c: 08 15 0d 00 00             ; JMP 0d15
0d31: 0c                         ; RET
;
0d32: 18 54 f2 00 00             ; DICTP NUM-WORDS (f254)
0d37: 0e 00                      ; CLITERAL 0
0d39: 21                         ; DTOR
0d3a: 0b eb 00 00 00             ; CALL LAST (00eb)
0d3f: 06                         ; DUP
0d40: 02                         ; FETCH
0d41: 0e 00                      ; CLITERAL 0
0d43: 16                         ; EQ
0d44: 09 52 0d 00 00             ; JMPZ 0d52
0d49: 05                         ; DROP
0d4a: 22                         ; RTOD
0d4b: 0e 0d                      ; CLITERAL 13
0d4d: 19                         ; EMIT
0d4e: 0e 0a                      ; CLITERAL 10
0d50: 19                         ; EMIT
0d51: 0c                         ; RET
0d52: 22                         ; RTOD
0d53: 2c                         ; INC
0d54: 21                         ; DTOR
0d55: 02                         ; FETCH
0d56: 08 3f 0d 00 00             ; JMP 0d3f
0d5b: 0c                         ; RET
;
0d5c: 18 43 f2 00 00             ; DICTP .lastx (f243)
0d61: 0e 0d                      ; CLITERAL 13
0d63: 19                         ; EMIT
0d64: 0e 0a                      ; CLITERAL 10
0d66: 19                         ; EMIT
0d67: 0b eb 00 00 00             ; CALL LAST (00eb)
0d6c: 04                         ; SWAP
0d6d: 04                         ; SWAP
0d6e: 0b 70 0c 00 00             ; CALL .WORD-LONG (0c70)
0d73: 04                         ; SWAP
0d74: 2e                         ; DEC
0d75: 06                         ; DUP
0d76: 0a 6d 0d 00 00             ; JMPNZ 0d6d
0d7b: 05                         ; DROP
0d7c: 05                         ; DROP
0d7d: 0c                         ; RET
;
0d7e: 18 31 f2 00 00             ; DICTP EXECUTE (f231)
0d83: 22                         ; RTOD
0d84: 05                         ; DROP
0d85: 21                         ; DTOR
0d86: 0c                         ; RET
;
0d87: 18 1e f2 00 00             ; DICTP find.ret (f21e)
0d8c: 06                         ; DUP
0d8d: 0f                         ; CFETCH
0d8e: 0e 0c                      ; CLITERAL 12
0d90: 16                         ; EQ
0d91: 09 97 0d 00 00             ; JMPZ 0d97
0d96: 0c                         ; RET
0d97: 2c                         ; INC
0d98: 08 8c 0d 00 00             ; JMP 0d8c
0d9d: 0c                         ; RET
;
0d9e: 18 0b f2 00 00             ; DICTP (inline) (f20b)
0da3: 1a                         ; OVER
0da4: 1a                         ; OVER
0da5: 15                         ; LT
0da6: 09 ac 0d 00 00             ; JMPZ 0dac
0dab: 04                         ; SWAP
0dac: 06                         ; DUP
0dad: 0f                         ; CFETCH
0dae: 0b f7 00 00 00             ; CALL C, (00f7)
0db3: 2c                         ; INC
0db4: 1a                         ; OVER
0db5: 1a                         ; OVER
0db6: 17                         ; GT
0db7: 0a ac 0d 00 00             ; JMPNZ 0dac
0dbc: 05                         ; DROP
0dbd: 05                         ; DROP
0dbe: 0c                         ; RET
;
0dbf: 18 fb f1 00 00             ; DICTP DOES> (f1fb)
0dc4: 22                         ; RTOD
0dc5: 06                         ; DUP
0dc6: 0b 87 0d 00 00             ; CALL find.ret (0d87)
0dcb: 06                         ; DUP
0dcc: 21                         ; DTOR
0dcd: 2c                         ; INC
0dce: 0b 9e 0d 00 00             ; CALL (inline) (0d9e)
0dd3: 0c                         ; RET
;
0dd4: 18 e5 f1 00 00             ; DICTP Copy.INLINE (f1e5)
0dd9: 06                         ; DUP
0dda: 0f                         ; CFETCH
0ddb: 0e 18                      ; CLITERAL 24
0ddd: 16                         ; EQ
0dde: 09 ea 0d 00 00             ; JMPZ 0dea
0de3: 2c                         ; INC
0de4: 0b d7 00 00 00             ; CALL CELL (00d7)
0de9: 11                         ; ADD
0dea: 06                         ; DUP
0deb: 0b 87 0d 00 00             ; CALL find.ret (0d87)
0df0: 0b 9e 0d 00 00             ; CALL (inline) (0d9e)
0df5: 0c                         ; RET
;
0df6: 18 d4 f1 00 00             ; DICTP strlen (f1d4)
0dfb: 0e 00                      ; CLITERAL 0
0dfd: 04                         ; SWAP
0dfe: 04                         ; SWAP
0dff: 1a                         ; OVER
0e00: 0f                         ; CFETCH
0e01: 06                         ; DUP
0e02: 09 0d 0e 00 00             ; JMPZ 0e0d
0e07: 05                         ; DROP
0e08: 2c                         ; INC
0e09: 04                         ; SWAP
0e0a: 2c                         ; INC
0e0b: 0e 01                      ; CLITERAL 1
0e0d: 0a fe 0d 00 00             ; JMPNZ 0dfe
0e12: 04                         ; SWAP
0e13: 05                         ; DROP
0e14: 0c                         ; RET
;
0e15: 18 c4 f1 00 00             ; DICTP cstr, (f1c4)
0e1a: 06                         ; DUP
0e1b: 0f                         ; CFETCH
0e1c: 1a                         ; OVER
0e1d: 11                         ; ADD
0e1e: 2c                         ; INC
0e1f: 2c                         ; INC
0e20: 0b 9e 0d 00 00             ; CALL (inline) (0d9e)
0e25: 0c                         ; RET
;
0e26: 18 b0 f1 00 00             ; DICTP [COMPILE] (f1b0)
0e2b: 0b bc 07 00 00             ; CALL FLAGS.ISINLINE? (07bc)
0e30: 09 3f 0e 00 00             ; JMPZ 0e3f
0e35: 0b d4 0d 00 00             ; CALL Copy.INLINE (0dd4)
0e3a: 08 49 0e 00 00             ; JMP 0e49
0e3f: 0b ae 01 00 00             ; CALL CALL (01ae)
0e44: 0b 11 01 00 00             ; CALL , (0111)
0e49: 0c                         ; RET
;
0e4a: 18 9a f1 00 00             ; DICTP executeWord (f19a)
0e4f: 21                         ; DTOR
0e50: 22                         ; RTOD
0e51: 06                         ; DUP
0e52: 21                         ; DTOR
0e53: 0b e5 07 00 00             ; CALL findInDict (07e5)
0e58: 09 94 0e 00 00             ; JMPZ 0e94
0e5d: 22                         ; RTOD
0e5e: 05                         ; DROP
0e5f: 0b 75 03 00 00             ; CALL ?COMPILING (0375)
0e64: 09 89 0e 00 00             ; JMPZ 0e89
0e69: 06                         ; DUP
0e6a: 0b b3 07 00 00             ; CALL FLAGS.ISIMMEDIATE? (07b3)
0e6f: 09 7f 0e 00 00             ; JMPZ 0e7f
0e74: 05                         ; DROP
0e75: 0b 7e 0d 00 00             ; CALL EXECUTE (0d7e)
0e7a: 08 84 0e 00 00             ; JMP 0e84
0e7f: 0b 26 0e 00 00             ; CALL [COMPILE] (0e26)
0e84: 08 8f 0e 00 00             ; JMP 0e8f
0e89: 05                         ; DROP
0e8a: 0b 7e 0d 00 00             ; CALL EXECUTE (0d7e)
0e8f: 08 ea 0e 00 00             ; JMP 0eea
0e94: 05                         ; DROP
0e95: 05                         ; DROP
0e96: 22                         ; RTOD
0e97: 06                         ; DUP
0e98: 21                         ; DTOR
0e99: 0b ac 08 00 00             ; CALL isNumber? (08ac)
0e9e: 09 dc 0e 00 00             ; JMPZ 0edc
0ea3: 0b 75 03 00 00             ; CALL ?COMPILING (0375)
0ea8: 09 d7 0e 00 00             ; JMPZ 0ed7
0ead: 06                         ; DUP
0eae: 0e 00                      ; CLITERAL 0
0eb0: 0e ff                      ; CLITERAL 255
0eb2: 0b 42 06 00 00             ; CALL BETWEEN (0642)
0eb7: 09 cd 0e 00 00             ; JMPZ 0ecd
0ebc: 0e 0e                      ; CLITERAL 14
0ebe: 0b f7 00 00 00             ; CALL C, (00f7)
0ec3: 0b f7 00 00 00             ; CALL C, (00f7)
0ec8: 08 d7 0e 00 00             ; JMP 0ed7
0ecd: 0b 4a 01 00 00             ; CALL LITERAL (014a)
0ed2: 0b 11 01 00 00             ; CALL , (0111)
0ed7: 08 e8 0e 00 00             ; JMP 0ee8
0edc: 05                         ; DROP
0edd: 07 02 3f 3f 00             ; SLITERAL (0ede) [??]
0ee2: 0b b8 05 00 00             ; CALL CT (05b8)
0ee7: fe                         ; RESET
0ee8: 22                         ; RTOD
0ee9: 05                         ; DROP
0eea: 0c                         ; RET
;
0eeb: 18 83 f1 00 00             ; DICTP executeInput (f183)
0ef0: 0b 8b 00 00 00             ; CALL >IN (008b)
0ef5: 02                         ; FETCH
0ef6: 0b b6 06 00 00             ; CALL skipWS (06b6)
0efb: 0b 8b 00 00 00             ; CALL >IN (008b)
0f00: 03                         ; STORE
0f01: 0b 8b 00 00 00             ; CALL >IN (008b)
0f06: 02                         ; FETCH
0f07: 0f                         ; CFETCH
0f08: 09 28 0f 00 00             ; JMPZ 0f28
0f0d: 0b 8b 00 00 00             ; CALL >IN (008b)
0f12: 02                         ; FETCH
0f13: 0b df 06 00 00             ; CALL getOneWord (06df)
0f18: 0b 8b 00 00 00             ; CALL >IN (008b)
0f1d: 03                         ; STORE
0f1e: 0b 4a 0e 00 00             ; CALL executeWord (0e4a)
0f23: 08 29 0f 00 00             ; JMP 0f29
0f28: 0c                         ; RET
0f29: 08 f0 0e 00 00             ; JMP 0ef0
0f2e: 0c                         ; RET
;
0f2f: 18 75 f1 00 00             ; DICTP Pad (f175)
0f34: 0b eb 00 00 00             ; CALL LAST (00eb)
0f39: 0e c8                      ; CLITERAL 200
0f3b: 12                         ; SUB
0f3c: 06                         ; DUP
0f3d: 0b df 00 00 00             ; CALL HERE (00df)
0f42: 15                         ; LT
0f43: 09 5a 0f 00 00             ; JMPZ 0f5a
0f48: 07 0e 4f 75 74 20 6f 66 20 4d 65 6d 6f 72 79 21 00 ; SLITERAL (0f49) [Out of Memory!]
0f59: fe                         ; RESET
0f5a: 0c                         ; RET
;
0f5b: 18 5a f1 00 00             ; DICTP LoadingFromFile? (f15a)
0f60: 0b c7 00 00 00             ; CALL INPUT-FP (00c7)
0f65: 02                         ; FETCH
0f66: 0c                         ; RET
;
0f67: 18 40 f1 00 00             ; DICTP getLineFromFile (f140)
0f6c: 0e c8                      ; CLITERAL 200
0f6e: 0b c7 00 00 00             ; CALL INPUT-FP (00c7)
0f73: 02                         ; FETCH
0f74: 1e                         ; FREADLINE
0f75: 0e 00                      ; CLITERAL 0
0f77: 16                         ; EQ
0f78: 09 87 0f 00 00             ; JMPZ 0f87
0f7d: 0b c7 00 00 00             ; CALL INPUT-FP (00c7)
0f82: 0b 6b 03 00 00             ; CALL OFF (036b)
0f87: 0c                         ; RET
;
0f88: 18 2e f1 00 00             ; DICTP getLine (f12e)
0f8d: 0e 00                      ; CLITERAL 0
0f8f: 0b 2f 0f 00 00             ; CALL Pad (0f2f)
0f94: 06                         ; DUP
0f95: 2c                         ; INC
0f96: 0b 8b 00 00 00             ; CALL >IN (008b)
0f9b: 03                         ; STORE
0f9c: 10                         ; CSTORE
0f9d: 0b 5b 0f 00 00             ; CALL LoadingFromFile? (0f5b)
0fa2: 09 b2 0f 00 00             ; JMPZ 0fb2
0fa7: 0b 2f 0f 00 00             ; CALL Pad (0f2f)
0fac: 0b 67 0f 00 00             ; CALL getLineFromFile (0f67)
0fb1: 0c                         ; RET
0fb2: 0e 00                      ; CLITERAL 0
0fb4: 0b 8b 00 00 00             ; CALL >IN (008b)
0fb9: 02                         ; FETCH
0fba: 10                         ; CSTORE
0fbb: 27                         ; GETCH
0fbc: 06                         ; DUP
0fbd: 0e 0d                      ; CLITERAL 13
0fbf: 16                         ; EQ
0fc0: 09 cf 0f 00 00             ; JMPZ 0fcf
0fc5: 05                         ; DROP
0fc6: 0b 2f 0f 00 00             ; CALL Pad (0f2f)
0fcb: 0e 20                      ; CLITERAL 32
0fcd: 19                         ; EMIT
0fce: 0c                         ; RET
0fcf: 06                         ; DUP
0fd0: 0e 09                      ; CLITERAL 9
0fd2: 16                         ; EQ
0fd3: 09 db 0f 00 00             ; JMPZ 0fdb
0fd8: 05                         ; DROP
0fd9: 0e 20                      ; CLITERAL 32
0fdb: 06                         ; DUP
0fdc: 0e 03                      ; CLITERAL 3
0fde: 16                         ; EQ
0fdf: 09 e5 0f 00 00             ; JMPZ 0fe5
0fe4: ff                         ; BYE
0fe5: 06                         ; DUP
0fe6: 0e 08                      ; CLITERAL 8
0fe8: 16                         ; EQ
0fe9: 09 21 10 00 00             ; JMPZ 1021
0fee: 0b 2f 0f 00 00             ; CALL Pad (0f2f)
0ff3: 0f                         ; CFETCH
0ff4: 0e 00                      ; CLITERAL 0
0ff6: 17                         ; GT
0ff7: 09 1b 10 00 00             ; JMPZ 101b
0ffc: 0b 2f 0f 00 00             ; CALL Pad (0f2f)
1001: 0b 2b 05 00 00             ; CALL C-- (052b)
1006: 0b 8b 00 00 00             ; CALL >IN (008b)
100b: 0b 13 05 00 00             ; CALL -- (0513)
1010: 06                         ; DUP
1011: 19                         ; EMIT
1012: 0e 20                      ; CLITERAL 32
1014: 19                         ; EMIT
1015: 19                         ; EMIT
1016: 08 1c 10 00 00             ; JMP 101c
101b: 05                         ; DROP
101c: 08 53 10 00 00             ; JMP 1053
1021: 06                         ; DUP
1022: 0e 20                      ; CLITERAL 32
1024: 0e 7f                      ; CLITERAL 127
1026: 0b 42 06 00 00             ; CALL BETWEEN (0642)
102b: 09 52 10 00 00             ; JMPZ 1052
1030: 06                         ; DUP
1031: 19                         ; EMIT
1032: 0b 8b 00 00 00             ; CALL >IN (008b)
1037: 02                         ; FETCH
1038: 10                         ; CSTORE
1039: 0b 8b 00 00 00             ; CALL >IN (008b)
103e: 0b 06 05 00 00             ; CALL ++ (0506)
1043: 0b 2f 0f 00 00             ; CALL Pad (0f2f)
1048: 0b 20 05 00 00             ; CALL C++ (0520)
104d: 08 53 10 00 00             ; JMP 1053
1052: 05                         ; DROP
1053: 08 b2 0f 00 00             ; JMP 0fb2
1058: 0c                         ; RET
;
1059: 18 1b f1 00 00             ; DICTP strcpy2c (f11b)
105e: 06                         ; DUP
105f: 21                         ; DTOR
1060: 0e 00                      ; CLITERAL 0
1062: 1a                         ; OVER
1063: 10                         ; CSTORE
1064: 2c                         ; INC
1065: 04                         ; SWAP
1066: 06                         ; DUP
1067: 0f                         ; CFETCH
1068: 06                         ; DUP
1069: 09 83 10 00 00             ; JMPZ 1083
106e: 0e 02                      ; CLITERAL 2
1070: 25                         ; PICK
1071: 10                         ; CSTORE
1072: 04                         ; SWAP
1073: 2c                         ; INC
1074: 04                         ; SWAP
1075: 2c                         ; INC
1076: 22                         ; RTOD
1077: 06                         ; DUP
1078: 21                         ; DTOR
1079: 0b 20 05 00 00             ; CALL C++ (0520)
107e: 08 8c 10 00 00             ; JMP 108c
1083: 21                         ; DTOR
1084: 04                         ; SWAP
1085: 22                         ; RTOD
1086: 04                         ; SWAP
1087: 10                         ; CSTORE
1088: 05                         ; DROP
1089: 22                         ; RTOD
108a: 05                         ; DROP
108b: 0c                         ; RET
108c: 08 66 10 00 00             ; JMP 1066
1091: 0c                         ; RET
;
1092: 18 05 f1 00 00             ; DICTP Define-Word (f105)
1097: 0b eb 00 00 00             ; CALL LAST (00eb)
109c: 1a                         ; OVER
109d: 0b f6 0d 00 00             ; CALL strlen (0df6)
10a2: 0e 02                      ; CLITERAL 2
10a4: 0b d7 00 00 00             ; CALL CELL (00d7)
10a9: 13                         ; MUL
10aa: 0e 03                      ; CLITERAL 3
10ac: 11                         ; ADD
10ad: 11                         ; ADD
10ae: 12                         ; SUB
10af: 06                         ; DUP
10b0: 21                         ; DTOR
10b1: 21                         ; DTOR
10b2: 0b eb 00 00 00             ; CALL LAST (00eb)
10b7: 22                         ; RTOD
10b8: 06                         ; DUP
10b9: 21                         ; DTOR
10ba: 03                         ; STORE
10bb: 22                         ; RTOD
10bc: 0b d7 00 00 00             ; CALL CELL (00d7)
10c1: 11                         ; ADD
10c2: 21                         ; DTOR
10c3: 0b df 00 00 00             ; CALL HERE (00df)
10c8: 22                         ; RTOD
10c9: 06                         ; DUP
10ca: 21                         ; DTOR
10cb: 03                         ; STORE
10cc: 22                         ; RTOD
10cd: 0b d7 00 00 00             ; CALL CELL (00d7)
10d2: 11                         ; ADD
10d3: 21                         ; DTOR
10d4: 0e 00                      ; CLITERAL 0
10d6: 22                         ; RTOD
10d7: 06                         ; DUP
10d8: 21                         ; DTOR
10d9: 10                         ; CSTORE
10da: 22                         ; RTOD
10db: 2c                         ; INC
10dc: 21                         ; DTOR
10dd: 22                         ; RTOD
10de: 0b 59 10 00 00             ; CALL strcpy2c (1059)
10e3: 22                         ; RTOD
10e4: 0b 4f 00 00 00             ; CALL (LAST) (004f)
10e9: 03                         ; STORE
10ea: 0c                         ; RET
;
10eb: 18 ef f0 00 00             ; DICTP CREATE-NAME (f0ef)
10f0: 0b 8b 00 00 00             ; CALL >IN (008b)
10f5: 02                         ; FETCH
10f6: 0b b6 06 00 00             ; CALL skipWS (06b6)
10fb: 0b 8b 00 00 00             ; CALL >IN (008b)
1100: 03                         ; STORE
1101: 0b 8b 00 00 00             ; CALL >IN (008b)
1106: 02                         ; FETCH
1107: 0f                         ; CFETCH
1108: 09 42 11 00 00             ; JMPZ 1142
110d: 0b 8b 00 00 00             ; CALL >IN (008b)
1112: 02                         ; FETCH
1113: 0b df 06 00 00             ; CALL getOneWord (06df)
1118: 0b 8b 00 00 00             ; CALL >IN (008b)
111d: 03                         ; STORE
111e: 06                         ; DUP
111f: 0f                         ; CFETCH
1120: 09 40 11 00 00             ; JMPZ 1140
1125: 0b 92 10 00 00             ; CALL Define-Word (1092)
112a: 0e 18                      ; CLITERAL 24
112c: 0b f7 00 00 00             ; CALL C, (00f7)
1131: 0b eb 00 00 00             ; CALL LAST (00eb)
1136: 0b 11 01 00 00             ; CALL , (0111)
113b: 08 42 11 00 00             ; JMP 1142
1140: 05                         ; DROP
1141: fe                         ; RESET
1142: 0c                         ; RET
;
1143: 18 e3 f0 00 00             ; DICTP : (f0e3)
1148: 0b eb 10 00 00             ; CALL CREATE-NAME (10eb)
114d: 0b 6d 00 00 00             ; CALL STATE (006d)
1152: 0b 61 03 00 00             ; CALL ON (0361)
1157: 0c                         ; RET
;
1158: 18 d1 f0 00 00             ; DICTP :NONAME (f0d1)
115d: 0b df 00 00 00             ; CALL HERE (00df)
1162: 0b 6d 00 00 00             ; CALL STATE (006d)
1167: 0b 61 03 00 00             ; CALL ON (0361)
116c: 0c                         ; RET
;
116d: 18 c5 f0 00 00             ; DICTP ; (f0c5)
1172: 0b bb 01 00 00             ; CALL RET (01bb)
1177: 0b 6d 00 00 00             ; CALL STATE (006d)
117c: 0b 6b 03 00 00             ; CALL OFF (036b)
1181: 0c                         ; RET
;
1182: 18 b0 f0 00 00             ; DICTP ForgetLast (f0b0)
1187: 0b eb 00 00 00             ; CALL LAST (00eb)
118c: 0b d7 00 00 00             ; CALL CELL (00d7)
1191: 11                         ; ADD
1192: 02                         ; FETCH
1193: 0b 40 00 00 00             ; CALL (HERE) (0040)
1198: 03                         ; STORE
1199: 0b eb 00 00 00             ; CALL LAST (00eb)
119e: 02                         ; FETCH
119f: 0b 4f 00 00 00             ; CALL (LAST) (004f)
11a4: 03                         ; STORE
11a5: 0c                         ; RET
;
11a6: 18 9b f0 00 00             ; DICTP resetState (f09b)
11ab: 0b 75 03 00 00             ; CALL ?COMPILING (0375)
11b0: 09 ba 11 00 00             ; JMPZ 11ba
11b5: 0b 82 11 00 00             ; CALL ForgetLast (1182)
11ba: 0b 6d 00 00 00             ; CALL STATE (006d)
11bf: 0b 6b 03 00 00             ; CALL OFF (036b)
11c4: 0b 37 03 00 00             ; CALL DECIMAL (0337)
11c9: 0c                         ; RET
;
11ca: 18 8b f0 00 00             ; DICTP ALLOT (f08b)
11cf: 0b df 00 00 00             ; CALL HERE (00df)
11d4: 11                         ; ADD
11d5: 0b 40 00 00 00             ; CALL (HERE) (0040)
11da: 03                         ; STORE
11db: 0c                         ; RET
;
11dc: 18 7f f0 00 00             ; DICTP ? (f07f)
11e1: 02                         ; FETCH
11e2: 0b ee 09 00 00             ; CALL . (09ee)
11e7: 0c                         ; RET
;
11e8: 18 72 f0 00 00             ; DICTP C? (f072)
11ed: 0f                         ; CFETCH
11ee: 0b ee 09 00 00             ; CALL . (09ee)
11f3: 0c                         ; RET
;
11f4: 18 63 f0 00 00             ; DICTP FREE (f063)
11f9: 0b eb 00 00 00             ; CALL LAST (00eb)
11fe: 0b df 00 00 00             ; CALL HERE (00df)
1203: 12                         ; SUB
1204: 0c                         ; RET
;
1205: 18 53 f0 00 00             ; DICTP .FREE (f053)
120a: 0b f4 11 00 00             ; CALL FREE (11f4)
120f: 0b d4 09 00 00             ; CALL (.) (09d4)
1214: 07 0c 20 62 79 74 65 73 20 66 72 65 65 2e 00 ; SLITERAL (1215) [ bytes free.]
1223: 0b b8 05 00 00             ; CALL CT (05b8)
1228: 0c                         ; RET
;
1229: 18 40 f0 00 00             ; DICTP mainLoop (f040)
122e: 0b a6 11 00 00             ; CALL resetState (11a6)
1233: 0b 5a 06 00 00             ; CALL tmp-init (065a)
1238: 0b 75 03 00 00             ; CALL ?COMPILING (0375)
123d: 0e 00                      ; CLITERAL 0
123f: 16                         ; EQ
1240: 09 55 12 00 00             ; JMPZ 1255
1245: 07 03 20 4f 4b 00          ; SLITERAL (1246) [ OK]
124b: 0b b8 05 00 00             ; CALL CT (05b8)
1250: 0b 1b 0b 00 00             ; CALL .S (0b1b)
1255: 0e 0d                      ; CLITERAL 13
1257: 19                         ; EMIT
1258: 0e 0a                      ; CLITERAL 10
125a: 19                         ; EMIT
125b: 0b 88 0f 00 00             ; CALL getLine (0f88)
1260: 2c                         ; INC
1261: 0b 8b 00 00 00             ; CALL >IN (008b)
1266: 03                         ; STORE
1267: 0b eb 0e 00 00             ; CALL executeInput (0eeb)
126c: 0e 20                      ; CLITERAL 32
126e: 19                         ; EMIT
126f: 08 33 12 00 00             ; JMP 1233
1274: 0c                         ; RET
;
1275: 18 31 f0 00 00             ; DICTP main (f031)
127a: 0b 6d 00 00 00             ; CALL STATE (006d)
127f: 02                         ; FETCH
1280: 0e 63                      ; CLITERAL 99
1282: 16                         ; EQ
1283: 09 a0 12 00 00             ; JMPZ 12a0
1288: 0b 6d 00 00 00             ; CALL STATE (006d)
128d: 0b 6b 03 00 00             ; CALL OFF (036b)
1292: 07 06 48 65 6c 6c 6f 2e 00 ; SLITERAL (1293) [Hello.]
129b: 0b b8 05 00 00             ; CALL CT (05b8)
12a0: 0b 29 12 00 00             ; CALL mainLoop (1229)
12a5: 0c                         ; RET
;
12a6: 18 1a f0 00 00             ; DICTP file-getLine (f01a)
12ab: 0b 2f 0f 00 00             ; CALL Pad (0f2f)
12b0: 04                         ; SWAP
12b1: 0e c8                      ; CLITERAL 200
12b3: 04                         ; SWAP
12b4: 1e                         ; FREADLINE
12b5: 0b 2f 0f 00 00             ; CALL Pad (0f2f)
12ba: 04                         ; SWAP
12bb: 0c                         ; RET
;
12bc: 18 0b f0 00 00             ; DICTP load (f00b)
12c1: 0e 00                      ; CLITERAL 0
12c3: 0e 00                      ; CLITERAL 0
12c5: 1c                         ; FOPEN
12c6: 0e 00                      ; CLITERAL 0
12c8: 16                         ; EQ
12c9: 09 e8 12 00 00             ; JMPZ 12e8
12ce: 07 11 43 61 6e 6e 6f 74 20 6f 70 65 6e 20 66 69 6c 65 2e 00 ; SLITERAL (12cf) [Cannot open file.]
12e2: 0b b8 05 00 00             ; CALL CT (05b8)
12e7: 0c                         ; RET
12e8: 0b c7 00 00 00             ; CALL INPUT-FP (00c7)
12ed: 03                         ; STORE
12ee: 0b c7 00 00 00             ; CALL INPUT-FP (00c7)
12f3: 02                         ; FETCH
12f4: 0b a6 12 00 00             ; CALL file-getLine (12a6)
12f9: 09 0f 13 00 00             ; JMPZ 130f
12fe: 2c                         ; INC
12ff: 0b 8b 00 00 00             ; CALL >IN (008b)
1304: 03                         ; STORE
1305: 0b eb 0e 00 00             ; CALL executeInput (0eeb)
130a: 08 22 13 00 00             ; JMP 1322
130f: 05                         ; DROP
1310: 0b c7 00 00 00             ; CALL INPUT-FP (00c7)
1315: 02                         ; FETCH
1316: 20                         ; FCLOSE
1317: 0b c7 00 00 00             ; CALL INPUT-FP (00c7)
131c: 0b 6b 03 00 00             ; CALL OFF (036b)
1321: 0c                         ; RET
1322: 08 ee 12 00 00             ; JMP 12ee
1327: 0c                         ; RET
;
1328: 18 f7 ef 00 00             ; DICTP STR.EMPTY (eff7)
132d: 0e 00                      ; CLITERAL 0
132f: 1a                         ; OVER
1330: 03                         ; STORE
1331: 0c                         ; RET
;
1332: 18 e5 ef 00 00             ; DICTP STR.LEN (efe5)
1337: 06                         ; DUP
1338: 0f                         ; CFETCH
1339: 0c                         ; RET
;
133a: 18 d2 ef 00 00             ; DICTP STR.CATC (efd2)
133f: 1a                         ; OVER
1340: 06                         ; DUP
1341: 0b 20 05 00 00             ; CALL C++ (0520)
1346: 06                         ; DUP
1347: 0f                         ; CFETCH
1348: 11                         ; ADD
1349: 0e 00                      ; CLITERAL 0
134b: 1a                         ; OVER
134c: 2c                         ; INC
134d: 10                         ; CSTORE
134e: 10                         ; CSTORE
134f: 0c                         ; RET
;
1350: 18 bb ef 00 00             ; DICTP STR.NULLTERM (efbb)
1355: 06                         ; DUP
1356: 06                         ; DUP
1357: 0f                         ; CFETCH
1358: 11                         ; ADD
1359: 2c                         ; INC
135a: 0e 00                      ; CLITERAL 0
135c: 04                         ; SWAP
135d: 10                         ; CSTORE
135e: 0c                         ; RET
;
135f: 18 ae ef 00 00             ; DICTP I" (efae)
1364: 0b df 00 00 00             ; CALL HERE (00df)
1369: 0e 64                      ; CLITERAL 100
136b: 11                         ; ADD
136c: 0e 00                      ; CLITERAL 0
136e: 1a                         ; OVER
136f: 03                         ; STORE
1370: 0b 8b 00 00 00             ; CALL >IN (008b)
1375: 02                         ; FETCH
1376: 0f                         ; CFETCH
1377: 06                         ; DUP
1378: 0e 00                      ; CLITERAL 0
137a: 16                         ; EQ
137b: 09 9c 13 00 00             ; JMPZ 139c
1380: 07 10 6d 69 73 73 69 6e 67 20 63 6c 6f 73 69 6e 67 20 00 ; SLITERAL (1381) [missing closing ]
1393: 0b b8 05 00 00             ; CALL CT (05b8)
1398: 0e 22                      ; CLITERAL 34
139a: 19                         ; EMIT
139b: fe                         ; RESET
139c: 0b 8b 00 00 00             ; CALL >IN (008b)
13a1: 0b 06 05 00 00             ; CALL ++ (0506)
13a6: 06                         ; DUP
13a7: 0e 22                      ; CLITERAL 34
13a9: 16                         ; EQ
13aa: 09 b1 13 00 00             ; JMPZ 13b1
13af: 05                         ; DROP
13b0: 0c                         ; RET
13b1: 0b 3a 13 00 00             ; CALL STR.CATC (133a)
13b6: 08 70 13 00 00             ; JMP 1370
13bb: 0c                         ; RET
;
13bc: 18 a2 ef 00 00             ; DICTP " (efa2)
13c1: 0b 75 03 00 00             ; CALL ?COMPILING (0375)
13c6: 0e 00                      ; CLITERAL 0
13c8: 16                         ; EQ
13c9: 09 d4 13 00 00             ; JMPZ 13d4
13ce: 0b 5f 13 00 00             ; CALL I" (135f)
13d3: 0c                         ; RET
13d4: 0b 7a 01 00 00             ; CALL SLITERAL (017a)
13d9: 0b df 00 00 00             ; CALL HERE (00df)
13de: 0e 00                      ; CLITERAL 0
13e0: 0b f7 00 00 00             ; CALL C, (00f7)
13e5: 0b 8b 00 00 00             ; CALL >IN (008b)
13ea: 02                         ; FETCH
13eb: 0f                         ; CFETCH
13ec: 06                         ; DUP
13ed: 0e 00                      ; CLITERAL 0
13ef: 16                         ; EQ
13f0: 09 1d 14 00 00             ; JMPZ 141d
13f5: 05                         ; DROP
13f6: 2e                         ; DEC
13f7: 0b 40 00 00 00             ; CALL (HERE) (0040)
13fc: 03                         ; STORE
13fd: 07 11 6d 69 73 73 69 6e 67 20 63 6c 6f 73 69 6e 67 20 27 00 ; SLITERAL (13fe) [missing closing ']
1411: 0b b8 05 00 00             ; CALL CT (05b8)
1416: 0e 22                      ; CLITERAL 34
1418: 19                         ; EMIT
1419: 0e 27                      ; CLITERAL 39
141b: 19                         ; EMIT
141c: fe                         ; RESET
141d: 0b 8b 00 00 00             ; CALL >IN (008b)
1422: 0b 06 05 00 00             ; CALL ++ (0506)
1427: 06                         ; DUP
1428: 0e 22                      ; CLITERAL 34
142a: 16                         ; EQ
142b: 09 43 14 00 00             ; JMPZ 1443
1430: 05                         ; DROP
1431: 0b df 00 00 00             ; CALL HERE (00df)
1436: 0e 00                      ; CLITERAL 0
1438: 0b f7 00 00 00             ; CALL C, (00f7)
143d: 1a                         ; OVER
143e: 12                         ; SUB
143f: 2e                         ; DEC
1440: 04                         ; SWAP
1441: 10                         ; CSTORE
1442: 0c                         ; RET
1443: 0b f7 00 00 00             ; CALL C, (00f7)
1448: 08 e5 13 00 00             ; JMP 13e5
144d: 0c                         ; RET
;
144e: 18 95 ef 00 00             ; DICTP ll (ef95)
1453: 07 09 6c 6f 61 64 73 2e 34 74 68 00 ; SLITERAL (1454) [loads.4th]
145f: 0b bc 12 00 00             ; CALL load (12bc)
1464: 0c                         ; RET
;
1465: 18 82 ef 00 00             ; DICTP sys-info (ef82)
146a: 0b 8d 0b 00 00             ; CALL .(MEM_SZ) (0b8d)
146f: 0e 2c                      ; CLITERAL 44
1471: 19                         ; EMIT
1472: 0e 20                      ; CLITERAL 32
1474: 19                         ; EMIT
1475: 0b c6 0b 00 00             ; CALL .(HERE) (0bc6)
147a: 0e 2c                      ; CLITERAL 44
147c: 19                         ; EMIT
147d: 0e 20                      ; CLITERAL 32
147f: 19                         ; EMIT
1480: 0b fd 0b 00 00             ; CALL .(LAST) (0bfd)
1485: 0e 2c                      ; CLITERAL 44
1487: 19                         ; EMIT
1488: 0e 20                      ; CLITERAL 32
148a: 19                         ; EMIT
148b: 0b 05 12 00 00             ; CALL .FREE (1205)
1490: 0e 0d                      ; CLITERAL 13
1492: 19                         ; EMIT
1493: 0e 0a                      ; CLITERAL 10
1495: 19                         ; EMIT
1496: 0c                         ; RET
;
1497: 18 70 ef 00 00             ; DICTP countTo (ef70)
149c: 07 0c 63 6f 75 6e 74 69 6e 67 20 74 6f 20 00 ; SLITERAL (149d) [counting to ]
14ab: 0b b8 05 00 00             ; CALL CT (05b8)
14b0: 06                         ; DUP
14b1: 0b ee 09 00 00             ; CALL . (09ee)
14b6: 07 04 2e 2e 2e 20 00       ; SLITERAL (14b7) [... ]
14bd: 0b b8 05 00 00             ; CALL CT (05b8)
14c2: 0e 01                      ; CLITERAL 1
14c4: 1a                         ; OVER
14c5: 1a                         ; OVER
14c6: 15                         ; LT
14c7: 09 cf 14 00 00             ; JMPZ 14cf
14cc: 05                         ; DROP
14cd: 05                         ; DROP
14ce: 0c                         ; RET
14cf: 2c                         ; INC
14d0: 08 c4 14 00 00             ; JMP 14c4
14d5: 0c                         ; RET
;
14d6: 18 59 ef 00 00             ; DICTP countTo-FAST (ef59)
14db: 07 0c 63 6f 75 6e 74 69 6e 67 20 74 6f 20 00 ; SLITERAL (14dc) [counting to ]
14ea: 0b b8 05 00 00             ; CALL CT (05b8)
14ef: 06                         ; DUP
14f0: 0b ee 09 00 00             ; CALL . (09ee)
14f5: 07 04 2e 2e 2e 20 00       ; SLITERAL (14f6) [... ]
14fc: 0b b8 05 00 00             ; CALL CT (05b8)
1501: 2e                         ; DEC
1502: 06                         ; DUP
1503: 0a 01 15 00 00             ; JMPNZ 1501
1508: 05                         ; DROP
1509: 0c                         ; RET
;
; End of code, Dictionary:
;
ef59: 70 ef 00 00                ; countTo-FAST - (next: ef70 countTo)
ef5d: d6 14 00 00 00             ; XT=14d6, flags=00
ef62: 0c 63 6f 75 6e 74 54 6f 2d 46 41 53 54 00 ; 12, countTo-FAST
;
ef70: 82 ef 00 00                ; countTo - (next: ef82 sys-info)
ef74: 97 14 00 00 00             ; XT=1497, flags=00
ef79: 07 63 6f 75 6e 74 54 6f 00 ; 7, countTo
;
ef82: 95 ef 00 00                ; sys-info - (next: ef95 ll)
ef86: 65 14 00 00 00             ; XT=1465, flags=00
ef8b: 08 73 79 73 2d 69 6e 66 6f 00 ; 8, sys-info
;
ef95: a2 ef 00 00                ; ll - (next: efa2 ")
ef99: 4e 14 00 00 00             ; XT=144e, flags=00
ef9e: 02 6c 6c 00                ; 2, ll
;
efa2: ae ef 00 00                ; " - (next: efae I")
efa6: bc 13 00 00 01             ; XT=13bc, flags=01
efab: 01 22 00                   ; 1, "
;
efae: bb ef 00 00                ; I" - (next: efbb STR.NULLTERM)
efb2: 5f 13 00 00 00             ; XT=135f, flags=00
efb7: 02 49 22 00                ; 2, I"
;
efbb: d2 ef 00 00                ; STR.NULLTERM - (next: efd2 STR.CATC)
efbf: 50 13 00 00 00             ; XT=1350, flags=00
efc4: 0c 53 54 52 2e 4e 55 4c 4c 54 45 52 4d 00 ; 12, STR.NULLTERM
;
efd2: e5 ef 00 00                ; STR.CATC - (next: efe5 STR.LEN)
efd6: 3a 13 00 00 00             ; XT=133a, flags=00
efdb: 08 53 54 52 2e 43 41 54 43 00 ; 8, STR.CATC
;
efe5: f7 ef 00 00                ; STR.LEN - (next: eff7 STR.EMPTY)
efe9: 32 13 00 00 02             ; XT=1332, flags=02
efee: 07 53 54 52 2e 4c 45 4e 00 ; 7, STR.LEN
;
eff7: 0b f0 00 00                ; STR.EMPTY - (next: f00b load)
effb: 28 13 00 00 02             ; XT=1328, flags=02
f000: 09 53 54 52 2e 45 4d 50 54 59 00 ; 9, STR.EMPTY
;
f00b: 1a f0 00 00                ; load - (next: f01a file-getLine)
f00f: bc 12 00 00 00             ; XT=12bc, flags=00
f014: 04 6c 6f 61 64 00          ; 4, load
;
f01a: 31 f0 00 00                ; file-getLine - (next: f031 main)
f01e: a6 12 00 00 00             ; XT=12a6, flags=00
f023: 0c 66 69 6c 65 2d 67 65 74 4c 69 6e 65 00 ; 12, file-getLine
;
f031: 40 f0 00 00                ; main - (next: f040 mainLoop)
f035: 75 12 00 00 00             ; XT=1275, flags=00
f03a: 04 6d 61 69 6e 00          ; 4, main
;
f040: 53 f0 00 00                ; mainLoop - (next: f053 .FREE)
f044: 29 12 00 00 00             ; XT=1229, flags=00
f049: 08 6d 61 69 6e 4c 6f 6f 70 00 ; 8, mainLoop
;
f053: 63 f0 00 00                ; .FREE - (next: f063 FREE)
f057: 05 12 00 00 00             ; XT=1205, flags=00
f05c: 05 2e 46 52 45 45 00       ; 5, .FREE
;
f063: 72 f0 00 00                ; FREE - (next: f072 C?)
f067: f4 11 00 00 00             ; XT=11f4, flags=00
f06c: 04 46 52 45 45 00          ; 4, FREE
;
f072: 7f f0 00 00                ; C? - (next: f07f ?)
f076: e8 11 00 00 00             ; XT=11e8, flags=00
f07b: 02 43 3f 00                ; 2, C?
;
f07f: 8b f0 00 00                ; ? - (next: f08b ALLOT)
f083: dc 11 00 00 00             ; XT=11dc, flags=00
f088: 01 3f 00                   ; 1, ?
;
f08b: 9b f0 00 00                ; ALLOT - (next: f09b resetState)
f08f: ca 11 00 00 00             ; XT=11ca, flags=00
f094: 05 41 4c 4c 4f 54 00       ; 5, ALLOT
;
f09b: b0 f0 00 00                ; resetState - (next: f0b0 ForgetLast)
f09f: a6 11 00 00 00             ; XT=11a6, flags=00
f0a4: 0a 72 65 73 65 74 53 74 61 74 65 00 ; 10, resetState
;
f0b0: c5 f0 00 00                ; ForgetLast - (next: f0c5 ;)
f0b4: 82 11 00 00 00             ; XT=1182, flags=00
f0b9: 0a 46 6f 72 67 65 74 4c 61 73 74 00 ; 10, ForgetLast
;
f0c5: d1 f0 00 00                ; ; - (next: f0d1 :NONAME)
f0c9: 6d 11 00 00 01             ; XT=116d, flags=01
f0ce: 01 3b 00                   ; 1, ;
;
f0d1: e3 f0 00 00                ; :NONAME - (next: f0e3 :)
f0d5: 58 11 00 00 00             ; XT=1158, flags=00
f0da: 07 3a 4e 4f 4e 41 4d 45 00 ; 7, :NONAME
;
f0e3: ef f0 00 00                ; : - (next: f0ef CREATE-NAME)
f0e7: 43 11 00 00 00             ; XT=1143, flags=00
f0ec: 01 3a 00                   ; 1, :
;
f0ef: 05 f1 00 00                ; CREATE-NAME - (next: f105 Define-Word)
f0f3: eb 10 00 00 00             ; XT=10eb, flags=00
f0f8: 0b 43 52 45 41 54 45 2d 4e 41 4d 45 00 ; 11, CREATE-NAME
;
f105: 1b f1 00 00                ; Define-Word - (next: f11b strcpy2c)
f109: 92 10 00 00 00             ; XT=1092, flags=00
f10e: 0b 44 65 66 69 6e 65 2d 57 6f 72 64 00 ; 11, Define-Word
;
f11b: 2e f1 00 00                ; strcpy2c - (next: f12e getLine)
f11f: 59 10 00 00 00             ; XT=1059, flags=00
f124: 08 73 74 72 63 70 79 32 63 00 ; 8, strcpy2c
;
f12e: 40 f1 00 00                ; getLine - (next: f140 getLineFromFile)
f132: 88 0f 00 00 00             ; XT=0f88, flags=00
f137: 07 67 65 74 4c 69 6e 65 00 ; 7, getLine
;
f140: 5a f1 00 00                ; getLineFromFile - (next: f15a LoadingFromFile?)
f144: 67 0f 00 00 00             ; XT=0f67, flags=00
f149: 0f 67 65 74 4c 69 6e 65 46 72 6f 6d 46 69 6c 65 00 ; 15, getLineFromFile
;
f15a: 75 f1 00 00                ; LoadingFromFile? - (next: f175 Pad)
f15e: 5b 0f 00 00 00             ; XT=0f5b, flags=00
f163: 10 4c 6f 61 64 69 6e 67 46 72 6f 6d 46 69 6c 65 3f 00 ; 16, LoadingFromFile?
;
f175: 83 f1 00 00                ; Pad - (next: f183 executeInput)
f179: 2f 0f 00 00 00             ; XT=0f2f, flags=00
f17e: 03 50 61 64 00             ; 3, Pad
;
f183: 9a f1 00 00                ; executeInput - (next: f19a executeWord)
f187: eb 0e 00 00 00             ; XT=0eeb, flags=00
f18c: 0c 65 78 65 63 75 74 65 49 6e 70 75 74 00 ; 12, executeInput
;
f19a: b0 f1 00 00                ; executeWord - (next: f1b0 [COMPILE])
f19e: 4a 0e 00 00 00             ; XT=0e4a, flags=00
f1a3: 0b 65 78 65 63 75 74 65 57 6f 72 64 00 ; 11, executeWord
;
f1b0: c4 f1 00 00                ; [COMPILE] - (next: f1c4 cstr,)
f1b4: 26 0e 00 00 00             ; XT=0e26, flags=00
f1b9: 09 5b 43 4f 4d 50 49 4c 45 5d 00 ; 9, [COMPILE]
;
f1c4: d4 f1 00 00                ; cstr, - (next: f1d4 strlen)
f1c8: 15 0e 00 00 00             ; XT=0e15, flags=00
f1cd: 05 63 73 74 72 2c 00       ; 5, cstr,
;
f1d4: e5 f1 00 00                ; strlen - (next: f1e5 Copy.INLINE)
f1d8: f6 0d 00 00 00             ; XT=0df6, flags=00
f1dd: 06 73 74 72 6c 65 6e 00    ; 6, strlen
;
f1e5: fb f1 00 00                ; Copy.INLINE - (next: f1fb DOES>)
f1e9: d4 0d 00 00 00             ; XT=0dd4, flags=00
f1ee: 0b 43 6f 70 79 2e 49 4e 4c 49 4e 45 00 ; 11, Copy.INLINE
;
f1fb: 0b f2 00 00                ; DOES> - (next: f20b (inline))
f1ff: bf 0d 00 00 00             ; XT=0dbf, flags=00
f204: 05 44 4f 45 53 3e 00       ; 5, DOES>
;
f20b: 1e f2 00 00                ; (inline) - (next: f21e find.ret)
f20f: 9e 0d 00 00 00             ; XT=0d9e, flags=00
f214: 08 28 69 6e 6c 69 6e 65 29 00 ; 8, (inline)
;
f21e: 31 f2 00 00                ; find.ret - (next: f231 EXECUTE)
f222: 87 0d 00 00 00             ; XT=0d87, flags=00
f227: 08 66 69 6e 64 2e 72 65 74 00 ; 8, find.ret
;
f231: 43 f2 00 00                ; EXECUTE - (next: f243 .lastx)
f235: 7e 0d 00 00 00             ; XT=0d7e, flags=00
f23a: 07 45 58 45 43 55 54 45 00 ; 7, EXECUTE
;
f243: 54 f2 00 00                ; .lastx - (next: f254 NUM-WORDS)
f247: 5c 0d 00 00 00             ; XT=0d5c, flags=00
f24c: 06 2e 6c 61 73 74 78 00    ; 6, .lastx
;
f254: 68 f2 00 00                ; NUM-WORDS - (next: f268 WORDSV)
f258: 32 0d 00 00 00             ; XT=0d32, flags=00
f25d: 09 4e 55 4d 2d 57 4f 52 44 53 00 ; 9, NUM-WORDS
;
f268: 79 f2 00 00                ; WORDSV - (next: f279 .WORD-LONG)
f26c: 00 0d 00 00 00             ; XT=0d00, flags=00
f271: 06 57 4f 52 44 53 56 00    ; 6, WORDSV
;
f279: 8e f2 00 00                ; .WORD-LONG - (next: f28e WORDS)
f27d: 70 0c 00 00 00             ; XT=0c70, flags=00
f282: 0a 2e 57 4f 52 44 2d 4c 4f 4e 47 00 ; 10, .WORD-LONG
;
f28e: 9e f2 00 00                ; WORDS - (next: f29e .WORD-SHORT)
f292: 49 0c 00 00 00             ; XT=0c49, flags=00
f297: 05 57 4f 52 44 53 00       ; 5, WORDS
;
f29e: b4 f2 00 00                ; .WORD-SHORT - (next: f2b4 .(LAST))
f2a2: 34 0c 00 00 00             ; XT=0c34, flags=00
f2a7: 0b 2e 57 4f 52 44 2d 53 48 4f 52 54 00 ; 11, .WORD-SHORT
;
f2b4: c6 f2 00 00                ; .(LAST) - (next: f2c6 .(HERE))
f2b8: fd 0b 00 00 00             ; XT=0bfd, flags=00
f2bd: 07 2e 28 4c 41 53 54 29 00 ; 7, .(LAST)
;
f2c6: d8 f2 00 00                ; .(HERE) - (next: f2d8 .(MEM_SZ))
f2ca: c6 0b 00 00 00             ; XT=0bc6, flags=00
f2cf: 07 2e 28 48 45 52 45 29 00 ; 7, .(HERE)
;
f2d8: ec f2 00 00                ; .(MEM_SZ) - (next: f2ec .S)
f2dc: 8d 0b 00 00 00             ; XT=0b8d, flags=00
f2e1: 09 2e 28 4d 45 4d 5f 53 5a 29 00 ; 9, .(MEM_SZ)
;
f2ec: f9 f2 00 00                ; .S - (next: f2f9 MAX)
f2f0: 1b 0b 00 00 00             ; XT=0b1b, flags=00
f2f5: 02 2e 53 00                ; 2, .S
;
f2f9: 07 f3 00 00                ; MAX - (next: f307 MIN)
f2fd: 0b 0b 00 00 00             ; XT=0b0b, flags=00
f302: 03 4d 41 58 00             ; 3, MAX
;
f307: 15 f3 00 00                ; MIN - (next: f315 BINARY.)
f30b: fb 0a 00 00 00             ; XT=0afb, flags=00
f310: 03 4d 49 4e 00             ; 3, MIN
;
f315: 27 f3 00 00                ; BINARY. - (next: f327 DECIMAL.)
f319: de 0a 00 00 00             ; XT=0ade, flags=00
f31e: 07 42 49 4e 41 52 59 2e 00 ; 7, BINARY.
;
f327: 3a f3 00 00                ; DECIMAL. - (next: f33a HEX.4)
f32b: c1 0a 00 00 00             ; XT=0ac1, flags=00
f330: 08 44 45 43 49 4d 41 4c 2e 00 ; 8, DECIMAL.
;
f33a: 4a f3 00 00                ; HEX.4 - (next: f34a HEX.2)
f33e: a4 0a 00 00 00             ; XT=0aa4, flags=00
f343: 05 48 45 58 2e 34 00       ; 5, HEX.4
;
f34a: 5a f3 00 00                ; HEX.2 - (next: f35a HEX.)
f34e: 87 0a 00 00 00             ; XT=0a87, flags=00
f353: 05 48 45 58 2e 32 00       ; 5, HEX.2
;
f35a: 69 f3 00 00                ; HEX. - (next: f369 .4)
f35e: 6a 0a 00 00 00             ; XT=0a6a, flags=00
f363: 04 48 45 58 2e 00          ; 4, HEX.
;
f369: 76 f3 00 00                ; .4 - (next: f376 .3)
f36d: 41 0a 00 00 00             ; XT=0a41, flags=00
f372: 02 2e 34 00                ; 2, .4
;
f376: 83 f3 00 00                ; .3 - (next: f383 .2)
f37a: 1d 0a 00 00 00             ; XT=0a1d, flags=00
f37f: 02 2e 33 00                ; 2, .3
;
f383: 90 f3 00 00                ; .2 - (next: f390 .)
f387: fe 09 00 00 00             ; XT=09fe, flags=00
f38c: 02 2e 32 00                ; 2, .2
;
f390: 9c f3 00 00                ; . - (next: f39c (.))
f394: ee 09 00 00 00             ; XT=09ee, flags=00
f399: 01 2e 00                   ; 1, .
;
f39c: aa f3 00 00                ; (.) - (next: f3aa #P)
f3a0: d4 09 00 00 00             ; XT=09d4, flags=00
f3a5: 03 28 2e 29 00             ; 3, (.)
;
f3aa: b7 f3 00 00                ; #P - (next: f3b7 #P-)
f3ae: be 09 00 00 00             ; XT=09be, flags=00
f3b3: 02 23 50 00                ; 2, #P
;
f3b7: c5 f3 00 00                ; #P- - (next: f3c5 #>)
f3bb: a9 09 00 00 00             ; XT=09a9, flags=00
f3c0: 03 23 50 2d 00             ; 3, #P-
;
f3c5: d2 f3 00 00                ; #> - (next: f3d2 #S)
f3c9: a3 09 00 00 00             ; XT=09a3, flags=00
f3ce: 02 23 3e 00                ; 2, #>
;
f3d2: df f3 00 00                ; #S - (next: f3df #)
f3d6: 8f 09 00 00 00             ; XT=098f, flags=00
f3db: 02 23 53 00                ; 2, #S
;
f3df: eb f3 00 00                ; # - (next: f3eb <#)
f3e3: 63 09 00 00 00             ; XT=0963, flags=00
f3e8: 01 23 00                   ; 1, #
;
f3eb: f8 f3 00 00                ; <# - (next: f3f8 SPACE)
f3ef: 2e 09 00 00 00             ; XT=092e, flags=00
f3f4: 02 3c 23 00                ; 2, <#
;
f3f8: 08 f4 00 00                ; SPACE - (next: f408 /MOD)
f3fc: 25 09 00 00 00             ; XT=0925, flags=00
f401: 05 53 50 41 43 45 00       ; 5, SPACE
;
f408: 17 f4 00 00                ; /MOD - (next: f417 MOD)
f40c: 17 09 00 00 00             ; XT=0917, flags=00
f411: 04 2f 4d 4f 44 00          ; 4, /MOD
;
f417: 25 f4 00 00                ; MOD - (next: f425 isNumber?)
f41b: 0c 09 00 00 00             ; XT=090c, flags=00
f420: 03 4d 4f 44 00             ; 3, MOD
;
f425: 39 f4 00 00                ; isNumber? - (next: f439 ABS)
f429: ac 08 00 00 00             ; XT=08ac, flags=00
f42e: 09 69 73 4e 75 6d 62 65 72 3f 00 ; 9, isNumber?
;
f439: 47 f4 00 00                ; ABS - (next: f447 NEGATE)
f43d: 98 08 00 00 00             ; XT=0898, flags=00
f442: 03 41 42 53 00             ; 3, ABS
;
f447: 58 f4 00 00                ; NEGATE - (next: f458 isNumChar?)
f44b: 8e 08 00 00 00             ; XT=088e, flags=00
f450: 06 4e 45 47 41 54 45 00    ; 6, NEGATE
;
f458: 6d f4 00 00                ; isNumChar? - (next: f46d isHEX?)
f45c: 3d 08 00 00 00             ; XT=083d, flags=00
f461: 0a 69 73 4e 75 6d 43 68 61 72 3f 00 ; 10, isNumChar?
;
f46d: 7e f4 00 00                ; isHEX? - (next: f47e findInDict)
f471: 2e 08 00 00 00             ; XT=082e, flags=00
f476: 06 69 73 48 45 58 3f 00    ; 6, isHEX?
;
f47e: 93 f4 00 00                ; findInDict - (next: f493 DICT.GetINLINE)
f482: e5 07 00 00 00             ; XT=07e5, flags=00
f487: 0a 66 69 6e 64 49 6e 44 69 63 74 00 ; 10, findInDict
;
f493: ac f4 00 00                ; DICT.GetINLINE - (next: f4ac DICT.GetIMMEDIATE)
f497: d5 07 00 00 00             ; XT=07d5, flags=00
f49c: 0e 44 49 43 54 2e 47 65 74 49 4e 4c 49 4e 45 00 ; 14, DICT.GetINLINE
;
f4ac: c8 f4 00 00                ; DICT.GetIMMEDIATE - (next: f4c8 FLAGS.ISINLINE?)
f4b0: c5 07 00 00 00             ; XT=07c5, flags=00
f4b5: 11 44 49 43 54 2e 47 65 74 49 4d 4d 45 44 49 41 54 45 00 ; 17, DICT.GetIMMEDIATE
;
f4c8: e2 f4 00 00                ; FLAGS.ISINLINE? - (next: f4e2 FLAGS.ISIMMEDIATE?)
f4cc: bc 07 00 00 00             ; XT=07bc, flags=00
f4d1: 0f 46 4c 41 47 53 2e 49 53 49 4e 4c 49 4e 45 3f 00 ; 15, FLAGS.ISINLINE?
;
f4e2: ff f4 00 00                ; FLAGS.ISIMMEDIATE? - (next: f4ff XT.GetDICTP)
f4e6: b3 07 00 00 00             ; XT=07b3, flags=00
f4eb: 12 46 4c 41 47 53 2e 49 53 49 4d 4d 45 44 49 41 54 45 3f 00 ; 18, FLAGS.ISIMMEDIATE?
;
f4ff: 15 f5 00 00                ; XT.GetDICTP - (next: f515 DICTP>NAME)
f503: 9a 07 00 00 00             ; XT=079a, flags=00
f508: 0b 58 54 2e 47 65 74 44 49 43 54 50 00 ; 11, XT.GetDICTP
;
f515: 2a f5 00 00                ; DICTP>NAME - (next: f52a DICT.GetFLAGS)
f519: 8d 07 00 00 00             ; XT=078d, flags=00
f51e: 0a 44 49 43 54 50 3e 4e 41 4d 45 00 ; 10, DICTP>NAME
;
f52a: 42 f5 00 00                ; DICT.GetFLAGS - (next: f542 DICT.GetXT)
f52e: 81 07 00 00 00             ; XT=0781, flags=00
f533: 0d 44 49 43 54 2e 47 65 74 46 4c 41 47 53 00 ; 13, DICT.GetFLAGS
;
f542: 57 f5 00 00                ; DICT.GetXT - (next: f557 NAME>DICT)
f546: 75 07 00 00 00             ; XT=0775, flags=00
f54b: 0a 44 49 43 54 2e 47 65 74 58 54 00 ; 10, DICT.GetXT
;
f557: 6b f5 00 00                ; NAME>DICT - (next: f56b FLAGS>DICT)
f55b: 65 07 00 00 00             ; XT=0765, flags=00
f560: 09 4e 41 4d 45 3e 44 49 43 54 00 ; 9, NAME>DICT
;
f56b: 80 f5 00 00                ; FLAGS>DICT - (next: f580 XT>DICT)
f56f: 56 07 00 00 00             ; XT=0756, flags=00
f574: 0a 46 4c 41 47 53 3e 44 49 43 54 00 ; 10, FLAGS>DICT
;
f580: 92 f5 00 00                ; XT>DICT - (next: f592 NEXT>DICT)
f584: 4a 07 00 00 00             ; XT=074a, flags=00
f589: 07 58 54 3e 44 49 43 54 00 ; 7, XT>DICT
;
f592: a6 f5 00 00                ; NEXT>DICT - (next: f5a6 DICT>NAME)
f596: 44 07 00 00 00             ; XT=0744, flags=00
f59b: 09 4e 45 58 54 3e 44 49 43 54 00 ; 9, NEXT>DICT
;
f5a6: ba f5 00 00                ; DICT>NAME - (next: f5ba DICT>FLAGS)
f5aa: 38 07 00 00 00             ; XT=0738, flags=00
f5af: 09 44 49 43 54 3e 4e 41 4d 45 00 ; 9, DICT>NAME
;
f5ba: cf f5 00 00                ; DICT>FLAGS - (next: f5cf DICT>XT)
f5be: 29 07 00 00 00             ; XT=0729, flags=00
f5c3: 0a 44 49 43 54 3e 46 4c 41 47 53 00 ; 10, DICT>FLAGS
;
f5cf: e1 f5 00 00                ; DICT>XT - (next: f5e1 DICT>NEXT)
f5d3: 1d 07 00 00 00             ; XT=071d, flags=00
f5d8: 07 44 49 43 54 3e 58 54 00 ; 7, DICT>XT
;
f5e1: f5 f5 00 00                ; DICT>NEXT - (next: f5f5 getOneWord)
f5e5: 17 07 00 00 00             ; XT=0717, flags=00
f5ea: 09 44 49 43 54 3e 4e 45 58 54 00 ; 9, DICT>NEXT
;
f5f5: 0a f6 00 00                ; getOneWord - (next: f60a skipWS)
f5f9: df 06 00 00 00             ; XT=06df, flags=00
f5fe: 0a 67 65 74 4f 6e 65 57 6f 72 64 00 ; 10, getOneWord
;
f60a: 1b f6 00 00                ; skipWS - (next: f61b getInput)
f60e: b6 06 00 00 00             ; XT=06b6, flags=00
f613: 06 73 6b 69 70 57 53 00    ; 6, skipWS
;
f61b: 2e f6 00 00                ; getInput - (next: f62e PAD)
f61f: a0 06 00 00 00             ; XT=06a0, flags=00
f624: 08 67 65 74 49 6e 70 75 74 00 ; 8, getInput
;
f62e: 3c f6 00 00                ; PAD - (next: f63c tmp-alloc)
f632: 8e 06 00 00 00             ; XT=068e, flags=00
f637: 03 50 41 44 00             ; 3, PAD
;
f63c: 50 f6 00 00                ; tmp-alloc - (next: f650 tmp-cur)
f640: 77 06 00 00 00             ; XT=0677, flags=00
f645: 09 74 6d 70 2d 61 6c 6c 6f 63 00 ; 9, tmp-alloc
;
f650: 62 f6 00 00                ; tmp-cur - (next: f662 tmp-init)
f654: 6b 06 00 00 00             ; XT=066b, flags=00
f659: 07 74 6d 70 2d 63 75 72 00 ; 7, tmp-cur
;
f662: 75 f6 00 00                ; tmp-init - (next: f675 BETWEEN)
f666: 5a 06 00 00 00             ; XT=065a, flags=00
f66b: 08 74 6d 70 2d 69 6e 69 74 00 ; 8, tmp-init
;
f675: 87 f6 00 00                ; BETWEEN - (next: f687 CR)
f679: 42 06 00 00 00             ; XT=0642, flags=00
f67e: 07 42 45 54 57 45 45 4e 00 ; 7, BETWEEN
;
f687: 94 f6 00 00                ; CR - (next: f694 CRLF)
f68b: 36 06 00 00 02             ; XT=0636, flags=02
f690: 02 43 52 00                ; 2, CR
;
f694: a3 f6 00 00                ; CRLF - (next: f6a3 BL)
f698: 2a 06 00 00 02             ; XT=062a, flags=02
f69d: 04 43 52 4c 46 00          ; 4, CRLF
;
f6a3: b0 f6 00 00                ; BL - (next: f6b0 ()
f6a7: 21 06 00 00 02             ; XT=0621, flags=02
f6ac: 02 42 4c 00                ; 2, BL
;
f6b0: bc f6 00 00                ; ( - (next: f6bc \)
f6b4: d7 05 00 00 01             ; XT=05d7, flags=01
f6b9: 01 28 00                   ; 1, (
;
f6bc: c8 f6 00 00                ; \ - (next: f6c8 CT)
f6c0: c8 05 00 00 01             ; XT=05c8, flags=01
f6c5: 01 5c 00                   ; 1, \
;
f6c8: d5 f6 00 00                ; CT - (next: f6d5 TYPE)
f6cc: b8 05 00 00 00             ; XT=05b8, flags=00
f6d1: 02 43 54 00                ; 2, CT
;
f6d5: e4 f6 00 00                ; TYPE - (next: f6e4 COUNT)
f6d9: 98 05 00 00 00             ; XT=0598, flags=00
f6de: 04 54 59 50 45 00          ; 4, TYPE
;
f6e4: f4 f6 00 00                ; COUNT - (next: f6f4 NOT)
f6e8: 8e 05 00 00 00             ; XT=058e, flags=00
f6ed: 05 43 4f 55 4e 54 00       ; 5, COUNT
;
f6f4: 02 f7 00 00                ; NOT - (next: f702 FALSE)
f6f8: 85 05 00 00 02             ; XT=0585, flags=02
f6fd: 03 4e 4f 54 00             ; 3, NOT
;
f702: 12 f7 00 00                ; FALSE - (next: f712 TRUE)
f706: 7d 05 00 00 02             ; XT=057d, flags=02
f70b: 05 46 41 4c 53 45 00       ; 5, FALSE
;
f712: 21 f7 00 00                ; TRUE - (next: f721 >=)
f716: 75 05 00 00 02             ; XT=0575, flags=02
f71b: 04 54 52 55 45 00          ; 4, TRUE
;
f721: 2e f7 00 00                ; >= - (next: f72e <=)
f725: 6b 05 00 00 02             ; XT=056b, flags=02
f72a: 02 3e 3d 00                ; 2, >=
;
f72e: 3b f7 00 00                ; <= - (next: f73b <>)
f732: 61 05 00 00 02             ; XT=0561, flags=02
f737: 02 3c 3d 00                ; 2, <=
;
f73b: 48 f7 00 00                ; <> - (next: f748 0=)
f73f: 57 05 00 00 02             ; XT=0557, flags=02
f744: 02 3c 3e 00                ; 2, <>
;
f748: 55 f7 00 00                ; 0= - (next: f755 C+!)
f74c: 4e 05 00 00 02             ; XT=054e, flags=02
f751: 02 30 3d 00                ; 2, 0=
;
f755: 63 f7 00 00                ; C+! - (next: f763 +!)
f759: 42 05 00 00 00             ; XT=0542, flags=00
f75e: 03 43 2b 21 00             ; 3, C+!
;
f763: 70 f7 00 00                ; +! - (next: f770 C--)
f767: 36 05 00 00 00             ; XT=0536, flags=00
f76c: 02 2b 21 00                ; 2, +!
;
f770: 7e f7 00 00                ; C-- - (next: f77e C++)
f774: 2b 05 00 00 00             ; XT=052b, flags=00
f779: 03 43 2d 2d 00             ; 3, C--
;
f77e: 8c f7 00 00                ; C++ - (next: f78c --)
f782: 20 05 00 00 00             ; XT=0520, flags=00
f787: 03 43 2b 2b 00             ; 3, C++
;
f78c: 99 f7 00 00                ; -- - (next: f799 ++)
f790: 13 05 00 00 00             ; XT=0513, flags=00
f795: 02 2d 2d 00                ; 2, --
;
f799: a6 f7 00 00                ; ++ - (next: f7a6 -=)
f79d: 06 05 00 00 00             ; XT=0506, flags=00
f7a2: 02 2b 2b 00                ; 2, ++
;
f7a6: b3 f7 00 00                ; -= - (next: f7b3 +=)
f7aa: fa 04 00 00 00             ; XT=04fa, flags=00
f7af: 02 2d 3d 00                ; 2, -=
;
f7b3: c0 f7 00 00                ; += - (next: f7c0 2/)
f7b7: ef 04 00 00 00             ; XT=04ef, flags=00
f7bc: 02 2b 3d 00                ; 2, +=
;
f7c0: cd f7 00 00                ; 2/ - (next: f7cd 2*)
f7c4: e6 04 00 00 02             ; XT=04e6, flags=02
f7c9: 02 32 2f 00                ; 2, 2/
;
f7cd: da f7 00 00                ; 2* - (next: f7da 1-)
f7d1: dd 04 00 00 02             ; XT=04dd, flags=02
f7d6: 02 32 2a 00                ; 2, 2*
;
f7da: e7 f7 00 00                ; 1- - (next: f7e7 1+)
f7de: d6 04 00 00 02             ; XT=04d6, flags=02
f7e3: 02 31 2d 00                ; 2, 1-
;
f7e7: f4 f7 00 00                ; 1+ - (next: f7f4 -ROT)
f7eb: cf 04 00 00 02             ; XT=04cf, flags=02
f7f0: 02 31 2b 00                ; 2, 1+
;
f7f4: 03 f8 00 00                ; -ROT - (next: f803 ROT)
f7f8: c5 04 00 00 02             ; XT=04c5, flags=02
f7fd: 04 2d 52 4f 54 00          ; 4, -ROT
;
f803: 11 f8 00 00                ; ROT - (next: f811 NIP)
f807: bb 04 00 00 02             ; XT=04bb, flags=02
f80c: 03 52 4f 54 00             ; 3, ROT
;
f811: 1f f8 00 00                ; NIP - (next: f81f TUCK)
f815: b3 04 00 00 02             ; XT=04b3, flags=02
f81a: 03 4e 49 50 00             ; 3, NIP
;
f81f: 2e f8 00 00                ; TUCK - (next: f82e 2DROP)
f823: ab 04 00 00 02             ; XT=04ab, flags=02
f828: 04 54 55 43 4b 00          ; 4, TUCK
;
f82e: 3e f8 00 00                ; 2DROP - (next: f83e 2DUP)
f832: a3 04 00 00 02             ; XT=04a3, flags=02
f837: 05 32 44 52 4f 50 00       ; 5, 2DROP
;
f83e: 4d f8 00 00                ; 2DUP - (next: f84d RDROP)
f842: 9b 04 00 00 02             ; XT=049b, flags=02
f847: 04 32 44 55 50 00          ; 4, 2DUP
;
f84d: 5d f8 00 00                ; RDROP - (next: f85d R@)
f851: 93 04 00 00 02             ; XT=0493, flags=02
f856: 05 52 44 52 4f 50 00       ; 5, RDROP
;
f85d: 6a f8 00 00                ; R@ - (next: f86a DEBUG-OFF)
f861: 8a 04 00 00 02             ; XT=048a, flags=02
f866: 02 52 40 00                ; 2, R@
;
f86a: 7e f8 00 00                ; DEBUG-OFF - (next: f87e DEBUG-ON)
f86e: 81 04 00 00 02             ; XT=0481, flags=02
f873: 09 44 45 42 55 47 2d 4f 46 46 00 ; 9, DEBUG-OFF
;
f87e: 91 f8 00 00                ; DEBUG-ON - (next: f891 TRACE-OFF)
f882: 78 04 00 00 02             ; XT=0478, flags=02
f887: 08 44 45 42 55 47 2d 4f 4e 00 ; 8, DEBUG-ON
;
f891: a5 f8 00 00                ; TRACE-OFF - (next: f8a5 TRACE-ON)
f895: 6f 04 00 00 02             ; XT=046f, flags=02
f89a: 09 54 52 41 43 45 2d 4f 46 46 00 ; 9, TRACE-OFF
;
f8a5: b8 f8 00 00                ; TRACE-ON - (next: f8b8 MEM_SZ)
f8a9: 66 04 00 00 02             ; XT=0466, flags=02
f8ae: 08 54 52 41 43 45 2d 4f 4e 00 ; 8, TRACE-ON
;
f8b8: c9 f8 00 00                ; MEM_SZ - (next: f8c9 LEAVE)
f8bc: 5a 04 00 00 00             ; XT=045a, flags=00
f8c1: 06 4d 45 4d 5f 53 5a 00    ; 6, MEM_SZ
;
f8c9: d9 f8 00 00                ; LEAVE - (next: f8d9 UNTIL)
f8cd: 45 04 00 00 01             ; XT=0445, flags=01
f8d2: 05 4c 45 41 56 45 00       ; 5, LEAVE
;
f8d9: e9 f8 00 00                ; UNTIL - (next: f8e9 WHILE)
f8dd: 2b 04 00 00 01             ; XT=042b, flags=01
f8e2: 05 55 4e 54 49 4c 00       ; 5, UNTIL
;
f8e9: f9 f8 00 00                ; WHILE - (next: f8f9 AGAIN)
f8ed: 11 04 00 00 01             ; XT=0411, flags=01
f8f2: 05 57 48 49 4c 45 00       ; 5, WHILE
;
f8f9: 09 f9 00 00                ; AGAIN - (next: f909 BEGIN)
f8fd: f7 03 00 00 01             ; XT=03f7, flags=01
f902: 05 41 47 41 49 4e 00       ; 5, AGAIN
;
f909: 19 f9 00 00                ; BEGIN - (next: f919 THEN)
f90d: e2 03 00 00 01             ; XT=03e2, flags=01
f912: 05 42 45 47 49 4e 00       ; 5, BEGIN
;
f919: 28 f9 00 00                ; THEN - (next: f928 ELSE)
f91d: cb 03 00 00 01             ; XT=03cb, flags=01
f922: 04 54 48 45 4e 00          ; 4, THEN
;
f928: 37 f9 00 00                ; ELSE - (next: f937 IF)
f92c: a2 03 00 00 01             ; XT=03a2, flags=01
f931: 04 45 4c 53 45 00          ; 4, ELSE
;
f937: 44 f9 00 00                ; IF - (next: f944 ?COMPILING)
f93b: 81 03 00 00 01             ; XT=0381, flags=01
f940: 02 49 46 00                ; 2, IF
;
f944: 59 f9 00 00                ; ?COMPILING - (next: f959 OFF)
f948: 75 03 00 00 00             ; XT=0375, flags=00
f94d: 0a 3f 43 4f 4d 50 49 4c 49 4e 47 00 ; 10, ?COMPILING
;
f959: 67 f9 00 00                ; OFF - (next: f967 ON)
f95d: 6b 03 00 00 00             ; XT=036b, flags=00
f962: 03 4f 46 46 00             ; 3, OFF
;
f967: 74 f9 00 00                ; ON - (next: f974 BINARY)
f96b: 61 03 00 00 00             ; XT=0361, flags=00
f970: 02 4f 4e 00                ; 2, ON
;
f974: 85 f9 00 00                ; BINARY - (next: f985 OCTAL)
f978: 53 03 00 00 00             ; XT=0353, flags=00
f97d: 06 42 49 4e 41 52 59 00    ; 6, BINARY
;
f985: 95 f9 00 00                ; OCTAL - (next: f995 DECIMAL)
f989: 45 03 00 00 00             ; XT=0345, flags=00
f98e: 05 4f 43 54 41 4c 00       ; 5, OCTAL
;
f995: a7 f9 00 00                ; DECIMAL - (next: f9a7 HEX)
f999: 37 03 00 00 00             ; XT=0337, flags=00
f99e: 07 44 45 43 49 4d 41 4c 00 ; 7, DECIMAL
;
f9a7: b5 f9 00 00                ; HEX - (next: f9b5 FLAG_INLINE)
f9ab: 29 03 00 00 00             ; XT=0329, flags=00
f9b0: 03 48 45 58 00             ; 3, HEX
;
f9b5: cb f9 00 00                ; FLAG_INLINE - (next: f9cb FLAG_IMMEDIATE)
f9b9: 21 03 00 00 02             ; XT=0321, flags=02
f9be: 0b 46 4c 41 47 5f 49 4e 4c 49 4e 45 00 ; 11, FLAG_INLINE
;
f9cb: e4 f9 00 00                ; FLAG_IMMEDIATE - (next: f9e4 CELLS)
f9cf: 19 03 00 00 02             ; XT=0319, flags=02
f9d4: 0e 46 4c 41 47 5f 49 4d 4d 45 44 49 41 54 45 00 ; 14, FLAG_IMMEDIATE
;
f9e4: f4 f9 00 00                ; CELLS - (next: f9f4 IMMEDIATE)
f9e8: 0d 03 00 00 02             ; XT=030d, flags=02
f9ed: 05 43 45 4c 4c 53 00       ; 5, CELLS
;
f9f4: 08 fa 00 00                ; IMMEDIATE - (next: fa08 INLINE)
f9f8: f2 02 00 00 00             ; XT=02f2, flags=00
f9fd: 09 49 4d 4d 45 44 49 41 54 45 00 ; 9, IMMEDIATE
;
fa08: 19 fa 00 00                ; INLINE - (next: fa19 BYE)
fa0c: d7 02 00 00 00             ; XT=02d7, flags=00
fa11: 06 49 4e 4c 49 4e 45 00    ; 6, INLINE
;
fa19: 27 fa 00 00                ; BYE - (next: fa27 RESET)
fa1d: d0 02 00 00 02             ; XT=02d0, flags=02
fa22: 03 42 59 45 00             ; 3, BYE
;
fa27: 37 fa 00 00                ; RESET - (next: fa37 BREAK)
fa2b: c9 02 00 00 02             ; XT=02c9, flags=02
fa30: 05 52 45 53 45 54 00       ; 5, RESET
;
fa37: 47 fa 00 00                ; BREAK - (next: fa47 GETTICK)
fa3b: c2 02 00 00 02             ; XT=02c2, flags=02
fa40: 05 42 52 45 41 4b 00       ; 5, BREAK
;
fa47: 59 fa 00 00                ; GETTICK - (next: fa59 DEC)
fa4b: bb 02 00 00 02             ; XT=02bb, flags=02
fa50: 07 47 45 54 54 49 43 4b 00 ; 7, GETTICK
;
fa59: 67 fa 00 00                ; DEC - (next: fa67 RDEPTH)
fa5d: b4 02 00 00 02             ; XT=02b4, flags=02
fa62: 03 44 45 43 00             ; 3, DEC
;
fa67: 78 fa 00 00                ; RDEPTH - (next: fa78 INC)
fa6b: ad 02 00 00 02             ; XT=02ad, flags=02
fa70: 06 52 44 45 50 54 48 00    ; 6, RDEPTH
;
fa78: 86 fa 00 00                ; INC - (next: fa86 USPOP)
fa7c: a6 02 00 00 02             ; XT=02a6, flags=02
fa81: 03 49 4e 43 00             ; 3, INC
;
fa86: 96 fa 00 00                ; USPOP - (next: fa96 USPUSH)
fa8a: 9f 02 00 00 02             ; XT=029f, flags=02
fa8f: 05 55 53 50 4f 50 00       ; 5, USPOP
;
fa96: a7 fa 00 00                ; USPUSH - (next: faa7 COMPAREI)
fa9a: 98 02 00 00 02             ; XT=0298, flags=02
fa9f: 06 55 53 50 55 53 48 00    ; 6, USPUSH
;
faa7: ba fa 00 00                ; COMPAREI - (next: faba GETCH)
faab: 91 02 00 00 02             ; XT=0291, flags=02
fab0: 08 43 4f 4d 50 41 52 45 49 00 ; 8, COMPAREI
;
faba: ca fa 00 00                ; GETCH - (next: faca DEPTH)
fabe: 8a 02 00 00 02             ; XT=028a, flags=02
fac3: 05 47 45 54 43 48 00       ; 5, GETCH
;
faca: da fa 00 00                ; DEPTH - (next: fada PICK)
face: 83 02 00 00 02             ; XT=0283, flags=02
fad3: 05 44 45 50 54 48 00       ; 5, DEPTH
;
fada: e9 fa 00 00                ; PICK - (next: fae9 AND)
fade: 7c 02 00 00 02             ; XT=027c, flags=02
fae3: 04 50 49 43 4b 00          ; 4, PICK
;
fae9: f7 fa 00 00                ; AND - (next: faf7 LOGLEVEL)
faed: 75 02 00 00 02             ; XT=0275, flags=02
faf2: 03 41 4e 44 00             ; 3, AND
;
faf7: 0a fb 00 00                ; LOGLEVEL - (next: fb0a R>)
fafb: 6e 02 00 00 02             ; XT=026e, flags=02
fb00: 08 4c 4f 47 4c 45 56 45 4c 00 ; 8, LOGLEVEL
;
fb0a: 17 fb 00 00                ; R> - (next: fb17 >R)
fb0e: 67 02 00 00 02             ; XT=0267, flags=02
fb13: 02 52 3e 00                ; 2, R>
;
fb17: 24 fb 00 00                ; >R - (next: fb24 FCLOSE)
fb1b: 60 02 00 00 02             ; XT=0260, flags=02
fb20: 02 3e 52 00                ; 2, >R
;
fb24: 35 fb 00 00                ; FCLOSE - (next: fb35 FWRITE)
fb28: 59 02 00 00 02             ; XT=0259, flags=02
fb2d: 06 46 43 4c 4f 53 45 00    ; 6, FCLOSE
;
fb35: 46 fb 00 00                ; FWRITE - (next: fb46 FREADLINE)
fb39: 52 02 00 00 02             ; XT=0252, flags=02
fb3e: 06 46 57 52 49 54 45 00    ; 6, FWRITE
;
fb46: 5a fb 00 00                ; FREADLINE - (next: fb5a FREAD)
fb4a: 4b 02 00 00 02             ; XT=024b, flags=02
fb4f: 09 46 52 45 41 44 4c 49 4e 45 00 ; 9, FREADLINE
;
fb5a: 6a fb 00 00                ; FREAD - (next: fb6a FOPEN)
fb5e: 44 02 00 00 02             ; XT=0244, flags=02
fb63: 05 46 52 45 41 44 00       ; 5, FREAD
;
fb6a: 7a fb 00 00                ; FOPEN - (next: fb7a COMPARE)
fb6e: 3d 02 00 00 02             ; XT=023d, flags=02
fb73: 05 46 4f 50 45 4e 00       ; 5, FOPEN
;
fb7a: 8c fb 00 00                ; COMPARE - (next: fb8c OVER)
fb7e: 36 02 00 00 02             ; XT=0236, flags=02
fb83: 07 43 4f 4d 50 41 52 45 00 ; 7, COMPARE
;
fb8c: 9b fb 00 00                ; OVER - (next: fb9b EMIT)
fb90: 2f 02 00 00 02             ; XT=022f, flags=02
fb95: 04 4f 56 45 52 00          ; 4, OVER
;
fb9b: aa fb 00 00                ; EMIT - (next: fbaa DICTP)
fb9f: 28 02 00 00 02             ; XT=0228, flags=02
fba4: 04 45 4d 49 54 00          ; 4, EMIT
;
fbaa: ba fb 00 00                ; DICTP - (next: fbba >)
fbae: 1b 02 00 00 02             ; XT=021b, flags=02
fbb3: 05 44 49 43 54 50 00       ; 5, DICTP
;
fbba: c6 fb 00 00                ; > - (next: fbc6 =)
fbbe: 14 02 00 00 02             ; XT=0214, flags=02
fbc3: 01 3e 00                   ; 1, >
;
fbc6: d2 fb 00 00                ; = - (next: fbd2 <)
fbca: 0d 02 00 00 02             ; XT=020d, flags=02
fbcf: 01 3d 00                   ; 1, =
;
fbd2: de fb 00 00                ; < - (next: fbde /)
fbd6: 06 02 00 00 02             ; XT=0206, flags=02
fbdb: 01 3c 00                   ; 1, <
;
fbde: ea fb 00 00                ; / - (next: fbea *)
fbe2: ff 01 00 00 02             ; XT=01ff, flags=02
fbe7: 01 2f 00                   ; 1, /
;
fbea: f6 fb 00 00                ; * - (next: fbf6 -)
fbee: f8 01 00 00 02             ; XT=01f8, flags=02
fbf3: 01 2a 00                   ; 1, *
;
fbf6: 02 fc 00 00                ; - - (next: fc02 +)
fbfa: f1 01 00 00 02             ; XT=01f1, flags=02
fbff: 01 2d 00                   ; 1, -
;
fc02: 0e fc 00 00                ; + - (next: fc0e C!)
fc06: ea 01 00 00 02             ; XT=01ea, flags=02
fc0b: 01 2b 00                   ; 1, +
;
fc0e: 1b fc 00 00                ; C! - (next: fc1b C@)
fc12: e3 01 00 00 02             ; XT=01e3, flags=02
fc17: 02 43 21 00                ; 2, C!
;
fc1b: 28 fc 00 00                ; C@ - (next: fc28 CLITERAL)
fc1f: dc 01 00 00 02             ; XT=01dc, flags=02
fc24: 02 43 40 00                ; 2, C@
;
fc28: 3b fc 00 00                ; CLITERAL - (next: fc3b OR)
fc2c: cf 01 00 00 02             ; XT=01cf, flags=02
fc31: 08 43 4c 49 54 45 52 41 4c 00 ; 8, CLITERAL
;
fc3b: 48 fc 00 00                ; OR - (next: fc48 RET)
fc3f: c8 01 00 00 02             ; XT=01c8, flags=02
fc44: 02 4f 52 00                ; 2, OR
;
fc48: 56 fc 00 00                ; RET - (next: fc56 CALL)
fc4c: bb 01 00 00 00             ; XT=01bb, flags=00
fc51: 03 52 45 54 00             ; 3, RET
;
fc56: 65 fc 00 00                ; CALL - (next: fc65 JMPNZ)
fc5a: ae 01 00 00 00             ; XT=01ae, flags=00
fc5f: 04 43 41 4c 4c 00          ; 4, CALL
;
fc65: 75 fc 00 00                ; JMPNZ - (next: fc75 JMPZ)
fc69: a1 01 00 00 00             ; XT=01a1, flags=00
fc6e: 05 4a 4d 50 4e 5a 00       ; 5, JMPNZ
;
fc75: 84 fc 00 00                ; JMPZ - (next: fc84 JMP)
fc79: 94 01 00 00 00             ; XT=0194, flags=00
fc7e: 04 4a 4d 50 5a 00          ; 4, JMPZ
;
fc84: 92 fc 00 00                ; JMP - (next: fc92 SLITERAL)
fc88: 87 01 00 00 00             ; XT=0187, flags=00
fc8d: 03 4a 4d 50 00             ; 3, JMP
;
fc92: a5 fc 00 00                ; SLITERAL - (next: fca5 DUP)
fc96: 7a 01 00 00 00             ; XT=017a, flags=00
fc9b: 08 53 4c 49 54 45 52 41 4c 00 ; 8, SLITERAL
;
fca5: b3 fc 00 00                ; DUP - (next: fcb3 DROP)
fca9: 73 01 00 00 02             ; XT=0173, flags=02
fcae: 03 44 55 50 00             ; 3, DUP
;
fcb3: c2 fc 00 00                ; DROP - (next: fcc2 SWAP)
fcb7: 6c 01 00 00 02             ; XT=016c, flags=02
fcbc: 04 44 52 4f 50 00          ; 4, DROP
;
fcc2: d1 fc 00 00                ; SWAP - (next: fcd1 !)
fcc6: 65 01 00 00 02             ; XT=0165, flags=02
fccb: 04 53 57 41 50 00          ; 4, SWAP
;
fcd1: dd fc 00 00                ; ! - (next: fcdd @)
fcd5: 5e 01 00 00 02             ; XT=015e, flags=02
fcda: 01 21 00                   ; 1, !
;
fcdd: e9 fc 00 00                ; @ - (next: fce9 LITERAL)
fce1: 57 01 00 00 02             ; XT=0157, flags=02
fce6: 01 40 00                   ; 1, @
;
fce9: fb fc 00 00                ; LITERAL - (next: fcfb ])
fced: 4a 01 00 00 00             ; XT=014a, flags=00
fcf2: 07 4c 49 54 45 52 41 4c 00 ; 7, LITERAL
;
fcfb: 07 fd 00 00                ; ] - (next: fd07 [)
fcff: 3c 01 00 00 01             ; XT=013c, flags=01
fd04: 01 5d 00                   ; 1, ]
;
fd07: 13 fd 00 00                ; [ - (next: fd13 ,)
fd0b: 2e 01 00 00 01             ; XT=012e, flags=01
fd10: 01 5b 00                   ; 1, [
;
fd13: 1f fd 00 00                ; , - (next: fd1f C,)
fd17: 11 01 00 00 00             ; XT=0111, flags=00
fd1c: 01 2c 00                   ; 1, ,
;
fd1f: 2c fd 00 00                ; C, - (next: fd2c LAST)
fd23: f7 00 00 00 00             ; XT=00f7, flags=00
fd28: 02 43 2c 00                ; 2, C,
;
fd2c: 3b fd 00 00                ; LAST - (next: fd3b HERE)
fd30: eb 00 00 00 00             ; XT=00eb, flags=00
fd35: 04 4c 41 53 54 00          ; 4, LAST
;
fd3b: 4a fd 00 00                ; HERE - (next: fd4a CELL)
fd3f: df 00 00 00 00             ; XT=00df, flags=00
fd44: 04 48 45 52 45 00          ; 4, HERE
;
fd4a: 59 fd 00 00                ; CELL - (next: fd59 INPUT-FP)
fd4e: d7 00 00 00 00             ; XT=00d7, flags=00
fd53: 04 43 45 4c 4c 00          ; 4, CELL
;
fd59: 6c fd 00 00                ; INPUT-FP - (next: fd6c #LEN)
fd5d: c7 00 00 00 00             ; XT=00c7, flags=00
fd62: 08 49 4e 50 55 54 2d 46 50 00 ; 8, INPUT-FP
;
fd6c: 7b fd 00 00                ; #LEN - (next: fd7b #NEG)
fd70: b8 00 00 00 00             ; XT=00b8, flags=00
fd75: 04 23 4c 45 4e 00          ; 4, #LEN
;
fd7b: 8a fd 00 00                ; #NEG - (next: fd8a (tmp))
fd7f: a9 00 00 00 00             ; XT=00a9, flags=00
fd84: 04 23 4e 45 47 00          ; 4, #NEG
;
fd8a: 9a fd 00 00                ; (tmp) - (next: fd9a >IN)
fd8e: 9a 00 00 00 00             ; XT=009a, flags=00
fd93: 05 28 74 6d 70 29 00       ; 5, (tmp)
;
fd9a: a8 fd 00 00                ; >IN - (next: fda8 (MEM_SZ))
fd9e: 8b 00 00 00 00             ; XT=008b, flags=00
fda3: 03 3e 49 4e 00             ; 3, >IN
;
fda8: bb fd 00 00                ; (MEM_SZ) - (next: fdbb STATE)
fdac: 7c 00 00 00 00             ; XT=007c, flags=00
fdb1: 08 28 4d 45 4d 5f 53 5a 29 00 ; 8, (MEM_SZ)
;
fdbb: cb fd 00 00                ; STATE - (next: fdcb BASE)
fdbf: 6d 00 00 00 00             ; XT=006d, flags=00
fdc4: 05 53 54 41 54 45 00       ; 5, STATE
;
fdcb: da fd 00 00                ; BASE - (next: fdda (LAST))
fdcf: 5e 00 00 00 00             ; XT=005e, flags=00
fdd4: 04 42 41 53 45 00          ; 4, BASE
;
fdda: eb fd 00 00                ; (LAST) - (next: fdeb (HERE))
fdde: 4f 00 00 00 00             ; XT=004f, flags=00
fde3: 06 28 4c 41 53 54 29 00    ; 6, (LAST)
;
fdeb: fc fd 00 00                ; (HERE) - (next: fdfc <end>)
fdef: 40 00 00 00 00             ; XT=0040, flags=00
fdf4: 06 28 48 45 52 45 29 00    ; 6, (HERE)
;
fdfc: 00 00 00 00                ; End.
