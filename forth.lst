; memory-size: 262144 bytes, (40000 hex)
; data-stack: 3fe00, grows up
; return-stack: 3fffc, grows down
;
0000: 08 90 12 00 00             ; JMP main (1290)
;
0005: 00 0a 04
0008: 00000000 00000000
0010: 00001748 0003ec82 00000000 00000000
0020: 00000000 00000000 00000000 00000000
0030: 00000000 00000000 00000000 00000000
;
0040: 18 ed fd 03 00             ; DICTP BASE (3fded)
0045: 0e 06                      ; CLITERAL 6
0047: 0c                         ; RET
;
0048: 18 de fd 03 00             ; DICTP CELL (3fdde)
004d: 0e 04                      ; CLITERAL 4
004f: 0c                         ; RET
;
0050: 18 d1 fd 03 00             ; DICTP DP (3fdd1)
0055: 0e 10                      ; CLITERAL 16
0057: 0c                         ; RET
;
0058: 18 c0 fd 03 00             ; DICTP (LAST) (3fdc0)
005d: 0e 14                      ; CLITERAL 20
005f: 0c                         ; RET
;
0060: 18 ad fd 03 00             ; DICTP INPUT-FP (3fdad)
0065: 0e 1c                      ; CLITERAL 28
0067: 0c                         ; RET
;
0068: 18 9d fd 03 00             ; DICTP STATE (3fd9d)
006d: 0e 20                      ; CLITERAL 32
006f: 0c                         ; RET
;
0070: 18 90 fd 03 00             ; DICTP C, (3fd90)
0075: 0e 10                      ; CLITERAL 16
0077: 02                         ; FETCH
0078: 10                         ; CSTORE
0079: 0e 10                      ; CLITERAL 16
007b: 02                         ; FETCH
007c: 0e 01                      ; CLITERAL 1
007e: 11                         ; ADD
007f: 0e 10                      ; CLITERAL 16
0081: 03                         ; STORE
0082: 0c                         ; RET
;
0083: 18 7f fd 03 00             ; DICTP a.PUSH (3fd7f)
0088: 0e 01                      ; CLITERAL 1
008a: 0b 70 00 00 00             ; CALL C, (0070)
008f: 0c                         ; RET
;
0090: 18 6d fd 03 00             ; DICTP a.CPUSH (3fd6d)
0095: 0e 0e                      ; CLITERAL 14
0097: 0b 70 00 00 00             ; CALL C, (0070)
009c: 0c                         ; RET
;
009d: 18 5b fd 03 00             ; DICTP a.FETCH (3fd5b)
00a2: 0e 02                      ; CLITERAL 2
00a4: 0b 70 00 00 00             ; CALL C, (0070)
00a9: 0c                         ; RET
;
00aa: 18 49 fd 03 00             ; DICTP a.STORE (3fd49)
00af: 0e 03                      ; CLITERAL 3
00b1: 0b 70 00 00 00             ; CALL C, (0070)
00b6: 0c                         ; RET
;
00b7: 18 36 fd 03 00             ; DICTP a.CFETCH (3fd36)
00bc: 0e 0f                      ; CLITERAL 15
00be: 0b 70 00 00 00             ; CALL C, (0070)
00c3: 0c                         ; RET
;
00c4: 18 23 fd 03 00             ; DICTP a.CSTORE (3fd23)
00c9: 0e 10                      ; CLITERAL 16
00cb: 0b 70 00 00 00             ; CALL C, (0070)
00d0: 0c                         ; RET
;
00d1: 18 12 fd 03 00             ; DICTP a.SWAP (3fd12)
00d6: 0e 04                      ; CLITERAL 4
00d8: 0b 70 00 00 00             ; CALL C, (0070)
00dd: 0c                         ; RET
;
00de: 18 01 fd 03 00             ; DICTP a.DROP (3fd01)
00e3: 0e 05                      ; CLITERAL 5
00e5: 0b 70 00 00 00             ; CALL C, (0070)
00ea: 0c                         ; RET
;
00eb: 18 f1 fc 03 00             ; DICTP a.DUP (3fcf1)
00f0: 0e 06                      ; CLITERAL 6
00f2: 0b 70 00 00 00             ; CALL C, (0070)
00f7: 0c                         ; RET
;
00f8: 18 e0 fc 03 00             ; DICTP a.OVER (3fce0)
00fd: 0e 1a                      ; CLITERAL 26
00ff: 0b 70 00 00 00             ; CALL C, (0070)
0104: 0c                         ; RET
;
0105: 18 d0 fc 03 00             ; DICTP a.JMP (3fcd0)
010a: 0e 08                      ; CLITERAL 8
010c: 0b 70 00 00 00             ; CALL C, (0070)
0111: 0c                         ; RET
;
0112: 18 bf fc 03 00             ; DICTP a.JMPZ (3fcbf)
0117: 0e 09                      ; CLITERAL 9
0119: 0b 70 00 00 00             ; CALL C, (0070)
011e: 0c                         ; RET
;
011f: 18 ad fc 03 00             ; DICTP a.JMPNZ (3fcad)
0124: 0e 0a                      ; CLITERAL 10
0126: 0b 70 00 00 00             ; CALL C, (0070)
012b: 0c                         ; RET
;
012c: 18 9c fc 03 00             ; DICTP a.CALL (3fc9c)
0131: 0e 0b                      ; CLITERAL 11
0133: 0b 70 00 00 00             ; CALL C, (0070)
0138: 0c                         ; RET
;
0139: 18 8c fc 03 00             ; DICTP a.RET (3fc8c)
013e: 0e 0c                      ; CLITERAL 12
0140: 0b 70 00 00 00             ; CALL C, (0070)
0145: 0c                         ; RET
;
0146: 18 78 fc 03 00             ; DICTP a.COMPARE (3fc78)
014b: 0e 1b                      ; CLITERAL 27
014d: 0b 70 00 00 00             ; CALL C, (0070)
0152: 0c                         ; RET
;
0153: 18 63 fc 03 00             ; DICTP a.COMPAREI (3fc63)
0158: 0e 28                      ; CLITERAL 40
015a: 0b 70 00 00 00             ; CALL C, (0070)
015f: 0c                         ; RET
;
0160: 18 53 fc 03 00             ; DICTP a.ADD (3fc53)
0165: 0e 11                      ; CLITERAL 17
0167: 0b 70 00 00 00             ; CALL C, (0070)
016c: 0c                         ; RET
;
016d: 18 43 fc 03 00             ; DICTP a.SUB (3fc43)
0172: 0e 12                      ; CLITERAL 18
0174: 0b 70 00 00 00             ; CALL C, (0070)
0179: 0c                         ; RET
;
017a: 18 33 fc 03 00             ; DICTP a.MUL (3fc33)
017f: 0e 13                      ; CLITERAL 19
0181: 0b 70 00 00 00             ; CALL C, (0070)
0186: 0c                         ; RET
;
0187: 18 23 fc 03 00             ; DICTP a.DIV (3fc23)
018c: 0e 14                      ; CLITERAL 20
018e: 0b 70 00 00 00             ; CALL C, (0070)
0193: 0c                         ; RET
;
0194: 18 14 fc 03 00             ; DICTP a.LT (3fc14)
0199: 0e 15                      ; CLITERAL 21
019b: 0b 70 00 00 00             ; CALL C, (0070)
01a0: 0c                         ; RET
;
01a1: 18 05 fc 03 00             ; DICTP a.EQ (3fc05)
01a6: 0e 16                      ; CLITERAL 22
01a8: 0b 70 00 00 00             ; CALL C, (0070)
01ad: 0c                         ; RET
;
01ae: 18 f6 fb 03 00             ; DICTP a.GT (3fbf6)
01b3: 0e 17                      ; CLITERAL 23
01b5: 0b 70 00 00 00             ; CALL C, (0070)
01ba: 0c                         ; RET
;
01bb: 18 e4 fb 03 00             ; DICTP a.DICTP (3fbe4)
01c0: 0e 18                      ; CLITERAL 24
01c2: 0b 70 00 00 00             ; CALL C, (0070)
01c7: 0c                         ; RET
;
01c8: 18 d3 fb 03 00             ; DICTP a.EMIT (3fbd3)
01cd: 0e 19                      ; CLITERAL 25
01cf: 0b 70 00 00 00             ; CALL C, (0070)
01d4: 0c                         ; RET
;
01d5: 18 c1 fb 03 00             ; DICTP a.FOPEN (3fbc1)
01da: 0e 1c                      ; CLITERAL 28
01dc: 0b 70 00 00 00             ; CALL C, (0070)
01e1: 0c                         ; RET
;
01e2: 18 af fb 03 00             ; DICTP a.FREAD (3fbaf)
01e7: 0e 1d                      ; CLITERAL 29
01e9: 0b 70 00 00 00             ; CALL C, (0070)
01ee: 0c                         ; RET
;
01ef: 18 99 fb 03 00             ; DICTP a.FREADLINE (3fb99)
01f4: 0e 1e                      ; CLITERAL 30
01f6: 0b 70 00 00 00             ; CALL C, (0070)
01fb: 0c                         ; RET
;
01fc: 18 86 fb 03 00             ; DICTP a.FWRITE (3fb86)
0201: 0e 1f                      ; CLITERAL 31
0203: 0b 70 00 00 00             ; CALL C, (0070)
0208: 0c                         ; RET
;
0209: 18 73 fb 03 00             ; DICTP a.FCLOSE (3fb73)
020e: 0e 20                      ; CLITERAL 32
0210: 0b 70 00 00 00             ; CALL C, (0070)
0215: 0c                         ; RET
;
0216: 18 5e fb 03 00             ; DICTP a.SLITERAL (3fb5e)
021b: 0e 07                      ; CLITERAL 7
021d: 0b 70 00 00 00             ; CALL C, (0070)
0222: 0c                         ; RET
;
0223: 18 4d fb 03 00             ; DICTP a.DTOR (3fb4d)
0228: 0e 21                      ; CLITERAL 33
022a: 0b 70 00 00 00             ; CALL C, (0070)
022f: 0c                         ; RET
;
0230: 18 3c fb 03 00             ; DICTP a.RTOD (3fb3c)
0235: 0e 22                      ; CLITERAL 34
0237: 0b 70 00 00 00             ; CALL C, (0070)
023c: 0c                         ; RET
;
023d: 18 2b fb 03 00             ; DICTP a.PICK (3fb2b)
0242: 0e 25                      ; CLITERAL 37
0244: 0b 70 00 00 00             ; CALL C, (0070)
0249: 0c                         ; RET
;
024a: 18 16 fb 03 00             ; DICTP a.LOGLEVEL (3fb16)
024f: 0e 23                      ; CLITERAL 35
0251: 0b 70 00 00 00             ; CALL C, (0070)
0256: 0c                         ; RET
;
0257: 18 04 fb 03 00             ; DICTP a.DEPTH (3fb04)
025c: 0e 26                      ; CLITERAL 38
025e: 0b 70 00 00 00             ; CALL C, (0070)
0263: 0c                         ; RET
;
0264: 18 f4 fa 03 00             ; DICTP a.AND (3faf4)
0269: 0e 24                      ; CLITERAL 36
026b: 0b 70 00 00 00             ; CALL C, (0070)
0270: 0c                         ; RET
;
0271: 18 e5 fa 03 00             ; DICTP a.OR (3fae5)
0276: 0e 0d                      ; CLITERAL 13
0278: 0b 70 00 00 00             ; CALL C, (0070)
027d: 0c                         ; RET
;
027e: 18 d3 fa 03 00             ; DICTP a.GETCH (3fad3)
0283: 0e 27                      ; CLITERAL 39
0285: 0b 70 00 00 00             ; CALL C, (0070)
028a: 0c                         ; RET
;
028b: 18 c1 fa 03 00             ; DICTP a.BREAK (3fac1)
0290: 0e fd                      ; CLITERAL 253
0292: 0b 70 00 00 00             ; CALL C, (0070)
0297: 0c                         ; RET
;
0298: 18 af fa 03 00             ; DICTP a.RESET (3faaf)
029d: 0e fe                      ; CLITERAL 254
029f: 0b 70 00 00 00             ; CALL C, (0070)
02a4: 0c                         ; RET
;
02a5: 18 9f fa 03 00             ; DICTP a.BYE (3fa9f)
02aa: 0e ff                      ; CLITERAL 255
02ac: 0b 70 00 00 00             ; CALL C, (0070)
02b1: 0c                         ; RET
;
02b2: 18 93 fa 03 00             ; DICTP @ (3fa93)
02b7: 02                         ; FETCH
02b8: 0c                         ; RET
;
02b9: 18 87 fa 03 00             ; DICTP ! (3fa87)
02be: 03                         ; STORE
02bf: 0c                         ; RET
;
02c0: 18 7a fa 03 00             ; DICTP C@ (3fa7a)
02c5: 0f                         ; CFETCH
02c6: 0c                         ; RET
;
02c7: 18 6d fa 03 00             ; DICTP C! (3fa6d)
02cc: 10                         ; CSTORE
02cd: 0c                         ; RET
;
02ce: 18 5e fa 03 00             ; DICTP SWAP (3fa5e)
02d3: 04                         ; SWAP
02d4: 0c                         ; RET
;
02d5: 18 4f fa 03 00             ; DICTP DROP (3fa4f)
02da: 05                         ; DROP
02db: 0c                         ; RET
;
02dc: 18 41 fa 03 00             ; DICTP DUP (3fa41)
02e1: 06                         ; DUP
02e2: 0c                         ; RET
;
02e3: 18 32 fa 03 00             ; DICTP OVER (3fa32)
02e8: 1a                         ; OVER
02e9: 0c                         ; RET
;
02ea: 18 20 fa 03 00             ; DICTP COMPARE (3fa20)
02ef: 1b                         ; COMPARE
02f0: 0c                         ; RET
;
02f1: 18 0d fa 03 00             ; DICTP COMPAREI (3fa0d)
02f6: 28                         ; COMPAREI
02f7: 0c                         ; RET
;
02f8: 18 01 fa 03 00             ; DICTP + (3fa01)
02fd: 11                         ; ADD
02fe: 0c                         ; RET
;
02ff: 18 f5 f9 03 00             ; DICTP - (3f9f5)
0304: 12                         ; SUB
0305: 0c                         ; RET
;
0306: 18 e9 f9 03 00             ; DICTP * (3f9e9)
030b: 13                         ; MUL
030c: 0c                         ; RET
;
030d: 18 dd f9 03 00             ; DICTP / (3f9dd)
0312: 14                         ; DIV
0313: 0c                         ; RET
;
0314: 18 d1 f9 03 00             ; DICTP < (3f9d1)
0319: 15                         ; LT
031a: 0c                         ; RET
;
031b: 18 c5 f9 03 00             ; DICTP = (3f9c5)
0320: 16                         ; EQ
0321: 0c                         ; RET
;
0322: 18 b9 f9 03 00             ; DICTP > (3f9b9)
0327: 17                         ; GT
0328: 0c                         ; RET
;
0329: 18 aa f9 03 00             ; DICTP EMIT (3f9aa)
032e: 19                         ; EMIT
032f: 0c                         ; RET
;
0330: 18 9a f9 03 00             ; DICTP FOPEN (3f99a)
0335: 1c                         ; FOPEN
0336: 0c                         ; RET
;
0337: 18 8a f9 03 00             ; DICTP FREAD (3f98a)
033c: 1d                         ; FREAD
033d: 0c                         ; RET
;
033e: 18 76 f9 03 00             ; DICTP FREADLINE (3f976)
0343: 1e                         ; FREADLINE
0344: 0c                         ; RET
;
0345: 18 65 f9 03 00             ; DICTP FWRITE (3f965)
034a: 1f                         ; FWRITE
034b: 0c                         ; RET
;
034c: 18 54 f9 03 00             ; DICTP FCLOSE (3f954)
0351: 20                         ; FCLOSE
0352: 0c                         ; RET
;
0353: 18 47 f9 03 00             ; DICTP >R (3f947)
0358: 21                         ; DTOR
0359: 0c                         ; RET
;
035a: 18 3a f9 03 00             ; DICTP R> (3f93a)
035f: 22                         ; RTOD
0360: 0c                         ; RET
;
0361: 18 2b f9 03 00             ; DICTP PICK (3f92b)
0366: 25                         ; PICK
0367: 0c                         ; RET
;
0368: 18 1b f9 03 00             ; DICTP DEPTH (3f91b)
036d: 26                         ; DEPTH
036e: 0c                         ; RET
;
036f: 18 0d f9 03 00             ; DICTP AND (3f90d)
0374: 24                         ; AND
0375: 0c                         ; RET
;
0376: 18 00 f9 03 00             ; DICTP OR (3f900)
037b: 0d                         ; OR
037c: 0c                         ; RET
;
037d: 18 f0 f8 03 00             ; DICTP GETCH (3f8f0)
0382: 27                         ; GETCH
0383: 0c                         ; RET
;
0384: 18 e0 f8 03 00             ; DICTP BREAK (3f8e0)
0389: fd                         ; BREAK
038a: 0c                         ; RET
;
038b: 18 d0 f8 03 00             ; DICTP RESET (3f8d0)
0390: fe                         ; RESET
0391: 0c                         ; RET
;
0392: 18 c2 f8 03 00             ; DICTP BYE (3f8c2)
0397: ff                         ; BYE
0398: 0c                         ; RET
;
0399: 18 b1 f8 03 00             ; DICTP INLINE (3f8b1)
039e: 0e 14                      ; CLITERAL 20
03a0: 02                         ; FETCH
03a1: 0e 02                      ; CLITERAL 2
03a3: 0e 04                      ; CLITERAL 4
03a5: 13                         ; MUL
03a6: 11                         ; ADD
03a7: 06                         ; DUP
03a8: 0f                         ; CFETCH
03a9: 0e 02                      ; CLITERAL 2
03ab: 0d                         ; OR
03ac: 04                         ; SWAP
03ad: 10                         ; CSTORE
03ae: 0c                         ; RET
;
03af: 18 a1 f8 03 00             ; DICTP CELLS (3f8a1)
03b4: 0e 04                      ; CLITERAL 4
03b6: 13                         ; MUL
03b7: 0c                         ; RET
;
03b8: 18 88 f8 03 00             ; DICTP FLAG_IMMEDIATE (3f888)
03bd: 0e 01                      ; CLITERAL 1
03bf: 0c                         ; RET
;
03c0: 18 72 f8 03 00             ; DICTP FLAG_INLINE (3f872)
03c5: 0e 02                      ; CLITERAL 2
03c7: 0c                         ; RET
;
03c8: 18 5e f8 03 00             ; DICTP IMMEDIATE (3f85e)
03cd: 0e 14                      ; CLITERAL 20
03cf: 02                         ; FETCH
03d0: 0e 02                      ; CLITERAL 2
03d2: 0e 04                      ; CLITERAL 4
03d4: 13                         ; MUL
03d5: 11                         ; ADD
03d6: 06                         ; DUP
03d7: 0f                         ; CFETCH
03d8: 0e 01                      ; CLITERAL 1
03da: 0d                         ; OR
03db: 04                         ; SWAP
03dc: 10                         ; CSTORE
03dd: 0c                         ; RET
;
03de: 18 4f f8 03 00             ; DICTP LAST (3f84f)
03e3: 0e 14                      ; CLITERAL 20
03e5: 02                         ; FETCH
03e6: 0c                         ; RET
;
03e7: 18 40 f8 03 00             ; DICTP HERE (3f840)
03ec: 0e 10                      ; CLITERAL 16
03ee: 02                         ; FETCH
03ef: 0c                         ; RET
;
03f0: 18 34 f8 03 00             ; DICTP , (3f834)
03f5: 0e 10                      ; CLITERAL 16
03f7: 02                         ; FETCH
03f8: 03                         ; STORE
03f9: 0e 10                      ; CLITERAL 16
03fb: 02                         ; FETCH
03fc: 0e 04                      ; CLITERAL 4
03fe: 11                         ; ADD
03ff: 0e 10                      ; CLITERAL 16
0401: 03                         ; STORE
0402: 0c                         ; RET
;
0403: 18 21 f8 03 00             ; DICTP LOGLEVEL (3f821)
0408: 23                         ; LOGLEVEL
0409: 0c                         ; RET
;
040a: 18 0e f8 03 00             ; DICTP TRACE-ON (3f80e)
040f: 0e 02                      ; CLITERAL 2
0411: 23                         ; LOGLEVEL
0412: 0c                         ; RET
;
0413: 18 fa f7 03 00             ; DICTP TRACE-OFF (3f7fa)
0418: 0e 00                      ; CLITERAL 0
041a: 23                         ; LOGLEVEL
041b: 0c                         ; RET
;
041c: 18 e7 f7 03 00             ; DICTP DEBUG-ON (3f7e7)
0421: 0e 01                      ; CLITERAL 1
0423: 23                         ; LOGLEVEL
0424: 0c                         ; RET
;
0425: 18 d3 f7 03 00             ; DICTP DEBUG-OFF (3f7d3)
042a: 0e 00                      ; CLITERAL 0
042c: 23                         ; LOGLEVEL
042d: 0c                         ; RET
;
042e: 18 c5 f7 03 00             ; DICTP HEX (3f7c5)
0433: 0e 10                      ; CLITERAL 16
0435: 0e 06                      ; CLITERAL 6
0437: 10                         ; CSTORE
0438: 0c                         ; RET
;
0439: 18 b3 f7 03 00             ; DICTP DECIMAL (3f7b3)
043e: 0e 0a                      ; CLITERAL 10
0440: 0e 06                      ; CLITERAL 6
0442: 10                         ; CSTORE
0443: 0c                         ; RET
;
0444: 18 a3 f7 03 00             ; DICTP OCTAL (3f7a3)
0449: 0e 08                      ; CLITERAL 8
044b: 0e 06                      ; CLITERAL 6
044d: 10                         ; CSTORE
044e: 0c                         ; RET
;
044f: 18 92 f7 03 00             ; DICTP BINARY (3f792)
0454: 0e 02                      ; CLITERAL 2
0456: 0e 06                      ; CLITERAL 6
0458: 10                         ; CSTORE
0459: 0c                         ; RET
;
045a: 18 85 f7 03 00             ; DICTP ON (3f785)
045f: 0e 01                      ; CLITERAL 1
0461: 04                         ; SWAP
0462: 03                         ; STORE
0463: 0c                         ; RET
;
0464: 18 77 f7 03 00             ; DICTP OFF (3f777)
0469: 0e 00                      ; CLITERAL 0
046b: 04                         ; SWAP
046c: 03                         ; STORE
046d: 0c                         ; RET
;
046e: 18 6b f7 03 00             ; DICTP [ (3f76b)
0473: 0e 00                      ; CLITERAL 0
0475: 0e 20                      ; CLITERAL 32
0477: 03                         ; STORE
0478: 0c                         ; RET
;
0479: 18 5f f7 03 00             ; DICTP ] (3f75f)
047e: 0e 01                      ; CLITERAL 1
0480: 0e 20                      ; CLITERAL 32
0482: 03                         ; STORE
0483: 0c                         ; RET
;
0484: 18 4a f7 03 00             ; DICTP ?COMPILING (3f74a)
0489: 0e 20                      ; CLITERAL 32
048b: 02                         ; FETCH
048c: 0c                         ; RET
;
048d: 18 3b f7 03 00             ; DICTP THEN (3f73b)
0492: 0b 84 04 00 00             ; CALL ?COMPILING (0484)
0497: 09 a1 04 00 00             ; JMPZ 04a1
049c: 0e 10                      ; CLITERAL 16
049e: 02                         ; FETCH
049f: 04                         ; SWAP
04a0: 03                         ; STORE
04a1: 0c                         ; RET
;
04a2: 18 2e f7 03 00             ; DICTP IF (3f72e)
04a7: 0b 84 04 00 00             ; CALL ?COMPILING (0484)
04ac: 09 c2 04 00 00             ; JMPZ 04c2
04b1: 0e 09                      ; CLITERAL 9
04b3: 0b 70 00 00 00             ; CALL C, (0070)
04b8: 0e 10                      ; CLITERAL 16
04ba: 02                         ; FETCH
04bb: 0e 00                      ; CLITERAL 0
04bd: 0b f0 03 00 00             ; CALL , (03f0)
04c2: 0c                         ; RET
;
04c3: 18 1f f7 03 00             ; DICTP ELSE (3f71f)
04c8: 0b 84 04 00 00             ; CALL ?COMPILING (0484)
04cd: 09 e9 04 00 00             ; JMPZ 04e9
04d2: 0e 08                      ; CLITERAL 8
04d4: 0b 70 00 00 00             ; CALL C, (0070)
04d9: 0e 10                      ; CLITERAL 16
04db: 02                         ; FETCH
04dc: 04                         ; SWAP
04dd: 0e 00                      ; CLITERAL 0
04df: 0b f0 03 00 00             ; CALL , (03f0)
04e4: 0e 10                      ; CLITERAL 16
04e6: 02                         ; FETCH
04e7: 04                         ; SWAP
04e8: 03                         ; STORE
04e9: 0c                         ; RET
;
04ea: 18 11 f7 03 00             ; DICTP >IN (3f711)
04ef: 01 f5 04 00 00             ; LITERAL 1269 (4f5)
04f4: 0c                         ; RET
04f5: c3                         ; RESET
04f6: eb                         ; RESET
04f7: 03                         ; STORE
04f8: 00                         ; RESET
04f9: 0c                         ; RET
;
04fa: 18 01 f7 03 00             ; DICTP isNeg (3f701)
04ff: 01 05 05 00 00             ; LITERAL 1285 (505)
0504: 0c                         ; RET
0505: 00                         ; RESET
0506: 00                         ; RESET
0507: 00                         ; RESET
0508: 00                         ; RESET
0509: 0c                         ; RET
;
050a: 18 ef f6 03 00             ; DICTP (MEM_K) (3f6ef)
050f: 01 15 05 00 00             ; LITERAL 1301 (515)
0514: 0c                         ; RET
0515: 00                         ; RESET
0516: 01 00 00 0c 18             ; LITERAL 403439616 (180c0000)
051b: de                         ; RESET
051c: f6                         ; RESET
051d: 03                         ; STORE
051e: 00                         ; RESET
051f: 0b 0a 05 00 00             ; CALL (MEM_K) (050a)
0524: 02                         ; FETCH
0525: 01 00 04 00 00             ; LITERAL 1024 (400)
052a: 13                         ; MUL
052b: 0c                         ; RET
;
052c: 18 d1 f6 03 00             ; DICTP 1+ (3f6d1)
0531: 0e 01                      ; CLITERAL 1
0533: 11                         ; ADD
0534: 0c                         ; RET
;
0535: 18 c4 f6 03 00             ; DICTP 1- (3f6c4)
053a: 0e 01                      ; CLITERAL 1
053c: 12                         ; SUB
053d: 0c                         ; RET
;
053e: 18 b7 f6 03 00             ; DICTP 2* (3f6b7)
0543: 0e 02                      ; CLITERAL 2
0545: 13                         ; MUL
0546: 0c                         ; RET
;
0547: 18 aa f6 03 00             ; DICTP 2/ (3f6aa)
054c: 0e 02                      ; CLITERAL 2
054e: 14                         ; DIV
054f: 0c                         ; RET
;
0550: 18 9d f6 03 00             ; DICTP R@ (3f69d)
0555: 22                         ; RTOD
0556: 06                         ; DUP
0557: 21                         ; DTOR
0558: 0c                         ; RET
;
0559: 18 8d f6 03 00             ; DICTP RDROP (3f68d)
055e: 22                         ; RTOD
055f: 05                         ; DROP
0560: 0c                         ; RET
;
0561: 18 7e f6 03 00             ; DICTP TUCK (3f67e)
0566: 04                         ; SWAP
0567: 1a                         ; OVER
0568: 0c                         ; RET
;
0569: 18 70 f6 03 00             ; DICTP NIP (3f670)
056e: 04                         ; SWAP
056f: 05                         ; DROP
0570: 0c                         ; RET
;
0571: 18 62 f6 03 00             ; DICTP ROT (3f662)
0576: 21                         ; DTOR
0577: 04                         ; SWAP
0578: 22                         ; RTOD
0579: 04                         ; SWAP
057a: 0c                         ; RET
;
057b: 18 53 f6 03 00             ; DICTP -ROT (3f653)
0580: 04                         ; SWAP
0581: 21                         ; DTOR
0582: 04                         ; SWAP
0583: 22                         ; RTOD
0584: 0c                         ; RET
;
0585: 18 46 f6 03 00             ; DICTP += (3f646)
058a: 1a                         ; OVER
058b: 02                         ; FETCH
058c: 11                         ; ADD
058d: 04                         ; SWAP
058e: 03                         ; STORE
058f: 0c                         ; RET
;
0590: 18 39 f6 03 00             ; DICTP -= (3f639)
0595: 1a                         ; OVER
0596: 02                         ; FETCH
0597: 04                         ; SWAP
0598: 12                         ; SUB
0599: 04                         ; SWAP
059a: 03                         ; STORE
059b: 0c                         ; RET
;
059c: 18 2c f6 03 00             ; DICTP ++ (3f62c)
05a1: 0e 01                      ; CLITERAL 1
05a3: 0b 85 05 00 00             ; CALL += (0585)
05a8: 0c                         ; RET
;
05a9: 18 1f f6 03 00             ; DICTP -- (3f61f)
05ae: 0e 01                      ; CLITERAL 1
05b0: 0b 90 05 00 00             ; CALL -= (0590)
05b5: 0c                         ; RET
;
05b6: 18 11 f6 03 00             ; DICTP C++ (3f611)
05bb: 06                         ; DUP
05bc: 0f                         ; CFETCH
05bd: 0e 01                      ; CLITERAL 1
05bf: 11                         ; ADD
05c0: 04                         ; SWAP
05c1: 10                         ; CSTORE
05c2: 0c                         ; RET
;
05c3: 18 03 f6 03 00             ; DICTP C-- (3f603)
05c8: 06                         ; DUP
05c9: 0f                         ; CFETCH
05ca: 0e 01                      ; CLITERAL 1
05cc: 12                         ; SUB
05cd: 04                         ; SWAP
05ce: 10                         ; CSTORE
05cf: 0c                         ; RET
;
05d0: 18 f6 f5 03 00             ; DICTP +! (3f5f6)
05d5: 04                         ; SWAP
05d6: 1a                         ; OVER
05d7: 02                         ; FETCH
05d8: 11                         ; ADD
05d9: 04                         ; SWAP
05da: 03                         ; STORE
05db: 0c                         ; RET
;
05dc: 18 e8 f5 03 00             ; DICTP C+! (3f5e8)
05e1: 04                         ; SWAP
05e2: 1a                         ; OVER
05e3: 0f                         ; CFETCH
05e4: 11                         ; ADD
05e5: 04                         ; SWAP
05e6: 10                         ; CSTORE
05e7: 0c                         ; RET
;
05e8: 18 db f5 03 00             ; DICTP 0= (3f5db)
05ed: 0e 00                      ; CLITERAL 0
05ef: 16                         ; EQ
05f0: 0c                         ; RET
;
05f1: 18 ce f5 03 00             ; DICTP <> (3f5ce)
05f6: 16                         ; EQ
05f7: 0e 00                      ; CLITERAL 0
05f9: 16                         ; EQ
05fa: 0c                         ; RET
;
05fb: 18 c1 f5 03 00             ; DICTP <= (3f5c1)
0600: 17                         ; GT
0601: 0e 00                      ; CLITERAL 0
0603: 16                         ; EQ
0604: 0c                         ; RET
;
0605: 18 b4 f5 03 00             ; DICTP >= (3f5b4)
060a: 15                         ; LT
060b: 0e 00                      ; CLITERAL 0
060d: 16                         ; EQ
060e: 0c                         ; RET
;
060f: 18 a5 f5 03 00             ; DICTP TRUE (3f5a5)
0614: 0e 01                      ; CLITERAL 1
0616: 0c                         ; RET
;
0617: 18 95 f5 03 00             ; DICTP FALSE (3f595)
061c: 0e 00                      ; CLITERAL 0
061e: 0c                         ; RET
;
061f: 18 87 f5 03 00             ; DICTP NOT (3f587)
0624: 0e 00                      ; CLITERAL 0
0626: 16                         ; EQ
0627: 0c                         ; RET
;
0628: 18 78 f5 03 00             ; DICTP 2DUP (3f578)
062d: 1a                         ; OVER
062e: 1a                         ; OVER
062f: 0c                         ; RET
;
0630: 18 68 f5 03 00             ; DICTP 2DROP (3f568)
0635: 05                         ; DROP
0636: 05                         ; DROP
0637: 0c                         ; RET
;
0638: 18 58 f5 03 00             ; DICTP COUNT (3f558)
063d: 06                         ; DUP
063e: 0e 01                      ; CLITERAL 1
0640: 11                         ; ADD
0641: 04                         ; SWAP
0642: 0f                         ; CFETCH
0643: 0c                         ; RET
;
0644: 18 48 f5 03 00             ; DICTP LEAVE (3f548)
0649: 0b 84 04 00 00             ; CALL ?COMPILING (0484)
064e: 09 5a 06 00 00             ; JMPZ 065a
0653: 0e 0c                      ; CLITERAL 12
0655: 0b 70 00 00 00             ; CALL C, (0070)
065a: 0c                         ; RET
;
065b: 18 38 f5 03 00             ; DICTP BEGIN (3f538)
0660: 0b 84 04 00 00             ; CALL ?COMPILING (0484)
0665: 09 6d 06 00 00             ; JMPZ 066d
066a: 0e 10                      ; CLITERAL 16
066c: 02                         ; FETCH
066d: 0c                         ; RET
;
066e: 18 28 f5 03 00             ; DICTP AGAIN (3f528)
0673: 0b 84 04 00 00             ; CALL ?COMPILING (0484)
0678: 09 89 06 00 00             ; JMPZ 0689
067d: 0e 08                      ; CLITERAL 8
067f: 0b 70 00 00 00             ; CALL C, (0070)
0684: 0b f0 03 00 00             ; CALL , (03f0)
0689: 0c                         ; RET
;
068a: 18 18 f5 03 00             ; DICTP WHILE (3f518)
068f: 0b 84 04 00 00             ; CALL ?COMPILING (0484)
0694: 09 a5 06 00 00             ; JMPZ 06a5
0699: 0e 0a                      ; CLITERAL 10
069b: 0b 70 00 00 00             ; CALL C, (0070)
06a0: 0b f0 03 00 00             ; CALL , (03f0)
06a5: 0c                         ; RET
;
06a6: 18 08 f5 03 00             ; DICTP UNTIL (3f508)
06ab: 0b 84 04 00 00             ; CALL ?COMPILING (0484)
06b0: 09 c1 06 00 00             ; JMPZ 06c1
06b5: 0e 09                      ; CLITERAL 9
06b7: 0b 70 00 00 00             ; CALL C, (0070)
06bc: 0b f0 03 00 00             ; CALL , (03f0)
06c1: 0c                         ; RET
;
06c2: 18 f9 f4 03 00             ; DICTP TYPE (3f4f9)
06c7: 06                         ; DUP
06c8: 0e 00                      ; CLITERAL 0
06ca: 16                         ; EQ
06cb: 09 d3 06 00 00             ; JMPZ 06d3
06d0: 05                         ; DROP
06d1: 05                         ; DROP
06d2: 0c                         ; RET
06d3: 04                         ; SWAP
06d4: 06                         ; DUP
06d5: 0f                         ; CFETCH
06d6: 19                         ; EMIT
06d7: 0e 01                      ; CLITERAL 1
06d9: 11                         ; ADD
06da: 04                         ; SWAP
06db: 0e 01                      ; CLITERAL 1
06dd: 12                         ; SUB
06de: 08 c7 06 00 00             ; JMP 06c7
06e3: 0c                         ; RET
;
06e4: 18 ec f4 03 00             ; DICTP CT (3f4ec)
06e9: 0b 38 06 00 00             ; CALL COUNT (0638)
06ee: 0b c2 06 00 00             ; CALL TYPE (06c2)
06f3: 0c                         ; RET
;
06f4: 18 e0 f4 03 00             ; DICTP \ (3f4e0)
06f9: 0e 00                      ; CLITERAL 0
06fb: 0b ea 04 00 00             ; CALL >IN (04ea)
0700: 02                         ; FETCH
0701: 10                         ; CSTORE
0702: 0c                         ; RET
;
0703: 18 d4 f4 03 00             ; DICTP ( (3f4d4)
0708: 0b ea 04 00 00             ; CALL >IN (04ea)
070d: 02                         ; FETCH
070e: 0f                         ; CFETCH
070f: 06                         ; DUP
0710: 0e 00                      ; CLITERAL 0
0712: 16                         ; EQ
0713: 09 34 07 00 00             ; JMPZ 0734
0718: 07 13 6d 69 73 73 69 6e 67 20 63 6c 6f 73 69 6e 67 20 27 29 27 00 ; SLITERAL (0719) [missing closing ')']
072e: 0b e4 06 00 00             ; CALL CT (06e4)
0733: fe                         ; RESET
0734: 0b ea 04 00 00             ; CALL >IN (04ea)
0739: 0b 9c 05 00 00             ; CALL ++ (059c)
073e: 0e 29                      ; CLITERAL 41
0740: 16                         ; EQ
0741: 09 47 07 00 00             ; JMPZ 0747
0746: 0c                         ; RET
0747: 08 08 07 00 00             ; JMP 0708
074c: 0c                         ; RET
;
074d: 18 c5 f4 03 00             ; DICTP CRLF (3f4c5)
0752: 0e 0d                      ; CLITERAL 13
0754: 19                         ; EMIT
0755: 0e 0a                      ; CLITERAL 10
0757: 19                         ; EMIT
0758: 0c                         ; RET
;
0759: 18 b8 f4 03 00             ; DICTP CR (3f4b8)
075e: 0b 4d 07 00 00             ; CALL CRLF (074d)
0763: 0c                         ; RET
;
0764: 18 ab f4 03 00             ; DICTP BL (3f4ab)
0769: 0e 20                      ; CLITERAL 32
076b: 19                         ; EMIT
076c: 0c                         ; RET
;
076d: 18 99 f4 03 00             ; DICTP BETWEEN (3f499)
0772: 0e 02                      ; CLITERAL 2
0774: 25                         ; PICK
0775: 15                         ; LT
0776: 09 80 07 00 00             ; JMPZ 0780
077b: 05                         ; DROP
077c: 05                         ; DROP
077d: 0e 00                      ; CLITERAL 0
077f: 0c                         ; RET
0780: 15                         ; LT
0781: 0e 00                      ; CLITERAL 0
0783: 16                         ; EQ
0784: 0c                         ; RET
;
0785: 18 89 f4 03 00             ; DICTP (tmp) (3f489)
078a: 01 90 07 00 00             ; LITERAL 1936 (790)
078f: 0c                         ; RET
0790: 82                         ; RESET
0791: ec                         ; RESET
0792: 03                         ; STORE
0793: 00                         ; RESET
0794: 18 76 f4 03 00             ; DICTP tmp-init (3f476)
0799: 0e 14                      ; CLITERAL 20
079b: 02                         ; FETCH
079c: 0b 85 07 00 00             ; CALL (tmp) (0785)
07a1: 03                         ; STORE
07a2: 0c                         ; RET
;
07a3: 18 64 f4 03 00             ; DICTP tmp-cur (3f464)
07a8: 0b 85 07 00 00             ; CALL (tmp) (0785)
07ad: 02                         ; FETCH
07ae: 0c                         ; RET
;
07af: 18 50 f4 03 00             ; DICTP tmp-alloc (3f450)
07b4: 0b 85 07 00 00             ; CALL (tmp) (0785)
07b9: 04                         ; SWAP
07ba: 1a                         ; OVER
07bb: 02                         ; FETCH
07bc: 04                         ; SWAP
07bd: 12                         ; SUB
07be: 04                         ; SWAP
07bf: 03                         ; STORE
07c0: 0b a3 07 00 00             ; CALL tmp-cur (07a3)
07c5: 0c                         ; RET
;
07c6: 18 42 f4 03 00             ; DICTP PAD (3f442)
07cb: 0b 94 07 00 00             ; CALL tmp-init (0794)
07d0: 0e c8                      ; CLITERAL 200
07d2: 0b af 07 00 00             ; CALL tmp-alloc (07af)
07d7: 0c                         ; RET
;
07d8: 18 2f f4 03 00             ; DICTP getInput (3f42f)
07dd: 0b c6 07 00 00             ; CALL PAD (07c6)
07e2: 0e 80                      ; CLITERAL 128
07e4: 0e 00                      ; CLITERAL 0
07e6: 1e                         ; FREADLINE
07e7: 05                         ; DROP
07e8: 0b c6 07 00 00             ; CALL PAD (07c6)
07ed: 0c                         ; RET
;
07ee: 18 1e f4 03 00             ; DICTP skipWS (3f41e)
07f3: 06                         ; DUP
07f4: 0f                         ; CFETCH
07f5: 06                         ; DUP
07f6: 09 11 08 00 00             ; JMPZ 0811
07fb: 0e 20                      ; CLITERAL 32
07fd: 17                         ; GT
07fe: 09 09 08 00 00             ; JMPZ 0809
0803: 0c                         ; RET
0804: 08 0c 08 00 00             ; JMP 080c
0809: 0e 01                      ; CLITERAL 1
080b: 11                         ; ADD
080c: 08 13 08 00 00             ; JMP 0813
0811: 05                         ; DROP
0812: 0c                         ; RET
0813: 08 f3 07 00 00             ; JMP 07f3
0818: 0c                         ; RET
;
0819: 18 09 f4 03 00             ; DICTP getOneWord (3f409)
081e: 06                         ; DUP
081f: 21                         ; DTOR
0820: 21                         ; DTOR
0821: 22                         ; RTOD
0822: 06                         ; DUP
0823: 21                         ; DTOR
0824: 0f                         ; CFETCH
0825: 0e 20                      ; CLITERAL 32
0827: 17                         ; GT
0828: 09 37 08 00 00             ; JMPZ 0837
082d: 22                         ; RTOD
082e: 0e 01                      ; CLITERAL 1
0830: 11                         ; ADD
0831: 21                         ; DTOR
0832: 08 4f 08 00 00             ; JMP 084f
0837: 22                         ; RTOD
0838: 06                         ; DUP
0839: 21                         ; DTOR
083a: 0f                         ; CFETCH
083b: 09 4b 08 00 00             ; JMPZ 084b
0840: 0e 00                      ; CLITERAL 0
0842: 22                         ; RTOD
0843: 06                         ; DUP
0844: 21                         ; DTOR
0845: 10                         ; CSTORE
0846: 22                         ; RTOD
0847: 0e 01                      ; CLITERAL 1
0849: 11                         ; ADD
084a: 21                         ; DTOR
084b: 22                         ; RTOD
084c: 22                         ; RTOD
084d: 04                         ; SWAP
084e: 0c                         ; RET
084f: 08 21 08 00 00             ; JMP 0821
0854: 0c                         ; RET
;
0855: 18 f5 f3 03 00             ; DICTP DICT>NEXT (3f3f5)
085a: 0c                         ; RET
;
085b: 18 e3 f3 03 00             ; DICTP DICT>XT (3f3e3)
0860: 0e 04                      ; CLITERAL 4
0862: 11                         ; ADD
0863: 0c                         ; RET
;
0864: 18 ce f3 03 00             ; DICTP DICT>FLAGS (3f3ce)
0869: 0e 02                      ; CLITERAL 2
086b: 0e 04                      ; CLITERAL 4
086d: 13                         ; MUL
086e: 11                         ; ADD
086f: 0c                         ; RET
;
0870: 18 ba f3 03 00             ; DICTP DICT>NAME (3f3ba)
0875: 0b 64 08 00 00             ; CALL DICT>FLAGS (0864)
087a: 0e 01                      ; CLITERAL 1
087c: 11                         ; ADD
087d: 0c                         ; RET
;
087e: 18 a6 f3 03 00             ; DICTP NEXT>DICT (3f3a6)
0883: 0c                         ; RET
;
0884: 18 94 f3 03 00             ; DICTP XT>DICT (3f394)
0889: 0e 04                      ; CLITERAL 4
088b: 12                         ; SUB
088c: 0c                         ; RET
;
088d: 18 7f f3 03 00             ; DICTP FLAGS>DICT (3f37f)
0892: 0e 02                      ; CLITERAL 2
0894: 0e 04                      ; CLITERAL 4
0896: 13                         ; MUL
0897: 12                         ; SUB
0898: 0c                         ; RET
;
0899: 18 6b f3 03 00             ; DICTP NAME>DICT (3f36b)
089e: 0e 01                      ; CLITERAL 1
08a0: 12                         ; SUB
08a1: 0e 02                      ; CLITERAL 2
08a3: 0e 04                      ; CLITERAL 4
08a5: 13                         ; MUL
08a6: 12                         ; SUB
08a7: 0c                         ; RET
;
08a8: 18 56 f3 03 00             ; DICTP DICT.GetXT (3f356)
08ad: 0b 5b 08 00 00             ; CALL DICT>XT (085b)
08b2: 02                         ; FETCH
08b3: 0c                         ; RET
;
08b4: 18 3e f3 03 00             ; DICTP DICT.GetFLAGS (3f33e)
08b9: 0b 64 08 00 00             ; CALL DICT>FLAGS (0864)
08be: 0f                         ; CFETCH
08bf: 0c                         ; RET
;
08c0: 18 29 f3 03 00             ; DICTP DICTP>NAME (3f329)
08c5: 0e 01                      ; CLITERAL 1
08c7: 11                         ; ADD
08c8: 02                         ; FETCH
08c9: 0b 70 08 00 00             ; CALL DICT>NAME (0870)
08ce: 0c                         ; RET
;
08cf: 18 13 f3 03 00             ; DICTP XT.GetDICTP (3f313)
08d4: 06                         ; DUP
08d5: 0f                         ; CFETCH
08d6: 0e 18                      ; CLITERAL 24
08d8: 16                         ; EQ
08d9: 09 e7 08 00 00             ; JMPZ 08e7
08de: 0e 01                      ; CLITERAL 1
08e0: 11                         ; ADD
08e1: 02                         ; FETCH
08e2: 08 e9 08 00 00             ; JMP 08e9
08e7: 05                         ; DROP
08e8: fe                         ; RESET
08e9: 0c                         ; RET
;
08ea: 18 f6 f2 03 00             ; DICTP FLAGS.ISIMMEDIATE? (3f2f6)
08ef: 0e 01                      ; CLITERAL 1
08f1: 24                         ; AND
08f2: 0c                         ; RET
;
08f3: 18 dc f2 03 00             ; DICTP FLAGS.ISINLINE? (3f2dc)
08f8: 0e 02                      ; CLITERAL 2
08fa: 24                         ; AND
08fb: 0c                         ; RET
;
08fc: 18 c0 f2 03 00             ; DICTP DICT.GetIMMEDIATE (3f2c0)
0901: 0b b4 08 00 00             ; CALL DICT.GetFLAGS (08b4)
0906: 0b ea 08 00 00             ; CALL FLAGS.ISIMMEDIATE? (08ea)
090b: 0c                         ; RET
;
090c: 18 a7 f2 03 00             ; DICTP DICT.GetINLINE (3f2a7)
0911: 0b b4 08 00 00             ; CALL DICT.GetFLAGS (08b4)
0916: 0b f3 08 00 00             ; CALL FLAGS.ISINLINE? (08f3)
091b: 0c                         ; RET
;
091c: 18 92 f2 03 00             ; DICTP findInDict (3f292)
0921: 0e 14                      ; CLITERAL 20
0923: 02                         ; FETCH
0924: 21                         ; DTOR
0925: 22                         ; RTOD
0926: 06                         ; DUP
0927: 21                         ; DTOR
0928: 06                         ; DUP
0929: 09 54 09 00 00             ; JMPZ 0954
092e: 0b 70 08 00 00             ; CALL DICT>NAME (0870)
0933: 0e 01                      ; CLITERAL 1
0935: 11                         ; ADD
0936: 1a                         ; OVER
0937: 28                         ; COMPAREI
0938: 09 4f 09 00 00             ; JMPZ 094f
093d: 05                         ; DROP
093e: 22                         ; RTOD
093f: 06                         ; DUP
0940: 21                         ; DTOR
0941: 0b a8 08 00 00             ; CALL DICT.GetXT (08a8)
0946: 22                         ; RTOD
0947: 0b b4 08 00 00             ; CALL DICT.GetFLAGS (08b4)
094c: 0e 01                      ; CLITERAL 1
094e: 0c                         ; RET
094f: 08 5c 09 00 00             ; JMP 095c
0954: 05                         ; DROP
0955: 05                         ; DROP
0956: 22                         ; RTOD
0957: 0e 00                      ; CLITERAL 0
0959: 0e 00                      ; CLITERAL 0
095b: 0c                         ; RET
095c: 22                         ; RTOD
095d: 02                         ; FETCH
095e: 21                         ; DTOR
095f: 08 25 09 00 00             ; JMP 0925
0964: 0c                         ; RET
;
0965: 18 81 f2 03 00             ; DICTP isHEX? (3f281)
096a: 0e 06                      ; CLITERAL 6
096c: 0f                         ; CFETCH
096d: 0e 10                      ; CLITERAL 16
096f: 16                         ; EQ
0970: 0c                         ; RET
;
0971: 18 6c f2 03 00             ; DICTP isNumChar? (3f26c)
0976: 06                         ; DUP
0977: 0e 30                      ; CLITERAL 48
0979: 0e 39                      ; CLITERAL 57
097b: 0b 6d 07 00 00             ; CALL BETWEEN (076d)
0980: 09 8b 09 00 00             ; JMPZ 098b
0985: 0e 30                      ; CLITERAL 48
0987: 12                         ; SUB
0988: 0e 01                      ; CLITERAL 1
098a: 0c                         ; RET
098b: 0b 65 09 00 00             ; CALL isHEX? (0965)
0990: 09 bf 09 00 00             ; JMPZ 09bf
0995: 06                         ; DUP
0996: 0e 41                      ; CLITERAL 65
0998: 0e 46                      ; CLITERAL 70
099a: 0b 6d 07 00 00             ; CALL BETWEEN (076d)
099f: 09 aa 09 00 00             ; JMPZ 09aa
09a4: 0e 37                      ; CLITERAL 55
09a6: 12                         ; SUB
09a7: 0e 01                      ; CLITERAL 1
09a9: 0c                         ; RET
09aa: 06                         ; DUP
09ab: 0e 61                      ; CLITERAL 97
09ad: 0e 66                      ; CLITERAL 102
09af: 0b 6d 07 00 00             ; CALL BETWEEN (076d)
09b4: 09 bf 09 00 00             ; JMPZ 09bf
09b9: 0e 57                      ; CLITERAL 87
09bb: 12                         ; SUB
09bc: 0e 01                      ; CLITERAL 1
09be: 0c                         ; RET
09bf: 0e 00                      ; CLITERAL 0
09c1: 0c                         ; RET
;
09c2: 18 5b f2 03 00             ; DICTP NEGATE (3f25b)
09c7: 0e 00                      ; CLITERAL 0
09c9: 04                         ; SWAP
09ca: 12                         ; SUB
09cb: 0c                         ; RET
;
09cc: 18 4d f2 03 00             ; DICTP ABS (3f24d)
09d1: 06                         ; DUP
09d2: 0e 00                      ; CLITERAL 0
09d4: 15                         ; LT
09d5: 09 df 09 00 00             ; JMPZ 09df
09da: 0b c2 09 00 00             ; CALL NEGATE (09c2)
09df: 0c                         ; RET
;
09e0: 18 39 f2 03 00             ; DICTP isNumber? (3f239)
09e5: 06                         ; DUP
09e6: 0f                         ; CFETCH
09e7: 0e 2d                      ; CLITERAL 45
09e9: 16                         ; EQ
09ea: 06                         ; DUP
09eb: 0b fa 04 00 00             ; CALL isNeg (04fa)
09f0: 10                         ; CSTORE
09f1: 09 f9 09 00 00             ; JMPZ 09f9
09f6: 0e 01                      ; CLITERAL 1
09f8: 11                         ; ADD
09f9: 0e 00                      ; CLITERAL 0
09fb: 21                         ; DTOR
09fc: 06                         ; DUP
09fd: 0f                         ; CFETCH
09fe: 06                         ; DUP
09ff: 0e 00                      ; CLITERAL 0
0a01: 16                         ; EQ
0a02: 09 1d 0a 00 00             ; JMPZ 0a1d
0a07: 05                         ; DROP
0a08: 05                         ; DROP
0a09: 22                         ; RTOD
0a0a: 0b fa 04 00 00             ; CALL isNeg (04fa)
0a0f: 0f                         ; CFETCH
0a10: 09 1a 0a 00 00             ; JMPZ 0a1a
0a15: 0b c2 09 00 00             ; CALL NEGATE (09c2)
0a1a: 0e 01                      ; CLITERAL 1
0a1c: 0c                         ; RET
0a1d: 0b 71 09 00 00             ; CALL isNumChar? (0971)
0a22: 09 36 0a 00 00             ; JMPZ 0a36
0a27: 22                         ; RTOD
0a28: 0e 06                      ; CLITERAL 6
0a2a: 0f                         ; CFETCH
0a2b: 13                         ; MUL
0a2c: 11                         ; ADD
0a2d: 21                         ; DTOR
0a2e: 0e 01                      ; CLITERAL 1
0a30: 11                         ; ADD
0a31: 08 3b 0a 00 00             ; JMP 0a3b
0a36: 05                         ; DROP
0a37: 22                         ; RTOD
0a38: 0e 00                      ; CLITERAL 0
0a3a: 0c                         ; RET
0a3b: 08 fc 09 00 00             ; JMP 09fc
0a40: 0c                         ; RET
;
0a41: 18 2b f2 03 00             ; DICTP MOD (3f22b)
0a46: 1a                         ; OVER
0a47: 1a                         ; OVER
0a48: 14                         ; DIV
0a49: 13                         ; MUL
0a4a: 12                         ; SUB
0a4b: 0c                         ; RET
;
0a4c: 18 1c f2 03 00             ; DICTP /MOD (3f21c)
0a51: 1a                         ; OVER
0a52: 1a                         ; OVER
0a53: 14                         ; DIV
0a54: 21                         ; DTOR
0a55: 22                         ; RTOD
0a56: 06                         ; DUP
0a57: 21                         ; DTOR
0a58: 13                         ; MUL
0a59: 12                         ; SUB
0a5a: 22                         ; RTOD
0a5b: 04                         ; SWAP
0a5c: 0c                         ; RET
;
0a5d: 18 0e f2 03 00             ; DICTP (.) (3f20e)
0a62: 06                         ; DUP
0a63: 0e 00                      ; CLITERAL 0
0a65: 16                         ; EQ
0a66: 09 70 0a 00 00             ; JMPZ 0a70
0a6b: 05                         ; DROP
0a6c: 0e 30                      ; CLITERAL 48
0a6e: 19                         ; EMIT
0a6f: 0c                         ; RET
0a70: 06                         ; DUP
0a71: 0e 00                      ; CLITERAL 0
0a73: 15                         ; LT
0a74: 09 85 0a 00 00             ; JMPZ 0a85
0a79: 0b c2 09 00 00             ; CALL NEGATE (09c2)
0a7e: 0e 01                      ; CLITERAL 1
0a80: 08 87 0a 00 00             ; JMP 0a87
0a85: 0e 00                      ; CLITERAL 0
0a87: 21                         ; DTOR
0a88: 0e 00                      ; CLITERAL 0
0a8a: 04                         ; SWAP
0a8b: 06                         ; DUP
0a8c: 09 ae 0a 00 00             ; JMPZ 0aae
0a91: 0e 06                      ; CLITERAL 6
0a93: 0f                         ; CFETCH
0a94: 0b 4c 0a 00 00             ; CALL /MOD (0a4c)
0a99: 0e 30                      ; CLITERAL 48
0a9b: 1a                         ; OVER
0a9c: 0e 09                      ; CLITERAL 9
0a9e: 17                         ; GT
0a9f: 09 a7 0a 00 00             ; JMPZ 0aa7
0aa4: 0e 07                      ; CLITERAL 7
0aa6: 11                         ; ADD
0aa7: 11                         ; ADD
0aa8: 04                         ; SWAP
0aa9: 08 cb 0a 00 00             ; JMP 0acb
0aae: 05                         ; DROP
0aaf: 22                         ; RTOD
0ab0: 09 b8 0a 00 00             ; JMPZ 0ab8
0ab5: 0e 2d                      ; CLITERAL 45
0ab7: 19                         ; EMIT
0ab8: 06                         ; DUP
0ab9: 09 c4 0a 00 00             ; JMPZ 0ac4
0abe: 19                         ; EMIT
0abf: 08 c6 0a 00 00             ; JMP 0ac6
0ac4: 05                         ; DROP
0ac5: 0c                         ; RET
0ac6: 08 b8 0a 00 00             ; JMP 0ab8
0acb: 08 8b 0a 00 00             ; JMP 0a8b
0ad0: 0c                         ; RET
;
0ad1: 18 02 f2 03 00             ; DICTP . (3f202)
0ad6: 0e 20                      ; CLITERAL 32
0ad8: 19                         ; EMIT
0ad9: 0b 5d 0a 00 00             ; CALL (.) (0a5d)
0ade: 0c                         ; RET
;
0adf: 18 f3 f1 03 00             ; DICTP HEX. (3f1f3)
0ae4: 0e 06                      ; CLITERAL 6
0ae6: 0f                         ; CFETCH
0ae7: 04                         ; SWAP
0ae8: 0b 2e 04 00 00             ; CALL HEX (042e)
0aed: 06                         ; DUP
0aee: 0e 10                      ; CLITERAL 16
0af0: 15                         ; LT
0af1: 09 f9 0a 00 00             ; JMPZ 0af9
0af6: 0e 30                      ; CLITERAL 48
0af8: 19                         ; EMIT
0af9: 0b 5d 0a 00 00             ; CALL (.) (0a5d)
0afe: 0e 06                      ; CLITERAL 6
0b00: 10                         ; CSTORE
0b01: 0c                         ; RET
;
0b02: 18 e0 f1 03 00             ; DICTP DECIMAL. (3f1e0)
0b07: 0e 06                      ; CLITERAL 6
0b09: 0f                         ; CFETCH
0b0a: 04                         ; SWAP
0b0b: 0b 39 04 00 00             ; CALL DECIMAL (0439)
0b10: 0b 5d 0a 00 00             ; CALL (.) (0a5d)
0b15: 0e 06                      ; CLITERAL 6
0b17: 10                         ; CSTORE
0b18: 0c                         ; RET
;
0b19: 18 ce f1 03 00             ; DICTP BINARY. (3f1ce)
0b1e: 0e 06                      ; CLITERAL 6
0b20: 0f                         ; CFETCH
0b21: 04                         ; SWAP
0b22: 0b 4f 04 00 00             ; CALL BINARY (044f)
0b27: 0b 5d 0a 00 00             ; CALL (.) (0a5d)
0b2c: 0e 06                      ; CLITERAL 6
0b2e: 10                         ; CSTORE
0b2f: 0c                         ; RET
;
0b30: 18 c0 f1 03 00             ; DICTP MIN (3f1c0)
0b35: 1a                         ; OVER
0b36: 1a                         ; OVER
0b37: 17                         ; GT
0b38: 09 3e 0b 00 00             ; JMPZ 0b3e
0b3d: 04                         ; SWAP
0b3e: 05                         ; DROP
0b3f: 0c                         ; RET
;
0b40: 18 b2 f1 03 00             ; DICTP MAX (3f1b2)
0b45: 1a                         ; OVER
0b46: 1a                         ; OVER
0b47: 15                         ; LT
0b48: 09 4e 0b 00 00             ; JMPZ 0b4e
0b4d: 04                         ; SWAP
0b4e: 05                         ; DROP
0b4f: 0c                         ; RET
;
0b50: 18 a5 f1 03 00             ; DICTP .S (3f1a5)
0b55: 0e 20                      ; CLITERAL 32
0b57: 19                         ; EMIT
0b58: 26                         ; DEPTH
0b59: 0e 00                      ; CLITERAL 0
0b5b: 15                         ; LT
0b5c: 09 7f 0b 00 00             ; JMPZ 0b7f
0b61: 07 10 53 74 61 63 6b 20 75 6e 64 65 72 66 6c 6f 77 21 00 ; SLITERAL (0b62) [Stack underflow!]
0b74: 0b 38 06 00 00             ; CALL COUNT (0638)
0b79: 0b c2 06 00 00             ; CALL TYPE (06c2)
0b7e: fe                         ; RESET
0b7f: 26                         ; DEPTH
0b80: 0e 00                      ; CLITERAL 0
0b82: 16                         ; EQ
0b83: 09 92 0b 00 00             ; JMPZ 0b92
0b88: 0e 28                      ; CLITERAL 40
0b8a: 19                         ; EMIT
0b8b: 0e ed                      ; CLITERAL 237
0b8d: 19                         ; EMIT
0b8e: 0e 29                      ; CLITERAL 41
0b90: 19                         ; EMIT
0b91: 0c                         ; RET
0b92: 0e 28                      ; CLITERAL 40
0b94: 19                         ; EMIT
0b95: 26                         ; DEPTH
0b96: 0e 01                      ; CLITERAL 1
0b98: 12                         ; SUB
0b99: 21                         ; DTOR
0b9a: 22                         ; RTOD
0b9b: 06                         ; DUP
0b9c: 21                         ; DTOR
0b9d: 25                         ; PICK
0b9e: 0b d1 0a 00 00             ; CALL . (0ad1)
0ba3: 22                         ; RTOD
0ba4: 06                         ; DUP
0ba5: 21                         ; DTOR
0ba6: 09 b5 0b 00 00             ; JMPZ 0bb5
0bab: 22                         ; RTOD
0bac: 0e 01                      ; CLITERAL 1
0bae: 12                         ; SUB
0baf: 21                         ; DTOR
0bb0: 08 be 0b 00 00             ; JMP 0bbe
0bb5: 22                         ; RTOD
0bb6: 05                         ; DROP
0bb7: 0e 20                      ; CLITERAL 32
0bb9: 19                         ; EMIT
0bba: 0e 29                      ; CLITERAL 41
0bbc: 19                         ; EMIT
0bbd: 0c                         ; RET
0bbe: 08 9a 0b 00 00             ; JMP 0b9a
0bc3: 0c                         ; RET
;
0bc4: 18 91 f1 03 00             ; DICTP .(MEM_SZ) (3f191)
0bc9: 07 08 4d 65 6d 6f 72 79 3a 20 00 ; SLITERAL (0bca) [Memory: ]
0bd4: 0b e4 06 00 00             ; CALL CT (06e4)
0bd9: 0b 1a 05 00 00             ; CALL MEM_SZ (051a)
0bde: 06                         ; DUP
0bdf: 0b df 0a 00 00             ; CALL HEX. (0adf)
0be4: 07 02 20 28 00             ; SLITERAL (0be5) [ (]
0be9: 0b e4 06 00 00             ; CALL CT (06e4)
0bee: 0b 5d 0a 00 00             ; CALL (.) (0a5d)
0bf3: 07 01 29 00                ; SLITERAL (0bf4) [)]
0bf7: 0b e4 06 00 00             ; CALL CT (06e4)
0bfc: 0c                         ; RET
;
0bfd: 18 7f f1 03 00             ; DICTP .(HERE) (3f17f)
0c02: 07 06 48 45 52 45 3a 20 00 ; SLITERAL (0c03) [HERE: ]
0c0b: 0b e4 06 00 00             ; CALL CT (06e4)
0c10: 0e 10                      ; CLITERAL 16
0c12: 02                         ; FETCH
0c13: 06                         ; DUP
0c14: 0b df 0a 00 00             ; CALL HEX. (0adf)
0c19: 07 02 20 28 00             ; SLITERAL (0c1a) [ (]
0c1e: 0b e4 06 00 00             ; CALL CT (06e4)
0c23: 0b 5d 0a 00 00             ; CALL (.) (0a5d)
0c28: 07 01 29 00                ; SLITERAL (0c29) [)]
0c2c: 0b e4 06 00 00             ; CALL CT (06e4)
0c31: 0c                         ; RET
;
0c32: 18 6d f1 03 00             ; DICTP .(LAST) (3f16d)
0c37: 07 06 4c 41 53 54 3a 20 00 ; SLITERAL (0c38) [LAST: ]
0c40: 0b e4 06 00 00             ; CALL CT (06e4)
0c45: 0e 14                      ; CLITERAL 20
0c47: 02                         ; FETCH
0c48: 06                         ; DUP
0c49: 0b df 0a 00 00             ; CALL HEX. (0adf)
0c4e: 07 02 20 28 00             ; SLITERAL (0c4f) [ (]
0c53: 0b e4 06 00 00             ; CALL CT (06e4)
0c58: 0b 5d 0a 00 00             ; CALL (.) (0a5d)
0c5d: 07 01 29 00                ; SLITERAL (0c5e) [)]
0c61: 0b e4 06 00 00             ; CALL CT (06e4)
0c66: 0c                         ; RET
;
0c67: 18 57 f1 03 00             ; DICTP .WORD-SHORT (3f157)
0c6c: 06                         ; DUP
0c6d: 0b 70 08 00 00             ; CALL DICT>NAME (0870)
0c72: 0b e4 06 00 00             ; CALL CT (06e4)
0c77: 0e 20                      ; CLITERAL 32
0c79: 19                         ; EMIT
0c7a: 02                         ; FETCH
0c7b: 0c                         ; RET
;
0c7c: 18 47 f1 03 00             ; DICTP WORDS (3f147)
0c81: 0e 14                      ; CLITERAL 20
0c83: 02                         ; FETCH
0c84: 06                         ; DUP
0c85: 02                         ; FETCH
0c86: 0e 00                      ; CLITERAL 0
0c88: 16                         ; EQ
0c89: 09 95 0c 00 00             ; JMPZ 0c95
0c8e: 05                         ; DROP
0c8f: 0b 4d 07 00 00             ; CALL CRLF (074d)
0c94: 0c                         ; RET
0c95: 0b 67 0c 00 00             ; CALL .WORD-SHORT (0c67)
0c9a: 08 84 0c 00 00             ; JMP 0c84
0c9f: 0c                         ; RET
;
0ca0: 18 32 f1 03 00             ; DICTP .WORD-LONG (3f132)
0ca5: 06                         ; DUP
0ca6: 0b df 0a 00 00             ; CALL HEX. (0adf)
0cab: 0e 3a                      ; CLITERAL 58
0cad: 19                         ; EMIT
0cae: 0e 20                      ; CLITERAL 32
0cb0: 19                         ; EMIT
0cb1: 06                         ; DUP
0cb2: 0b 70 08 00 00             ; CALL DICT>NAME (0870)
0cb7: 0b e4 06 00 00             ; CALL CT (06e4)
0cbc: 0e 20                      ; CLITERAL 32
0cbe: 19                         ; EMIT
0cbf: 06                         ; DUP
0cc0: 0b a8 08 00 00             ; CALL DICT.GetXT (08a8)
0cc5: 0e 28                      ; CLITERAL 40
0cc7: 19                         ; EMIT
0cc8: 0b df 0a 00 00             ; CALL HEX. (0adf)
0ccd: 0e 29                      ; CLITERAL 41
0ccf: 19                         ; EMIT
0cd0: 06                         ; DUP
0cd1: 0b 64 08 00 00             ; CALL DICT>FLAGS (0864)
0cd6: 0f                         ; CFETCH
0cd7: 06                         ; DUP
0cd8: 07 09 2c 20 46 6c 61 67 73 3a 20 00 ; SLITERAL (0cd9) [, Flags: ]
0ce4: 0b e4 06 00 00             ; CALL CT (06e4)
0ce9: 0b df 0a 00 00             ; CALL HEX. (0adf)
0cee: 06                         ; DUP
0cef: 0b f3 08 00 00             ; CALL FLAGS.ISINLINE? (08f3)
0cf4: 09 0a 0d 00 00             ; JMPZ 0d0a
0cf9: 07 09 20 28 49 4e 4c 49 4e 45 29 00 ; SLITERAL (0cfa) [ (INLINE)]
0d05: 0b e4 06 00 00             ; CALL CT (06e4)
0d0a: 0b ea 08 00 00             ; CALL FLAGS.ISIMMEDIATE? (08ea)
0d0f: 09 28 0d 00 00             ; JMPZ 0d28
0d14: 07 0c 20 28 49 4d 4d 45 44 49 41 54 45 29 00 ; SLITERAL (0d15) [ (IMMEDIATE)]
0d23: 0b e4 06 00 00             ; CALL CT (06e4)
0d28: 0b 4d 07 00 00             ; CALL CRLF (074d)
0d2d: 02                         ; FETCH
0d2e: 0c                         ; RET
;
0d2f: 18 21 f1 03 00             ; DICTP WORDSV (3f121)
0d34: 0b 32 0c 00 00             ; CALL .(LAST) (0c32)
0d39: 0b 4d 07 00 00             ; CALL CRLF (074d)
0d3e: 0e 14                      ; CLITERAL 20
0d40: 02                         ; FETCH
0d41: 06                         ; DUP
0d42: 02                         ; FETCH
0d43: 0e 00                      ; CLITERAL 0
0d45: 16                         ; EQ
0d46: 09 52 0d 00 00             ; JMPZ 0d52
0d4b: 05                         ; DROP
0d4c: 0b 4d 07 00 00             ; CALL CRLF (074d)
0d51: 0c                         ; RET
0d52: 0b a0 0c 00 00             ; CALL .WORD-LONG (0ca0)
0d57: 08 41 0d 00 00             ; JMP 0d41
0d5c: 0c                         ; RET
;
0d5d: 18 0d f1 03 00             ; DICTP NUM-WORDS (3f10d)
0d62: 0e 00                      ; CLITERAL 0
0d64: 21                         ; DTOR
0d65: 0e 14                      ; CLITERAL 20
0d67: 02                         ; FETCH
0d68: 06                         ; DUP
0d69: 02                         ; FETCH
0d6a: 0e 00                      ; CLITERAL 0
0d6c: 16                         ; EQ
0d6d: 09 7a 0d 00 00             ; JMPZ 0d7a
0d72: 05                         ; DROP
0d73: 22                         ; RTOD
0d74: 0b 4d 07 00 00             ; CALL CRLF (074d)
0d79: 0c                         ; RET
0d7a: 22                         ; RTOD
0d7b: 0e 01                      ; CLITERAL 1
0d7d: 11                         ; ADD
0d7e: 21                         ; DTOR
0d7f: 02                         ; FETCH
0d80: 08 68 0d 00 00             ; JMP 0d68
0d85: 0c                         ; RET
;
0d86: 18 fc f0 03 00             ; DICTP .lastx (3f0fc)
0d8b: 0b 59 07 00 00             ; CALL CR (0759)
0d90: 0e 14                      ; CLITERAL 20
0d92: 02                         ; FETCH
0d93: 04                         ; SWAP
0d94: 0e 00                      ; CLITERAL 0
0d96: 1a                         ; OVER
0d97: 1a                         ; OVER
0d98: 17                         ; GT
0d99: 09 b5 0d 00 00             ; JMPZ 0db5
0d9e: 0b 71 05 00 00             ; CALL ROT (0571)
0da3: 0b a0 0c 00 00             ; CALL .WORD-LONG (0ca0)
0da8: 0b 7b 05 00 00             ; CALL -ROT (057b)
0dad: 0e 01                      ; CLITERAL 1
0daf: 11                         ; ADD
0db0: 08 b9 0d 00 00             ; JMP 0db9
0db5: 05                         ; DROP
0db6: 05                         ; DROP
0db7: 05                         ; DROP
0db8: 0c                         ; RET
0db9: 08 96 0d 00 00             ; JMP 0d96
0dbe: 0c                         ; RET
;
0dbf: 18 ea f0 03 00             ; DICTP EXECUTE (3f0ea)
0dc4: 22                         ; RTOD
0dc5: 05                         ; DROP
0dc6: 21                         ; DTOR
0dc7: 0c                         ; RET
;
0dc8: 18 d7 f0 03 00             ; DICTP find.ret (3f0d7)
0dcd: 06                         ; DUP
0dce: 0f                         ; CFETCH
0dcf: 0e 0c                      ; CLITERAL 12
0dd1: 16                         ; EQ
0dd2: 09 d8 0d 00 00             ; JMPZ 0dd8
0dd7: 0c                         ; RET
0dd8: 0e 01                      ; CLITERAL 1
0dda: 11                         ; ADD
0ddb: 08 cd 0d 00 00             ; JMP 0dcd
0de0: 0c                         ; RET
;
0de1: 18 c4 f0 03 00             ; DICTP (inline) (3f0c4)
0de6: 1a                         ; OVER
0de7: 1a                         ; OVER
0de8: 15                         ; LT
0de9: 09 ef 0d 00 00             ; JMPZ 0def
0dee: 04                         ; SWAP
0def: 06                         ; DUP
0df0: 0f                         ; CFETCH
0df1: 0b 70 00 00 00             ; CALL C, (0070)
0df6: 0e 01                      ; CLITERAL 1
0df8: 11                         ; ADD
0df9: 1a                         ; OVER
0dfa: 1a                         ; OVER
0dfb: 17                         ; GT
0dfc: 0a ef 0d 00 00             ; JMPNZ 0def
0e01: 05                         ; DROP
0e02: 05                         ; DROP
0e03: 0c                         ; RET
;
0e04: 18 b4 f0 03 00             ; DICTP DOES> (3f0b4)
0e09: 22                         ; RTOD
0e0a: 06                         ; DUP
0e0b: 0b c8 0d 00 00             ; CALL find.ret (0dc8)
0e10: 06                         ; DUP
0e11: 21                         ; DTOR
0e12: 0e 01                      ; CLITERAL 1
0e14: 11                         ; ADD
0e15: 0b e1 0d 00 00             ; CALL (inline) (0de1)
0e1a: 0c                         ; RET
;
0e1b: 18 9e f0 03 00             ; DICTP Copy.INLINE (3f09e)
0e20: 06                         ; DUP
0e21: 0f                         ; CFETCH
0e22: 0e 18                      ; CLITERAL 24
0e24: 16                         ; EQ
0e25: 09 30 0e 00 00             ; JMPZ 0e30
0e2a: 0e 01                      ; CLITERAL 1
0e2c: 11                         ; ADD
0e2d: 0e 04                      ; CLITERAL 4
0e2f: 11                         ; ADD
0e30: 06                         ; DUP
0e31: 0b c8 0d 00 00             ; CALL find.ret (0dc8)
0e36: 0b e1 0d 00 00             ; CALL (inline) (0de1)
0e3b: 0c                         ; RET
;
0e3c: 18 8d f0 03 00             ; DICTP strlen (3f08d)
0e41: 0e 00                      ; CLITERAL 0
0e43: 04                         ; SWAP
0e44: 04                         ; SWAP
0e45: 1a                         ; OVER
0e46: 0f                         ; CFETCH
0e47: 06                         ; DUP
0e48: 09 57 0e 00 00             ; JMPZ 0e57
0e4d: 05                         ; DROP
0e4e: 0e 01                      ; CLITERAL 1
0e50: 11                         ; ADD
0e51: 04                         ; SWAP
0e52: 0e 01                      ; CLITERAL 1
0e54: 11                         ; ADD
0e55: 0e 01                      ; CLITERAL 1
0e57: 0a 44 0e 00 00             ; JMPNZ 0e44
0e5c: 04                         ; SWAP
0e5d: 05                         ; DROP
0e5e: 0c                         ; RET
;
0e5f: 18 7d f0 03 00             ; DICTP cstr, (3f07d)
0e64: 06                         ; DUP
0e65: 0f                         ; CFETCH
0e66: 1a                         ; OVER
0e67: 11                         ; ADD
0e68: 0e 01                      ; CLITERAL 1
0e6a: 11                         ; ADD
0e6b: 0e 01                      ; CLITERAL 1
0e6d: 11                         ; ADD
0e6e: 0b e1 0d 00 00             ; CALL (inline) (0de1)
0e73: 0c                         ; RET
;
0e74: 18 69 f0 03 00             ; DICTP [COMPILE] (3f069)
0e79: 0b f3 08 00 00             ; CALL FLAGS.ISINLINE? (08f3)
0e7e: 09 8d 0e 00 00             ; JMPZ 0e8d
0e83: 0b 1b 0e 00 00             ; CALL Copy.INLINE (0e1b)
0e88: 08 99 0e 00 00             ; JMP 0e99
0e8d: 0e 0b                      ; CLITERAL 11
0e8f: 0b 70 00 00 00             ; CALL C, (0070)
0e94: 0b f0 03 00 00             ; CALL , (03f0)
0e99: 0c                         ; RET
;
0e9a: 18 53 f0 03 00             ; DICTP executeWord (3f053)
0e9f: 21                         ; DTOR
0ea0: 22                         ; RTOD
0ea1: 06                         ; DUP
0ea2: 21                         ; DTOR
0ea3: 0b 1c 09 00 00             ; CALL findInDict (091c)
0ea8: 09 e4 0e 00 00             ; JMPZ 0ee4
0ead: 22                         ; RTOD
0eae: 05                         ; DROP
0eaf: 0b 84 04 00 00             ; CALL ?COMPILING (0484)
0eb4: 09 d9 0e 00 00             ; JMPZ 0ed9
0eb9: 06                         ; DUP
0eba: 0b ea 08 00 00             ; CALL FLAGS.ISIMMEDIATE? (08ea)
0ebf: 09 cf 0e 00 00             ; JMPZ 0ecf
0ec4: 05                         ; DROP
0ec5: 0b bf 0d 00 00             ; CALL EXECUTE (0dbf)
0eca: 08 d4 0e 00 00             ; JMP 0ed4
0ecf: 0b 74 0e 00 00             ; CALL [COMPILE] (0e74)
0ed4: 08 df 0e 00 00             ; JMP 0edf
0ed9: 05                         ; DROP
0eda: 0b bf 0d 00 00             ; CALL EXECUTE (0dbf)
0edf: 08 3c 0f 00 00             ; JMP 0f3c
0ee4: 05                         ; DROP
0ee5: 05                         ; DROP
0ee6: 22                         ; RTOD
0ee7: 06                         ; DUP
0ee8: 21                         ; DTOR
0ee9: 0b e0 09 00 00             ; CALL isNumber? (09e0)
0eee: 09 2e 0f 00 00             ; JMPZ 0f2e
0ef3: 0b 84 04 00 00             ; CALL ?COMPILING (0484)
0ef8: 09 29 0f 00 00             ; JMPZ 0f29
0efd: 06                         ; DUP
0efe: 0e 00                      ; CLITERAL 0
0f00: 0e ff                      ; CLITERAL 255
0f02: 0b 6d 07 00 00             ; CALL BETWEEN (076d)
0f07: 09 1d 0f 00 00             ; JMPZ 0f1d
0f0c: 0e 0e                      ; CLITERAL 14
0f0e: 0b 70 00 00 00             ; CALL C, (0070)
0f13: 0b 70 00 00 00             ; CALL C, (0070)
0f18: 08 29 0f 00 00             ; JMP 0f29
0f1d: 0e 01                      ; CLITERAL 1
0f1f: 0b 70 00 00 00             ; CALL C, (0070)
0f24: 0b f0 03 00 00             ; CALL , (03f0)
0f29: 08 3a 0f 00 00             ; JMP 0f3a
0f2e: 05                         ; DROP
0f2f: 07 02 3f 3f 00             ; SLITERAL (0f30) [??]
0f34: 0b e4 06 00 00             ; CALL CT (06e4)
0f39: fe                         ; RESET
0f3a: 22                         ; RTOD
0f3b: 05                         ; DROP
0f3c: 0c                         ; RET
;
0f3d: 18 3c f0 03 00             ; DICTP executeInput (3f03c)
0f42: 0b ea 04 00 00             ; CALL >IN (04ea)
0f47: 02                         ; FETCH
0f48: 0b ee 07 00 00             ; CALL skipWS (07ee)
0f4d: 0b ea 04 00 00             ; CALL >IN (04ea)
0f52: 03                         ; STORE
0f53: 0b ea 04 00 00             ; CALL >IN (04ea)
0f58: 02                         ; FETCH
0f59: 0f                         ; CFETCH
0f5a: 09 7a 0f 00 00             ; JMPZ 0f7a
0f5f: 0b ea 04 00 00             ; CALL >IN (04ea)
0f64: 02                         ; FETCH
0f65: 0b 19 08 00 00             ; CALL getOneWord (0819)
0f6a: 0b ea 04 00 00             ; CALL >IN (04ea)
0f6f: 03                         ; STORE
0f70: 0b 9a 0e 00 00             ; CALL executeWord (0e9a)
0f75: 08 7b 0f 00 00             ; JMP 0f7b
0f7a: 0c                         ; RET
0f7b: 08 42 0f 00 00             ; JMP 0f42
0f80: 0c                         ; RET
;
0f81: 18 2e f0 03 00             ; DICTP Pad (3f02e)
0f86: 0e 14                      ; CLITERAL 20
0f88: 02                         ; FETCH
0f89: 0e c8                      ; CLITERAL 200
0f8b: 12                         ; SUB
0f8c: 06                         ; DUP
0f8d: 0e 10                      ; CLITERAL 16
0f8f: 02                         ; FETCH
0f90: 15                         ; LT
0f91: 09 a8 0f 00 00             ; JMPZ 0fa8
0f96: 07 0e 4f 75 74 20 6f 66 20 4d 65 6d 6f 72 79 21 00 ; SLITERAL (0f97) [Out of Memory!]
0fa7: fe                         ; RESET
0fa8: 0c                         ; RET
;
0fa9: 18 13 f0 03 00             ; DICTP LoadingFromFile? (3f013)
0fae: 0e 1c                      ; CLITERAL 28
0fb0: 02                         ; FETCH
0fb1: 0c                         ; RET
;
0fb2: 18 f9 ef 03 00             ; DICTP getLineFromFile (3eff9)
0fb7: 0e c8                      ; CLITERAL 200
0fb9: 0e 1c                      ; CLITERAL 28
0fbb: 02                         ; FETCH
0fbc: 1e                         ; FREADLINE
0fbd: 0e 00                      ; CLITERAL 0
0fbf: 16                         ; EQ
0fc0: 09 cc 0f 00 00             ; JMPZ 0fcc
0fc5: 0e 1c                      ; CLITERAL 28
0fc7: 0b 64 04 00 00             ; CALL OFF (0464)
0fcc: 0c                         ; RET
;
0fcd: 18 e7 ef 03 00             ; DICTP getLine (3efe7)
0fd2: 0e 00                      ; CLITERAL 0
0fd4: 0b 81 0f 00 00             ; CALL Pad (0f81)
0fd9: 06                         ; DUP
0fda: 0e 01                      ; CLITERAL 1
0fdc: 11                         ; ADD
0fdd: 0b ea 04 00 00             ; CALL >IN (04ea)
0fe2: 03                         ; STORE
0fe3: 10                         ; CSTORE
0fe4: 0b a9 0f 00 00             ; CALL LoadingFromFile? (0fa9)
0fe9: 09 f9 0f 00 00             ; JMPZ 0ff9
0fee: 0b 81 0f 00 00             ; CALL Pad (0f81)
0ff3: 0b b2 0f 00 00             ; CALL getLineFromFile (0fb2)
0ff8: 0c                         ; RET
0ff9: 0e 00                      ; CLITERAL 0
0ffb: 0b ea 04 00 00             ; CALL >IN (04ea)
1000: 02                         ; FETCH
1001: 10                         ; CSTORE
1002: 27                         ; GETCH
1003: 06                         ; DUP
1004: 0e 0d                      ; CLITERAL 13
1006: 16                         ; EQ
1007: 09 16 10 00 00             ; JMPZ 1016
100c: 05                         ; DROP
100d: 0b 81 0f 00 00             ; CALL Pad (0f81)
1012: 0e 20                      ; CLITERAL 32
1014: 19                         ; EMIT
1015: 0c                         ; RET
1016: 06                         ; DUP
1017: 0e 09                      ; CLITERAL 9
1019: 16                         ; EQ
101a: 09 22 10 00 00             ; JMPZ 1022
101f: 05                         ; DROP
1020: 0e 20                      ; CLITERAL 32
1022: 06                         ; DUP
1023: 0e 03                      ; CLITERAL 3
1025: 16                         ; EQ
1026: 09 2c 10 00 00             ; JMPZ 102c
102b: ff                         ; BYE
102c: 06                         ; DUP
102d: 0e 08                      ; CLITERAL 8
102f: 16                         ; EQ
1030: 09 68 10 00 00             ; JMPZ 1068
1035: 0b 81 0f 00 00             ; CALL Pad (0f81)
103a: 0f                         ; CFETCH
103b: 0e 00                      ; CLITERAL 0
103d: 17                         ; GT
103e: 09 62 10 00 00             ; JMPZ 1062
1043: 0b 81 0f 00 00             ; CALL Pad (0f81)
1048: 0b c3 05 00 00             ; CALL C-- (05c3)
104d: 0b ea 04 00 00             ; CALL >IN (04ea)
1052: 0b a9 05 00 00             ; CALL -- (05a9)
1057: 06                         ; DUP
1058: 19                         ; EMIT
1059: 0e 20                      ; CLITERAL 32
105b: 19                         ; EMIT
105c: 19                         ; EMIT
105d: 08 63 10 00 00             ; JMP 1063
1062: 05                         ; DROP
1063: 08 9a 10 00 00             ; JMP 109a
1068: 06                         ; DUP
1069: 0e 20                      ; CLITERAL 32
106b: 0e 7f                      ; CLITERAL 127
106d: 0b 6d 07 00 00             ; CALL BETWEEN (076d)
1072: 09 99 10 00 00             ; JMPZ 1099
1077: 06                         ; DUP
1078: 19                         ; EMIT
1079: 0b ea 04 00 00             ; CALL >IN (04ea)
107e: 02                         ; FETCH
107f: 10                         ; CSTORE
1080: 0b ea 04 00 00             ; CALL >IN (04ea)
1085: 0b 9c 05 00 00             ; CALL ++ (059c)
108a: 0b 81 0f 00 00             ; CALL Pad (0f81)
108f: 0b b6 05 00 00             ; CALL C++ (05b6)
1094: 08 9a 10 00 00             ; JMP 109a
1099: 05                         ; DROP
109a: 08 f9 0f 00 00             ; JMP 0ff9
109f: 0c                         ; RET
;
10a0: 18 d4 ef 03 00             ; DICTP strcpy2c (3efd4)
10a5: 06                         ; DUP
10a6: 21                         ; DTOR
10a7: 0e 00                      ; CLITERAL 0
10a9: 1a                         ; OVER
10aa: 10                         ; CSTORE
10ab: 0e 01                      ; CLITERAL 1
10ad: 11                         ; ADD
10ae: 04                         ; SWAP
10af: 06                         ; DUP
10b0: 0f                         ; CFETCH
10b1: 06                         ; DUP
10b2: 09 d0 10 00 00             ; JMPZ 10d0
10b7: 0e 02                      ; CLITERAL 2
10b9: 25                         ; PICK
10ba: 10                         ; CSTORE
10bb: 04                         ; SWAP
10bc: 0e 01                      ; CLITERAL 1
10be: 11                         ; ADD
10bf: 04                         ; SWAP
10c0: 0e 01                      ; CLITERAL 1
10c2: 11                         ; ADD
10c3: 22                         ; RTOD
10c4: 06                         ; DUP
10c5: 21                         ; DTOR
10c6: 0b b6 05 00 00             ; CALL C++ (05b6)
10cb: 08 da 10 00 00             ; JMP 10da
10d0: 0b 71 05 00 00             ; CALL ROT (0571)
10d5: 10                         ; CSTORE
10d6: 05                         ; DROP
10d7: 22                         ; RTOD
10d8: 05                         ; DROP
10d9: 0c                         ; RET
10da: 08 af 10 00 00             ; JMP 10af
10df: 0c                         ; RET
;
10e0: 18 be ef 03 00             ; DICTP Define-Word (3efbe)
10e5: 0e 14                      ; CLITERAL 20
10e7: 02                         ; FETCH
10e8: 1a                         ; OVER
10e9: 0b 3c 0e 00 00             ; CALL strlen (0e3c)
10ee: 0e 02                      ; CLITERAL 2
10f0: 0e 04                      ; CLITERAL 4
10f2: 13                         ; MUL
10f3: 0e 03                      ; CLITERAL 3
10f5: 11                         ; ADD
10f6: 11                         ; ADD
10f7: 12                         ; SUB
10f8: 06                         ; DUP
10f9: 21                         ; DTOR
10fa: 21                         ; DTOR
10fb: 0e 14                      ; CLITERAL 20
10fd: 02                         ; FETCH
10fe: 22                         ; RTOD
10ff: 06                         ; DUP
1100: 21                         ; DTOR
1101: 03                         ; STORE
1102: 22                         ; RTOD
1103: 0e 04                      ; CLITERAL 4
1105: 11                         ; ADD
1106: 21                         ; DTOR
1107: 0e 10                      ; CLITERAL 16
1109: 02                         ; FETCH
110a: 22                         ; RTOD
110b: 06                         ; DUP
110c: 21                         ; DTOR
110d: 03                         ; STORE
110e: 22                         ; RTOD
110f: 0e 04                      ; CLITERAL 4
1111: 11                         ; ADD
1112: 21                         ; DTOR
1113: 0e 00                      ; CLITERAL 0
1115: 22                         ; RTOD
1116: 06                         ; DUP
1117: 21                         ; DTOR
1118: 10                         ; CSTORE
1119: 22                         ; RTOD
111a: 0e 01                      ; CLITERAL 1
111c: 11                         ; ADD
111d: 21                         ; DTOR
111e: 22                         ; RTOD
111f: 0b a0 10 00 00             ; CALL strcpy2c (10a0)
1124: 22                         ; RTOD
1125: 0e 14                      ; CLITERAL 20
1127: 03                         ; STORE
1128: 0c                         ; RET
;
1129: 18 a8 ef 03 00             ; DICTP CREATE-NAME (3efa8)
112e: 0b ea 04 00 00             ; CALL >IN (04ea)
1133: 02                         ; FETCH
1134: 0b ee 07 00 00             ; CALL skipWS (07ee)
1139: 0b ea 04 00 00             ; CALL >IN (04ea)
113e: 03                         ; STORE
113f: 0b ea 04 00 00             ; CALL >IN (04ea)
1144: 02                         ; FETCH
1145: 0f                         ; CFETCH
1146: 09 7e 11 00 00             ; JMPZ 117e
114b: 0b ea 04 00 00             ; CALL >IN (04ea)
1150: 02                         ; FETCH
1151: 0b 19 08 00 00             ; CALL getOneWord (0819)
1156: 0b ea 04 00 00             ; CALL >IN (04ea)
115b: 03                         ; STORE
115c: 06                         ; DUP
115d: 0f                         ; CFETCH
115e: 09 7c 11 00 00             ; JMPZ 117c
1163: 0b e0 10 00 00             ; CALL Define-Word (10e0)
1168: 0e 18                      ; CLITERAL 24
116a: 0b 70 00 00 00             ; CALL C, (0070)
116f: 0e 14                      ; CLITERAL 20
1171: 02                         ; FETCH
1172: 0b f0 03 00 00             ; CALL , (03f0)
1177: 08 7e 11 00 00             ; JMP 117e
117c: 05                         ; DROP
117d: fe                         ; RESET
117e: 0c                         ; RET
;
117f: 18 9c ef 03 00             ; DICTP : (3ef9c)
1184: 0b 29 11 00 00             ; CALL CREATE-NAME (1129)
1189: 0e 20                      ; CLITERAL 32
118b: 0b 5a 04 00 00             ; CALL ON (045a)
1190: 0c                         ; RET
;
1191: 18 8a ef 03 00             ; DICTP :NONAME (3ef8a)
1196: 0e 10                      ; CLITERAL 16
1198: 02                         ; FETCH
1199: 0e 20                      ; CLITERAL 32
119b: 0b 5a 04 00 00             ; CALL ON (045a)
11a0: 0c                         ; RET
;
11a1: 18 7e ef 03 00             ; DICTP ; (3ef7e)
11a6: 0e 0c                      ; CLITERAL 12
11a8: 0b 70 00 00 00             ; CALL C, (0070)
11ad: 0e 20                      ; CLITERAL 32
11af: 0b 64 04 00 00             ; CALL OFF (0464)
11b4: 0c                         ; RET
;
11b5: 18 69 ef 03 00             ; DICTP ForgetLast (3ef69)
11ba: 0e 14                      ; CLITERAL 20
11bc: 02                         ; FETCH
11bd: 0e 04                      ; CLITERAL 4
11bf: 11                         ; ADD
11c0: 02                         ; FETCH
11c1: 0e 10                      ; CLITERAL 16
11c3: 03                         ; STORE
11c4: 0e 14                      ; CLITERAL 20
11c6: 02                         ; FETCH
11c7: 02                         ; FETCH
11c8: 0e 14                      ; CLITERAL 20
11ca: 03                         ; STORE
11cb: 0c                         ; RET
;
11cc: 18 54 ef 03 00             ; DICTP resetState (3ef54)
11d1: 0b 84 04 00 00             ; CALL ?COMPILING (0484)
11d6: 09 e0 11 00 00             ; JMPZ 11e0
11db: 0b b5 11 00 00             ; CALL ForgetLast (11b5)
11e0: 0e 20                      ; CLITERAL 32
11e2: 0b 64 04 00 00             ; CALL OFF (0464)
11e7: 0b 39 04 00 00             ; CALL DECIMAL (0439)
11ec: 0c                         ; RET
;
11ed: 18 44 ef 03 00             ; DICTP ALLOT (3ef44)
11f2: 0e 10                      ; CLITERAL 16
11f4: 02                         ; FETCH
11f5: 11                         ; ADD
11f6: 0e 10                      ; CLITERAL 16
11f8: 03                         ; STORE
11f9: 0c                         ; RET
;
11fa: 18 38 ef 03 00             ; DICTP ? (3ef38)
11ff: 02                         ; FETCH
1200: 0b d1 0a 00 00             ; CALL . (0ad1)
1205: 0c                         ; RET
;
1206: 18 2b ef 03 00             ; DICTP C? (3ef2b)
120b: 0f                         ; CFETCH
120c: 0b d1 0a 00 00             ; CALL . (0ad1)
1211: 0c                         ; RET
;
1212: 18 1c ef 03 00             ; DICTP FREE (3ef1c)
1217: 0e 14                      ; CLITERAL 20
1219: 02                         ; FETCH
121a: 0e 10                      ; CLITERAL 16
121c: 02                         ; FETCH
121d: 12                         ; SUB
121e: 0c                         ; RET
;
121f: 18 0c ef 03 00             ; DICTP FREE? (3ef0c)
1224: 0b 12 12 00 00             ; CALL FREE (1212)
1229: 0b 5d 0a 00 00             ; CALL (.) (0a5d)
122e: 07 0c 20 62 79 74 65 73 20 66 72 65 65 2e 00 ; SLITERAL (122f) [ bytes free.]
123d: 0b e4 06 00 00             ; CALL CT (06e4)
1242: 0c                         ; RET
;
1243: 18 f9 ee 03 00             ; DICTP mainLoop (3eef9)
1248: 0b cc 11 00 00             ; CALL resetState (11cc)
124d: 0b 94 07 00 00             ; CALL tmp-init (0794)
1252: 0b 84 04 00 00             ; CALL ?COMPILING (0484)
1257: 0e 00                      ; CLITERAL 0
1259: 16                         ; EQ
125a: 09 6f 12 00 00             ; JMPZ 126f
125f: 07 03 20 4f 4b 00          ; SLITERAL (1260) [ OK]
1265: 0b e4 06 00 00             ; CALL CT (06e4)
126a: 0b 50 0b 00 00             ; CALL .S (0b50)
126f: 0b 4d 07 00 00             ; CALL CRLF (074d)
1274: 0b cd 0f 00 00             ; CALL getLine (0fcd)
1279: 0e 01                      ; CLITERAL 1
127b: 11                         ; ADD
127c: 0b ea 04 00 00             ; CALL >IN (04ea)
1281: 03                         ; STORE
1282: 0b 3d 0f 00 00             ; CALL executeInput (0f3d)
1287: 0e 20                      ; CLITERAL 32
1289: 19                         ; EMIT
128a: 08 4d 12 00 00             ; JMP 124d
128f: 0c                         ; RET
;
1290: 18 ea ee 03 00             ; DICTP main (3eeea)
1295: 0e 20                      ; CLITERAL 32
1297: 02                         ; FETCH
1298: 0e 63                      ; CLITERAL 99
129a: 16                         ; EQ
129b: 09 b5 12 00 00             ; JMPZ 12b5
12a0: 0e 20                      ; CLITERAL 32
12a2: 0b 64 04 00 00             ; CALL OFF (0464)
12a7: 07 06 48 65 6c 6c 6f 2e 00 ; SLITERAL (12a8) [Hello.]
12b0: 0b e4 06 00 00             ; CALL CT (06e4)
12b5: 0b 43 12 00 00             ; CALL mainLoop (1243)
12ba: 0c                         ; RET
;
12bb: 18 d3 ee 03 00             ; DICTP file-getLine (3eed3)
12c0: 0b 81 0f 00 00             ; CALL Pad (0f81)
12c5: 04                         ; SWAP
12c6: 0e c8                      ; CLITERAL 200
12c8: 04                         ; SWAP
12c9: 1e                         ; FREADLINE
12ca: 0b 81 0f 00 00             ; CALL Pad (0f81)
12cf: 04                         ; SWAP
12d0: 0c                         ; RET
;
12d1: 18 c4 ee 03 00             ; DICTP load (3eec4)
12d6: 0e 00                      ; CLITERAL 0
12d8: 0e 00                      ; CLITERAL 0
12da: 1c                         ; FOPEN
12db: 0e 00                      ; CLITERAL 0
12dd: 16                         ; EQ
12de: 09 fd 12 00 00             ; JMPZ 12fd
12e3: 07 11 43 61 6e 6e 6f 74 20 6f 70 65 6e 20 66 69 6c 65 2e 00 ; SLITERAL (12e4) [Cannot open file.]
12f7: 0b e4 06 00 00             ; CALL CT (06e4)
12fc: 0c                         ; RET
12fd: 0e 1c                      ; CLITERAL 28
12ff: 03                         ; STORE
1300: 0e 1c                      ; CLITERAL 28
1302: 02                         ; FETCH
1303: 0b bb 12 00 00             ; CALL file-getLine (12bb)
1308: 09 20 13 00 00             ; JMPZ 1320
130d: 0e 01                      ; CLITERAL 1
130f: 11                         ; ADD
1310: 0b ea 04 00 00             ; CALL >IN (04ea)
1315: 03                         ; STORE
1316: 0b 3d 0f 00 00             ; CALL executeInput (0f3d)
131b: 08 2d 13 00 00             ; JMP 132d
1320: 05                         ; DROP
1321: 0e 1c                      ; CLITERAL 28
1323: 02                         ; FETCH
1324: 20                         ; FCLOSE
1325: 0e 1c                      ; CLITERAL 28
1327: 0b 64 04 00 00             ; CALL OFF (0464)
132c: 0c                         ; RET
132d: 08 00 13 00 00             ; JMP 1300
1332: 0c                         ; RET
;
1333: 18 b0 ee 03 00             ; DICTP STR.EMPTY (3eeb0)
1338: 0e 00                      ; CLITERAL 0
133a: 1a                         ; OVER
133b: 03                         ; STORE
133c: 0c                         ; RET
;
133d: 18 9e ee 03 00             ; DICTP STR.LEN (3ee9e)
1342: 06                         ; DUP
1343: 0f                         ; CFETCH
1344: 0c                         ; RET
;
1345: 18 8b ee 03 00             ; DICTP STR.CATC (3ee8b)
134a: 1a                         ; OVER
134b: 06                         ; DUP
134c: 0b b6 05 00 00             ; CALL C++ (05b6)
1351: 06                         ; DUP
1352: 0f                         ; CFETCH
1353: 11                         ; ADD
1354: 0e 00                      ; CLITERAL 0
1356: 1a                         ; OVER
1357: 0e 01                      ; CLITERAL 1
1359: 11                         ; ADD
135a: 10                         ; CSTORE
135b: 10                         ; CSTORE
135c: 0c                         ; RET
;
135d: 18 74 ee 03 00             ; DICTP STR.NULLTERM (3ee74)
1362: 06                         ; DUP
1363: 06                         ; DUP
1364: 0f                         ; CFETCH
1365: 11                         ; ADD
1366: 0e 01                      ; CLITERAL 1
1368: 11                         ; ADD
1369: 0e 00                      ; CLITERAL 0
136b: 04                         ; SWAP
136c: 10                         ; CSTORE
136d: 0c                         ; RET
;
136e: 18 67 ee 03 00             ; DICTP I" (3ee67)
1373: 0e 10                      ; CLITERAL 16
1375: 02                         ; FETCH
1376: 0e 64                      ; CLITERAL 100
1378: 11                         ; ADD
1379: 0e 00                      ; CLITERAL 0
137b: 1a                         ; OVER
137c: 03                         ; STORE
137d: 0b ea 04 00 00             ; CALL >IN (04ea)
1382: 02                         ; FETCH
1383: 0f                         ; CFETCH
1384: 06                         ; DUP
1385: 0e 00                      ; CLITERAL 0
1387: 16                         ; EQ
1388: 09 a9 13 00 00             ; JMPZ 13a9
138d: 07 10 6d 69 73 73 69 6e 67 20 63 6c 6f 73 69 6e 67 20 00 ; SLITERAL (138e) [missing closing ]
13a0: 0b e4 06 00 00             ; CALL CT (06e4)
13a5: 0e 22                      ; CLITERAL 34
13a7: 19                         ; EMIT
13a8: fe                         ; RESET
13a9: 0b ea 04 00 00             ; CALL >IN (04ea)
13ae: 0b 9c 05 00 00             ; CALL ++ (059c)
13b3: 06                         ; DUP
13b4: 0e 22                      ; CLITERAL 34
13b6: 16                         ; EQ
13b7: 09 be 13 00 00             ; JMPZ 13be
13bc: 05                         ; DROP
13bd: 0c                         ; RET
13be: 0b 45 13 00 00             ; CALL STR.CATC (1345)
13c3: 08 7d 13 00 00             ; JMP 137d
13c8: 0c                         ; RET
;
13c9: 18 5b ee 03 00             ; DICTP " (3ee5b)
13ce: 0b 84 04 00 00             ; CALL ?COMPILING (0484)
13d3: 0e 00                      ; CLITERAL 0
13d5: 16                         ; EQ
13d6: 09 e1 13 00 00             ; JMPZ 13e1
13db: 0b 6e 13 00 00             ; CALL I" (136e)
13e0: 0c                         ; RET
13e1: 0e 07                      ; CLITERAL 7
13e3: 0b 70 00 00 00             ; CALL C, (0070)
13e8: 0e 10                      ; CLITERAL 16
13ea: 02                         ; FETCH
13eb: 0e 00                      ; CLITERAL 0
13ed: 0b 70 00 00 00             ; CALL C, (0070)
13f2: 0b ea 04 00 00             ; CALL >IN (04ea)
13f7: 02                         ; FETCH
13f8: 0f                         ; CFETCH
13f9: 06                         ; DUP
13fa: 0e 00                      ; CLITERAL 0
13fc: 16                         ; EQ
13fd: 09 29 14 00 00             ; JMPZ 1429
1402: 05                         ; DROP
1403: 0e 01                      ; CLITERAL 1
1405: 12                         ; SUB
1406: 0e 10                      ; CLITERAL 16
1408: 03                         ; STORE
1409: 07 11 6d 69 73 73 69 6e 67 20 63 6c 6f 73 69 6e 67 20 27 00 ; SLITERAL (140a) [missing closing ']
141d: 0b e4 06 00 00             ; CALL CT (06e4)
1422: 0e 22                      ; CLITERAL 34
1424: 19                         ; EMIT
1425: 0e 27                      ; CLITERAL 39
1427: 19                         ; EMIT
1428: fe                         ; RESET
1429: 0b ea 04 00 00             ; CALL >IN (04ea)
142e: 0b 9c 05 00 00             ; CALL ++ (059c)
1433: 06                         ; DUP
1434: 0e 22                      ; CLITERAL 34
1436: 16                         ; EQ
1437: 09 4f 14 00 00             ; JMPZ 144f
143c: 05                         ; DROP
143d: 0e 10                      ; CLITERAL 16
143f: 02                         ; FETCH
1440: 0e 00                      ; CLITERAL 0
1442: 0b 70 00 00 00             ; CALL C, (0070)
1447: 1a                         ; OVER
1448: 12                         ; SUB
1449: 0e 01                      ; CLITERAL 1
144b: 12                         ; SUB
144c: 04                         ; SWAP
144d: 10                         ; CSTORE
144e: 0c                         ; RET
144f: 0b 70 00 00 00             ; CALL C, (0070)
1454: 08 f2 13 00 00             ; JMP 13f2
1459: 0c                         ; RET
;
145a: 18 4e ee 03 00             ; DICTP ll (3ee4e)
145f: 07 09 6c 6f 61 64 73 2e 34 74 68 00 ; SLITERAL (1460) [loads.4th]
146b: 0b d1 12 00 00             ; CALL load (12d1)
1470: 0c                         ; RET
;
1471: 18 3a ee 03 00             ; DICTP sys-stats (3ee3a)
1476: 0b c4 0b 00 00             ; CALL .(MEM_SZ) (0bc4)
147b: 0e 2c                      ; CLITERAL 44
147d: 19                         ; EMIT
147e: 0e 20                      ; CLITERAL 32
1480: 19                         ; EMIT
1481: 0b fd 0b 00 00             ; CALL .(HERE) (0bfd)
1486: 0e 2c                      ; CLITERAL 44
1488: 19                         ; EMIT
1489: 0e 20                      ; CLITERAL 32
148b: 19                         ; EMIT
148c: 0b 32 0c 00 00             ; CALL .(LAST) (0c32)
1491: 0e 2c                      ; CLITERAL 44
1493: 19                         ; EMIT
1494: 0e 20                      ; CLITERAL 32
1496: 19                         ; EMIT
1497: 0b 1f 12 00 00             ; CALL FREE? (121f)
149c: 0b 59 07 00 00             ; CALL CR (0759)
14a1: 0c                         ; RET
;
14a2: 18 2c ee 03 00             ; DICTP lut (3ee2c)
14a7: 07 09 74 65 73 74 73 2e 34 74 68 00 ; SLITERAL (14a8) [tests.4th]
14b3: 0b d1 12 00 00             ; CALL load (12d1)
14b8: 0c                         ; RET
;
14b9: 18 1e ee 03 00             ; DICTP lsb (3ee1e)
14be: 07 0b 73 61 6e 64 62 6f 78 2e 34 74 68 00 ; SLITERAL (14bf) [sandbox.4th]
14cc: 0b d1 12 00 00             ; CALL load (12d1)
14d1: 0c                         ; RET
;
14d2: 18 11 ee 03 00             ; DICTP lw (3ee11)
14d7: 07 09 77 6f 72 64 73 2e 34 74 68 00 ; SLITERAL (14d8) [words.4th]
14e3: 0b d1 12 00 00             ; CALL load (12d1)
14e8: 0c                         ; RET
;
14e9: 18 02 ee 03 00             ; DICTP ?DUP (3ee02)
14ee: 06                         ; DUP
14ef: 09 f5 14 00 00             ; JMPZ 14f5
14f4: 06                         ; DUP
14f5: 0c                         ; RET
;
14f6: 18 f0 ed 03 00             ; DICTP (const) (3edf0)
14fb: 0e 01                      ; CLITERAL 1
14fd: 0b 70 00 00 00             ; CALL C, (0070)
1502: 0b f0 03 00 00             ; CALL , (03f0)
1507: 0e 0c                      ; CLITERAL 12
1509: 0b 70 00 00 00             ; CALL C, (0070)
150e: 0c                         ; RET
;
150f: 18 dd ed 03 00             ; DICTP CONSTANT (3eddd)
1514: 0b 29 11 00 00             ; CALL CREATE-NAME (1129)
1519: 0b f6 14 00 00             ; CALL (const) (14f6)
151e: 0c                         ; RET
;
151f: 18 ca ed 03 00             ; DICTP VARIABLE (3edca)
1524: 0b 29 11 00 00             ; CALL CREATE-NAME (1129)
1529: 0e 10                      ; CLITERAL 16
152b: 02                         ; FETCH
152c: 0e 02                      ; CLITERAL 2
152e: 11                         ; ADD
152f: 0e 04                      ; CLITERAL 4
1531: 11                         ; ADD
1532: 0b f6 14 00 00             ; CALL (const) (14f6)
1537: 0e 00                      ; CLITERAL 0
1539: 0b f0 03 00 00             ; CALL , (03f0)
153e: 0c                         ; RET
;
153f: 18 b9 ed 03 00             ; DICTP ascii. (3edb9)
1544: 06                         ; DUP
1545: 0b df 0a 00 00             ; CALL HEX. (0adf)
154a: 0e 20                      ; CLITERAL 32
154c: 19                         ; EMIT
154d: 06                         ; DUP
154e: 0b 02 0b 00 00             ; CALL DECIMAL. (0b02)
1553: 0e 20                      ; CLITERAL 32
1555: 19                         ; EMIT
1556: 19                         ; EMIT
1557: 0c                         ; RET
;
1558: 18 a9 ed 03 00             ; DICTP ascii (3eda9)
155d: 1a                         ; OVER
155e: 1a                         ; OVER
155f: 15                         ; LT
1560: 09 66 15 00 00             ; JMPZ 1566
1565: 04                         ; SWAP
1566: 0b 4d 07 00 00             ; CALL CRLF (074d)
156b: 06                         ; DUP
156c: 0b 3f 15 00 00             ; CALL ascii. (153f)
1571: 0e 01                      ; CLITERAL 1
1573: 11                         ; ADD
1574: 1a                         ; OVER
1575: 1a                         ; OVER
1576: 17                         ; GT
1577: 0a 66 15 00 00             ; JMPNZ 1566
157c: 05                         ; DROP
157d: 05                         ; DROP
157e: 0c                         ; RET
;
157f: 18 9a ed 03 00             ; DICTP dump (3ed9a)
1584: 0b 59 07 00 00             ; CALL CR (0759)
1589: 1a                         ; OVER
158a: 1a                         ; OVER
158b: 15                         ; LT
158c: 09 92 15 00 00             ; JMPZ 1592
1591: 04                         ; SWAP
1592: 1a                         ; OVER
1593: 1a                         ; OVER
1594: 15                         ; LT
1595: 09 9d 15 00 00             ; JMPZ 159d
159a: 05                         ; DROP
159b: 05                         ; DROP
159c: 0c                         ; RET
159d: 06                         ; DUP
159e: 0e 20                      ; CLITERAL 32
15a0: 19                         ; EMIT
15a1: 0f                         ; CFETCH
15a2: 0b df 0a 00 00             ; CALL HEX. (0adf)
15a7: 0e 01                      ; CLITERAL 1
15a9: 11                         ; ADD
15aa: 08 92 15 00 00             ; JMP 1592
15af: 0c                         ; RET
;
15b0: 18 87 ed 03 00             ; DICTP dump.num (3ed87)
15b5: 1a                         ; OVER
15b6: 11                         ; ADD
15b7: 0b 7f 15 00 00             ; CALL dump (157f)
15bc: 0c                         ; RET
;
15bd: 18 74 ed 03 00             ; DICTP img-save (3ed74)
15c2: 0e 01                      ; CLITERAL 1
15c4: 0e 01                      ; CLITERAL 1
15c6: 1c                         ; FOPEN
15c7: 09 fb 15 00 00             ; JMPZ 15fb
15cc: 21                         ; DTOR
15cd: 0e 00                      ; CLITERAL 0
15cf: 0b 1a 05 00 00             ; CALL MEM_SZ (051a)
15d4: 22                         ; RTOD
15d5: 06                         ; DUP
15d6: 21                         ; DTOR
15d7: 1f                         ; FWRITE
15d8: 0b d1 0a 00 00             ; CALL . (0ad1)
15dd: 07 0f 20 62 79 74 65 73 20 77 72 69 74 74 65 6e 2e 00 ; SLITERAL (15de) [ bytes written.]
15ef: 0b e4 06 00 00             ; CALL CT (06e4)
15f4: 22                         ; RTOD
15f5: 20                         ; FCLOSE
15f6: 08 15 16 00 00             ; JMP 1615
15fb: 07 11 63 61 6e 6e 6f 74 20 6f 70 65 6e 20 66 69 6c 65 21 00 ; SLITERAL (15fc) [cannot open file!]
160f: 0b e4 06 00 00             ; CALL CT (06e4)
1614: fe                         ; RESET
1615: 0c                         ; RET
;
1616: 18 60 ed 03 00             ; DICTP (stk-ptr) (3ed60)
161b: 0c                         ; RET
;
161c: 18 4c ed 03 00             ; DICTP (stk-top) (3ed4c)
1621: 0e 04                      ; CLITERAL 4
1623: 11                         ; ADD
1624: 0c                         ; RET
;
1625: 18 37 ed 03 00             ; DICTP stk-bottom (3ed37)
162a: 0e 04                      ; CLITERAL 4
162c: 06                         ; DUP
162d: 11                         ; ADD
162e: 11                         ; ADD
162f: 0c                         ; RET
;
1630: 18 25 ed 03 00             ; DICTP stk-top (3ed25)
1635: 0b 1c 16 00 00             ; CALL (stk-top) (161c)
163a: 02                         ; FETCH
163b: 0c                         ; RET
;
163c: 18 13 ed 03 00             ; DICTP stk-ptr (3ed13)
1641: 0b 16 16 00 00             ; CALL (stk-ptr) (1616)
1646: 02                         ; FETCH
1647: 0c                         ; RET
;
1648: 18 ff ec 03 00             ; DICTP stk-reset (3ecff)
164d: 06                         ; DUP
164e: 0b 25 16 00 00             ; CALL stk-bottom (1625)
1653: 04                         ; SWAP
1654: 0b 16 16 00 00             ; CALL (stk-ptr) (1616)
1659: 03                         ; STORE
165a: 0c                         ; RET
;
165b: 18 eb ec 03 00             ; DICTP stk-depth (3eceb)
1660: 06                         ; DUP
1661: 0b 3c 16 00 00             ; CALL stk-ptr (163c)
1666: 04                         ; SWAP
1667: 0b 25 16 00 00             ; CALL stk-bottom (1625)
166c: 12                         ; SUB
166d: 0e 04                      ; CLITERAL 4
166f: 14                         ; DIV
1670: 0c                         ; RET
;
1671: 18 d8 ec 03 00             ; DICTP stk-init (3ecd8)
1676: 04                         ; SWAP
1677: 0e 04                      ; CLITERAL 4
1679: 13                         ; MUL
167a: 0b ed 11 00 00             ; CALL ALLOT (11ed)
167f: 0e 10                      ; CLITERAL 16
1681: 02                         ; FETCH
1682: 1a                         ; OVER
1683: 0b 1c 16 00 00             ; CALL (stk-top) (161c)
1688: 03                         ; STORE
1689: 0e 04                      ; CLITERAL 4
168b: 0b ed 11 00 00             ; CALL ALLOT (11ed)
1690: 0b 48 16 00 00             ; CALL stk-reset (1648)
1695: 0c                         ; RET
;
1696: 18 c4 ec 03 00             ; DICTP stk-over? (3ecc4)
169b: 06                         ; DUP
169c: 0b 30 16 00 00             ; CALL stk-top (1630)
16a1: 1a                         ; OVER
16a2: 0b 3c 16 00 00             ; CALL stk-ptr (163c)
16a7: 15                         ; LT
16a8: 09 c6 16 00 00             ; JMPZ 16c6
16ad: 07 0f 53 74 61 63 6b 20 6f 76 65 72 66 6c 6f 77 2e 00 ; SLITERAL (16ae) [Stack overflow.]
16bf: 0b e4 06 00 00             ; CALL CT (06e4)
16c4: 05                         ; DROP
16c5: fe                         ; RESET
16c6: 05                         ; DROP
16c7: 0c                         ; RET
;
16c8: 18 af ec 03 00             ; DICTP stk-under? (3ecaf)
16cd: 06                         ; DUP
16ce: 0b 3c 16 00 00             ; CALL stk-ptr (163c)
16d3: 1a                         ; OVER
16d4: 0b 25 16 00 00             ; CALL stk-bottom (1625)
16d9: 17                         ; GT
16da: 0e 00                      ; CLITERAL 0
16dc: 16                         ; EQ
16dd: 09 fc 16 00 00             ; JMPZ 16fc
16e2: 07 0c 53 74 61 63 6b 20 65 6d 70 74 79 2e 00 ; SLITERAL (16e3) [Stack empty.]
16f1: 0b e4 06 00 00             ; CALL CT (06e4)
16f6: 0b 48 16 00 00             ; CALL stk-reset (1648)
16fb: fe                         ; RESET
16fc: 05                         ; DROP
16fd: 0c                         ; RET
;
16fe: 18 a0 ec 03 00             ; DICTP >stk (3eca0)
1703: 06                         ; DUP
1704: 0b 96 16 00 00             ; CALL stk-over? (1696)
1709: 0b 16 16 00 00             ; CALL (stk-ptr) (1616)
170e: 04                         ; SWAP
170f: 1a                         ; OVER
1710: 02                         ; FETCH
1711: 03                         ; STORE
1712: 0e 04                      ; CLITERAL 4
1714: 0b 85 05 00 00             ; CALL += (0585)
1719: 0c                         ; RET
;
171a: 18 91 ec 03 00             ; DICTP stk@ (3ec91)
171f: 06                         ; DUP
1720: 0b c8 16 00 00             ; CALL stk-under? (16c8)
1725: 0b 3c 16 00 00             ; CALL stk-ptr (163c)
172a: 0e 04                      ; CLITERAL 4
172c: 12                         ; SUB
172d: 02                         ; FETCH
172e: 0c                         ; RET
;
172f: 18 82 ec 03 00             ; DICTP stk> (3ec82)
1734: 06                         ; DUP
1735: 0b 1a 17 00 00             ; CALL stk@ (171a)
173a: 04                         ; SWAP
173b: 0b 16 16 00 00             ; CALL (stk-ptr) (1616)
1740: 0e 04                      ; CLITERAL 4
1742: 0b 90 05 00 00             ; CALL -= (0590)
1747: 0c                         ; RET
;
; End of code, Dictionary:
;
3ec82: 91 ec 03 00               ; stk> - (next: 3ec91 stk@)
3ec86: 2f 17 00 00 00            ; XT=172f, flags=00
3ec8b: 04 73 74 6b 3e 00         ; 4, stk>
;
3ec91: a0 ec 03 00               ; stk@ - (next: 3eca0 >stk)
3ec95: 1a 17 00 00 00            ; XT=171a, flags=00
3ec9a: 04 73 74 6b 40 00         ; 4, stk@
;
3eca0: af ec 03 00               ; >stk - (next: 3ecaf stk-under?)
3eca4: fe 16 00 00 00            ; XT=16fe, flags=00
3eca9: 04 3e 73 74 6b 00         ; 4, >stk
;
3ecaf: c4 ec 03 00               ; stk-under? - (next: 3ecc4 stk-over?)
3ecb3: c8 16 00 00 00            ; XT=16c8, flags=00
3ecb8: 0a 73 74 6b 2d 75 6e 64 65 72 3f 00 ; 10, stk-under?
;
3ecc4: d8 ec 03 00               ; stk-over? - (next: 3ecd8 stk-init)
3ecc8: 96 16 00 00 00            ; XT=1696, flags=00
3eccd: 09 73 74 6b 2d 6f 76 65 72 3f 00 ; 9, stk-over?
;
3ecd8: eb ec 03 00               ; stk-init - (next: 3eceb stk-depth)
3ecdc: 71 16 00 00 00            ; XT=1671, flags=00
3ece1: 08 73 74 6b 2d 69 6e 69 74 00 ; 8, stk-init
;
3eceb: ff ec 03 00               ; stk-depth - (next: 3ecff stk-reset)
3ecef: 5b 16 00 00 00            ; XT=165b, flags=00
3ecf4: 09 73 74 6b 2d 64 65 70 74 68 00 ; 9, stk-depth
;
3ecff: 13 ed 03 00               ; stk-reset - (next: 3ed13 stk-ptr)
3ed03: 48 16 00 00 00            ; XT=1648, flags=00
3ed08: 09 73 74 6b 2d 72 65 73 65 74 00 ; 9, stk-reset
;
3ed13: 25 ed 03 00               ; stk-ptr - (next: 3ed25 stk-top)
3ed17: 3c 16 00 00 00            ; XT=163c, flags=00
3ed1c: 07 73 74 6b 2d 70 74 72 00 ; 7, stk-ptr
;
3ed25: 37 ed 03 00               ; stk-top - (next: 3ed37 stk-bottom)
3ed29: 30 16 00 00 00            ; XT=1630, flags=00
3ed2e: 07 73 74 6b 2d 74 6f 70 00 ; 7, stk-top
;
3ed37: 4c ed 03 00               ; stk-bottom - (next: 3ed4c (stk-top))
3ed3b: 25 16 00 00 00            ; XT=1625, flags=00
3ed40: 0a 73 74 6b 2d 62 6f 74 74 6f 6d 00 ; 10, stk-bottom
;
3ed4c: 60 ed 03 00               ; (stk-top) - (next: 3ed60 (stk-ptr))
3ed50: 1c 16 00 00 00            ; XT=161c, flags=00
3ed55: 09 28 73 74 6b 2d 74 6f 70 29 00 ; 9, (stk-top)
;
3ed60: 74 ed 03 00               ; (stk-ptr) - (next: 3ed74 img-save)
3ed64: 16 16 00 00 00            ; XT=1616, flags=00
3ed69: 09 28 73 74 6b 2d 70 74 72 29 00 ; 9, (stk-ptr)
;
3ed74: 87 ed 03 00               ; img-save - (next: 3ed87 dump.num)
3ed78: bd 15 00 00 00            ; XT=15bd, flags=00
3ed7d: 08 69 6d 67 2d 73 61 76 65 00 ; 8, img-save
;
3ed87: 9a ed 03 00               ; dump.num - (next: 3ed9a dump)
3ed8b: b0 15 00 00 00            ; XT=15b0, flags=00
3ed90: 08 64 75 6d 70 2e 6e 75 6d 00 ; 8, dump.num
;
3ed9a: a9 ed 03 00               ; dump - (next: 3eda9 ascii)
3ed9e: 7f 15 00 00 00            ; XT=157f, flags=00
3eda3: 04 64 75 6d 70 00         ; 4, dump
;
3eda9: b9 ed 03 00               ; ascii - (next: 3edb9 ascii.)
3edad: 58 15 00 00 00            ; XT=1558, flags=00
3edb2: 05 61 73 63 69 69 00      ; 5, ascii
;
3edb9: ca ed 03 00               ; ascii. - (next: 3edca VARIABLE)
3edbd: 3f 15 00 00 00            ; XT=153f, flags=00
3edc2: 06 61 73 63 69 69 2e 00   ; 6, ascii.
;
3edca: dd ed 03 00               ; VARIABLE - (next: 3eddd CONSTANT)
3edce: 1f 15 00 00 02            ; XT=151f, flags=02
3edd3: 08 56 41 52 49 41 42 4c 45 00 ; 8, VARIABLE
;
3eddd: f0 ed 03 00               ; CONSTANT - (next: 3edf0 (const))
3ede1: 0f 15 00 00 02            ; XT=150f, flags=02
3ede6: 08 43 4f 4e 53 54 41 4e 54 00 ; 8, CONSTANT
;
3edf0: 02 ee 03 00               ; (const) - (next: 3ee02 ?DUP)
3edf4: f6 14 00 00 00            ; XT=14f6, flags=00
3edf9: 07 28 63 6f 6e 73 74 29 00 ; 7, (const)
;
3ee02: 11 ee 03 00               ; ?DUP - (next: 3ee11 lw)
3ee06: e9 14 00 00 00            ; XT=14e9, flags=00
3ee0b: 04 3f 44 55 50 00         ; 4, ?DUP
;
3ee11: 1e ee 03 00               ; lw - (next: 3ee1e lsb)
3ee15: d2 14 00 00 00            ; XT=14d2, flags=00
3ee1a: 02 6c 77 00               ; 2, lw
;
3ee1e: 2c ee 03 00               ; lsb - (next: 3ee2c lut)
3ee22: b9 14 00 00 00            ; XT=14b9, flags=00
3ee27: 03 6c 73 62 00            ; 3, lsb
;
3ee2c: 3a ee 03 00               ; lut - (next: 3ee3a sys-stats)
3ee30: a2 14 00 00 00            ; XT=14a2, flags=00
3ee35: 03 6c 75 74 00            ; 3, lut
;
3ee3a: 4e ee 03 00               ; sys-stats - (next: 3ee4e ll)
3ee3e: 71 14 00 00 00            ; XT=1471, flags=00
3ee43: 09 73 79 73 2d 73 74 61 74 73 00 ; 9, sys-stats
;
3ee4e: 5b ee 03 00               ; ll - (next: 3ee5b ")
3ee52: 5a 14 00 00 00            ; XT=145a, flags=00
3ee57: 02 6c 6c 00               ; 2, ll
;
3ee5b: 67 ee 03 00               ; " - (next: 3ee67 I")
3ee5f: c9 13 00 00 01            ; XT=13c9, flags=01
3ee64: 01 22 00                  ; 1, "
;
3ee67: 74 ee 03 00               ; I" - (next: 3ee74 STR.NULLTERM)
3ee6b: 6e 13 00 00 00            ; XT=136e, flags=00
3ee70: 02 49 22 00               ; 2, I"
;
3ee74: 8b ee 03 00               ; STR.NULLTERM - (next: 3ee8b STR.CATC)
3ee78: 5d 13 00 00 00            ; XT=135d, flags=00
3ee7d: 0c 53 54 52 2e 4e 55 4c 4c 54 45 52 4d 00 ; 12, STR.NULLTERM
;
3ee8b: 9e ee 03 00               ; STR.CATC - (next: 3ee9e STR.LEN)
3ee8f: 45 13 00 00 00            ; XT=1345, flags=00
3ee94: 08 53 54 52 2e 43 41 54 43 00 ; 8, STR.CATC
;
3ee9e: b0 ee 03 00               ; STR.LEN - (next: 3eeb0 STR.EMPTY)
3eea2: 3d 13 00 00 02            ; XT=133d, flags=02
3eea7: 07 53 54 52 2e 4c 45 4e 00 ; 7, STR.LEN
;
3eeb0: c4 ee 03 00               ; STR.EMPTY - (next: 3eec4 load)
3eeb4: 33 13 00 00 02            ; XT=1333, flags=02
3eeb9: 09 53 54 52 2e 45 4d 50 54 59 00 ; 9, STR.EMPTY
;
3eec4: d3 ee 03 00               ; load - (next: 3eed3 file-getLine)
3eec8: d1 12 00 00 00            ; XT=12d1, flags=00
3eecd: 04 6c 6f 61 64 00         ; 4, load
;
3eed3: ea ee 03 00               ; file-getLine - (next: 3eeea main)
3eed7: bb 12 00 00 00            ; XT=12bb, flags=00
3eedc: 0c 66 69 6c 65 2d 67 65 74 4c 69 6e 65 00 ; 12, file-getLine
;
3eeea: f9 ee 03 00               ; main - (next: 3eef9 mainLoop)
3eeee: 90 12 00 00 00            ; XT=1290, flags=00
3eef3: 04 6d 61 69 6e 00         ; 4, main
;
3eef9: 0c ef 03 00               ; mainLoop - (next: 3ef0c FREE?)
3eefd: 43 12 00 00 00            ; XT=1243, flags=00
3ef02: 08 6d 61 69 6e 4c 6f 6f 70 00 ; 8, mainLoop
;
3ef0c: 1c ef 03 00               ; FREE? - (next: 3ef1c FREE)
3ef10: 1f 12 00 00 00            ; XT=121f, flags=00
3ef15: 05 46 52 45 45 3f 00      ; 5, FREE?
;
3ef1c: 2b ef 03 00               ; FREE - (next: 3ef2b C?)
3ef20: 12 12 00 00 00            ; XT=1212, flags=00
3ef25: 04 46 52 45 45 00         ; 4, FREE
;
3ef2b: 38 ef 03 00               ; C? - (next: 3ef38 ?)
3ef2f: 06 12 00 00 00            ; XT=1206, flags=00
3ef34: 02 43 3f 00               ; 2, C?
;
3ef38: 44 ef 03 00               ; ? - (next: 3ef44 ALLOT)
3ef3c: fa 11 00 00 00            ; XT=11fa, flags=00
3ef41: 01 3f 00                  ; 1, ?
;
3ef44: 54 ef 03 00               ; ALLOT - (next: 3ef54 resetState)
3ef48: ed 11 00 00 00            ; XT=11ed, flags=00
3ef4d: 05 41 4c 4c 4f 54 00      ; 5, ALLOT
;
3ef54: 69 ef 03 00               ; resetState - (next: 3ef69 ForgetLast)
3ef58: cc 11 00 00 00            ; XT=11cc, flags=00
3ef5d: 0a 72 65 73 65 74 53 74 61 74 65 00 ; 10, resetState
;
3ef69: 7e ef 03 00               ; ForgetLast - (next: 3ef7e ;)
3ef6d: b5 11 00 00 00            ; XT=11b5, flags=00
3ef72: 0a 46 6f 72 67 65 74 4c 61 73 74 00 ; 10, ForgetLast
;
3ef7e: 8a ef 03 00               ; ; - (next: 3ef8a :NONAME)
3ef82: a1 11 00 00 01            ; XT=11a1, flags=01
3ef87: 01 3b 00                  ; 1, ;
;
3ef8a: 9c ef 03 00               ; :NONAME - (next: 3ef9c :)
3ef8e: 91 11 00 00 00            ; XT=1191, flags=00
3ef93: 07 3a 4e 4f 4e 41 4d 45 00 ; 7, :NONAME
;
3ef9c: a8 ef 03 00               ; : - (next: 3efa8 CREATE-NAME)
3efa0: 7f 11 00 00 00            ; XT=117f, flags=00
3efa5: 01 3a 00                  ; 1, :
;
3efa8: be ef 03 00               ; CREATE-NAME - (next: 3efbe Define-Word)
3efac: 29 11 00 00 00            ; XT=1129, flags=00
3efb1: 0b 43 52 45 41 54 45 2d 4e 41 4d 45 00 ; 11, CREATE-NAME
;
3efbe: d4 ef 03 00               ; Define-Word - (next: 3efd4 strcpy2c)
3efc2: e0 10 00 00 00            ; XT=10e0, flags=00
3efc7: 0b 44 65 66 69 6e 65 2d 57 6f 72 64 00 ; 11, Define-Word
;
3efd4: e7 ef 03 00               ; strcpy2c - (next: 3efe7 getLine)
3efd8: a0 10 00 00 00            ; XT=10a0, flags=00
3efdd: 08 73 74 72 63 70 79 32 63 00 ; 8, strcpy2c
;
3efe7: f9 ef 03 00               ; getLine - (next: 3eff9 getLineFromFile)
3efeb: cd 0f 00 00 00            ; XT=0fcd, flags=00
3eff0: 07 67 65 74 4c 69 6e 65 00 ; 7, getLine
;
3eff9: 13 f0 03 00               ; getLineFromFile - (next: 3f013 LoadingFromFile?)
3effd: b2 0f 00 00 00            ; XT=0fb2, flags=00
3f002: 0f 67 65 74 4c 69 6e 65 46 72 6f 6d 46 69 6c 65 00 ; 15, getLineFromFile
;
3f013: 2e f0 03 00               ; LoadingFromFile? - (next: 3f02e Pad)
3f017: a9 0f 00 00 00            ; XT=0fa9, flags=00
3f01c: 10 4c 6f 61 64 69 6e 67 46 72 6f 6d 46 69 6c 65 3f 00 ; 16, LoadingFromFile?
;
3f02e: 3c f0 03 00               ; Pad - (next: 3f03c executeInput)
3f032: 81 0f 00 00 00            ; XT=0f81, flags=00
3f037: 03 50 61 64 00            ; 3, Pad
;
3f03c: 53 f0 03 00               ; executeInput - (next: 3f053 executeWord)
3f040: 3d 0f 00 00 00            ; XT=0f3d, flags=00
3f045: 0c 65 78 65 63 75 74 65 49 6e 70 75 74 00 ; 12, executeInput
;
3f053: 69 f0 03 00               ; executeWord - (next: 3f069 [COMPILE])
3f057: 9a 0e 00 00 00            ; XT=0e9a, flags=00
3f05c: 0b 65 78 65 63 75 74 65 57 6f 72 64 00 ; 11, executeWord
;
3f069: 7d f0 03 00               ; [COMPILE] - (next: 3f07d cstr,)
3f06d: 74 0e 00 00 00            ; XT=0e74, flags=00
3f072: 09 5b 43 4f 4d 50 49 4c 45 5d 00 ; 9, [COMPILE]
;
3f07d: 8d f0 03 00               ; cstr, - (next: 3f08d strlen)
3f081: 5f 0e 00 00 00            ; XT=0e5f, flags=00
3f086: 05 63 73 74 72 2c 00      ; 5, cstr,
;
3f08d: 9e f0 03 00               ; strlen - (next: 3f09e Copy.INLINE)
3f091: 3c 0e 00 00 00            ; XT=0e3c, flags=00
3f096: 06 73 74 72 6c 65 6e 00   ; 6, strlen
;
3f09e: b4 f0 03 00               ; Copy.INLINE - (next: 3f0b4 DOES>)
3f0a2: 1b 0e 00 00 00            ; XT=0e1b, flags=00
3f0a7: 0b 43 6f 70 79 2e 49 4e 4c 49 4e 45 00 ; 11, Copy.INLINE
;
3f0b4: c4 f0 03 00               ; DOES> - (next: 3f0c4 (inline))
3f0b8: 04 0e 00 00 00            ; XT=0e04, flags=00
3f0bd: 05 44 4f 45 53 3e 00      ; 5, DOES>
;
3f0c4: d7 f0 03 00               ; (inline) - (next: 3f0d7 find.ret)
3f0c8: e1 0d 00 00 00            ; XT=0de1, flags=00
3f0cd: 08 28 69 6e 6c 69 6e 65 29 00 ; 8, (inline)
;
3f0d7: ea f0 03 00               ; find.ret - (next: 3f0ea EXECUTE)
3f0db: c8 0d 00 00 00            ; XT=0dc8, flags=00
3f0e0: 08 66 69 6e 64 2e 72 65 74 00 ; 8, find.ret
;
3f0ea: fc f0 03 00               ; EXECUTE - (next: 3f0fc .lastx)
3f0ee: bf 0d 00 00 00            ; XT=0dbf, flags=00
3f0f3: 07 45 58 45 43 55 54 45 00 ; 7, EXECUTE
;
3f0fc: 0d f1 03 00               ; .lastx - (next: 3f10d NUM-WORDS)
3f100: 86 0d 00 00 00            ; XT=0d86, flags=00
3f105: 06 2e 6c 61 73 74 78 00   ; 6, .lastx
;
3f10d: 21 f1 03 00               ; NUM-WORDS - (next: 3f121 WORDSV)
3f111: 5d 0d 00 00 00            ; XT=0d5d, flags=00
3f116: 09 4e 55 4d 2d 57 4f 52 44 53 00 ; 9, NUM-WORDS
;
3f121: 32 f1 03 00               ; WORDSV - (next: 3f132 .WORD-LONG)
3f125: 2f 0d 00 00 00            ; XT=0d2f, flags=00
3f12a: 06 57 4f 52 44 53 56 00   ; 6, WORDSV
;
3f132: 47 f1 03 00               ; .WORD-LONG - (next: 3f147 WORDS)
3f136: a0 0c 00 00 00            ; XT=0ca0, flags=00
3f13b: 0a 2e 57 4f 52 44 2d 4c 4f 4e 47 00 ; 10, .WORD-LONG
;
3f147: 57 f1 03 00               ; WORDS - (next: 3f157 .WORD-SHORT)
3f14b: 7c 0c 00 00 00            ; XT=0c7c, flags=00
3f150: 05 57 4f 52 44 53 00      ; 5, WORDS
;
3f157: 6d f1 03 00               ; .WORD-SHORT - (next: 3f16d .(LAST))
3f15b: 67 0c 00 00 00            ; XT=0c67, flags=00
3f160: 0b 2e 57 4f 52 44 2d 53 48 4f 52 54 00 ; 11, .WORD-SHORT
;
3f16d: 7f f1 03 00               ; .(LAST) - (next: 3f17f .(HERE))
3f171: 32 0c 00 00 00            ; XT=0c32, flags=00
3f176: 07 2e 28 4c 41 53 54 29 00 ; 7, .(LAST)
;
3f17f: 91 f1 03 00               ; .(HERE) - (next: 3f191 .(MEM_SZ))
3f183: fd 0b 00 00 00            ; XT=0bfd, flags=00
3f188: 07 2e 28 48 45 52 45 29 00 ; 7, .(HERE)
;
3f191: a5 f1 03 00               ; .(MEM_SZ) - (next: 3f1a5 .S)
3f195: c4 0b 00 00 00            ; XT=0bc4, flags=00
3f19a: 09 2e 28 4d 45 4d 5f 53 5a 29 00 ; 9, .(MEM_SZ)
;
3f1a5: b2 f1 03 00               ; .S - (next: 3f1b2 MAX)
3f1a9: 50 0b 00 00 00            ; XT=0b50, flags=00
3f1ae: 02 2e 53 00               ; 2, .S
;
3f1b2: c0 f1 03 00               ; MAX - (next: 3f1c0 MIN)
3f1b6: 40 0b 00 00 00            ; XT=0b40, flags=00
3f1bb: 03 4d 41 58 00            ; 3, MAX
;
3f1c0: ce f1 03 00               ; MIN - (next: 3f1ce BINARY.)
3f1c4: 30 0b 00 00 00            ; XT=0b30, flags=00
3f1c9: 03 4d 49 4e 00            ; 3, MIN
;
3f1ce: e0 f1 03 00               ; BINARY. - (next: 3f1e0 DECIMAL.)
3f1d2: 19 0b 00 00 00            ; XT=0b19, flags=00
3f1d7: 07 42 49 4e 41 52 59 2e 00 ; 7, BINARY.
;
3f1e0: f3 f1 03 00               ; DECIMAL. - (next: 3f1f3 HEX.)
3f1e4: 02 0b 00 00 00            ; XT=0b02, flags=00
3f1e9: 08 44 45 43 49 4d 41 4c 2e 00 ; 8, DECIMAL.
;
3f1f3: 02 f2 03 00               ; HEX. - (next: 3f202 .)
3f1f7: df 0a 00 00 00            ; XT=0adf, flags=00
3f1fc: 04 48 45 58 2e 00         ; 4, HEX.
;
3f202: 0e f2 03 00               ; . - (next: 3f20e (.))
3f206: d1 0a 00 00 00            ; XT=0ad1, flags=00
3f20b: 01 2e 00                  ; 1, .
;
3f20e: 1c f2 03 00               ; (.) - (next: 3f21c /MOD)
3f212: 5d 0a 00 00 00            ; XT=0a5d, flags=00
3f217: 03 28 2e 29 00            ; 3, (.)
;
3f21c: 2b f2 03 00               ; /MOD - (next: 3f22b MOD)
3f220: 4c 0a 00 00 00            ; XT=0a4c, flags=00
3f225: 04 2f 4d 4f 44 00         ; 4, /MOD
;
3f22b: 39 f2 03 00               ; MOD - (next: 3f239 isNumber?)
3f22f: 41 0a 00 00 00            ; XT=0a41, flags=00
3f234: 03 4d 4f 44 00            ; 3, MOD
;
3f239: 4d f2 03 00               ; isNumber? - (next: 3f24d ABS)
3f23d: e0 09 00 00 00            ; XT=09e0, flags=00
3f242: 09 69 73 4e 75 6d 62 65 72 3f 00 ; 9, isNumber?
;
3f24d: 5b f2 03 00               ; ABS - (next: 3f25b NEGATE)
3f251: cc 09 00 00 00            ; XT=09cc, flags=00
3f256: 03 41 42 53 00            ; 3, ABS
;
3f25b: 6c f2 03 00               ; NEGATE - (next: 3f26c isNumChar?)
3f25f: c2 09 00 00 00            ; XT=09c2, flags=00
3f264: 06 4e 45 47 41 54 45 00   ; 6, NEGATE
;
3f26c: 81 f2 03 00               ; isNumChar? - (next: 3f281 isHEX?)
3f270: 71 09 00 00 00            ; XT=0971, flags=00
3f275: 0a 69 73 4e 75 6d 43 68 61 72 3f 00 ; 10, isNumChar?
;
3f281: 92 f2 03 00               ; isHEX? - (next: 3f292 findInDict)
3f285: 65 09 00 00 00            ; XT=0965, flags=00
3f28a: 06 69 73 48 45 58 3f 00   ; 6, isHEX?
;
3f292: a7 f2 03 00               ; findInDict - (next: 3f2a7 DICT.GetINLINE)
3f296: 1c 09 00 00 00            ; XT=091c, flags=00
3f29b: 0a 66 69 6e 64 49 6e 44 69 63 74 00 ; 10, findInDict
;
3f2a7: c0 f2 03 00               ; DICT.GetINLINE - (next: 3f2c0 DICT.GetIMMEDIATE)
3f2ab: 0c 09 00 00 00            ; XT=090c, flags=00
3f2b0: 0e 44 49 43 54 2e 47 65 74 49 4e 4c 49 4e 45 00 ; 14, DICT.GetINLINE
;
3f2c0: dc f2 03 00               ; DICT.GetIMMEDIATE - (next: 3f2dc FLAGS.ISINLINE?)
3f2c4: fc 08 00 00 00            ; XT=08fc, flags=00
3f2c9: 11 44 49 43 54 2e 47 65 74 49 4d 4d 45 44 49 41 54 45 00 ; 17, DICT.GetIMMEDIATE
;
3f2dc: f6 f2 03 00               ; FLAGS.ISINLINE? - (next: 3f2f6 FLAGS.ISIMMEDIATE?)
3f2e0: f3 08 00 00 00            ; XT=08f3, flags=00
3f2e5: 0f 46 4c 41 47 53 2e 49 53 49 4e 4c 49 4e 45 3f 00 ; 15, FLAGS.ISINLINE?
;
3f2f6: 13 f3 03 00               ; FLAGS.ISIMMEDIATE? - (next: 3f313 XT.GetDICTP)
3f2fa: ea 08 00 00 00            ; XT=08ea, flags=00
3f2ff: 12 46 4c 41 47 53 2e 49 53 49 4d 4d 45 44 49 41 54 45 3f 00 ; 18, FLAGS.ISIMMEDIATE?
;
3f313: 29 f3 03 00               ; XT.GetDICTP - (next: 3f329 DICTP>NAME)
3f317: cf 08 00 00 00            ; XT=08cf, flags=00
3f31c: 0b 58 54 2e 47 65 74 44 49 43 54 50 00 ; 11, XT.GetDICTP
;
3f329: 3e f3 03 00               ; DICTP>NAME - (next: 3f33e DICT.GetFLAGS)
3f32d: c0 08 00 00 00            ; XT=08c0, flags=00
3f332: 0a 44 49 43 54 50 3e 4e 41 4d 45 00 ; 10, DICTP>NAME
;
3f33e: 56 f3 03 00               ; DICT.GetFLAGS - (next: 3f356 DICT.GetXT)
3f342: b4 08 00 00 00            ; XT=08b4, flags=00
3f347: 0d 44 49 43 54 2e 47 65 74 46 4c 41 47 53 00 ; 13, DICT.GetFLAGS
;
3f356: 6b f3 03 00               ; DICT.GetXT - (next: 3f36b NAME>DICT)
3f35a: a8 08 00 00 00            ; XT=08a8, flags=00
3f35f: 0a 44 49 43 54 2e 47 65 74 58 54 00 ; 10, DICT.GetXT
;
3f36b: 7f f3 03 00               ; NAME>DICT - (next: 3f37f FLAGS>DICT)
3f36f: 99 08 00 00 00            ; XT=0899, flags=00
3f374: 09 4e 41 4d 45 3e 44 49 43 54 00 ; 9, NAME>DICT
;
3f37f: 94 f3 03 00               ; FLAGS>DICT - (next: 3f394 XT>DICT)
3f383: 8d 08 00 00 00            ; XT=088d, flags=00
3f388: 0a 46 4c 41 47 53 3e 44 49 43 54 00 ; 10, FLAGS>DICT
;
3f394: a6 f3 03 00               ; XT>DICT - (next: 3f3a6 NEXT>DICT)
3f398: 84 08 00 00 00            ; XT=0884, flags=00
3f39d: 07 58 54 3e 44 49 43 54 00 ; 7, XT>DICT
;
3f3a6: ba f3 03 00               ; NEXT>DICT - (next: 3f3ba DICT>NAME)
3f3aa: 7e 08 00 00 00            ; XT=087e, flags=00
3f3af: 09 4e 45 58 54 3e 44 49 43 54 00 ; 9, NEXT>DICT
;
3f3ba: ce f3 03 00               ; DICT>NAME - (next: 3f3ce DICT>FLAGS)
3f3be: 70 08 00 00 00            ; XT=0870, flags=00
3f3c3: 09 44 49 43 54 3e 4e 41 4d 45 00 ; 9, DICT>NAME
;
3f3ce: e3 f3 03 00               ; DICT>FLAGS - (next: 3f3e3 DICT>XT)
3f3d2: 64 08 00 00 00            ; XT=0864, flags=00
3f3d7: 0a 44 49 43 54 3e 46 4c 41 47 53 00 ; 10, DICT>FLAGS
;
3f3e3: f5 f3 03 00               ; DICT>XT - (next: 3f3f5 DICT>NEXT)
3f3e7: 5b 08 00 00 00            ; XT=085b, flags=00
3f3ec: 07 44 49 43 54 3e 58 54 00 ; 7, DICT>XT
;
3f3f5: 09 f4 03 00               ; DICT>NEXT - (next: 3f409 getOneWord)
3f3f9: 55 08 00 00 00            ; XT=0855, flags=00
3f3fe: 09 44 49 43 54 3e 4e 45 58 54 00 ; 9, DICT>NEXT
;
3f409: 1e f4 03 00               ; getOneWord - (next: 3f41e skipWS)
3f40d: 19 08 00 00 00            ; XT=0819, flags=00
3f412: 0a 67 65 74 4f 6e 65 57 6f 72 64 00 ; 10, getOneWord
;
3f41e: 2f f4 03 00               ; skipWS - (next: 3f42f getInput)
3f422: ee 07 00 00 00            ; XT=07ee, flags=00
3f427: 06 73 6b 69 70 57 53 00   ; 6, skipWS
;
3f42f: 42 f4 03 00               ; getInput - (next: 3f442 PAD)
3f433: d8 07 00 00 00            ; XT=07d8, flags=00
3f438: 08 67 65 74 49 6e 70 75 74 00 ; 8, getInput
;
3f442: 50 f4 03 00               ; PAD - (next: 3f450 tmp-alloc)
3f446: c6 07 00 00 00            ; XT=07c6, flags=00
3f44b: 03 50 41 44 00            ; 3, PAD
;
3f450: 64 f4 03 00               ; tmp-alloc - (next: 3f464 tmp-cur)
3f454: af 07 00 00 00            ; XT=07af, flags=00
3f459: 09 74 6d 70 2d 61 6c 6c 6f 63 00 ; 9, tmp-alloc
;
3f464: 76 f4 03 00               ; tmp-cur - (next: 3f476 tmp-init)
3f468: a3 07 00 00 00            ; XT=07a3, flags=00
3f46d: 07 74 6d 70 2d 63 75 72 00 ; 7, tmp-cur
;
3f476: 89 f4 03 00               ; tmp-init - (next: 3f489 (tmp))
3f47a: 94 07 00 00 00            ; XT=0794, flags=00
3f47f: 08 74 6d 70 2d 69 6e 69 74 00 ; 8, tmp-init
;
3f489: 99 f4 03 00               ; (tmp) - (next: 3f499 BETWEEN)
3f48d: 85 07 00 00 00            ; XT=0785, flags=00
3f492: 05 28 74 6d 70 29 00      ; 5, (tmp)
;
3f499: ab f4 03 00               ; BETWEEN - (next: 3f4ab BL)
3f49d: 6d 07 00 00 00            ; XT=076d, flags=00
3f4a2: 07 42 45 54 57 45 45 4e 00 ; 7, BETWEEN
;
3f4ab: b8 f4 03 00               ; BL - (next: 3f4b8 CR)
3f4af: 64 07 00 00 02            ; XT=0764, flags=02
3f4b4: 02 42 4c 00               ; 2, BL
;
3f4b8: c5 f4 03 00               ; CR - (next: 3f4c5 CRLF)
3f4bc: 59 07 00 00 00            ; XT=0759, flags=00
3f4c1: 02 43 52 00               ; 2, CR
;
3f4c5: d4 f4 03 00               ; CRLF - (next: 3f4d4 ()
3f4c9: 4d 07 00 00 00            ; XT=074d, flags=00
3f4ce: 04 43 52 4c 46 00         ; 4, CRLF
;
3f4d4: e0 f4 03 00               ; ( - (next: 3f4e0 \)
3f4d8: 03 07 00 00 01            ; XT=0703, flags=01
3f4dd: 01 28 00                  ; 1, (
;
3f4e0: ec f4 03 00               ; \ - (next: 3f4ec CT)
3f4e4: f4 06 00 00 01            ; XT=06f4, flags=01
3f4e9: 01 5c 00                  ; 1, \
;
3f4ec: f9 f4 03 00               ; CT - (next: 3f4f9 TYPE)
3f4f0: e4 06 00 00 00            ; XT=06e4, flags=00
3f4f5: 02 43 54 00               ; 2, CT
;
3f4f9: 08 f5 03 00               ; TYPE - (next: 3f508 UNTIL)
3f4fd: c2 06 00 00 00            ; XT=06c2, flags=00
3f502: 04 54 59 50 45 00         ; 4, TYPE
;
3f508: 18 f5 03 00               ; UNTIL - (next: 3f518 WHILE)
3f50c: a6 06 00 00 01            ; XT=06a6, flags=01
3f511: 05 55 4e 54 49 4c 00      ; 5, UNTIL
;
3f518: 28 f5 03 00               ; WHILE - (next: 3f528 AGAIN)
3f51c: 8a 06 00 00 01            ; XT=068a, flags=01
3f521: 05 57 48 49 4c 45 00      ; 5, WHILE
;
3f528: 38 f5 03 00               ; AGAIN - (next: 3f538 BEGIN)
3f52c: 6e 06 00 00 01            ; XT=066e, flags=01
3f531: 05 41 47 41 49 4e 00      ; 5, AGAIN
;
3f538: 48 f5 03 00               ; BEGIN - (next: 3f548 LEAVE)
3f53c: 5b 06 00 00 01            ; XT=065b, flags=01
3f541: 05 42 45 47 49 4e 00      ; 5, BEGIN
;
3f548: 58 f5 03 00               ; LEAVE - (next: 3f558 COUNT)
3f54c: 44 06 00 00 01            ; XT=0644, flags=01
3f551: 05 4c 45 41 56 45 00      ; 5, LEAVE
;
3f558: 68 f5 03 00               ; COUNT - (next: 3f568 2DROP)
3f55c: 38 06 00 00 00            ; XT=0638, flags=00
3f561: 05 43 4f 55 4e 54 00      ; 5, COUNT
;
3f568: 78 f5 03 00               ; 2DROP - (next: 3f578 2DUP)
3f56c: 30 06 00 00 02            ; XT=0630, flags=02
3f571: 05 32 44 52 4f 50 00      ; 5, 2DROP
;
3f578: 87 f5 03 00               ; 2DUP - (next: 3f587 NOT)
3f57c: 28 06 00 00 02            ; XT=0628, flags=02
3f581: 04 32 44 55 50 00         ; 4, 2DUP
;
3f587: 95 f5 03 00               ; NOT - (next: 3f595 FALSE)
3f58b: 1f 06 00 00 02            ; XT=061f, flags=02
3f590: 03 4e 4f 54 00            ; 3, NOT
;
3f595: a5 f5 03 00               ; FALSE - (next: 3f5a5 TRUE)
3f599: 17 06 00 00 02            ; XT=0617, flags=02
3f59e: 05 46 41 4c 53 45 00      ; 5, FALSE
;
3f5a5: b4 f5 03 00               ; TRUE - (next: 3f5b4 >=)
3f5a9: 0f 06 00 00 02            ; XT=060f, flags=02
3f5ae: 04 54 52 55 45 00         ; 4, TRUE
;
3f5b4: c1 f5 03 00               ; >= - (next: 3f5c1 <=)
3f5b8: 05 06 00 00 02            ; XT=0605, flags=02
3f5bd: 02 3e 3d 00               ; 2, >=
;
3f5c1: ce f5 03 00               ; <= - (next: 3f5ce <>)
3f5c5: fb 05 00 00 02            ; XT=05fb, flags=02
3f5ca: 02 3c 3d 00               ; 2, <=
;
3f5ce: db f5 03 00               ; <> - (next: 3f5db 0=)
3f5d2: f1 05 00 00 02            ; XT=05f1, flags=02
3f5d7: 02 3c 3e 00               ; 2, <>
;
3f5db: e8 f5 03 00               ; 0= - (next: 3f5e8 C+!)
3f5df: e8 05 00 00 02            ; XT=05e8, flags=02
3f5e4: 02 30 3d 00               ; 2, 0=
;
3f5e8: f6 f5 03 00               ; C+! - (next: 3f5f6 +!)
3f5ec: dc 05 00 00 00            ; XT=05dc, flags=00
3f5f1: 03 43 2b 21 00            ; 3, C+!
;
3f5f6: 03 f6 03 00               ; +! - (next: 3f603 C--)
3f5fa: d0 05 00 00 00            ; XT=05d0, flags=00
3f5ff: 02 2b 21 00               ; 2, +!
;
3f603: 11 f6 03 00               ; C-- - (next: 3f611 C++)
3f607: c3 05 00 00 00            ; XT=05c3, flags=00
3f60c: 03 43 2d 2d 00            ; 3, C--
;
3f611: 1f f6 03 00               ; C++ - (next: 3f61f --)
3f615: b6 05 00 00 00            ; XT=05b6, flags=00
3f61a: 03 43 2b 2b 00            ; 3, C++
;
3f61f: 2c f6 03 00               ; -- - (next: 3f62c ++)
3f623: a9 05 00 00 00            ; XT=05a9, flags=00
3f628: 02 2d 2d 00               ; 2, --
;
3f62c: 39 f6 03 00               ; ++ - (next: 3f639 -=)
3f630: 9c 05 00 00 00            ; XT=059c, flags=00
3f635: 02 2b 2b 00               ; 2, ++
;
3f639: 46 f6 03 00               ; -= - (next: 3f646 +=)
3f63d: 90 05 00 00 00            ; XT=0590, flags=00
3f642: 02 2d 3d 00               ; 2, -=
;
3f646: 53 f6 03 00               ; += - (next: 3f653 -ROT)
3f64a: 85 05 00 00 00            ; XT=0585, flags=00
3f64f: 02 2b 3d 00               ; 2, +=
;
3f653: 62 f6 03 00               ; -ROT - (next: 3f662 ROT)
3f657: 7b 05 00 00 00            ; XT=057b, flags=00
3f65c: 04 2d 52 4f 54 00         ; 4, -ROT
;
3f662: 70 f6 03 00               ; ROT - (next: 3f670 NIP)
3f666: 71 05 00 00 00            ; XT=0571, flags=00
3f66b: 03 52 4f 54 00            ; 3, ROT
;
3f670: 7e f6 03 00               ; NIP - (next: 3f67e TUCK)
3f674: 69 05 00 00 02            ; XT=0569, flags=02
3f679: 03 4e 49 50 00            ; 3, NIP
;
3f67e: 8d f6 03 00               ; TUCK - (next: 3f68d RDROP)
3f682: 61 05 00 00 02            ; XT=0561, flags=02
3f687: 04 54 55 43 4b 00         ; 4, TUCK
;
3f68d: 9d f6 03 00               ; RDROP - (next: 3f69d R@)
3f691: 59 05 00 00 02            ; XT=0559, flags=02
3f696: 05 52 44 52 4f 50 00      ; 5, RDROP
;
3f69d: aa f6 03 00               ; R@ - (next: 3f6aa 2/)
3f6a1: 50 05 00 00 02            ; XT=0550, flags=02
3f6a6: 02 52 40 00               ; 2, R@
;
3f6aa: b7 f6 03 00               ; 2/ - (next: 3f6b7 2*)
3f6ae: 47 05 00 00 02            ; XT=0547, flags=02
3f6b3: 02 32 2f 00               ; 2, 2/
;
3f6b7: c4 f6 03 00               ; 2* - (next: 3f6c4 1-)
3f6bb: 3e 05 00 00 02            ; XT=053e, flags=02
3f6c0: 02 32 2a 00               ; 2, 2*
;
3f6c4: d1 f6 03 00               ; 1- - (next: 3f6d1 1+)
3f6c8: 35 05 00 00 02            ; XT=0535, flags=02
3f6cd: 02 31 2d 00               ; 2, 1-
;
3f6d1: de f6 03 00               ; 1+ - (next: 3f6de MEM_SZ)
3f6d5: 2c 05 00 00 02            ; XT=052c, flags=02
3f6da: 02 31 2b 00               ; 2, 1+
;
3f6de: ef f6 03 00               ; MEM_SZ - (next: 3f6ef (MEM_K))
3f6e2: 1a 05 00 00 00            ; XT=051a, flags=00
3f6e7: 06 4d 45 4d 5f 53 5a 00   ; 6, MEM_SZ
;
3f6ef: 01 f7 03 00               ; (MEM_K) - (next: 3f701 isNeg)
3f6f3: 0a 05 00 00 00            ; XT=050a, flags=00
3f6f8: 07 28 4d 45 4d 5f 4b 29 00 ; 7, (MEM_K)
;
3f701: 11 f7 03 00               ; isNeg - (next: 3f711 >IN)
3f705: fa 04 00 00 00            ; XT=04fa, flags=00
3f70a: 05 69 73 4e 65 67 00      ; 5, isNeg
;
3f711: 1f f7 03 00               ; >IN - (next: 3f71f ELSE)
3f715: ea 04 00 00 00            ; XT=04ea, flags=00
3f71a: 03 3e 49 4e 00            ; 3, >IN
;
3f71f: 2e f7 03 00               ; ELSE - (next: 3f72e IF)
3f723: c3 04 00 00 01            ; XT=04c3, flags=01
3f728: 04 45 4c 53 45 00         ; 4, ELSE
;
3f72e: 3b f7 03 00               ; IF - (next: 3f73b THEN)
3f732: a2 04 00 00 01            ; XT=04a2, flags=01
3f737: 02 49 46 00               ; 2, IF
;
3f73b: 4a f7 03 00               ; THEN - (next: 3f74a ?COMPILING)
3f73f: 8d 04 00 00 01            ; XT=048d, flags=01
3f744: 04 54 48 45 4e 00         ; 4, THEN
;
3f74a: 5f f7 03 00               ; ?COMPILING - (next: 3f75f ])
3f74e: 84 04 00 00 00            ; XT=0484, flags=00
3f753: 0a 3f 43 4f 4d 50 49 4c 49 4e 47 00 ; 10, ?COMPILING
;
3f75f: 6b f7 03 00               ; ] - (next: 3f76b [)
3f763: 79 04 00 00 01            ; XT=0479, flags=01
3f768: 01 5d 00                  ; 1, ]
;
3f76b: 77 f7 03 00               ; [ - (next: 3f777 OFF)
3f76f: 6e 04 00 00 01            ; XT=046e, flags=01
3f774: 01 5b 00                  ; 1, [
;
3f777: 85 f7 03 00               ; OFF - (next: 3f785 ON)
3f77b: 64 04 00 00 00            ; XT=0464, flags=00
3f780: 03 4f 46 46 00            ; 3, OFF
;
3f785: 92 f7 03 00               ; ON - (next: 3f792 BINARY)
3f789: 5a 04 00 00 00            ; XT=045a, flags=00
3f78e: 02 4f 4e 00               ; 2, ON
;
3f792: a3 f7 03 00               ; BINARY - (next: 3f7a3 OCTAL)
3f796: 4f 04 00 00 00            ; XT=044f, flags=00
3f79b: 06 42 49 4e 41 52 59 00   ; 6, BINARY
;
3f7a3: b3 f7 03 00               ; OCTAL - (next: 3f7b3 DECIMAL)
3f7a7: 44 04 00 00 00            ; XT=0444, flags=00
3f7ac: 05 4f 43 54 41 4c 00      ; 5, OCTAL
;
3f7b3: c5 f7 03 00               ; DECIMAL - (next: 3f7c5 HEX)
3f7b7: 39 04 00 00 00            ; XT=0439, flags=00
3f7bc: 07 44 45 43 49 4d 41 4c 00 ; 7, DECIMAL
;
3f7c5: d3 f7 03 00               ; HEX - (next: 3f7d3 DEBUG-OFF)
3f7c9: 2e 04 00 00 00            ; XT=042e, flags=00
3f7ce: 03 48 45 58 00            ; 3, HEX
;
3f7d3: e7 f7 03 00               ; DEBUG-OFF - (next: 3f7e7 DEBUG-ON)
3f7d7: 25 04 00 00 00            ; XT=0425, flags=00
3f7dc: 09 44 45 42 55 47 2d 4f 46 46 00 ; 9, DEBUG-OFF
;
3f7e7: fa f7 03 00               ; DEBUG-ON - (next: 3f7fa TRACE-OFF)
3f7eb: 1c 04 00 00 00            ; XT=041c, flags=00
3f7f0: 08 44 45 42 55 47 2d 4f 4e 00 ; 8, DEBUG-ON
;
3f7fa: 0e f8 03 00               ; TRACE-OFF - (next: 3f80e TRACE-ON)
3f7fe: 13 04 00 00 00            ; XT=0413, flags=00
3f803: 09 54 52 41 43 45 2d 4f 46 46 00 ; 9, TRACE-OFF
;
3f80e: 21 f8 03 00               ; TRACE-ON - (next: 3f821 LOGLEVEL)
3f812: 0a 04 00 00 00            ; XT=040a, flags=00
3f817: 08 54 52 41 43 45 2d 4f 4e 00 ; 8, TRACE-ON
;
3f821: 34 f8 03 00               ; LOGLEVEL - (next: 3f834 ,)
3f825: 03 04 00 00 02            ; XT=0403, flags=02
3f82a: 08 4c 4f 47 4c 45 56 45 4c 00 ; 8, LOGLEVEL
;
3f834: 40 f8 03 00               ; , - (next: 3f840 HERE)
3f838: f0 03 00 00 00            ; XT=03f0, flags=00
3f83d: 01 2c 00                  ; 1, ,
;
3f840: 4f f8 03 00               ; HERE - (next: 3f84f LAST)
3f844: e7 03 00 00 02            ; XT=03e7, flags=02
3f849: 04 48 45 52 45 00         ; 4, HERE
;
3f84f: 5e f8 03 00               ; LAST - (next: 3f85e IMMEDIATE)
3f853: de 03 00 00 02            ; XT=03de, flags=02
3f858: 04 4c 41 53 54 00         ; 4, LAST
;
3f85e: 72 f8 03 00               ; IMMEDIATE - (next: 3f872 FLAG_INLINE)
3f862: c8 03 00 00 00            ; XT=03c8, flags=00
3f867: 09 49 4d 4d 45 44 49 41 54 45 00 ; 9, IMMEDIATE
;
3f872: 88 f8 03 00               ; FLAG_INLINE - (next: 3f888 FLAG_IMMEDIATE)
3f876: c0 03 00 00 02            ; XT=03c0, flags=02
3f87b: 0b 46 4c 41 47 5f 49 4e 4c 49 4e 45 00 ; 11, FLAG_INLINE
;
3f888: a1 f8 03 00               ; FLAG_IMMEDIATE - (next: 3f8a1 CELLS)
3f88c: b8 03 00 00 02            ; XT=03b8, flags=02
3f891: 0e 46 4c 41 47 5f 49 4d 4d 45 44 49 41 54 45 00 ; 14, FLAG_IMMEDIATE
;
3f8a1: b1 f8 03 00               ; CELLS - (next: 3f8b1 INLINE)
3f8a5: af 03 00 00 02            ; XT=03af, flags=02
3f8aa: 05 43 45 4c 4c 53 00      ; 5, CELLS
;
3f8b1: c2 f8 03 00               ; INLINE - (next: 3f8c2 BYE)
3f8b5: 99 03 00 00 00            ; XT=0399, flags=00
3f8ba: 06 49 4e 4c 49 4e 45 00   ; 6, INLINE
;
3f8c2: d0 f8 03 00               ; BYE - (next: 3f8d0 RESET)
3f8c6: 92 03 00 00 02            ; XT=0392, flags=02
3f8cb: 03 42 59 45 00            ; 3, BYE
;
3f8d0: e0 f8 03 00               ; RESET - (next: 3f8e0 BREAK)
3f8d4: 8b 03 00 00 02            ; XT=038b, flags=02
3f8d9: 05 52 45 53 45 54 00      ; 5, RESET
;
3f8e0: f0 f8 03 00               ; BREAK - (next: 3f8f0 GETCH)
3f8e4: 84 03 00 00 02            ; XT=0384, flags=02
3f8e9: 05 42 52 45 41 4b 00      ; 5, BREAK
;
3f8f0: 00 f9 03 00               ; GETCH - (next: 3f900 OR)
3f8f4: 7d 03 00 00 02            ; XT=037d, flags=02
3f8f9: 05 47 45 54 43 48 00      ; 5, GETCH
;
3f900: 0d f9 03 00               ; OR - (next: 3f90d AND)
3f904: 76 03 00 00 02            ; XT=0376, flags=02
3f909: 02 4f 52 00               ; 2, OR
;
3f90d: 1b f9 03 00               ; AND - (next: 3f91b DEPTH)
3f911: 6f 03 00 00 02            ; XT=036f, flags=02
3f916: 03 41 4e 44 00            ; 3, AND
;
3f91b: 2b f9 03 00               ; DEPTH - (next: 3f92b PICK)
3f91f: 68 03 00 00 02            ; XT=0368, flags=02
3f924: 05 44 45 50 54 48 00      ; 5, DEPTH
;
3f92b: 3a f9 03 00               ; PICK - (next: 3f93a R>)
3f92f: 61 03 00 00 02            ; XT=0361, flags=02
3f934: 04 50 49 43 4b 00         ; 4, PICK
;
3f93a: 47 f9 03 00               ; R> - (next: 3f947 >R)
3f93e: 5a 03 00 00 02            ; XT=035a, flags=02
3f943: 02 52 3e 00               ; 2, R>
;
3f947: 54 f9 03 00               ; >R - (next: 3f954 FCLOSE)
3f94b: 53 03 00 00 02            ; XT=0353, flags=02
3f950: 02 3e 52 00               ; 2, >R
;
3f954: 65 f9 03 00               ; FCLOSE - (next: 3f965 FWRITE)
3f958: 4c 03 00 00 02            ; XT=034c, flags=02
3f95d: 06 46 43 4c 4f 53 45 00   ; 6, FCLOSE
;
3f965: 76 f9 03 00               ; FWRITE - (next: 3f976 FREADLINE)
3f969: 45 03 00 00 02            ; XT=0345, flags=02
3f96e: 06 46 57 52 49 54 45 00   ; 6, FWRITE
;
3f976: 8a f9 03 00               ; FREADLINE - (next: 3f98a FREAD)
3f97a: 3e 03 00 00 02            ; XT=033e, flags=02
3f97f: 09 46 52 45 41 44 4c 49 4e 45 00 ; 9, FREADLINE
;
3f98a: 9a f9 03 00               ; FREAD - (next: 3f99a FOPEN)
3f98e: 37 03 00 00 02            ; XT=0337, flags=02
3f993: 05 46 52 45 41 44 00      ; 5, FREAD
;
3f99a: aa f9 03 00               ; FOPEN - (next: 3f9aa EMIT)
3f99e: 30 03 00 00 02            ; XT=0330, flags=02
3f9a3: 05 46 4f 50 45 4e 00      ; 5, FOPEN
;
3f9aa: b9 f9 03 00               ; EMIT - (next: 3f9b9 >)
3f9ae: 29 03 00 00 02            ; XT=0329, flags=02
3f9b3: 04 45 4d 49 54 00         ; 4, EMIT
;
3f9b9: c5 f9 03 00               ; > - (next: 3f9c5 =)
3f9bd: 22 03 00 00 02            ; XT=0322, flags=02
3f9c2: 01 3e 00                  ; 1, >
;
3f9c5: d1 f9 03 00               ; = - (next: 3f9d1 <)
3f9c9: 1b 03 00 00 02            ; XT=031b, flags=02
3f9ce: 01 3d 00                  ; 1, =
;
3f9d1: dd f9 03 00               ; < - (next: 3f9dd /)
3f9d5: 14 03 00 00 02            ; XT=0314, flags=02
3f9da: 01 3c 00                  ; 1, <
;
3f9dd: e9 f9 03 00               ; / - (next: 3f9e9 *)
3f9e1: 0d 03 00 00 02            ; XT=030d, flags=02
3f9e6: 01 2f 00                  ; 1, /
;
3f9e9: f5 f9 03 00               ; * - (next: 3f9f5 -)
3f9ed: 06 03 00 00 02            ; XT=0306, flags=02
3f9f2: 01 2a 00                  ; 1, *
;
3f9f5: 01 fa 03 00               ; - - (next: 3fa01 +)
3f9f9: ff 02 00 00 02            ; XT=02ff, flags=02
3f9fe: 01 2d 00                  ; 1, -
;
3fa01: 0d fa 03 00               ; + - (next: 3fa0d COMPAREI)
3fa05: f8 02 00 00 02            ; XT=02f8, flags=02
3fa0a: 01 2b 00                  ; 1, +
;
3fa0d: 20 fa 03 00               ; COMPAREI - (next: 3fa20 COMPARE)
3fa11: f1 02 00 00 02            ; XT=02f1, flags=02
3fa16: 08 43 4f 4d 50 41 52 45 49 00 ; 8, COMPAREI
;
3fa20: 32 fa 03 00               ; COMPARE - (next: 3fa32 OVER)
3fa24: ea 02 00 00 02            ; XT=02ea, flags=02
3fa29: 07 43 4f 4d 50 41 52 45 00 ; 7, COMPARE
;
3fa32: 41 fa 03 00               ; OVER - (next: 3fa41 DUP)
3fa36: e3 02 00 00 02            ; XT=02e3, flags=02
3fa3b: 04 4f 56 45 52 00         ; 4, OVER
;
3fa41: 4f fa 03 00               ; DUP - (next: 3fa4f DROP)
3fa45: dc 02 00 00 02            ; XT=02dc, flags=02
3fa4a: 03 44 55 50 00            ; 3, DUP
;
3fa4f: 5e fa 03 00               ; DROP - (next: 3fa5e SWAP)
3fa53: d5 02 00 00 02            ; XT=02d5, flags=02
3fa58: 04 44 52 4f 50 00         ; 4, DROP
;
3fa5e: 6d fa 03 00               ; SWAP - (next: 3fa6d C!)
3fa62: ce 02 00 00 02            ; XT=02ce, flags=02
3fa67: 04 53 57 41 50 00         ; 4, SWAP
;
3fa6d: 7a fa 03 00               ; C! - (next: 3fa7a C@)
3fa71: c7 02 00 00 02            ; XT=02c7, flags=02
3fa76: 02 43 21 00               ; 2, C!
;
3fa7a: 87 fa 03 00               ; C@ - (next: 3fa87 !)
3fa7e: c0 02 00 00 02            ; XT=02c0, flags=02
3fa83: 02 43 40 00               ; 2, C@
;
3fa87: 93 fa 03 00               ; ! - (next: 3fa93 @)
3fa8b: b9 02 00 00 02            ; XT=02b9, flags=02
3fa90: 01 21 00                  ; 1, !
;
3fa93: 9f fa 03 00               ; @ - (next: 3fa9f a.BYE)
3fa97: b2 02 00 00 02            ; XT=02b2, flags=02
3fa9c: 01 40 00                  ; 1, @
;
3fa9f: af fa 03 00               ; a.BYE - (next: 3faaf a.RESET)
3faa3: a5 02 00 00 01            ; XT=02a5, flags=01
3faa8: 05 61 2e 42 59 45 00      ; 5, a.BYE
;
3faaf: c1 fa 03 00               ; a.RESET - (next: 3fac1 a.BREAK)
3fab3: 98 02 00 00 01            ; XT=0298, flags=01
3fab8: 07 61 2e 52 45 53 45 54 00 ; 7, a.RESET
;
3fac1: d3 fa 03 00               ; a.BREAK - (next: 3fad3 a.GETCH)
3fac5: 8b 02 00 00 01            ; XT=028b, flags=01
3faca: 07 61 2e 42 52 45 41 4b 00 ; 7, a.BREAK
;
3fad3: e5 fa 03 00               ; a.GETCH - (next: 3fae5 a.OR)
3fad7: 7e 02 00 00 01            ; XT=027e, flags=01
3fadc: 07 61 2e 47 45 54 43 48 00 ; 7, a.GETCH
;
3fae5: f4 fa 03 00               ; a.OR - (next: 3faf4 a.AND)
3fae9: 71 02 00 00 01            ; XT=0271, flags=01
3faee: 04 61 2e 4f 52 00         ; 4, a.OR
;
3faf4: 04 fb 03 00               ; a.AND - (next: 3fb04 a.DEPTH)
3faf8: 64 02 00 00 01            ; XT=0264, flags=01
3fafd: 05 61 2e 41 4e 44 00      ; 5, a.AND
;
3fb04: 16 fb 03 00               ; a.DEPTH - (next: 3fb16 a.LOGLEVEL)
3fb08: 57 02 00 00 01            ; XT=0257, flags=01
3fb0d: 07 61 2e 44 45 50 54 48 00 ; 7, a.DEPTH
;
3fb16: 2b fb 03 00               ; a.LOGLEVEL - (next: 3fb2b a.PICK)
3fb1a: 4a 02 00 00 01            ; XT=024a, flags=01
3fb1f: 0a 61 2e 4c 4f 47 4c 45 56 45 4c 00 ; 10, a.LOGLEVEL
;
3fb2b: 3c fb 03 00               ; a.PICK - (next: 3fb3c a.RTOD)
3fb2f: 3d 02 00 00 01            ; XT=023d, flags=01
3fb34: 06 61 2e 50 49 43 4b 00   ; 6, a.PICK
;
3fb3c: 4d fb 03 00               ; a.RTOD - (next: 3fb4d a.DTOR)
3fb40: 30 02 00 00 01            ; XT=0230, flags=01
3fb45: 06 61 2e 52 54 4f 44 00   ; 6, a.RTOD
;
3fb4d: 5e fb 03 00               ; a.DTOR - (next: 3fb5e a.SLITERAL)
3fb51: 23 02 00 00 01            ; XT=0223, flags=01
3fb56: 06 61 2e 44 54 4f 52 00   ; 6, a.DTOR
;
3fb5e: 73 fb 03 00               ; a.SLITERAL - (next: 3fb73 a.FCLOSE)
3fb62: 16 02 00 00 01            ; XT=0216, flags=01
3fb67: 0a 61 2e 53 4c 49 54 45 52 41 4c 00 ; 10, a.SLITERAL
;
3fb73: 86 fb 03 00               ; a.FCLOSE - (next: 3fb86 a.FWRITE)
3fb77: 09 02 00 00 01            ; XT=0209, flags=01
3fb7c: 08 61 2e 46 43 4c 4f 53 45 00 ; 8, a.FCLOSE
;
3fb86: 99 fb 03 00               ; a.FWRITE - (next: 3fb99 a.FREADLINE)
3fb8a: fc 01 00 00 01            ; XT=01fc, flags=01
3fb8f: 08 61 2e 46 57 52 49 54 45 00 ; 8, a.FWRITE
;
3fb99: af fb 03 00               ; a.FREADLINE - (next: 3fbaf a.FREAD)
3fb9d: ef 01 00 00 01            ; XT=01ef, flags=01
3fba2: 0b 61 2e 46 52 45 41 44 4c 49 4e 45 00 ; 11, a.FREADLINE
;
3fbaf: c1 fb 03 00               ; a.FREAD - (next: 3fbc1 a.FOPEN)
3fbb3: e2 01 00 00 01            ; XT=01e2, flags=01
3fbb8: 07 61 2e 46 52 45 41 44 00 ; 7, a.FREAD
;
3fbc1: d3 fb 03 00               ; a.FOPEN - (next: 3fbd3 a.EMIT)
3fbc5: d5 01 00 00 01            ; XT=01d5, flags=01
3fbca: 07 61 2e 46 4f 50 45 4e 00 ; 7, a.FOPEN
;
3fbd3: e4 fb 03 00               ; a.EMIT - (next: 3fbe4 a.DICTP)
3fbd7: c8 01 00 00 01            ; XT=01c8, flags=01
3fbdc: 06 61 2e 45 4d 49 54 00   ; 6, a.EMIT
;
3fbe4: f6 fb 03 00               ; a.DICTP - (next: 3fbf6 a.GT)
3fbe8: bb 01 00 00 01            ; XT=01bb, flags=01
3fbed: 07 61 2e 44 49 43 54 50 00 ; 7, a.DICTP
;
3fbf6: 05 fc 03 00               ; a.GT - (next: 3fc05 a.EQ)
3fbfa: ae 01 00 00 01            ; XT=01ae, flags=01
3fbff: 04 61 2e 47 54 00         ; 4, a.GT
;
3fc05: 14 fc 03 00               ; a.EQ - (next: 3fc14 a.LT)
3fc09: a1 01 00 00 01            ; XT=01a1, flags=01
3fc0e: 04 61 2e 45 51 00         ; 4, a.EQ
;
3fc14: 23 fc 03 00               ; a.LT - (next: 3fc23 a.DIV)
3fc18: 94 01 00 00 01            ; XT=0194, flags=01
3fc1d: 04 61 2e 4c 54 00         ; 4, a.LT
;
3fc23: 33 fc 03 00               ; a.DIV - (next: 3fc33 a.MUL)
3fc27: 87 01 00 00 01            ; XT=0187, flags=01
3fc2c: 05 61 2e 44 49 56 00      ; 5, a.DIV
;
3fc33: 43 fc 03 00               ; a.MUL - (next: 3fc43 a.SUB)
3fc37: 7a 01 00 00 01            ; XT=017a, flags=01
3fc3c: 05 61 2e 4d 55 4c 00      ; 5, a.MUL
;
3fc43: 53 fc 03 00               ; a.SUB - (next: 3fc53 a.ADD)
3fc47: 6d 01 00 00 01            ; XT=016d, flags=01
3fc4c: 05 61 2e 53 55 42 00      ; 5, a.SUB
;
3fc53: 63 fc 03 00               ; a.ADD - (next: 3fc63 a.COMPAREI)
3fc57: 60 01 00 00 01            ; XT=0160, flags=01
3fc5c: 05 61 2e 41 44 44 00      ; 5, a.ADD
;
3fc63: 78 fc 03 00               ; a.COMPAREI - (next: 3fc78 a.COMPARE)
3fc67: 53 01 00 00 01            ; XT=0153, flags=01
3fc6c: 0a 61 2e 43 4f 4d 50 41 52 45 49 00 ; 10, a.COMPAREI
;
3fc78: 8c fc 03 00               ; a.COMPARE - (next: 3fc8c a.RET)
3fc7c: 46 01 00 00 01            ; XT=0146, flags=01
3fc81: 09 61 2e 43 4f 4d 50 41 52 45 00 ; 9, a.COMPARE
;
3fc8c: 9c fc 03 00               ; a.RET - (next: 3fc9c a.CALL)
3fc90: 39 01 00 00 01            ; XT=0139, flags=01
3fc95: 05 61 2e 52 45 54 00      ; 5, a.RET
;
3fc9c: ad fc 03 00               ; a.CALL - (next: 3fcad a.JMPNZ)
3fca0: 2c 01 00 00 01            ; XT=012c, flags=01
3fca5: 06 61 2e 43 41 4c 4c 00   ; 6, a.CALL
;
3fcad: bf fc 03 00               ; a.JMPNZ - (next: 3fcbf a.JMPZ)
3fcb1: 1f 01 00 00 01            ; XT=011f, flags=01
3fcb6: 07 61 2e 4a 4d 50 4e 5a 00 ; 7, a.JMPNZ
;
3fcbf: d0 fc 03 00               ; a.JMPZ - (next: 3fcd0 a.JMP)
3fcc3: 12 01 00 00 01            ; XT=0112, flags=01
3fcc8: 06 61 2e 4a 4d 50 5a 00   ; 6, a.JMPZ
;
3fcd0: e0 fc 03 00               ; a.JMP - (next: 3fce0 a.OVER)
3fcd4: 05 01 00 00 01            ; XT=0105, flags=01
3fcd9: 05 61 2e 4a 4d 50 00      ; 5, a.JMP
;
3fce0: f1 fc 03 00               ; a.OVER - (next: 3fcf1 a.DUP)
3fce4: f8 00 00 00 01            ; XT=00f8, flags=01
3fce9: 06 61 2e 4f 56 45 52 00   ; 6, a.OVER
;
3fcf1: 01 fd 03 00               ; a.DUP - (next: 3fd01 a.DROP)
3fcf5: eb 00 00 00 01            ; XT=00eb, flags=01
3fcfa: 05 61 2e 44 55 50 00      ; 5, a.DUP
;
3fd01: 12 fd 03 00               ; a.DROP - (next: 3fd12 a.SWAP)
3fd05: de 00 00 00 01            ; XT=00de, flags=01
3fd0a: 06 61 2e 44 52 4f 50 00   ; 6, a.DROP
;
3fd12: 23 fd 03 00               ; a.SWAP - (next: 3fd23 a.CSTORE)
3fd16: d1 00 00 00 01            ; XT=00d1, flags=01
3fd1b: 06 61 2e 53 57 41 50 00   ; 6, a.SWAP
;
3fd23: 36 fd 03 00               ; a.CSTORE - (next: 3fd36 a.CFETCH)
3fd27: c4 00 00 00 01            ; XT=00c4, flags=01
3fd2c: 08 61 2e 43 53 54 4f 52 45 00 ; 8, a.CSTORE
;
3fd36: 49 fd 03 00               ; a.CFETCH - (next: 3fd49 a.STORE)
3fd3a: b7 00 00 00 01            ; XT=00b7, flags=01
3fd3f: 08 61 2e 43 46 45 54 43 48 00 ; 8, a.CFETCH
;
3fd49: 5b fd 03 00               ; a.STORE - (next: 3fd5b a.FETCH)
3fd4d: aa 00 00 00 01            ; XT=00aa, flags=01
3fd52: 07 61 2e 53 54 4f 52 45 00 ; 7, a.STORE
;
3fd5b: 6d fd 03 00               ; a.FETCH - (next: 3fd6d a.CPUSH)
3fd5f: 9d 00 00 00 01            ; XT=009d, flags=01
3fd64: 07 61 2e 46 45 54 43 48 00 ; 7, a.FETCH
;
3fd6d: 7f fd 03 00               ; a.CPUSH - (next: 3fd7f a.PUSH)
3fd71: 90 00 00 00 01            ; XT=0090, flags=01
3fd76: 07 61 2e 43 50 55 53 48 00 ; 7, a.CPUSH
;
3fd7f: 90 fd 03 00               ; a.PUSH - (next: 3fd90 C,)
3fd83: 83 00 00 00 01            ; XT=0083, flags=01
3fd88: 06 61 2e 50 55 53 48 00   ; 6, a.PUSH
;
3fd90: 9d fd 03 00               ; C, - (next: 3fd9d STATE)
3fd94: 70 00 00 00 00            ; XT=0070, flags=00
3fd99: 02 43 2c 00               ; 2, C,
;
3fd9d: ad fd 03 00               ; STATE - (next: 3fdad INPUT-FP)
3fda1: 68 00 00 00 02            ; XT=0068, flags=02
3fda6: 05 53 54 41 54 45 00      ; 5, STATE
;
3fdad: c0 fd 03 00               ; INPUT-FP - (next: 3fdc0 (LAST))
3fdb1: 60 00 00 00 02            ; XT=0060, flags=02
3fdb6: 08 49 4e 50 55 54 2d 46 50 00 ; 8, INPUT-FP
;
3fdc0: d1 fd 03 00               ; (LAST) - (next: 3fdd1 DP)
3fdc4: 58 00 00 00 02            ; XT=0058, flags=02
3fdc9: 06 28 4c 41 53 54 29 00   ; 6, (LAST)
;
3fdd1: de fd 03 00               ; DP - (next: 3fdde CELL)
3fdd5: 50 00 00 00 02            ; XT=0050, flags=02
3fdda: 02 44 50 00               ; 2, DP
;
3fdde: ed fd 03 00               ; CELL - (next: 3fded BASE)
3fde2: 48 00 00 00 02            ; XT=0048, flags=02
3fde7: 04 43 45 4c 4c 00         ; 4, CELL
;
3fded: fc fd 03 00               ; BASE - (next: 3fdfc <end>)
3fdf1: 40 00 00 00 02            ; XT=0040, flags=02
3fdf6: 04 42 41 53 45 00         ; 4, BASE
;
3fdfc: 00 00 00 00               ; End.
