; memory-size: 65536 bytes, (10000 hex)
; data-stack: fe00, grows up
; return-stack: fffc, grows down
;
0000: 08 d5 11 00 00             ; JMP main (11d5)
;
0005: 00 00 00
0008: 00000004 00000000
0010: 000013f4 0000f0ef 0000000a 00000000
0020: 00000000 00010000 00000000 00000000
0030: 00000000 00000000 00000000 00000000
;
0040: 18 eb ff 00 00             ; DICTP (HERE) (ffeb)
0045: 01 4b 00 00 00             ; LITERAL 75 (0x004b)
004a: 0c                         ; RET
004b: f4 13 00 00                ; dw 0x13f4
;
004f: 18 da ff 00 00             ; DICTP (LAST) (ffda)
0054: 01 5a 00 00 00             ; LITERAL 90 (0x005a)
0059: 0c                         ; RET
005a: ef f0 00 00                ; dw 0xf0ef
;
005e: 18 cb ff 00 00             ; DICTP BASE (ffcb)
0063: 01 69 00 00 00             ; LITERAL 105 (0x0069)
0068: 0c                         ; RET
0069: 0a 00 00 00                ; dw 0x000a
;
006d: 18 bb ff 00 00             ; DICTP STATE (ffbb)
0072: 01 78 00 00 00             ; LITERAL 120 (0x0078)
0077: 0c                         ; RET
0078: 63 00 00 00                ; dw 0x0063
;
007c: 18 a8 ff 00 00             ; DICTP (MEM_SZ) (ffa8)
0081: 01 87 00 00 00             ; LITERAL 135 (0x0087)
0086: 0c                         ; RET
0087: 00 00 01 00                ; dw 0x10000
;
008b: 18 9a ff 00 00             ; DICTP >IN (ff9a)
0090: 01 96 00 00 00             ; LITERAL 150 (0x0096)
0095: 0c                         ; RET
0096: 00 00 00 00                ; dw 0x0000
;
009a: 18 8b ff 00 00             ; DICTP #NEG (ff8b)
009f: 01 a5 00 00 00             ; LITERAL 165 (0x00a5)
00a4: 0c                         ; RET
00a5: 00 00 00 00                ; dw 0x0000
;
00a9: 18 7c ff 00 00             ; DICTP #LEN (ff7c)
00ae: 01 b4 00 00 00             ; LITERAL 180 (0x00b4)
00b3: 0c                         ; RET
00b4: 05 00 00 00                ; dw 0x0005
;
00b8: 18 69 ff 00 00             ; DICTP INPUT-FP (ff69)
00bd: 01 c3 00 00 00             ; LITERAL 195 (0x00c3)
00c2: 0c                         ; RET
00c3: 00 00 00 00                ; dw 0x0000
;
00c7: 18 5c ff 00 00             ; DICTP T1 (ff5c)
00cc: 01 d2 00 00 00             ; LITERAL 210 (0x00d2)
00d1: 0c                         ; RET
00d2: 00 00 00 00                ; dw 0x0000
;
00d6: 18 4f ff 00 00             ; DICTP T2 (ff4f)
00db: 01 e1 00 00 00             ; LITERAL 225 (0x00e1)
00e0: 0c                         ; RET
00e1: 00 00 00 00                ; dw 0x0000
;
00e5: 18 42 ff 00 00             ; DICTP T3 (ff42)
00ea: 01 f0 00 00 00             ; LITERAL 240 (0x00f0)
00ef: 0c                         ; RET
00f0: 00 00 00 00                ; dw 0x0000
;
00f4: fc                         ; NOP
00f5: 18 33 ff 00 00             ; DICTP CELL (ff33)
00fa: 0e 04                      ; CLITERAL 4
00fc: 0c                         ; RET
;
00fd: 18 24 ff 00 00             ; DICTP HERE (ff24)
0102: 0b 40 00 00 00             ; CALL (HERE) (0040)
0107: 02                         ; FETCH
0108: 0c                         ; RET
;
0109: 18 15 ff 00 00             ; DICTP LAST (ff15)
010e: 0b 4f 00 00 00             ; CALL (LAST) (004f)
0113: 02                         ; FETCH
0114: 0c                         ; RET
;
0115: 18 08 ff 00 00             ; DICTP C, (ff08)
011a: 0b fd 00 00 00             ; CALL HERE (00fd)
011f: 10                         ; CSTORE
0120: 0b fd 00 00 00             ; CALL HERE (00fd)
0125: 2c                         ; INC
0126: 0b 40 00 00 00             ; CALL (HERE) (0040)
012b: 03                         ; STORE
012c: 0c                         ; RET
;
012d: 18 fc fe 00 00             ; DICTP , (fefc)
0132: 0b fd 00 00 00             ; CALL HERE (00fd)
0137: 03                         ; STORE
0138: 0b fd 00 00 00             ; CALL HERE (00fd)
013d: 0e 04                      ; CLITERAL 4
013f: 11                         ; ADD
0140: 0b 40 00 00 00             ; CALL (HERE) (0040)
0145: 03                         ; STORE
0146: 0c                         ; RET
;
0147: 18 f0 fe 00 00             ; DICTP [ (fef0)
014c: 0e 00                      ; CLITERAL 0
014e: 0b 6d 00 00 00             ; CALL STATE (006d)
0153: 03                         ; STORE
0154: 0c                         ; RET
;
0155: 18 e4 fe 00 00             ; DICTP ] (fee4)
015a: 0e 01                      ; CLITERAL 1
015c: 0b 6d 00 00 00             ; CALL STATE (006d)
0161: 03                         ; STORE
0162: 0c                         ; RET
;
0163: 18 d2 fe 00 00             ; DICTP LITERAL (fed2)
0168: 0e 01                      ; CLITERAL 1
016a: 0b 15 01 00 00             ; CALL C, (0115)
016f: 0c                         ; RET
;
0170: 18 c6 fe 00 00             ; DICTP @ (fec6)
0175: 02                         ; FETCH
0176: 0c                         ; RET
;
0177: 18 ba fe 00 00             ; DICTP ! (feba)
017c: 03                         ; STORE
017d: 0c                         ; RET
;
017e: 18 ab fe 00 00             ; DICTP SWAP (feab)
0183: 04                         ; SWAP
0184: 0c                         ; RET
;
0185: 18 9c fe 00 00             ; DICTP DROP (fe9c)
018a: 05                         ; DROP
018b: 0c                         ; RET
;
018c: 18 8e fe 00 00             ; DICTP DUP (fe8e)
0191: 06                         ; DUP
0192: 0c                         ; RET
;
0193: 18 7b fe 00 00             ; DICTP SLITERAL (fe7b)
0198: 0e 07                      ; CLITERAL 7
019a: 0b 15 01 00 00             ; CALL C, (0115)
019f: 0c                         ; RET
;
01a0: 18 6d fe 00 00             ; DICTP JMP (fe6d)
01a5: 0e 08                      ; CLITERAL 8
01a7: 0b 15 01 00 00             ; CALL C, (0115)
01ac: 0c                         ; RET
;
01ad: 18 5e fe 00 00             ; DICTP JMPZ (fe5e)
01b2: 0e 09                      ; CLITERAL 9
01b4: 0b 15 01 00 00             ; CALL C, (0115)
01b9: 0c                         ; RET
;
01ba: 18 4e fe 00 00             ; DICTP JMPNZ (fe4e)
01bf: 0e 0a                      ; CLITERAL 10
01c1: 0b 15 01 00 00             ; CALL C, (0115)
01c6: 0c                         ; RET
;
01c7: 18 3f fe 00 00             ; DICTP CALL (fe3f)
01cc: 0e 0b                      ; CLITERAL 11
01ce: 0b 15 01 00 00             ; CALL C, (0115)
01d3: 0c                         ; RET
;
01d4: 18 31 fe 00 00             ; DICTP RET (fe31)
01d9: 0e 0c                      ; CLITERAL 12
01db: 0b 15 01 00 00             ; CALL C, (0115)
01e0: 0c                         ; RET
;
01e1: 18 24 fe 00 00             ; DICTP OR (fe24)
01e6: 0d                         ; OR
01e7: 0c                         ; RET
;
01e8: 18 11 fe 00 00             ; DICTP CLITERAL (fe11)
01ed: 0e 0e                      ; CLITERAL 14
01ef: 0b 15 01 00 00             ; CALL C, (0115)
01f4: 0c                         ; RET
;
01f5: 18 04 fe 00 00             ; DICTP C@ (fe04)
01fa: 0f                         ; CFETCH
01fb: 0c                         ; RET
;
01fc: 18 f7 fd 00 00             ; DICTP C! (fdf7)
0201: 10                         ; CSTORE
0202: 0c                         ; RET
;
0203: 18 eb fd 00 00             ; DICTP + (fdeb)
0208: 11                         ; ADD
0209: 0c                         ; RET
;
020a: 18 df fd 00 00             ; DICTP - (fddf)
020f: 12                         ; SUB
0210: 0c                         ; RET
;
0211: 18 d3 fd 00 00             ; DICTP * (fdd3)
0216: 13                         ; MUL
0217: 0c                         ; RET
;
0218: 18 c7 fd 00 00             ; DICTP / (fdc7)
021d: 14                         ; DIV
021e: 0c                         ; RET
;
021f: 18 bb fd 00 00             ; DICTP < (fdbb)
0224: 15                         ; LT
0225: 0c                         ; RET
;
0226: 18 af fd 00 00             ; DICTP = (fdaf)
022b: 16                         ; EQ
022c: 0c                         ; RET
;
022d: 18 a3 fd 00 00             ; DICTP > (fda3)
0232: 17                         ; GT
0233: 0c                         ; RET
;
0234: 18 93 fd 00 00             ; DICTP DICTP (fd93)
0239: 0e 18                      ; CLITERAL 24
023b: 0b 15 01 00 00             ; CALL C, (0115)
0240: 0c                         ; RET
;
0241: 18 84 fd 00 00             ; DICTP EMIT (fd84)
0246: 19                         ; EMIT
0247: 0c                         ; RET
;
0248: 18 75 fd 00 00             ; DICTP OVER (fd75)
024d: 1a                         ; OVER
024e: 0c                         ; RET
;
024f: 18 63 fd 00 00             ; DICTP COMPARE (fd63)
0254: 1b                         ; COMPARE
0255: 0c                         ; RET
;
0256: 18 53 fd 00 00             ; DICTP FOPEN (fd53)
025b: 1c                         ; FOPEN
025c: 0c                         ; RET
;
025d: 18 43 fd 00 00             ; DICTP FREAD (fd43)
0262: 1d                         ; FREAD
0263: 0c                         ; RET
;
0264: 18 2f fd 00 00             ; DICTP FREADLINE (fd2f)
0269: 1e                         ; FREADLINE
026a: 0c                         ; RET
;
026b: 18 1e fd 00 00             ; DICTP FWRITE (fd1e)
0270: 1f                         ; FWRITE
0271: 0c                         ; RET
;
0272: 18 0d fd 00 00             ; DICTP FCLOSE (fd0d)
0277: 20                         ; FCLOSE
0278: 0c                         ; RET
;
0279: 18 00 fd 00 00             ; DICTP >R (fd00)
027e: 21                         ; DTOR
027f: 0c                         ; RET
;
0280: 18 f3 fc 00 00             ; DICTP R> (fcf3)
0285: 22                         ; RTOD
0286: 0c                         ; RET
;
0287: 18 e0 fc 00 00             ; DICTP LOGLEVEL (fce0)
028c: 23                         ; LOGLEVEL
028d: 0c                         ; RET
;
028e: 18 d2 fc 00 00             ; DICTP AND (fcd2)
0293: 24                         ; AND
0294: 0c                         ; RET
;
0295: 18 c3 fc 00 00             ; DICTP PICK (fcc3)
029a: 25                         ; PICK
029b: 0c                         ; RET
;
029c: 18 b3 fc 00 00             ; DICTP DEPTH (fcb3)
02a1: 26                         ; DEPTH
02a2: 0c                         ; RET
;
02a3: 18 a3 fc 00 00             ; DICTP GETCH (fca3)
02a8: 27                         ; GETCH
02a9: 0c                         ; RET
;
02aa: 18 90 fc 00 00             ; DICTP COMPAREI (fc90)
02af: 28                         ; COMPAREI
02b0: 0c                         ; RET
;
02b1: 18 81 fc 00 00             ; DICTP /MOD (fc81)
02b6: 29                         ; SLASHMOD
02b7: 0c                         ; RET
;
02b8: 18 73 fc 00 00             ; DICTP NOT (fc73)
02bd: 2a                         ; NOT
02be: 0c                         ; RET
;
02bf: 18 62 fc 00 00             ; DICTP RFETCH (fc62)
02c4: 2b                         ; RFETCH
02c5: 0c                         ; RET
;
02c6: 18 54 fc 00 00             ; DICTP INC (fc54)
02cb: 2c                         ; INC
02cc: 0c                         ; RET
;
02cd: 18 43 fc 00 00             ; DICTP RDEPTH (fc43)
02d2: 2d                         ; RDEPTH
02d3: 0c                         ; RET
;
02d4: 18 35 fc 00 00             ; DICTP DEC (fc35)
02d9: 2e                         ; DEC
02da: 0c                         ; RET
;
02db: 18 23 fc 00 00             ; DICTP GETTICK (fc23)
02e0: 2f                         ; GETTICK
02e1: 0c                         ; RET
;
02e2: 18 16 fc 00 00             ; DICTP << (fc16)
02e7: 30                         ; SHIFTLEFT
02e8: 0c                         ; RET
;
02e9: 18 09 fc 00 00             ; DICTP >> (fc09)
02ee: 31                         ; SHIFTRIGHT
02ef: 0c                         ; RET
;
02f0: 18 fc fb 00 00             ; DICTP +! (fbfc)
02f5: 32                         ; PLUSSTORE
02f6: 0c                         ; RET
;
02f7: 18 ea fb 00 00             ; DICTP BRANCHF (fbea)
02fc: 0e 5a                      ; CLITERAL 90
02fe: 0b 15 01 00 00             ; CALL C, (0115)
0303: 0c                         ; RET
;
0304: 18 d7 fb 00 00             ; DICTP BRANCHFZ (fbd7)
0309: 0e 5b                      ; CLITERAL 91
030b: 0b 15 01 00 00             ; CALL C, (0115)
0310: 0c                         ; RET
;
0311: 18 c3 fb 00 00             ; DICTP BRANCHFNZ (fbc3)
0316: 0e 5c                      ; CLITERAL 92
0318: 0b 15 01 00 00             ; CALL C, (0115)
031d: 0c                         ; RET
;
031e: 18 b1 fb 00 00             ; DICTP BRANCHB (fbb1)
0323: 0e 5d                      ; CLITERAL 93
0325: 0b 15 01 00 00             ; CALL C, (0115)
032a: 0c                         ; RET
;
032b: 18 9e fb 00 00             ; DICTP BRANCHBZ (fb9e)
0330: 0e 5e                      ; CLITERAL 94
0332: 0b 15 01 00 00             ; CALL C, (0115)
0337: 0c                         ; RET
;
0338: 18 8a fb 00 00             ; DICTP BRANCHBNZ (fb8a)
033d: 0e 5f                      ; CLITERAL 95
033f: 0b 15 01 00 00             ; CALL C, (0115)
0344: 0c                         ; RET
;
0345: 18 7c fb 00 00             ; DICTP NOP (fb7c)
034a: fc                         ; NOP
034b: 0c                         ; RET
;
034c: 18 6c fb 00 00             ; DICTP BREAK (fb6c)
0351: fd                         ; BREAK
0352: 0c                         ; RET
;
0353: 18 5c fb 00 00             ; DICTP RESET (fb5c)
0358: fe                         ; RESET
0359: 0c                         ; RET
;
035a: 18 4e fb 00 00             ; DICTP BYE (fb4e)
035f: ff                         ; BYE
0360: 0c                         ; RET
;
0361: 18 3d fb 00 00             ; DICTP INLINE (fb3d)
0366: 0b 09 01 00 00             ; CALL LAST (0109)
036b: 0e 02                      ; CLITERAL 2
036d: 0e 04                      ; CLITERAL 4
036f: 13                         ; MUL
0370: 11                         ; ADD
0371: 06                         ; DUP
0372: 0f                         ; CFETCH
0373: 0e 02                      ; CLITERAL 2
0375: 0d                         ; OR
0376: 04                         ; SWAP
0377: 10                         ; CSTORE
0378: 0c                         ; RET
;
0379: 18 29 fb 00 00             ; DICTP IMMEDIATE (fb29)
037e: 0b 09 01 00 00             ; CALL LAST (0109)
0383: 0e 02                      ; CLITERAL 2
0385: 0e 04                      ; CLITERAL 4
0387: 13                         ; MUL
0388: 11                         ; ADD
0389: 06                         ; DUP
038a: 0f                         ; CFETCH
038b: 0e 01                      ; CLITERAL 1
038d: 0d                         ; OR
038e: 04                         ; SWAP
038f: 10                         ; CSTORE
0390: 0c                         ; RET
;
0391: 18 19 fb 00 00             ; DICTP CELLS (fb19)
0396: 0e 04                      ; CLITERAL 4
0398: 13                         ; MUL
0399: 0c                         ; RET
;
039a: 18 00 fb 00 00             ; DICTP FLAG_IMMEDIATE (fb00)
039f: 0e 01                      ; CLITERAL 1
03a1: 0c                         ; RET
;
03a2: 18 ea fa 00 00             ; DICTP FLAG_INLINE (faea)
03a7: 0e 02                      ; CLITERAL 2
03a9: 0c                         ; RET
;
03aa: 18 dc fa 00 00             ; DICTP HEX (fadc)
03af: 0e 10                      ; CLITERAL 16
03b1: 0b 5e 00 00 00             ; CALL BASE (005e)
03b6: 03                         ; STORE
03b7: 0c                         ; RET
;
03b8: 18 ca fa 00 00             ; DICTP DECIMAL (faca)
03bd: 0e 0a                      ; CLITERAL 10
03bf: 0b 5e 00 00 00             ; CALL BASE (005e)
03c4: 03                         ; STORE
03c5: 0c                         ; RET
;
03c6: 18 ba fa 00 00             ; DICTP OCTAL (faba)
03cb: 0e 08                      ; CLITERAL 8
03cd: 0b 5e 00 00 00             ; CALL BASE (005e)
03d2: 03                         ; STORE
03d3: 0c                         ; RET
;
03d4: 18 a9 fa 00 00             ; DICTP BINARY (faa9)
03d9: 0e 02                      ; CLITERAL 2
03db: 0b 5e 00 00 00             ; CALL BASE (005e)
03e0: 03                         ; STORE
03e1: 0c                         ; RET
;
03e2: 18 9c fa 00 00             ; DICTP ON (fa9c)
03e7: 0e 01                      ; CLITERAL 1
03e9: 04                         ; SWAP
03ea: 03                         ; STORE
03eb: 0c                         ; RET
;
03ec: 18 8e fa 00 00             ; DICTP OFF (fa8e)
03f1: 0e 00                      ; CLITERAL 0
03f3: 04                         ; SWAP
03f4: 03                         ; STORE
03f5: 0c                         ; RET
;
03f6: 18 79 fa 00 00             ; DICTP ?COMPILING (fa79)
03fb: 0b 6d 00 00 00             ; CALL STATE (006d)
0400: 02                         ; FETCH
0401: 0c                         ; RET
;
0402: 18 6c fa 00 00             ; DICTP IF (fa6c)
0407: 0b f6 03 00 00             ; CALL ?COMPILING (03f6)
040c: 09 22 04 00 00             ; JMPZ 0422
0411: 0b 04 03 00 00             ; CALL BRANCHFZ (0304)
0416: 0b fd 00 00 00             ; CALL HERE (00fd)
041b: 0e 00                      ; CLITERAL 0
041d: 0b 15 01 00 00             ; CALL C, (0115)
0422: 0c                         ; RET
;
0423: 18 5d fa 00 00             ; DICTP ELSE (fa5d)
0428: 0b f6 03 00 00             ; CALL ?COMPILING (03f6)
042d: 09 4d 04 00 00             ; JMPZ 044d
0432: 0b f7 02 00 00             ; CALL BRANCHF (02f7)
0437: 0b fd 00 00 00             ; CALL HERE (00fd)
043c: 0e 00                      ; CLITERAL 0
043e: 0b 15 01 00 00             ; CALL C, (0115)
0443: 04                         ; SWAP
0444: 0b fd 00 00 00             ; CALL HERE (00fd)
0449: 1a                         ; OVER
044a: 12                         ; SUB
044b: 04                         ; SWAP
044c: 10                         ; CSTORE
044d: 0c                         ; RET
;
044e: 18 4e fa 00 00             ; DICTP THEN (fa4e)
0453: 0b f6 03 00 00             ; CALL ?COMPILING (03f6)
0458: 09 66 04 00 00             ; JMPZ 0466
045d: 0b fd 00 00 00             ; CALL HERE (00fd)
0462: 1a                         ; OVER
0463: 12                         ; SUB
0464: 04                         ; SWAP
0465: 10                         ; CSTORE
0466: 0c                         ; RET
;
0467: 18 3e fa 00 00             ; DICTP BEGIN (fa3e)
046c: 0b f6 03 00 00             ; CALL ?COMPILING (03f6)
0471: 5b 06                      ; BRANCHFZ 6 (0478)
0473: 0b fd 00 00 00             ; CALL HERE (00fd)
0478: 0c                         ; RET
;
0479: 18 2e fa 00 00             ; DICTP AGAIN (fa2e)
047e: 0b f6 03 00 00             ; CALL ?COMPILING (03f6)
0483: 5b 12                      ; BRANCHFZ 18 (0496)
0485: 0b 1e 03 00 00             ; CALL BRANCHB (031e)
048a: 0b fd 00 00 00             ; CALL HERE (00fd)
048f: 04                         ; SWAP
0490: 12                         ; SUB
0491: 0b 15 01 00 00             ; CALL C, (0115)
0496: 0c                         ; RET
;
0497: 18 1e fa 00 00             ; DICTP WHILE (fa1e)
049c: 0b f6 03 00 00             ; CALL ?COMPILING (03f6)
04a1: 5b 12                      ; BRANCHFZ 18 (04b4)
04a3: 0b 38 03 00 00             ; CALL BRANCHBNZ (0338)
04a8: 0b fd 00 00 00             ; CALL HERE (00fd)
04ad: 04                         ; SWAP
04ae: 12                         ; SUB
04af: 0b 15 01 00 00             ; CALL C, (0115)
04b4: 0c                         ; RET
;
04b5: 18 0e fa 00 00             ; DICTP UNTIL (fa0e)
04ba: 0b f6 03 00 00             ; CALL ?COMPILING (03f6)
04bf: 5b 12                      ; BRANCHFZ 18 (04d2)
04c1: 0b 2b 03 00 00             ; CALL BRANCHBZ (032b)
04c6: 0b fd 00 00 00             ; CALL HERE (00fd)
04cb: 04                         ; SWAP
04cc: 12                         ; SUB
04cd: 0b 15 01 00 00             ; CALL C, (0115)
04d2: 0c                         ; RET
;
04d3: 18 fe f9 00 00             ; DICTP LEAVE (f9fe)
04d8: 0b f6 03 00 00             ; CALL ?COMPILING (03f6)
04dd: 5b 06                      ; BRANCHFZ 6 (04e4)
04df: 0b d4 01 00 00             ; CALL RET (01d4)
04e4: 0c                         ; RET
;
04e5: 18 ed f9 00 00             ; DICTP MEM_SZ (f9ed)
04ea: 0b 7c 00 00 00             ; CALL (MEM_SZ) (007c)
04ef: 02                         ; FETCH
04f0: 0c                         ; RET
;
04f1: 18 da f9 00 00             ; DICTP TRACE-ON (f9da)
04f6: 0e 02                      ; CLITERAL 2
04f8: 23                         ; LOGLEVEL
04f9: 0c                         ; RET
;
04fa: 18 c6 f9 00 00             ; DICTP TRACE-OFF (f9c6)
04ff: 0e 00                      ; CLITERAL 0
0501: 23                         ; LOGLEVEL
0502: 0c                         ; RET
;
0503: 18 b3 f9 00 00             ; DICTP DEBUG-ON (f9b3)
0508: 0e 01                      ; CLITERAL 1
050a: 23                         ; LOGLEVEL
050b: 0c                         ; RET
;
050c: 18 9f f9 00 00             ; DICTP DEBUG-OFF (f99f)
0511: 0e 00                      ; CLITERAL 0
0513: 23                         ; LOGLEVEL
0514: 0c                         ; RET
;
0515: 18 92 f9 00 00             ; DICTP R@ (f992)
051a: 2b                         ; RFETCH
051b: 0c                         ; RET
;
051c: 18 82 f9 00 00             ; DICTP RDROP (f982)
0521: 22                         ; RTOD
0522: 05                         ; DROP
0523: 0c                         ; RET
;
0524: 18 73 f9 00 00             ; DICTP ?DUP (f973)
0529: 06                         ; DUP
052a: 5b 02                      ; BRANCHFZ 2 (052d)
052c: 06                         ; DUP
052d: 0c                         ; RET
;
052e: 18 64 f9 00 00             ; DICTP 2DUP (f964)
0533: 1a                         ; OVER
0534: 1a                         ; OVER
0535: 0c                         ; RET
;
0536: 18 54 f9 00 00             ; DICTP 2DROP (f954)
053b: 05                         ; DROP
053c: 05                         ; DROP
053d: 0c                         ; RET
;
053e: 18 45 f9 00 00             ; DICTP TUCK (f945)
0543: 04                         ; SWAP
0544: 1a                         ; OVER
0545: 0c                         ; RET
;
0546: 18 37 f9 00 00             ; DICTP NIP (f937)
054b: 04                         ; SWAP
054c: 05                         ; DROP
054d: 0c                         ; RET
;
054e: 18 29 f9 00 00             ; DICTP ROT (f929)
0553: 21                         ; DTOR
0554: 04                         ; SWAP
0555: 22                         ; RTOD
0556: 04                         ; SWAP
0557: 0c                         ; RET
;
0558: 18 1a f9 00 00             ; DICTP -ROT (f91a)
055d: 04                         ; SWAP
055e: 21                         ; DTOR
055f: 04                         ; SWAP
0560: 22                         ; RTOD
0561: 0c                         ; RET
;
0562: 18 0e f9 00 00             ; DICTP / (f90e)
0567: 29                         ; SLASHMOD
0568: 04                         ; SWAP
0569: 05                         ; DROP
056a: 0c                         ; RET
;
056b: 18 00 f9 00 00             ; DICTP MOD (f900)
0570: 29                         ; SLASHMOD
0571: 05                         ; DROP
0572: 0c                         ; RET
;
0573: 18 f3 f8 00 00             ; DICTP 1+ (f8f3)
0578: 2c                         ; INC
0579: 0c                         ; RET
;
057a: 18 e6 f8 00 00             ; DICTP 1- (f8e6)
057f: 2e                         ; DEC
0580: 0c                         ; RET
;
0581: 18 d9 f8 00 00             ; DICTP 2* (f8d9)
0586: 0e 02                      ; CLITERAL 2
0588: 13                         ; MUL
0589: 0c                         ; RET
;
058a: 18 cc f8 00 00             ; DICTP 2/ (f8cc)
058f: 0e 02                      ; CLITERAL 2
0591: 29                         ; SLASHMOD
0592: 04                         ; SWAP
0593: 05                         ; DROP
0594: 0c                         ; RET
;
0595: 18 bf f8 00 00             ; DICTP += (f8bf)
059a: 1a                         ; OVER
059b: 02                         ; FETCH
059c: 11                         ; ADD
059d: 04                         ; SWAP
059e: 03                         ; STORE
059f: 0c                         ; RET
;
05a0: 18 b2 f8 00 00             ; DICTP -= (f8b2)
05a5: 1a                         ; OVER
05a6: 02                         ; FETCH
05a7: 04                         ; SWAP
05a8: 12                         ; SUB
05a9: 04                         ; SWAP
05aa: 03                         ; STORE
05ab: 0c                         ; RET
;
05ac: 18 a5 f8 00 00             ; DICTP -! (f8a5)
05b1: 04                         ; SWAP
05b2: 1a                         ; OVER
05b3: 02                         ; FETCH
05b4: 04                         ; SWAP
05b5: 12                         ; SUB
05b6: 04                         ; SWAP
05b7: 03                         ; STORE
05b8: 0c                         ; RET
;
05b9: 18 98 f8 00 00             ; DICTP ++ (f898)
05be: 06                         ; DUP
05bf: 02                         ; FETCH
05c0: 2c                         ; INC
05c1: 04                         ; SWAP
05c2: 03                         ; STORE
05c3: 0c                         ; RET
;
05c4: 18 8b f8 00 00             ; DICTP -- (f88b)
05c9: 06                         ; DUP
05ca: 02                         ; FETCH
05cb: 2e                         ; DEC
05cc: 04                         ; SWAP
05cd: 03                         ; STORE
05ce: 0c                         ; RET
;
05cf: 18 7d f8 00 00             ; DICTP C++ (f87d)
05d4: 06                         ; DUP
05d5: 0f                         ; CFETCH
05d6: 2c                         ; INC
05d7: 04                         ; SWAP
05d8: 10                         ; CSTORE
05d9: 0c                         ; RET
;
05da: 18 6f f8 00 00             ; DICTP C-- (f86f)
05df: 06                         ; DUP
05e0: 0f                         ; CFETCH
05e1: 2e                         ; DEC
05e2: 04                         ; SWAP
05e3: 10                         ; CSTORE
05e4: 0c                         ; RET
;
05e5: 18 62 f8 00 00             ; DICTP 0= (f862)
05ea: 2a                         ; NOT
05eb: 0c                         ; RET
;
05ec: 18 55 f8 00 00             ; DICTP <> (f855)
05f1: 16                         ; EQ
05f2: 2a                         ; NOT
05f3: 0c                         ; RET
;
05f4: 18 48 f8 00 00             ; DICTP <= (f848)
05f9: 17                         ; GT
05fa: 2a                         ; NOT
05fb: 0c                         ; RET
;
05fc: 18 3b f8 00 00             ; DICTP >= (f83b)
0601: 15                         ; LT
0602: 2a                         ; NOT
0603: 0c                         ; RET
;
0604: 18 2c f8 00 00             ; DICTP TRUE (f82c)
0609: 01 ff ff ff ff             ; LITERAL -1 (ffffffff)
060e: 0c                         ; RET
;
060f: 18 1c f8 00 00             ; DICTP FALSE (f81c)
0614: 0e 00                      ; CLITERAL 0
0616: 0c                         ; RET
;
0617: 18 0c f8 00 00             ; DICTP COUNT (f80c)
061c: 06                         ; DUP
061d: 2c                         ; INC
061e: 04                         ; SWAP
061f: 0f                         ; CFETCH
0620: 0c                         ; RET
;
0621: 18 fd f7 00 00             ; DICTP TYPE (f7fd)
0626: 06                         ; DUP
0627: 2a                         ; NOT
0628: 5b 04                      ; BRANCHFZ 4 (062d)
062a: 05                         ; DROP
062b: 05                         ; DROP
062c: 0c                         ; RET
062d: 04                         ; SWAP
062e: 06                         ; DUP
062f: 0f                         ; CFETCH
0630: 19                         ; EMIT
0631: 2c                         ; INC
0632: 04                         ; SWAP
0633: 2e                         ; DEC
0634: 5d 0f                      ; BRANCHB 15 (0626)
0636: 0c                         ; RET
;
0637: 18 f0 f7 00 00             ; DICTP CT (f7f0)
063c: 0b 17 06 00 00             ; CALL COUNT (0617)
0641: 0b 21 06 00 00             ; CALL TYPE (0621)
0646: 0c                         ; RET
;
0647: 18 e4 f7 00 00             ; DICTP \ (f7e4)
064c: 0e 00                      ; CLITERAL 0
064e: 0b 8b 00 00 00             ; CALL >IN (008b)
0653: 02                         ; FETCH
0654: 10                         ; CSTORE
0655: 0c                         ; RET
;
0656: 18 d8 f7 00 00             ; DICTP ( (f7d8)
065b: 0b 8b 00 00 00             ; CALL >IN (008b)
0660: 02                         ; FETCH
0661: 0f                         ; CFETCH
0662: 06                         ; DUP
0663: 2a                         ; NOT
0664: 5b 1d                      ; BRANCHFZ 29 (0682)
0666: 07 13 6d 69 73 73 69 6e 67 20 63 6c 6f 73 69 6e 67 20 27 29 27 00 ; SLITERAL (0667) [missing closing ')']
067c: 0b 37 06 00 00             ; CALL CT (0637)
0681: fe                         ; RESET
0682: 0b 8b 00 00 00             ; CALL >IN (008b)
0687: 06                         ; DUP
0688: 02                         ; FETCH
0689: 2c                         ; INC
068a: 04                         ; SWAP
068b: 03                         ; STORE
068c: 0e 29                      ; CLITERAL 41
068e: 16                         ; EQ
068f: 5e 35                      ; BRANCHBZ 53 (065b)
0691: 0c                         ; RET
;
0692: 18 c8 f7 00 00             ; DICTP SPACE (f7c8)
0697: 0e 20                      ; CLITERAL 32
0699: 19                         ; EMIT
069a: 0c                         ; RET
;
069b: 18 bb f7 00 00             ; DICTP BL (f7bb)
06a0: 0e 20                      ; CLITERAL 32
06a2: 19                         ; EMIT
06a3: 0c                         ; RET
;
06a4: 18 ac f7 00 00             ; DICTP CRLF (f7ac)
06a9: 0e 0d                      ; CLITERAL 13
06ab: 19                         ; EMIT
06ac: 0e 0a                      ; CLITERAL 10
06ae: 19                         ; EMIT
06af: 0c                         ; RET
;
06b0: 18 9f f7 00 00             ; DICTP CR (f79f)
06b5: 0e 0d                      ; CLITERAL 13
06b7: 19                         ; EMIT
06b8: 0e 0a                      ; CLITERAL 10
06ba: 19                         ; EMIT
06bb: 0c                         ; RET
;
06bc: 18 8d f7 00 00             ; DICTP BETWEEN (f78d)
06c1: 0e 02                      ; CLITERAL 2
06c3: 25                         ; PICK
06c4: 15                         ; LT
06c5: 5b 06                      ; BRANCHFZ 6 (06cc)
06c7: 05                         ; DROP
06c8: 05                         ; DROP
06c9: 0e 00                      ; CLITERAL 0
06cb: 0c                         ; RET
06cc: 15                         ; LT
06cd: 2a                         ; NOT
06ce: 0c                         ; RET
;
06cf: 18 7c f7 00 00             ; DICTP skipWS (f77c)
06d4: 06                         ; DUP
06d5: 0f                         ; CFETCH
06d6: 06                         ; DUP
06d7: 5b 0c                      ; BRANCHFZ 12 (06e4)
06d9: 0e 20                      ; CLITERAL 32
06db: 17                         ; GT
06dc: 5b 04                      ; BRANCHFZ 4 (06e1)
06de: 0c                         ; RET
06df: 5a 02                      ; BRANCHF 2 (06e2)
06e1: 2c                         ; INC
06e2: 5a 03                      ; BRANCHF 3 (06e6)
06e4: 05                         ; DROP
06e5: 0c                         ; RET
06e6: 5d 13                      ; BRANCHB 19 (06d4)
06e8: 0c                         ; RET
;
06e9: 18 69 f7 00 00             ; DICTP to-upper (f769)
06ee: 06                         ; DUP
06ef: 0e 61                      ; CLITERAL 97
06f1: 15                         ; LT
06f2: 5b 02                      ; BRANCHFZ 2 (06f5)
06f4: 0c                         ; RET
06f5: 06                         ; DUP
06f6: 0e 7a                      ; CLITERAL 122
06f8: 17                         ; GT
06f9: 5b 02                      ; BRANCHFZ 2 (06fc)
06fb: 0c                         ; RET
06fc: 0e 20                      ; CLITERAL 32
06fe: 12                         ; SUB
06ff: 0c                         ; RET
;
0700: 18 56 f7 00 00             ; DICTP to-lower (f756)
0705: 06                         ; DUP
0706: 0e 41                      ; CLITERAL 65
0708: 15                         ; LT
0709: 5b 02                      ; BRANCHFZ 2 (070c)
070b: 0c                         ; RET
070c: 06                         ; DUP
070d: 0e 5a                      ; CLITERAL 90
070f: 17                         ; GT
0710: 5b 02                      ; BRANCHFZ 2 (0713)
0712: 0c                         ; RET
0713: 0e 20                      ; CLITERAL 32
0715: 11                         ; ADD
0716: 0c                         ; RET
;
0717: 18 42 f7 00 00             ; DICTP char-find (f742)
071c: 04                         ; SWAP
071d: 0b d6 00 00 00             ; CALL T2 (00d6)
0722: 03                         ; STORE
0723: 0e 00                      ; CLITERAL 0
0725: 21                         ; DTOR
0726: 0b 17 06 00 00             ; CALL COUNT (0617)
072b: 06                         ; DUP
072c: 2a                         ; NOT
072d: 5b 0b                      ; BRANCHFZ 11 (0739)
072f: 05                         ; DROP
0730: 05                         ; DROP
0731: 22                         ; RTOD
0732: 05                         ; DROP
0733: 01 ff ff ff ff             ; LITERAL -1 (ffffffff)
0738: 0c                         ; RET
0739: 1a                         ; OVER
073a: 0f                         ; CFETCH
073b: 0b d6 00 00 00             ; CALL T2 (00d6)
0740: 02                         ; FETCH
0741: 16                         ; EQ
0742: 5b 05                      ; BRANCHFZ 5 (0748)
0744: 05                         ; DROP
0745: 05                         ; DROP
0746: 22                         ; RTOD
0747: 0c                         ; RET
0748: 22                         ; RTOD
0749: 2c                         ; INC
074a: 21                         ; DTOR
074b: 2e                         ; DEC
074c: 04                         ; SWAP
074d: 2c                         ; INC
074e: 04                         ; SWAP
074f: 5d 25                      ; BRANCHB 37 (072b)
0751: 0c                         ; RET
;
0752: 18 2d f7 00 00             ; DICTP getOneWord (f72d)
0757: 06                         ; DUP
0758: 21                         ; DTOR
0759: 21                         ; DTOR
075a: 2b                         ; RFETCH
075b: 0f                         ; CFETCH
075c: 0e 20                      ; CLITERAL 32
075e: 17                         ; GT
075f: 5b 06                      ; BRANCHFZ 6 (0766)
0761: 22                         ; RTOD
0762: 2c                         ; INC
0763: 21                         ; DTOR
0764: 5a 10                      ; BRANCHF 16 (0775)
0766: 2b                         ; RFETCH
0767: 0f                         ; CFETCH
0768: 5b 08                      ; BRANCHFZ 8 (0771)
076a: 0e 00                      ; CLITERAL 0
076c: 2b                         ; RFETCH
076d: 10                         ; CSTORE
076e: 22                         ; RTOD
076f: 2c                         ; INC
0770: 21                         ; DTOR
0771: 22                         ; RTOD
0772: 22                         ; RTOD
0773: 04                         ; SWAP
0774: 0c                         ; RET
0775: 5d 1c                      ; BRANCHB 28 (075a)
0777: 0c                         ; RET
;
0778: 18 19 f7 00 00             ; DICTP DICT>NEXT (f719)
077d: 0c                         ; RET
;
077e: 18 07 f7 00 00             ; DICTP DICT>XT (f707)
0783: 0e 04                      ; CLITERAL 4
0785: 11                         ; ADD
0786: 0c                         ; RET
;
0787: 18 f2 f6 00 00             ; DICTP DICT>FLAGS (f6f2)
078c: 0e 02                      ; CLITERAL 2
078e: 0e 04                      ; CLITERAL 4
0790: 13                         ; MUL
0791: 11                         ; ADD
0792: 0c                         ; RET
;
0793: 18 de f6 00 00             ; DICTP DICT>NAME (f6de)
0798: 0b 87 07 00 00             ; CALL DICT>FLAGS (0787)
079d: 2c                         ; INC
079e: 0c                         ; RET
;
079f: 18 ca f6 00 00             ; DICTP NEXT>DICT (f6ca)
07a4: 0c                         ; RET
;
07a5: 18 b8 f6 00 00             ; DICTP XT>DICT (f6b8)
07aa: 0e 04                      ; CLITERAL 4
07ac: 12                         ; SUB
07ad: 0c                         ; RET
;
07ae: 18 a3 f6 00 00             ; DICTP FLAGS>DICT (f6a3)
07b3: 0e 02                      ; CLITERAL 2
07b5: 0e 04                      ; CLITERAL 4
07b7: 13                         ; MUL
07b8: 12                         ; SUB
07b9: 0c                         ; RET
;
07ba: 18 8f f6 00 00             ; DICTP NAME>DICT (f68f)
07bf: 2e                         ; DEC
07c0: 0e 02                      ; CLITERAL 2
07c2: 0e 04                      ; CLITERAL 4
07c4: 13                         ; MUL
07c5: 12                         ; SUB
07c6: 0c                         ; RET
;
07c7: 18 7a f6 00 00             ; DICTP DICT.GetXT (f67a)
07cc: 0b 7e 07 00 00             ; CALL DICT>XT (077e)
07d1: 02                         ; FETCH
07d2: 0c                         ; RET
;
07d3: 18 62 f6 00 00             ; DICTP DICT.GetFLAGS (f662)
07d8: 0b 87 07 00 00             ; CALL DICT>FLAGS (0787)
07dd: 0f                         ; CFETCH
07de: 0c                         ; RET
;
07df: 18 4d f6 00 00             ; DICTP DICTP>NAME (f64d)
07e4: 2c                         ; INC
07e5: 02                         ; FETCH
07e6: 0b 93 07 00 00             ; CALL DICT>NAME (0793)
07eb: 0c                         ; RET
;
07ec: 18 37 f6 00 00             ; DICTP XT.GetDICTP (f637)
07f1: 06                         ; DUP
07f2: 0f                         ; CFETCH
07f3: 0e 18                      ; CLITERAL 24
07f5: 16                         ; EQ
07f6: 5b 05                      ; BRANCHFZ 5 (07fc)
07f8: 2c                         ; INC
07f9: 02                         ; FETCH
07fa: 5a 03                      ; BRANCHF 3 (07fe)
07fc: 05                         ; DROP
07fd: fe                         ; RESET
07fe: 0c                         ; RET
;
07ff: 18 1a f6 00 00             ; DICTP FLAGS.ISIMMEDIATE? (f61a)
0804: 0e 01                      ; CLITERAL 1
0806: 24                         ; AND
0807: 0c                         ; RET
;
0808: 18 00 f6 00 00             ; DICTP FLAGS.ISINLINE? (f600)
080d: 0e 02                      ; CLITERAL 2
080f: 24                         ; AND
0810: 0c                         ; RET
;
0811: 18 e4 f5 00 00             ; DICTP DICT.GetIMMEDIATE (f5e4)
0816: 0b d3 07 00 00             ; CALL DICT.GetFLAGS (07d3)
081b: 0b ff 07 00 00             ; CALL FLAGS.ISIMMEDIATE? (07ff)
0820: 0c                         ; RET
;
0821: 18 cb f5 00 00             ; DICTP DICT.GetINLINE (f5cb)
0826: 0b d3 07 00 00             ; CALL DICT.GetFLAGS (07d3)
082b: 0b 08 08 00 00             ; CALL FLAGS.ISINLINE? (0808)
0830: 0c                         ; RET
;
0831: 18 b6 f5 00 00             ; DICTP findInDict (f5b6)
0836: 0b 09 01 00 00             ; CALL LAST (0109)
083b: 21                         ; DTOR
083c: 2b                         ; RFETCH
083d: 06                         ; DUP
083e: 5b 1d                      ; BRANCHFZ 29 (085c)
0840: 0b 93 07 00 00             ; CALL DICT>NAME (0793)
0845: 2c                         ; INC
0846: 1a                         ; OVER
0847: 28                         ; COMPAREI
0848: 5b 11                      ; BRANCHFZ 17 (085a)
084a: 05                         ; DROP
084b: 2b                         ; RFETCH
084c: 0b c7 07 00 00             ; CALL DICT.GetXT (07c7)
0851: 22                         ; RTOD
0852: 0b d3 07 00 00             ; CALL DICT.GetFLAGS (07d3)
0857: 0e 01                      ; CLITERAL 1
0859: 0c                         ; RET
085a: 5a 09                      ; BRANCHF 9 (0864)
085c: 05                         ; DROP
085d: 05                         ; DROP
085e: 22                         ; RTOD
085f: 0e 00                      ; CLITERAL 0
0861: 0e 00                      ; CLITERAL 0
0863: 0c                         ; RET
0864: 22                         ; RTOD
0865: 02                         ; FETCH
0866: 21                         ; DTOR
0867: 5d 2c                      ; BRANCHB 44 (083c)
0869: 0c                         ; RET
;
086a: 18 9f f5 00 00             ; DICTP is-num-char? (f59f)
086f: 0b e9 06 00 00             ; CALL to-upper (06e9)
0874: 04                         ; SWAP
0875: 21                         ; DTOR
0876: 07 10 30 31 32 33 34 35 36 37 38 39 41 42 43 44 45 46 00 ; SLITERAL (0877) [0123456789ABCDEF]
0889: 0b 17 07 00 00             ; CALL char-find (0717)
088e: 06                         ; DUP
088f: 0e 00                      ; CLITERAL 0
0891: 15                         ; LT
0892: 5b 06                      ; BRANCHFZ 6 (0899)
0894: 0e 00                      ; CLITERAL 0
0896: 22                         ; RTOD
0897: 05                         ; DROP
0898: 0c                         ; RET
0899: 22                         ; RTOD
089a: 2e                         ; DEC
089b: 1a                         ; OVER
089c: 15                         ; LT
089d: 5b 05                      ; BRANCHFZ 5 (08a3)
089f: 0e 00                      ; CLITERAL 0
08a1: 5a 03                      ; BRANCHF 3 (08a5)
08a3: 0e 01                      ; CLITERAL 1
08a5: 0c                         ; RET
;
08a6: 18 8e f5 00 00             ; DICTP NEGATE (f58e)
08ab: 0e 00                      ; CLITERAL 0
08ad: 04                         ; SWAP
08ae: 12                         ; SUB
08af: 0c                         ; RET
;
08b0: 18 80 f5 00 00             ; DICTP ABS (f580)
08b5: 06                         ; DUP
08b6: 0e 00                      ; CLITERAL 0
08b8: 15                         ; LT
08b9: 5b 06                      ; BRANCHFZ 6 (08c0)
08bb: 0b a6 08 00 00             ; CALL NEGATE (08a6)
08c0: 0c                         ; RET
;
08c1: 18 6b f5 00 00             ; DICTP parse-char (f56b)
08c6: 06                         ; DUP
08c7: 2c                         ; INC
08c8: 0f                         ; CFETCH
08c9: 0e 27                      ; CLITERAL 39
08cb: 16                         ; EQ
08cc: 2a                         ; NOT
08cd: 5b 04                      ; BRANCHFZ 4 (08d2)
08cf: 0e 00                      ; CLITERAL 0
08d1: 0c                         ; RET
08d2: 06                         ; DUP
08d3: 0e 02                      ; CLITERAL 2
08d5: 11                         ; ADD
08d6: 0f                         ; CFETCH
08d7: 5b 05                      ; BRANCHFZ 5 (08dd)
08d9: 0e 00                      ; CLITERAL 0
08db: 5a 04                      ; BRANCHF 4 (08e0)
08dd: 0f                         ; CFETCH
08de: 0e 01                      ; CLITERAL 1
08e0: 0c                         ; RET
;
08e1: 18 57 f5 00 00             ; DICTP isNumber? (f557)
08e6: 06                         ; DUP
08e7: 0f                         ; CFETCH
08e8: 0e 27                      ; CLITERAL 39
08ea: 16                         ; EQ
08eb: 5b 08                      ; BRANCHFZ 8 (08f4)
08ed: 2c                         ; INC
08ee: 0b c1 08 00 00             ; CALL parse-char (08c1)
08f3: 0c                         ; RET
08f4: 0b 5e 00 00 00             ; CALL BASE (005e)
08f9: 02                         ; FETCH
08fa: 0b e5 00 00 00             ; CALL T3 (00e5)
08ff: 03                         ; STORE
0900: 06                         ; DUP
0901: 0f                         ; CFETCH
0902: 0e 24                      ; CLITERAL 36
0904: 16                         ; EQ
0905: 5b 0a                      ; BRANCHFZ 10 (0910)
0907: 2c                         ; INC
0908: 0e 10                      ; CLITERAL 16
090a: 0b e5 00 00 00             ; CALL T3 (00e5)
090f: 03                         ; STORE
0910: 06                         ; DUP
0911: 0f                         ; CFETCH
0912: 0e 23                      ; CLITERAL 35
0914: 16                         ; EQ
0915: 5b 0a                      ; BRANCHFZ 10 (0920)
0917: 2c                         ; INC
0918: 0e 0a                      ; CLITERAL 10
091a: 0b e5 00 00 00             ; CALL T3 (00e5)
091f: 03                         ; STORE
0920: 06                         ; DUP
0921: 0f                         ; CFETCH
0922: 0e 25                      ; CLITERAL 37
0924: 16                         ; EQ
0925: 5b 0a                      ; BRANCHFZ 10 (0930)
0927: 2c                         ; INC
0928: 0e 02                      ; CLITERAL 2
092a: 0b e5 00 00 00             ; CALL T3 (00e5)
092f: 03                         ; STORE
0930: 0b 9a 00 00 00             ; CALL #NEG (009a)
0935: 0b ec 03 00 00             ; CALL OFF (03ec)
093a: 0b e5 00 00 00             ; CALL T3 (00e5)
093f: 02                         ; FETCH
0940: 0e 0a                      ; CLITERAL 10
0942: 16                         ; EQ
0943: 5b 10                      ; BRANCHFZ 16 (0954)
0945: 06                         ; DUP
0946: 0f                         ; CFETCH
0947: 0e 2d                      ; CLITERAL 45
0949: 16                         ; EQ
094a: 06                         ; DUP
094b: 0b 9a 00 00 00             ; CALL #NEG (009a)
0950: 03                         ; STORE
0951: 5b 02                      ; BRANCHFZ 2 (0954)
0953: 2c                         ; INC
0954: 0e 00                      ; CLITERAL 0
0956: 21                         ; DTOR
0957: 06                         ; DUP
0958: 0f                         ; CFETCH
0959: 06                         ; DUP
095a: 0e 00                      ; CLITERAL 0
095c: 16                         ; EQ
095d: 5b 14                      ; BRANCHFZ 20 (0972)
095f: 05                         ; DROP
0960: 05                         ; DROP
0961: 22                         ; RTOD
0962: 0b 9a 00 00 00             ; CALL #NEG (009a)
0967: 02                         ; FETCH
0968: 5b 06                      ; BRANCHFZ 6 (096f)
096a: 0b a6 08 00 00             ; CALL NEGATE (08a6)
096f: 0e 01                      ; CLITERAL 1
0971: 0c                         ; RET
0972: 0b e5 00 00 00             ; CALL T3 (00e5)
0977: 02                         ; FETCH
0978: 04                         ; SWAP
0979: 0b 6a 08 00 00             ; CALL is-num-char? (086a)
097e: 5b 0e                      ; BRANCHFZ 14 (098d)
0980: 22                         ; RTOD
0981: 0b e5 00 00 00             ; CALL T3 (00e5)
0986: 02                         ; FETCH
0987: 13                         ; MUL
0988: 11                         ; ADD
0989: 21                         ; DTOR
098a: 2c                         ; INC
098b: 5a 06                      ; BRANCHF 6 (0992)
098d: 05                         ; DROP
098e: 22                         ; RTOD
098f: 0e 00                      ; CLITERAL 0
0991: 0c                         ; RET
0992: 5d 3c                      ; BRANCHB 60 (0957)
0994: 0c                         ; RET
;
0995: 18 4a f5 00 00             ; DICTP <# (f54a)
099a: 0b 9a 00 00 00             ; CALL #NEG (009a)
099f: 0b ec 03 00 00             ; CALL OFF (03ec)
09a4: 0b a9 00 00 00             ; CALL #LEN (00a9)
09a9: 0b ec 03 00 00             ; CALL OFF (03ec)
09ae: 06                         ; DUP
09af: 0e 00                      ; CLITERAL 0
09b1: 15                         ; LT
09b2: 5b 10                      ; BRANCHFZ 16 (09c3)
09b4: 0b a6 08 00 00             ; CALL NEGATE (08a6)
09b9: 0b 9a 00 00 00             ; CALL #NEG (009a)
09be: 0b e2 03 00 00             ; CALL ON (03e2)
09c3: 0e 00                      ; CLITERAL 0
09c5: 04                         ; SWAP
09c6: 0c                         ; RET
;
09c7: 18 3e f5 00 00             ; DICTP # (f53e)
09cc: 0b 5e 00 00 00             ; CALL BASE (005e)
09d1: 02                         ; FETCH
09d2: 29                         ; SLASHMOD
09d3: 04                         ; SWAP
09d4: 0e 30                      ; CLITERAL 48
09d6: 11                         ; ADD
09d7: 06                         ; DUP
09d8: 0e 39                      ; CLITERAL 57
09da: 17                         ; GT
09db: 5b 04                      ; BRANCHFZ 4 (09e0)
09dd: 0e 07                      ; CLITERAL 7
09df: 11                         ; ADD
09e0: 0b a9 00 00 00             ; CALL #LEN (00a9)
09e5: 06                         ; DUP
09e6: 02                         ; FETCH
09e7: 2c                         ; INC
09e8: 04                         ; SWAP
09e9: 03                         ; STORE
09ea: 04                         ; SWAP
09eb: 0c                         ; RET
;
09ec: 18 31 f5 00 00             ; DICTP #S (f531)
09f1: 0b c7 09 00 00             ; CALL # (09c7)
09f6: 06                         ; DUP
09f7: 2a                         ; NOT
09f8: 5e 08                      ; BRANCHBZ 8 (09f1)
09fa: 0c                         ; RET
;
09fb: 18 24 f5 00 00             ; DICTP #> (f524)
0a00: 0c                         ; RET
;
0a01: 18 16 f5 00 00             ; DICTP #P- (f516)
0a06: 05                         ; DROP
0a07: 0b 9a 00 00 00             ; CALL #NEG (009a)
0a0c: 02                         ; FETCH
0a0d: 5b 04                      ; BRANCHFZ 4 (0a12)
0a0f: 0e 2d                      ; CLITERAL 45
0a11: 19                         ; EMIT
0a12: 0c                         ; RET
;
0a13: 18 09 f5 00 00             ; DICTP #P (f509)
0a18: 0b 01 0a 00 00             ; CALL #P- (0a01)
0a1d: 19                         ; EMIT
0a1e: 06                         ; DUP
0a1f: 2a                         ; NOT
0a20: 5e 04                      ; BRANCHBZ 4 (0a1d)
0a22: 05                         ; DROP
0a23: 0c                         ; RET
;
0a24: 18 fb f4 00 00             ; DICTP (.) (f4fb)
0a29: 0b 95 09 00 00             ; CALL <# (0995)
0a2e: 0b ec 09 00 00             ; CALL #S (09ec)
0a33: 0b fb 09 00 00             ; CALL #> (09fb)
0a38: 0b 13 0a 00 00             ; CALL #P (0a13)
0a3d: 0c                         ; RET
;
0a3e: 18 ef f4 00 00             ; DICTP . (f4ef)
0a43: 0b 24 0a 00 00             ; CALL (.) (0a24)
0a48: 0e 20                      ; CLITERAL 32
0a4a: 19                         ; EMIT
0a4b: 0c                         ; RET
;
0a4c: 18 e2 f4 00 00             ; DICTP .2 (f4e2)
0a51: 0b 95 09 00 00             ; CALL <# (0995)
0a56: 0b c7 09 00 00             ; CALL # (09c7)
0a5b: 0b c7 09 00 00             ; CALL # (09c7)
0a60: 0b fb 09 00 00             ; CALL #> (09fb)
0a65: 0b 13 0a 00 00             ; CALL #P (0a13)
0a6a: 0c                         ; RET
;
0a6b: 18 d5 f4 00 00             ; DICTP .3 (f4d5)
0a70: 0b 95 09 00 00             ; CALL <# (0995)
0a75: 0b c7 09 00 00             ; CALL # (09c7)
0a7a: 0b c7 09 00 00             ; CALL # (09c7)
0a7f: 0b c7 09 00 00             ; CALL # (09c7)
0a84: 0b fb 09 00 00             ; CALL #> (09fb)
0a89: 0b 13 0a 00 00             ; CALL #P (0a13)
0a8e: 0c                         ; RET
;
0a8f: 18 c8 f4 00 00             ; DICTP .4 (f4c8)
0a94: 0b 95 09 00 00             ; CALL <# (0995)
0a99: 0b c7 09 00 00             ; CALL # (09c7)
0a9e: 0b c7 09 00 00             ; CALL # (09c7)
0aa3: 0b c7 09 00 00             ; CALL # (09c7)
0aa8: 0b c7 09 00 00             ; CALL # (09c7)
0aad: 0b fb 09 00 00             ; CALL #> (09fb)
0ab2: 0b 13 0a 00 00             ; CALL #P (0a13)
0ab7: 0c                         ; RET
;
0ab8: 18 b9 f4 00 00             ; DICTP HEX. (f4b9)
0abd: 0b 5e 00 00 00             ; CALL BASE (005e)
0ac2: 02                         ; FETCH
0ac3: 04                         ; SWAP
0ac4: 0b aa 03 00 00             ; CALL HEX (03aa)
0ac9: 0b 24 0a 00 00             ; CALL (.) (0a24)
0ace: 0b 5e 00 00 00             ; CALL BASE (005e)
0ad3: 03                         ; STORE
0ad4: 0c                         ; RET
;
0ad5: 18 a9 f4 00 00             ; DICTP HEX.2 (f4a9)
0ada: 0b 5e 00 00 00             ; CALL BASE (005e)
0adf: 02                         ; FETCH
0ae0: 04                         ; SWAP
0ae1: 0b aa 03 00 00             ; CALL HEX (03aa)
0ae6: 0b 4c 0a 00 00             ; CALL .2 (0a4c)
0aeb: 0b 5e 00 00 00             ; CALL BASE (005e)
0af0: 03                         ; STORE
0af1: 0c                         ; RET
;
0af2: 18 99 f4 00 00             ; DICTP HEX.4 (f499)
0af7: 0b 5e 00 00 00             ; CALL BASE (005e)
0afc: 02                         ; FETCH
0afd: 04                         ; SWAP
0afe: 0b aa 03 00 00             ; CALL HEX (03aa)
0b03: 0b 8f 0a 00 00             ; CALL .4 (0a8f)
0b08: 0b 5e 00 00 00             ; CALL BASE (005e)
0b0d: 03                         ; STORE
0b0e: 0c                         ; RET
;
0b0f: 18 86 f4 00 00             ; DICTP DECIMAL. (f486)
0b14: 0b 5e 00 00 00             ; CALL BASE (005e)
0b19: 02                         ; FETCH
0b1a: 04                         ; SWAP
0b1b: 0b b8 03 00 00             ; CALL DECIMAL (03b8)
0b20: 0b 24 0a 00 00             ; CALL (.) (0a24)
0b25: 0b 5e 00 00 00             ; CALL BASE (005e)
0b2a: 03                         ; STORE
0b2b: 0c                         ; RET
;
0b2c: 18 72 f4 00 00             ; DICTP DECIMAL.3 (f472)
0b31: 0b 5e 00 00 00             ; CALL BASE (005e)
0b36: 02                         ; FETCH
0b37: 04                         ; SWAP
0b38: 0b b8 03 00 00             ; CALL DECIMAL (03b8)
0b3d: 0b 6b 0a 00 00             ; CALL .3 (0a6b)
0b42: 0b 5e 00 00 00             ; CALL BASE (005e)
0b47: 03                         ; STORE
0b48: 0c                         ; RET
;
0b49: 18 60 f4 00 00             ; DICTP BINARY. (f460)
0b4e: 0b 5e 00 00 00             ; CALL BASE (005e)
0b53: 02                         ; FETCH
0b54: 04                         ; SWAP
0b55: 0b d4 03 00 00             ; CALL BINARY (03d4)
0b5a: 0b 24 0a 00 00             ; CALL (.) (0a24)
0b5f: 0b 5e 00 00 00             ; CALL BASE (005e)
0b64: 03                         ; STORE
0b65: 0c                         ; RET
;
0b66: 18 52 f4 00 00             ; DICTP MIN (f452)
0b6b: 1a                         ; OVER
0b6c: 1a                         ; OVER
0b6d: 17                         ; GT
0b6e: 5b 02                      ; BRANCHFZ 2 (0b71)
0b70: 04                         ; SWAP
0b71: 05                         ; DROP
0b72: 0c                         ; RET
;
0b73: 18 44 f4 00 00             ; DICTP MAX (f444)
0b78: 1a                         ; OVER
0b79: 1a                         ; OVER
0b7a: 15                         ; LT
0b7b: 5b 02                      ; BRANCHFZ 2 (0b7e)
0b7d: 04                         ; SWAP
0b7e: 05                         ; DROP
0b7f: 0c                         ; RET
;
0b80: 18 37 f4 00 00             ; DICTP .S (f437)
0b85: 0e 20                      ; CLITERAL 32
0b87: 19                         ; EMIT
0b88: 26                         ; DEPTH
0b89: 0e 00                      ; CLITERAL 0
0b8b: 15                         ; LT
0b8c: 5b 1f                      ; BRANCHFZ 31 (0bac)
0b8e: 07 10 53 74 61 63 6b 20 75 6e 64 65 72 66 6c 6f 77 21 00 ; SLITERAL (0b8f) [Stack underflow!]
0ba1: 0b 17 06 00 00             ; CALL COUNT (0617)
0ba6: 0b 21 06 00 00             ; CALL TYPE (0621)
0bab: fe                         ; RESET
0bac: 26                         ; DEPTH
0bad: 0e 00                      ; CLITERAL 0
0baf: 16                         ; EQ
0bb0: 5b 0b                      ; BRANCHFZ 11 (0bbc)
0bb2: 0e 28                      ; CLITERAL 40
0bb4: 19                         ; EMIT
0bb5: 0e ed                      ; CLITERAL 237
0bb7: 19                         ; EMIT
0bb8: 0e 29                      ; CLITERAL 41
0bba: 19                         ; EMIT
0bbb: 0c                         ; RET
0bbc: 0e 28                      ; CLITERAL 40
0bbe: 19                         ; EMIT
0bbf: 0e 20                      ; CLITERAL 32
0bc1: 19                         ; EMIT
0bc2: 26                         ; DEPTH
0bc3: 2e                         ; DEC
0bc4: 21                         ; DTOR
0bc5: 2b                         ; RFETCH
0bc6: 25                         ; PICK
0bc7: 0b 3e 0a 00 00             ; CALL . (0a3e)
0bcc: 2b                         ; RFETCH
0bcd: 5b 06                      ; BRANCHFZ 6 (0bd4)
0bcf: 22                         ; RTOD
0bd0: 2e                         ; DEC
0bd1: 21                         ; DTOR
0bd2: 5a 07                      ; BRANCHF 7 (0bda)
0bd4: 22                         ; RTOD
0bd5: 05                         ; DROP
0bd6: 0e 29                      ; CLITERAL 41
0bd8: 19                         ; EMIT
0bd9: 0c                         ; RET
0bda: 5d 16                      ; BRANCHB 22 (0bc5)
0bdc: 0c                         ; RET
;
0bdd: 18 23 f4 00 00             ; DICTP .(MEM_SZ) (f423)
0be2: 07 08 4d 65 6d 6f 72 79 3a 20 00 ; SLITERAL (0be3) [Memory: ]
0bed: 0b 37 06 00 00             ; CALL CT (0637)
0bf2: 0b e5 04 00 00             ; CALL MEM_SZ (04e5)
0bf7: 06                         ; DUP
0bf8: 0b b8 0a 00 00             ; CALL HEX. (0ab8)
0bfd: 07 02 20 28 00             ; SLITERAL (0bfe) [ (]
0c02: 0b 37 06 00 00             ; CALL CT (0637)
0c07: 0b 24 0a 00 00             ; CALL (.) (0a24)
0c0c: 07 01 29 00                ; SLITERAL (0c0d) [)]
0c10: 0b 37 06 00 00             ; CALL CT (0637)
0c15: 0c                         ; RET
;
0c16: 18 11 f4 00 00             ; DICTP .(HERE) (f411)
0c1b: 07 06 48 45 52 45 3a 20 00 ; SLITERAL (0c1c) [HERE: ]
0c24: 0b 37 06 00 00             ; CALL CT (0637)
0c29: 0b fd 00 00 00             ; CALL HERE (00fd)
0c2e: 06                         ; DUP
0c2f: 0b b8 0a 00 00             ; CALL HEX. (0ab8)
0c34: 07 02 20 28 00             ; SLITERAL (0c35) [ (]
0c39: 0b 37 06 00 00             ; CALL CT (0637)
0c3e: 0b 24 0a 00 00             ; CALL (.) (0a24)
0c43: 07 01 29 00                ; SLITERAL (0c44) [)]
0c47: 0b 37 06 00 00             ; CALL CT (0637)
0c4c: 0c                         ; RET
;
0c4d: 18 ff f3 00 00             ; DICTP .(LAST) (f3ff)
0c52: 07 06 4c 41 53 54 3a 20 00 ; SLITERAL (0c53) [LAST: ]
0c5b: 0b 37 06 00 00             ; CALL CT (0637)
0c60: 0b 09 01 00 00             ; CALL LAST (0109)
0c65: 06                         ; DUP
0c66: 0b b8 0a 00 00             ; CALL HEX. (0ab8)
0c6b: 07 02 20 28 00             ; SLITERAL (0c6c) [ (]
0c70: 0b 37 06 00 00             ; CALL CT (0637)
0c75: 0b 24 0a 00 00             ; CALL (.) (0a24)
0c7a: 07 01 29 00                ; SLITERAL (0c7b) [)]
0c7e: 0b 37 06 00 00             ; CALL CT (0637)
0c83: 0c                         ; RET
;
0c84: 18 e9 f3 00 00             ; DICTP .WORD-SHORT (f3e9)
0c89: 06                         ; DUP
0c8a: 0b 93 07 00 00             ; CALL DICT>NAME (0793)
0c8f: 0b 37 06 00 00             ; CALL CT (0637)
0c94: 0e 20                      ; CLITERAL 32
0c96: 19                         ; EMIT
0c97: 02                         ; FETCH
0c98: 0c                         ; RET
;
0c99: 18 d9 f3 00 00             ; DICTP WORDS (f3d9)
0c9e: 0b 09 01 00 00             ; CALL LAST (0109)
0ca3: 06                         ; DUP
0ca4: 02                         ; FETCH
0ca5: 2a                         ; NOT
0ca6: 5b 09                      ; BRANCHFZ 9 (0cb0)
0ca8: 05                         ; DROP
0ca9: 0e 0d                      ; CLITERAL 13
0cab: 19                         ; EMIT
0cac: 0e 0a                      ; CLITERAL 10
0cae: 19                         ; EMIT
0caf: 0c                         ; RET
0cb0: 0b 84 0c 00 00             ; CALL .WORD-SHORT (0c84)
0cb5: 5d 13                      ; BRANCHB 19 (0ca3)
0cb7: 0c                         ; RET
;
0cb8: 18 c4 f3 00 00             ; DICTP .WORD-LONG (f3c4)
0cbd: 06                         ; DUP
0cbe: 0b b8 0a 00 00             ; CALL HEX. (0ab8)
0cc3: 0e 3a                      ; CLITERAL 58
0cc5: 19                         ; EMIT
0cc6: 0e 20                      ; CLITERAL 32
0cc8: 19                         ; EMIT
0cc9: 06                         ; DUP
0cca: 0b 93 07 00 00             ; CALL DICT>NAME (0793)
0ccf: 0b 37 06 00 00             ; CALL CT (0637)
0cd4: 0e 20                      ; CLITERAL 32
0cd6: 19                         ; EMIT
0cd7: 06                         ; DUP
0cd8: 0b c7 07 00 00             ; CALL DICT.GetXT (07c7)
0cdd: 0e 28                      ; CLITERAL 40
0cdf: 19                         ; EMIT
0ce0: 0b f2 0a 00 00             ; CALL HEX.4 (0af2)
0ce5: 0e 29                      ; CLITERAL 41
0ce7: 19                         ; EMIT
0ce8: 06                         ; DUP
0ce9: 0b 87 07 00 00             ; CALL DICT>FLAGS (0787)
0cee: 0f                         ; CFETCH
0cef: 06                         ; DUP
0cf0: 07 09 2c 20 46 6c 61 67 73 3a 20 00 ; SLITERAL (0cf1) [, Flags: ]
0cfc: 0b 37 06 00 00             ; CALL CT (0637)
0d01: 0b d5 0a 00 00             ; CALL HEX.2 (0ad5)
0d06: 06                         ; DUP
0d07: 0b 08 08 00 00             ; CALL FLAGS.ISINLINE? (0808)
0d0c: 5b 12                      ; BRANCHFZ 18 (0d1f)
0d0e: 07 09 20 28 49 4e 4c 49 4e 45 29 00 ; SLITERAL (0d0f) [ (INLINE)]
0d1a: 0b 37 06 00 00             ; CALL CT (0637)
0d1f: 0b ff 07 00 00             ; CALL FLAGS.ISIMMEDIATE? (07ff)
0d24: 5b 15                      ; BRANCHFZ 21 (0d3a)
0d26: 07 0c 20 28 49 4d 4d 45 44 49 41 54 45 29 00 ; SLITERAL (0d27) [ (IMMEDIATE)]
0d35: 0b 37 06 00 00             ; CALL CT (0637)
0d3a: 0e 0d                      ; CLITERAL 13
0d3c: 19                         ; EMIT
0d3d: 0e 0a                      ; CLITERAL 10
0d3f: 19                         ; EMIT
0d40: 02                         ; FETCH
0d41: 0c                         ; RET
;
0d42: 18 b3 f3 00 00             ; DICTP WORDSV (f3b3)
0d47: 0b 4d 0c 00 00             ; CALL .(LAST) (0c4d)
0d4c: 0e 0d                      ; CLITERAL 13
0d4e: 19                         ; EMIT
0d4f: 0e 0a                      ; CLITERAL 10
0d51: 19                         ; EMIT
0d52: 0b 09 01 00 00             ; CALL LAST (0109)
0d57: 06                         ; DUP
0d58: 02                         ; FETCH
0d59: 2a                         ; NOT
0d5a: 5b 09                      ; BRANCHFZ 9 (0d64)
0d5c: 05                         ; DROP
0d5d: 0e 0d                      ; CLITERAL 13
0d5f: 19                         ; EMIT
0d60: 0e 0a                      ; CLITERAL 10
0d62: 19                         ; EMIT
0d63: 0c                         ; RET
0d64: 0b b8 0c 00 00             ; CALL .WORD-LONG (0cb8)
0d69: 5d 13                      ; BRANCHB 19 (0d57)
0d6b: 0c                         ; RET
;
0d6c: 18 9f f3 00 00             ; DICTP NUM-WORDS (f39f)
0d71: 0e 00                      ; CLITERAL 0
0d73: 21                         ; DTOR
0d74: 0b 09 01 00 00             ; CALL LAST (0109)
0d79: 06                         ; DUP
0d7a: 02                         ; FETCH
0d7b: 2a                         ; NOT
0d7c: 5b 0a                      ; BRANCHFZ 10 (0d87)
0d7e: 05                         ; DROP
0d7f: 22                         ; RTOD
0d80: 0e 0d                      ; CLITERAL 13
0d82: 19                         ; EMIT
0d83: 0e 0a                      ; CLITERAL 10
0d85: 19                         ; EMIT
0d86: 0c                         ; RET
0d87: 22                         ; RTOD
0d88: 2c                         ; INC
0d89: 21                         ; DTOR
0d8a: 02                         ; FETCH
0d8b: 5d 13                      ; BRANCHB 19 (0d79)
0d8d: 0c                         ; RET
;
0d8e: 18 8e f3 00 00             ; DICTP .lastx (f38e)
0d93: 0e 0d                      ; CLITERAL 13
0d95: 19                         ; EMIT
0d96: 0e 0a                      ; CLITERAL 10
0d98: 19                         ; EMIT
0d99: 0b 09 01 00 00             ; CALL LAST (0109)
0d9e: 04                         ; SWAP
0d9f: 04                         ; SWAP
0da0: 0b b8 0c 00 00             ; CALL .WORD-LONG (0cb8)
0da5: 04                         ; SWAP
0da6: 2e                         ; DEC
0da7: 06                         ; DUP
0da8: 5f 0a                      ; BRANCHBNZ 10 (0d9f)
0daa: 05                         ; DROP
0dab: 05                         ; DROP
0dac: 0c                         ; RET
;
0dad: 18 7c f3 00 00             ; DICTP EXECUTE (f37c)
0db2: 22                         ; RTOD
0db3: 05                         ; DROP
0db4: 21                         ; DTOR
0db5: 0c                         ; RET
;
0db6: 18 69 f3 00 00             ; DICTP find.ret (f369)
0dbb: 06                         ; DUP
0dbc: 0f                         ; CFETCH
0dbd: 0e 0c                      ; CLITERAL 12
0dbf: 16                         ; EQ
0dc0: 5b 02                      ; BRANCHFZ 2 (0dc3)
0dc2: 0c                         ; RET
0dc3: 2c                         ; INC
0dc4: 5d 0a                      ; BRANCHB 10 (0dbb)
0dc6: 0c                         ; RET
;
0dc7: 18 56 f3 00 00             ; DICTP (inline) (f356)
0dcc: 1a                         ; OVER
0dcd: 1a                         ; OVER
0dce: 15                         ; LT
0dcf: 5b 02                      ; BRANCHFZ 2 (0dd2)
0dd1: 04                         ; SWAP
0dd2: 06                         ; DUP
0dd3: 0f                         ; CFETCH
0dd4: 0b 15 01 00 00             ; CALL C, (0115)
0dd9: 2c                         ; INC
0dda: 1a                         ; OVER
0ddb: 1a                         ; OVER
0ddc: 17                         ; GT
0ddd: 5f 0c                      ; BRANCHBNZ 12 (0dd2)
0ddf: 05                         ; DROP
0de0: 05                         ; DROP
0de1: 0c                         ; RET
;
0de2: 18 46 f3 00 00             ; DICTP DOES> (f346)
0de7: 22                         ; RTOD
0de8: 06                         ; DUP
0de9: 0b b6 0d 00 00             ; CALL find.ret (0db6)
0dee: 06                         ; DUP
0def: 21                         ; DTOR
0df0: 2c                         ; INC
0df1: 0b c7 0d 00 00             ; CALL (inline) (0dc7)
0df6: 0c                         ; RET
;
0df7: 18 30 f3 00 00             ; DICTP Copy.INLINE (f330)
0dfc: 06                         ; DUP
0dfd: 0f                         ; CFETCH
0dfe: 0e 18                      ; CLITERAL 24
0e00: 16                         ; EQ
0e01: 5b 05                      ; BRANCHFZ 5 (0e07)
0e03: 2c                         ; INC
0e04: 0e 04                      ; CLITERAL 4
0e06: 11                         ; ADD
0e07: 06                         ; DUP
0e08: 0b b6 0d 00 00             ; CALL find.ret (0db6)
0e0d: 0b c7 0d 00 00             ; CALL (inline) (0dc7)
0e12: 0c                         ; RET
;
0e13: 18 1f f3 00 00             ; DICTP strlen (f31f)
0e18: 0e 00                      ; CLITERAL 0
0e1a: 04                         ; SWAP
0e1b: 04                         ; SWAP
0e1c: 1a                         ; OVER
0e1d: 0f                         ; CFETCH
0e1e: 06                         ; DUP
0e1f: 5b 07                      ; BRANCHFZ 7 (0e27)
0e21: 05                         ; DROP
0e22: 2c                         ; INC
0e23: 04                         ; SWAP
0e24: 2c                         ; INC
0e25: 0e 01                      ; CLITERAL 1
0e27: 5f 0d                      ; BRANCHBNZ 13 (0e1b)
0e29: 04                         ; SWAP
0e2a: 05                         ; DROP
0e2b: 0c                         ; RET
;
0e2c: 18 0f f3 00 00             ; DICTP cstr, (f30f)
0e31: 06                         ; DUP
0e32: 0f                         ; CFETCH
0e33: 1a                         ; OVER
0e34: 11                         ; ADD
0e35: 2c                         ; INC
0e36: 2c                         ; INC
0e37: 0b c7 0d 00 00             ; CALL (inline) (0dc7)
0e3c: 0c                         ; RET
;
0e3d: 18 fb f2 00 00             ; DICTP [COMPILE] (f2fb)
0e42: 0b 08 08 00 00             ; CALL FLAGS.ISINLINE? (0808)
0e47: 5b 08                      ; BRANCHFZ 8 (0e50)
0e49: 0b f7 0d 00 00             ; CALL Copy.INLINE (0df7)
0e4e: 5a 0b                      ; BRANCHF 11 (0e5a)
0e50: 0b c7 01 00 00             ; CALL CALL (01c7)
0e55: 0b 2d 01 00 00             ; CALL , (012d)
0e5a: 0c                         ; RET
;
0e5b: 18 e5 f2 00 00             ; DICTP executeWord (f2e5)
0e60: 21                         ; DTOR
0e61: 2b                         ; RFETCH
0e62: 0b 31 08 00 00             ; CALL findInDict (0831)
0e67: 5b 29                      ; BRANCHFZ 41 (0e91)
0e69: 22                         ; RTOD
0e6a: 05                         ; DROP
0e6b: 0b f6 03 00 00             ; CALL ?COMPILING (03f6)
0e70: 5b 18                      ; BRANCHFZ 24 (0e89)
0e72: 06                         ; DUP
0e73: 0b ff 07 00 00             ; CALL FLAGS.ISIMMEDIATE? (07ff)
0e78: 5b 09                      ; BRANCHFZ 9 (0e82)
0e7a: 05                         ; DROP
0e7b: 0b ad 0d 00 00             ; CALL EXECUTE (0dad)
0e80: 5a 06                      ; BRANCHF 6 (0e87)
0e82: 0b 3d 0e 00 00             ; CALL [COMPILE] (0e3d)
0e87: 5a 07                      ; BRANCHF 7 (0e8f)
0e89: 05                         ; DROP
0e8a: 0b ad 0d 00 00             ; CALL EXECUTE (0dad)
0e8f: 5a 46                      ; BRANCHF 70 (0ed6)
0e91: 05                         ; DROP
0e92: 05                         ; DROP
0e93: 2b                         ; RFETCH
0e94: 0b e1 08 00 00             ; CALL isNumber? (08e1)
0e99: 5b 2e                      ; BRANCHFZ 46 (0ec8)
0e9b: 0b f6 03 00 00             ; CALL ?COMPILING (03f6)
0ea0: 5b 25                      ; BRANCHFZ 37 (0ec6)
0ea2: 06                         ; DUP
0ea3: 0e 00                      ; CLITERAL 0
0ea5: 0e ff                      ; CLITERAL 255
0ea7: 0b bc 06 00 00             ; CALL BETWEEN (06bc)
0eac: 5b 0f                      ; BRANCHFZ 15 (0ebc)
0eae: 0e 0e                      ; CLITERAL 14
0eb0: 0b 15 01 00 00             ; CALL C, (0115)
0eb5: 0b 15 01 00 00             ; CALL C, (0115)
0eba: 5a 0b                      ; BRANCHF 11 (0ec6)
0ebc: 0b 63 01 00 00             ; CALL LITERAL (0163)
0ec1: 0b 2d 01 00 00             ; CALL , (012d)
0ec6: 5a 0d                      ; BRANCHF 13 (0ed4)
0ec8: 05                         ; DROP
0ec9: 07 02 3f 3f 00             ; SLITERAL (0eca) [??]
0ece: 0b 37 06 00 00             ; CALL CT (0637)
0ed3: fe                         ; RESET
0ed4: 22                         ; RTOD
0ed5: 05                         ; DROP
0ed6: 0c                         ; RET
;
0ed7: 18 ce f2 00 00             ; DICTP executeInput (f2ce)
0edc: 0b 8b 00 00 00             ; CALL >IN (008b)
0ee1: 02                         ; FETCH
0ee2: 0b cf 06 00 00             ; CALL skipWS (06cf)
0ee7: 0b 8b 00 00 00             ; CALL >IN (008b)
0eec: 03                         ; STORE
0eed: 0b 8b 00 00 00             ; CALL >IN (008b)
0ef2: 02                         ; FETCH
0ef3: 0f                         ; CFETCH
0ef4: 5b 19                      ; BRANCHFZ 25 (0f0e)
0ef6: 0b 8b 00 00 00             ; CALL >IN (008b)
0efb: 02                         ; FETCH
0efc: 0b 52 07 00 00             ; CALL getOneWord (0752)
0f01: 0b 8b 00 00 00             ; CALL >IN (008b)
0f06: 03                         ; STORE
0f07: 0b 5b 0e 00 00             ; CALL executeWord (0e5b)
0f0c: 5a 02                      ; BRANCHF 2 (0f0f)
0f0e: 0c                         ; RET
0f0f: 5d 34                      ; BRANCHB 52 (0edc)
0f11: 0c                         ; RET
;
0f12: 18 c0 f2 00 00             ; DICTP Pad (f2c0)
0f17: 0b 09 01 00 00             ; CALL LAST (0109)
0f1c: 0e c8                      ; CLITERAL 200
0f1e: 12                         ; SUB
0f1f: 06                         ; DUP
0f20: 0b fd 00 00 00             ; CALL HERE (00fd)
0f25: 15                         ; LT
0f26: 5b 13                      ; BRANCHFZ 19 (0f3a)
0f28: 07 0e 4f 75 74 20 6f 66 20 4d 65 6d 6f 72 79 21 00 ; SLITERAL (0f29) [Out of Memory!]
0f39: fe                         ; RESET
0f3a: 0c                         ; RET
;
0f3b: 18 ae f2 00 00             ; DICTP getLine (f2ae)
0f40: 0e 00                      ; CLITERAL 0
0f42: 0b 12 0f 00 00             ; CALL Pad (0f12)
0f47: 06                         ; DUP
0f48: 2c                         ; INC
0f49: 0b 8b 00 00 00             ; CALL >IN (008b)
0f4e: 03                         ; STORE
0f4f: 10                         ; CSTORE
0f50: 0e 00                      ; CLITERAL 0
0f52: 0b 8b 00 00 00             ; CALL >IN (008b)
0f57: 02                         ; FETCH
0f58: 10                         ; CSTORE
0f59: 27                         ; GETCH
0f5a: 06                         ; DUP
0f5b: 0e 0d                      ; CLITERAL 13
0f5d: 16                         ; EQ
0f5e: 5b 0b                      ; BRANCHFZ 11 (0f6a)
0f60: 05                         ; DROP
0f61: 0b 12 0f 00 00             ; CALL Pad (0f12)
0f66: 0e 20                      ; CLITERAL 32
0f68: 19                         ; EMIT
0f69: 0c                         ; RET
0f6a: 06                         ; DUP
0f6b: 0e 09                      ; CLITERAL 9
0f6d: 16                         ; EQ
0f6e: 5b 04                      ; BRANCHFZ 4 (0f73)
0f70: 05                         ; DROP
0f71: 0e 20                      ; CLITERAL 32
0f73: 06                         ; DUP
0f74: 0e 03                      ; CLITERAL 3
0f76: 16                         ; EQ
0f77: 5b 02                      ; BRANCHFZ 2 (0f7a)
0f79: ff                         ; BYE
0f7a: 06                         ; DUP
0f7b: 0e 08                      ; CLITERAL 8
0f7d: 16                         ; EQ
0f7e: 5b 2b                      ; BRANCHFZ 43 (0faa)
0f80: 0b 12 0f 00 00             ; CALL Pad (0f12)
0f85: 0f                         ; CFETCH
0f86: 0e 00                      ; CLITERAL 0
0f88: 17                         ; GT
0f89: 5b 1d                      ; BRANCHFZ 29 (0fa7)
0f8b: 0b 12 0f 00 00             ; CALL Pad (0f12)
0f90: 06                         ; DUP
0f91: 0f                         ; CFETCH
0f92: 2e                         ; DEC
0f93: 04                         ; SWAP
0f94: 10                         ; CSTORE
0f95: 0b 8b 00 00 00             ; CALL >IN (008b)
0f9a: 06                         ; DUP
0f9b: 02                         ; FETCH
0f9c: 2e                         ; DEC
0f9d: 04                         ; SWAP
0f9e: 03                         ; STORE
0f9f: 06                         ; DUP
0fa0: 19                         ; EMIT
0fa1: 0e 20                      ; CLITERAL 32
0fa3: 19                         ; EMIT
0fa4: 19                         ; EMIT
0fa5: 5a 02                      ; BRANCHF 2 (0fa8)
0fa7: 05                         ; DROP
0fa8: 5a 2d                      ; BRANCHF 45 (0fd6)
0faa: 06                         ; DUP
0fab: 0e 20                      ; CLITERAL 32
0fad: 0e 7f                      ; CLITERAL 127
0faf: 0b bc 06 00 00             ; CALL BETWEEN (06bc)
0fb4: 5b 20                      ; BRANCHFZ 32 (0fd5)
0fb6: 06                         ; DUP
0fb7: 19                         ; EMIT
0fb8: 0b 8b 00 00 00             ; CALL >IN (008b)
0fbd: 02                         ; FETCH
0fbe: 10                         ; CSTORE
0fbf: 0b 8b 00 00 00             ; CALL >IN (008b)
0fc4: 06                         ; DUP
0fc5: 02                         ; FETCH
0fc6: 2c                         ; INC
0fc7: 04                         ; SWAP
0fc8: 03                         ; STORE
0fc9: 0b 12 0f 00 00             ; CALL Pad (0f12)
0fce: 06                         ; DUP
0fcf: 0f                         ; CFETCH
0fd0: 2c                         ; INC
0fd1: 04                         ; SWAP
0fd2: 10                         ; CSTORE
0fd3: 5a 02                      ; BRANCHF 2 (0fd6)
0fd5: 05                         ; DROP
0fd6: 5d 87                      ; BRANCHB 135 (0f50)
0fd8: 0c                         ; RET
;
0fd9: 18 9b f2 00 00             ; DICTP strcpy2c (f29b)
0fde: 06                         ; DUP
0fdf: 21                         ; DTOR
0fe0: 0e 00                      ; CLITERAL 0
0fe2: 1a                         ; OVER
0fe3: 10                         ; CSTORE
0fe4: 2c                         ; INC
0fe5: 04                         ; SWAP
0fe6: 06                         ; DUP
0fe7: 0f                         ; CFETCH
0fe8: 06                         ; DUP
0fe9: 5b 11                      ; BRANCHFZ 17 (0ffb)
0feb: 0e 02                      ; CLITERAL 2
0fed: 25                         ; PICK
0fee: 10                         ; CSTORE
0fef: 04                         ; SWAP
0ff0: 2c                         ; INC
0ff1: 04                         ; SWAP
0ff2: 2c                         ; INC
0ff3: 2b                         ; RFETCH
0ff4: 06                         ; DUP
0ff5: 0f                         ; CFETCH
0ff6: 2c                         ; INC
0ff7: 04                         ; SWAP
0ff8: 10                         ; CSTORE
0ff9: 5a 0a                      ; BRANCHF 10 (1004)
0ffb: 21                         ; DTOR
0ffc: 04                         ; SWAP
0ffd: 22                         ; RTOD
0ffe: 04                         ; SWAP
0fff: 10                         ; CSTORE
1000: 05                         ; DROP
1001: 22                         ; RTOD
1002: 05                         ; DROP
1003: 0c                         ; RET
1004: 5d 1f                      ; BRANCHB 31 (0fe6)
1006: 0c                         ; RET
;
1007: 18 85 f2 00 00             ; DICTP Define-Word (f285)
100c: 0b 09 01 00 00             ; CALL LAST (0109)
1011: 1a                         ; OVER
1012: 0b 13 0e 00 00             ; CALL strlen (0e13)
1017: 0e 02                      ; CLITERAL 2
1019: 0e 04                      ; CLITERAL 4
101b: 13                         ; MUL
101c: 0e 03                      ; CLITERAL 3
101e: 11                         ; ADD
101f: 11                         ; ADD
1020: 12                         ; SUB
1021: 06                         ; DUP
1022: 21                         ; DTOR
1023: 21                         ; DTOR
1024: 0b 09 01 00 00             ; CALL LAST (0109)
1029: 2b                         ; RFETCH
102a: 03                         ; STORE
102b: 22                         ; RTOD
102c: 0e 04                      ; CLITERAL 4
102e: 11                         ; ADD
102f: 21                         ; DTOR
1030: 0b fd 00 00 00             ; CALL HERE (00fd)
1035: 2b                         ; RFETCH
1036: 03                         ; STORE
1037: 22                         ; RTOD
1038: 0e 04                      ; CLITERAL 4
103a: 11                         ; ADD
103b: 21                         ; DTOR
103c: 0e 00                      ; CLITERAL 0
103e: 2b                         ; RFETCH
103f: 10                         ; CSTORE
1040: 22                         ; RTOD
1041: 2c                         ; INC
1042: 21                         ; DTOR
1043: 22                         ; RTOD
1044: 0b d9 0f 00 00             ; CALL strcpy2c (0fd9)
1049: 22                         ; RTOD
104a: 0b 4f 00 00 00             ; CALL (LAST) (004f)
104f: 03                         ; STORE
1050: 0c                         ; RET
;
1051: 18 6f f2 00 00             ; DICTP CREATE-NAME (f26f)
1056: 0b 8b 00 00 00             ; CALL >IN (008b)
105b: 02                         ; FETCH
105c: 0b cf 06 00 00             ; CALL skipWS (06cf)
1061: 0b 8b 00 00 00             ; CALL >IN (008b)
1066: 03                         ; STORE
1067: 0b 8b 00 00 00             ; CALL >IN (008b)
106c: 02                         ; FETCH
106d: 0f                         ; CFETCH
106e: 5b 30                      ; BRANCHFZ 48 (109f)
1070: 0b 8b 00 00 00             ; CALL >IN (008b)
1075: 02                         ; FETCH
1076: 0b 52 07 00 00             ; CALL getOneWord (0752)
107b: 0b 8b 00 00 00             ; CALL >IN (008b)
1080: 03                         ; STORE
1081: 06                         ; DUP
1082: 0f                         ; CFETCH
1083: 5b 19                      ; BRANCHFZ 25 (109d)
1085: 0b 07 10 00 00             ; CALL Define-Word (1007)
108a: 0e 18                      ; CLITERAL 24
108c: 0b 15 01 00 00             ; CALL C, (0115)
1091: 0b 09 01 00 00             ; CALL LAST (0109)
1096: 0b 2d 01 00 00             ; CALL , (012d)
109b: 5a 03                      ; BRANCHF 3 (109f)
109d: 05                         ; DROP
109e: fe                         ; RESET
109f: 0c                         ; RET
;
10a0: 18 63 f2 00 00             ; DICTP : (f263)
10a5: 0b 51 10 00 00             ; CALL CREATE-NAME (1051)
10aa: 0b 6d 00 00 00             ; CALL STATE (006d)
10af: 0b e2 03 00 00             ; CALL ON (03e2)
10b4: 0c                         ; RET
;
10b5: 18 51 f2 00 00             ; DICTP :NONAME (f251)
10ba: 0b fd 00 00 00             ; CALL HERE (00fd)
10bf: 0b 6d 00 00 00             ; CALL STATE (006d)
10c4: 0b e2 03 00 00             ; CALL ON (03e2)
10c9: 0c                         ; RET
;
10ca: 18 45 f2 00 00             ; DICTP ; (f245)
10cf: 0b d4 01 00 00             ; CALL RET (01d4)
10d4: 0b 6d 00 00 00             ; CALL STATE (006d)
10d9: 0b ec 03 00 00             ; CALL OFF (03ec)
10de: 0c                         ; RET
;
10df: 18 30 f2 00 00             ; DICTP ForgetLast (f230)
10e4: 0b 09 01 00 00             ; CALL LAST (0109)
10e9: 0e 04                      ; CLITERAL 4
10eb: 11                         ; ADD
10ec: 02                         ; FETCH
10ed: 0b 40 00 00 00             ; CALL (HERE) (0040)
10f2: 03                         ; STORE
10f3: 0b 09 01 00 00             ; CALL LAST (0109)
10f8: 02                         ; FETCH
10f9: 0b 4f 00 00 00             ; CALL (LAST) (004f)
10fe: 03                         ; STORE
10ff: 0c                         ; RET
;
1100: 18 1b f2 00 00             ; DICTP resetState (f21b)
1105: 0b f6 03 00 00             ; CALL ?COMPILING (03f6)
110a: 5b 06                      ; BRANCHFZ 6 (1111)
110c: 0b df 10 00 00             ; CALL ForgetLast (10df)
1111: 0b 6d 00 00 00             ; CALL STATE (006d)
1116: 0b ec 03 00 00             ; CALL OFF (03ec)
111b: 0b b8 03 00 00             ; CALL DECIMAL (03b8)
1120: 0b b8 00 00 00             ; CALL INPUT-FP (00b8)
1125: 02                         ; FETCH
1126: 0b 24 05 00 00             ; CALL ?DUP (0524)
112b: 5b 0a                      ; BRANCHFZ 10 (1136)
112d: 20                         ; FCLOSE
112e: 0e 00                      ; CLITERAL 0
1130: 0b b8 00 00 00             ; CALL INPUT-FP (00b8)
1135: 03                         ; STORE
1136: 0c                         ; RET
;
1137: 18 0b f2 00 00             ; DICTP ALLOT (f20b)
113c: 0b fd 00 00 00             ; CALL HERE (00fd)
1141: 11                         ; ADD
1142: 0b 40 00 00 00             ; CALL (HERE) (0040)
1147: 03                         ; STORE
1148: 0c                         ; RET
;
1149: 18 ff f1 00 00             ; DICTP ? (f1ff)
114e: 02                         ; FETCH
114f: 0b 3e 0a 00 00             ; CALL . (0a3e)
1154: 0c                         ; RET
;
1155: 18 f2 f1 00 00             ; DICTP C? (f1f2)
115a: 0f                         ; CFETCH
115b: 0b 3e 0a 00 00             ; CALL . (0a3e)
1160: 0c                         ; RET
;
1161: 18 e3 f1 00 00             ; DICTP FREE (f1e3)
1166: 0b 09 01 00 00             ; CALL LAST (0109)
116b: 0b fd 00 00 00             ; CALL HERE (00fd)
1170: 12                         ; SUB
1171: 0c                         ; RET
;
1172: 18 d3 f1 00 00             ; DICTP .FREE (f1d3)
1177: 0b 61 11 00 00             ; CALL FREE (1161)
117c: 0b 24 0a 00 00             ; CALL (.) (0a24)
1181: 07 0c 20 62 79 74 65 73 20 66 72 65 65 2e 00 ; SLITERAL (1182) [ bytes free.]
1190: 0b 37 06 00 00             ; CALL CT (0637)
1195: 0c                         ; RET
;
1196: 18 c0 f1 00 00             ; DICTP mainLoop (f1c0)
119b: 0b 00 11 00 00             ; CALL resetState (1100)
11a0: 0b f6 03 00 00             ; CALL ?COMPILING (03f6)
11a5: 2a                         ; NOT
11a6: 5b 11                      ; BRANCHFZ 17 (11b8)
11a8: 07 03 20 4f 4b 00          ; SLITERAL (11a9) [ OK]
11ae: 0b 37 06 00 00             ; CALL CT (0637)
11b3: 0b 80 0b 00 00             ; CALL .S (0b80)
11b8: 0e 0d                      ; CLITERAL 13
11ba: 19                         ; EMIT
11bb: 0e 0a                      ; CLITERAL 10
11bd: 19                         ; EMIT
11be: 0b 3b 0f 00 00             ; CALL getLine (0f3b)
11c3: 2c                         ; INC
11c4: 0b 8b 00 00 00             ; CALL >IN (008b)
11c9: 03                         ; STORE
11ca: 0b d7 0e 00 00             ; CALL executeInput (0ed7)
11cf: 0e 20                      ; CLITERAL 32
11d1: 19                         ; EMIT
11d2: 5d 33                      ; BRANCHB 51 (11a0)
11d4: 0c                         ; RET
;
11d5: 18 b1 f1 00 00             ; DICTP main (f1b1)
11da: 0b 6d 00 00 00             ; CALL STATE (006d)
11df: 02                         ; FETCH
11e0: 0e 63                      ; CLITERAL 99
11e2: 16                         ; EQ
11e3: 5b 19                      ; BRANCHFZ 25 (11fd)
11e5: 0b 6d 00 00 00             ; CALL STATE (006d)
11ea: 0b ec 03 00 00             ; CALL OFF (03ec)
11ef: 07 06 48 65 6c 6c 6f 2e 00 ; SLITERAL (11f0) [Hello.]
11f8: 0b 37 06 00 00             ; CALL CT (0637)
11fd: 0b 96 11 00 00             ; CALL mainLoop (1196)
1202: 0c                         ; RET
;
1203: 18 9a f1 00 00             ; DICTP file-getLine (f19a)
1208: 0b 12 0f 00 00             ; CALL Pad (0f12)
120d: 04                         ; SWAP
120e: 0e c8                      ; CLITERAL 200
1210: 04                         ; SWAP
1211: 1e                         ; FREADLINE
1212: 0b 12 0f 00 00             ; CALL Pad (0f12)
1217: 04                         ; SWAP
1218: 0c                         ; RET
;
1219: 18 8b f1 00 00             ; DICTP load (f18b)
121e: 0e 00                      ; CLITERAL 0
1220: 0e 00                      ; CLITERAL 0
1222: 1c                         ; FOPEN
1223: 2a                         ; NOT
1224: 5b 1b                      ; BRANCHFZ 27 (1240)
1226: 07 11 43 61 6e 6e 6f 74 20 6f 70 65 6e 20 66 69 6c 65 2e 00 ; SLITERAL (1227) [Cannot open file.]
123a: 0b 37 06 00 00             ; CALL CT (0637)
123f: 0c                         ; RET
1240: 0b b8 00 00 00             ; CALL INPUT-FP (00b8)
1245: 03                         ; STORE
1246: 0b b8 00 00 00             ; CALL INPUT-FP (00b8)
124b: 02                         ; FETCH
124c: 0b 03 12 00 00             ; CALL file-getLine (1203)
1251: 5b 0f                      ; BRANCHFZ 15 (1261)
1253: 2c                         ; INC
1254: 0b 8b 00 00 00             ; CALL >IN (008b)
1259: 03                         ; STORE
125a: 0b d7 0e 00 00             ; CALL executeInput (0ed7)
125f: 5a 12                      ; BRANCHF 18 (1272)
1261: 05                         ; DROP
1262: 0b b8 00 00 00             ; CALL INPUT-FP (00b8)
1267: 02                         ; FETCH
1268: 20                         ; FCLOSE
1269: 0e 00                      ; CLITERAL 0
126b: 0b b8 00 00 00             ; CALL INPUT-FP (00b8)
1270: 03                         ; STORE
1271: 0c                         ; RET
1272: 5d 2d                      ; BRANCHB 45 (1246)
1274: 0c                         ; RET
;
1275: 18 77 f1 00 00             ; DICTP STR.EMPTY (f177)
127a: 0e 00                      ; CLITERAL 0
127c: 1a                         ; OVER
127d: 03                         ; STORE
127e: 0c                         ; RET
;
127f: 18 65 f1 00 00             ; DICTP STR.LEN (f165)
1284: 06                         ; DUP
1285: 0f                         ; CFETCH
1286: 0c                         ; RET
;
1287: 18 52 f1 00 00             ; DICTP STR.CATC (f152)
128c: 1a                         ; OVER
128d: 06                         ; DUP
128e: 06                         ; DUP
128f: 0f                         ; CFETCH
1290: 2c                         ; INC
1291: 04                         ; SWAP
1292: 10                         ; CSTORE
1293: 06                         ; DUP
1294: 0f                         ; CFETCH
1295: 11                         ; ADD
1296: 0e 00                      ; CLITERAL 0
1298: 1a                         ; OVER
1299: 2c                         ; INC
129a: 10                         ; CSTORE
129b: 10                         ; CSTORE
129c: 0c                         ; RET
;
129d: 18 3b f1 00 00             ; DICTP STR.NULLTERM (f13b)
12a2: 06                         ; DUP
12a3: 06                         ; DUP
12a4: 0f                         ; CFETCH
12a5: 11                         ; ADD
12a6: 2c                         ; INC
12a7: 0e 00                      ; CLITERAL 0
12a9: 04                         ; SWAP
12aa: 10                         ; CSTORE
12ab: 0c                         ; RET
;
12ac: 18 2e f1 00 00             ; DICTP I" (f12e)
12b1: 0b fd 00 00 00             ; CALL HERE (00fd)
12b6: 0e 64                      ; CLITERAL 100
12b8: 11                         ; ADD
12b9: 0e 00                      ; CLITERAL 0
12bb: 1a                         ; OVER
12bc: 03                         ; STORE
12bd: 0b 8b 00 00 00             ; CALL >IN (008b)
12c2: 02                         ; FETCH
12c3: 0f                         ; CFETCH
12c4: 06                         ; DUP
12c5: 2a                         ; NOT
12c6: 5b 1d                      ; BRANCHFZ 29 (12e4)
12c8: 07 10 6d 69 73 73 69 6e 67 20 63 6c 6f 73 69 6e 67 20 00 ; SLITERAL (12c9) [missing closing ]
12db: 0b 37 06 00 00             ; CALL CT (0637)
12e0: 0e 22                      ; CLITERAL 34
12e2: 19                         ; EMIT
12e3: fe                         ; RESET
12e4: 0b 8b 00 00 00             ; CALL >IN (008b)
12e9: 06                         ; DUP
12ea: 02                         ; FETCH
12eb: 2c                         ; INC
12ec: 04                         ; SWAP
12ed: 03                         ; STORE
12ee: 06                         ; DUP
12ef: 0e 22                      ; CLITERAL 34
12f1: 16                         ; EQ
12f2: 5b 03                      ; BRANCHFZ 3 (12f6)
12f4: 05                         ; DROP
12f5: 0c                         ; RET
12f6: 0b 87 12 00 00             ; CALL STR.CATC (1287)
12fb: 5d 3f                      ; BRANCHB 63 (12bd)
12fd: 0c                         ; RET
;
12fe: 18 22 f1 00 00             ; DICTP " (f122)
1303: 0b f6 03 00 00             ; CALL ?COMPILING (03f6)
1308: 2a                         ; NOT
1309: 5b 07                      ; BRANCHFZ 7 (1311)
130b: 0b ac 12 00 00             ; CALL I" (12ac)
1310: 0c                         ; RET
1311: 0b 93 01 00 00             ; CALL SLITERAL (0193)
1316: 0b fd 00 00 00             ; CALL HERE (00fd)
131b: 0e 00                      ; CLITERAL 0
131d: 0b 15 01 00 00             ; CALL C, (0115)
1322: 0b 8b 00 00 00             ; CALL >IN (008b)
1327: 02                         ; FETCH
1328: 0f                         ; CFETCH
1329: 06                         ; DUP
132a: 2a                         ; NOT
132b: 5b 29                      ; BRANCHFZ 41 (1355)
132d: 05                         ; DROP
132e: 2e                         ; DEC
132f: 0b 40 00 00 00             ; CALL (HERE) (0040)
1334: 03                         ; STORE
1335: 07 11 6d 69 73 73 69 6e 67 20 63 6c 6f 73 69 6e 67 20 27 00 ; SLITERAL (1336) [missing closing ']
1349: 0b 37 06 00 00             ; CALL CT (0637)
134e: 0e 22                      ; CLITERAL 34
1350: 19                         ; EMIT
1351: 0e 27                      ; CLITERAL 39
1353: 19                         ; EMIT
1354: fe                         ; RESET
1355: 0b 8b 00 00 00             ; CALL >IN (008b)
135a: 06                         ; DUP
135b: 02                         ; FETCH
135c: 2c                         ; INC
135d: 04                         ; SWAP
135e: 03                         ; STORE
135f: 06                         ; DUP
1360: 0e 22                      ; CLITERAL 34
1362: 16                         ; EQ
1363: 5b 14                      ; BRANCHFZ 20 (1378)
1365: 05                         ; DROP
1366: 0b fd 00 00 00             ; CALL HERE (00fd)
136b: 0e 00                      ; CLITERAL 0
136d: 0b 15 01 00 00             ; CALL C, (0115)
1372: 1a                         ; OVER
1373: 12                         ; SUB
1374: 2e                         ; DEC
1375: 04                         ; SWAP
1376: 10                         ; CSTORE
1377: 0c                         ; RET
1378: 0b 15 01 00 00             ; CALL C, (0115)
137d: 5d 5c                      ; BRANCHB 92 (1322)
137f: 0c                         ; RET
;
1380: 18 15 f1 00 00             ; DICTP ll (f115)
1385: 07 08 6c 6f 61 64 73 2e 66 73 00 ; SLITERAL (1386) [loads.fs]
1390: 0b 19 12 00 00             ; CALL load (1219)
1395: 0c                         ; RET
;
1396: 18 02 f1 00 00             ; DICTP sys-info (f102)
139b: 0b dd 0b 00 00             ; CALL .(MEM_SZ) (0bdd)
13a0: 0e 2c                      ; CLITERAL 44
13a2: 19                         ; EMIT
13a3: 0e 20                      ; CLITERAL 32
13a5: 19                         ; EMIT
13a6: 0b 16 0c 00 00             ; CALL .(HERE) (0c16)
13ab: 0e 2c                      ; CLITERAL 44
13ad: 19                         ; EMIT
13ae: 0e 20                      ; CLITERAL 32
13b0: 19                         ; EMIT
13b1: 0b 4d 0c 00 00             ; CALL .(LAST) (0c4d)
13b6: 0e 2c                      ; CLITERAL 44
13b8: 19                         ; EMIT
13b9: 0e 20                      ; CLITERAL 32
13bb: 19                         ; EMIT
13bc: 0b 72 11 00 00             ; CALL .FREE (1172)
13c1: 0e 0d                      ; CLITERAL 13
13c3: 19                         ; EMIT
13c4: 0e 0a                      ; CLITERAL 10
13c6: 19                         ; EMIT
13c7: 0c                         ; RET
;
13c8: 18 ef f0 00 00             ; DICTP VARIABLE (f0ef)
13cd: 0b 51 10 00 00             ; CALL CREATE-NAME (1051)
13d2: 0b fd 00 00 00             ; CALL HERE (00fd)
13d7: 0e 02                      ; CLITERAL 2
13d9: 11                         ; ADD
13da: 0e 04                      ; CLITERAL 4
13dc: 11                         ; ADD
13dd: 0b 63 01 00 00             ; CALL LITERAL (0163)
13e2: 0b 2d 01 00 00             ; CALL , (012d)
13e7: 0b d4 01 00 00             ; CALL RET (01d4)
13ec: 0e 00                      ; CLITERAL 0
13ee: 0b 2d 01 00 00             ; CALL , (012d)
13f3: 0c                         ; RET
;
; End of code, Dictionary:
;
f0ef: 02 f1 00 00                ; VARIABLE - (next: f102 sys-info)
f0f3: c8 13 00 00 00             ; XT=13c8, flags=00
f0f8: 08 56 41 52 49 41 42 4c 45 00 ; 8, VARIABLE
;
f102: 15 f1 00 00                ; sys-info - (next: f115 ll)
f106: 96 13 00 00 00             ; XT=1396, flags=00
f10b: 08 73 79 73 2d 69 6e 66 6f 00 ; 8, sys-info
;
f115: 22 f1 00 00                ; ll - (next: f122 ")
f119: 80 13 00 00 00             ; XT=1380, flags=00
f11e: 02 6c 6c 00                ; 2, ll
;
f122: 2e f1 00 00                ; " - (next: f12e I")
f126: fe 12 00 00 01             ; XT=12fe, flags=01
f12b: 01 22 00                   ; 1, "
;
f12e: 3b f1 00 00                ; I" - (next: f13b STR.NULLTERM)
f132: ac 12 00 00 00             ; XT=12ac, flags=00
f137: 02 49 22 00                ; 2, I"
;
f13b: 52 f1 00 00                ; STR.NULLTERM - (next: f152 STR.CATC)
f13f: 9d 12 00 00 00             ; XT=129d, flags=00
f144: 0c 53 54 52 2e 4e 55 4c 4c 54 45 52 4d 00 ; 12, STR.NULLTERM
;
f152: 65 f1 00 00                ; STR.CATC - (next: f165 STR.LEN)
f156: 87 12 00 00 00             ; XT=1287, flags=00
f15b: 08 53 54 52 2e 43 41 54 43 00 ; 8, STR.CATC
;
f165: 77 f1 00 00                ; STR.LEN - (next: f177 STR.EMPTY)
f169: 7f 12 00 00 02             ; XT=127f, flags=02
f16e: 07 53 54 52 2e 4c 45 4e 00 ; 7, STR.LEN
;
f177: 8b f1 00 00                ; STR.EMPTY - (next: f18b load)
f17b: 75 12 00 00 02             ; XT=1275, flags=02
f180: 09 53 54 52 2e 45 4d 50 54 59 00 ; 9, STR.EMPTY
;
f18b: 9a f1 00 00                ; load - (next: f19a file-getLine)
f18f: 19 12 00 00 00             ; XT=1219, flags=00
f194: 04 6c 6f 61 64 00          ; 4, load
;
f19a: b1 f1 00 00                ; file-getLine - (next: f1b1 main)
f19e: 03 12 00 00 00             ; XT=1203, flags=00
f1a3: 0c 66 69 6c 65 2d 67 65 74 4c 69 6e 65 00 ; 12, file-getLine
;
f1b1: c0 f1 00 00                ; main - (next: f1c0 mainLoop)
f1b5: d5 11 00 00 00             ; XT=11d5, flags=00
f1ba: 04 6d 61 69 6e 00          ; 4, main
;
f1c0: d3 f1 00 00                ; mainLoop - (next: f1d3 .FREE)
f1c4: 96 11 00 00 00             ; XT=1196, flags=00
f1c9: 08 6d 61 69 6e 4c 6f 6f 70 00 ; 8, mainLoop
;
f1d3: e3 f1 00 00                ; .FREE - (next: f1e3 FREE)
f1d7: 72 11 00 00 00             ; XT=1172, flags=00
f1dc: 05 2e 46 52 45 45 00       ; 5, .FREE
;
f1e3: f2 f1 00 00                ; FREE - (next: f1f2 C?)
f1e7: 61 11 00 00 00             ; XT=1161, flags=00
f1ec: 04 46 52 45 45 00          ; 4, FREE
;
f1f2: ff f1 00 00                ; C? - (next: f1ff ?)
f1f6: 55 11 00 00 00             ; XT=1155, flags=00
f1fb: 02 43 3f 00                ; 2, C?
;
f1ff: 0b f2 00 00                ; ? - (next: f20b ALLOT)
f203: 49 11 00 00 00             ; XT=1149, flags=00
f208: 01 3f 00                   ; 1, ?
;
f20b: 1b f2 00 00                ; ALLOT - (next: f21b resetState)
f20f: 37 11 00 00 00             ; XT=1137, flags=00
f214: 05 41 4c 4c 4f 54 00       ; 5, ALLOT
;
f21b: 30 f2 00 00                ; resetState - (next: f230 ForgetLast)
f21f: 00 11 00 00 00             ; XT=1100, flags=00
f224: 0a 72 65 73 65 74 53 74 61 74 65 00 ; 10, resetState
;
f230: 45 f2 00 00                ; ForgetLast - (next: f245 ;)
f234: df 10 00 00 00             ; XT=10df, flags=00
f239: 0a 46 6f 72 67 65 74 4c 61 73 74 00 ; 10, ForgetLast
;
f245: 51 f2 00 00                ; ; - (next: f251 :NONAME)
f249: ca 10 00 00 01             ; XT=10ca, flags=01
f24e: 01 3b 00                   ; 1, ;
;
f251: 63 f2 00 00                ; :NONAME - (next: f263 :)
f255: b5 10 00 00 00             ; XT=10b5, flags=00
f25a: 07 3a 4e 4f 4e 41 4d 45 00 ; 7, :NONAME
;
f263: 6f f2 00 00                ; : - (next: f26f CREATE-NAME)
f267: a0 10 00 00 00             ; XT=10a0, flags=00
f26c: 01 3a 00                   ; 1, :
;
f26f: 85 f2 00 00                ; CREATE-NAME - (next: f285 Define-Word)
f273: 51 10 00 00 00             ; XT=1051, flags=00
f278: 0b 43 52 45 41 54 45 2d 4e 41 4d 45 00 ; 11, CREATE-NAME
;
f285: 9b f2 00 00                ; Define-Word - (next: f29b strcpy2c)
f289: 07 10 00 00 00             ; XT=1007, flags=00
f28e: 0b 44 65 66 69 6e 65 2d 57 6f 72 64 00 ; 11, Define-Word
;
f29b: ae f2 00 00                ; strcpy2c - (next: f2ae getLine)
f29f: d9 0f 00 00 00             ; XT=0fd9, flags=00
f2a4: 08 73 74 72 63 70 79 32 63 00 ; 8, strcpy2c
;
f2ae: c0 f2 00 00                ; getLine - (next: f2c0 Pad)
f2b2: 3b 0f 00 00 00             ; XT=0f3b, flags=00
f2b7: 07 67 65 74 4c 69 6e 65 00 ; 7, getLine
;
f2c0: ce f2 00 00                ; Pad - (next: f2ce executeInput)
f2c4: 12 0f 00 00 00             ; XT=0f12, flags=00
f2c9: 03 50 61 64 00             ; 3, Pad
;
f2ce: e5 f2 00 00                ; executeInput - (next: f2e5 executeWord)
f2d2: d7 0e 00 00 00             ; XT=0ed7, flags=00
f2d7: 0c 65 78 65 63 75 74 65 49 6e 70 75 74 00 ; 12, executeInput
;
f2e5: fb f2 00 00                ; executeWord - (next: f2fb [COMPILE])
f2e9: 5b 0e 00 00 00             ; XT=0e5b, flags=00
f2ee: 0b 65 78 65 63 75 74 65 57 6f 72 64 00 ; 11, executeWord
;
f2fb: 0f f3 00 00                ; [COMPILE] - (next: f30f cstr,)
f2ff: 3d 0e 00 00 00             ; XT=0e3d, flags=00
f304: 09 5b 43 4f 4d 50 49 4c 45 5d 00 ; 9, [COMPILE]
;
f30f: 1f f3 00 00                ; cstr, - (next: f31f strlen)
f313: 2c 0e 00 00 00             ; XT=0e2c, flags=00
f318: 05 63 73 74 72 2c 00       ; 5, cstr,
;
f31f: 30 f3 00 00                ; strlen - (next: f330 Copy.INLINE)
f323: 13 0e 00 00 00             ; XT=0e13, flags=00
f328: 06 73 74 72 6c 65 6e 00    ; 6, strlen
;
f330: 46 f3 00 00                ; Copy.INLINE - (next: f346 DOES>)
f334: f7 0d 00 00 00             ; XT=0df7, flags=00
f339: 0b 43 6f 70 79 2e 49 4e 4c 49 4e 45 00 ; 11, Copy.INLINE
;
f346: 56 f3 00 00                ; DOES> - (next: f356 (inline))
f34a: e2 0d 00 00 00             ; XT=0de2, flags=00
f34f: 05 44 4f 45 53 3e 00       ; 5, DOES>
;
f356: 69 f3 00 00                ; (inline) - (next: f369 find.ret)
f35a: c7 0d 00 00 00             ; XT=0dc7, flags=00
f35f: 08 28 69 6e 6c 69 6e 65 29 00 ; 8, (inline)
;
f369: 7c f3 00 00                ; find.ret - (next: f37c EXECUTE)
f36d: b6 0d 00 00 00             ; XT=0db6, flags=00
f372: 08 66 69 6e 64 2e 72 65 74 00 ; 8, find.ret
;
f37c: 8e f3 00 00                ; EXECUTE - (next: f38e .lastx)
f380: ad 0d 00 00 00             ; XT=0dad, flags=00
f385: 07 45 58 45 43 55 54 45 00 ; 7, EXECUTE
;
f38e: 9f f3 00 00                ; .lastx - (next: f39f NUM-WORDS)
f392: 8e 0d 00 00 00             ; XT=0d8e, flags=00
f397: 06 2e 6c 61 73 74 78 00    ; 6, .lastx
;
f39f: b3 f3 00 00                ; NUM-WORDS - (next: f3b3 WORDSV)
f3a3: 6c 0d 00 00 00             ; XT=0d6c, flags=00
f3a8: 09 4e 55 4d 2d 57 4f 52 44 53 00 ; 9, NUM-WORDS
;
f3b3: c4 f3 00 00                ; WORDSV - (next: f3c4 .WORD-LONG)
f3b7: 42 0d 00 00 00             ; XT=0d42, flags=00
f3bc: 06 57 4f 52 44 53 56 00    ; 6, WORDSV
;
f3c4: d9 f3 00 00                ; .WORD-LONG - (next: f3d9 WORDS)
f3c8: b8 0c 00 00 00             ; XT=0cb8, flags=00
f3cd: 0a 2e 57 4f 52 44 2d 4c 4f 4e 47 00 ; 10, .WORD-LONG
;
f3d9: e9 f3 00 00                ; WORDS - (next: f3e9 .WORD-SHORT)
f3dd: 99 0c 00 00 00             ; XT=0c99, flags=00
f3e2: 05 57 4f 52 44 53 00       ; 5, WORDS
;
f3e9: ff f3 00 00                ; .WORD-SHORT - (next: f3ff .(LAST))
f3ed: 84 0c 00 00 00             ; XT=0c84, flags=00
f3f2: 0b 2e 57 4f 52 44 2d 53 48 4f 52 54 00 ; 11, .WORD-SHORT
;
f3ff: 11 f4 00 00                ; .(LAST) - (next: f411 .(HERE))
f403: 4d 0c 00 00 00             ; XT=0c4d, flags=00
f408: 07 2e 28 4c 41 53 54 29 00 ; 7, .(LAST)
;
f411: 23 f4 00 00                ; .(HERE) - (next: f423 .(MEM_SZ))
f415: 16 0c 00 00 00             ; XT=0c16, flags=00
f41a: 07 2e 28 48 45 52 45 29 00 ; 7, .(HERE)
;
f423: 37 f4 00 00                ; .(MEM_SZ) - (next: f437 .S)
f427: dd 0b 00 00 00             ; XT=0bdd, flags=00
f42c: 09 2e 28 4d 45 4d 5f 53 5a 29 00 ; 9, .(MEM_SZ)
;
f437: 44 f4 00 00                ; .S - (next: f444 MAX)
f43b: 80 0b 00 00 00             ; XT=0b80, flags=00
f440: 02 2e 53 00                ; 2, .S
;
f444: 52 f4 00 00                ; MAX - (next: f452 MIN)
f448: 73 0b 00 00 00             ; XT=0b73, flags=00
f44d: 03 4d 41 58 00             ; 3, MAX
;
f452: 60 f4 00 00                ; MIN - (next: f460 BINARY.)
f456: 66 0b 00 00 00             ; XT=0b66, flags=00
f45b: 03 4d 49 4e 00             ; 3, MIN
;
f460: 72 f4 00 00                ; BINARY. - (next: f472 DECIMAL.3)
f464: 49 0b 00 00 00             ; XT=0b49, flags=00
f469: 07 42 49 4e 41 52 59 2e 00 ; 7, BINARY.
;
f472: 86 f4 00 00                ; DECIMAL.3 - (next: f486 DECIMAL.)
f476: 2c 0b 00 00 00             ; XT=0b2c, flags=00
f47b: 09 44 45 43 49 4d 41 4c 2e 33 00 ; 9, DECIMAL.3
;
f486: 99 f4 00 00                ; DECIMAL. - (next: f499 HEX.4)
f48a: 0f 0b 00 00 00             ; XT=0b0f, flags=00
f48f: 08 44 45 43 49 4d 41 4c 2e 00 ; 8, DECIMAL.
;
f499: a9 f4 00 00                ; HEX.4 - (next: f4a9 HEX.2)
f49d: f2 0a 00 00 00             ; XT=0af2, flags=00
f4a2: 05 48 45 58 2e 34 00       ; 5, HEX.4
;
f4a9: b9 f4 00 00                ; HEX.2 - (next: f4b9 HEX.)
f4ad: d5 0a 00 00 00             ; XT=0ad5, flags=00
f4b2: 05 48 45 58 2e 32 00       ; 5, HEX.2
;
f4b9: c8 f4 00 00                ; HEX. - (next: f4c8 .4)
f4bd: b8 0a 00 00 00             ; XT=0ab8, flags=00
f4c2: 04 48 45 58 2e 00          ; 4, HEX.
;
f4c8: d5 f4 00 00                ; .4 - (next: f4d5 .3)
f4cc: 8f 0a 00 00 00             ; XT=0a8f, flags=00
f4d1: 02 2e 34 00                ; 2, .4
;
f4d5: e2 f4 00 00                ; .3 - (next: f4e2 .2)
f4d9: 6b 0a 00 00 00             ; XT=0a6b, flags=00
f4de: 02 2e 33 00                ; 2, .3
;
f4e2: ef f4 00 00                ; .2 - (next: f4ef .)
f4e6: 4c 0a 00 00 00             ; XT=0a4c, flags=00
f4eb: 02 2e 32 00                ; 2, .2
;
f4ef: fb f4 00 00                ; . - (next: f4fb (.))
f4f3: 3e 0a 00 00 00             ; XT=0a3e, flags=00
f4f8: 01 2e 00                   ; 1, .
;
f4fb: 09 f5 00 00                ; (.) - (next: f509 #P)
f4ff: 24 0a 00 00 00             ; XT=0a24, flags=00
f504: 03 28 2e 29 00             ; 3, (.)
;
f509: 16 f5 00 00                ; #P - (next: f516 #P-)
f50d: 13 0a 00 00 00             ; XT=0a13, flags=00
f512: 02 23 50 00                ; 2, #P
;
f516: 24 f5 00 00                ; #P- - (next: f524 #>)
f51a: 01 0a 00 00 00             ; XT=0a01, flags=00
f51f: 03 23 50 2d 00             ; 3, #P-
;
f524: 31 f5 00 00                ; #> - (next: f531 #S)
f528: fb 09 00 00 00             ; XT=09fb, flags=00
f52d: 02 23 3e 00                ; 2, #>
;
f531: 3e f5 00 00                ; #S - (next: f53e #)
f535: ec 09 00 00 00             ; XT=09ec, flags=00
f53a: 02 23 53 00                ; 2, #S
;
f53e: 4a f5 00 00                ; # - (next: f54a <#)
f542: c7 09 00 00 00             ; XT=09c7, flags=00
f547: 01 23 00                   ; 1, #
;
f54a: 57 f5 00 00                ; <# - (next: f557 isNumber?)
f54e: 95 09 00 00 00             ; XT=0995, flags=00
f553: 02 3c 23 00                ; 2, <#
;
f557: 6b f5 00 00                ; isNumber? - (next: f56b parse-char)
f55b: e1 08 00 00 00             ; XT=08e1, flags=00
f560: 09 69 73 4e 75 6d 62 65 72 3f 00 ; 9, isNumber?
;
f56b: 80 f5 00 00                ; parse-char - (next: f580 ABS)
f56f: c1 08 00 00 00             ; XT=08c1, flags=00
f574: 0a 70 61 72 73 65 2d 63 68 61 72 00 ; 10, parse-char
;
f580: 8e f5 00 00                ; ABS - (next: f58e NEGATE)
f584: b0 08 00 00 00             ; XT=08b0, flags=00
f589: 03 41 42 53 00             ; 3, ABS
;
f58e: 9f f5 00 00                ; NEGATE - (next: f59f is-num-char?)
f592: a6 08 00 00 00             ; XT=08a6, flags=00
f597: 06 4e 45 47 41 54 45 00    ; 6, NEGATE
;
f59f: b6 f5 00 00                ; is-num-char? - (next: f5b6 findInDict)
f5a3: 6a 08 00 00 00             ; XT=086a, flags=00
f5a8: 0c 69 73 2d 6e 75 6d 2d 63 68 61 72 3f 00 ; 12, is-num-char?
;
f5b6: cb f5 00 00                ; findInDict - (next: f5cb DICT.GetINLINE)
f5ba: 31 08 00 00 00             ; XT=0831, flags=00
f5bf: 0a 66 69 6e 64 49 6e 44 69 63 74 00 ; 10, findInDict
;
f5cb: e4 f5 00 00                ; DICT.GetINLINE - (next: f5e4 DICT.GetIMMEDIATE)
f5cf: 21 08 00 00 00             ; XT=0821, flags=00
f5d4: 0e 44 49 43 54 2e 47 65 74 49 4e 4c 49 4e 45 00 ; 14, DICT.GetINLINE
;
f5e4: 00 f6 00 00                ; DICT.GetIMMEDIATE - (next: f600 FLAGS.ISINLINE?)
f5e8: 11 08 00 00 00             ; XT=0811, flags=00
f5ed: 11 44 49 43 54 2e 47 65 74 49 4d 4d 45 44 49 41 54 45 00 ; 17, DICT.GetIMMEDIATE
;
f600: 1a f6 00 00                ; FLAGS.ISINLINE? - (next: f61a FLAGS.ISIMMEDIATE?)
f604: 08 08 00 00 00             ; XT=0808, flags=00
f609: 0f 46 4c 41 47 53 2e 49 53 49 4e 4c 49 4e 45 3f 00 ; 15, FLAGS.ISINLINE?
;
f61a: 37 f6 00 00                ; FLAGS.ISIMMEDIATE? - (next: f637 XT.GetDICTP)
f61e: ff 07 00 00 00             ; XT=07ff, flags=00
f623: 12 46 4c 41 47 53 2e 49 53 49 4d 4d 45 44 49 41 54 45 3f 00 ; 18, FLAGS.ISIMMEDIATE?
;
f637: 4d f6 00 00                ; XT.GetDICTP - (next: f64d DICTP>NAME)
f63b: ec 07 00 00 00             ; XT=07ec, flags=00
f640: 0b 58 54 2e 47 65 74 44 49 43 54 50 00 ; 11, XT.GetDICTP
;
f64d: 62 f6 00 00                ; DICTP>NAME - (next: f662 DICT.GetFLAGS)
f651: df 07 00 00 00             ; XT=07df, flags=00
f656: 0a 44 49 43 54 50 3e 4e 41 4d 45 00 ; 10, DICTP>NAME
;
f662: 7a f6 00 00                ; DICT.GetFLAGS - (next: f67a DICT.GetXT)
f666: d3 07 00 00 00             ; XT=07d3, flags=00
f66b: 0d 44 49 43 54 2e 47 65 74 46 4c 41 47 53 00 ; 13, DICT.GetFLAGS
;
f67a: 8f f6 00 00                ; DICT.GetXT - (next: f68f NAME>DICT)
f67e: c7 07 00 00 00             ; XT=07c7, flags=00
f683: 0a 44 49 43 54 2e 47 65 74 58 54 00 ; 10, DICT.GetXT
;
f68f: a3 f6 00 00                ; NAME>DICT - (next: f6a3 FLAGS>DICT)
f693: ba 07 00 00 00             ; XT=07ba, flags=00
f698: 09 4e 41 4d 45 3e 44 49 43 54 00 ; 9, NAME>DICT
;
f6a3: b8 f6 00 00                ; FLAGS>DICT - (next: f6b8 XT>DICT)
f6a7: ae 07 00 00 00             ; XT=07ae, flags=00
f6ac: 0a 46 4c 41 47 53 3e 44 49 43 54 00 ; 10, FLAGS>DICT
;
f6b8: ca f6 00 00                ; XT>DICT - (next: f6ca NEXT>DICT)
f6bc: a5 07 00 00 00             ; XT=07a5, flags=00
f6c1: 07 58 54 3e 44 49 43 54 00 ; 7, XT>DICT
;
f6ca: de f6 00 00                ; NEXT>DICT - (next: f6de DICT>NAME)
f6ce: 9f 07 00 00 00             ; XT=079f, flags=00
f6d3: 09 4e 45 58 54 3e 44 49 43 54 00 ; 9, NEXT>DICT
;
f6de: f2 f6 00 00                ; DICT>NAME - (next: f6f2 DICT>FLAGS)
f6e2: 93 07 00 00 00             ; XT=0793, flags=00
f6e7: 09 44 49 43 54 3e 4e 41 4d 45 00 ; 9, DICT>NAME
;
f6f2: 07 f7 00 00                ; DICT>FLAGS - (next: f707 DICT>XT)
f6f6: 87 07 00 00 00             ; XT=0787, flags=00
f6fb: 0a 44 49 43 54 3e 46 4c 41 47 53 00 ; 10, DICT>FLAGS
;
f707: 19 f7 00 00                ; DICT>XT - (next: f719 DICT>NEXT)
f70b: 7e 07 00 00 00             ; XT=077e, flags=00
f710: 07 44 49 43 54 3e 58 54 00 ; 7, DICT>XT
;
f719: 2d f7 00 00                ; DICT>NEXT - (next: f72d getOneWord)
f71d: 78 07 00 00 00             ; XT=0778, flags=00
f722: 09 44 49 43 54 3e 4e 45 58 54 00 ; 9, DICT>NEXT
;
f72d: 42 f7 00 00                ; getOneWord - (next: f742 char-find)
f731: 52 07 00 00 00             ; XT=0752, flags=00
f736: 0a 67 65 74 4f 6e 65 57 6f 72 64 00 ; 10, getOneWord
;
f742: 56 f7 00 00                ; char-find - (next: f756 to-lower)
f746: 17 07 00 00 00             ; XT=0717, flags=00
f74b: 09 63 68 61 72 2d 66 69 6e 64 00 ; 9, char-find
;
f756: 69 f7 00 00                ; to-lower - (next: f769 to-upper)
f75a: 00 07 00 00 00             ; XT=0700, flags=00
f75f: 08 74 6f 2d 6c 6f 77 65 72 00 ; 8, to-lower
;
f769: 7c f7 00 00                ; to-upper - (next: f77c skipWS)
f76d: e9 06 00 00 00             ; XT=06e9, flags=00
f772: 08 74 6f 2d 75 70 70 65 72 00 ; 8, to-upper
;
f77c: 8d f7 00 00                ; skipWS - (next: f78d BETWEEN)
f780: cf 06 00 00 00             ; XT=06cf, flags=00
f785: 06 73 6b 69 70 57 53 00    ; 6, skipWS
;
f78d: 9f f7 00 00                ; BETWEEN - (next: f79f CR)
f791: bc 06 00 00 00             ; XT=06bc, flags=00
f796: 07 42 45 54 57 45 45 4e 00 ; 7, BETWEEN
;
f79f: ac f7 00 00                ; CR - (next: f7ac CRLF)
f7a3: b0 06 00 00 02             ; XT=06b0, flags=02
f7a8: 02 43 52 00                ; 2, CR
;
f7ac: bb f7 00 00                ; CRLF - (next: f7bb BL)
f7b0: a4 06 00 00 02             ; XT=06a4, flags=02
f7b5: 04 43 52 4c 46 00          ; 4, CRLF
;
f7bb: c8 f7 00 00                ; BL - (next: f7c8 SPACE)
f7bf: 9b 06 00 00 02             ; XT=069b, flags=02
f7c4: 02 42 4c 00                ; 2, BL
;
f7c8: d8 f7 00 00                ; SPACE - (next: f7d8 ()
f7cc: 92 06 00 00 02             ; XT=0692, flags=02
f7d1: 05 53 50 41 43 45 00       ; 5, SPACE
;
f7d8: e4 f7 00 00                ; ( - (next: f7e4 \)
f7dc: 56 06 00 00 01             ; XT=0656, flags=01
f7e1: 01 28 00                   ; 1, (
;
f7e4: f0 f7 00 00                ; \ - (next: f7f0 CT)
f7e8: 47 06 00 00 01             ; XT=0647, flags=01
f7ed: 01 5c 00                   ; 1, \
;
f7f0: fd f7 00 00                ; CT - (next: f7fd TYPE)
f7f4: 37 06 00 00 00             ; XT=0637, flags=00
f7f9: 02 43 54 00                ; 2, CT
;
f7fd: 0c f8 00 00                ; TYPE - (next: f80c COUNT)
f801: 21 06 00 00 00             ; XT=0621, flags=00
f806: 04 54 59 50 45 00          ; 4, TYPE
;
f80c: 1c f8 00 00                ; COUNT - (next: f81c FALSE)
f810: 17 06 00 00 00             ; XT=0617, flags=00
f815: 05 43 4f 55 4e 54 00       ; 5, COUNT
;
f81c: 2c f8 00 00                ; FALSE - (next: f82c TRUE)
f820: 0f 06 00 00 02             ; XT=060f, flags=02
f825: 05 46 41 4c 53 45 00       ; 5, FALSE
;
f82c: 3b f8 00 00                ; TRUE - (next: f83b >=)
f830: 04 06 00 00 02             ; XT=0604, flags=02
f835: 04 54 52 55 45 00          ; 4, TRUE
;
f83b: 48 f8 00 00                ; >= - (next: f848 <=)
f83f: fc 05 00 00 02             ; XT=05fc, flags=02
f844: 02 3e 3d 00                ; 2, >=
;
f848: 55 f8 00 00                ; <= - (next: f855 <>)
f84c: f4 05 00 00 02             ; XT=05f4, flags=02
f851: 02 3c 3d 00                ; 2, <=
;
f855: 62 f8 00 00                ; <> - (next: f862 0=)
f859: ec 05 00 00 02             ; XT=05ec, flags=02
f85e: 02 3c 3e 00                ; 2, <>
;
f862: 6f f8 00 00                ; 0= - (next: f86f C--)
f866: e5 05 00 00 02             ; XT=05e5, flags=02
f86b: 02 30 3d 00                ; 2, 0=
;
f86f: 7d f8 00 00                ; C-- - (next: f87d C++)
f873: da 05 00 00 02             ; XT=05da, flags=02
f878: 03 43 2d 2d 00             ; 3, C--
;
f87d: 8b f8 00 00                ; C++ - (next: f88b --)
f881: cf 05 00 00 02             ; XT=05cf, flags=02
f886: 03 43 2b 2b 00             ; 3, C++
;
f88b: 98 f8 00 00                ; -- - (next: f898 ++)
f88f: c4 05 00 00 02             ; XT=05c4, flags=02
f894: 02 2d 2d 00                ; 2, --
;
f898: a5 f8 00 00                ; ++ - (next: f8a5 -!)
f89c: b9 05 00 00 02             ; XT=05b9, flags=02
f8a1: 02 2b 2b 00                ; 2, ++
;
f8a5: b2 f8 00 00                ; -! - (next: f8b2 -=)
f8a9: ac 05 00 00 00             ; XT=05ac, flags=00
f8ae: 02 2d 21 00                ; 2, -!
;
f8b2: bf f8 00 00                ; -= - (next: f8bf +=)
f8b6: a0 05 00 00 02             ; XT=05a0, flags=02
f8bb: 02 2d 3d 00                ; 2, -=
;
f8bf: cc f8 00 00                ; += - (next: f8cc 2/)
f8c3: 95 05 00 00 02             ; XT=0595, flags=02
f8c8: 02 2b 3d 00                ; 2, +=
;
f8cc: d9 f8 00 00                ; 2/ - (next: f8d9 2*)
f8d0: 8a 05 00 00 02             ; XT=058a, flags=02
f8d5: 02 32 2f 00                ; 2, 2/
;
f8d9: e6 f8 00 00                ; 2* - (next: f8e6 1-)
f8dd: 81 05 00 00 02             ; XT=0581, flags=02
f8e2: 02 32 2a 00                ; 2, 2*
;
f8e6: f3 f8 00 00                ; 1- - (next: f8f3 1+)
f8ea: 7a 05 00 00 02             ; XT=057a, flags=02
f8ef: 02 31 2d 00                ; 2, 1-
;
f8f3: 00 f9 00 00                ; 1+ - (next: f900 MOD)
f8f7: 73 05 00 00 02             ; XT=0573, flags=02
f8fc: 02 31 2b 00                ; 2, 1+
;
f900: 0e f9 00 00                ; MOD - (next: f90e /)
f904: 6b 05 00 00 02             ; XT=056b, flags=02
f909: 03 4d 4f 44 00             ; 3, MOD
;
f90e: 1a f9 00 00                ; / - (next: f91a -ROT)
f912: 62 05 00 00 02             ; XT=0562, flags=02
f917: 01 2f 00                   ; 1, /
;
f91a: 29 f9 00 00                ; -ROT - (next: f929 ROT)
f91e: 58 05 00 00 02             ; XT=0558, flags=02
f923: 04 2d 52 4f 54 00          ; 4, -ROT
;
f929: 37 f9 00 00                ; ROT - (next: f937 NIP)
f92d: 4e 05 00 00 02             ; XT=054e, flags=02
f932: 03 52 4f 54 00             ; 3, ROT
;
f937: 45 f9 00 00                ; NIP - (next: f945 TUCK)
f93b: 46 05 00 00 02             ; XT=0546, flags=02
f940: 03 4e 49 50 00             ; 3, NIP
;
f945: 54 f9 00 00                ; TUCK - (next: f954 2DROP)
f949: 3e 05 00 00 02             ; XT=053e, flags=02
f94e: 04 54 55 43 4b 00          ; 4, TUCK
;
f954: 64 f9 00 00                ; 2DROP - (next: f964 2DUP)
f958: 36 05 00 00 02             ; XT=0536, flags=02
f95d: 05 32 44 52 4f 50 00       ; 5, 2DROP
;
f964: 73 f9 00 00                ; 2DUP - (next: f973 ?DUP)
f968: 2e 05 00 00 02             ; XT=052e, flags=02
f96d: 04 32 44 55 50 00          ; 4, 2DUP
;
f973: 82 f9 00 00                ; ?DUP - (next: f982 RDROP)
f977: 24 05 00 00 00             ; XT=0524, flags=00
f97c: 04 3f 44 55 50 00          ; 4, ?DUP
;
f982: 92 f9 00 00                ; RDROP - (next: f992 R@)
f986: 1c 05 00 00 02             ; XT=051c, flags=02
f98b: 05 52 44 52 4f 50 00       ; 5, RDROP
;
f992: 9f f9 00 00                ; R@ - (next: f99f DEBUG-OFF)
f996: 15 05 00 00 02             ; XT=0515, flags=02
f99b: 02 52 40 00                ; 2, R@
;
f99f: b3 f9 00 00                ; DEBUG-OFF - (next: f9b3 DEBUG-ON)
f9a3: 0c 05 00 00 02             ; XT=050c, flags=02
f9a8: 09 44 45 42 55 47 2d 4f 46 46 00 ; 9, DEBUG-OFF
;
f9b3: c6 f9 00 00                ; DEBUG-ON - (next: f9c6 TRACE-OFF)
f9b7: 03 05 00 00 02             ; XT=0503, flags=02
f9bc: 08 44 45 42 55 47 2d 4f 4e 00 ; 8, DEBUG-ON
;
f9c6: da f9 00 00                ; TRACE-OFF - (next: f9da TRACE-ON)
f9ca: fa 04 00 00 02             ; XT=04fa, flags=02
f9cf: 09 54 52 41 43 45 2d 4f 46 46 00 ; 9, TRACE-OFF
;
f9da: ed f9 00 00                ; TRACE-ON - (next: f9ed MEM_SZ)
f9de: f1 04 00 00 02             ; XT=04f1, flags=02
f9e3: 08 54 52 41 43 45 2d 4f 4e 00 ; 8, TRACE-ON
;
f9ed: fe f9 00 00                ; MEM_SZ - (next: f9fe LEAVE)
f9f1: e5 04 00 00 00             ; XT=04e5, flags=00
f9f6: 06 4d 45 4d 5f 53 5a 00    ; 6, MEM_SZ
;
f9fe: 0e fa 00 00                ; LEAVE - (next: fa0e UNTIL)
fa02: d3 04 00 00 01             ; XT=04d3, flags=01
fa07: 05 4c 45 41 56 45 00       ; 5, LEAVE
;
fa0e: 1e fa 00 00                ; UNTIL - (next: fa1e WHILE)
fa12: b5 04 00 00 01             ; XT=04b5, flags=01
fa17: 05 55 4e 54 49 4c 00       ; 5, UNTIL
;
fa1e: 2e fa 00 00                ; WHILE - (next: fa2e AGAIN)
fa22: 97 04 00 00 01             ; XT=0497, flags=01
fa27: 05 57 48 49 4c 45 00       ; 5, WHILE
;
fa2e: 3e fa 00 00                ; AGAIN - (next: fa3e BEGIN)
fa32: 79 04 00 00 01             ; XT=0479, flags=01
fa37: 05 41 47 41 49 4e 00       ; 5, AGAIN
;
fa3e: 4e fa 00 00                ; BEGIN - (next: fa4e THEN)
fa42: 67 04 00 00 01             ; XT=0467, flags=01
fa47: 05 42 45 47 49 4e 00       ; 5, BEGIN
;
fa4e: 5d fa 00 00                ; THEN - (next: fa5d ELSE)
fa52: 4e 04 00 00 01             ; XT=044e, flags=01
fa57: 04 54 48 45 4e 00          ; 4, THEN
;
fa5d: 6c fa 00 00                ; ELSE - (next: fa6c IF)
fa61: 23 04 00 00 01             ; XT=0423, flags=01
fa66: 04 45 4c 53 45 00          ; 4, ELSE
;
fa6c: 79 fa 00 00                ; IF - (next: fa79 ?COMPILING)
fa70: 02 04 00 00 01             ; XT=0402, flags=01
fa75: 02 49 46 00                ; 2, IF
;
fa79: 8e fa 00 00                ; ?COMPILING - (next: fa8e OFF)
fa7d: f6 03 00 00 00             ; XT=03f6, flags=00
fa82: 0a 3f 43 4f 4d 50 49 4c 49 4e 47 00 ; 10, ?COMPILING
;
fa8e: 9c fa 00 00                ; OFF - (next: fa9c ON)
fa92: ec 03 00 00 00             ; XT=03ec, flags=00
fa97: 03 4f 46 46 00             ; 3, OFF
;
fa9c: a9 fa 00 00                ; ON - (next: faa9 BINARY)
faa0: e2 03 00 00 00             ; XT=03e2, flags=00
faa5: 02 4f 4e 00                ; 2, ON
;
faa9: ba fa 00 00                ; BINARY - (next: faba OCTAL)
faad: d4 03 00 00 00             ; XT=03d4, flags=00
fab2: 06 42 49 4e 41 52 59 00    ; 6, BINARY
;
faba: ca fa 00 00                ; OCTAL - (next: faca DECIMAL)
fabe: c6 03 00 00 00             ; XT=03c6, flags=00
fac3: 05 4f 43 54 41 4c 00       ; 5, OCTAL
;
faca: dc fa 00 00                ; DECIMAL - (next: fadc HEX)
face: b8 03 00 00 00             ; XT=03b8, flags=00
fad3: 07 44 45 43 49 4d 41 4c 00 ; 7, DECIMAL
;
fadc: ea fa 00 00                ; HEX - (next: faea FLAG_INLINE)
fae0: aa 03 00 00 00             ; XT=03aa, flags=00
fae5: 03 48 45 58 00             ; 3, HEX
;
faea: 00 fb 00 00                ; FLAG_INLINE - (next: fb00 FLAG_IMMEDIATE)
faee: a2 03 00 00 02             ; XT=03a2, flags=02
faf3: 0b 46 4c 41 47 5f 49 4e 4c 49 4e 45 00 ; 11, FLAG_INLINE
;
fb00: 19 fb 00 00                ; FLAG_IMMEDIATE - (next: fb19 CELLS)
fb04: 9a 03 00 00 02             ; XT=039a, flags=02
fb09: 0e 46 4c 41 47 5f 49 4d 4d 45 44 49 41 54 45 00 ; 14, FLAG_IMMEDIATE
;
fb19: 29 fb 00 00                ; CELLS - (next: fb29 IMMEDIATE)
fb1d: 91 03 00 00 02             ; XT=0391, flags=02
fb22: 05 43 45 4c 4c 53 00       ; 5, CELLS
;
fb29: 3d fb 00 00                ; IMMEDIATE - (next: fb3d INLINE)
fb2d: 79 03 00 00 00             ; XT=0379, flags=00
fb32: 09 49 4d 4d 45 44 49 41 54 45 00 ; 9, IMMEDIATE
;
fb3d: 4e fb 00 00                ; INLINE - (next: fb4e BYE)
fb41: 61 03 00 00 00             ; XT=0361, flags=00
fb46: 06 49 4e 4c 49 4e 45 00    ; 6, INLINE
;
fb4e: 5c fb 00 00                ; BYE - (next: fb5c RESET)
fb52: 5a 03 00 00 02             ; XT=035a, flags=02
fb57: 03 42 59 45 00             ; 3, BYE
;
fb5c: 6c fb 00 00                ; RESET - (next: fb6c BREAK)
fb60: 53 03 00 00 02             ; XT=0353, flags=02
fb65: 05 52 45 53 45 54 00       ; 5, RESET
;
fb6c: 7c fb 00 00                ; BREAK - (next: fb7c NOP)
fb70: 4c 03 00 00 02             ; XT=034c, flags=02
fb75: 05 42 52 45 41 4b 00       ; 5, BREAK
;
fb7c: 8a fb 00 00                ; NOP - (next: fb8a BRANCHBNZ)
fb80: 45 03 00 00 02             ; XT=0345, flags=02
fb85: 03 4e 4f 50 00             ; 3, NOP
;
fb8a: 9e fb 00 00                ; BRANCHBNZ - (next: fb9e BRANCHBZ)
fb8e: 38 03 00 00 00             ; XT=0338, flags=00
fb93: 09 42 52 41 4e 43 48 42 4e 5a 00 ; 9, BRANCHBNZ
;
fb9e: b1 fb 00 00                ; BRANCHBZ - (next: fbb1 BRANCHB)
fba2: 2b 03 00 00 00             ; XT=032b, flags=00
fba7: 08 42 52 41 4e 43 48 42 5a 00 ; 8, BRANCHBZ
;
fbb1: c3 fb 00 00                ; BRANCHB - (next: fbc3 BRANCHFNZ)
fbb5: 1e 03 00 00 00             ; XT=031e, flags=00
fbba: 07 42 52 41 4e 43 48 42 00 ; 7, BRANCHB
;
fbc3: d7 fb 00 00                ; BRANCHFNZ - (next: fbd7 BRANCHFZ)
fbc7: 11 03 00 00 00             ; XT=0311, flags=00
fbcc: 09 42 52 41 4e 43 48 46 4e 5a 00 ; 9, BRANCHFNZ
;
fbd7: ea fb 00 00                ; BRANCHFZ - (next: fbea BRANCHF)
fbdb: 04 03 00 00 00             ; XT=0304, flags=00
fbe0: 08 42 52 41 4e 43 48 46 5a 00 ; 8, BRANCHFZ
;
fbea: fc fb 00 00                ; BRANCHF - (next: fbfc +!)
fbee: f7 02 00 00 00             ; XT=02f7, flags=00
fbf3: 07 42 52 41 4e 43 48 46 00 ; 7, BRANCHF
;
fbfc: 09 fc 00 00                ; +! - (next: fc09 >>)
fc00: f0 02 00 00 02             ; XT=02f0, flags=02
fc05: 02 2b 21 00                ; 2, +!
;
fc09: 16 fc 00 00                ; >> - (next: fc16 <<)
fc0d: e9 02 00 00 02             ; XT=02e9, flags=02
fc12: 02 3e 3e 00                ; 2, >>
;
fc16: 23 fc 00 00                ; << - (next: fc23 GETTICK)
fc1a: e2 02 00 00 02             ; XT=02e2, flags=02
fc1f: 02 3c 3c 00                ; 2, <<
;
fc23: 35 fc 00 00                ; GETTICK - (next: fc35 DEC)
fc27: db 02 00 00 02             ; XT=02db, flags=02
fc2c: 07 47 45 54 54 49 43 4b 00 ; 7, GETTICK
;
fc35: 43 fc 00 00                ; DEC - (next: fc43 RDEPTH)
fc39: d4 02 00 00 02             ; XT=02d4, flags=02
fc3e: 03 44 45 43 00             ; 3, DEC
;
fc43: 54 fc 00 00                ; RDEPTH - (next: fc54 INC)
fc47: cd 02 00 00 02             ; XT=02cd, flags=02
fc4c: 06 52 44 45 50 54 48 00    ; 6, RDEPTH
;
fc54: 62 fc 00 00                ; INC - (next: fc62 RFETCH)
fc58: c6 02 00 00 02             ; XT=02c6, flags=02
fc5d: 03 49 4e 43 00             ; 3, INC
;
fc62: 73 fc 00 00                ; RFETCH - (next: fc73 NOT)
fc66: bf 02 00 00 02             ; XT=02bf, flags=02
fc6b: 06 52 46 45 54 43 48 00    ; 6, RFETCH
;
fc73: 81 fc 00 00                ; NOT - (next: fc81 /MOD)
fc77: b8 02 00 00 02             ; XT=02b8, flags=02
fc7c: 03 4e 4f 54 00             ; 3, NOT
;
fc81: 90 fc 00 00                ; /MOD - (next: fc90 COMPAREI)
fc85: b1 02 00 00 02             ; XT=02b1, flags=02
fc8a: 04 2f 4d 4f 44 00          ; 4, /MOD
;
fc90: a3 fc 00 00                ; COMPAREI - (next: fca3 GETCH)
fc94: aa 02 00 00 02             ; XT=02aa, flags=02
fc99: 08 43 4f 4d 50 41 52 45 49 00 ; 8, COMPAREI
;
fca3: b3 fc 00 00                ; GETCH - (next: fcb3 DEPTH)
fca7: a3 02 00 00 02             ; XT=02a3, flags=02
fcac: 05 47 45 54 43 48 00       ; 5, GETCH
;
fcb3: c3 fc 00 00                ; DEPTH - (next: fcc3 PICK)
fcb7: 9c 02 00 00 02             ; XT=029c, flags=02
fcbc: 05 44 45 50 54 48 00       ; 5, DEPTH
;
fcc3: d2 fc 00 00                ; PICK - (next: fcd2 AND)
fcc7: 95 02 00 00 02             ; XT=0295, flags=02
fccc: 04 50 49 43 4b 00          ; 4, PICK
;
fcd2: e0 fc 00 00                ; AND - (next: fce0 LOGLEVEL)
fcd6: 8e 02 00 00 02             ; XT=028e, flags=02
fcdb: 03 41 4e 44 00             ; 3, AND
;
fce0: f3 fc 00 00                ; LOGLEVEL - (next: fcf3 R>)
fce4: 87 02 00 00 02             ; XT=0287, flags=02
fce9: 08 4c 4f 47 4c 45 56 45 4c 00 ; 8, LOGLEVEL
;
fcf3: 00 fd 00 00                ; R> - (next: fd00 >R)
fcf7: 80 02 00 00 02             ; XT=0280, flags=02
fcfc: 02 52 3e 00                ; 2, R>
;
fd00: 0d fd 00 00                ; >R - (next: fd0d FCLOSE)
fd04: 79 02 00 00 02             ; XT=0279, flags=02
fd09: 02 3e 52 00                ; 2, >R
;
fd0d: 1e fd 00 00                ; FCLOSE - (next: fd1e FWRITE)
fd11: 72 02 00 00 02             ; XT=0272, flags=02
fd16: 06 46 43 4c 4f 53 45 00    ; 6, FCLOSE
;
fd1e: 2f fd 00 00                ; FWRITE - (next: fd2f FREADLINE)
fd22: 6b 02 00 00 02             ; XT=026b, flags=02
fd27: 06 46 57 52 49 54 45 00    ; 6, FWRITE
;
fd2f: 43 fd 00 00                ; FREADLINE - (next: fd43 FREAD)
fd33: 64 02 00 00 02             ; XT=0264, flags=02
fd38: 09 46 52 45 41 44 4c 49 4e 45 00 ; 9, FREADLINE
;
fd43: 53 fd 00 00                ; FREAD - (next: fd53 FOPEN)
fd47: 5d 02 00 00 02             ; XT=025d, flags=02
fd4c: 05 46 52 45 41 44 00       ; 5, FREAD
;
fd53: 63 fd 00 00                ; FOPEN - (next: fd63 COMPARE)
fd57: 56 02 00 00 02             ; XT=0256, flags=02
fd5c: 05 46 4f 50 45 4e 00       ; 5, FOPEN
;
fd63: 75 fd 00 00                ; COMPARE - (next: fd75 OVER)
fd67: 4f 02 00 00 02             ; XT=024f, flags=02
fd6c: 07 43 4f 4d 50 41 52 45 00 ; 7, COMPARE
;
fd75: 84 fd 00 00                ; OVER - (next: fd84 EMIT)
fd79: 48 02 00 00 02             ; XT=0248, flags=02
fd7e: 04 4f 56 45 52 00          ; 4, OVER
;
fd84: 93 fd 00 00                ; EMIT - (next: fd93 DICTP)
fd88: 41 02 00 00 02             ; XT=0241, flags=02
fd8d: 04 45 4d 49 54 00          ; 4, EMIT
;
fd93: a3 fd 00 00                ; DICTP - (next: fda3 >)
fd97: 34 02 00 00 02             ; XT=0234, flags=02
fd9c: 05 44 49 43 54 50 00       ; 5, DICTP
;
fda3: af fd 00 00                ; > - (next: fdaf =)
fda7: 2d 02 00 00 02             ; XT=022d, flags=02
fdac: 01 3e 00                   ; 1, >
;
fdaf: bb fd 00 00                ; = - (next: fdbb <)
fdb3: 26 02 00 00 02             ; XT=0226, flags=02
fdb8: 01 3d 00                   ; 1, =
;
fdbb: c7 fd 00 00                ; < - (next: fdc7 /)
fdbf: 1f 02 00 00 02             ; XT=021f, flags=02
fdc4: 01 3c 00                   ; 1, <
;
fdc7: d3 fd 00 00                ; / - (next: fdd3 *)
fdcb: 18 02 00 00 02             ; XT=0218, flags=02
fdd0: 01 2f 00                   ; 1, /
;
fdd3: df fd 00 00                ; * - (next: fddf -)
fdd7: 11 02 00 00 02             ; XT=0211, flags=02
fddc: 01 2a 00                   ; 1, *
;
fddf: eb fd 00 00                ; - - (next: fdeb +)
fde3: 0a 02 00 00 02             ; XT=020a, flags=02
fde8: 01 2d 00                   ; 1, -
;
fdeb: f7 fd 00 00                ; + - (next: fdf7 C!)
fdef: 03 02 00 00 02             ; XT=0203, flags=02
fdf4: 01 2b 00                   ; 1, +
;
fdf7: 04 fe 00 00                ; C! - (next: fe04 C@)
fdfb: fc 01 00 00 02             ; XT=01fc, flags=02
fe00: 02 43 21 00                ; 2, C!
;
fe04: 11 fe 00 00                ; C@ - (next: fe11 CLITERAL)
fe08: f5 01 00 00 02             ; XT=01f5, flags=02
fe0d: 02 43 40 00                ; 2, C@
;
fe11: 24 fe 00 00                ; CLITERAL - (next: fe24 OR)
fe15: e8 01 00 00 02             ; XT=01e8, flags=02
fe1a: 08 43 4c 49 54 45 52 41 4c 00 ; 8, CLITERAL
;
fe24: 31 fe 00 00                ; OR - (next: fe31 RET)
fe28: e1 01 00 00 02             ; XT=01e1, flags=02
fe2d: 02 4f 52 00                ; 2, OR
;
fe31: 3f fe 00 00                ; RET - (next: fe3f CALL)
fe35: d4 01 00 00 00             ; XT=01d4, flags=00
fe3a: 03 52 45 54 00             ; 3, RET
;
fe3f: 4e fe 00 00                ; CALL - (next: fe4e JMPNZ)
fe43: c7 01 00 00 00             ; XT=01c7, flags=00
fe48: 04 43 41 4c 4c 00          ; 4, CALL
;
fe4e: 5e fe 00 00                ; JMPNZ - (next: fe5e JMPZ)
fe52: ba 01 00 00 00             ; XT=01ba, flags=00
fe57: 05 4a 4d 50 4e 5a 00       ; 5, JMPNZ
;
fe5e: 6d fe 00 00                ; JMPZ - (next: fe6d JMP)
fe62: ad 01 00 00 00             ; XT=01ad, flags=00
fe67: 04 4a 4d 50 5a 00          ; 4, JMPZ
;
fe6d: 7b fe 00 00                ; JMP - (next: fe7b SLITERAL)
fe71: a0 01 00 00 00             ; XT=01a0, flags=00
fe76: 03 4a 4d 50 00             ; 3, JMP
;
fe7b: 8e fe 00 00                ; SLITERAL - (next: fe8e DUP)
fe7f: 93 01 00 00 00             ; XT=0193, flags=00
fe84: 08 53 4c 49 54 45 52 41 4c 00 ; 8, SLITERAL
;
fe8e: 9c fe 00 00                ; DUP - (next: fe9c DROP)
fe92: 8c 01 00 00 02             ; XT=018c, flags=02
fe97: 03 44 55 50 00             ; 3, DUP
;
fe9c: ab fe 00 00                ; DROP - (next: feab SWAP)
fea0: 85 01 00 00 02             ; XT=0185, flags=02
fea5: 04 44 52 4f 50 00          ; 4, DROP
;
feab: ba fe 00 00                ; SWAP - (next: feba !)
feaf: 7e 01 00 00 02             ; XT=017e, flags=02
feb4: 04 53 57 41 50 00          ; 4, SWAP
;
feba: c6 fe 00 00                ; ! - (next: fec6 @)
febe: 77 01 00 00 02             ; XT=0177, flags=02
fec3: 01 21 00                   ; 1, !
;
fec6: d2 fe 00 00                ; @ - (next: fed2 LITERAL)
feca: 70 01 00 00 02             ; XT=0170, flags=02
fecf: 01 40 00                   ; 1, @
;
fed2: e4 fe 00 00                ; LITERAL - (next: fee4 ])
fed6: 63 01 00 00 00             ; XT=0163, flags=00
fedb: 07 4c 49 54 45 52 41 4c 00 ; 7, LITERAL
;
fee4: f0 fe 00 00                ; ] - (next: fef0 [)
fee8: 55 01 00 00 01             ; XT=0155, flags=01
feed: 01 5d 00                   ; 1, ]
;
fef0: fc fe 00 00                ; [ - (next: fefc ,)
fef4: 47 01 00 00 01             ; XT=0147, flags=01
fef9: 01 5b 00                   ; 1, [
;
fefc: 08 ff 00 00                ; , - (next: ff08 C,)
ff00: 2d 01 00 00 00             ; XT=012d, flags=00
ff05: 01 2c 00                   ; 1, ,
;
ff08: 15 ff 00 00                ; C, - (next: ff15 LAST)
ff0c: 15 01 00 00 00             ; XT=0115, flags=00
ff11: 02 43 2c 00                ; 2, C,
;
ff15: 24 ff 00 00                ; LAST - (next: ff24 HERE)
ff19: 09 01 00 00 00             ; XT=0109, flags=00
ff1e: 04 4c 41 53 54 00          ; 4, LAST
;
ff24: 33 ff 00 00                ; HERE - (next: ff33 CELL)
ff28: fd 00 00 00 00             ; XT=00fd, flags=00
ff2d: 04 48 45 52 45 00          ; 4, HERE
;
ff33: 42 ff 00 00                ; CELL - (next: ff42 T3)
ff37: f5 00 00 00 02             ; XT=00f5, flags=02
ff3c: 04 43 45 4c 4c 00          ; 4, CELL
;
ff42: 4f ff 00 00                ; T3 - (next: ff4f T2)
ff46: e5 00 00 00 00             ; XT=00e5, flags=00
ff4b: 02 54 33 00                ; 2, T3
;
ff4f: 5c ff 00 00                ; T2 - (next: ff5c T1)
ff53: d6 00 00 00 00             ; XT=00d6, flags=00
ff58: 02 54 32 00                ; 2, T2
;
ff5c: 69 ff 00 00                ; T1 - (next: ff69 INPUT-FP)
ff60: c7 00 00 00 00             ; XT=00c7, flags=00
ff65: 02 54 31 00                ; 2, T1
;
ff69: 7c ff 00 00                ; INPUT-FP - (next: ff7c #LEN)
ff6d: b8 00 00 00 00             ; XT=00b8, flags=00
ff72: 08 49 4e 50 55 54 2d 46 50 00 ; 8, INPUT-FP
;
ff7c: 8b ff 00 00                ; #LEN - (next: ff8b #NEG)
ff80: a9 00 00 00 00             ; XT=00a9, flags=00
ff85: 04 23 4c 45 4e 00          ; 4, #LEN
;
ff8b: 9a ff 00 00                ; #NEG - (next: ff9a >IN)
ff8f: 9a 00 00 00 00             ; XT=009a, flags=00
ff94: 04 23 4e 45 47 00          ; 4, #NEG
;
ff9a: a8 ff 00 00                ; >IN - (next: ffa8 (MEM_SZ))
ff9e: 8b 00 00 00 00             ; XT=008b, flags=00
ffa3: 03 3e 49 4e 00             ; 3, >IN
;
ffa8: bb ff 00 00                ; (MEM_SZ) - (next: ffbb STATE)
ffac: 7c 00 00 00 00             ; XT=007c, flags=00
ffb1: 08 28 4d 45 4d 5f 53 5a 29 00 ; 8, (MEM_SZ)
;
ffbb: cb ff 00 00                ; STATE - (next: ffcb BASE)
ffbf: 6d 00 00 00 00             ; XT=006d, flags=00
ffc4: 05 53 54 41 54 45 00       ; 5, STATE
;
ffcb: da ff 00 00                ; BASE - (next: ffda (LAST))
ffcf: 5e 00 00 00 00             ; XT=005e, flags=00
ffd4: 04 42 41 53 45 00          ; 4, BASE
;
ffda: eb ff 00 00                ; (LAST) - (next: ffeb (HERE))
ffde: 4f 00 00 00 00             ; XT=004f, flags=00
ffe3: 06 28 4c 41 53 54 29 00    ; 6, (LAST)
;
ffeb: fc ff 00 00                ; (HERE) - (next: fffc <end>)
ffef: 40 00 00 00 00             ; XT=0040, flags=00
fff4: 06 28 48 45 52 45 29 00    ; 6, (HERE)
;
fffc: 00 00 00 00                ; End.
