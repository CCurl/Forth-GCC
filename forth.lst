; memory-size: 65536 bytes, (10000 hex)
; data-stack: fe00, grows up
; return-stack: fffc, grows down
;
0000: 08 13 12 00 00             ; JMP main (1213)
;
0005: 00 00 00
0008: 00000004 00000000
0010: 000014ab 0000ef79 0000000a 00000000
0020: 00000063 00010000 00000000 00000000
0030: 00000000 00000000 00000000 00000000
;
0040: 18 ed fd 00 00             ; DICTP BASE (fded)
0045: 0e 18                      ; CLITERAL 24
0047: 0c                         ; RET
;
0048: 18 de fd 00 00             ; DICTP CELL (fdde)
004d: 0e 04                      ; CLITERAL 4
004f: 0c                         ; RET
;
0050: 18 cd fd 00 00             ; DICTP (HERE) (fdcd)
0055: 0e 10                      ; CLITERAL 16
0057: 0c                         ; RET
;
0058: 18 bc fd 00 00             ; DICTP (LAST) (fdbc)
005d: 0e 14                      ; CLITERAL 20
005f: 0c                         ; RET
;
0060: 18 a9 fd 00 00             ; DICTP INPUT-FP (fda9)
0065: 0e 1c                      ; CLITERAL 28
0067: 0c                         ; RET
;
0068: 18 99 fd 00 00             ; DICTP STATE (fd99)
006d: 0e 20                      ; CLITERAL 32
006f: 0c                         ; RET
;
0070: 18 8c fd 00 00             ; DICTP C, (fd8c)
0075: 0e 10                      ; CLITERAL 16
0077: 02                         ; FETCH
0078: 10                         ; CSTORE
0079: 0e 10                      ; CLITERAL 16
007b: 02                         ; FETCH
007c: 2c                         ; INC
007d: 0e 10                      ; CLITERAL 16
007f: 03                         ; STORE
0080: 0c                         ; RET
;
0081: 18 80 fd 00 00             ; DICTP , (fd80)
0086: 0e 10                      ; CLITERAL 16
0088: 02                         ; FETCH
0089: 03                         ; STORE
008a: 0e 10                      ; CLITERAL 16
008c: 02                         ; FETCH
008d: 0e 04                      ; CLITERAL 4
008f: 11                         ; ADD
0090: 0e 10                      ; CLITERAL 16
0092: 03                         ; STORE
0093: 0c                         ; RET
;
0094: 18 74 fd 00 00             ; DICTP [ (fd74)
0099: 0e 00                      ; CLITERAL 0
009b: 0e 20                      ; CLITERAL 32
009d: 03                         ; STORE
009e: 0c                         ; RET
;
009f: 18 68 fd 00 00             ; DICTP ] (fd68)
00a4: 0e 01                      ; CLITERAL 1
00a6: 0e 20                      ; CLITERAL 32
00a8: 03                         ; STORE
00a9: 0c                         ; RET
;
00aa: 18 56 fd 00 00             ; DICTP LITERAL (fd56)
00af: 0e 01                      ; CLITERAL 1
00b1: 0b 70 00 00 00             ; CALL C, (0070)
00b6: 0c                         ; RET
;
00b7: 18 4a fd 00 00             ; DICTP @ (fd4a)
00bc: 02                         ; FETCH
00bd: 0c                         ; RET
;
00be: 18 3e fd 00 00             ; DICTP ! (fd3e)
00c3: 03                         ; STORE
00c4: 0c                         ; RET
;
00c5: 18 2f fd 00 00             ; DICTP SWAP (fd2f)
00ca: 04                         ; SWAP
00cb: 0c                         ; RET
;
00cc: 18 20 fd 00 00             ; DICTP DROP (fd20)
00d1: 05                         ; DROP
00d2: 0c                         ; RET
;
00d3: 18 12 fd 00 00             ; DICTP DUP (fd12)
00d8: 06                         ; DUP
00d9: 0c                         ; RET
;
00da: 18 ff fc 00 00             ; DICTP SLITERAL (fcff)
00df: 0e 07                      ; CLITERAL 7
00e1: 0b 70 00 00 00             ; CALL C, (0070)
00e6: 0c                         ; RET
;
00e7: 18 f1 fc 00 00             ; DICTP JMP (fcf1)
00ec: 0e 08                      ; CLITERAL 8
00ee: 0b 70 00 00 00             ; CALL C, (0070)
00f3: 0c                         ; RET
;
00f4: 18 e2 fc 00 00             ; DICTP JMPZ (fce2)
00f9: 0e 09                      ; CLITERAL 9
00fb: 0b 70 00 00 00             ; CALL C, (0070)
0100: 0c                         ; RET
;
0101: 18 d2 fc 00 00             ; DICTP JMPNZ (fcd2)
0106: 0e 0a                      ; CLITERAL 10
0108: 0b 70 00 00 00             ; CALL C, (0070)
010d: 0c                         ; RET
;
010e: 18 c3 fc 00 00             ; DICTP CALL (fcc3)
0113: 0e 0b                      ; CLITERAL 11
0115: 0b 70 00 00 00             ; CALL C, (0070)
011a: 0c                         ; RET
;
011b: 18 b5 fc 00 00             ; DICTP RET (fcb5)
0120: 0e 0c                      ; CLITERAL 12
0122: 0b 70 00 00 00             ; CALL C, (0070)
0127: 0c                         ; RET
;
0128: 18 a8 fc 00 00             ; DICTP OR (fca8)
012d: 0d                         ; OR
012e: 0c                         ; RET
;
012f: 18 95 fc 00 00             ; DICTP CLITERAL (fc95)
0134: 0e 0e                      ; CLITERAL 14
0136: 0b 70 00 00 00             ; CALL C, (0070)
013b: 0c                         ; RET
;
013c: 18 88 fc 00 00             ; DICTP C@ (fc88)
0141: 0f                         ; CFETCH
0142: 0c                         ; RET
;
0143: 18 7b fc 00 00             ; DICTP C! (fc7b)
0148: 10                         ; CSTORE
0149: 0c                         ; RET
;
014a: 18 6f fc 00 00             ; DICTP + (fc6f)
014f: 11                         ; ADD
0150: 0c                         ; RET
;
0151: 18 63 fc 00 00             ; DICTP - (fc63)
0156: 12                         ; SUB
0157: 0c                         ; RET
;
0158: 18 57 fc 00 00             ; DICTP * (fc57)
015d: 13                         ; MUL
015e: 0c                         ; RET
;
015f: 18 4b fc 00 00             ; DICTP / (fc4b)
0164: 14                         ; DIV
0165: 0c                         ; RET
;
0166: 18 3f fc 00 00             ; DICTP < (fc3f)
016b: 15                         ; LT
016c: 0c                         ; RET
;
016d: 18 33 fc 00 00             ; DICTP = (fc33)
0172: 16                         ; EQ
0173: 0c                         ; RET
;
0174: 18 27 fc 00 00             ; DICTP > (fc27)
0179: 17                         ; GT
017a: 0c                         ; RET
;
017b: 18 17 fc 00 00             ; DICTP DICTP (fc17)
0180: 0e 18                      ; CLITERAL 24
0182: 0b 70 00 00 00             ; CALL C, (0070)
0187: 0c                         ; RET
;
0188: 18 08 fc 00 00             ; DICTP EMIT (fc08)
018d: 19                         ; EMIT
018e: 0c                         ; RET
;
018f: 18 f9 fb 00 00             ; DICTP OVER (fbf9)
0194: 1a                         ; OVER
0195: 0c                         ; RET
;
0196: 18 e7 fb 00 00             ; DICTP COMPARE (fbe7)
019b: 1b                         ; COMPARE
019c: 0c                         ; RET
;
019d: 18 d7 fb 00 00             ; DICTP FOPEN (fbd7)
01a2: 1c                         ; FOPEN
01a3: 0c                         ; RET
;
01a4: 18 c7 fb 00 00             ; DICTP FREAD (fbc7)
01a9: 1d                         ; FREAD
01aa: 0c                         ; RET
;
01ab: 18 b3 fb 00 00             ; DICTP FREADLINE (fbb3)
01b0: 1e                         ; FREADLINE
01b1: 0c                         ; RET
;
01b2: 18 a2 fb 00 00             ; DICTP FWRITE (fba2)
01b7: 1f                         ; FWRITE
01b8: 0c                         ; RET
;
01b9: 18 91 fb 00 00             ; DICTP FCLOSE (fb91)
01be: 20                         ; FCLOSE
01bf: 0c                         ; RET
;
01c0: 18 84 fb 00 00             ; DICTP >R (fb84)
01c5: 21                         ; DTOR
01c6: 0c                         ; RET
;
01c7: 18 77 fb 00 00             ; DICTP R> (fb77)
01cc: 22                         ; RTOD
01cd: 0c                         ; RET
;
01ce: 18 64 fb 00 00             ; DICTP LOGLEVEL (fb64)
01d3: 23                         ; LOGLEVEL
01d4: 0c                         ; RET
;
01d5: 18 56 fb 00 00             ; DICTP AND (fb56)
01da: 24                         ; AND
01db: 0c                         ; RET
;
01dc: 18 47 fb 00 00             ; DICTP PICK (fb47)
01e1: 25                         ; PICK
01e2: 0c                         ; RET
;
01e3: 18 37 fb 00 00             ; DICTP DEPTH (fb37)
01e8: 26                         ; DEPTH
01e9: 0c                         ; RET
;
01ea: 18 27 fb 00 00             ; DICTP GETCH (fb27)
01ef: 27                         ; GETCH
01f0: 0c                         ; RET
;
01f1: 18 14 fb 00 00             ; DICTP COMPAREI (fb14)
01f6: 28                         ; COMPAREI
01f7: 0c                         ; RET
;
01f8: 18 03 fb 00 00             ; DICTP USINIT (fb03)
01fd: 29                         ; USTACKINIT
01fe: 0c                         ; RET
;
01ff: 18 f2 fa 00 00             ; DICTP USPUSH (faf2)
0204: 2a                         ; UPUSH
0205: 0c                         ; RET
;
0206: 18 e2 fa 00 00             ; DICTP USPOP (fae2)
020b: 2b                         ; UPOP
020c: 0c                         ; RET
;
020d: 18 d4 fa 00 00             ; DICTP INC (fad4)
0212: 2c                         ; INC
0213: 0c                         ; RET
;
0214: 18 c3 fa 00 00             ; DICTP RDEPTH (fac3)
0219: 2d                         ; RDEPTH
021a: 0c                         ; RET
;
021b: 18 b5 fa 00 00             ; DICTP DEC (fab5)
0220: 2e                         ; DEC
0221: 0c                         ; RET
;
0222: 18 a3 fa 00 00             ; DICTP GETTICK (faa3)
0227: 2f                         ; GETTICK
0228: 0c                         ; RET
;
0229: 18 93 fa 00 00             ; DICTP BREAK (fa93)
022e: fd                         ; BREAK
022f: 0c                         ; RET
;
0230: 18 83 fa 00 00             ; DICTP RESET (fa83)
0235: fe                         ; RESET
0236: 0c                         ; RET
;
0237: 18 75 fa 00 00             ; DICTP BYE (fa75)
023c: ff                         ; BYE
023d: 0c                         ; RET
;
023e: 18 64 fa 00 00             ; DICTP INLINE (fa64)
0243: 0b 58 00 00 00             ; CALL (LAST) (0058)
0248: 02                         ; FETCH
0249: 0e 02                      ; CLITERAL 2
024b: 0b 48 00 00 00             ; CALL CELL (0048)
0250: 13                         ; MUL
0251: 11                         ; ADD
0252: 06                         ; DUP
0253: 0f                         ; CFETCH
0254: 0e 02                      ; CLITERAL 2
0256: 0d                         ; OR
0257: 04                         ; SWAP
0258: 10                         ; CSTORE
0259: 0c                         ; RET
;
025a: 18 50 fa 00 00             ; DICTP IMMEDIATE (fa50)
025f: 0b 58 00 00 00             ; CALL (LAST) (0058)
0264: 02                         ; FETCH
0265: 0e 02                      ; CLITERAL 2
0267: 0b 48 00 00 00             ; CALL CELL (0048)
026c: 13                         ; MUL
026d: 11                         ; ADD
026e: 06                         ; DUP
026f: 0f                         ; CFETCH
0270: 0e 01                      ; CLITERAL 1
0272: 0d                         ; OR
0273: 04                         ; SWAP
0274: 10                         ; CSTORE
0275: 0c                         ; RET
;
0276: 18 40 fa 00 00             ; DICTP CELLS (fa40)
027b: 0b 48 00 00 00             ; CALL CELL (0048)
0280: 13                         ; MUL
0281: 0c                         ; RET
;
0282: 18 27 fa 00 00             ; DICTP FLAG_IMMEDIATE (fa27)
0287: 0e 01                      ; CLITERAL 1
0289: 0c                         ; RET
;
028a: 18 11 fa 00 00             ; DICTP FLAG_INLINE (fa11)
028f: 0e 02                      ; CLITERAL 2
0291: 0c                         ; RET
;
0292: 18 02 fa 00 00             ; DICTP LAST (fa02)
0297: 0b 58 00 00 00             ; CALL (LAST) (0058)
029c: 02                         ; FETCH
029d: 0c                         ; RET
;
029e: 18 f3 f9 00 00             ; DICTP HERE (f9f3)
02a3: 0b 50 00 00 00             ; CALL (HERE) (0050)
02a8: 02                         ; FETCH
02a9: 0c                         ; RET
;
02aa: 18 e7 f9 00 00             ; DICTP , (f9e7)
02af: 0b 50 00 00 00             ; CALL (HERE) (0050)
02b4: 02                         ; FETCH
02b5: 03                         ; STORE
02b6: 0b 50 00 00 00             ; CALL (HERE) (0050)
02bb: 02                         ; FETCH
02bc: 0b 48 00 00 00             ; CALL CELL (0048)
02c1: 11                         ; ADD
02c2: 0b 50 00 00 00             ; CALL (HERE) (0050)
02c7: 03                         ; STORE
02c8: 0c                         ; RET
;
02c9: 18 da f9 00 00             ; DICTP C, (f9da)
02ce: 0b 50 00 00 00             ; CALL (HERE) (0050)
02d3: 02                         ; FETCH
02d4: 10                         ; CSTORE
02d5: 0b 50 00 00 00             ; CALL (HERE) (0050)
02da: 02                         ; FETCH
02db: 0e 01                      ; CLITERAL 1
02dd: 11                         ; ADD
02de: 0b 50 00 00 00             ; CALL (HERE) (0050)
02e3: 03                         ; STORE
02e4: 0c                         ; RET
;
02e5: 18 cc f9 00 00             ; DICTP HEX (f9cc)
02ea: 0e 10                      ; CLITERAL 16
02ec: 0b 40 00 00 00             ; CALL BASE (0040)
02f1: 03                         ; STORE
02f2: 0c                         ; RET
;
02f3: 18 ba f9 00 00             ; DICTP DECIMAL (f9ba)
02f8: 0e 0a                      ; CLITERAL 10
02fa: 0b 40 00 00 00             ; CALL BASE (0040)
02ff: 03                         ; STORE
0300: 0c                         ; RET
;
0301: 18 aa f9 00 00             ; DICTP OCTAL (f9aa)
0306: 0e 08                      ; CLITERAL 8
0308: 0b 40 00 00 00             ; CALL BASE (0040)
030d: 03                         ; STORE
030e: 0c                         ; RET
;
030f: 18 99 f9 00 00             ; DICTP BINARY (f999)
0314: 0e 02                      ; CLITERAL 2
0316: 0b 40 00 00 00             ; CALL BASE (0040)
031b: 03                         ; STORE
031c: 0c                         ; RET
;
031d: 18 8c f9 00 00             ; DICTP ON (f98c)
0322: 0e 01                      ; CLITERAL 1
0324: 04                         ; SWAP
0325: 03                         ; STORE
0326: 0c                         ; RET
;
0327: 18 7e f9 00 00             ; DICTP OFF (f97e)
032c: 0e 00                      ; CLITERAL 0
032e: 04                         ; SWAP
032f: 03                         ; STORE
0330: 0c                         ; RET
;
0331: 18 69 f9 00 00             ; DICTP ?COMPILING (f969)
0336: 0b 68 00 00 00             ; CALL STATE (0068)
033b: 02                         ; FETCH
033c: 0c                         ; RET
;
033d: 18 5c f9 00 00             ; DICTP IF (f95c)
0342: 0b 31 03 00 00             ; CALL ?COMPILING (0331)
0347: 09 5e 03 00 00             ; JMPZ 035e
034c: 0b f4 00 00 00             ; CALL JMPZ (00f4)
0351: 0b 50 00 00 00             ; CALL (HERE) (0050)
0356: 02                         ; FETCH
0357: 0e 00                      ; CLITERAL 0
0359: 0b aa 02 00 00             ; CALL , (02aa)
035e: 0c                         ; RET
;
035f: 18 4d f9 00 00             ; DICTP ELSE (f94d)
0364: 0b 31 03 00 00             ; CALL ?COMPILING (0331)
0369: 09 89 03 00 00             ; JMPZ 0389
036e: 0b e7 00 00 00             ; CALL JMP (00e7)
0373: 0b 50 00 00 00             ; CALL (HERE) (0050)
0378: 02                         ; FETCH
0379: 04                         ; SWAP
037a: 0e 00                      ; CLITERAL 0
037c: 0b aa 02 00 00             ; CALL , (02aa)
0381: 0b 50 00 00 00             ; CALL (HERE) (0050)
0386: 02                         ; FETCH
0387: 04                         ; SWAP
0388: 03                         ; STORE
0389: 0c                         ; RET
;
038a: 18 3e f9 00 00             ; DICTP THEN (f93e)
038f: 0b 31 03 00 00             ; CALL ?COMPILING (0331)
0394: 09 a1 03 00 00             ; JMPZ 03a1
0399: 0b 50 00 00 00             ; CALL (HERE) (0050)
039e: 02                         ; FETCH
039f: 04                         ; SWAP
03a0: 03                         ; STORE
03a1: 0c                         ; RET
;
03a2: 18 2e f9 00 00             ; DICTP BEGIN (f92e)
03a7: 0b 31 03 00 00             ; CALL ?COMPILING (0331)
03ac: 09 b7 03 00 00             ; JMPZ 03b7
03b1: 0b 50 00 00 00             ; CALL (HERE) (0050)
03b6: 02                         ; FETCH
03b7: 0c                         ; RET
;
03b8: 18 1e f9 00 00             ; DICTP AGAIN (f91e)
03bd: 0b 31 03 00 00             ; CALL ?COMPILING (0331)
03c2: 09 d1 03 00 00             ; JMPZ 03d1
03c7: 0b e7 00 00 00             ; CALL JMP (00e7)
03cc: 0b aa 02 00 00             ; CALL , (02aa)
03d1: 0c                         ; RET
;
03d2: 18 0e f9 00 00             ; DICTP WHILE (f90e)
03d7: 0b 31 03 00 00             ; CALL ?COMPILING (0331)
03dc: 09 eb 03 00 00             ; JMPZ 03eb
03e1: 0b 01 01 00 00             ; CALL JMPNZ (0101)
03e6: 0b aa 02 00 00             ; CALL , (02aa)
03eb: 0c                         ; RET
;
03ec: 18 fe f8 00 00             ; DICTP UNTIL (f8fe)
03f1: 0b 31 03 00 00             ; CALL ?COMPILING (0331)
03f6: 09 05 04 00 00             ; JMPZ 0405
03fb: 0b f4 00 00 00             ; CALL JMPZ (00f4)
0400: 0b aa 02 00 00             ; CALL , (02aa)
0405: 0c                         ; RET
;
0406: 18 ee f8 00 00             ; DICTP LEAVE (f8ee)
040b: 0b 31 03 00 00             ; CALL ?COMPILING (0331)
0410: 09 1a 04 00 00             ; JMPZ 041a
0415: 0b 1b 01 00 00             ; CALL RET (011b)
041a: 0c                         ; RET
;
041b: 18 e0 f8 00 00             ; DICTP >IN (f8e0)
0420: 01 26 04 00 00             ; LITERAL 1062 (426)
0425: 0c                         ; RET
0426: 00                         ; RESET
0427: 00                         ; RESET
0428: 00                         ; RESET
0429: 00                         ; RESET
042a: 0c                         ; RET
;
042b: 18 d0 f8 00 00             ; DICTP isNeg (f8d0)
0430: 01 36 04 00 00             ; LITERAL 1078 (436)
0435: 0c                         ; RET
0436: 00                         ; RESET
0437: 00                         ; RESET
0438: 00                         ; RESET
0439: 00                         ; RESET
043a: 0c                         ; RET
;
043b: 18 bf f8 00 00             ; DICTP MEM_SZ (f8bf)
0440: 0e 24                      ; CLITERAL 36
0442: 02                         ; FETCH
0443: 0c                         ; RET
;
0444: 18 ac f8 00 00             ; DICTP TRACE-ON (f8ac)
0449: 0e 02                      ; CLITERAL 2
044b: 23                         ; LOGLEVEL
044c: 0c                         ; RET
;
044d: 18 98 f8 00 00             ; DICTP TRACE-OFF (f898)
0452: 0e 00                      ; CLITERAL 0
0454: 23                         ; LOGLEVEL
0455: 0c                         ; RET
;
0456: 18 85 f8 00 00             ; DICTP DEBUG-ON (f885)
045b: 0e 01                      ; CLITERAL 1
045d: 23                         ; LOGLEVEL
045e: 0c                         ; RET
;
045f: 18 71 f8 00 00             ; DICTP DEBUG-OFF (f871)
0464: 0e 00                      ; CLITERAL 0
0466: 23                         ; LOGLEVEL
0467: 0c                         ; RET
;
0468: 18 64 f8 00 00             ; DICTP R@ (f864)
046d: 22                         ; RTOD
046e: 06                         ; DUP
046f: 21                         ; DTOR
0470: 0c                         ; RET
;
0471: 18 54 f8 00 00             ; DICTP RDROP (f854)
0476: 22                         ; RTOD
0477: 05                         ; DROP
0478: 0c                         ; RET
;
0479: 18 45 f8 00 00             ; DICTP 2DUP (f845)
047e: 1a                         ; OVER
047f: 1a                         ; OVER
0480: 0c                         ; RET
;
0481: 18 35 f8 00 00             ; DICTP 2DROP (f835)
0486: 05                         ; DROP
0487: 05                         ; DROP
0488: 0c                         ; RET
;
0489: 18 26 f8 00 00             ; DICTP TUCK (f826)
048e: 04                         ; SWAP
048f: 1a                         ; OVER
0490: 0c                         ; RET
;
0491: 18 18 f8 00 00             ; DICTP NIP (f818)
0496: 04                         ; SWAP
0497: 05                         ; DROP
0498: 0c                         ; RET
;
0499: 18 0a f8 00 00             ; DICTP ROT (f80a)
049e: 21                         ; DTOR
049f: 04                         ; SWAP
04a0: 22                         ; RTOD
04a1: 04                         ; SWAP
04a2: 0c                         ; RET
;
04a3: 18 fb f7 00 00             ; DICTP -ROT (f7fb)
04a8: 04                         ; SWAP
04a9: 21                         ; DTOR
04aa: 04                         ; SWAP
04ab: 22                         ; RTOD
04ac: 0c                         ; RET
;
04ad: 18 ee f7 00 00             ; DICTP 1+ (f7ee)
04b2: 2c                         ; INC
04b3: 0c                         ; RET
;
04b4: 18 e1 f7 00 00             ; DICTP 1- (f7e1)
04b9: 2e                         ; DEC
04ba: 0c                         ; RET
;
04bb: 18 d4 f7 00 00             ; DICTP 2* (f7d4)
04c0: 0e 02                      ; CLITERAL 2
04c2: 13                         ; MUL
04c3: 0c                         ; RET
;
04c4: 18 c7 f7 00 00             ; DICTP 2/ (f7c7)
04c9: 0e 02                      ; CLITERAL 2
04cb: 14                         ; DIV
04cc: 0c                         ; RET
;
04cd: 18 ba f7 00 00             ; DICTP += (f7ba)
04d2: 1a                         ; OVER
04d3: 02                         ; FETCH
04d4: 11                         ; ADD
04d5: 04                         ; SWAP
04d6: 03                         ; STORE
04d7: 0c                         ; RET
;
04d8: 18 ad f7 00 00             ; DICTP -= (f7ad)
04dd: 1a                         ; OVER
04de: 02                         ; FETCH
04df: 04                         ; SWAP
04e0: 12                         ; SUB
04e1: 04                         ; SWAP
04e2: 03                         ; STORE
04e3: 0c                         ; RET
;
04e4: 18 a0 f7 00 00             ; DICTP ++ (f7a0)
04e9: 0e 01                      ; CLITERAL 1
04eb: 0b cd 04 00 00             ; CALL += (04cd)
04f0: 0c                         ; RET
;
04f1: 18 93 f7 00 00             ; DICTP -- (f793)
04f6: 0e 01                      ; CLITERAL 1
04f8: 0b d8 04 00 00             ; CALL -= (04d8)
04fd: 0c                         ; RET
;
04fe: 18 85 f7 00 00             ; DICTP C++ (f785)
0503: 06                         ; DUP
0504: 0f                         ; CFETCH
0505: 2c                         ; INC
0506: 04                         ; SWAP
0507: 10                         ; CSTORE
0508: 0c                         ; RET
;
0509: 18 77 f7 00 00             ; DICTP C-- (f777)
050e: 06                         ; DUP
050f: 0f                         ; CFETCH
0510: 2e                         ; DEC
0511: 04                         ; SWAP
0512: 10                         ; CSTORE
0513: 0c                         ; RET
;
0514: 18 6a f7 00 00             ; DICTP +! (f76a)
0519: 04                         ; SWAP
051a: 1a                         ; OVER
051b: 02                         ; FETCH
051c: 11                         ; ADD
051d: 04                         ; SWAP
051e: 03                         ; STORE
051f: 0c                         ; RET
;
0520: 18 5c f7 00 00             ; DICTP C+! (f75c)
0525: 04                         ; SWAP
0526: 1a                         ; OVER
0527: 0f                         ; CFETCH
0528: 11                         ; ADD
0529: 04                         ; SWAP
052a: 10                         ; CSTORE
052b: 0c                         ; RET
;
052c: 18 4f f7 00 00             ; DICTP 0= (f74f)
0531: 0e 00                      ; CLITERAL 0
0533: 16                         ; EQ
0534: 0c                         ; RET
;
0535: 18 42 f7 00 00             ; DICTP <> (f742)
053a: 16                         ; EQ
053b: 0e 00                      ; CLITERAL 0
053d: 16                         ; EQ
053e: 0c                         ; RET
;
053f: 18 35 f7 00 00             ; DICTP <= (f735)
0544: 17                         ; GT
0545: 0e 00                      ; CLITERAL 0
0547: 16                         ; EQ
0548: 0c                         ; RET
;
0549: 18 28 f7 00 00             ; DICTP >= (f728)
054e: 15                         ; LT
054f: 0e 00                      ; CLITERAL 0
0551: 16                         ; EQ
0552: 0c                         ; RET
;
0553: 18 19 f7 00 00             ; DICTP TRUE (f719)
0558: 0e 01                      ; CLITERAL 1
055a: 0c                         ; RET
;
055b: 18 09 f7 00 00             ; DICTP FALSE (f709)
0560: 0e 00                      ; CLITERAL 0
0562: 0c                         ; RET
;
0563: 18 fb f6 00 00             ; DICTP NOT (f6fb)
0568: 0e 00                      ; CLITERAL 0
056a: 16                         ; EQ
056b: 0c                         ; RET
;
056c: 18 eb f6 00 00             ; DICTP COUNT (f6eb)
0571: 06                         ; DUP
0572: 2c                         ; INC
0573: 04                         ; SWAP
0574: 0f                         ; CFETCH
0575: 0c                         ; RET
;
0576: 18 dc f6 00 00             ; DICTP TYPE (f6dc)
057b: 1a                         ; OVER
057c: 11                         ; ADD
057d: 04                         ; SWAP
057e: 1a                         ; OVER
057f: 1a                         ; OVER
0580: 17                         ; GT
0581: 0e 00                      ; CLITERAL 0
0583: 16                         ; EQ
0584: 09 8c 05 00 00             ; JMPZ 058c
0589: 05                         ; DROP
058a: 05                         ; DROP
058b: 0c                         ; RET
058c: 06                         ; DUP
058d: 0f                         ; CFETCH
058e: 19                         ; EMIT
058f: 2c                         ; INC
0590: 08 7e 05 00 00             ; JMP 057e
0595: 0c                         ; RET
;
0596: 18 cf f6 00 00             ; DICTP CT (f6cf)
059b: 0b 6c 05 00 00             ; CALL COUNT (056c)
05a0: 0b 76 05 00 00             ; CALL TYPE (0576)
05a5: 0c                         ; RET
;
05a6: 18 c3 f6 00 00             ; DICTP \ (f6c3)
05ab: 0e 00                      ; CLITERAL 0
05ad: 0b 1b 04 00 00             ; CALL >IN (041b)
05b2: 02                         ; FETCH
05b3: 10                         ; CSTORE
05b4: 0c                         ; RET
;
05b5: 18 b7 f6 00 00             ; DICTP ( (f6b7)
05ba: 0b 1b 04 00 00             ; CALL >IN (041b)
05bf: 02                         ; FETCH
05c0: 0f                         ; CFETCH
05c1: 06                         ; DUP
05c2: 0e 00                      ; CLITERAL 0
05c4: 16                         ; EQ
05c5: 09 e6 05 00 00             ; JMPZ 05e6
05ca: 07 13 6d 69 73 73 69 6e 67 20 63 6c 6f 73 69 6e 67 20 27 29 27 00 ; SLITERAL (05cb) [missing closing ')']
05e0: 0b 96 05 00 00             ; CALL CT (0596)
05e5: fe                         ; RESET
05e6: 0b 1b 04 00 00             ; CALL >IN (041b)
05eb: 0b e4 04 00 00             ; CALL ++ (04e4)
05f0: 0e 29                      ; CLITERAL 41
05f2: 16                         ; EQ
05f3: 09 f9 05 00 00             ; JMPZ 05f9
05f8: 0c                         ; RET
05f9: 08 ba 05 00 00             ; JMP 05ba
05fe: 0c                         ; RET
;
05ff: 18 aa f6 00 00             ; DICTP BL (f6aa)
0604: 0e 20                      ; CLITERAL 32
0606: 19                         ; EMIT
0607: 0c                         ; RET
;
0608: 18 9b f6 00 00             ; DICTP CRLF (f69b)
060d: 0e 0d                      ; CLITERAL 13
060f: 19                         ; EMIT
0610: 0e 0a                      ; CLITERAL 10
0612: 19                         ; EMIT
0613: 0c                         ; RET
;
0614: 18 8e f6 00 00             ; DICTP CR (f68e)
0619: 0e 0d                      ; CLITERAL 13
061b: 19                         ; EMIT
061c: 0e 0a                      ; CLITERAL 10
061e: 19                         ; EMIT
061f: 0c                         ; RET
;
0620: 18 7c f6 00 00             ; DICTP BETWEEN (f67c)
0625: 0e 02                      ; CLITERAL 2
0627: 25                         ; PICK
0628: 15                         ; LT
0629: 09 33 06 00 00             ; JMPZ 0633
062e: 05                         ; DROP
062f: 05                         ; DROP
0630: 0e 00                      ; CLITERAL 0
0632: 0c                         ; RET
0633: 15                         ; LT
0634: 0e 00                      ; CLITERAL 0
0636: 16                         ; EQ
0637: 0c                         ; RET
;
0638: 18 6c f6 00 00             ; DICTP (tmp) (f66c)
063d: 01 43 06 00 00             ; LITERAL 1603 (643)
0642: 0c                         ; RET
0643: 00                         ; RESET
0644: 00                         ; RESET
0645: 00                         ; RESET
0646: 00                         ; RESET
0647: 0c                         ; RET
;
0648: 18 59 f6 00 00             ; DICTP tmp-init (f659)
064d: 0b 58 00 00 00             ; CALL (LAST) (0058)
0652: 02                         ; FETCH
0653: 0b 38 06 00 00             ; CALL (tmp) (0638)
0658: 03                         ; STORE
0659: 0c                         ; RET
;
065a: 18 47 f6 00 00             ; DICTP tmp-cur (f647)
065f: 0b 38 06 00 00             ; CALL (tmp) (0638)
0664: 02                         ; FETCH
0665: 0c                         ; RET
;
0666: 18 33 f6 00 00             ; DICTP tmp-alloc (f633)
066b: 0b 38 06 00 00             ; CALL (tmp) (0638)
0670: 04                         ; SWAP
0671: 1a                         ; OVER
0672: 02                         ; FETCH
0673: 04                         ; SWAP
0674: 12                         ; SUB
0675: 04                         ; SWAP
0676: 03                         ; STORE
0677: 0b 5a 06 00 00             ; CALL tmp-cur (065a)
067c: 0c                         ; RET
;
067d: 18 25 f6 00 00             ; DICTP PAD (f625)
0682: 0b 48 06 00 00             ; CALL tmp-init (0648)
0687: 0e c8                      ; CLITERAL 200
0689: 0b 66 06 00 00             ; CALL tmp-alloc (0666)
068e: 0c                         ; RET
;
068f: 18 12 f6 00 00             ; DICTP getInput (f612)
0694: 0b 7d 06 00 00             ; CALL PAD (067d)
0699: 0e 80                      ; CLITERAL 128
069b: 0e 00                      ; CLITERAL 0
069d: 1e                         ; FREADLINE
069e: 05                         ; DROP
069f: 0b 7d 06 00 00             ; CALL PAD (067d)
06a4: 0c                         ; RET
;
06a5: 18 01 f6 00 00             ; DICTP skipWS (f601)
06aa: 06                         ; DUP
06ab: 0f                         ; CFETCH
06ac: 06                         ; DUP
06ad: 09 c6 06 00 00             ; JMPZ 06c6
06b2: 0e 20                      ; CLITERAL 32
06b4: 17                         ; GT
06b5: 09 c0 06 00 00             ; JMPZ 06c0
06ba: 0c                         ; RET
06bb: 08 c1 06 00 00             ; JMP 06c1
06c0: 2c                         ; INC
06c1: 08 c8 06 00 00             ; JMP 06c8
06c6: 05                         ; DROP
06c7: 0c                         ; RET
06c8: 08 aa 06 00 00             ; JMP 06aa
06cd: 0c                         ; RET
;
06ce: 18 ec f5 00 00             ; DICTP getOneWord (f5ec)
06d3: 06                         ; DUP
06d4: 21                         ; DTOR
06d5: 21                         ; DTOR
06d6: 22                         ; RTOD
06d7: 06                         ; DUP
06d8: 21                         ; DTOR
06d9: 0f                         ; CFETCH
06da: 0e 20                      ; CLITERAL 32
06dc: 17                         ; GT
06dd: 09 ea 06 00 00             ; JMPZ 06ea
06e2: 22                         ; RTOD
06e3: 2c                         ; INC
06e4: 21                         ; DTOR
06e5: 08 00 07 00 00             ; JMP 0700
06ea: 22                         ; RTOD
06eb: 06                         ; DUP
06ec: 21                         ; DTOR
06ed: 0f                         ; CFETCH
06ee: 09 fc 06 00 00             ; JMPZ 06fc
06f3: 0e 00                      ; CLITERAL 0
06f5: 22                         ; RTOD
06f6: 06                         ; DUP
06f7: 21                         ; DTOR
06f8: 10                         ; CSTORE
06f9: 22                         ; RTOD
06fa: 2c                         ; INC
06fb: 21                         ; DTOR
06fc: 22                         ; RTOD
06fd: 22                         ; RTOD
06fe: 04                         ; SWAP
06ff: 0c                         ; RET
0700: 08 d6 06 00 00             ; JMP 06d6
0705: 0c                         ; RET
;
0706: 18 d8 f5 00 00             ; DICTP DICT>NEXT (f5d8)
070b: 0c                         ; RET
;
070c: 18 c6 f5 00 00             ; DICTP DICT>XT (f5c6)
0711: 0b 48 00 00 00             ; CALL CELL (0048)
0716: 11                         ; ADD
0717: 0c                         ; RET
;
0718: 18 b1 f5 00 00             ; DICTP DICT>FLAGS (f5b1)
071d: 0e 02                      ; CLITERAL 2
071f: 0b 48 00 00 00             ; CALL CELL (0048)
0724: 13                         ; MUL
0725: 11                         ; ADD
0726: 0c                         ; RET
;
0727: 18 9d f5 00 00             ; DICTP DICT>NAME (f59d)
072c: 0b 18 07 00 00             ; CALL DICT>FLAGS (0718)
0731: 2c                         ; INC
0732: 0c                         ; RET
;
0733: 18 89 f5 00 00             ; DICTP NEXT>DICT (f589)
0738: 0c                         ; RET
;
0739: 18 77 f5 00 00             ; DICTP XT>DICT (f577)
073e: 0b 48 00 00 00             ; CALL CELL (0048)
0743: 12                         ; SUB
0744: 0c                         ; RET
;
0745: 18 62 f5 00 00             ; DICTP FLAGS>DICT (f562)
074a: 0e 02                      ; CLITERAL 2
074c: 0b 48 00 00 00             ; CALL CELL (0048)
0751: 13                         ; MUL
0752: 12                         ; SUB
0753: 0c                         ; RET
;
0754: 18 4e f5 00 00             ; DICTP NAME>DICT (f54e)
0759: 2e                         ; DEC
075a: 0e 02                      ; CLITERAL 2
075c: 0b 48 00 00 00             ; CALL CELL (0048)
0761: 13                         ; MUL
0762: 12                         ; SUB
0763: 0c                         ; RET
;
0764: 18 39 f5 00 00             ; DICTP DICT.GetXT (f539)
0769: 0b 0c 07 00 00             ; CALL DICT>XT (070c)
076e: 02                         ; FETCH
076f: 0c                         ; RET
;
0770: 18 21 f5 00 00             ; DICTP DICT.GetFLAGS (f521)
0775: 0b 18 07 00 00             ; CALL DICT>FLAGS (0718)
077a: 0f                         ; CFETCH
077b: 0c                         ; RET
;
077c: 18 0c f5 00 00             ; DICTP DICTP>NAME (f50c)
0781: 2c                         ; INC
0782: 02                         ; FETCH
0783: 0b 27 07 00 00             ; CALL DICT>NAME (0727)
0788: 0c                         ; RET
;
0789: 18 f6 f4 00 00             ; DICTP XT.GetDICTP (f4f6)
078e: 06                         ; DUP
078f: 0f                         ; CFETCH
0790: 0e 18                      ; CLITERAL 24
0792: 16                         ; EQ
0793: 09 9f 07 00 00             ; JMPZ 079f
0798: 2c                         ; INC
0799: 02                         ; FETCH
079a: 08 a1 07 00 00             ; JMP 07a1
079f: 05                         ; DROP
07a0: fe                         ; RESET
07a1: 0c                         ; RET
;
07a2: 18 d9 f4 00 00             ; DICTP FLAGS.ISIMMEDIATE? (f4d9)
07a7: 0e 01                      ; CLITERAL 1
07a9: 24                         ; AND
07aa: 0c                         ; RET
;
07ab: 18 bf f4 00 00             ; DICTP FLAGS.ISINLINE? (f4bf)
07b0: 0e 02                      ; CLITERAL 2
07b2: 24                         ; AND
07b3: 0c                         ; RET
;
07b4: 18 a3 f4 00 00             ; DICTP DICT.GetIMMEDIATE (f4a3)
07b9: 0b 70 07 00 00             ; CALL DICT.GetFLAGS (0770)
07be: 0b a2 07 00 00             ; CALL FLAGS.ISIMMEDIATE? (07a2)
07c3: 0c                         ; RET
;
07c4: 18 8a f4 00 00             ; DICTP DICT.GetINLINE (f48a)
07c9: 0b 70 07 00 00             ; CALL DICT.GetFLAGS (0770)
07ce: 0b ab 07 00 00             ; CALL FLAGS.ISINLINE? (07ab)
07d3: 0c                         ; RET
;
07d4: 18 75 f4 00 00             ; DICTP findInDict (f475)
07d9: 0b 58 00 00 00             ; CALL (LAST) (0058)
07de: 02                         ; FETCH
07df: 21                         ; DTOR
07e0: 22                         ; RTOD
07e1: 06                         ; DUP
07e2: 21                         ; DTOR
07e3: 06                         ; DUP
07e4: 09 0d 08 00 00             ; JMPZ 080d
07e9: 0b 27 07 00 00             ; CALL DICT>NAME (0727)
07ee: 2c                         ; INC
07ef: 1a                         ; OVER
07f0: 28                         ; COMPAREI
07f1: 09 08 08 00 00             ; JMPZ 0808
07f6: 05                         ; DROP
07f7: 22                         ; RTOD
07f8: 06                         ; DUP
07f9: 21                         ; DTOR
07fa: 0b 64 07 00 00             ; CALL DICT.GetXT (0764)
07ff: 22                         ; RTOD
0800: 0b 70 07 00 00             ; CALL DICT.GetFLAGS (0770)
0805: 0e 01                      ; CLITERAL 1
0807: 0c                         ; RET
0808: 08 15 08 00 00             ; JMP 0815
080d: 05                         ; DROP
080e: 05                         ; DROP
080f: 22                         ; RTOD
0810: 0e 00                      ; CLITERAL 0
0812: 0e 00                      ; CLITERAL 0
0814: 0c                         ; RET
0815: 22                         ; RTOD
0816: 02                         ; FETCH
0817: 21                         ; DTOR
0818: 08 e0 07 00 00             ; JMP 07e0
081d: 0c                         ; RET
;
081e: 18 64 f4 00 00             ; DICTP isHEX? (f464)
0823: 0b 40 00 00 00             ; CALL BASE (0040)
0828: 02                         ; FETCH
0829: 0e 10                      ; CLITERAL 16
082b: 16                         ; EQ
082c: 0c                         ; RET
;
082d: 18 4f f4 00 00             ; DICTP isNumChar? (f44f)
0832: 06                         ; DUP
0833: 0e 30                      ; CLITERAL 48
0835: 0e 39                      ; CLITERAL 57
0837: 0b 20 06 00 00             ; CALL BETWEEN (0620)
083c: 09 47 08 00 00             ; JMPZ 0847
0841: 0e 30                      ; CLITERAL 48
0843: 12                         ; SUB
0844: 0e 01                      ; CLITERAL 1
0846: 0c                         ; RET
0847: 0b 1e 08 00 00             ; CALL isHEX? (081e)
084c: 09 7b 08 00 00             ; JMPZ 087b
0851: 06                         ; DUP
0852: 0e 41                      ; CLITERAL 65
0854: 0e 46                      ; CLITERAL 70
0856: 0b 20 06 00 00             ; CALL BETWEEN (0620)
085b: 09 66 08 00 00             ; JMPZ 0866
0860: 0e 37                      ; CLITERAL 55
0862: 12                         ; SUB
0863: 0e 01                      ; CLITERAL 1
0865: 0c                         ; RET
0866: 06                         ; DUP
0867: 0e 61                      ; CLITERAL 97
0869: 0e 66                      ; CLITERAL 102
086b: 0b 20 06 00 00             ; CALL BETWEEN (0620)
0870: 09 7b 08 00 00             ; JMPZ 087b
0875: 0e 57                      ; CLITERAL 87
0877: 12                         ; SUB
0878: 0e 01                      ; CLITERAL 1
087a: 0c                         ; RET
087b: 0e 00                      ; CLITERAL 0
087d: 0c                         ; RET
;
087e: 18 3e f4 00 00             ; DICTP NEGATE (f43e)
0883: 0e 00                      ; CLITERAL 0
0885: 04                         ; SWAP
0886: 12                         ; SUB
0887: 0c                         ; RET
;
0888: 18 30 f4 00 00             ; DICTP ABS (f430)
088d: 06                         ; DUP
088e: 0e 00                      ; CLITERAL 0
0890: 15                         ; LT
0891: 09 9b 08 00 00             ; JMPZ 089b
0896: 0b 7e 08 00 00             ; CALL NEGATE (087e)
089b: 0c                         ; RET
;
089c: 18 1c f4 00 00             ; DICTP isNumber? (f41c)
08a1: 06                         ; DUP
08a2: 0f                         ; CFETCH
08a3: 0e 2d                      ; CLITERAL 45
08a5: 16                         ; EQ
08a6: 06                         ; DUP
08a7: 0b 2b 04 00 00             ; CALL isNeg (042b)
08ac: 10                         ; CSTORE
08ad: 09 b3 08 00 00             ; JMPZ 08b3
08b2: 2c                         ; INC
08b3: 0e 00                      ; CLITERAL 0
08b5: 21                         ; DTOR
08b6: 06                         ; DUP
08b7: 0f                         ; CFETCH
08b8: 06                         ; DUP
08b9: 0e 00                      ; CLITERAL 0
08bb: 16                         ; EQ
08bc: 09 d7 08 00 00             ; JMPZ 08d7
08c1: 05                         ; DROP
08c2: 05                         ; DROP
08c3: 22                         ; RTOD
08c4: 0b 2b 04 00 00             ; CALL isNeg (042b)
08c9: 0f                         ; CFETCH
08ca: 09 d4 08 00 00             ; JMPZ 08d4
08cf: 0b 7e 08 00 00             ; CALL NEGATE (087e)
08d4: 0e 01                      ; CLITERAL 1
08d6: 0c                         ; RET
08d7: 0b 2d 08 00 00             ; CALL isNumChar? (082d)
08dc: 09 f1 08 00 00             ; JMPZ 08f1
08e1: 22                         ; RTOD
08e2: 0b 40 00 00 00             ; CALL BASE (0040)
08e7: 02                         ; FETCH
08e8: 13                         ; MUL
08e9: 11                         ; ADD
08ea: 21                         ; DTOR
08eb: 2c                         ; INC
08ec: 08 f6 08 00 00             ; JMP 08f6
08f1: 05                         ; DROP
08f2: 22                         ; RTOD
08f3: 0e 00                      ; CLITERAL 0
08f5: 0c                         ; RET
08f6: 08 b6 08 00 00             ; JMP 08b6
08fb: 0c                         ; RET
;
08fc: 18 0e f4 00 00             ; DICTP MOD (f40e)
0901: 1a                         ; OVER
0902: 1a                         ; OVER
0903: 14                         ; DIV
0904: 13                         ; MUL
0905: 12                         ; SUB
0906: 0c                         ; RET
;
0907: 18 ff f3 00 00             ; DICTP /MOD (f3ff)
090c: 1a                         ; OVER
090d: 1a                         ; OVER
090e: 14                         ; DIV
090f: 06                         ; DUP
0910: 21                         ; DTOR
0911: 13                         ; MUL
0912: 12                         ; SUB
0913: 22                         ; RTOD
0914: 0c                         ; RET
;
0915: 18 ef f3 00 00             ; DICTP SPACE (f3ef)
091a: 0e 20                      ; CLITERAL 32
091c: 19                         ; EMIT
091d: 0c                         ; RET
;
091e: 18 e0 f3 00 00             ; DICTP #NEG (f3e0)
0923: 01 29 09 00 00             ; LITERAL 2345 (929)
0928: 0c                         ; RET
0929: 00                         ; RESET
092a: 00                         ; RESET
092b: 00                         ; RESET
092c: 00                         ; RESET
092d: 0c                         ; RET
;
092e: 18 d1 f3 00 00             ; DICTP #LEN (f3d1)
0933: 01 39 09 00 00             ; LITERAL 2361 (939)
0938: 0c                         ; RET
0939: 05                         ; DROP
093a: 00                         ; RESET
093b: 00                         ; RESET
093c: 00                         ; RESET
093d: 0c                         ; RET
;
093e: 18 c4 f3 00 00             ; DICTP <# (f3c4)
0943: 0b 1e 09 00 00             ; CALL #NEG (091e)
0948: 0b 27 03 00 00             ; CALL OFF (0327)
094d: 0b 2e 09 00 00             ; CALL #LEN (092e)
0952: 0b 27 03 00 00             ; CALL OFF (0327)
0957: 06                         ; DUP
0958: 0e 00                      ; CLITERAL 0
095a: 15                         ; LT
095b: 09 6f 09 00 00             ; JMPZ 096f
0960: 0b 7e 08 00 00             ; CALL NEGATE (087e)
0965: 0b 1e 09 00 00             ; CALL #NEG (091e)
096a: 0b 1d 03 00 00             ; CALL ON (031d)
096f: 0e 00                      ; CLITERAL 0
0971: 04                         ; SWAP
0972: 0c                         ; RET
;
0973: 18 b8 f3 00 00             ; DICTP # (f3b8)
0978: 0b 40 00 00 00             ; CALL BASE (0040)
097d: 02                         ; FETCH
097e: 0b 07 09 00 00             ; CALL /MOD (0907)
0983: 04                         ; SWAP
0984: 0e 30                      ; CLITERAL 48
0986: 11                         ; ADD
0987: 06                         ; DUP
0988: 0e 39                      ; CLITERAL 57
098a: 17                         ; GT
098b: 09 93 09 00 00             ; JMPZ 0993
0990: 0e 07                      ; CLITERAL 7
0992: 11                         ; ADD
0993: 0b 2e 09 00 00             ; CALL #LEN (092e)
0998: 0b e4 04 00 00             ; CALL ++ (04e4)
099d: 04                         ; SWAP
099e: 0c                         ; RET
;
099f: 18 ab f3 00 00             ; DICTP #S (f3ab)
09a4: 0b 73 09 00 00             ; CALL # (0973)
09a9: 06                         ; DUP
09aa: 0e 00                      ; CLITERAL 0
09ac: 16                         ; EQ
09ad: 09 a4 09 00 00             ; JMPZ 09a4
09b2: 0c                         ; RET
;
09b3: 18 9e f3 00 00             ; DICTP #> (f39e)
09b8: 0c                         ; RET
;
09b9: 18 90 f3 00 00             ; DICTP #P- (f390)
09be: 05                         ; DROP
09bf: 0b 1e 09 00 00             ; CALL #NEG (091e)
09c4: 02                         ; FETCH
09c5: 09 cd 09 00 00             ; JMPZ 09cd
09ca: 0e 2d                      ; CLITERAL 45
09cc: 19                         ; EMIT
09cd: 0c                         ; RET
;
09ce: 18 83 f3 00 00             ; DICTP #P (f383)
09d3: 0b b9 09 00 00             ; CALL #P- (09b9)
09d8: 19                         ; EMIT
09d9: 06                         ; DUP
09da: 0e 00                      ; CLITERAL 0
09dc: 16                         ; EQ
09dd: 09 d8 09 00 00             ; JMPZ 09d8
09e2: 05                         ; DROP
09e3: 0c                         ; RET
;
09e4: 18 75 f3 00 00             ; DICTP (.) (f375)
09e9: 0b 3e 09 00 00             ; CALL <# (093e)
09ee: 0b 9f 09 00 00             ; CALL #S (099f)
09f3: 0b b3 09 00 00             ; CALL #> (09b3)
09f8: 0b ce 09 00 00             ; CALL #P (09ce)
09fd: 0c                         ; RET
;
09fe: 18 69 f3 00 00             ; DICTP . (f369)
0a03: 0b e4 09 00 00             ; CALL (.) (09e4)
0a08: 0b 15 09 00 00             ; CALL SPACE (0915)
0a0d: 0c                         ; RET
;
0a0e: 18 5a f3 00 00             ; DICTP HEX. (f35a)
0a13: 0b 40 00 00 00             ; CALL BASE (0040)
0a18: 02                         ; FETCH
0a19: 04                         ; SWAP
0a1a: 0b e5 02 00 00             ; CALL HEX (02e5)
0a1f: 06                         ; DUP
0a20: 0e 10                      ; CLITERAL 16
0a22: 15                         ; LT
0a23: 09 2b 0a 00 00             ; JMPZ 0a2b
0a28: 0e 30                      ; CLITERAL 48
0a2a: 19                         ; EMIT
0a2b: 0b e4 09 00 00             ; CALL (.) (09e4)
0a30: 0b 40 00 00 00             ; CALL BASE (0040)
0a35: 03                         ; STORE
0a36: 0c                         ; RET
;
0a37: 18 47 f3 00 00             ; DICTP DECIMAL. (f347)
0a3c: 0b 40 00 00 00             ; CALL BASE (0040)
0a41: 02                         ; FETCH
0a42: 04                         ; SWAP
0a43: 0b f3 02 00 00             ; CALL DECIMAL (02f3)
0a48: 0b e4 09 00 00             ; CALL (.) (09e4)
0a4d: 0b 40 00 00 00             ; CALL BASE (0040)
0a52: 03                         ; STORE
0a53: 0c                         ; RET
;
0a54: 18 35 f3 00 00             ; DICTP BINARY. (f335)
0a59: 0b 40 00 00 00             ; CALL BASE (0040)
0a5e: 02                         ; FETCH
0a5f: 04                         ; SWAP
0a60: 0b 0f 03 00 00             ; CALL BINARY (030f)
0a65: 0b e4 09 00 00             ; CALL (.) (09e4)
0a6a: 0b 40 00 00 00             ; CALL BASE (0040)
0a6f: 03                         ; STORE
0a70: 0c                         ; RET
;
0a71: 18 27 f3 00 00             ; DICTP MIN (f327)
0a76: 1a                         ; OVER
0a77: 1a                         ; OVER
0a78: 17                         ; GT
0a79: 09 7f 0a 00 00             ; JMPZ 0a7f
0a7e: 04                         ; SWAP
0a7f: 05                         ; DROP
0a80: 0c                         ; RET
;
0a81: 18 19 f3 00 00             ; DICTP MAX (f319)
0a86: 1a                         ; OVER
0a87: 1a                         ; OVER
0a88: 15                         ; LT
0a89: 09 8f 0a 00 00             ; JMPZ 0a8f
0a8e: 04                         ; SWAP
0a8f: 05                         ; DROP
0a90: 0c                         ; RET
;
0a91: 18 0c f3 00 00             ; DICTP .S (f30c)
0a96: 0e 20                      ; CLITERAL 32
0a98: 19                         ; EMIT
0a99: 26                         ; DEPTH
0a9a: 0e 00                      ; CLITERAL 0
0a9c: 15                         ; LT
0a9d: 09 c0 0a 00 00             ; JMPZ 0ac0
0aa2: 07 10 53 74 61 63 6b 20 75 6e 64 65 72 66 6c 6f 77 21 00 ; SLITERAL (0aa3) [Stack underflow!]
0ab5: 0b 6c 05 00 00             ; CALL COUNT (056c)
0aba: 0b 76 05 00 00             ; CALL TYPE (0576)
0abf: fe                         ; RESET
0ac0: 26                         ; DEPTH
0ac1: 0e 00                      ; CLITERAL 0
0ac3: 16                         ; EQ
0ac4: 09 d3 0a 00 00             ; JMPZ 0ad3
0ac9: 0e 28                      ; CLITERAL 40
0acb: 19                         ; EMIT
0acc: 0e ed                      ; CLITERAL 237
0ace: 19                         ; EMIT
0acf: 0e 29                      ; CLITERAL 41
0ad1: 19                         ; EMIT
0ad2: 0c                         ; RET
0ad3: 0e 28                      ; CLITERAL 40
0ad5: 19                         ; EMIT
0ad6: 0b 15 09 00 00             ; CALL SPACE (0915)
0adb: 26                         ; DEPTH
0adc: 2e                         ; DEC
0add: 21                         ; DTOR
0ade: 22                         ; RTOD
0adf: 06                         ; DUP
0ae0: 21                         ; DTOR
0ae1: 25                         ; PICK
0ae2: 0b fe 09 00 00             ; CALL . (09fe)
0ae7: 22                         ; RTOD
0ae8: 06                         ; DUP
0ae9: 21                         ; DTOR
0aea: 09 f7 0a 00 00             ; JMPZ 0af7
0aef: 22                         ; RTOD
0af0: 2e                         ; DEC
0af1: 21                         ; DTOR
0af2: 08 fd 0a 00 00             ; JMP 0afd
0af7: 22                         ; RTOD
0af8: 05                         ; DROP
0af9: 0e 29                      ; CLITERAL 41
0afb: 19                         ; EMIT
0afc: 0c                         ; RET
0afd: 08 de 0a 00 00             ; JMP 0ade
0b02: 0c                         ; RET
;
0b03: 18 f8 f2 00 00             ; DICTP .(MEM_SZ) (f2f8)
0b08: 07 08 4d 65 6d 6f 72 79 3a 20 00 ; SLITERAL (0b09) [Memory: ]
0b13: 0b 96 05 00 00             ; CALL CT (0596)
0b18: 0b 3b 04 00 00             ; CALL MEM_SZ (043b)
0b1d: 06                         ; DUP
0b1e: 0b 0e 0a 00 00             ; CALL HEX. (0a0e)
0b23: 07 02 20 28 00             ; SLITERAL (0b24) [ (]
0b28: 0b 96 05 00 00             ; CALL CT (0596)
0b2d: 0b e4 09 00 00             ; CALL (.) (09e4)
0b32: 07 01 29 00                ; SLITERAL (0b33) [)]
0b36: 0b 96 05 00 00             ; CALL CT (0596)
0b3b: 0c                         ; RET
;
0b3c: 18 e6 f2 00 00             ; DICTP .(HERE) (f2e6)
0b41: 07 06 48 45 52 45 3a 20 00 ; SLITERAL (0b42) [HERE: ]
0b4a: 0b 96 05 00 00             ; CALL CT (0596)
0b4f: 0b 50 00 00 00             ; CALL (HERE) (0050)
0b54: 02                         ; FETCH
0b55: 06                         ; DUP
0b56: 0b 0e 0a 00 00             ; CALL HEX. (0a0e)
0b5b: 07 02 20 28 00             ; SLITERAL (0b5c) [ (]
0b60: 0b 96 05 00 00             ; CALL CT (0596)
0b65: 0b e4 09 00 00             ; CALL (.) (09e4)
0b6a: 07 01 29 00                ; SLITERAL (0b6b) [)]
0b6e: 0b 96 05 00 00             ; CALL CT (0596)
0b73: 0c                         ; RET
;
0b74: 18 d4 f2 00 00             ; DICTP .(LAST) (f2d4)
0b79: 07 06 4c 41 53 54 3a 20 00 ; SLITERAL (0b7a) [LAST: ]
0b82: 0b 96 05 00 00             ; CALL CT (0596)
0b87: 0b 58 00 00 00             ; CALL (LAST) (0058)
0b8c: 02                         ; FETCH
0b8d: 06                         ; DUP
0b8e: 0b 0e 0a 00 00             ; CALL HEX. (0a0e)
0b93: 07 02 20 28 00             ; SLITERAL (0b94) [ (]
0b98: 0b 96 05 00 00             ; CALL CT (0596)
0b9d: 0b e4 09 00 00             ; CALL (.) (09e4)
0ba2: 07 01 29 00                ; SLITERAL (0ba3) [)]
0ba6: 0b 96 05 00 00             ; CALL CT (0596)
0bab: 0c                         ; RET
;
0bac: 18 be f2 00 00             ; DICTP .WORD-SHORT (f2be)
0bb1: 06                         ; DUP
0bb2: 0b 27 07 00 00             ; CALL DICT>NAME (0727)
0bb7: 0b 96 05 00 00             ; CALL CT (0596)
0bbc: 0e 20                      ; CLITERAL 32
0bbe: 19                         ; EMIT
0bbf: 02                         ; FETCH
0bc0: 0c                         ; RET
;
0bc1: 18 ae f2 00 00             ; DICTP WORDS (f2ae)
0bc6: 0b 58 00 00 00             ; CALL (LAST) (0058)
0bcb: 02                         ; FETCH
0bcc: 06                         ; DUP
0bcd: 02                         ; FETCH
0bce: 0e 00                      ; CLITERAL 0
0bd0: 16                         ; EQ
0bd1: 09 de 0b 00 00             ; JMPZ 0bde
0bd6: 05                         ; DROP
0bd7: 0e 0d                      ; CLITERAL 13
0bd9: 19                         ; EMIT
0bda: 0e 0a                      ; CLITERAL 10
0bdc: 19                         ; EMIT
0bdd: 0c                         ; RET
0bde: 0b ac 0b 00 00             ; CALL .WORD-SHORT (0bac)
0be3: 08 cc 0b 00 00             ; JMP 0bcc
0be8: 0c                         ; RET
;
0be9: 18 99 f2 00 00             ; DICTP .WORD-LONG (f299)
0bee: 06                         ; DUP
0bef: 0b 0e 0a 00 00             ; CALL HEX. (0a0e)
0bf4: 0e 3a                      ; CLITERAL 58
0bf6: 19                         ; EMIT
0bf7: 0e 20                      ; CLITERAL 32
0bf9: 19                         ; EMIT
0bfa: 06                         ; DUP
0bfb: 0b 27 07 00 00             ; CALL DICT>NAME (0727)
0c00: 0b 96 05 00 00             ; CALL CT (0596)
0c05: 0e 20                      ; CLITERAL 32
0c07: 19                         ; EMIT
0c08: 06                         ; DUP
0c09: 0b 64 07 00 00             ; CALL DICT.GetXT (0764)
0c0e: 0e 28                      ; CLITERAL 40
0c10: 19                         ; EMIT
0c11: 0b 0e 0a 00 00             ; CALL HEX. (0a0e)
0c16: 0e 29                      ; CLITERAL 41
0c18: 19                         ; EMIT
0c19: 06                         ; DUP
0c1a: 0b 18 07 00 00             ; CALL DICT>FLAGS (0718)
0c1f: 0f                         ; CFETCH
0c20: 06                         ; DUP
0c21: 07 09 2c 20 46 6c 61 67 73 3a 20 00 ; SLITERAL (0c22) [, Flags: ]
0c2d: 0b 96 05 00 00             ; CALL CT (0596)
0c32: 0b 0e 0a 00 00             ; CALL HEX. (0a0e)
0c37: 06                         ; DUP
0c38: 0b ab 07 00 00             ; CALL FLAGS.ISINLINE? (07ab)
0c3d: 09 53 0c 00 00             ; JMPZ 0c53
0c42: 07 09 20 28 49 4e 4c 49 4e 45 29 00 ; SLITERAL (0c43) [ (INLINE)]
0c4e: 0b 96 05 00 00             ; CALL CT (0596)
0c53: 0b a2 07 00 00             ; CALL FLAGS.ISIMMEDIATE? (07a2)
0c58: 09 71 0c 00 00             ; JMPZ 0c71
0c5d: 07 0c 20 28 49 4d 4d 45 44 49 41 54 45 29 00 ; SLITERAL (0c5e) [ (IMMEDIATE)]
0c6c: 0b 96 05 00 00             ; CALL CT (0596)
0c71: 0e 0d                      ; CLITERAL 13
0c73: 19                         ; EMIT
0c74: 0e 0a                      ; CLITERAL 10
0c76: 19                         ; EMIT
0c77: 02                         ; FETCH
0c78: 0c                         ; RET
;
0c79: 18 88 f2 00 00             ; DICTP WORDSV (f288)
0c7e: 0b 74 0b 00 00             ; CALL .(LAST) (0b74)
0c83: 0e 0d                      ; CLITERAL 13
0c85: 19                         ; EMIT
0c86: 0e 0a                      ; CLITERAL 10
0c88: 19                         ; EMIT
0c89: 0b 58 00 00 00             ; CALL (LAST) (0058)
0c8e: 02                         ; FETCH
0c8f: 06                         ; DUP
0c90: 02                         ; FETCH
0c91: 0e 00                      ; CLITERAL 0
0c93: 16                         ; EQ
0c94: 09 a1 0c 00 00             ; JMPZ 0ca1
0c99: 05                         ; DROP
0c9a: 0e 0d                      ; CLITERAL 13
0c9c: 19                         ; EMIT
0c9d: 0e 0a                      ; CLITERAL 10
0c9f: 19                         ; EMIT
0ca0: 0c                         ; RET
0ca1: 0b e9 0b 00 00             ; CALL .WORD-LONG (0be9)
0ca6: 08 8f 0c 00 00             ; JMP 0c8f
0cab: 0c                         ; RET
;
0cac: 18 74 f2 00 00             ; DICTP NUM-WORDS (f274)
0cb1: 0e 00                      ; CLITERAL 0
0cb3: 21                         ; DTOR
0cb4: 0b 58 00 00 00             ; CALL (LAST) (0058)
0cb9: 02                         ; FETCH
0cba: 06                         ; DUP
0cbb: 02                         ; FETCH
0cbc: 0e 00                      ; CLITERAL 0
0cbe: 16                         ; EQ
0cbf: 09 cd 0c 00 00             ; JMPZ 0ccd
0cc4: 05                         ; DROP
0cc5: 22                         ; RTOD
0cc6: 0e 0d                      ; CLITERAL 13
0cc8: 19                         ; EMIT
0cc9: 0e 0a                      ; CLITERAL 10
0ccb: 19                         ; EMIT
0ccc: 0c                         ; RET
0ccd: 22                         ; RTOD
0cce: 2c                         ; INC
0ccf: 21                         ; DTOR
0cd0: 02                         ; FETCH
0cd1: 08 ba 0c 00 00             ; JMP 0cba
0cd6: 0c                         ; RET
;
0cd7: 18 63 f2 00 00             ; DICTP .lastx (f263)
0cdc: 0e 0d                      ; CLITERAL 13
0cde: 19                         ; EMIT
0cdf: 0e 0a                      ; CLITERAL 10
0ce1: 19                         ; EMIT
0ce2: 0b 58 00 00 00             ; CALL (LAST) (0058)
0ce7: 02                         ; FETCH
0ce8: 04                         ; SWAP
0ce9: 0e 00                      ; CLITERAL 0
0ceb: 1a                         ; OVER
0cec: 1a                         ; OVER
0ced: 17                         ; GT
0cee: 09 06 0d 00 00             ; JMPZ 0d06
0cf3: 21                         ; DTOR
0cf4: 04                         ; SWAP
0cf5: 22                         ; RTOD
0cf6: 04                         ; SWAP
0cf7: 0b e9 0b 00 00             ; CALL .WORD-LONG (0be9)
0cfc: 04                         ; SWAP
0cfd: 21                         ; DTOR
0cfe: 04                         ; SWAP
0cff: 22                         ; RTOD
0d00: 2c                         ; INC
0d01: 08 0a 0d 00 00             ; JMP 0d0a
0d06: 05                         ; DROP
0d07: 05                         ; DROP
0d08: 05                         ; DROP
0d09: 0c                         ; RET
0d0a: 08 eb 0c 00 00             ; JMP 0ceb
0d0f: 0c                         ; RET
;
0d10: 18 51 f2 00 00             ; DICTP EXECUTE (f251)
0d15: 22                         ; RTOD
0d16: 05                         ; DROP
0d17: 21                         ; DTOR
0d18: 0c                         ; RET
;
0d19: 18 3e f2 00 00             ; DICTP find.ret (f23e)
0d1e: 06                         ; DUP
0d1f: 0f                         ; CFETCH
0d20: 0e 0c                      ; CLITERAL 12
0d22: 16                         ; EQ
0d23: 09 29 0d 00 00             ; JMPZ 0d29
0d28: 0c                         ; RET
0d29: 2c                         ; INC
0d2a: 08 1e 0d 00 00             ; JMP 0d1e
0d2f: 0c                         ; RET
;
0d30: 18 2b f2 00 00             ; DICTP (inline) (f22b)
0d35: 1a                         ; OVER
0d36: 1a                         ; OVER
0d37: 15                         ; LT
0d38: 09 3e 0d 00 00             ; JMPZ 0d3e
0d3d: 04                         ; SWAP
0d3e: 06                         ; DUP
0d3f: 0f                         ; CFETCH
0d40: 0b c9 02 00 00             ; CALL C, (02c9)
0d45: 2c                         ; INC
0d46: 1a                         ; OVER
0d47: 1a                         ; OVER
0d48: 17                         ; GT
0d49: 0a 3e 0d 00 00             ; JMPNZ 0d3e
0d4e: 05                         ; DROP
0d4f: 05                         ; DROP
0d50: 0c                         ; RET
;
0d51: 18 1b f2 00 00             ; DICTP DOES> (f21b)
0d56: 22                         ; RTOD
0d57: 06                         ; DUP
0d58: 0b 19 0d 00 00             ; CALL find.ret (0d19)
0d5d: 06                         ; DUP
0d5e: 21                         ; DTOR
0d5f: 2c                         ; INC
0d60: 0b 30 0d 00 00             ; CALL (inline) (0d30)
0d65: 0c                         ; RET
;
0d66: 18 05 f2 00 00             ; DICTP Copy.INLINE (f205)
0d6b: 06                         ; DUP
0d6c: 0f                         ; CFETCH
0d6d: 0e 18                      ; CLITERAL 24
0d6f: 16                         ; EQ
0d70: 09 7c 0d 00 00             ; JMPZ 0d7c
0d75: 2c                         ; INC
0d76: 0b 48 00 00 00             ; CALL CELL (0048)
0d7b: 11                         ; ADD
0d7c: 06                         ; DUP
0d7d: 0b 19 0d 00 00             ; CALL find.ret (0d19)
0d82: 0b 30 0d 00 00             ; CALL (inline) (0d30)
0d87: 0c                         ; RET
;
0d88: 18 f4 f1 00 00             ; DICTP strlen (f1f4)
0d8d: 0e 00                      ; CLITERAL 0
0d8f: 04                         ; SWAP
0d90: 04                         ; SWAP
0d91: 1a                         ; OVER
0d92: 0f                         ; CFETCH
0d93: 06                         ; DUP
0d94: 09 9f 0d 00 00             ; JMPZ 0d9f
0d99: 05                         ; DROP
0d9a: 2c                         ; INC
0d9b: 04                         ; SWAP
0d9c: 2c                         ; INC
0d9d: 0e 01                      ; CLITERAL 1
0d9f: 0a 90 0d 00 00             ; JMPNZ 0d90
0da4: 04                         ; SWAP
0da5: 05                         ; DROP
0da6: 0c                         ; RET
;
0da7: 18 e4 f1 00 00             ; DICTP cstr, (f1e4)
0dac: 06                         ; DUP
0dad: 0f                         ; CFETCH
0dae: 1a                         ; OVER
0daf: 11                         ; ADD
0db0: 2c                         ; INC
0db1: 2c                         ; INC
0db2: 0b 30 0d 00 00             ; CALL (inline) (0d30)
0db7: 0c                         ; RET
;
0db8: 18 d0 f1 00 00             ; DICTP [COMPILE] (f1d0)
0dbd: 0b ab 07 00 00             ; CALL FLAGS.ISINLINE? (07ab)
0dc2: 09 d1 0d 00 00             ; JMPZ 0dd1
0dc7: 0b 66 0d 00 00             ; CALL Copy.INLINE (0d66)
0dcc: 08 db 0d 00 00             ; JMP 0ddb
0dd1: 0b 0e 01 00 00             ; CALL CALL (010e)
0dd6: 0b aa 02 00 00             ; CALL , (02aa)
0ddb: 0c                         ; RET
;
0ddc: 18 ba f1 00 00             ; DICTP executeWord (f1ba)
0de1: 21                         ; DTOR
0de2: 22                         ; RTOD
0de3: 06                         ; DUP
0de4: 21                         ; DTOR
0de5: 0b d4 07 00 00             ; CALL findInDict (07d4)
0dea: 09 26 0e 00 00             ; JMPZ 0e26
0def: 22                         ; RTOD
0df0: 05                         ; DROP
0df1: 0b 31 03 00 00             ; CALL ?COMPILING (0331)
0df6: 09 1b 0e 00 00             ; JMPZ 0e1b
0dfb: 06                         ; DUP
0dfc: 0b a2 07 00 00             ; CALL FLAGS.ISIMMEDIATE? (07a2)
0e01: 09 11 0e 00 00             ; JMPZ 0e11
0e06: 05                         ; DROP
0e07: 0b 10 0d 00 00             ; CALL EXECUTE (0d10)
0e0c: 08 16 0e 00 00             ; JMP 0e16
0e11: 0b b8 0d 00 00             ; CALL [COMPILE] (0db8)
0e16: 08 21 0e 00 00             ; JMP 0e21
0e1b: 05                         ; DROP
0e1c: 0b 10 0d 00 00             ; CALL EXECUTE (0d10)
0e21: 08 7c 0e 00 00             ; JMP 0e7c
0e26: 05                         ; DROP
0e27: 05                         ; DROP
0e28: 22                         ; RTOD
0e29: 06                         ; DUP
0e2a: 21                         ; DTOR
0e2b: 0b 9c 08 00 00             ; CALL isNumber? (089c)
0e30: 09 6e 0e 00 00             ; JMPZ 0e6e
0e35: 0b 31 03 00 00             ; CALL ?COMPILING (0331)
0e3a: 09 69 0e 00 00             ; JMPZ 0e69
0e3f: 06                         ; DUP
0e40: 0e 00                      ; CLITERAL 0
0e42: 0e ff                      ; CLITERAL 255
0e44: 0b 20 06 00 00             ; CALL BETWEEN (0620)
0e49: 09 5f 0e 00 00             ; JMPZ 0e5f
0e4e: 0e 0e                      ; CLITERAL 14
0e50: 0b 70 00 00 00             ; CALL C, (0070)
0e55: 0b c9 02 00 00             ; CALL C, (02c9)
0e5a: 08 69 0e 00 00             ; JMP 0e69
0e5f: 0b aa 00 00 00             ; CALL LITERAL (00aa)
0e64: 0b aa 02 00 00             ; CALL , (02aa)
0e69: 08 7a 0e 00 00             ; JMP 0e7a
0e6e: 05                         ; DROP
0e6f: 07 02 3f 3f 00             ; SLITERAL (0e70) [??]
0e74: 0b 96 05 00 00             ; CALL CT (0596)
0e79: fe                         ; RESET
0e7a: 22                         ; RTOD
0e7b: 05                         ; DROP
0e7c: 0c                         ; RET
;
0e7d: 18 a3 f1 00 00             ; DICTP executeInput (f1a3)
0e82: 0b 1b 04 00 00             ; CALL >IN (041b)
0e87: 02                         ; FETCH
0e88: 0b a5 06 00 00             ; CALL skipWS (06a5)
0e8d: 0b 1b 04 00 00             ; CALL >IN (041b)
0e92: 03                         ; STORE
0e93: 0b 1b 04 00 00             ; CALL >IN (041b)
0e98: 02                         ; FETCH
0e99: 0f                         ; CFETCH
0e9a: 09 ba 0e 00 00             ; JMPZ 0eba
0e9f: 0b 1b 04 00 00             ; CALL >IN (041b)
0ea4: 02                         ; FETCH
0ea5: 0b ce 06 00 00             ; CALL getOneWord (06ce)
0eaa: 0b 1b 04 00 00             ; CALL >IN (041b)
0eaf: 03                         ; STORE
0eb0: 0b dc 0d 00 00             ; CALL executeWord (0ddc)
0eb5: 08 bb 0e 00 00             ; JMP 0ebb
0eba: 0c                         ; RET
0ebb: 08 82 0e 00 00             ; JMP 0e82
0ec0: 0c                         ; RET
;
0ec1: 18 95 f1 00 00             ; DICTP Pad (f195)
0ec6: 0b 58 00 00 00             ; CALL (LAST) (0058)
0ecb: 02                         ; FETCH
0ecc: 0e c8                      ; CLITERAL 200
0ece: 12                         ; SUB
0ecf: 06                         ; DUP
0ed0: 0b 50 00 00 00             ; CALL (HERE) (0050)
0ed5: 02                         ; FETCH
0ed6: 15                         ; LT
0ed7: 09 ee 0e 00 00             ; JMPZ 0eee
0edc: 07 0e 4f 75 74 20 6f 66 20 4d 65 6d 6f 72 79 21 00 ; SLITERAL (0edd) [Out of Memory!]
0eed: fe                         ; RESET
0eee: 0c                         ; RET
;
0eef: 18 7a f1 00 00             ; DICTP LoadingFromFile? (f17a)
0ef4: 0b 60 00 00 00             ; CALL INPUT-FP (0060)
0ef9: 02                         ; FETCH
0efa: 0c                         ; RET
;
0efb: 18 60 f1 00 00             ; DICTP getLineFromFile (f160)
0f00: 0e c8                      ; CLITERAL 200
0f02: 0b 60 00 00 00             ; CALL INPUT-FP (0060)
0f07: 02                         ; FETCH
0f08: 1e                         ; FREADLINE
0f09: 0e 00                      ; CLITERAL 0
0f0b: 16                         ; EQ
0f0c: 09 1b 0f 00 00             ; JMPZ 0f1b
0f11: 0b 60 00 00 00             ; CALL INPUT-FP (0060)
0f16: 0b 27 03 00 00             ; CALL OFF (0327)
0f1b: 0c                         ; RET
;
0f1c: 18 4e f1 00 00             ; DICTP getLine (f14e)
0f21: 0e 00                      ; CLITERAL 0
0f23: 0b c1 0e 00 00             ; CALL Pad (0ec1)
0f28: 06                         ; DUP
0f29: 2c                         ; INC
0f2a: 0b 1b 04 00 00             ; CALL >IN (041b)
0f2f: 03                         ; STORE
0f30: 10                         ; CSTORE
0f31: 0b ef 0e 00 00             ; CALL LoadingFromFile? (0eef)
0f36: 09 46 0f 00 00             ; JMPZ 0f46
0f3b: 0b c1 0e 00 00             ; CALL Pad (0ec1)
0f40: 0b fb 0e 00 00             ; CALL getLineFromFile (0efb)
0f45: 0c                         ; RET
0f46: 0e 00                      ; CLITERAL 0
0f48: 0b 1b 04 00 00             ; CALL >IN (041b)
0f4d: 02                         ; FETCH
0f4e: 10                         ; CSTORE
0f4f: 27                         ; GETCH
0f50: 06                         ; DUP
0f51: 0e 0d                      ; CLITERAL 13
0f53: 16                         ; EQ
0f54: 09 63 0f 00 00             ; JMPZ 0f63
0f59: 05                         ; DROP
0f5a: 0b c1 0e 00 00             ; CALL Pad (0ec1)
0f5f: 0e 20                      ; CLITERAL 32
0f61: 19                         ; EMIT
0f62: 0c                         ; RET
0f63: 06                         ; DUP
0f64: 0e 09                      ; CLITERAL 9
0f66: 16                         ; EQ
0f67: 09 6f 0f 00 00             ; JMPZ 0f6f
0f6c: 05                         ; DROP
0f6d: 0e 20                      ; CLITERAL 32
0f6f: 06                         ; DUP
0f70: 0e 03                      ; CLITERAL 3
0f72: 16                         ; EQ
0f73: 09 79 0f 00 00             ; JMPZ 0f79
0f78: ff                         ; BYE
0f79: 06                         ; DUP
0f7a: 0e 08                      ; CLITERAL 8
0f7c: 16                         ; EQ
0f7d: 09 b5 0f 00 00             ; JMPZ 0fb5
0f82: 0b c1 0e 00 00             ; CALL Pad (0ec1)
0f87: 0f                         ; CFETCH
0f88: 0e 00                      ; CLITERAL 0
0f8a: 17                         ; GT
0f8b: 09 af 0f 00 00             ; JMPZ 0faf
0f90: 0b c1 0e 00 00             ; CALL Pad (0ec1)
0f95: 0b 09 05 00 00             ; CALL C-- (0509)
0f9a: 0b 1b 04 00 00             ; CALL >IN (041b)
0f9f: 0b f1 04 00 00             ; CALL -- (04f1)
0fa4: 06                         ; DUP
0fa5: 19                         ; EMIT
0fa6: 0e 20                      ; CLITERAL 32
0fa8: 19                         ; EMIT
0fa9: 19                         ; EMIT
0faa: 08 b0 0f 00 00             ; JMP 0fb0
0faf: 05                         ; DROP
0fb0: 08 e7 0f 00 00             ; JMP 0fe7
0fb5: 06                         ; DUP
0fb6: 0e 20                      ; CLITERAL 32
0fb8: 0e 7f                      ; CLITERAL 127
0fba: 0b 20 06 00 00             ; CALL BETWEEN (0620)
0fbf: 09 e6 0f 00 00             ; JMPZ 0fe6
0fc4: 06                         ; DUP
0fc5: 19                         ; EMIT
0fc6: 0b 1b 04 00 00             ; CALL >IN (041b)
0fcb: 02                         ; FETCH
0fcc: 10                         ; CSTORE
0fcd: 0b 1b 04 00 00             ; CALL >IN (041b)
0fd2: 0b e4 04 00 00             ; CALL ++ (04e4)
0fd7: 0b c1 0e 00 00             ; CALL Pad (0ec1)
0fdc: 0b fe 04 00 00             ; CALL C++ (04fe)
0fe1: 08 e7 0f 00 00             ; JMP 0fe7
0fe6: 05                         ; DROP
0fe7: 08 46 0f 00 00             ; JMP 0f46
0fec: 0c                         ; RET
;
0fed: 18 3b f1 00 00             ; DICTP strcpy2c (f13b)
0ff2: 06                         ; DUP
0ff3: 21                         ; DTOR
0ff4: 0e 00                      ; CLITERAL 0
0ff6: 1a                         ; OVER
0ff7: 10                         ; CSTORE
0ff8: 2c                         ; INC
0ff9: 04                         ; SWAP
0ffa: 06                         ; DUP
0ffb: 0f                         ; CFETCH
0ffc: 06                         ; DUP
0ffd: 09 17 10 00 00             ; JMPZ 1017
1002: 0e 02                      ; CLITERAL 2
1004: 25                         ; PICK
1005: 10                         ; CSTORE
1006: 04                         ; SWAP
1007: 2c                         ; INC
1008: 04                         ; SWAP
1009: 2c                         ; INC
100a: 22                         ; RTOD
100b: 06                         ; DUP
100c: 21                         ; DTOR
100d: 0b fe 04 00 00             ; CALL C++ (04fe)
1012: 08 20 10 00 00             ; JMP 1020
1017: 21                         ; DTOR
1018: 04                         ; SWAP
1019: 22                         ; RTOD
101a: 04                         ; SWAP
101b: 10                         ; CSTORE
101c: 05                         ; DROP
101d: 22                         ; RTOD
101e: 05                         ; DROP
101f: 0c                         ; RET
1020: 08 fa 0f 00 00             ; JMP 0ffa
1025: 0c                         ; RET
;
1026: 18 25 f1 00 00             ; DICTP Define-Word (f125)
102b: 0b 58 00 00 00             ; CALL (LAST) (0058)
1030: 02                         ; FETCH
1031: 1a                         ; OVER
1032: 0b 88 0d 00 00             ; CALL strlen (0d88)
1037: 0e 02                      ; CLITERAL 2
1039: 0b 48 00 00 00             ; CALL CELL (0048)
103e: 13                         ; MUL
103f: 0e 03                      ; CLITERAL 3
1041: 11                         ; ADD
1042: 11                         ; ADD
1043: 12                         ; SUB
1044: 06                         ; DUP
1045: 21                         ; DTOR
1046: 21                         ; DTOR
1047: 0b 58 00 00 00             ; CALL (LAST) (0058)
104c: 02                         ; FETCH
104d: 22                         ; RTOD
104e: 06                         ; DUP
104f: 21                         ; DTOR
1050: 03                         ; STORE
1051: 22                         ; RTOD
1052: 0b 48 00 00 00             ; CALL CELL (0048)
1057: 11                         ; ADD
1058: 21                         ; DTOR
1059: 0b 50 00 00 00             ; CALL (HERE) (0050)
105e: 02                         ; FETCH
105f: 22                         ; RTOD
1060: 06                         ; DUP
1061: 21                         ; DTOR
1062: 03                         ; STORE
1063: 22                         ; RTOD
1064: 0b 48 00 00 00             ; CALL CELL (0048)
1069: 11                         ; ADD
106a: 21                         ; DTOR
106b: 0e 00                      ; CLITERAL 0
106d: 22                         ; RTOD
106e: 06                         ; DUP
106f: 21                         ; DTOR
1070: 10                         ; CSTORE
1071: 22                         ; RTOD
1072: 2c                         ; INC
1073: 21                         ; DTOR
1074: 22                         ; RTOD
1075: 0b ed 0f 00 00             ; CALL strcpy2c (0fed)
107a: 22                         ; RTOD
107b: 0b 58 00 00 00             ; CALL (LAST) (0058)
1080: 03                         ; STORE
1081: 0c                         ; RET
;
1082: 18 0f f1 00 00             ; DICTP CREATE-NAME (f10f)
1087: 0b 1b 04 00 00             ; CALL >IN (041b)
108c: 02                         ; FETCH
108d: 0b a5 06 00 00             ; CALL skipWS (06a5)
1092: 0b 1b 04 00 00             ; CALL >IN (041b)
1097: 03                         ; STORE
1098: 0b 1b 04 00 00             ; CALL >IN (041b)
109d: 02                         ; FETCH
109e: 0f                         ; CFETCH
109f: 09 da 10 00 00             ; JMPZ 10da
10a4: 0b 1b 04 00 00             ; CALL >IN (041b)
10a9: 02                         ; FETCH
10aa: 0b ce 06 00 00             ; CALL getOneWord (06ce)
10af: 0b 1b 04 00 00             ; CALL >IN (041b)
10b4: 03                         ; STORE
10b5: 06                         ; DUP
10b6: 0f                         ; CFETCH
10b7: 09 d8 10 00 00             ; JMPZ 10d8
10bc: 0b 26 10 00 00             ; CALL Define-Word (1026)
10c1: 0e 18                      ; CLITERAL 24
10c3: 0b 70 00 00 00             ; CALL C, (0070)
10c8: 0b 58 00 00 00             ; CALL (LAST) (0058)
10cd: 02                         ; FETCH
10ce: 0b aa 02 00 00             ; CALL , (02aa)
10d3: 08 da 10 00 00             ; JMP 10da
10d8: 05                         ; DROP
10d9: fe                         ; RESET
10da: 0c                         ; RET
;
10db: 18 03 f1 00 00             ; DICTP : (f103)
10e0: 0b 82 10 00 00             ; CALL CREATE-NAME (1082)
10e5: 0b 68 00 00 00             ; CALL STATE (0068)
10ea: 0b 1d 03 00 00             ; CALL ON (031d)
10ef: 0c                         ; RET
;
10f0: 18 f1 f0 00 00             ; DICTP :NONAME (f0f1)
10f5: 0b 50 00 00 00             ; CALL (HERE) (0050)
10fa: 02                         ; FETCH
10fb: 0b 68 00 00 00             ; CALL STATE (0068)
1100: 0b 1d 03 00 00             ; CALL ON (031d)
1105: 0c                         ; RET
;
1106: 18 e5 f0 00 00             ; DICTP ; (f0e5)
110b: 0b 1b 01 00 00             ; CALL RET (011b)
1110: 0b 68 00 00 00             ; CALL STATE (0068)
1115: 0b 27 03 00 00             ; CALL OFF (0327)
111a: 0c                         ; RET
;
111b: 18 d0 f0 00 00             ; DICTP ForgetLast (f0d0)
1120: 0b 58 00 00 00             ; CALL (LAST) (0058)
1125: 02                         ; FETCH
1126: 0b 48 00 00 00             ; CALL CELL (0048)
112b: 11                         ; ADD
112c: 02                         ; FETCH
112d: 0b 50 00 00 00             ; CALL (HERE) (0050)
1132: 03                         ; STORE
1133: 0b 58 00 00 00             ; CALL (LAST) (0058)
1138: 02                         ; FETCH
1139: 02                         ; FETCH
113a: 0b 58 00 00 00             ; CALL (LAST) (0058)
113f: 03                         ; STORE
1140: 0c                         ; RET
;
1141: 18 bb f0 00 00             ; DICTP resetState (f0bb)
1146: 0b 31 03 00 00             ; CALL ?COMPILING (0331)
114b: 09 55 11 00 00             ; JMPZ 1155
1150: 0b 1b 11 00 00             ; CALL ForgetLast (111b)
1155: 0b 68 00 00 00             ; CALL STATE (0068)
115a: 0b 27 03 00 00             ; CALL OFF (0327)
115f: 0b f3 02 00 00             ; CALL DECIMAL (02f3)
1164: 0c                         ; RET
;
1165: 18 ab f0 00 00             ; DICTP ALLOT (f0ab)
116a: 0b 50 00 00 00             ; CALL (HERE) (0050)
116f: 02                         ; FETCH
1170: 11                         ; ADD
1171: 0b 50 00 00 00             ; CALL (HERE) (0050)
1176: 03                         ; STORE
1177: 0c                         ; RET
;
1178: 18 9f f0 00 00             ; DICTP ? (f09f)
117d: 02                         ; FETCH
117e: 0b fe 09 00 00             ; CALL . (09fe)
1183: 0c                         ; RET
;
1184: 18 92 f0 00 00             ; DICTP C? (f092)
1189: 0f                         ; CFETCH
118a: 0b fe 09 00 00             ; CALL . (09fe)
118f: 0c                         ; RET
;
1190: 18 83 f0 00 00             ; DICTP FREE (f083)
1195: 0b 58 00 00 00             ; CALL (LAST) (0058)
119a: 02                         ; FETCH
119b: 0b 50 00 00 00             ; CALL (HERE) (0050)
11a0: 02                         ; FETCH
11a1: 12                         ; SUB
11a2: 0c                         ; RET
;
11a3: 18 73 f0 00 00             ; DICTP .FREE (f073)
11a8: 0b 90 11 00 00             ; CALL FREE (1190)
11ad: 0b e4 09 00 00             ; CALL (.) (09e4)
11b2: 07 0c 20 62 79 74 65 73 20 66 72 65 65 2e 00 ; SLITERAL (11b3) [ bytes free.]
11c1: 0b 96 05 00 00             ; CALL CT (0596)
11c6: 0c                         ; RET
;
11c7: 18 60 f0 00 00             ; DICTP mainLoop (f060)
11cc: 0b 41 11 00 00             ; CALL resetState (1141)
11d1: 0b 48 06 00 00             ; CALL tmp-init (0648)
11d6: 0b 31 03 00 00             ; CALL ?COMPILING (0331)
11db: 0e 00                      ; CLITERAL 0
11dd: 16                         ; EQ
11de: 09 f3 11 00 00             ; JMPZ 11f3
11e3: 07 03 20 4f 4b 00          ; SLITERAL (11e4) [ OK]
11e9: 0b 96 05 00 00             ; CALL CT (0596)
11ee: 0b 91 0a 00 00             ; CALL .S (0a91)
11f3: 0e 0d                      ; CLITERAL 13
11f5: 19                         ; EMIT
11f6: 0e 0a                      ; CLITERAL 10
11f8: 19                         ; EMIT
11f9: 0b 1c 0f 00 00             ; CALL getLine (0f1c)
11fe: 2c                         ; INC
11ff: 0b 1b 04 00 00             ; CALL >IN (041b)
1204: 03                         ; STORE
1205: 0b 7d 0e 00 00             ; CALL executeInput (0e7d)
120a: 0e 20                      ; CLITERAL 32
120c: 19                         ; EMIT
120d: 08 d1 11 00 00             ; JMP 11d1
1212: 0c                         ; RET
;
1213: 18 51 f0 00 00             ; DICTP main (f051)
1218: 0b 68 00 00 00             ; CALL STATE (0068)
121d: 02                         ; FETCH
121e: 0e 63                      ; CLITERAL 99
1220: 16                         ; EQ
1221: 09 3e 12 00 00             ; JMPZ 123e
1226: 0b 68 00 00 00             ; CALL STATE (0068)
122b: 0b 27 03 00 00             ; CALL OFF (0327)
1230: 07 06 48 65 6c 6c 6f 2e 00 ; SLITERAL (1231) [Hello.]
1239: 0b 96 05 00 00             ; CALL CT (0596)
123e: 0b c7 11 00 00             ; CALL mainLoop (11c7)
1243: 0c                         ; RET
;
1244: 18 3a f0 00 00             ; DICTP file-getLine (f03a)
1249: 0b c1 0e 00 00             ; CALL Pad (0ec1)
124e: 04                         ; SWAP
124f: 0e c8                      ; CLITERAL 200
1251: 04                         ; SWAP
1252: 1e                         ; FREADLINE
1253: 0b c1 0e 00 00             ; CALL Pad (0ec1)
1258: 04                         ; SWAP
1259: 0c                         ; RET
;
125a: 18 2b f0 00 00             ; DICTP load (f02b)
125f: 0e 00                      ; CLITERAL 0
1261: 0e 00                      ; CLITERAL 0
1263: 1c                         ; FOPEN
1264: 0e 00                      ; CLITERAL 0
1266: 16                         ; EQ
1267: 09 86 12 00 00             ; JMPZ 1286
126c: 07 11 43 61 6e 6e 6f 74 20 6f 70 65 6e 20 66 69 6c 65 2e 00 ; SLITERAL (126d) [Cannot open file.]
1280: 0b 96 05 00 00             ; CALL CT (0596)
1285: 0c                         ; RET
1286: 0b 60 00 00 00             ; CALL INPUT-FP (0060)
128b: 03                         ; STORE
128c: 0b 60 00 00 00             ; CALL INPUT-FP (0060)
1291: 02                         ; FETCH
1292: 0b 44 12 00 00             ; CALL file-getLine (1244)
1297: 09 ad 12 00 00             ; JMPZ 12ad
129c: 2c                         ; INC
129d: 0b 1b 04 00 00             ; CALL >IN (041b)
12a2: 03                         ; STORE
12a3: 0b 7d 0e 00 00             ; CALL executeInput (0e7d)
12a8: 08 c0 12 00 00             ; JMP 12c0
12ad: 05                         ; DROP
12ae: 0b 60 00 00 00             ; CALL INPUT-FP (0060)
12b3: 02                         ; FETCH
12b4: 20                         ; FCLOSE
12b5: 0b 60 00 00 00             ; CALL INPUT-FP (0060)
12ba: 0b 27 03 00 00             ; CALL OFF (0327)
12bf: 0c                         ; RET
12c0: 08 8c 12 00 00             ; JMP 128c
12c5: 0c                         ; RET
;
12c6: 18 17 f0 00 00             ; DICTP STR.EMPTY (f017)
12cb: 0e 00                      ; CLITERAL 0
12cd: 1a                         ; OVER
12ce: 03                         ; STORE
12cf: 0c                         ; RET
;
12d0: 18 05 f0 00 00             ; DICTP STR.LEN (f005)
12d5: 06                         ; DUP
12d6: 0f                         ; CFETCH
12d7: 0c                         ; RET
;
12d8: 18 f2 ef 00 00             ; DICTP STR.CATC (eff2)
12dd: 1a                         ; OVER
12de: 06                         ; DUP
12df: 0b fe 04 00 00             ; CALL C++ (04fe)
12e4: 06                         ; DUP
12e5: 0f                         ; CFETCH
12e6: 11                         ; ADD
12e7: 0e 00                      ; CLITERAL 0
12e9: 1a                         ; OVER
12ea: 2c                         ; INC
12eb: 10                         ; CSTORE
12ec: 10                         ; CSTORE
12ed: 0c                         ; RET
;
12ee: 18 db ef 00 00             ; DICTP STR.NULLTERM (efdb)
12f3: 06                         ; DUP
12f4: 06                         ; DUP
12f5: 0f                         ; CFETCH
12f6: 11                         ; ADD
12f7: 2c                         ; INC
12f8: 0e 00                      ; CLITERAL 0
12fa: 04                         ; SWAP
12fb: 10                         ; CSTORE
12fc: 0c                         ; RET
;
12fd: 18 ce ef 00 00             ; DICTP I" (efce)
1302: 0b 50 00 00 00             ; CALL (HERE) (0050)
1307: 02                         ; FETCH
1308: 0e 64                      ; CLITERAL 100
130a: 11                         ; ADD
130b: 0e 00                      ; CLITERAL 0
130d: 1a                         ; OVER
130e: 03                         ; STORE
130f: 0b 1b 04 00 00             ; CALL >IN (041b)
1314: 02                         ; FETCH
1315: 0f                         ; CFETCH
1316: 06                         ; DUP
1317: 0e 00                      ; CLITERAL 0
1319: 16                         ; EQ
131a: 09 3b 13 00 00             ; JMPZ 133b
131f: 07 10 6d 69 73 73 69 6e 67 20 63 6c 6f 73 69 6e 67 20 00 ; SLITERAL (1320) [missing closing ]
1332: 0b 96 05 00 00             ; CALL CT (0596)
1337: 0e 22                      ; CLITERAL 34
1339: 19                         ; EMIT
133a: fe                         ; RESET
133b: 0b 1b 04 00 00             ; CALL >IN (041b)
1340: 0b e4 04 00 00             ; CALL ++ (04e4)
1345: 06                         ; DUP
1346: 0e 22                      ; CLITERAL 34
1348: 16                         ; EQ
1349: 09 50 13 00 00             ; JMPZ 1350
134e: 05                         ; DROP
134f: 0c                         ; RET
1350: 0b d8 12 00 00             ; CALL STR.CATC (12d8)
1355: 08 0f 13 00 00             ; JMP 130f
135a: 0c                         ; RET
;
135b: 18 c2 ef 00 00             ; DICTP " (efc2)
1360: 0b 31 03 00 00             ; CALL ?COMPILING (0331)
1365: 0e 00                      ; CLITERAL 0
1367: 16                         ; EQ
1368: 09 73 13 00 00             ; JMPZ 1373
136d: 0b fd 12 00 00             ; CALL I" (12fd)
1372: 0c                         ; RET
1373: 0b da 00 00 00             ; CALL SLITERAL (00da)
1378: 0b 50 00 00 00             ; CALL (HERE) (0050)
137d: 02                         ; FETCH
137e: 0e 00                      ; CLITERAL 0
1380: 0b c9 02 00 00             ; CALL C, (02c9)
1385: 0b 1b 04 00 00             ; CALL >IN (041b)
138a: 02                         ; FETCH
138b: 0f                         ; CFETCH
138c: 06                         ; DUP
138d: 0e 00                      ; CLITERAL 0
138f: 16                         ; EQ
1390: 09 bd 13 00 00             ; JMPZ 13bd
1395: 05                         ; DROP
1396: 2e                         ; DEC
1397: 0b 50 00 00 00             ; CALL (HERE) (0050)
139c: 03                         ; STORE
139d: 07 11 6d 69 73 73 69 6e 67 20 63 6c 6f 73 69 6e 67 20 27 00 ; SLITERAL (139e) [missing closing ']
13b1: 0b 96 05 00 00             ; CALL CT (0596)
13b6: 0e 22                      ; CLITERAL 34
13b8: 19                         ; EMIT
13b9: 0e 27                      ; CLITERAL 39
13bb: 19                         ; EMIT
13bc: fe                         ; RESET
13bd: 0b 1b 04 00 00             ; CALL >IN (041b)
13c2: 0b e4 04 00 00             ; CALL ++ (04e4)
13c7: 06                         ; DUP
13c8: 0e 22                      ; CLITERAL 34
13ca: 16                         ; EQ
13cb: 09 e4 13 00 00             ; JMPZ 13e4
13d0: 05                         ; DROP
13d1: 0b 50 00 00 00             ; CALL (HERE) (0050)
13d6: 02                         ; FETCH
13d7: 0e 00                      ; CLITERAL 0
13d9: 0b c9 02 00 00             ; CALL C, (02c9)
13de: 1a                         ; OVER
13df: 12                         ; SUB
13e0: 2e                         ; DEC
13e1: 04                         ; SWAP
13e2: 10                         ; CSTORE
13e3: 0c                         ; RET
13e4: 0b c9 02 00 00             ; CALL C, (02c9)
13e9: 08 85 13 00 00             ; JMP 1385
13ee: 0c                         ; RET
;
13ef: 18 b5 ef 00 00             ; DICTP ll (efb5)
13f4: 07 09 6c 6f 61 64 73 2e 34 74 68 00 ; SLITERAL (13f5) [loads.4th]
1400: 0b 5a 12 00 00             ; CALL load (125a)
1405: 0c                         ; RET
;
1406: 18 a2 ef 00 00             ; DICTP sys-info (efa2)
140b: 0b 03 0b 00 00             ; CALL .(MEM_SZ) (0b03)
1410: 0e 2c                      ; CLITERAL 44
1412: 19                         ; EMIT
1413: 0e 20                      ; CLITERAL 32
1415: 19                         ; EMIT
1416: 0b 3c 0b 00 00             ; CALL .(HERE) (0b3c)
141b: 0e 2c                      ; CLITERAL 44
141d: 19                         ; EMIT
141e: 0e 20                      ; CLITERAL 32
1420: 19                         ; EMIT
1421: 0b 74 0b 00 00             ; CALL .(LAST) (0b74)
1426: 0e 2c                      ; CLITERAL 44
1428: 19                         ; EMIT
1429: 0e 20                      ; CLITERAL 32
142b: 19                         ; EMIT
142c: 0b a3 11 00 00             ; CALL .FREE (11a3)
1431: 0e 0d                      ; CLITERAL 13
1433: 19                         ; EMIT
1434: 0e 0a                      ; CLITERAL 10
1436: 19                         ; EMIT
1437: 0c                         ; RET
;
1438: 18 90 ef 00 00             ; DICTP countTo (ef90)
143d: 07 0c 63 6f 75 6e 74 69 6e 67 20 74 6f 20 00 ; SLITERAL (143e) [counting to ]
144c: 0b 96 05 00 00             ; CALL CT (0596)
1451: 06                         ; DUP
1452: 0b fe 09 00 00             ; CALL . (09fe)
1457: 07 04 2e 2e 2e 20 00       ; SLITERAL (1458) [... ]
145e: 0b 96 05 00 00             ; CALL CT (0596)
1463: 0e 01                      ; CLITERAL 1
1465: 1a                         ; OVER
1466: 1a                         ; OVER
1467: 15                         ; LT
1468: 09 70 14 00 00             ; JMPZ 1470
146d: 05                         ; DROP
146e: 05                         ; DROP
146f: 0c                         ; RET
1470: 2c                         ; INC
1471: 08 65 14 00 00             ; JMP 1465
1476: 0c                         ; RET
;
1477: 18 79 ef 00 00             ; DICTP countTo-FAST (ef79)
147c: 07 0c 63 6f 75 6e 74 69 6e 67 20 74 6f 20 00 ; SLITERAL (147d) [counting to ]
148b: 0b 96 05 00 00             ; CALL CT (0596)
1490: 06                         ; DUP
1491: 0b fe 09 00 00             ; CALL . (09fe)
1496: 07 04 2e 2e 2e 20 00       ; SLITERAL (1497) [... ]
149d: 0b 96 05 00 00             ; CALL CT (0596)
14a2: 2e                         ; DEC
14a3: 06                         ; DUP
14a4: 0a a2 14 00 00             ; JMPNZ 14a2
14a9: 05                         ; DROP
14aa: 0c                         ; RET
;
; End of code, Dictionary:
;
ef79: 90 ef 00 00                ; countTo-FAST - (next: ef90 countTo)
ef7d: 77 14 00 00 00             ; XT=1477, flags=00
ef82: 0c 63 6f 75 6e 74 54 6f 2d 46 41 53 54 00 ; 12, countTo-FAST
;
ef90: a2 ef 00 00                ; countTo - (next: efa2 sys-info)
ef94: 38 14 00 00 00             ; XT=1438, flags=00
ef99: 07 63 6f 75 6e 74 54 6f 00 ; 7, countTo
;
efa2: b5 ef 00 00                ; sys-info - (next: efb5 ll)
efa6: 06 14 00 00 00             ; XT=1406, flags=00
efab: 08 73 79 73 2d 69 6e 66 6f 00 ; 8, sys-info
;
efb5: c2 ef 00 00                ; ll - (next: efc2 ")
efb9: ef 13 00 00 00             ; XT=13ef, flags=00
efbe: 02 6c 6c 00                ; 2, ll
;
efc2: ce ef 00 00                ; " - (next: efce I")
efc6: 5b 13 00 00 01             ; XT=135b, flags=01
efcb: 01 22 00                   ; 1, "
;
efce: db ef 00 00                ; I" - (next: efdb STR.NULLTERM)
efd2: fd 12 00 00 00             ; XT=12fd, flags=00
efd7: 02 49 22 00                ; 2, I"
;
efdb: f2 ef 00 00                ; STR.NULLTERM - (next: eff2 STR.CATC)
efdf: ee 12 00 00 00             ; XT=12ee, flags=00
efe4: 0c 53 54 52 2e 4e 55 4c 4c 54 45 52 4d 00 ; 12, STR.NULLTERM
;
eff2: 05 f0 00 00                ; STR.CATC - (next: f005 STR.LEN)
eff6: d8 12 00 00 00             ; XT=12d8, flags=00
effb: 08 53 54 52 2e 43 41 54 43 00 ; 8, STR.CATC
;
f005: 17 f0 00 00                ; STR.LEN - (next: f017 STR.EMPTY)
f009: d0 12 00 00 02             ; XT=12d0, flags=02
f00e: 07 53 54 52 2e 4c 45 4e 00 ; 7, STR.LEN
;
f017: 2b f0 00 00                ; STR.EMPTY - (next: f02b load)
f01b: c6 12 00 00 02             ; XT=12c6, flags=02
f020: 09 53 54 52 2e 45 4d 50 54 59 00 ; 9, STR.EMPTY
;
f02b: 3a f0 00 00                ; load - (next: f03a file-getLine)
f02f: 5a 12 00 00 00             ; XT=125a, flags=00
f034: 04 6c 6f 61 64 00          ; 4, load
;
f03a: 51 f0 00 00                ; file-getLine - (next: f051 main)
f03e: 44 12 00 00 00             ; XT=1244, flags=00
f043: 0c 66 69 6c 65 2d 67 65 74 4c 69 6e 65 00 ; 12, file-getLine
;
f051: 60 f0 00 00                ; main - (next: f060 mainLoop)
f055: 13 12 00 00 00             ; XT=1213, flags=00
f05a: 04 6d 61 69 6e 00          ; 4, main
;
f060: 73 f0 00 00                ; mainLoop - (next: f073 .FREE)
f064: c7 11 00 00 00             ; XT=11c7, flags=00
f069: 08 6d 61 69 6e 4c 6f 6f 70 00 ; 8, mainLoop
;
f073: 83 f0 00 00                ; .FREE - (next: f083 FREE)
f077: a3 11 00 00 00             ; XT=11a3, flags=00
f07c: 05 2e 46 52 45 45 00       ; 5, .FREE
;
f083: 92 f0 00 00                ; FREE - (next: f092 C?)
f087: 90 11 00 00 00             ; XT=1190, flags=00
f08c: 04 46 52 45 45 00          ; 4, FREE
;
f092: 9f f0 00 00                ; C? - (next: f09f ?)
f096: 84 11 00 00 00             ; XT=1184, flags=00
f09b: 02 43 3f 00                ; 2, C?
;
f09f: ab f0 00 00                ; ? - (next: f0ab ALLOT)
f0a3: 78 11 00 00 00             ; XT=1178, flags=00
f0a8: 01 3f 00                   ; 1, ?
;
f0ab: bb f0 00 00                ; ALLOT - (next: f0bb resetState)
f0af: 65 11 00 00 00             ; XT=1165, flags=00
f0b4: 05 41 4c 4c 4f 54 00       ; 5, ALLOT
;
f0bb: d0 f0 00 00                ; resetState - (next: f0d0 ForgetLast)
f0bf: 41 11 00 00 00             ; XT=1141, flags=00
f0c4: 0a 72 65 73 65 74 53 74 61 74 65 00 ; 10, resetState
;
f0d0: e5 f0 00 00                ; ForgetLast - (next: f0e5 ;)
f0d4: 1b 11 00 00 00             ; XT=111b, flags=00
f0d9: 0a 46 6f 72 67 65 74 4c 61 73 74 00 ; 10, ForgetLast
;
f0e5: f1 f0 00 00                ; ; - (next: f0f1 :NONAME)
f0e9: 06 11 00 00 01             ; XT=1106, flags=01
f0ee: 01 3b 00                   ; 1, ;
;
f0f1: 03 f1 00 00                ; :NONAME - (next: f103 :)
f0f5: f0 10 00 00 00             ; XT=10f0, flags=00
f0fa: 07 3a 4e 4f 4e 41 4d 45 00 ; 7, :NONAME
;
f103: 0f f1 00 00                ; : - (next: f10f CREATE-NAME)
f107: db 10 00 00 00             ; XT=10db, flags=00
f10c: 01 3a 00                   ; 1, :
;
f10f: 25 f1 00 00                ; CREATE-NAME - (next: f125 Define-Word)
f113: 82 10 00 00 00             ; XT=1082, flags=00
f118: 0b 43 52 45 41 54 45 2d 4e 41 4d 45 00 ; 11, CREATE-NAME
;
f125: 3b f1 00 00                ; Define-Word - (next: f13b strcpy2c)
f129: 26 10 00 00 00             ; XT=1026, flags=00
f12e: 0b 44 65 66 69 6e 65 2d 57 6f 72 64 00 ; 11, Define-Word
;
f13b: 4e f1 00 00                ; strcpy2c - (next: f14e getLine)
f13f: ed 0f 00 00 00             ; XT=0fed, flags=00
f144: 08 73 74 72 63 70 79 32 63 00 ; 8, strcpy2c
;
f14e: 60 f1 00 00                ; getLine - (next: f160 getLineFromFile)
f152: 1c 0f 00 00 00             ; XT=0f1c, flags=00
f157: 07 67 65 74 4c 69 6e 65 00 ; 7, getLine
;
f160: 7a f1 00 00                ; getLineFromFile - (next: f17a LoadingFromFile?)
f164: fb 0e 00 00 00             ; XT=0efb, flags=00
f169: 0f 67 65 74 4c 69 6e 65 46 72 6f 6d 46 69 6c 65 00 ; 15, getLineFromFile
;
f17a: 95 f1 00 00                ; LoadingFromFile? - (next: f195 Pad)
f17e: ef 0e 00 00 00             ; XT=0eef, flags=00
f183: 10 4c 6f 61 64 69 6e 67 46 72 6f 6d 46 69 6c 65 3f 00 ; 16, LoadingFromFile?
;
f195: a3 f1 00 00                ; Pad - (next: f1a3 executeInput)
f199: c1 0e 00 00 00             ; XT=0ec1, flags=00
f19e: 03 50 61 64 00             ; 3, Pad
;
f1a3: ba f1 00 00                ; executeInput - (next: f1ba executeWord)
f1a7: 7d 0e 00 00 00             ; XT=0e7d, flags=00
f1ac: 0c 65 78 65 63 75 74 65 49 6e 70 75 74 00 ; 12, executeInput
;
f1ba: d0 f1 00 00                ; executeWord - (next: f1d0 [COMPILE])
f1be: dc 0d 00 00 00             ; XT=0ddc, flags=00
f1c3: 0b 65 78 65 63 75 74 65 57 6f 72 64 00 ; 11, executeWord
;
f1d0: e4 f1 00 00                ; [COMPILE] - (next: f1e4 cstr,)
f1d4: b8 0d 00 00 00             ; XT=0db8, flags=00
f1d9: 09 5b 43 4f 4d 50 49 4c 45 5d 00 ; 9, [COMPILE]
;
f1e4: f4 f1 00 00                ; cstr, - (next: f1f4 strlen)
f1e8: a7 0d 00 00 00             ; XT=0da7, flags=00
f1ed: 05 63 73 74 72 2c 00       ; 5, cstr,
;
f1f4: 05 f2 00 00                ; strlen - (next: f205 Copy.INLINE)
f1f8: 88 0d 00 00 00             ; XT=0d88, flags=00
f1fd: 06 73 74 72 6c 65 6e 00    ; 6, strlen
;
f205: 1b f2 00 00                ; Copy.INLINE - (next: f21b DOES>)
f209: 66 0d 00 00 00             ; XT=0d66, flags=00
f20e: 0b 43 6f 70 79 2e 49 4e 4c 49 4e 45 00 ; 11, Copy.INLINE
;
f21b: 2b f2 00 00                ; DOES> - (next: f22b (inline))
f21f: 51 0d 00 00 00             ; XT=0d51, flags=00
f224: 05 44 4f 45 53 3e 00       ; 5, DOES>
;
f22b: 3e f2 00 00                ; (inline) - (next: f23e find.ret)
f22f: 30 0d 00 00 00             ; XT=0d30, flags=00
f234: 08 28 69 6e 6c 69 6e 65 29 00 ; 8, (inline)
;
f23e: 51 f2 00 00                ; find.ret - (next: f251 EXECUTE)
f242: 19 0d 00 00 00             ; XT=0d19, flags=00
f247: 08 66 69 6e 64 2e 72 65 74 00 ; 8, find.ret
;
f251: 63 f2 00 00                ; EXECUTE - (next: f263 .lastx)
f255: 10 0d 00 00 00             ; XT=0d10, flags=00
f25a: 07 45 58 45 43 55 54 45 00 ; 7, EXECUTE
;
f263: 74 f2 00 00                ; .lastx - (next: f274 NUM-WORDS)
f267: d7 0c 00 00 00             ; XT=0cd7, flags=00
f26c: 06 2e 6c 61 73 74 78 00    ; 6, .lastx
;
f274: 88 f2 00 00                ; NUM-WORDS - (next: f288 WORDSV)
f278: ac 0c 00 00 00             ; XT=0cac, flags=00
f27d: 09 4e 55 4d 2d 57 4f 52 44 53 00 ; 9, NUM-WORDS
;
f288: 99 f2 00 00                ; WORDSV - (next: f299 .WORD-LONG)
f28c: 79 0c 00 00 00             ; XT=0c79, flags=00
f291: 06 57 4f 52 44 53 56 00    ; 6, WORDSV
;
f299: ae f2 00 00                ; .WORD-LONG - (next: f2ae WORDS)
f29d: e9 0b 00 00 00             ; XT=0be9, flags=00
f2a2: 0a 2e 57 4f 52 44 2d 4c 4f 4e 47 00 ; 10, .WORD-LONG
;
f2ae: be f2 00 00                ; WORDS - (next: f2be .WORD-SHORT)
f2b2: c1 0b 00 00 00             ; XT=0bc1, flags=00
f2b7: 05 57 4f 52 44 53 00       ; 5, WORDS
;
f2be: d4 f2 00 00                ; .WORD-SHORT - (next: f2d4 .(LAST))
f2c2: ac 0b 00 00 00             ; XT=0bac, flags=00
f2c7: 0b 2e 57 4f 52 44 2d 53 48 4f 52 54 00 ; 11, .WORD-SHORT
;
f2d4: e6 f2 00 00                ; .(LAST) - (next: f2e6 .(HERE))
f2d8: 74 0b 00 00 00             ; XT=0b74, flags=00
f2dd: 07 2e 28 4c 41 53 54 29 00 ; 7, .(LAST)
;
f2e6: f8 f2 00 00                ; .(HERE) - (next: f2f8 .(MEM_SZ))
f2ea: 3c 0b 00 00 00             ; XT=0b3c, flags=00
f2ef: 07 2e 28 48 45 52 45 29 00 ; 7, .(HERE)
;
f2f8: 0c f3 00 00                ; .(MEM_SZ) - (next: f30c .S)
f2fc: 03 0b 00 00 00             ; XT=0b03, flags=00
f301: 09 2e 28 4d 45 4d 5f 53 5a 29 00 ; 9, .(MEM_SZ)
;
f30c: 19 f3 00 00                ; .S - (next: f319 MAX)
f310: 91 0a 00 00 00             ; XT=0a91, flags=00
f315: 02 2e 53 00                ; 2, .S
;
f319: 27 f3 00 00                ; MAX - (next: f327 MIN)
f31d: 81 0a 00 00 00             ; XT=0a81, flags=00
f322: 03 4d 41 58 00             ; 3, MAX
;
f327: 35 f3 00 00                ; MIN - (next: f335 BINARY.)
f32b: 71 0a 00 00 00             ; XT=0a71, flags=00
f330: 03 4d 49 4e 00             ; 3, MIN
;
f335: 47 f3 00 00                ; BINARY. - (next: f347 DECIMAL.)
f339: 54 0a 00 00 00             ; XT=0a54, flags=00
f33e: 07 42 49 4e 41 52 59 2e 00 ; 7, BINARY.
;
f347: 5a f3 00 00                ; DECIMAL. - (next: f35a HEX.)
f34b: 37 0a 00 00 00             ; XT=0a37, flags=00
f350: 08 44 45 43 49 4d 41 4c 2e 00 ; 8, DECIMAL.
;
f35a: 69 f3 00 00                ; HEX. - (next: f369 .)
f35e: 0e 0a 00 00 00             ; XT=0a0e, flags=00
f363: 04 48 45 58 2e 00          ; 4, HEX.
;
f369: 75 f3 00 00                ; . - (next: f375 (.))
f36d: fe 09 00 00 00             ; XT=09fe, flags=00
f372: 01 2e 00                   ; 1, .
;
f375: 83 f3 00 00                ; (.) - (next: f383 #P)
f379: e4 09 00 00 00             ; XT=09e4, flags=00
f37e: 03 28 2e 29 00             ; 3, (.)
;
f383: 90 f3 00 00                ; #P - (next: f390 #P-)
f387: ce 09 00 00 00             ; XT=09ce, flags=00
f38c: 02 23 50 00                ; 2, #P
;
f390: 9e f3 00 00                ; #P- - (next: f39e #>)
f394: b9 09 00 00 00             ; XT=09b9, flags=00
f399: 03 23 50 2d 00             ; 3, #P-
;
f39e: ab f3 00 00                ; #> - (next: f3ab #S)
f3a2: b3 09 00 00 00             ; XT=09b3, flags=00
f3a7: 02 23 3e 00                ; 2, #>
;
f3ab: b8 f3 00 00                ; #S - (next: f3b8 #)
f3af: 9f 09 00 00 00             ; XT=099f, flags=00
f3b4: 02 23 53 00                ; 2, #S
;
f3b8: c4 f3 00 00                ; # - (next: f3c4 <#)
f3bc: 73 09 00 00 00             ; XT=0973, flags=00
f3c1: 01 23 00                   ; 1, #
;
f3c4: d1 f3 00 00                ; <# - (next: f3d1 #LEN)
f3c8: 3e 09 00 00 00             ; XT=093e, flags=00
f3cd: 02 3c 23 00                ; 2, <#
;
f3d1: e0 f3 00 00                ; #LEN - (next: f3e0 #NEG)
f3d5: 2e 09 00 00 00             ; XT=092e, flags=00
f3da: 04 23 4c 45 4e 00          ; 4, #LEN
;
f3e0: ef f3 00 00                ; #NEG - (next: f3ef SPACE)
f3e4: 1e 09 00 00 00             ; XT=091e, flags=00
f3e9: 04 23 4e 45 47 00          ; 4, #NEG
;
f3ef: ff f3 00 00                ; SPACE - (next: f3ff /MOD)
f3f3: 15 09 00 00 00             ; XT=0915, flags=00
f3f8: 05 53 50 41 43 45 00       ; 5, SPACE
;
f3ff: 0e f4 00 00                ; /MOD - (next: f40e MOD)
f403: 07 09 00 00 00             ; XT=0907, flags=00
f408: 04 2f 4d 4f 44 00          ; 4, /MOD
;
f40e: 1c f4 00 00                ; MOD - (next: f41c isNumber?)
f412: fc 08 00 00 00             ; XT=08fc, flags=00
f417: 03 4d 4f 44 00             ; 3, MOD
;
f41c: 30 f4 00 00                ; isNumber? - (next: f430 ABS)
f420: 9c 08 00 00 00             ; XT=089c, flags=00
f425: 09 69 73 4e 75 6d 62 65 72 3f 00 ; 9, isNumber?
;
f430: 3e f4 00 00                ; ABS - (next: f43e NEGATE)
f434: 88 08 00 00 00             ; XT=0888, flags=00
f439: 03 41 42 53 00             ; 3, ABS
;
f43e: 4f f4 00 00                ; NEGATE - (next: f44f isNumChar?)
f442: 7e 08 00 00 00             ; XT=087e, flags=00
f447: 06 4e 45 47 41 54 45 00    ; 6, NEGATE
;
f44f: 64 f4 00 00                ; isNumChar? - (next: f464 isHEX?)
f453: 2d 08 00 00 00             ; XT=082d, flags=00
f458: 0a 69 73 4e 75 6d 43 68 61 72 3f 00 ; 10, isNumChar?
;
f464: 75 f4 00 00                ; isHEX? - (next: f475 findInDict)
f468: 1e 08 00 00 00             ; XT=081e, flags=00
f46d: 06 69 73 48 45 58 3f 00    ; 6, isHEX?
;
f475: 8a f4 00 00                ; findInDict - (next: f48a DICT.GetINLINE)
f479: d4 07 00 00 00             ; XT=07d4, flags=00
f47e: 0a 66 69 6e 64 49 6e 44 69 63 74 00 ; 10, findInDict
;
f48a: a3 f4 00 00                ; DICT.GetINLINE - (next: f4a3 DICT.GetIMMEDIATE)
f48e: c4 07 00 00 00             ; XT=07c4, flags=00
f493: 0e 44 49 43 54 2e 47 65 74 49 4e 4c 49 4e 45 00 ; 14, DICT.GetINLINE
;
f4a3: bf f4 00 00                ; DICT.GetIMMEDIATE - (next: f4bf FLAGS.ISINLINE?)
f4a7: b4 07 00 00 00             ; XT=07b4, flags=00
f4ac: 11 44 49 43 54 2e 47 65 74 49 4d 4d 45 44 49 41 54 45 00 ; 17, DICT.GetIMMEDIATE
;
f4bf: d9 f4 00 00                ; FLAGS.ISINLINE? - (next: f4d9 FLAGS.ISIMMEDIATE?)
f4c3: ab 07 00 00 00             ; XT=07ab, flags=00
f4c8: 0f 46 4c 41 47 53 2e 49 53 49 4e 4c 49 4e 45 3f 00 ; 15, FLAGS.ISINLINE?
;
f4d9: f6 f4 00 00                ; FLAGS.ISIMMEDIATE? - (next: f4f6 XT.GetDICTP)
f4dd: a2 07 00 00 00             ; XT=07a2, flags=00
f4e2: 12 46 4c 41 47 53 2e 49 53 49 4d 4d 45 44 49 41 54 45 3f 00 ; 18, FLAGS.ISIMMEDIATE?
;
f4f6: 0c f5 00 00                ; XT.GetDICTP - (next: f50c DICTP>NAME)
f4fa: 89 07 00 00 00             ; XT=0789, flags=00
f4ff: 0b 58 54 2e 47 65 74 44 49 43 54 50 00 ; 11, XT.GetDICTP
;
f50c: 21 f5 00 00                ; DICTP>NAME - (next: f521 DICT.GetFLAGS)
f510: 7c 07 00 00 00             ; XT=077c, flags=00
f515: 0a 44 49 43 54 50 3e 4e 41 4d 45 00 ; 10, DICTP>NAME
;
f521: 39 f5 00 00                ; DICT.GetFLAGS - (next: f539 DICT.GetXT)
f525: 70 07 00 00 00             ; XT=0770, flags=00
f52a: 0d 44 49 43 54 2e 47 65 74 46 4c 41 47 53 00 ; 13, DICT.GetFLAGS
;
f539: 4e f5 00 00                ; DICT.GetXT - (next: f54e NAME>DICT)
f53d: 64 07 00 00 00             ; XT=0764, flags=00
f542: 0a 44 49 43 54 2e 47 65 74 58 54 00 ; 10, DICT.GetXT
;
f54e: 62 f5 00 00                ; NAME>DICT - (next: f562 FLAGS>DICT)
f552: 54 07 00 00 00             ; XT=0754, flags=00
f557: 09 4e 41 4d 45 3e 44 49 43 54 00 ; 9, NAME>DICT
;
f562: 77 f5 00 00                ; FLAGS>DICT - (next: f577 XT>DICT)
f566: 45 07 00 00 00             ; XT=0745, flags=00
f56b: 0a 46 4c 41 47 53 3e 44 49 43 54 00 ; 10, FLAGS>DICT
;
f577: 89 f5 00 00                ; XT>DICT - (next: f589 NEXT>DICT)
f57b: 39 07 00 00 00             ; XT=0739, flags=00
f580: 07 58 54 3e 44 49 43 54 00 ; 7, XT>DICT
;
f589: 9d f5 00 00                ; NEXT>DICT - (next: f59d DICT>NAME)
f58d: 33 07 00 00 00             ; XT=0733, flags=00
f592: 09 4e 45 58 54 3e 44 49 43 54 00 ; 9, NEXT>DICT
;
f59d: b1 f5 00 00                ; DICT>NAME - (next: f5b1 DICT>FLAGS)
f5a1: 27 07 00 00 00             ; XT=0727, flags=00
f5a6: 09 44 49 43 54 3e 4e 41 4d 45 00 ; 9, DICT>NAME
;
f5b1: c6 f5 00 00                ; DICT>FLAGS - (next: f5c6 DICT>XT)
f5b5: 18 07 00 00 00             ; XT=0718, flags=00
f5ba: 0a 44 49 43 54 3e 46 4c 41 47 53 00 ; 10, DICT>FLAGS
;
f5c6: d8 f5 00 00                ; DICT>XT - (next: f5d8 DICT>NEXT)
f5ca: 0c 07 00 00 00             ; XT=070c, flags=00
f5cf: 07 44 49 43 54 3e 58 54 00 ; 7, DICT>XT
;
f5d8: ec f5 00 00                ; DICT>NEXT - (next: f5ec getOneWord)
f5dc: 06 07 00 00 00             ; XT=0706, flags=00
f5e1: 09 44 49 43 54 3e 4e 45 58 54 00 ; 9, DICT>NEXT
;
f5ec: 01 f6 00 00                ; getOneWord - (next: f601 skipWS)
f5f0: ce 06 00 00 00             ; XT=06ce, flags=00
f5f5: 0a 67 65 74 4f 6e 65 57 6f 72 64 00 ; 10, getOneWord
;
f601: 12 f6 00 00                ; skipWS - (next: f612 getInput)
f605: a5 06 00 00 00             ; XT=06a5, flags=00
f60a: 06 73 6b 69 70 57 53 00    ; 6, skipWS
;
f612: 25 f6 00 00                ; getInput - (next: f625 PAD)
f616: 8f 06 00 00 00             ; XT=068f, flags=00
f61b: 08 67 65 74 49 6e 70 75 74 00 ; 8, getInput
;
f625: 33 f6 00 00                ; PAD - (next: f633 tmp-alloc)
f629: 7d 06 00 00 00             ; XT=067d, flags=00
f62e: 03 50 41 44 00             ; 3, PAD
;
f633: 47 f6 00 00                ; tmp-alloc - (next: f647 tmp-cur)
f637: 66 06 00 00 00             ; XT=0666, flags=00
f63c: 09 74 6d 70 2d 61 6c 6c 6f 63 00 ; 9, tmp-alloc
;
f647: 59 f6 00 00                ; tmp-cur - (next: f659 tmp-init)
f64b: 5a 06 00 00 00             ; XT=065a, flags=00
f650: 07 74 6d 70 2d 63 75 72 00 ; 7, tmp-cur
;
f659: 6c f6 00 00                ; tmp-init - (next: f66c (tmp))
f65d: 48 06 00 00 00             ; XT=0648, flags=00
f662: 08 74 6d 70 2d 69 6e 69 74 00 ; 8, tmp-init
;
f66c: 7c f6 00 00                ; (tmp) - (next: f67c BETWEEN)
f670: 38 06 00 00 00             ; XT=0638, flags=00
f675: 05 28 74 6d 70 29 00       ; 5, (tmp)
;
f67c: 8e f6 00 00                ; BETWEEN - (next: f68e CR)
f680: 20 06 00 00 00             ; XT=0620, flags=00
f685: 07 42 45 54 57 45 45 4e 00 ; 7, BETWEEN
;
f68e: 9b f6 00 00                ; CR - (next: f69b CRLF)
f692: 14 06 00 00 02             ; XT=0614, flags=02
f697: 02 43 52 00                ; 2, CR
;
f69b: aa f6 00 00                ; CRLF - (next: f6aa BL)
f69f: 08 06 00 00 02             ; XT=0608, flags=02
f6a4: 04 43 52 4c 46 00          ; 4, CRLF
;
f6aa: b7 f6 00 00                ; BL - (next: f6b7 ()
f6ae: ff 05 00 00 02             ; XT=05ff, flags=02
f6b3: 02 42 4c 00                ; 2, BL
;
f6b7: c3 f6 00 00                ; ( - (next: f6c3 \)
f6bb: b5 05 00 00 01             ; XT=05b5, flags=01
f6c0: 01 28 00                   ; 1, (
;
f6c3: cf f6 00 00                ; \ - (next: f6cf CT)
f6c7: a6 05 00 00 01             ; XT=05a6, flags=01
f6cc: 01 5c 00                   ; 1, \
;
f6cf: dc f6 00 00                ; CT - (next: f6dc TYPE)
f6d3: 96 05 00 00 00             ; XT=0596, flags=00
f6d8: 02 43 54 00                ; 2, CT
;
f6dc: eb f6 00 00                ; TYPE - (next: f6eb COUNT)
f6e0: 76 05 00 00 00             ; XT=0576, flags=00
f6e5: 04 54 59 50 45 00          ; 4, TYPE
;
f6eb: fb f6 00 00                ; COUNT - (next: f6fb NOT)
f6ef: 6c 05 00 00 00             ; XT=056c, flags=00
f6f4: 05 43 4f 55 4e 54 00       ; 5, COUNT
;
f6fb: 09 f7 00 00                ; NOT - (next: f709 FALSE)
f6ff: 63 05 00 00 02             ; XT=0563, flags=02
f704: 03 4e 4f 54 00             ; 3, NOT
;
f709: 19 f7 00 00                ; FALSE - (next: f719 TRUE)
f70d: 5b 05 00 00 02             ; XT=055b, flags=02
f712: 05 46 41 4c 53 45 00       ; 5, FALSE
;
f719: 28 f7 00 00                ; TRUE - (next: f728 >=)
f71d: 53 05 00 00 02             ; XT=0553, flags=02
f722: 04 54 52 55 45 00          ; 4, TRUE
;
f728: 35 f7 00 00                ; >= - (next: f735 <=)
f72c: 49 05 00 00 02             ; XT=0549, flags=02
f731: 02 3e 3d 00                ; 2, >=
;
f735: 42 f7 00 00                ; <= - (next: f742 <>)
f739: 3f 05 00 00 02             ; XT=053f, flags=02
f73e: 02 3c 3d 00                ; 2, <=
;
f742: 4f f7 00 00                ; <> - (next: f74f 0=)
f746: 35 05 00 00 02             ; XT=0535, flags=02
f74b: 02 3c 3e 00                ; 2, <>
;
f74f: 5c f7 00 00                ; 0= - (next: f75c C+!)
f753: 2c 05 00 00 02             ; XT=052c, flags=02
f758: 02 30 3d 00                ; 2, 0=
;
f75c: 6a f7 00 00                ; C+! - (next: f76a +!)
f760: 20 05 00 00 00             ; XT=0520, flags=00
f765: 03 43 2b 21 00             ; 3, C+!
;
f76a: 77 f7 00 00                ; +! - (next: f777 C--)
f76e: 14 05 00 00 00             ; XT=0514, flags=00
f773: 02 2b 21 00                ; 2, +!
;
f777: 85 f7 00 00                ; C-- - (next: f785 C++)
f77b: 09 05 00 00 00             ; XT=0509, flags=00
f780: 03 43 2d 2d 00             ; 3, C--
;
f785: 93 f7 00 00                ; C++ - (next: f793 --)
f789: fe 04 00 00 00             ; XT=04fe, flags=00
f78e: 03 43 2b 2b 00             ; 3, C++
;
f793: a0 f7 00 00                ; -- - (next: f7a0 ++)
f797: f1 04 00 00 00             ; XT=04f1, flags=00
f79c: 02 2d 2d 00                ; 2, --
;
f7a0: ad f7 00 00                ; ++ - (next: f7ad -=)
f7a4: e4 04 00 00 00             ; XT=04e4, flags=00
f7a9: 02 2b 2b 00                ; 2, ++
;
f7ad: ba f7 00 00                ; -= - (next: f7ba +=)
f7b1: d8 04 00 00 00             ; XT=04d8, flags=00
f7b6: 02 2d 3d 00                ; 2, -=
;
f7ba: c7 f7 00 00                ; += - (next: f7c7 2/)
f7be: cd 04 00 00 00             ; XT=04cd, flags=00
f7c3: 02 2b 3d 00                ; 2, +=
;
f7c7: d4 f7 00 00                ; 2/ - (next: f7d4 2*)
f7cb: c4 04 00 00 02             ; XT=04c4, flags=02
f7d0: 02 32 2f 00                ; 2, 2/
;
f7d4: e1 f7 00 00                ; 2* - (next: f7e1 1-)
f7d8: bb 04 00 00 02             ; XT=04bb, flags=02
f7dd: 02 32 2a 00                ; 2, 2*
;
f7e1: ee f7 00 00                ; 1- - (next: f7ee 1+)
f7e5: b4 04 00 00 02             ; XT=04b4, flags=02
f7ea: 02 31 2d 00                ; 2, 1-
;
f7ee: fb f7 00 00                ; 1+ - (next: f7fb -ROT)
f7f2: ad 04 00 00 02             ; XT=04ad, flags=02
f7f7: 02 31 2b 00                ; 2, 1+
;
f7fb: 0a f8 00 00                ; -ROT - (next: f80a ROT)
f7ff: a3 04 00 00 02             ; XT=04a3, flags=02
f804: 04 2d 52 4f 54 00          ; 4, -ROT
;
f80a: 18 f8 00 00                ; ROT - (next: f818 NIP)
f80e: 99 04 00 00 02             ; XT=0499, flags=02
f813: 03 52 4f 54 00             ; 3, ROT
;
f818: 26 f8 00 00                ; NIP - (next: f826 TUCK)
f81c: 91 04 00 00 02             ; XT=0491, flags=02
f821: 03 4e 49 50 00             ; 3, NIP
;
f826: 35 f8 00 00                ; TUCK - (next: f835 2DROP)
f82a: 89 04 00 00 02             ; XT=0489, flags=02
f82f: 04 54 55 43 4b 00          ; 4, TUCK
;
f835: 45 f8 00 00                ; 2DROP - (next: f845 2DUP)
f839: 81 04 00 00 02             ; XT=0481, flags=02
f83e: 05 32 44 52 4f 50 00       ; 5, 2DROP
;
f845: 54 f8 00 00                ; 2DUP - (next: f854 RDROP)
f849: 79 04 00 00 02             ; XT=0479, flags=02
f84e: 04 32 44 55 50 00          ; 4, 2DUP
;
f854: 64 f8 00 00                ; RDROP - (next: f864 R@)
f858: 71 04 00 00 02             ; XT=0471, flags=02
f85d: 05 52 44 52 4f 50 00       ; 5, RDROP
;
f864: 71 f8 00 00                ; R@ - (next: f871 DEBUG-OFF)
f868: 68 04 00 00 02             ; XT=0468, flags=02
f86d: 02 52 40 00                ; 2, R@
;
f871: 85 f8 00 00                ; DEBUG-OFF - (next: f885 DEBUG-ON)
f875: 5f 04 00 00 02             ; XT=045f, flags=02
f87a: 09 44 45 42 55 47 2d 4f 46 46 00 ; 9, DEBUG-OFF
;
f885: 98 f8 00 00                ; DEBUG-ON - (next: f898 TRACE-OFF)
f889: 56 04 00 00 02             ; XT=0456, flags=02
f88e: 08 44 45 42 55 47 2d 4f 4e 00 ; 8, DEBUG-ON
;
f898: ac f8 00 00                ; TRACE-OFF - (next: f8ac TRACE-ON)
f89c: 4d 04 00 00 02             ; XT=044d, flags=02
f8a1: 09 54 52 41 43 45 2d 4f 46 46 00 ; 9, TRACE-OFF
;
f8ac: bf f8 00 00                ; TRACE-ON - (next: f8bf MEM_SZ)
f8b0: 44 04 00 00 02             ; XT=0444, flags=02
f8b5: 08 54 52 41 43 45 2d 4f 4e 00 ; 8, TRACE-ON
;
f8bf: d0 f8 00 00                ; MEM_SZ - (next: f8d0 isNeg)
f8c3: 3b 04 00 00 00             ; XT=043b, flags=00
f8c8: 06 4d 45 4d 5f 53 5a 00    ; 6, MEM_SZ
;
f8d0: e0 f8 00 00                ; isNeg - (next: f8e0 >IN)
f8d4: 2b 04 00 00 00             ; XT=042b, flags=00
f8d9: 05 69 73 4e 65 67 00       ; 5, isNeg
;
f8e0: ee f8 00 00                ; >IN - (next: f8ee LEAVE)
f8e4: 1b 04 00 00 00             ; XT=041b, flags=00
f8e9: 03 3e 49 4e 00             ; 3, >IN
;
f8ee: fe f8 00 00                ; LEAVE - (next: f8fe UNTIL)
f8f2: 06 04 00 00 01             ; XT=0406, flags=01
f8f7: 05 4c 45 41 56 45 00       ; 5, LEAVE
;
f8fe: 0e f9 00 00                ; UNTIL - (next: f90e WHILE)
f902: ec 03 00 00 01             ; XT=03ec, flags=01
f907: 05 55 4e 54 49 4c 00       ; 5, UNTIL
;
f90e: 1e f9 00 00                ; WHILE - (next: f91e AGAIN)
f912: d2 03 00 00 01             ; XT=03d2, flags=01
f917: 05 57 48 49 4c 45 00       ; 5, WHILE
;
f91e: 2e f9 00 00                ; AGAIN - (next: f92e BEGIN)
f922: b8 03 00 00 01             ; XT=03b8, flags=01
f927: 05 41 47 41 49 4e 00       ; 5, AGAIN
;
f92e: 3e f9 00 00                ; BEGIN - (next: f93e THEN)
f932: a2 03 00 00 01             ; XT=03a2, flags=01
f937: 05 42 45 47 49 4e 00       ; 5, BEGIN
;
f93e: 4d f9 00 00                ; THEN - (next: f94d ELSE)
f942: 8a 03 00 00 01             ; XT=038a, flags=01
f947: 04 54 48 45 4e 00          ; 4, THEN
;
f94d: 5c f9 00 00                ; ELSE - (next: f95c IF)
f951: 5f 03 00 00 01             ; XT=035f, flags=01
f956: 04 45 4c 53 45 00          ; 4, ELSE
;
f95c: 69 f9 00 00                ; IF - (next: f969 ?COMPILING)
f960: 3d 03 00 00 01             ; XT=033d, flags=01
f965: 02 49 46 00                ; 2, IF
;
f969: 7e f9 00 00                ; ?COMPILING - (next: f97e OFF)
f96d: 31 03 00 00 00             ; XT=0331, flags=00
f972: 0a 3f 43 4f 4d 50 49 4c 49 4e 47 00 ; 10, ?COMPILING
;
f97e: 8c f9 00 00                ; OFF - (next: f98c ON)
f982: 27 03 00 00 00             ; XT=0327, flags=00
f987: 03 4f 46 46 00             ; 3, OFF
;
f98c: 99 f9 00 00                ; ON - (next: f999 BINARY)
f990: 1d 03 00 00 00             ; XT=031d, flags=00
f995: 02 4f 4e 00                ; 2, ON
;
f999: aa f9 00 00                ; BINARY - (next: f9aa OCTAL)
f99d: 0f 03 00 00 00             ; XT=030f, flags=00
f9a2: 06 42 49 4e 41 52 59 00    ; 6, BINARY
;
f9aa: ba f9 00 00                ; OCTAL - (next: f9ba DECIMAL)
f9ae: 01 03 00 00 00             ; XT=0301, flags=00
f9b3: 05 4f 43 54 41 4c 00       ; 5, OCTAL
;
f9ba: cc f9 00 00                ; DECIMAL - (next: f9cc HEX)
f9be: f3 02 00 00 00             ; XT=02f3, flags=00
f9c3: 07 44 45 43 49 4d 41 4c 00 ; 7, DECIMAL
;
f9cc: da f9 00 00                ; HEX - (next: f9da C,)
f9d0: e5 02 00 00 00             ; XT=02e5, flags=00
f9d5: 03 48 45 58 00             ; 3, HEX
;
f9da: e7 f9 00 00                ; C, - (next: f9e7 ,)
f9de: c9 02 00 00 00             ; XT=02c9, flags=00
f9e3: 02 43 2c 00                ; 2, C,
;
f9e7: f3 f9 00 00                ; , - (next: f9f3 HERE)
f9eb: aa 02 00 00 00             ; XT=02aa, flags=00
f9f0: 01 2c 00                   ; 1, ,
;
f9f3: 02 fa 00 00                ; HERE - (next: fa02 LAST)
f9f7: 9e 02 00 00 02             ; XT=029e, flags=02
f9fc: 04 48 45 52 45 00          ; 4, HERE
;
fa02: 11 fa 00 00                ; LAST - (next: fa11 FLAG_INLINE)
fa06: 92 02 00 00 02             ; XT=0292, flags=02
fa0b: 04 4c 41 53 54 00          ; 4, LAST
;
fa11: 27 fa 00 00                ; FLAG_INLINE - (next: fa27 FLAG_IMMEDIATE)
fa15: 8a 02 00 00 02             ; XT=028a, flags=02
fa1a: 0b 46 4c 41 47 5f 49 4e 4c 49 4e 45 00 ; 11, FLAG_INLINE
;
fa27: 40 fa 00 00                ; FLAG_IMMEDIATE - (next: fa40 CELLS)
fa2b: 82 02 00 00 02             ; XT=0282, flags=02
fa30: 0e 46 4c 41 47 5f 49 4d 4d 45 44 49 41 54 45 00 ; 14, FLAG_IMMEDIATE
;
fa40: 50 fa 00 00                ; CELLS - (next: fa50 IMMEDIATE)
fa44: 76 02 00 00 02             ; XT=0276, flags=02
fa49: 05 43 45 4c 4c 53 00       ; 5, CELLS
;
fa50: 64 fa 00 00                ; IMMEDIATE - (next: fa64 INLINE)
fa54: 5a 02 00 00 00             ; XT=025a, flags=00
fa59: 09 49 4d 4d 45 44 49 41 54 45 00 ; 9, IMMEDIATE
;
fa64: 75 fa 00 00                ; INLINE - (next: fa75 BYE)
fa68: 3e 02 00 00 00             ; XT=023e, flags=00
fa6d: 06 49 4e 4c 49 4e 45 00    ; 6, INLINE
;
fa75: 83 fa 00 00                ; BYE - (next: fa83 RESET)
fa79: 37 02 00 00 02             ; XT=0237, flags=02
fa7e: 03 42 59 45 00             ; 3, BYE
;
fa83: 93 fa 00 00                ; RESET - (next: fa93 BREAK)
fa87: 30 02 00 00 02             ; XT=0230, flags=02
fa8c: 05 52 45 53 45 54 00       ; 5, RESET
;
fa93: a3 fa 00 00                ; BREAK - (next: faa3 GETTICK)
fa97: 29 02 00 00 02             ; XT=0229, flags=02
fa9c: 05 42 52 45 41 4b 00       ; 5, BREAK
;
faa3: b5 fa 00 00                ; GETTICK - (next: fab5 DEC)
faa7: 22 02 00 00 02             ; XT=0222, flags=02
faac: 07 47 45 54 54 49 43 4b 00 ; 7, GETTICK
;
fab5: c3 fa 00 00                ; DEC - (next: fac3 RDEPTH)
fab9: 1b 02 00 00 02             ; XT=021b, flags=02
fabe: 03 44 45 43 00             ; 3, DEC
;
fac3: d4 fa 00 00                ; RDEPTH - (next: fad4 INC)
fac7: 14 02 00 00 02             ; XT=0214, flags=02
facc: 06 52 44 45 50 54 48 00    ; 6, RDEPTH
;
fad4: e2 fa 00 00                ; INC - (next: fae2 USPOP)
fad8: 0d 02 00 00 02             ; XT=020d, flags=02
fadd: 03 49 4e 43 00             ; 3, INC
;
fae2: f2 fa 00 00                ; USPOP - (next: faf2 USPUSH)
fae6: 06 02 00 00 02             ; XT=0206, flags=02
faeb: 05 55 53 50 4f 50 00       ; 5, USPOP
;
faf2: 03 fb 00 00                ; USPUSH - (next: fb03 USINIT)
faf6: ff 01 00 00 02             ; XT=01ff, flags=02
fafb: 06 55 53 50 55 53 48 00    ; 6, USPUSH
;
fb03: 14 fb 00 00                ; USINIT - (next: fb14 COMPAREI)
fb07: f8 01 00 00 02             ; XT=01f8, flags=02
fb0c: 06 55 53 49 4e 49 54 00    ; 6, USINIT
;
fb14: 27 fb 00 00                ; COMPAREI - (next: fb27 GETCH)
fb18: f1 01 00 00 02             ; XT=01f1, flags=02
fb1d: 08 43 4f 4d 50 41 52 45 49 00 ; 8, COMPAREI
;
fb27: 37 fb 00 00                ; GETCH - (next: fb37 DEPTH)
fb2b: ea 01 00 00 02             ; XT=01ea, flags=02
fb30: 05 47 45 54 43 48 00       ; 5, GETCH
;
fb37: 47 fb 00 00                ; DEPTH - (next: fb47 PICK)
fb3b: e3 01 00 00 02             ; XT=01e3, flags=02
fb40: 05 44 45 50 54 48 00       ; 5, DEPTH
;
fb47: 56 fb 00 00                ; PICK - (next: fb56 AND)
fb4b: dc 01 00 00 02             ; XT=01dc, flags=02
fb50: 04 50 49 43 4b 00          ; 4, PICK
;
fb56: 64 fb 00 00                ; AND - (next: fb64 LOGLEVEL)
fb5a: d5 01 00 00 02             ; XT=01d5, flags=02
fb5f: 03 41 4e 44 00             ; 3, AND
;
fb64: 77 fb 00 00                ; LOGLEVEL - (next: fb77 R>)
fb68: ce 01 00 00 02             ; XT=01ce, flags=02
fb6d: 08 4c 4f 47 4c 45 56 45 4c 00 ; 8, LOGLEVEL
;
fb77: 84 fb 00 00                ; R> - (next: fb84 >R)
fb7b: c7 01 00 00 02             ; XT=01c7, flags=02
fb80: 02 52 3e 00                ; 2, R>
;
fb84: 91 fb 00 00                ; >R - (next: fb91 FCLOSE)
fb88: c0 01 00 00 02             ; XT=01c0, flags=02
fb8d: 02 3e 52 00                ; 2, >R
;
fb91: a2 fb 00 00                ; FCLOSE - (next: fba2 FWRITE)
fb95: b9 01 00 00 02             ; XT=01b9, flags=02
fb9a: 06 46 43 4c 4f 53 45 00    ; 6, FCLOSE
;
fba2: b3 fb 00 00                ; FWRITE - (next: fbb3 FREADLINE)
fba6: b2 01 00 00 02             ; XT=01b2, flags=02
fbab: 06 46 57 52 49 54 45 00    ; 6, FWRITE
;
fbb3: c7 fb 00 00                ; FREADLINE - (next: fbc7 FREAD)
fbb7: ab 01 00 00 02             ; XT=01ab, flags=02
fbbc: 09 46 52 45 41 44 4c 49 4e 45 00 ; 9, FREADLINE
;
fbc7: d7 fb 00 00                ; FREAD - (next: fbd7 FOPEN)
fbcb: a4 01 00 00 02             ; XT=01a4, flags=02
fbd0: 05 46 52 45 41 44 00       ; 5, FREAD
;
fbd7: e7 fb 00 00                ; FOPEN - (next: fbe7 COMPARE)
fbdb: 9d 01 00 00 02             ; XT=019d, flags=02
fbe0: 05 46 4f 50 45 4e 00       ; 5, FOPEN
;
fbe7: f9 fb 00 00                ; COMPARE - (next: fbf9 OVER)
fbeb: 96 01 00 00 02             ; XT=0196, flags=02
fbf0: 07 43 4f 4d 50 41 52 45 00 ; 7, COMPARE
;
fbf9: 08 fc 00 00                ; OVER - (next: fc08 EMIT)
fbfd: 8f 01 00 00 02             ; XT=018f, flags=02
fc02: 04 4f 56 45 52 00          ; 4, OVER
;
fc08: 17 fc 00 00                ; EMIT - (next: fc17 DICTP)
fc0c: 88 01 00 00 02             ; XT=0188, flags=02
fc11: 04 45 4d 49 54 00          ; 4, EMIT
;
fc17: 27 fc 00 00                ; DICTP - (next: fc27 >)
fc1b: 7b 01 00 00 02             ; XT=017b, flags=02
fc20: 05 44 49 43 54 50 00       ; 5, DICTP
;
fc27: 33 fc 00 00                ; > - (next: fc33 =)
fc2b: 74 01 00 00 02             ; XT=0174, flags=02
fc30: 01 3e 00                   ; 1, >
;
fc33: 3f fc 00 00                ; = - (next: fc3f <)
fc37: 6d 01 00 00 02             ; XT=016d, flags=02
fc3c: 01 3d 00                   ; 1, =
;
fc3f: 4b fc 00 00                ; < - (next: fc4b /)
fc43: 66 01 00 00 02             ; XT=0166, flags=02
fc48: 01 3c 00                   ; 1, <
;
fc4b: 57 fc 00 00                ; / - (next: fc57 *)
fc4f: 5f 01 00 00 02             ; XT=015f, flags=02
fc54: 01 2f 00                   ; 1, /
;
fc57: 63 fc 00 00                ; * - (next: fc63 -)
fc5b: 58 01 00 00 02             ; XT=0158, flags=02
fc60: 01 2a 00                   ; 1, *
;
fc63: 6f fc 00 00                ; - - (next: fc6f +)
fc67: 51 01 00 00 02             ; XT=0151, flags=02
fc6c: 01 2d 00                   ; 1, -
;
fc6f: 7b fc 00 00                ; + - (next: fc7b C!)
fc73: 4a 01 00 00 02             ; XT=014a, flags=02
fc78: 01 2b 00                   ; 1, +
;
fc7b: 88 fc 00 00                ; C! - (next: fc88 C@)
fc7f: 43 01 00 00 02             ; XT=0143, flags=02
fc84: 02 43 21 00                ; 2, C!
;
fc88: 95 fc 00 00                ; C@ - (next: fc95 CLITERAL)
fc8c: 3c 01 00 00 02             ; XT=013c, flags=02
fc91: 02 43 40 00                ; 2, C@
;
fc95: a8 fc 00 00                ; CLITERAL - (next: fca8 OR)
fc99: 2f 01 00 00 02             ; XT=012f, flags=02
fc9e: 08 43 4c 49 54 45 52 41 4c 00 ; 8, CLITERAL
;
fca8: b5 fc 00 00                ; OR - (next: fcb5 RET)
fcac: 28 01 00 00 02             ; XT=0128, flags=02
fcb1: 02 4f 52 00                ; 2, OR
;
fcb5: c3 fc 00 00                ; RET - (next: fcc3 CALL)
fcb9: 1b 01 00 00 00             ; XT=011b, flags=00
fcbe: 03 52 45 54 00             ; 3, RET
;
fcc3: d2 fc 00 00                ; CALL - (next: fcd2 JMPNZ)
fcc7: 0e 01 00 00 00             ; XT=010e, flags=00
fccc: 04 43 41 4c 4c 00          ; 4, CALL
;
fcd2: e2 fc 00 00                ; JMPNZ - (next: fce2 JMPZ)
fcd6: 01 01 00 00 00             ; XT=0101, flags=00
fcdb: 05 4a 4d 50 4e 5a 00       ; 5, JMPNZ
;
fce2: f1 fc 00 00                ; JMPZ - (next: fcf1 JMP)
fce6: f4 00 00 00 00             ; XT=00f4, flags=00
fceb: 04 4a 4d 50 5a 00          ; 4, JMPZ
;
fcf1: ff fc 00 00                ; JMP - (next: fcff SLITERAL)
fcf5: e7 00 00 00 00             ; XT=00e7, flags=00
fcfa: 03 4a 4d 50 00             ; 3, JMP
;
fcff: 12 fd 00 00                ; SLITERAL - (next: fd12 DUP)
fd03: da 00 00 00 00             ; XT=00da, flags=00
fd08: 08 53 4c 49 54 45 52 41 4c 00 ; 8, SLITERAL
;
fd12: 20 fd 00 00                ; DUP - (next: fd20 DROP)
fd16: d3 00 00 00 02             ; XT=00d3, flags=02
fd1b: 03 44 55 50 00             ; 3, DUP
;
fd20: 2f fd 00 00                ; DROP - (next: fd2f SWAP)
fd24: cc 00 00 00 02             ; XT=00cc, flags=02
fd29: 04 44 52 4f 50 00          ; 4, DROP
;
fd2f: 3e fd 00 00                ; SWAP - (next: fd3e !)
fd33: c5 00 00 00 02             ; XT=00c5, flags=02
fd38: 04 53 57 41 50 00          ; 4, SWAP
;
fd3e: 4a fd 00 00                ; ! - (next: fd4a @)
fd42: be 00 00 00 02             ; XT=00be, flags=02
fd47: 01 21 00                   ; 1, !
;
fd4a: 56 fd 00 00                ; @ - (next: fd56 LITERAL)
fd4e: b7 00 00 00 02             ; XT=00b7, flags=02
fd53: 01 40 00                   ; 1, @
;
fd56: 68 fd 00 00                ; LITERAL - (next: fd68 ])
fd5a: aa 00 00 00 00             ; XT=00aa, flags=00
fd5f: 07 4c 49 54 45 52 41 4c 00 ; 7, LITERAL
;
fd68: 74 fd 00 00                ; ] - (next: fd74 [)
fd6c: 9f 00 00 00 01             ; XT=009f, flags=01
fd71: 01 5d 00                   ; 1, ]
;
fd74: 80 fd 00 00                ; [ - (next: fd80 ,)
fd78: 94 00 00 00 01             ; XT=0094, flags=01
fd7d: 01 5b 00                   ; 1, [
;
fd80: 8c fd 00 00                ; , - (next: fd8c C,)
fd84: 81 00 00 00 00             ; XT=0081, flags=00
fd89: 01 2c 00                   ; 1, ,
;
fd93: 9f fd 00 00                ; , - (next: fd9f C,)
fd97: 8a 00 00 00 00             ; XT=008a, flags=00
fd9c: 01 2c 00                   ; 1, ,
;
<<<<<<< HEAD
fd9f: ac fd 00 00                ; C, - (next: fdac STATE)
fda3: 77 00 00 00 00             ; XT=0077, flags=00
fda8: 02 43 2c 00                ; 2, C,
;
fdac: bc fd 00 00                ; STATE - (next: fdbc (LAST))
fdb0: 6c 00 00 00 00             ; XT=006c, flags=00
fdb5: 05 53 54 41 54 45 00       ; 5, STATE
;
fdbc: cd fd 00 00                ; (LAST) - (next: fdcd (HERE))
fdc0: 61 00 00 00 00             ; XT=0061, flags=00
fdc5: 06 28 4c 41 53 54 29 00    ; 6, (LAST)
;
fdcd: de fd 00 00                ; (HERE) - (next: fdde BASE)
fdd1: 56 00 00 00 00             ; XT=0056, flags=00
fdd6: 06 28 48 45 52 45 29 00    ; 6, (HERE)
;
fdde: ed fd 00 00                ; BASE - (next: fded CELL)
fde2: 4b 00 00 00 00             ; XT=004b, flags=00
fde7: 04 42 41 53 45 00          ; 4, BASE
;
fded: fc fd 00 00                ; CELL - (next: fdfc <end>)
fdf1: 40 00 00 00 00             ; XT=0040, flags=00
fdf6: 04 43 45 4c 4c 00          ; 4, CELL
=======
fd99: a9 fd 00 00                ; STATE - (next: fda9 INPUT-FP)
fd9d: 68 00 00 00 00             ; XT=0068, flags=00
fda2: 05 53 54 41 54 45 00       ; 5, STATE
;
fda9: bc fd 00 00                ; INPUT-FP - (next: fdbc (LAST))
fdad: 60 00 00 00 00             ; XT=0060, flags=00
fdb2: 08 49 4e 50 55 54 2d 46 50 00 ; 8, INPUT-FP
;
fdbc: cd fd 00 00                ; (LAST) - (next: fdcd (HERE))
fdc0: 58 00 00 00 00             ; XT=0058, flags=00
fdc5: 06 28 4c 41 53 54 29 00    ; 6, (LAST)
;
fdcd: de fd 00 00                ; (HERE) - (next: fdde CELL)
fdd1: 50 00 00 00 00             ; XT=0050, flags=00
fdd6: 06 28 48 45 52 45 29 00    ; 6, (HERE)
;
fdde: ed fd 00 00                ; CELL - (next: fded BASE)
fde2: 48 00 00 00 00             ; XT=0048, flags=00
fde7: 04 43 45 4c 4c 00          ; 4, CELL
;
fded: fc fd 00 00                ; BASE - (next: fdfc <end>)
fdf1: 40 00 00 00 00             ; XT=0040, flags=00
fdf6: 04 42 41 53 45 00          ; 4, BASE
>>>>>>> develop
;
fdfc: 00 00 00 00                ; End.
