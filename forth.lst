; memory-size: 65536 bytes, (10000 hex)
; data-stack: fe00, grows up
; return-stack: fffc, grows down
;
0000: 08 3c 12 00 00             ; JMP main (123c)
;
0005: 00 00 00
0008: 00000004 00000000
0010: 0000148f 0000f03e 0000000a 00000000
0020: 00000000 00010000 00000000 00000000
0030: 00000000 00000000 00000000 00000000
;
0040: 18 eb ff 00 00             ; DICTP (HERE) (ffeb)
0045: 01 4b 00 00 00             ; LITERAL 75 (0x004b)
004a: 0c                         ; RET
004b: 8f 14 00 00                ; dw 0x148f
;
004f: 18 da ff 00 00             ; DICTP (LAST) (ffda)
0054: 01 5a 00 00 00             ; LITERAL 90 (0x005a)
0059: 0c                         ; RET
005a: 3e f0 00 00                ; dw 0xf03e
;
005e: 18 cb ff 00 00             ; DICTP BASE (ffcb)
0063: 01 69 00 00 00             ; LITERAL 105 (0x0069)
0068: 0c                         ; RET
0069: 0a 00 00 00                ; dw 0x000a
;
006d: 18 bb ff 00 00             ; DICTP STATE (ffbb)
0072: 01 78 00 00 00             ; LITERAL 120 (0x0078)
0077: 0c                         ; RET
0078: 63 00 00 00                ; dw 0x0063
;
007c: 18 a8 ff 00 00             ; DICTP (MEM_SZ) (ffa8)
0081: 01 87 00 00 00             ; LITERAL 135 (0x0087)
0086: 0c                         ; RET
0087: 00 00 01 00                ; dw 0x10000
;
008b: 18 9a ff 00 00             ; DICTP >IN (ff9a)
0090: 01 96 00 00 00             ; LITERAL 150 (0x0096)
0095: 0c                         ; RET
0096: 00 00 00 00                ; dw 0x0000
;
009a: 18 8b ff 00 00             ; DICTP #NEG (ff8b)
009f: 01 a5 00 00 00             ; LITERAL 165 (0x00a5)
00a4: 0c                         ; RET
00a5: 00 00 00 00                ; dw 0x0000
;
00a9: 18 7c ff 00 00             ; DICTP #LEN (ff7c)
00ae: 01 b4 00 00 00             ; LITERAL 180 (0x00b4)
00b3: 0c                         ; RET
00b4: 05 00 00 00                ; dw 0x0005
;
00b8: 18 69 ff 00 00             ; DICTP INPUT-FP (ff69)
00bd: 01 c3 00 00 00             ; LITERAL 195 (0x00c3)
00c2: 0c                         ; RET
00c3: 00 00 00 00                ; dw 0x0000
;
00c7: 18 5c ff 00 00             ; DICTP T1 (ff5c)
00cc: 01 d2 00 00 00             ; LITERAL 210 (0x00d2)
00d1: 0c                         ; RET
00d2: 00 00 00 00                ; dw 0x0000
;
00d6: 18 4f ff 00 00             ; DICTP T2 (ff4f)
00db: 01 e1 00 00 00             ; LITERAL 225 (0x00e1)
00e0: 0c                         ; RET
00e1: 00 00 00 00                ; dw 0x0000
;
00e5: 18 42 ff 00 00             ; DICTP T3 (ff42)
00ea: 01 f0 00 00 00             ; LITERAL 240 (0x00f0)
00ef: 0c                         ; RET
00f0: 00 00 00 00                ; dw 0x0000
;
00f4: fc                         ; NOP
00f5: 18 33 ff 00 00             ; DICTP CELL (ff33)
00fa: 0e 04                      ; CLITERAL 4
00fc: 0c                         ; RET
;
00fd: 18 24 ff 00 00             ; DICTP HERE (ff24)
0102: 0b 40 00 00 00             ; CALL (HERE) (0040)
0107: 02                         ; FETCH
0108: 0c                         ; RET
;
0109: 18 15 ff 00 00             ; DICTP LAST (ff15)
010e: 0b 4f 00 00 00             ; CALL (LAST) (004f)
0113: 02                         ; FETCH
0114: 0c                         ; RET
;
0115: 18 08 ff 00 00             ; DICTP C, (ff08)
011a: 0b fd 00 00 00             ; CALL HERE (00fd)
011f: 10                         ; CSTORE
0120: 0b fd 00 00 00             ; CALL HERE (00fd)
0125: 2c                         ; INC
0126: 0b 40 00 00 00             ; CALL (HERE) (0040)
012b: 03                         ; STORE
012c: 0c                         ; RET
;
012d: 18 fc fe 00 00             ; DICTP , (fefc)
0132: 0b fd 00 00 00             ; CALL HERE (00fd)
0137: 03                         ; STORE
0138: 0b fd 00 00 00             ; CALL HERE (00fd)
013d: 0e 04                      ; CLITERAL 4
013f: 11                         ; ADD
0140: 0b 40 00 00 00             ; CALL (HERE) (0040)
0145: 03                         ; STORE
0146: 0c                         ; RET
;
0147: 18 f0 fe 00 00             ; DICTP [ (fef0)
014c: 0e 00                      ; CLITERAL 0
014e: 0b 6d 00 00 00             ; CALL STATE (006d)
0153: 03                         ; STORE
0154: 0c                         ; RET
;
0155: 18 e4 fe 00 00             ; DICTP ] (fee4)
015a: 0e 01                      ; CLITERAL 1
015c: 0b 6d 00 00 00             ; CALL STATE (006d)
0161: 03                         ; STORE
0162: 0c                         ; RET
;
0163: 18 d2 fe 00 00             ; DICTP LITERAL (fed2)
0168: 0e 01                      ; CLITERAL 1
016a: 0b 15 01 00 00             ; CALL C, (0115)
016f: 0c                         ; RET
;
0170: 18 c6 fe 00 00             ; DICTP @ (fec6)
0175: 02                         ; FETCH
0176: 0c                         ; RET
;
0177: 18 ba fe 00 00             ; DICTP ! (feba)
017c: 03                         ; STORE
017d: 0c                         ; RET
;
017e: 18 ab fe 00 00             ; DICTP SWAP (feab)
0183: 04                         ; SWAP
0184: 0c                         ; RET
;
0185: 18 9c fe 00 00             ; DICTP DROP (fe9c)
018a: 05                         ; DROP
018b: 0c                         ; RET
;
018c: 18 8e fe 00 00             ; DICTP DUP (fe8e)
0191: 06                         ; DUP
0192: 0c                         ; RET
;
0193: 18 7b fe 00 00             ; DICTP SLITERAL (fe7b)
0198: 0e 07                      ; CLITERAL 7
019a: 0b 15 01 00 00             ; CALL C, (0115)
019f: 0c                         ; RET
;
01a0: 18 6d fe 00 00             ; DICTP JMP (fe6d)
01a5: 0e 08                      ; CLITERAL 8
01a7: 0b 15 01 00 00             ; CALL C, (0115)
01ac: 0c                         ; RET
;
01ad: 18 5e fe 00 00             ; DICTP JMPZ (fe5e)
01b2: 0e 09                      ; CLITERAL 9
01b4: 0b 15 01 00 00             ; CALL C, (0115)
01b9: 0c                         ; RET
;
01ba: 18 4e fe 00 00             ; DICTP JMPNZ (fe4e)
01bf: 0e 0a                      ; CLITERAL 10
01c1: 0b 15 01 00 00             ; CALL C, (0115)
01c6: 0c                         ; RET
;
01c7: 18 3f fe 00 00             ; DICTP CALL (fe3f)
01cc: 0e 0b                      ; CLITERAL 11
01ce: 0b 15 01 00 00             ; CALL C, (0115)
01d3: 0c                         ; RET
;
01d4: 18 31 fe 00 00             ; DICTP RET (fe31)
01d9: 0e 0c                      ; CLITERAL 12
01db: 0b 15 01 00 00             ; CALL C, (0115)
01e0: 0c                         ; RET
;
01e1: 18 24 fe 00 00             ; DICTP OR (fe24)
01e6: 0d                         ; OR
01e7: 0c                         ; RET
;
01e8: 18 11 fe 00 00             ; DICTP CLITERAL (fe11)
01ed: 0e 0e                      ; CLITERAL 14
01ef: 0b 15 01 00 00             ; CALL C, (0115)
01f4: 0c                         ; RET
;
01f5: 18 04 fe 00 00             ; DICTP C@ (fe04)
01fa: 0f                         ; CFETCH
01fb: 0c                         ; RET
;
01fc: 18 f7 fd 00 00             ; DICTP C! (fdf7)
0201: 10                         ; CSTORE
0202: 0c                         ; RET
;
0203: 18 eb fd 00 00             ; DICTP + (fdeb)
0208: 11                         ; ADD
0209: 0c                         ; RET
;
020a: 18 df fd 00 00             ; DICTP - (fddf)
020f: 12                         ; SUB
0210: 0c                         ; RET
;
0211: 18 d3 fd 00 00             ; DICTP * (fdd3)
0216: 13                         ; MUL
0217: 0c                         ; RET
;
0218: 18 c7 fd 00 00             ; DICTP / (fdc7)
021d: 14                         ; DIV
021e: 0c                         ; RET
;
021f: 18 bb fd 00 00             ; DICTP < (fdbb)
0224: 15                         ; LT
0225: 0c                         ; RET
;
0226: 18 af fd 00 00             ; DICTP = (fdaf)
022b: 16                         ; EQ
022c: 0c                         ; RET
;
022d: 18 a3 fd 00 00             ; DICTP > (fda3)
0232: 17                         ; GT
0233: 0c                         ; RET
;
0234: 18 93 fd 00 00             ; DICTP DICTP (fd93)
0239: 0e 18                      ; CLITERAL 24
023b: 0b 15 01 00 00             ; CALL C, (0115)
0240: 0c                         ; RET
;
0241: 18 84 fd 00 00             ; DICTP EMIT (fd84)
0246: 19                         ; EMIT
0247: 0c                         ; RET
;
0248: 18 75 fd 00 00             ; DICTP OVER (fd75)
024d: 1a                         ; OVER
024e: 0c                         ; RET
;
024f: 18 63 fd 00 00             ; DICTP COMPARE (fd63)
0254: 1b                         ; COMPARE
0255: 0c                         ; RET
;
0256: 18 53 fd 00 00             ; DICTP FOPEN (fd53)
025b: 1c                         ; FOPEN
025c: 0c                         ; RET
;
025d: 18 43 fd 00 00             ; DICTP FREAD (fd43)
0262: 1d                         ; FREAD
0263: 0c                         ; RET
;
0264: 18 2f fd 00 00             ; DICTP FREADLINE (fd2f)
0269: 1e                         ; FREADLINE
026a: 0c                         ; RET
;
026b: 18 1e fd 00 00             ; DICTP FWRITE (fd1e)
0270: 1f                         ; FWRITE
0271: 0c                         ; RET
;
0272: 18 0d fd 00 00             ; DICTP FCLOSE (fd0d)
0277: 20                         ; FCLOSE
0278: 0c                         ; RET
;
0279: 18 00 fd 00 00             ; DICTP >R (fd00)
027e: 21                         ; DTOR
027f: 0c                         ; RET
;
0280: 18 f3 fc 00 00             ; DICTP R> (fcf3)
0285: 22                         ; RTOD
0286: 0c                         ; RET
;
0287: 18 e0 fc 00 00             ; DICTP LOGLEVEL (fce0)
028c: 23                         ; LOGLEVEL
028d: 0c                         ; RET
;
028e: 18 d2 fc 00 00             ; DICTP AND (fcd2)
0293: 24                         ; AND
0294: 0c                         ; RET
;
0295: 18 c3 fc 00 00             ; DICTP PICK (fcc3)
029a: 25                         ; PICK
029b: 0c                         ; RET
;
029c: 18 b3 fc 00 00             ; DICTP DEPTH (fcb3)
02a1: 26                         ; DEPTH
02a2: 0c                         ; RET
;
02a3: 18 a3 fc 00 00             ; DICTP GETCH (fca3)
02a8: 27                         ; GETCH
02a9: 0c                         ; RET
;
02aa: 18 90 fc 00 00             ; DICTP COMPAREI (fc90)
02af: 28                         ; COMPAREI
02b0: 0c                         ; RET
;
02b1: 18 81 fc 00 00             ; DICTP /MOD (fc81)
02b6: 29                         ; SLASHMOD
02b7: 0c                         ; RET
;
02b8: 18 73 fc 00 00             ; DICTP NOT (fc73)
02bd: 2a                         ; NOT
02be: 0c                         ; RET
;
02bf: 18 62 fc 00 00             ; DICTP RFETCH (fc62)
02c4: 2b                         ; RFETCH
02c5: 0c                         ; RET
;
02c6: 18 54 fc 00 00             ; DICTP INC (fc54)
02cb: 2c                         ; INC
02cc: 0c                         ; RET
;
02cd: 18 43 fc 00 00             ; DICTP RDEPTH (fc43)
02d2: 2d                         ; RDEPTH
02d3: 0c                         ; RET
;
02d4: 18 35 fc 00 00             ; DICTP DEC (fc35)
02d9: 2e                         ; DEC
02da: 0c                         ; RET
;
02db: 18 23 fc 00 00             ; DICTP GETTICK (fc23)
02e0: 2f                         ; GETTICK
02e1: 0c                         ; RET
;
02e2: 18 16 fc 00 00             ; DICTP << (fc16)
02e7: 30                         ; SHIFTLEFT
02e8: 0c                         ; RET
;
02e9: 18 09 fc 00 00             ; DICTP >> (fc09)
02ee: 31                         ; SHIFTRIGHT
02ef: 0c                         ; RET
;
02f0: 18 fc fb 00 00             ; DICTP +! (fbfc)
02f5: 32                         ; PLUSSTORE
02f6: 0c                         ; RET
;
02f7: 18 e7 fb 00 00             ; DICTP OPEN-BLOCK (fbe7)
02fc: 33                         ; RESET
02fd: 0c                         ; RET
;
02fe: 18 d9 fb 00 00             ; DICTP XOR (fbd9)
0303: 34                         ; RESET
0304: 0c                         ; RET
;
0305: 18 cc fb 00 00             ; DICTP a! (fbcc)
030a: 35                         ; RESET
030b: 0c                         ; RET
;
030c: 18 c0 fb 00 00             ; DICTP a (fbc0)
0311: 36                         ; RESET
0312: 0c                         ; RET
;
0313: 18 b3 fb 00 00             ; DICTP @+ (fbb3)
0318: 37                         ; RESET
0319: 0c                         ; RET
;
031a: 18 a5 fb 00 00             ; DICTP c@+ (fba5)
031f: 38                         ; RESET
0320: 0c                         ; RET
;
0321: 18 98 fb 00 00             ; DICTP !+ (fb98)
0326: 39                         ; RESET
0327: 0c                         ; RET
;
0328: 18 8a fb 00 00             ; DICTP c!+ (fb8a)
032d: 3a                         ; RESET
032e: 0c                         ; RET
;
032f: 18 78 fb 00 00             ; DICTP BRANCHF (fb78)
0334: 0e 5a                      ; CLITERAL 90
0336: 0b 15 01 00 00             ; CALL C, (0115)
033b: 0c                         ; RET
;
033c: 18 65 fb 00 00             ; DICTP BRANCHFZ (fb65)
0341: 0e 5b                      ; CLITERAL 91
0343: 0b 15 01 00 00             ; CALL C, (0115)
0348: 0c                         ; RET
;
0349: 18 51 fb 00 00             ; DICTP BRANCHFNZ (fb51)
034e: 0e 5c                      ; CLITERAL 92
0350: 0b 15 01 00 00             ; CALL C, (0115)
0355: 0c                         ; RET
;
0356: 18 3f fb 00 00             ; DICTP BRANCHB (fb3f)
035b: 0e 5d                      ; CLITERAL 93
035d: 0b 15 01 00 00             ; CALL C, (0115)
0362: 0c                         ; RET
;
0363: 18 2c fb 00 00             ; DICTP BRANCHBZ (fb2c)
0368: 0e 5e                      ; CLITERAL 94
036a: 0b 15 01 00 00             ; CALL C, (0115)
036f: 0c                         ; RET
;
0370: 18 18 fb 00 00             ; DICTP BRANCHBNZ (fb18)
0375: 0e 5f                      ; CLITERAL 95
0377: 0b 15 01 00 00             ; CALL C, (0115)
037c: 0c                         ; RET
;
037d: 18 0a fb 00 00             ; DICTP NOP (fb0a)
0382: fc                         ; NOP
0383: 0c                         ; RET
;
0384: 18 fa fa 00 00             ; DICTP BREAK (fafa)
0389: fd                         ; BREAK
038a: 0c                         ; RET
;
038b: 18 ea fa 00 00             ; DICTP RESET (faea)
0390: fe                         ; RESET
0391: 0c                         ; RET
;
0392: 18 dc fa 00 00             ; DICTP BYE (fadc)
0397: ff                         ; BYE
0398: 0c                         ; RET
;
0399: 18 cb fa 00 00             ; DICTP INLINE (facb)
039e: 0b 09 01 00 00             ; CALL LAST (0109)
03a3: 0e 02                      ; CLITERAL 2
03a5: 0e 04                      ; CLITERAL 4
03a7: 13                         ; MUL
03a8: 11                         ; ADD
03a9: 06                         ; DUP
03aa: 0f                         ; CFETCH
03ab: 0e 02                      ; CLITERAL 2
03ad: 0d                         ; OR
03ae: 04                         ; SWAP
03af: 10                         ; CSTORE
03b0: 0c                         ; RET
;
03b1: 18 b7 fa 00 00             ; DICTP IMMEDIATE (fab7)
03b6: 0b 09 01 00 00             ; CALL LAST (0109)
03bb: 0e 02                      ; CLITERAL 2
03bd: 0e 04                      ; CLITERAL 4
03bf: 13                         ; MUL
03c0: 11                         ; ADD
03c1: 06                         ; DUP
03c2: 0f                         ; CFETCH
03c3: 0e 01                      ; CLITERAL 1
03c5: 0d                         ; OR
03c6: 04                         ; SWAP
03c7: 10                         ; CSTORE
03c8: 0c                         ; RET
;
03c9: 18 a7 fa 00 00             ; DICTP CELLS (faa7)
03ce: 0e 04                      ; CLITERAL 4
03d0: 13                         ; MUL
03d1: 0c                         ; RET
;
03d2: 18 8e fa 00 00             ; DICTP FLAG_IMMEDIATE (fa8e)
03d7: 0e 01                      ; CLITERAL 1
03d9: 0c                         ; RET
;
03da: 18 78 fa 00 00             ; DICTP FLAG_INLINE (fa78)
03df: 0e 02                      ; CLITERAL 2
03e1: 0c                         ; RET
;
03e2: 18 6a fa 00 00             ; DICTP HEX (fa6a)
03e7: 0e 10                      ; CLITERAL 16
03e9: 0b 5e 00 00 00             ; CALL BASE (005e)
03ee: 03                         ; STORE
03ef: 0c                         ; RET
;
03f0: 18 58 fa 00 00             ; DICTP DECIMAL (fa58)
03f5: 0e 0a                      ; CLITERAL 10
03f7: 0b 5e 00 00 00             ; CALL BASE (005e)
03fc: 03                         ; STORE
03fd: 0c                         ; RET
;
03fe: 18 48 fa 00 00             ; DICTP OCTAL (fa48)
0403: 0e 08                      ; CLITERAL 8
0405: 0b 5e 00 00 00             ; CALL BASE (005e)
040a: 03                         ; STORE
040b: 0c                         ; RET
;
040c: 18 37 fa 00 00             ; DICTP BINARY (fa37)
0411: 0e 02                      ; CLITERAL 2
0413: 0b 5e 00 00 00             ; CALL BASE (005e)
0418: 03                         ; STORE
0419: 0c                         ; RET
;
041a: 18 2a fa 00 00             ; DICTP ON (fa2a)
041f: 0e 01                      ; CLITERAL 1
0421: 04                         ; SWAP
0422: 03                         ; STORE
0423: 0c                         ; RET
;
0424: 18 1c fa 00 00             ; DICTP OFF (fa1c)
0429: 0e 00                      ; CLITERAL 0
042b: 04                         ; SWAP
042c: 03                         ; STORE
042d: 0c                         ; RET
;
042e: 18 07 fa 00 00             ; DICTP ?COMPILING (fa07)
0433: 0b 6d 00 00 00             ; CALL STATE (006d)
0438: 02                         ; FETCH
0439: 0c                         ; RET
;
043a: 18 fa f9 00 00             ; DICTP IF (f9fa)
043f: 0b 2e 04 00 00             ; CALL ?COMPILING (042e)
0444: 09 5a 04 00 00             ; JMPZ 045a
0449: 0b 3c 03 00 00             ; CALL BRANCHFZ (033c)
044e: 0b fd 00 00 00             ; CALL HERE (00fd)
0453: 0e 00                      ; CLITERAL 0
0455: 0b 15 01 00 00             ; CALL C, (0115)
045a: 0c                         ; RET
;
045b: 18 eb f9 00 00             ; DICTP ELSE (f9eb)
0460: 0b 2e 04 00 00             ; CALL ?COMPILING (042e)
0465: 09 85 04 00 00             ; JMPZ 0485
046a: 0b 2f 03 00 00             ; CALL BRANCHF (032f)
046f: 0b fd 00 00 00             ; CALL HERE (00fd)
0474: 0e 00                      ; CLITERAL 0
0476: 0b 15 01 00 00             ; CALL C, (0115)
047b: 04                         ; SWAP
047c: 0b fd 00 00 00             ; CALL HERE (00fd)
0481: 1a                         ; OVER
0482: 12                         ; SUB
0483: 04                         ; SWAP
0484: 10                         ; CSTORE
0485: 0c                         ; RET
;
0486: 18 dc f9 00 00             ; DICTP THEN (f9dc)
048b: 0b 2e 04 00 00             ; CALL ?COMPILING (042e)
0490: 09 9e 04 00 00             ; JMPZ 049e
0495: 0b fd 00 00 00             ; CALL HERE (00fd)
049a: 1a                         ; OVER
049b: 12                         ; SUB
049c: 04                         ; SWAP
049d: 10                         ; CSTORE
049e: 0c                         ; RET
;
049f: 18 cc f9 00 00             ; DICTP BEGIN (f9cc)
04a4: 0b 2e 04 00 00             ; CALL ?COMPILING (042e)
04a9: 5b 06                      ; BRANCHFZ 6 (04b0)
04ab: 0b fd 00 00 00             ; CALL HERE (00fd)
04b0: 0c                         ; RET
;
04b1: 18 bc f9 00 00             ; DICTP AGAIN (f9bc)
04b6: 0b 2e 04 00 00             ; CALL ?COMPILING (042e)
04bb: 5b 12                      ; BRANCHFZ 18 (04ce)
04bd: 0b 56 03 00 00             ; CALL BRANCHB (0356)
04c2: 0b fd 00 00 00             ; CALL HERE (00fd)
04c7: 04                         ; SWAP
04c8: 12                         ; SUB
04c9: 0b 15 01 00 00             ; CALL C, (0115)
04ce: 0c                         ; RET
;
04cf: 18 ac f9 00 00             ; DICTP WHILE (f9ac)
04d4: 0b 2e 04 00 00             ; CALL ?COMPILING (042e)
04d9: 5b 12                      ; BRANCHFZ 18 (04ec)
04db: 0b 70 03 00 00             ; CALL BRANCHBNZ (0370)
04e0: 0b fd 00 00 00             ; CALL HERE (00fd)
04e5: 04                         ; SWAP
04e6: 12                         ; SUB
04e7: 0b 15 01 00 00             ; CALL C, (0115)
04ec: 0c                         ; RET
;
04ed: 18 9c f9 00 00             ; DICTP UNTIL (f99c)
04f2: 0b 2e 04 00 00             ; CALL ?COMPILING (042e)
04f7: 5b 12                      ; BRANCHFZ 18 (050a)
04f9: 0b 63 03 00 00             ; CALL BRANCHBZ (0363)
04fe: 0b fd 00 00 00             ; CALL HERE (00fd)
0503: 04                         ; SWAP
0504: 12                         ; SUB
0505: 0b 15 01 00 00             ; CALL C, (0115)
050a: 0c                         ; RET
;
050b: 18 8c f9 00 00             ; DICTP LEAVE (f98c)
0510: 0b 2e 04 00 00             ; CALL ?COMPILING (042e)
0515: 5b 06                      ; BRANCHFZ 6 (051c)
0517: 0b d4 01 00 00             ; CALL RET (01d4)
051c: 0c                         ; RET
;
051d: 18 7b f9 00 00             ; DICTP MEM_SZ (f97b)
0522: 0b 7c 00 00 00             ; CALL (MEM_SZ) (007c)
0527: 02                         ; FETCH
0528: 0c                         ; RET
;
0529: 18 68 f9 00 00             ; DICTP TRACE-ON (f968)
052e: 0e 02                      ; CLITERAL 2
0530: 23                         ; LOGLEVEL
0531: 0c                         ; RET
;
0532: 18 54 f9 00 00             ; DICTP TRACE-OFF (f954)
0537: 0e 00                      ; CLITERAL 0
0539: 23                         ; LOGLEVEL
053a: 0c                         ; RET
;
053b: 18 41 f9 00 00             ; DICTP DEBUG-ON (f941)
0540: 0e 01                      ; CLITERAL 1
0542: 23                         ; LOGLEVEL
0543: 0c                         ; RET
;
0544: 18 2d f9 00 00             ; DICTP DEBUG-OFF (f92d)
0549: 0e 00                      ; CLITERAL 0
054b: 23                         ; LOGLEVEL
054c: 0c                         ; RET
;
054d: 18 20 f9 00 00             ; DICTP R@ (f920)
0552: 2b                         ; RFETCH
0553: 0c                         ; RET
;
0554: 18 10 f9 00 00             ; DICTP RDROP (f910)
0559: 22                         ; RTOD
055a: 05                         ; DROP
055b: 0c                         ; RET
;
055c: 18 01 f9 00 00             ; DICTP ?DUP (f901)
0561: 06                         ; DUP
0562: 5b 02                      ; BRANCHFZ 2 (0565)
0564: 06                         ; DUP
0565: 0c                         ; RET
;
0566: 18 f2 f8 00 00             ; DICTP 2DUP (f8f2)
056b: 1a                         ; OVER
056c: 1a                         ; OVER
056d: 0c                         ; RET
;
056e: 18 e2 f8 00 00             ; DICTP 2DROP (f8e2)
0573: 05                         ; DROP
0574: 05                         ; DROP
0575: 0c                         ; RET
;
0576: 18 d3 f8 00 00             ; DICTP TUCK (f8d3)
057b: 04                         ; SWAP
057c: 1a                         ; OVER
057d: 0c                         ; RET
;
057e: 18 c5 f8 00 00             ; DICTP NIP (f8c5)
0583: 04                         ; SWAP
0584: 05                         ; DROP
0585: 0c                         ; RET
;
0586: 18 b7 f8 00 00             ; DICTP ROT (f8b7)
058b: 21                         ; DTOR
058c: 04                         ; SWAP
058d: 22                         ; RTOD
058e: 04                         ; SWAP
058f: 0c                         ; RET
;
0590: 18 a8 f8 00 00             ; DICTP -ROT (f8a8)
0595: 04                         ; SWAP
0596: 21                         ; DTOR
0597: 04                         ; SWAP
0598: 22                         ; RTOD
0599: 0c                         ; RET
;
059a: 18 9c f8 00 00             ; DICTP / (f89c)
059f: 29                         ; SLASHMOD
05a0: 04                         ; SWAP
05a1: 05                         ; DROP
05a2: 0c                         ; RET
;
05a3: 18 8e f8 00 00             ; DICTP MOD (f88e)
05a8: 29                         ; SLASHMOD
05a9: 05                         ; DROP
05aa: 0c                         ; RET
;
05ab: 18 81 f8 00 00             ; DICTP 1+ (f881)
05b0: 2c                         ; INC
05b1: 0c                         ; RET
;
05b2: 18 74 f8 00 00             ; DICTP 1- (f874)
05b7: 2e                         ; DEC
05b8: 0c                         ; RET
;
05b9: 18 67 f8 00 00             ; DICTP 2* (f867)
05be: 0e 02                      ; CLITERAL 2
05c0: 13                         ; MUL
05c1: 0c                         ; RET
;
05c2: 18 5a f8 00 00             ; DICTP 2/ (f85a)
05c7: 0e 02                      ; CLITERAL 2
05c9: 29                         ; SLASHMOD
05ca: 04                         ; SWAP
05cb: 05                         ; DROP
05cc: 0c                         ; RET
;
05cd: 18 4d f8 00 00             ; DICTP += (f84d)
05d2: 1a                         ; OVER
05d3: 02                         ; FETCH
05d4: 11                         ; ADD
05d5: 04                         ; SWAP
05d6: 03                         ; STORE
05d7: 0c                         ; RET
;
05d8: 18 40 f8 00 00             ; DICTP -= (f840)
05dd: 1a                         ; OVER
05de: 02                         ; FETCH
05df: 04                         ; SWAP
05e0: 12                         ; SUB
05e1: 04                         ; SWAP
05e2: 03                         ; STORE
05e3: 0c                         ; RET
;
05e4: 18 33 f8 00 00             ; DICTP -! (f833)
05e9: 04                         ; SWAP
05ea: 1a                         ; OVER
05eb: 02                         ; FETCH
05ec: 04                         ; SWAP
05ed: 12                         ; SUB
05ee: 04                         ; SWAP
05ef: 03                         ; STORE
05f0: 0c                         ; RET
;
05f1: 18 26 f8 00 00             ; DICTP ++ (f826)
05f6: 06                         ; DUP
05f7: 02                         ; FETCH
05f8: 2c                         ; INC
05f9: 04                         ; SWAP
05fa: 03                         ; STORE
05fb: 0c                         ; RET
;
05fc: 18 19 f8 00 00             ; DICTP -- (f819)
0601: 06                         ; DUP
0602: 02                         ; FETCH
0603: 2e                         ; DEC
0604: 04                         ; SWAP
0605: 03                         ; STORE
0606: 0c                         ; RET
;
0607: 18 0b f8 00 00             ; DICTP C++ (f80b)
060c: 06                         ; DUP
060d: 0f                         ; CFETCH
060e: 2c                         ; INC
060f: 04                         ; SWAP
0610: 10                         ; CSTORE
0611: 0c                         ; RET
;
0612: 18 fd f7 00 00             ; DICTP C-- (f7fd)
0617: 06                         ; DUP
0618: 0f                         ; CFETCH
0619: 2e                         ; DEC
061a: 04                         ; SWAP
061b: 10                         ; CSTORE
061c: 0c                         ; RET
;
061d: 18 f0 f7 00 00             ; DICTP 0= (f7f0)
0622: 2a                         ; NOT
0623: 0c                         ; RET
;
0624: 18 e3 f7 00 00             ; DICTP <> (f7e3)
0629: 16                         ; EQ
062a: 2a                         ; NOT
062b: 0c                         ; RET
;
062c: 18 d6 f7 00 00             ; DICTP <= (f7d6)
0631: 17                         ; GT
0632: 2a                         ; NOT
0633: 0c                         ; RET
;
0634: 18 c9 f7 00 00             ; DICTP >= (f7c9)
0639: 15                         ; LT
063a: 2a                         ; NOT
063b: 0c                         ; RET
;
063c: 18 ba f7 00 00             ; DICTP TRUE (f7ba)
0641: 01 ff ff ff ff             ; LITERAL -1 (ffffffff)
0646: 0c                         ; RET
;
0647: 18 aa f7 00 00             ; DICTP FALSE (f7aa)
064c: 0e 00                      ; CLITERAL 0
064e: 0c                         ; RET
;
064f: 18 9a f7 00 00             ; DICTP COUNT (f79a)
0654: 06                         ; DUP
0655: 2c                         ; INC
0656: 04                         ; SWAP
0657: 0f                         ; CFETCH
0658: 0c                         ; RET
;
0659: 18 8b f7 00 00             ; DICTP TYPE (f78b)
065e: 06                         ; DUP
065f: 2a                         ; NOT
0660: 5b 04                      ; BRANCHFZ 4 (0665)
0662: 05                         ; DROP
0663: 05                         ; DROP
0664: 0c                         ; RET
0665: 04                         ; SWAP
0666: 06                         ; DUP
0667: 0f                         ; CFETCH
0668: 19                         ; EMIT
0669: 2c                         ; INC
066a: 04                         ; SWAP
066b: 2e                         ; DEC
066c: 5d 0f                      ; BRANCHB 15 (065e)
066e: 0c                         ; RET
;
066f: 18 7e f7 00 00             ; DICTP CT (f77e)
0674: 0b 4f 06 00 00             ; CALL COUNT (064f)
0679: 0b 59 06 00 00             ; CALL TYPE (0659)
067e: 0c                         ; RET
;
067f: 18 72 f7 00 00             ; DICTP \ (f772)
0684: 0e 00                      ; CLITERAL 0
0686: 0b 8b 00 00 00             ; CALL >IN (008b)
068b: 02                         ; FETCH
068c: 10                         ; CSTORE
068d: 0c                         ; RET
;
068e: 18 66 f7 00 00             ; DICTP ( (f766)
0693: 0b 8b 00 00 00             ; CALL >IN (008b)
0698: 02                         ; FETCH
0699: 0f                         ; CFETCH
069a: 06                         ; DUP
069b: 2a                         ; NOT
069c: 5b 1d                      ; BRANCHFZ 29 (06ba)
069e: 07 13 6d 69 73 73 69 6e 67 20 63 6c 6f 73 69 6e 67 20 27 29 27 00 ; SLITERAL (069f) [missing closing ')']
06b4: 0b 6f 06 00 00             ; CALL CT (066f)
06b9: fe                         ; RESET
06ba: 0b 8b 00 00 00             ; CALL >IN (008b)
06bf: 06                         ; DUP
06c0: 02                         ; FETCH
06c1: 2c                         ; INC
06c2: 04                         ; SWAP
06c3: 03                         ; STORE
06c4: 0e 29                      ; CLITERAL 41
06c6: 16                         ; EQ
06c7: 5e 35                      ; BRANCHBZ 53 (0693)
06c9: 0c                         ; RET
;
06ca: 18 56 f7 00 00             ; DICTP SPACE (f756)
06cf: 0e 20                      ; CLITERAL 32
06d1: 19                         ; EMIT
06d2: 0c                         ; RET
;
06d3: 18 49 f7 00 00             ; DICTP BL (f749)
06d8: 0e 20                      ; CLITERAL 32
06da: 19                         ; EMIT
06db: 0c                         ; RET
;
06dc: 18 3a f7 00 00             ; DICTP CRLF (f73a)
06e1: 0e 0d                      ; CLITERAL 13
06e3: 19                         ; EMIT
06e4: 0e 0a                      ; CLITERAL 10
06e6: 19                         ; EMIT
06e7: 0c                         ; RET
;
06e8: 18 2d f7 00 00             ; DICTP CR (f72d)
06ed: 0e 0d                      ; CLITERAL 13
06ef: 19                         ; EMIT
06f0: 0e 0a                      ; CLITERAL 10
06f2: 19                         ; EMIT
06f3: 0c                         ; RET
;
06f4: 18 1b f7 00 00             ; DICTP BETWEEN (f71b)
06f9: 0e 02                      ; CLITERAL 2
06fb: 25                         ; PICK
06fc: 15                         ; LT
06fd: 5b 06                      ; BRANCHFZ 6 (0704)
06ff: 05                         ; DROP
0700: 05                         ; DROP
0701: 0e 00                      ; CLITERAL 0
0703: 0c                         ; RET
0704: 15                         ; LT
0705: 2a                         ; NOT
0706: 0c                         ; RET
;
0707: 18 0a f7 00 00             ; DICTP skipWS (f70a)
070c: 06                         ; DUP
070d: 0f                         ; CFETCH
070e: 06                         ; DUP
070f: 5b 0c                      ; BRANCHFZ 12 (071c)
0711: 0e 20                      ; CLITERAL 32
0713: 17                         ; GT
0714: 5b 04                      ; BRANCHFZ 4 (0719)
0716: 0c                         ; RET
0717: 5a 02                      ; BRANCHF 2 (071a)
0719: 2c                         ; INC
071a: 5a 03                      ; BRANCHF 3 (071e)
071c: 05                         ; DROP
071d: 0c                         ; RET
071e: 5d 13                      ; BRANCHB 19 (070c)
0720: 0c                         ; RET
;
0721: 18 f7 f6 00 00             ; DICTP to-upper (f6f7)
0726: 06                         ; DUP
0727: 0e 61                      ; CLITERAL 97
0729: 15                         ; LT
072a: 5b 02                      ; BRANCHFZ 2 (072d)
072c: 0c                         ; RET
072d: 06                         ; DUP
072e: 0e 7a                      ; CLITERAL 122
0730: 17                         ; GT
0731: 5b 02                      ; BRANCHFZ 2 (0734)
0733: 0c                         ; RET
0734: 0e 20                      ; CLITERAL 32
0736: 12                         ; SUB
0737: 0c                         ; RET
;
0738: 18 e4 f6 00 00             ; DICTP to-lower (f6e4)
073d: 06                         ; DUP
073e: 0e 41                      ; CLITERAL 65
0740: 15                         ; LT
0741: 5b 02                      ; BRANCHFZ 2 (0744)
0743: 0c                         ; RET
0744: 06                         ; DUP
0745: 0e 5a                      ; CLITERAL 90
0747: 17                         ; GT
0748: 5b 02                      ; BRANCHFZ 2 (074b)
074a: 0c                         ; RET
074b: 0e 20                      ; CLITERAL 32
074d: 11                         ; ADD
074e: 0c                         ; RET
;
074f: 18 d0 f6 00 00             ; DICTP char-find (f6d0)
0754: 04                         ; SWAP
0755: 0b d6 00 00 00             ; CALL T2 (00d6)
075a: 03                         ; STORE
075b: 0e 00                      ; CLITERAL 0
075d: 21                         ; DTOR
075e: 0b 4f 06 00 00             ; CALL COUNT (064f)
0763: 06                         ; DUP
0764: 2a                         ; NOT
0765: 5b 0b                      ; BRANCHFZ 11 (0771)
0767: 05                         ; DROP
0768: 05                         ; DROP
0769: 22                         ; RTOD
076a: 05                         ; DROP
076b: 01 ff ff ff ff             ; LITERAL -1 (ffffffff)
0770: 0c                         ; RET
0771: 1a                         ; OVER
0772: 0f                         ; CFETCH
0773: 0b d6 00 00 00             ; CALL T2 (00d6)
0778: 02                         ; FETCH
0779: 16                         ; EQ
077a: 5b 05                      ; BRANCHFZ 5 (0780)
077c: 05                         ; DROP
077d: 05                         ; DROP
077e: 22                         ; RTOD
077f: 0c                         ; RET
0780: 22                         ; RTOD
0781: 2c                         ; INC
0782: 21                         ; DTOR
0783: 2e                         ; DEC
0784: 04                         ; SWAP
0785: 2c                         ; INC
0786: 04                         ; SWAP
0787: 5d 25                      ; BRANCHB 37 (0763)
0789: 0c                         ; RET
;
078a: 18 bb f6 00 00             ; DICTP getOneWord (f6bb)
078f: 06                         ; DUP
0790: 21                         ; DTOR
0791: 21                         ; DTOR
0792: 2b                         ; RFETCH
0793: 0f                         ; CFETCH
0794: 0e 20                      ; CLITERAL 32
0796: 17                         ; GT
0797: 5b 06                      ; BRANCHFZ 6 (079e)
0799: 22                         ; RTOD
079a: 2c                         ; INC
079b: 21                         ; DTOR
079c: 5a 10                      ; BRANCHF 16 (07ad)
079e: 2b                         ; RFETCH
079f: 0f                         ; CFETCH
07a0: 5b 08                      ; BRANCHFZ 8 (07a9)
07a2: 0e 00                      ; CLITERAL 0
07a4: 2b                         ; RFETCH
07a5: 10                         ; CSTORE
07a6: 22                         ; RTOD
07a7: 2c                         ; INC
07a8: 21                         ; DTOR
07a9: 22                         ; RTOD
07aa: 22                         ; RTOD
07ab: 04                         ; SWAP
07ac: 0c                         ; RET
07ad: 5d 1c                      ; BRANCHB 28 (0792)
07af: 0c                         ; RET
;
07b0: 18 a7 f6 00 00             ; DICTP DICT>NEXT (f6a7)
07b5: 0c                         ; RET
;
07b6: 18 95 f6 00 00             ; DICTP DICT>XT (f695)
07bb: 0e 04                      ; CLITERAL 4
07bd: 11                         ; ADD
07be: 0c                         ; RET
;
07bf: 18 80 f6 00 00             ; DICTP DICT>FLAGS (f680)
07c4: 0e 02                      ; CLITERAL 2
07c6: 0e 04                      ; CLITERAL 4
07c8: 13                         ; MUL
07c9: 11                         ; ADD
07ca: 0c                         ; RET
;
07cb: 18 6c f6 00 00             ; DICTP DICT>NAME (f66c)
07d0: 0b bf 07 00 00             ; CALL DICT>FLAGS (07bf)
07d5: 2c                         ; INC
07d6: 0c                         ; RET
;
07d7: 18 58 f6 00 00             ; DICTP NEXT>DICT (f658)
07dc: 0c                         ; RET
;
07dd: 18 46 f6 00 00             ; DICTP XT>DICT (f646)
07e2: 0e 04                      ; CLITERAL 4
07e4: 12                         ; SUB
07e5: 0c                         ; RET
;
07e6: 18 31 f6 00 00             ; DICTP FLAGS>DICT (f631)
07eb: 0e 02                      ; CLITERAL 2
07ed: 0e 04                      ; CLITERAL 4
07ef: 13                         ; MUL
07f0: 12                         ; SUB
07f1: 0c                         ; RET
;
07f2: 18 1d f6 00 00             ; DICTP NAME>DICT (f61d)
07f7: 2e                         ; DEC
07f8: 0e 02                      ; CLITERAL 2
07fa: 0e 04                      ; CLITERAL 4
07fc: 13                         ; MUL
07fd: 12                         ; SUB
07fe: 0c                         ; RET
;
07ff: 18 08 f6 00 00             ; DICTP DICT.GetXT (f608)
0804: 0b b6 07 00 00             ; CALL DICT>XT (07b6)
0809: 02                         ; FETCH
080a: 0c                         ; RET
;
080b: 18 f0 f5 00 00             ; DICTP DICT.GetFLAGS (f5f0)
0810: 0b bf 07 00 00             ; CALL DICT>FLAGS (07bf)
0815: 0f                         ; CFETCH
0816: 0c                         ; RET
;
0817: 18 db f5 00 00             ; DICTP DICTP>NAME (f5db)
081c: 2c                         ; INC
081d: 02                         ; FETCH
081e: 0b cb 07 00 00             ; CALL DICT>NAME (07cb)
0823: 0c                         ; RET
;
0824: 18 c5 f5 00 00             ; DICTP XT.GetDICTP (f5c5)
0829: 06                         ; DUP
082a: 0f                         ; CFETCH
082b: 0e 18                      ; CLITERAL 24
082d: 16                         ; EQ
082e: 5b 05                      ; BRANCHFZ 5 (0834)
0830: 2c                         ; INC
0831: 02                         ; FETCH
0832: 5a 03                      ; BRANCHF 3 (0836)
0834: 05                         ; DROP
0835: fe                         ; RESET
0836: 0c                         ; RET
;
0837: 18 a8 f5 00 00             ; DICTP FLAGS.ISIMMEDIATE? (f5a8)
083c: 0e 01                      ; CLITERAL 1
083e: 24                         ; AND
083f: 0c                         ; RET
;
0840: 18 8e f5 00 00             ; DICTP FLAGS.ISINLINE? (f58e)
0845: 0e 02                      ; CLITERAL 2
0847: 24                         ; AND
0848: 0c                         ; RET
;
0849: 18 72 f5 00 00             ; DICTP DICT.GetIMMEDIATE (f572)
084e: 0b 0b 08 00 00             ; CALL DICT.GetFLAGS (080b)
0853: 0b 37 08 00 00             ; CALL FLAGS.ISIMMEDIATE? (0837)
0858: 0c                         ; RET
;
0859: 18 59 f5 00 00             ; DICTP DICT.GetINLINE (f559)
085e: 0b 0b 08 00 00             ; CALL DICT.GetFLAGS (080b)
0863: 0b 40 08 00 00             ; CALL FLAGS.ISINLINE? (0840)
0868: 0c                         ; RET
;
0869: 18 44 f5 00 00             ; DICTP findInDict (f544)
086e: 0b 09 01 00 00             ; CALL LAST (0109)
0873: 21                         ; DTOR
0874: 2b                         ; RFETCH
0875: 06                         ; DUP
0876: 5b 1d                      ; BRANCHFZ 29 (0894)
0878: 0b cb 07 00 00             ; CALL DICT>NAME (07cb)
087d: 2c                         ; INC
087e: 1a                         ; OVER
087f: 28                         ; COMPAREI
0880: 5b 11                      ; BRANCHFZ 17 (0892)
0882: 05                         ; DROP
0883: 2b                         ; RFETCH
0884: 0b ff 07 00 00             ; CALL DICT.GetXT (07ff)
0889: 22                         ; RTOD
088a: 0b 0b 08 00 00             ; CALL DICT.GetFLAGS (080b)
088f: 0e 01                      ; CLITERAL 1
0891: 0c                         ; RET
0892: 5a 09                      ; BRANCHF 9 (089c)
0894: 05                         ; DROP
0895: 05                         ; DROP
0896: 22                         ; RTOD
0897: 0e 00                      ; CLITERAL 0
0899: 0e 00                      ; CLITERAL 0
089b: 0c                         ; RET
089c: 22                         ; RTOD
089d: 02                         ; FETCH
089e: 21                         ; DTOR
089f: 5d 2c                      ; BRANCHB 44 (0874)
08a1: 0c                         ; RET
;
08a2: 18 2d f5 00 00             ; DICTP is-num-char? (f52d)
08a7: 0b 21 07 00 00             ; CALL to-upper (0721)
08ac: 04                         ; SWAP
08ad: 21                         ; DTOR
08ae: 07 10 30 31 32 33 34 35 36 37 38 39 41 42 43 44 45 46 00 ; SLITERAL (08af) [0123456789ABCDEF]
08c1: 0b 4f 07 00 00             ; CALL char-find (074f)
08c6: 06                         ; DUP
08c7: 0e 00                      ; CLITERAL 0
08c9: 15                         ; LT
08ca: 5b 06                      ; BRANCHFZ 6 (08d1)
08cc: 0e 00                      ; CLITERAL 0
08ce: 22                         ; RTOD
08cf: 05                         ; DROP
08d0: 0c                         ; RET
08d1: 22                         ; RTOD
08d2: 2e                         ; DEC
08d3: 1a                         ; OVER
08d4: 15                         ; LT
08d5: 5b 05                      ; BRANCHFZ 5 (08db)
08d7: 0e 00                      ; CLITERAL 0
08d9: 5a 03                      ; BRANCHF 3 (08dd)
08db: 0e 01                      ; CLITERAL 1
08dd: 0c                         ; RET
;
08de: 18 1c f5 00 00             ; DICTP NEGATE (f51c)
08e3: 0e 00                      ; CLITERAL 0
08e5: 04                         ; SWAP
08e6: 12                         ; SUB
08e7: 0c                         ; RET
;
08e8: 18 0e f5 00 00             ; DICTP ABS (f50e)
08ed: 06                         ; DUP
08ee: 0e 00                      ; CLITERAL 0
08f0: 15                         ; LT
08f1: 5b 06                      ; BRANCHFZ 6 (08f8)
08f3: 0b de 08 00 00             ; CALL NEGATE (08de)
08f8: 0c                         ; RET
;
08f9: 18 f9 f4 00 00             ; DICTP parse-char (f4f9)
08fe: 06                         ; DUP
08ff: 2c                         ; INC
0900: 0f                         ; CFETCH
0901: 0e 27                      ; CLITERAL 39
0903: 16                         ; EQ
0904: 2a                         ; NOT
0905: 5b 04                      ; BRANCHFZ 4 (090a)
0907: 0e 00                      ; CLITERAL 0
0909: 0c                         ; RET
090a: 06                         ; DUP
090b: 0e 02                      ; CLITERAL 2
090d: 11                         ; ADD
090e: 0f                         ; CFETCH
090f: 5b 05                      ; BRANCHFZ 5 (0915)
0911: 0e 00                      ; CLITERAL 0
0913: 5a 04                      ; BRANCHF 4 (0918)
0915: 0f                         ; CFETCH
0916: 0e 01                      ; CLITERAL 1
0918: 0c                         ; RET
;
0919: 18 e5 f4 00 00             ; DICTP isNumber? (f4e5)
091e: 06                         ; DUP
091f: 0f                         ; CFETCH
0920: 0e 27                      ; CLITERAL 39
0922: 16                         ; EQ
0923: 5b 08                      ; BRANCHFZ 8 (092c)
0925: 2c                         ; INC
0926: 0b f9 08 00 00             ; CALL parse-char (08f9)
092b: 0c                         ; RET
092c: 0b 5e 00 00 00             ; CALL BASE (005e)
0931: 02                         ; FETCH
0932: 0b e5 00 00 00             ; CALL T3 (00e5)
0937: 03                         ; STORE
0938: 06                         ; DUP
0939: 0f                         ; CFETCH
093a: 0e 24                      ; CLITERAL 36
093c: 16                         ; EQ
093d: 5b 0a                      ; BRANCHFZ 10 (0948)
093f: 2c                         ; INC
0940: 0e 10                      ; CLITERAL 16
0942: 0b e5 00 00 00             ; CALL T3 (00e5)
0947: 03                         ; STORE
0948: 06                         ; DUP
0949: 0f                         ; CFETCH
094a: 0e 23                      ; CLITERAL 35
094c: 16                         ; EQ
094d: 5b 0a                      ; BRANCHFZ 10 (0958)
094f: 2c                         ; INC
0950: 0e 0a                      ; CLITERAL 10
0952: 0b e5 00 00 00             ; CALL T3 (00e5)
0957: 03                         ; STORE
0958: 06                         ; DUP
0959: 0f                         ; CFETCH
095a: 0e 25                      ; CLITERAL 37
095c: 16                         ; EQ
095d: 5b 0a                      ; BRANCHFZ 10 (0968)
095f: 2c                         ; INC
0960: 0e 02                      ; CLITERAL 2
0962: 0b e5 00 00 00             ; CALL T3 (00e5)
0967: 03                         ; STORE
0968: 0b 9a 00 00 00             ; CALL #NEG (009a)
096d: 0b 24 04 00 00             ; CALL OFF (0424)
0972: 0b e5 00 00 00             ; CALL T3 (00e5)
0977: 02                         ; FETCH
0978: 0e 0a                      ; CLITERAL 10
097a: 16                         ; EQ
097b: 5b 10                      ; BRANCHFZ 16 (098c)
097d: 06                         ; DUP
097e: 0f                         ; CFETCH
097f: 0e 2d                      ; CLITERAL 45
0981: 16                         ; EQ
0982: 06                         ; DUP
0983: 0b 9a 00 00 00             ; CALL #NEG (009a)
0988: 03                         ; STORE
0989: 5b 02                      ; BRANCHFZ 2 (098c)
098b: 2c                         ; INC
098c: 0e 00                      ; CLITERAL 0
098e: 21                         ; DTOR
098f: 06                         ; DUP
0990: 0f                         ; CFETCH
0991: 06                         ; DUP
0992: 0e 00                      ; CLITERAL 0
0994: 16                         ; EQ
0995: 5b 14                      ; BRANCHFZ 20 (09aa)
0997: 05                         ; DROP
0998: 05                         ; DROP
0999: 22                         ; RTOD
099a: 0b 9a 00 00 00             ; CALL #NEG (009a)
099f: 02                         ; FETCH
09a0: 5b 06                      ; BRANCHFZ 6 (09a7)
09a2: 0b de 08 00 00             ; CALL NEGATE (08de)
09a7: 0e 01                      ; CLITERAL 1
09a9: 0c                         ; RET
09aa: 0b e5 00 00 00             ; CALL T3 (00e5)
09af: 02                         ; FETCH
09b0: 04                         ; SWAP
09b1: 0b a2 08 00 00             ; CALL is-num-char? (08a2)
09b6: 5b 0e                      ; BRANCHFZ 14 (09c5)
09b8: 22                         ; RTOD
09b9: 0b e5 00 00 00             ; CALL T3 (00e5)
09be: 02                         ; FETCH
09bf: 13                         ; MUL
09c0: 11                         ; ADD
09c1: 21                         ; DTOR
09c2: 2c                         ; INC
09c3: 5a 06                      ; BRANCHF 6 (09ca)
09c5: 05                         ; DROP
09c6: 22                         ; RTOD
09c7: 0e 00                      ; CLITERAL 0
09c9: 0c                         ; RET
09ca: 5d 3c                      ; BRANCHB 60 (098f)
09cc: 0c                         ; RET
;
09cd: 18 d8 f4 00 00             ; DICTP <# (f4d8)
09d2: 0b 9a 00 00 00             ; CALL #NEG (009a)
09d7: 0b 24 04 00 00             ; CALL OFF (0424)
09dc: 0b a9 00 00 00             ; CALL #LEN (00a9)
09e1: 0b 24 04 00 00             ; CALL OFF (0424)
09e6: 06                         ; DUP
09e7: 0e 00                      ; CLITERAL 0
09e9: 15                         ; LT
09ea: 5b 10                      ; BRANCHFZ 16 (09fb)
09ec: 0b de 08 00 00             ; CALL NEGATE (08de)
09f1: 0b 9a 00 00 00             ; CALL #NEG (009a)
09f6: 0b 1a 04 00 00             ; CALL ON (041a)
09fb: 0e 00                      ; CLITERAL 0
09fd: 04                         ; SWAP
09fe: 0c                         ; RET
;
09ff: 18 cc f4 00 00             ; DICTP # (f4cc)
0a04: 0b 5e 00 00 00             ; CALL BASE (005e)
0a09: 02                         ; FETCH
0a0a: 29                         ; SLASHMOD
0a0b: 04                         ; SWAP
0a0c: 0e 30                      ; CLITERAL 48
0a0e: 11                         ; ADD
0a0f: 06                         ; DUP
0a10: 0e 39                      ; CLITERAL 57
0a12: 17                         ; GT
0a13: 5b 04                      ; BRANCHFZ 4 (0a18)
0a15: 0e 07                      ; CLITERAL 7
0a17: 11                         ; ADD
0a18: 0b a9 00 00 00             ; CALL #LEN (00a9)
0a1d: 06                         ; DUP
0a1e: 02                         ; FETCH
0a1f: 2c                         ; INC
0a20: 04                         ; SWAP
0a21: 03                         ; STORE
0a22: 04                         ; SWAP
0a23: 0c                         ; RET
;
0a24: 18 bf f4 00 00             ; DICTP #S (f4bf)
0a29: 0b ff 09 00 00             ; CALL # (09ff)
0a2e: 06                         ; DUP
0a2f: 2a                         ; NOT
0a30: 5e 08                      ; BRANCHBZ 8 (0a29)
0a32: 0c                         ; RET
;
0a33: 18 b2 f4 00 00             ; DICTP #> (f4b2)
0a38: 0c                         ; RET
;
0a39: 18 a4 f4 00 00             ; DICTP #P- (f4a4)
0a3e: 05                         ; DROP
0a3f: 0b 9a 00 00 00             ; CALL #NEG (009a)
0a44: 02                         ; FETCH
0a45: 5b 04                      ; BRANCHFZ 4 (0a4a)
0a47: 0e 2d                      ; CLITERAL 45
0a49: 19                         ; EMIT
0a4a: 0c                         ; RET
;
0a4b: 18 97 f4 00 00             ; DICTP #P (f497)
0a50: 0b 39 0a 00 00             ; CALL #P- (0a39)
0a55: 19                         ; EMIT
0a56: 06                         ; DUP
0a57: 2a                         ; NOT
0a58: 5e 04                      ; BRANCHBZ 4 (0a55)
0a5a: 05                         ; DROP
0a5b: 0c                         ; RET
;
0a5c: 18 89 f4 00 00             ; DICTP (.) (f489)
0a61: 0b cd 09 00 00             ; CALL <# (09cd)
0a66: 0b 24 0a 00 00             ; CALL #S (0a24)
0a6b: 0b 33 0a 00 00             ; CALL #> (0a33)
0a70: 0b 4b 0a 00 00             ; CALL #P (0a4b)
0a75: 0c                         ; RET
;
0a76: 18 7d f4 00 00             ; DICTP . (f47d)
0a7b: 0b 5c 0a 00 00             ; CALL (.) (0a5c)
0a80: 0e 20                      ; CLITERAL 32
0a82: 19                         ; EMIT
0a83: 0c                         ; RET
;
0a84: 18 70 f4 00 00             ; DICTP .2 (f470)
0a89: 0b cd 09 00 00             ; CALL <# (09cd)
0a8e: 0b ff 09 00 00             ; CALL # (09ff)
0a93: 0b ff 09 00 00             ; CALL # (09ff)
0a98: 0b 33 0a 00 00             ; CALL #> (0a33)
0a9d: 0b 4b 0a 00 00             ; CALL #P (0a4b)
0aa2: 0c                         ; RET
;
0aa3: 18 63 f4 00 00             ; DICTP .3 (f463)
0aa8: 0b cd 09 00 00             ; CALL <# (09cd)
0aad: 0b ff 09 00 00             ; CALL # (09ff)
0ab2: 0b ff 09 00 00             ; CALL # (09ff)
0ab7: 0b ff 09 00 00             ; CALL # (09ff)
0abc: 0b 33 0a 00 00             ; CALL #> (0a33)
0ac1: 0b 4b 0a 00 00             ; CALL #P (0a4b)
0ac6: 0c                         ; RET
;
0ac7: 18 56 f4 00 00             ; DICTP .4 (f456)
0acc: 0b cd 09 00 00             ; CALL <# (09cd)
0ad1: 0b ff 09 00 00             ; CALL # (09ff)
0ad6: 0b ff 09 00 00             ; CALL # (09ff)
0adb: 0b ff 09 00 00             ; CALL # (09ff)
0ae0: 0b ff 09 00 00             ; CALL # (09ff)
0ae5: 0b 33 0a 00 00             ; CALL #> (0a33)
0aea: 0b 4b 0a 00 00             ; CALL #P (0a4b)
0aef: 0c                         ; RET
;
0af0: 18 47 f4 00 00             ; DICTP HEX. (f447)
0af5: 0b 5e 00 00 00             ; CALL BASE (005e)
0afa: 02                         ; FETCH
0afb: 04                         ; SWAP
0afc: 0b e2 03 00 00             ; CALL HEX (03e2)
0b01: 0b 5c 0a 00 00             ; CALL (.) (0a5c)
0b06: 0b 5e 00 00 00             ; CALL BASE (005e)
0b0b: 03                         ; STORE
0b0c: 0c                         ; RET
;
0b0d: 18 37 f4 00 00             ; DICTP HEX.2 (f437)
0b12: 0b 5e 00 00 00             ; CALL BASE (005e)
0b17: 02                         ; FETCH
0b18: 04                         ; SWAP
0b19: 0b e2 03 00 00             ; CALL HEX (03e2)
0b1e: 0b 84 0a 00 00             ; CALL .2 (0a84)
0b23: 0b 5e 00 00 00             ; CALL BASE (005e)
0b28: 03                         ; STORE
0b29: 0c                         ; RET
;
0b2a: 18 27 f4 00 00             ; DICTP HEX.4 (f427)
0b2f: 0b 5e 00 00 00             ; CALL BASE (005e)
0b34: 02                         ; FETCH
0b35: 04                         ; SWAP
0b36: 0b e2 03 00 00             ; CALL HEX (03e2)
0b3b: 0b c7 0a 00 00             ; CALL .4 (0ac7)
0b40: 0b 5e 00 00 00             ; CALL BASE (005e)
0b45: 03                         ; STORE
0b46: 0c                         ; RET
;
0b47: 18 14 f4 00 00             ; DICTP DECIMAL. (f414)
0b4c: 0b 5e 00 00 00             ; CALL BASE (005e)
0b51: 02                         ; FETCH
0b52: 04                         ; SWAP
0b53: 0b f0 03 00 00             ; CALL DECIMAL (03f0)
0b58: 0b 5c 0a 00 00             ; CALL (.) (0a5c)
0b5d: 0b 5e 00 00 00             ; CALL BASE (005e)
0b62: 03                         ; STORE
0b63: 0c                         ; RET
;
0b64: 18 00 f4 00 00             ; DICTP DECIMAL.3 (f400)
0b69: 0b 5e 00 00 00             ; CALL BASE (005e)
0b6e: 02                         ; FETCH
0b6f: 04                         ; SWAP
0b70: 0b f0 03 00 00             ; CALL DECIMAL (03f0)
0b75: 0b a3 0a 00 00             ; CALL .3 (0aa3)
0b7a: 0b 5e 00 00 00             ; CALL BASE (005e)
0b7f: 03                         ; STORE
0b80: 0c                         ; RET
;
0b81: 18 ee f3 00 00             ; DICTP BINARY. (f3ee)
0b86: 0b 5e 00 00 00             ; CALL BASE (005e)
0b8b: 02                         ; FETCH
0b8c: 04                         ; SWAP
0b8d: 0b 0c 04 00 00             ; CALL BINARY (040c)
0b92: 0b 5c 0a 00 00             ; CALL (.) (0a5c)
0b97: 0b 5e 00 00 00             ; CALL BASE (005e)
0b9c: 03                         ; STORE
0b9d: 0c                         ; RET
;
0b9e: 18 e0 f3 00 00             ; DICTP MIN (f3e0)
0ba3: 1a                         ; OVER
0ba4: 1a                         ; OVER
0ba5: 17                         ; GT
0ba6: 5b 02                      ; BRANCHFZ 2 (0ba9)
0ba8: 04                         ; SWAP
0ba9: 05                         ; DROP
0baa: 0c                         ; RET
;
0bab: 18 d2 f3 00 00             ; DICTP MAX (f3d2)
0bb0: 1a                         ; OVER
0bb1: 1a                         ; OVER
0bb2: 15                         ; LT
0bb3: 5b 02                      ; BRANCHFZ 2 (0bb6)
0bb5: 04                         ; SWAP
0bb6: 05                         ; DROP
0bb7: 0c                         ; RET
;
0bb8: 18 c5 f3 00 00             ; DICTP .S (f3c5)
0bbd: 0e 20                      ; CLITERAL 32
0bbf: 19                         ; EMIT
0bc0: 26                         ; DEPTH
0bc1: 0e 00                      ; CLITERAL 0
0bc3: 15                         ; LT
0bc4: 5b 1f                      ; BRANCHFZ 31 (0be4)
0bc6: 07 10 53 74 61 63 6b 20 75 6e 64 65 72 66 6c 6f 77 21 00 ; SLITERAL (0bc7) [Stack underflow!]
0bd9: 0b 4f 06 00 00             ; CALL COUNT (064f)
0bde: 0b 59 06 00 00             ; CALL TYPE (0659)
0be3: fe                         ; RESET
0be4: 26                         ; DEPTH
0be5: 0e 00                      ; CLITERAL 0
0be7: 16                         ; EQ
0be8: 5b 0b                      ; BRANCHFZ 11 (0bf4)
0bea: 0e 28                      ; CLITERAL 40
0bec: 19                         ; EMIT
0bed: 0e ed                      ; CLITERAL 237
0bef: 19                         ; EMIT
0bf0: 0e 29                      ; CLITERAL 41
0bf2: 19                         ; EMIT
0bf3: 0c                         ; RET
0bf4: 0e 28                      ; CLITERAL 40
0bf6: 19                         ; EMIT
0bf7: 0e 20                      ; CLITERAL 32
0bf9: 19                         ; EMIT
0bfa: 26                         ; DEPTH
0bfb: 2e                         ; DEC
0bfc: 21                         ; DTOR
0bfd: 2b                         ; RFETCH
0bfe: 25                         ; PICK
0bff: 0b 76 0a 00 00             ; CALL . (0a76)
0c04: 2b                         ; RFETCH
0c05: 5b 06                      ; BRANCHFZ 6 (0c0c)
0c07: 22                         ; RTOD
0c08: 2e                         ; DEC
0c09: 21                         ; DTOR
0c0a: 5a 07                      ; BRANCHF 7 (0c12)
0c0c: 22                         ; RTOD
0c0d: 05                         ; DROP
0c0e: 0e 29                      ; CLITERAL 41
0c10: 19                         ; EMIT
0c11: 0c                         ; RET
0c12: 5d 16                      ; BRANCHB 22 (0bfd)
0c14: 0c                         ; RET
;
0c15: 18 b1 f3 00 00             ; DICTP .(MEM_SZ) (f3b1)
0c1a: 07 08 4d 65 6d 6f 72 79 3a 20 00 ; SLITERAL (0c1b) [Memory: ]
0c25: 0b 6f 06 00 00             ; CALL CT (066f)
0c2a: 0b 1d 05 00 00             ; CALL MEM_SZ (051d)
0c2f: 06                         ; DUP
0c30: 0b f0 0a 00 00             ; CALL HEX. (0af0)
0c35: 07 02 20 28 00             ; SLITERAL (0c36) [ (]
0c3a: 0b 6f 06 00 00             ; CALL CT (066f)
0c3f: 0b 5c 0a 00 00             ; CALL (.) (0a5c)
0c44: 07 01 29 00                ; SLITERAL (0c45) [)]
0c48: 0b 6f 06 00 00             ; CALL CT (066f)
0c4d: 0c                         ; RET
;
0c4e: 18 9f f3 00 00             ; DICTP .(HERE) (f39f)
0c53: 07 06 48 45 52 45 3a 20 00 ; SLITERAL (0c54) [HERE: ]
0c5c: 0b 6f 06 00 00             ; CALL CT (066f)
0c61: 0b fd 00 00 00             ; CALL HERE (00fd)
0c66: 06                         ; DUP
0c67: 0b f0 0a 00 00             ; CALL HEX. (0af0)
0c6c: 07 02 20 28 00             ; SLITERAL (0c6d) [ (]
0c71: 0b 6f 06 00 00             ; CALL CT (066f)
0c76: 0b 5c 0a 00 00             ; CALL (.) (0a5c)
0c7b: 07 01 29 00                ; SLITERAL (0c7c) [)]
0c7f: 0b 6f 06 00 00             ; CALL CT (066f)
0c84: 0c                         ; RET
;
0c85: 18 8d f3 00 00             ; DICTP .(LAST) (f38d)
0c8a: 07 06 4c 41 53 54 3a 20 00 ; SLITERAL (0c8b) [LAST: ]
0c93: 0b 6f 06 00 00             ; CALL CT (066f)
0c98: 0b 09 01 00 00             ; CALL LAST (0109)
0c9d: 06                         ; DUP
0c9e: 0b f0 0a 00 00             ; CALL HEX. (0af0)
0ca3: 07 02 20 28 00             ; SLITERAL (0ca4) [ (]
0ca8: 0b 6f 06 00 00             ; CALL CT (066f)
0cad: 0b 5c 0a 00 00             ; CALL (.) (0a5c)
0cb2: 07 01 29 00                ; SLITERAL (0cb3) [)]
0cb6: 0b 6f 06 00 00             ; CALL CT (066f)
0cbb: 0c                         ; RET
;
0cbc: 18 77 f3 00 00             ; DICTP .WORD-SHORT (f377)
0cc1: 06                         ; DUP
0cc2: 0b cb 07 00 00             ; CALL DICT>NAME (07cb)
0cc7: 0b 6f 06 00 00             ; CALL CT (066f)
0ccc: 0e 20                      ; CLITERAL 32
0cce: 19                         ; EMIT
0ccf: 02                         ; FETCH
0cd0: 0c                         ; RET
;
0cd1: 18 67 f3 00 00             ; DICTP WORDS (f367)
0cd6: 0b 09 01 00 00             ; CALL LAST (0109)
0cdb: 06                         ; DUP
0cdc: 02                         ; FETCH
0cdd: 2a                         ; NOT
0cde: 5b 09                      ; BRANCHFZ 9 (0ce8)
0ce0: 05                         ; DROP
0ce1: 0e 0d                      ; CLITERAL 13
0ce3: 19                         ; EMIT
0ce4: 0e 0a                      ; CLITERAL 10
0ce6: 19                         ; EMIT
0ce7: 0c                         ; RET
0ce8: 0b bc 0c 00 00             ; CALL .WORD-SHORT (0cbc)
0ced: 5d 13                      ; BRANCHB 19 (0cdb)
0cef: 0c                         ; RET
;
0cf0: 18 52 f3 00 00             ; DICTP .WORD-LONG (f352)
0cf5: 06                         ; DUP
0cf6: 0b f0 0a 00 00             ; CALL HEX. (0af0)
0cfb: 0e 3a                      ; CLITERAL 58
0cfd: 19                         ; EMIT
0cfe: 0e 20                      ; CLITERAL 32
0d00: 19                         ; EMIT
0d01: 06                         ; DUP
0d02: 0b cb 07 00 00             ; CALL DICT>NAME (07cb)
0d07: 0b 6f 06 00 00             ; CALL CT (066f)
0d0c: 0e 20                      ; CLITERAL 32
0d0e: 19                         ; EMIT
0d0f: 06                         ; DUP
0d10: 0b ff 07 00 00             ; CALL DICT.GetXT (07ff)
0d15: 0e 28                      ; CLITERAL 40
0d17: 19                         ; EMIT
0d18: 0b 2a 0b 00 00             ; CALL HEX.4 (0b2a)
0d1d: 0e 29                      ; CLITERAL 41
0d1f: 19                         ; EMIT
0d20: 06                         ; DUP
0d21: 0b bf 07 00 00             ; CALL DICT>FLAGS (07bf)
0d26: 0f                         ; CFETCH
0d27: 06                         ; DUP
0d28: 07 09 2c 20 46 6c 61 67 73 3a 20 00 ; SLITERAL (0d29) [, Flags: ]
0d34: 0b 6f 06 00 00             ; CALL CT (066f)
0d39: 0b 0d 0b 00 00             ; CALL HEX.2 (0b0d)
0d3e: 06                         ; DUP
0d3f: 0b 40 08 00 00             ; CALL FLAGS.ISINLINE? (0840)
0d44: 5b 12                      ; BRANCHFZ 18 (0d57)
0d46: 07 09 20 28 49 4e 4c 49 4e 45 29 00 ; SLITERAL (0d47) [ (INLINE)]
0d52: 0b 6f 06 00 00             ; CALL CT (066f)
0d57: 0b 37 08 00 00             ; CALL FLAGS.ISIMMEDIATE? (0837)
0d5c: 5b 15                      ; BRANCHFZ 21 (0d72)
0d5e: 07 0c 20 28 49 4d 4d 45 44 49 41 54 45 29 00 ; SLITERAL (0d5f) [ (IMMEDIATE)]
0d6d: 0b 6f 06 00 00             ; CALL CT (066f)
0d72: 0e 0d                      ; CLITERAL 13
0d74: 19                         ; EMIT
0d75: 0e 0a                      ; CLITERAL 10
0d77: 19                         ; EMIT
0d78: 02                         ; FETCH
0d79: 0c                         ; RET
;
0d7a: 18 41 f3 00 00             ; DICTP WORDSV (f341)
0d7f: 0b 85 0c 00 00             ; CALL .(LAST) (0c85)
0d84: 0e 0d                      ; CLITERAL 13
0d86: 19                         ; EMIT
0d87: 0e 0a                      ; CLITERAL 10
0d89: 19                         ; EMIT
0d8a: 0b 09 01 00 00             ; CALL LAST (0109)
0d8f: 06                         ; DUP
0d90: 02                         ; FETCH
0d91: 2a                         ; NOT
0d92: 5b 09                      ; BRANCHFZ 9 (0d9c)
0d94: 05                         ; DROP
0d95: 0e 0d                      ; CLITERAL 13
0d97: 19                         ; EMIT
0d98: 0e 0a                      ; CLITERAL 10
0d9a: 19                         ; EMIT
0d9b: 0c                         ; RET
0d9c: 0b f0 0c 00 00             ; CALL .WORD-LONG (0cf0)
0da1: 5d 13                      ; BRANCHB 19 (0d8f)
0da3: 0c                         ; RET
;
0da4: 18 2d f3 00 00             ; DICTP NUM-WORDS (f32d)
0da9: 0e 00                      ; CLITERAL 0
0dab: 21                         ; DTOR
0dac: 0b 09 01 00 00             ; CALL LAST (0109)
0db1: 06                         ; DUP
0db2: 02                         ; FETCH
0db3: 2a                         ; NOT
0db4: 5b 0a                      ; BRANCHFZ 10 (0dbf)
0db6: 05                         ; DROP
0db7: 22                         ; RTOD
0db8: 0e 0d                      ; CLITERAL 13
0dba: 19                         ; EMIT
0dbb: 0e 0a                      ; CLITERAL 10
0dbd: 19                         ; EMIT
0dbe: 0c                         ; RET
0dbf: 22                         ; RTOD
0dc0: 2c                         ; INC
0dc1: 21                         ; DTOR
0dc2: 02                         ; FETCH
0dc3: 5d 13                      ; BRANCHB 19 (0db1)
0dc5: 0c                         ; RET
;
0dc6: 18 1c f3 00 00             ; DICTP .lastx (f31c)
0dcb: 0e 0d                      ; CLITERAL 13
0dcd: 19                         ; EMIT
0dce: 0e 0a                      ; CLITERAL 10
0dd0: 19                         ; EMIT
0dd1: 0b 09 01 00 00             ; CALL LAST (0109)
0dd6: 04                         ; SWAP
0dd7: 04                         ; SWAP
0dd8: 0b f0 0c 00 00             ; CALL .WORD-LONG (0cf0)
0ddd: 04                         ; SWAP
0dde: 2e                         ; DEC
0ddf: 06                         ; DUP
0de0: 5f 0a                      ; BRANCHBNZ 10 (0dd7)
0de2: 05                         ; DROP
0de3: 05                         ; DROP
0de4: 0c                         ; RET
;
0de5: 18 0a f3 00 00             ; DICTP EXECUTE (f30a)
0dea: 22                         ; RTOD
0deb: 05                         ; DROP
0dec: 21                         ; DTOR
0ded: 0c                         ; RET
;
0dee: 18 f7 f2 00 00             ; DICTP find.ret (f2f7)
0df3: 06                         ; DUP
0df4: 0f                         ; CFETCH
0df5: 0e 0c                      ; CLITERAL 12
0df7: 16                         ; EQ
0df8: 5b 02                      ; BRANCHFZ 2 (0dfb)
0dfa: 0c                         ; RET
0dfb: 2c                         ; INC
0dfc: 5d 0a                      ; BRANCHB 10 (0df3)
0dfe: 0c                         ; RET
;
0dff: 18 e4 f2 00 00             ; DICTP (inline) (f2e4)
0e04: 1a                         ; OVER
0e05: 1a                         ; OVER
0e06: 15                         ; LT
0e07: 5b 02                      ; BRANCHFZ 2 (0e0a)
0e09: 04                         ; SWAP
0e0a: 06                         ; DUP
0e0b: 0f                         ; CFETCH
0e0c: 0b 15 01 00 00             ; CALL C, (0115)
0e11: 2c                         ; INC
0e12: 1a                         ; OVER
0e13: 1a                         ; OVER
0e14: 17                         ; GT
0e15: 5f 0c                      ; BRANCHBNZ 12 (0e0a)
0e17: 05                         ; DROP
0e18: 05                         ; DROP
0e19: 0c                         ; RET
;
0e1a: 18 d4 f2 00 00             ; DICTP DOES> (f2d4)
0e1f: 22                         ; RTOD
0e20: 06                         ; DUP
0e21: 0b ee 0d 00 00             ; CALL find.ret (0dee)
0e26: 06                         ; DUP
0e27: 21                         ; DTOR
0e28: 2c                         ; INC
0e29: 0b ff 0d 00 00             ; CALL (inline) (0dff)
0e2e: 0c                         ; RET
;
0e2f: 18 be f2 00 00             ; DICTP Copy.INLINE (f2be)
0e34: 06                         ; DUP
0e35: 0f                         ; CFETCH
0e36: 0e 18                      ; CLITERAL 24
0e38: 16                         ; EQ
0e39: 5b 05                      ; BRANCHFZ 5 (0e3f)
0e3b: 2c                         ; INC
0e3c: 0e 04                      ; CLITERAL 4
0e3e: 11                         ; ADD
0e3f: 06                         ; DUP
0e40: 0b ee 0d 00 00             ; CALL find.ret (0dee)
0e45: 0b ff 0d 00 00             ; CALL (inline) (0dff)
0e4a: 0c                         ; RET
;
0e4b: 18 ad f2 00 00             ; DICTP strlen (f2ad)
0e50: 0e 00                      ; CLITERAL 0
0e52: 04                         ; SWAP
0e53: 04                         ; SWAP
0e54: 1a                         ; OVER
0e55: 0f                         ; CFETCH
0e56: 06                         ; DUP
0e57: 5b 07                      ; BRANCHFZ 7 (0e5f)
0e59: 05                         ; DROP
0e5a: 2c                         ; INC
0e5b: 04                         ; SWAP
0e5c: 2c                         ; INC
0e5d: 0e 01                      ; CLITERAL 1
0e5f: 5f 0d                      ; BRANCHBNZ 13 (0e53)
0e61: 04                         ; SWAP
0e62: 05                         ; DROP
0e63: 0c                         ; RET
;
0e64: 18 9d f2 00 00             ; DICTP cstr, (f29d)
0e69: 06                         ; DUP
0e6a: 0f                         ; CFETCH
0e6b: 1a                         ; OVER
0e6c: 11                         ; ADD
0e6d: 2c                         ; INC
0e6e: 2c                         ; INC
0e6f: 0b ff 0d 00 00             ; CALL (inline) (0dff)
0e74: 0c                         ; RET
;
0e75: 18 89 f2 00 00             ; DICTP [COMPILE] (f289)
0e7a: 0b 40 08 00 00             ; CALL FLAGS.ISINLINE? (0840)
0e7f: 5b 08                      ; BRANCHFZ 8 (0e88)
0e81: 0b 2f 0e 00 00             ; CALL Copy.INLINE (0e2f)
0e86: 5a 0b                      ; BRANCHF 11 (0e92)
0e88: 0b c7 01 00 00             ; CALL CALL (01c7)
0e8d: 0b 2d 01 00 00             ; CALL , (012d)
0e92: 0c                         ; RET
;
0e93: 18 73 f2 00 00             ; DICTP executeWord (f273)
0e98: 21                         ; DTOR
0e99: 2b                         ; RFETCH
0e9a: 0b 69 08 00 00             ; CALL findInDict (0869)
0e9f: 5b 29                      ; BRANCHFZ 41 (0ec9)
0ea1: 22                         ; RTOD
0ea2: 05                         ; DROP
0ea3: 0b 2e 04 00 00             ; CALL ?COMPILING (042e)
0ea8: 5b 18                      ; BRANCHFZ 24 (0ec1)
0eaa: 06                         ; DUP
0eab: 0b 37 08 00 00             ; CALL FLAGS.ISIMMEDIATE? (0837)
0eb0: 5b 09                      ; BRANCHFZ 9 (0eba)
0eb2: 05                         ; DROP
0eb3: 0b e5 0d 00 00             ; CALL EXECUTE (0de5)
0eb8: 5a 06                      ; BRANCHF 6 (0ebf)
0eba: 0b 75 0e 00 00             ; CALL [COMPILE] (0e75)
0ebf: 5a 07                      ; BRANCHF 7 (0ec7)
0ec1: 05                         ; DROP
0ec2: 0b e5 0d 00 00             ; CALL EXECUTE (0de5)
0ec7: 5a 46                      ; BRANCHF 70 (0f0e)
0ec9: 05                         ; DROP
0eca: 05                         ; DROP
0ecb: 2b                         ; RFETCH
0ecc: 0b 19 09 00 00             ; CALL isNumber? (0919)
0ed1: 5b 2e                      ; BRANCHFZ 46 (0f00)
0ed3: 0b 2e 04 00 00             ; CALL ?COMPILING (042e)
0ed8: 5b 25                      ; BRANCHFZ 37 (0efe)
0eda: 06                         ; DUP
0edb: 0e 00                      ; CLITERAL 0
0edd: 0e ff                      ; CLITERAL 255
0edf: 0b f4 06 00 00             ; CALL BETWEEN (06f4)
0ee4: 5b 0f                      ; BRANCHFZ 15 (0ef4)
0ee6: 0e 0e                      ; CLITERAL 14
0ee8: 0b 15 01 00 00             ; CALL C, (0115)
0eed: 0b 15 01 00 00             ; CALL C, (0115)
0ef2: 5a 0b                      ; BRANCHF 11 (0efe)
0ef4: 0b 63 01 00 00             ; CALL LITERAL (0163)
0ef9: 0b 2d 01 00 00             ; CALL , (012d)
0efe: 5a 0d                      ; BRANCHF 13 (0f0c)
0f00: 05                         ; DROP
0f01: 07 02 3f 3f 00             ; SLITERAL (0f02) [??]
0f06: 0b 6f 06 00 00             ; CALL CT (066f)
0f0b: fe                         ; RESET
0f0c: 22                         ; RTOD
0f0d: 05                         ; DROP
0f0e: 0c                         ; RET
;
0f0f: 18 5c f2 00 00             ; DICTP executeInput (f25c)
0f14: 0b 8b 00 00 00             ; CALL >IN (008b)
0f19: 02                         ; FETCH
0f1a: 0b 07 07 00 00             ; CALL skipWS (0707)
0f1f: 0b 8b 00 00 00             ; CALL >IN (008b)
0f24: 03                         ; STORE
0f25: 0b 8b 00 00 00             ; CALL >IN (008b)
0f2a: 02                         ; FETCH
0f2b: 0f                         ; CFETCH
0f2c: 5b 19                      ; BRANCHFZ 25 (0f46)
0f2e: 0b 8b 00 00 00             ; CALL >IN (008b)
0f33: 02                         ; FETCH
0f34: 0b 8a 07 00 00             ; CALL getOneWord (078a)
0f39: 0b 8b 00 00 00             ; CALL >IN (008b)
0f3e: 03                         ; STORE
0f3f: 0b 93 0e 00 00             ; CALL executeWord (0e93)
0f44: 5a 02                      ; BRANCHF 2 (0f47)
0f46: 0c                         ; RET
0f47: 5d 34                      ; BRANCHB 52 (0f14)
0f49: 0c                         ; RET
;
0f4a: 18 4e f2 00 00             ; DICTP Pad (f24e)
0f4f: 0b 09 01 00 00             ; CALL LAST (0109)
0f54: 0e c8                      ; CLITERAL 200
0f56: 12                         ; SUB
0f57: 06                         ; DUP
0f58: 0b fd 00 00 00             ; CALL HERE (00fd)
0f5d: 15                         ; LT
0f5e: 5b 13                      ; BRANCHFZ 19 (0f72)
0f60: 07 0e 4f 75 74 20 6f 66 20 4d 65 6d 6f 72 79 21 00 ; SLITERAL (0f61) [Out of Memory!]
0f71: fe                         ; RESET
0f72: 0c                         ; RET
;
0f73: 18 3c f2 00 00             ; DICTP getLine (f23c)
0f78: 0e 00                      ; CLITERAL 0
0f7a: 0b 4a 0f 00 00             ; CALL Pad (0f4a)
0f7f: 06                         ; DUP
0f80: 2c                         ; INC
0f81: 0b 8b 00 00 00             ; CALL >IN (008b)
0f86: 03                         ; STORE
0f87: 10                         ; CSTORE
0f88: 0e 00                      ; CLITERAL 0
0f8a: 0b 8b 00 00 00             ; CALL >IN (008b)
0f8f: 02                         ; FETCH
0f90: 10                         ; CSTORE
0f91: 27                         ; GETCH
0f92: 06                         ; DUP
0f93: 0e 0d                      ; CLITERAL 13
0f95: 16                         ; EQ
0f96: 5b 0b                      ; BRANCHFZ 11 (0fa2)
0f98: 05                         ; DROP
0f99: 0b 4a 0f 00 00             ; CALL Pad (0f4a)
0f9e: 0e 20                      ; CLITERAL 32
0fa0: 19                         ; EMIT
0fa1: 0c                         ; RET
0fa2: 06                         ; DUP
0fa3: 0e 09                      ; CLITERAL 9
0fa5: 16                         ; EQ
0fa6: 5b 04                      ; BRANCHFZ 4 (0fab)
0fa8: 05                         ; DROP
0fa9: 0e 20                      ; CLITERAL 32
0fab: 06                         ; DUP
0fac: 0e 03                      ; CLITERAL 3
0fae: 16                         ; EQ
0faf: 5b 02                      ; BRANCHFZ 2 (0fb2)
0fb1: ff                         ; BYE
0fb2: 06                         ; DUP
0fb3: 0e 08                      ; CLITERAL 8
0fb5: 16                         ; EQ
0fb6: 5b 2b                      ; BRANCHFZ 43 (0fe2)
0fb8: 0b 4a 0f 00 00             ; CALL Pad (0f4a)
0fbd: 0f                         ; CFETCH
0fbe: 0e 00                      ; CLITERAL 0
0fc0: 17                         ; GT
0fc1: 5b 1d                      ; BRANCHFZ 29 (0fdf)
0fc3: 0b 4a 0f 00 00             ; CALL Pad (0f4a)
0fc8: 06                         ; DUP
0fc9: 0f                         ; CFETCH
0fca: 2e                         ; DEC
0fcb: 04                         ; SWAP
0fcc: 10                         ; CSTORE
0fcd: 0b 8b 00 00 00             ; CALL >IN (008b)
0fd2: 06                         ; DUP
0fd3: 02                         ; FETCH
0fd4: 2e                         ; DEC
0fd5: 04                         ; SWAP
0fd6: 03                         ; STORE
0fd7: 06                         ; DUP
0fd8: 19                         ; EMIT
0fd9: 0e 20                      ; CLITERAL 32
0fdb: 19                         ; EMIT
0fdc: 19                         ; EMIT
0fdd: 5a 02                      ; BRANCHF 2 (0fe0)
0fdf: 05                         ; DROP
0fe0: 5a 2d                      ; BRANCHF 45 (100e)
0fe2: 06                         ; DUP
0fe3: 0e 20                      ; CLITERAL 32
0fe5: 0e 7f                      ; CLITERAL 127
0fe7: 0b f4 06 00 00             ; CALL BETWEEN (06f4)
0fec: 5b 20                      ; BRANCHFZ 32 (100d)
0fee: 06                         ; DUP
0fef: 19                         ; EMIT
0ff0: 0b 8b 00 00 00             ; CALL >IN (008b)
0ff5: 02                         ; FETCH
0ff6: 10                         ; CSTORE
0ff7: 0b 8b 00 00 00             ; CALL >IN (008b)
0ffc: 06                         ; DUP
0ffd: 02                         ; FETCH
0ffe: 2c                         ; INC
0fff: 04                         ; SWAP
1000: 03                         ; STORE
1001: 0b 4a 0f 00 00             ; CALL Pad (0f4a)
1006: 06                         ; DUP
1007: 0f                         ; CFETCH
1008: 2c                         ; INC
1009: 04                         ; SWAP
100a: 10                         ; CSTORE
100b: 5a 02                      ; BRANCHF 2 (100e)
100d: 05                         ; DROP
100e: 5d 87                      ; BRANCHB 135 (0f88)
1010: 0c                         ; RET
;
1011: 18 29 f2 00 00             ; DICTP strcpy2c (f229)
1016: 06                         ; DUP
1017: 21                         ; DTOR
1018: 0e 00                      ; CLITERAL 0
101a: 1a                         ; OVER
101b: 10                         ; CSTORE
101c: 2c                         ; INC
101d: 04                         ; SWAP
101e: 06                         ; DUP
101f: 0f                         ; CFETCH
1020: 06                         ; DUP
1021: 5b 11                      ; BRANCHFZ 17 (1033)
1023: 0e 02                      ; CLITERAL 2
1025: 25                         ; PICK
1026: 10                         ; CSTORE
1027: 04                         ; SWAP
1028: 2c                         ; INC
1029: 04                         ; SWAP
102a: 2c                         ; INC
102b: 2b                         ; RFETCH
102c: 06                         ; DUP
102d: 0f                         ; CFETCH
102e: 2c                         ; INC
102f: 04                         ; SWAP
1030: 10                         ; CSTORE
1031: 5a 0a                      ; BRANCHF 10 (103c)
1033: 21                         ; DTOR
1034: 04                         ; SWAP
1035: 22                         ; RTOD
1036: 04                         ; SWAP
1037: 10                         ; CSTORE
1038: 05                         ; DROP
1039: 22                         ; RTOD
103a: 05                         ; DROP
103b: 0c                         ; RET
103c: 5d 1f                      ; BRANCHB 31 (101e)
103e: 0c                         ; RET
;
103f: 18 13 f2 00 00             ; DICTP Define-Word (f213)
1044: 0b 09 01 00 00             ; CALL LAST (0109)
1049: 1a                         ; OVER
104a: 0b 4b 0e 00 00             ; CALL strlen (0e4b)
104f: 0e 02                      ; CLITERAL 2
1051: 0e 04                      ; CLITERAL 4
1053: 13                         ; MUL
1054: 0e 03                      ; CLITERAL 3
1056: 11                         ; ADD
1057: 11                         ; ADD
1058: 12                         ; SUB
1059: 06                         ; DUP
105a: 21                         ; DTOR
105b: 21                         ; DTOR
105c: 0b 09 01 00 00             ; CALL LAST (0109)
1061: 2b                         ; RFETCH
1062: 03                         ; STORE
1063: 22                         ; RTOD
1064: 0e 04                      ; CLITERAL 4
1066: 11                         ; ADD
1067: 21                         ; DTOR
1068: 0b fd 00 00 00             ; CALL HERE (00fd)
106d: 2b                         ; RFETCH
106e: 03                         ; STORE
106f: 22                         ; RTOD
1070: 0e 04                      ; CLITERAL 4
1072: 11                         ; ADD
1073: 21                         ; DTOR
1074: 0e 00                      ; CLITERAL 0
1076: 2b                         ; RFETCH
1077: 10                         ; CSTORE
1078: 22                         ; RTOD
1079: 2c                         ; INC
107a: 21                         ; DTOR
107b: 22                         ; RTOD
107c: 0b 11 10 00 00             ; CALL strcpy2c (1011)
1081: 22                         ; RTOD
1082: 0b 4f 00 00 00             ; CALL (LAST) (004f)
1087: 03                         ; STORE
1088: 0c                         ; RET
;
1089: 18 fd f1 00 00             ; DICTP CREATE-NAME (f1fd)
108e: 0b 8b 00 00 00             ; CALL >IN (008b)
1093: 02                         ; FETCH
1094: 0b 07 07 00 00             ; CALL skipWS (0707)
1099: 0b 8b 00 00 00             ; CALL >IN (008b)
109e: 03                         ; STORE
109f: 0b 8b 00 00 00             ; CALL >IN (008b)
10a4: 02                         ; FETCH
10a5: 0f                         ; CFETCH
10a6: 5b 30                      ; BRANCHFZ 48 (10d7)
10a8: 0b 8b 00 00 00             ; CALL >IN (008b)
10ad: 02                         ; FETCH
10ae: 0b 8a 07 00 00             ; CALL getOneWord (078a)
10b3: 0b 8b 00 00 00             ; CALL >IN (008b)
10b8: 03                         ; STORE
10b9: 06                         ; DUP
10ba: 0f                         ; CFETCH
10bb: 5b 19                      ; BRANCHFZ 25 (10d5)
10bd: 0b 3f 10 00 00             ; CALL Define-Word (103f)
10c2: 0e 18                      ; CLITERAL 24
10c4: 0b 15 01 00 00             ; CALL C, (0115)
10c9: 0b 09 01 00 00             ; CALL LAST (0109)
10ce: 0b 2d 01 00 00             ; CALL , (012d)
10d3: 5a 03                      ; BRANCHF 3 (10d7)
10d5: 05                         ; DROP
10d6: fe                         ; RESET
10d7: 0c                         ; RET
;
10d8: 18 f1 f1 00 00             ; DICTP : (f1f1)
10dd: 0b 89 10 00 00             ; CALL CREATE-NAME (1089)
10e2: 0b 6d 00 00 00             ; CALL STATE (006d)
10e7: 0b 1a 04 00 00             ; CALL ON (041a)
10ec: 0c                         ; RET
;
10ed: 18 df f1 00 00             ; DICTP :NONAME (f1df)
10f2: 0b fd 00 00 00             ; CALL HERE (00fd)
10f7: 0b 6d 00 00 00             ; CALL STATE (006d)
10fc: 0b 1a 04 00 00             ; CALL ON (041a)
1101: 0c                         ; RET
;
1102: 18 d3 f1 00 00             ; DICTP ; (f1d3)
1107: 0b d4 01 00 00             ; CALL RET (01d4)
110c: 0b 6d 00 00 00             ; CALL STATE (006d)
1111: 0b 24 04 00 00             ; CALL OFF (0424)
1116: 0c                         ; RET
;
1117: 18 be f1 00 00             ; DICTP ForgetLast (f1be)
111c: 0b 09 01 00 00             ; CALL LAST (0109)
1121: 0e 04                      ; CLITERAL 4
1123: 11                         ; ADD
1124: 02                         ; FETCH
1125: 0b 40 00 00 00             ; CALL (HERE) (0040)
112a: 03                         ; STORE
112b: 0b 09 01 00 00             ; CALL LAST (0109)
1130: 02                         ; FETCH
1131: 0b 4f 00 00 00             ; CALL (LAST) (004f)
1136: 03                         ; STORE
1137: 0c                         ; RET
;
1138: 18 a8 f1 00 00             ; DICTP close-input (f1a8)
113d: 0b b8 00 00 00             ; CALL INPUT-FP (00b8)
1142: 02                         ; FETCH
1143: 20                         ; FCLOSE
1144: 0e 00                      ; CLITERAL 0
1146: 0b b8 00 00 00             ; CALL INPUT-FP (00b8)
114b: 03                         ; STORE
114c: 0c                         ; RET
;
114d: 18 93 f1 00 00             ; DICTP resetState (f193)
1152: 0b 2e 04 00 00             ; CALL ?COMPILING (042e)
1157: 5b 06                      ; BRANCHFZ 6 (115e)
1159: 0b 17 11 00 00             ; CALL ForgetLast (1117)
115e: 0e 00                      ; CLITERAL 0
1160: 0b 6d 00 00 00             ; CALL STATE (006d)
1165: 03                         ; STORE
1166: 0b 38 11 00 00             ; CALL close-input (1138)
116b: 0c                         ; RET
;
116c: 18 83 f1 00 00             ; DICTP ALLOT (f183)
1171: 0b fd 00 00 00             ; CALL HERE (00fd)
1176: 11                         ; ADD
1177: 0b 40 00 00 00             ; CALL (HERE) (0040)
117c: 03                         ; STORE
117d: 0c                         ; RET
;
117e: 18 77 f1 00 00             ; DICTP ? (f177)
1183: 02                         ; FETCH
1184: 0b 76 0a 00 00             ; CALL . (0a76)
1189: 0c                         ; RET
;
118a: 18 6a f1 00 00             ; DICTP C? (f16a)
118f: 0f                         ; CFETCH
1190: 0b 76 0a 00 00             ; CALL . (0a76)
1195: 0c                         ; RET
;
1196: 18 5b f1 00 00             ; DICTP FREE (f15b)
119b: 0b 09 01 00 00             ; CALL LAST (0109)
11a0: 0b fd 00 00 00             ; CALL HERE (00fd)
11a5: 12                         ; SUB
11a6: 0c                         ; RET
;
11a7: 18 4b f1 00 00             ; DICTP .FREE (f14b)
11ac: 0b 96 11 00 00             ; CALL FREE (1196)
11b1: 0b 5c 0a 00 00             ; CALL (.) (0a5c)
11b6: 07 0c 20 62 79 74 65 73 20 66 72 65 65 2e 00 ; SLITERAL (11b7) [ bytes free.]
11c5: 0b 6f 06 00 00             ; CALL CT (066f)
11ca: 0c                         ; RET
;
11cb: 18 38 f1 00 00             ; DICTP sys-info (f138)
11d0: 0b 15 0c 00 00             ; CALL .(MEM_SZ) (0c15)
11d5: 0e 2c                      ; CLITERAL 44
11d7: 19                         ; EMIT
11d8: 0e 20                      ; CLITERAL 32
11da: 19                         ; EMIT
11db: 0b 4e 0c 00 00             ; CALL .(HERE) (0c4e)
11e0: 0e 2c                      ; CLITERAL 44
11e2: 19                         ; EMIT
11e3: 0e 20                      ; CLITERAL 32
11e5: 19                         ; EMIT
11e6: 0b 85 0c 00 00             ; CALL .(LAST) (0c85)
11eb: 0e 2c                      ; CLITERAL 44
11ed: 19                         ; EMIT
11ee: 0e 20                      ; CLITERAL 32
11f0: 19                         ; EMIT
11f1: 0b a7 11 00 00             ; CALL .FREE (11a7)
11f6: 0e 0d                      ; CLITERAL 13
11f8: 19                         ; EMIT
11f9: 0e 0a                      ; CLITERAL 10
11fb: 19                         ; EMIT
11fc: 0c                         ; RET
;
11fd: 18 25 f1 00 00             ; DICTP mainLoop (f125)
1202: 0b 4d 11 00 00             ; CALL resetState (114d)
1207: 0b 2e 04 00 00             ; CALL ?COMPILING (042e)
120c: 2a                         ; NOT
120d: 5b 11                      ; BRANCHFZ 17 (121f)
120f: 07 03 20 4f 4b 00          ; SLITERAL (1210) [ OK]
1215: 0b 6f 06 00 00             ; CALL CT (066f)
121a: 0b b8 0b 00 00             ; CALL .S (0bb8)
121f: 0e 0d                      ; CLITERAL 13
1221: 19                         ; EMIT
1222: 0e 0a                      ; CLITERAL 10
1224: 19                         ; EMIT
1225: 0b 73 0f 00 00             ; CALL getLine (0f73)
122a: 2c                         ; INC
122b: 0b 8b 00 00 00             ; CALL >IN (008b)
1230: 03                         ; STORE
1231: 0b 0f 0f 00 00             ; CALL executeInput (0f0f)
1236: 0e 20                      ; CLITERAL 32
1238: 19                         ; EMIT
1239: 5d 33                      ; BRANCHB 51 (1207)
123b: 0c                         ; RET
;
123c: 18 16 f1 00 00             ; DICTP main (f116)
1241: 0b 6d 00 00 00             ; CALL STATE (006d)
1246: 02                         ; FETCH
1247: 0e 63                      ; CLITERAL 99
1249: 16                         ; EQ
124a: 5b 1e                      ; BRANCHFZ 30 (1269)
124c: 0b cb 11 00 00             ; CALL sys-info (11cb)
1251: 0b 6d 00 00 00             ; CALL STATE (006d)
1256: 0b 24 04 00 00             ; CALL OFF (0424)
125b: 07 06 48 65 6c 6c 6f 2e 00 ; SLITERAL (125c) [Hello.]
1264: 0b 6f 06 00 00             ; CALL CT (066f)
1269: 0b fd 11 00 00             ; CALL mainLoop (11fd)
126e: 0c                         ; RET
;
126f: 18 ff f0 00 00             ; DICTP file-getLine (f0ff)
1274: 0b 4a 0f 00 00             ; CALL Pad (0f4a)
1279: 04                         ; SWAP
127a: 0e c8                      ; CLITERAL 200
127c: 04                         ; SWAP
127d: 1e                         ; FREADLINE
127e: 0b 4a 0f 00 00             ; CALL Pad (0f4a)
1283: 04                         ; SWAP
1284: 0c                         ; RET
;
1285: 18 ec f0 00 00             ; DICTP load-sub (f0ec)
128a: 0b b8 00 00 00             ; CALL INPUT-FP (00b8)
128f: 02                         ; FETCH
1290: 0b 6f 12 00 00             ; CALL file-getLine (126f)
1295: 5b 0f                      ; BRANCHFZ 15 (12a5)
1297: 2c                         ; INC
1298: 0b 8b 00 00 00             ; CALL >IN (008b)
129d: 03                         ; STORE
129e: 0b 0f 0f 00 00             ; CALL executeInput (0f0f)
12a3: 5a 08                      ; BRANCHF 8 (12ac)
12a5: 05                         ; DROP
12a6: 0b 38 11 00 00             ; CALL close-input (1138)
12ab: 0c                         ; RET
12ac: 5d 23                      ; BRANCHB 35 (128a)
12ae: 0c                         ; RET
;
12af: 18 d8 f0 00 00             ; DICTP load-file (f0d8)
12b4: 0b 38 11 00 00             ; CALL close-input (1138)
12b9: 0e 00                      ; CLITERAL 0
12bb: 0e 00                      ; CLITERAL 0
12bd: 1c                         ; FOPEN
12be: 2a                         ; NOT
12bf: 5b 1c                      ; BRANCHFZ 28 (12dc)
12c1: 07 11 43 61 6e 6e 6f 74 20 6f 70 65 6e 20 66 69 6c 65 2e 00 ; SLITERAL (12c2) [Cannot open file.]
12d5: 0b 6f 06 00 00             ; CALL CT (066f)
12da: 05                         ; DROP
12db: 0c                         ; RET
12dc: 0b b8 00 00 00             ; CALL INPUT-FP (00b8)
12e1: 03                         ; STORE
12e2: 0b 85 12 00 00             ; CALL load-sub (1285)
12e7: 0c                         ; RET
;
12e8: 18 c9 f0 00 00             ; DICTP LOAD (f0c9)
12ed: 0b b8 00 00 00             ; CALL INPUT-FP (00b8)
12f2: 02                         ; FETCH
12f3: 21                         ; DTOR
12f4: 33                         ; RESET
12f5: 5b 1a                      ; BRANCHFZ 26 (1310)
12f7: 0b b8 00 00 00             ; CALL INPUT-FP (00b8)
12fc: 03                         ; STORE
12fd: 0b 85 12 00 00             ; CALL load-sub (1285)
1302: 0b 38 11 00 00             ; CALL close-input (1138)
1307: 22                         ; RTOD
1308: 0b b8 00 00 00             ; CALL INPUT-FP (00b8)
130d: 03                         ; STORE
130e: 5a 28                      ; BRANCHF 40 (1337)
1310: 07 17 43 61 6e 6e 6f 74 20 6f 70 65 6e 20 62 6c 6f 63 6b 20 66 69 6c 65 2e 00 ; SLITERAL (1311) [Cannot open block file.]
132a: 0b 6f 06 00 00             ; CALL CT (066f)
132f: 05                         ; DROP
1330: 22                         ; RTOD
1331: 0b b8 00 00 00             ; CALL INPUT-FP (00b8)
1336: 03                         ; STORE
1337: 0c                         ; RET
;
1338: 18 ba f0 00 00             ; DICTP THRU (f0ba)
133d: 04                         ; SWAP
133e: 1a                         ; OVER
133f: 1a                         ; OVER
1340: 15                         ; LT
1341: 5b 04                      ; BRANCHFZ 4 (1346)
1343: 05                         ; DROP
1344: 05                         ; DROP
1345: 0c                         ; RET
1346: 06                         ; DUP
1347: 04                         ; SWAP
1348: 21                         ; DTOR
1349: 04                         ; SWAP
134a: 22                         ; RTOD
134b: 21                         ; DTOR
134c: 21                         ; DTOR
134d: 0b e8 12 00 00             ; CALL LOAD (12e8)
1352: 22                         ; RTOD
1353: 22                         ; RTOD
1354: 2c                         ; INC
1355: 5d 18                      ; BRANCHB 24 (133e)
1357: 0c                         ; RET
;
1358: 18 a6 f0 00 00             ; DICTP STR.EMPTY (f0a6)
135d: 0e 00                      ; CLITERAL 0
135f: 1a                         ; OVER
1360: 03                         ; STORE
1361: 0c                         ; RET
;
1362: 18 94 f0 00 00             ; DICTP STR.LEN (f094)
1367: 06                         ; DUP
1368: 0f                         ; CFETCH
1369: 0c                         ; RET
;
136a: 18 81 f0 00 00             ; DICTP STR.CATC (f081)
136f: 1a                         ; OVER
1370: 06                         ; DUP
1371: 06                         ; DUP
1372: 0f                         ; CFETCH
1373: 2c                         ; INC
1374: 04                         ; SWAP
1375: 10                         ; CSTORE
1376: 06                         ; DUP
1377: 0f                         ; CFETCH
1378: 11                         ; ADD
1379: 0e 00                      ; CLITERAL 0
137b: 1a                         ; OVER
137c: 2c                         ; INC
137d: 10                         ; CSTORE
137e: 10                         ; CSTORE
137f: 0c                         ; RET
;
1380: 18 6a f0 00 00             ; DICTP STR.NULLTERM (f06a)
1385: 06                         ; DUP
1386: 06                         ; DUP
1387: 0f                         ; CFETCH
1388: 11                         ; ADD
1389: 2c                         ; INC
138a: 0e 00                      ; CLITERAL 0
138c: 04                         ; SWAP
138d: 10                         ; CSTORE
138e: 0c                         ; RET
;
138f: 18 5d f0 00 00             ; DICTP I" (f05d)
1394: 0b fd 00 00 00             ; CALL HERE (00fd)
1399: 0e 64                      ; CLITERAL 100
139b: 11                         ; ADD
139c: 0e 00                      ; CLITERAL 0
139e: 1a                         ; OVER
139f: 03                         ; STORE
13a0: 0b 8b 00 00 00             ; CALL >IN (008b)
13a5: 02                         ; FETCH
13a6: 0f                         ; CFETCH
13a7: 06                         ; DUP
13a8: 2a                         ; NOT
13a9: 5b 1d                      ; BRANCHFZ 29 (13c7)
13ab: 07 10 6d 69 73 73 69 6e 67 20 63 6c 6f 73 69 6e 67 20 00 ; SLITERAL (13ac) [missing closing ]
13be: 0b 6f 06 00 00             ; CALL CT (066f)
13c3: 0e 22                      ; CLITERAL 34
13c5: 19                         ; EMIT
13c6: fe                         ; RESET
13c7: 0b 8b 00 00 00             ; CALL >IN (008b)
13cc: 06                         ; DUP
13cd: 02                         ; FETCH
13ce: 2c                         ; INC
13cf: 04                         ; SWAP
13d0: 03                         ; STORE
13d1: 06                         ; DUP
13d2: 0e 22                      ; CLITERAL 34
13d4: 16                         ; EQ
13d5: 5b 03                      ; BRANCHFZ 3 (13d9)
13d7: 05                         ; DROP
13d8: 0c                         ; RET
13d9: 0b 6a 13 00 00             ; CALL STR.CATC (136a)
13de: 5d 3f                      ; BRANCHB 63 (13a0)
13e0: 0c                         ; RET
;
13e1: 18 51 f0 00 00             ; DICTP " (f051)
13e6: 0b 2e 04 00 00             ; CALL ?COMPILING (042e)
13eb: 2a                         ; NOT
13ec: 5b 07                      ; BRANCHFZ 7 (13f4)
13ee: 0b 8f 13 00 00             ; CALL I" (138f)
13f3: 0c                         ; RET
13f4: 0b 93 01 00 00             ; CALL SLITERAL (0193)
13f9: 0b fd 00 00 00             ; CALL HERE (00fd)
13fe: 0e 00                      ; CLITERAL 0
1400: 0b 15 01 00 00             ; CALL C, (0115)
1405: 0b 8b 00 00 00             ; CALL >IN (008b)
140a: 02                         ; FETCH
140b: 0f                         ; CFETCH
140c: 06                         ; DUP
140d: 2a                         ; NOT
140e: 5b 29                      ; BRANCHFZ 41 (1438)
1410: 05                         ; DROP
1411: 2e                         ; DEC
1412: 0b 40 00 00 00             ; CALL (HERE) (0040)
1417: 03                         ; STORE
1418: 07 11 6d 69 73 73 69 6e 67 20 63 6c 6f 73 69 6e 67 20 27 00 ; SLITERAL (1419) [missing closing ']
142c: 0b 6f 06 00 00             ; CALL CT (066f)
1431: 0e 22                      ; CLITERAL 34
1433: 19                         ; EMIT
1434: 0e 27                      ; CLITERAL 39
1436: 19                         ; EMIT
1437: fe                         ; RESET
1438: 0b 8b 00 00 00             ; CALL >IN (008b)
143d: 06                         ; DUP
143e: 02                         ; FETCH
143f: 2c                         ; INC
1440: 04                         ; SWAP
1441: 03                         ; STORE
1442: 06                         ; DUP
1443: 0e 22                      ; CLITERAL 34
1445: 16                         ; EQ
1446: 5b 14                      ; BRANCHFZ 20 (145b)
1448: 05                         ; DROP
1449: 0b fd 00 00 00             ; CALL HERE (00fd)
144e: 0e 00                      ; CLITERAL 0
1450: 0b 15 01 00 00             ; CALL C, (0115)
1455: 1a                         ; OVER
1456: 12                         ; SUB
1457: 2e                         ; DEC
1458: 04                         ; SWAP
1459: 10                         ; CSTORE
145a: 0c                         ; RET
145b: 0b 15 01 00 00             ; CALL C, (0115)
1460: 5d 5c                      ; BRANCHB 92 (1405)
1462: 0c                         ; RET
;
1463: 18 3e f0 00 00             ; DICTP VARIABLE (f03e)
1468: 0b 89 10 00 00             ; CALL CREATE-NAME (1089)
146d: 0b fd 00 00 00             ; CALL HERE (00fd)
1472: 0e 02                      ; CLITERAL 2
1474: 11                         ; ADD
1475: 0e 04                      ; CLITERAL 4
1477: 11                         ; ADD
1478: 0b 63 01 00 00             ; CALL LITERAL (0163)
147d: 0b 2d 01 00 00             ; CALL , (012d)
1482: 0b d4 01 00 00             ; CALL RET (01d4)
1487: 0e 00                      ; CLITERAL 0
1489: 0b 2d 01 00 00             ; CALL , (012d)
148e: 0c                         ; RET
;
; End of code, Dictionary:
;
f03e: 51 f0 00 00                ; VARIABLE - (next: f051 ")
f042: 63 14 00 00 00             ; XT=1463, flags=00
f047: 08 56 41 52 49 41 42 4c 45 00 ; 8, VARIABLE
;
f051: 5d f0 00 00                ; " - (next: f05d I")
f055: e1 13 00 00 01             ; XT=13e1, flags=01
f05a: 01 22 00                   ; 1, "
;
f05d: 6a f0 00 00                ; I" - (next: f06a STR.NULLTERM)
f061: 8f 13 00 00 00             ; XT=138f, flags=00
f066: 02 49 22 00                ; 2, I"
;
f06a: 81 f0 00 00                ; STR.NULLTERM - (next: f081 STR.CATC)
f06e: 80 13 00 00 00             ; XT=1380, flags=00
f073: 0c 53 54 52 2e 4e 55 4c 4c 54 45 52 4d 00 ; 12, STR.NULLTERM
;
f081: 94 f0 00 00                ; STR.CATC - (next: f094 STR.LEN)
f085: 6a 13 00 00 00             ; XT=136a, flags=00
f08a: 08 53 54 52 2e 43 41 54 43 00 ; 8, STR.CATC
;
f094: a6 f0 00 00                ; STR.LEN - (next: f0a6 STR.EMPTY)
f098: 62 13 00 00 02             ; XT=1362, flags=02
f09d: 07 53 54 52 2e 4c 45 4e 00 ; 7, STR.LEN
;
f0a6: ba f0 00 00                ; STR.EMPTY - (next: f0ba THRU)
f0aa: 58 13 00 00 02             ; XT=1358, flags=02
f0af: 09 53 54 52 2e 45 4d 50 54 59 00 ; 9, STR.EMPTY
;
f0ba: c9 f0 00 00                ; THRU - (next: f0c9 LOAD)
f0be: 38 13 00 00 00             ; XT=1338, flags=00
f0c3: 04 54 48 52 55 00          ; 4, THRU
;
f0c9: d8 f0 00 00                ; LOAD - (next: f0d8 load-file)
f0cd: e8 12 00 00 00             ; XT=12e8, flags=00
f0d2: 04 4c 4f 41 44 00          ; 4, LOAD
;
f0d8: ec f0 00 00                ; load-file - (next: f0ec load-sub)
f0dc: af 12 00 00 00             ; XT=12af, flags=00
f0e1: 09 6c 6f 61 64 2d 66 69 6c 65 00 ; 9, load-file
;
f0ec: ff f0 00 00                ; load-sub - (next: f0ff file-getLine)
f0f0: 85 12 00 00 00             ; XT=1285, flags=00
f0f5: 08 6c 6f 61 64 2d 73 75 62 00 ; 8, load-sub
;
f0ff: 16 f1 00 00                ; file-getLine - (next: f116 main)
f103: 6f 12 00 00 00             ; XT=126f, flags=00
f108: 0c 66 69 6c 65 2d 67 65 74 4c 69 6e 65 00 ; 12, file-getLine
;
f116: 25 f1 00 00                ; main - (next: f125 mainLoop)
f11a: 3c 12 00 00 00             ; XT=123c, flags=00
f11f: 04 6d 61 69 6e 00          ; 4, main
;
f125: 38 f1 00 00                ; mainLoop - (next: f138 sys-info)
f129: fd 11 00 00 00             ; XT=11fd, flags=00
f12e: 08 6d 61 69 6e 4c 6f 6f 70 00 ; 8, mainLoop
;
f138: 4b f1 00 00                ; sys-info - (next: f14b .FREE)
f13c: cb 11 00 00 00             ; XT=11cb, flags=00
f141: 08 73 79 73 2d 69 6e 66 6f 00 ; 8, sys-info
;
f14b: 5b f1 00 00                ; .FREE - (next: f15b FREE)
f14f: a7 11 00 00 00             ; XT=11a7, flags=00
f154: 05 2e 46 52 45 45 00       ; 5, .FREE
;
f15b: 6a f1 00 00                ; FREE - (next: f16a C?)
f15f: 96 11 00 00 00             ; XT=1196, flags=00
f164: 04 46 52 45 45 00          ; 4, FREE
;
f16a: 77 f1 00 00                ; C? - (next: f177 ?)
f16e: 8a 11 00 00 00             ; XT=118a, flags=00
f173: 02 43 3f 00                ; 2, C?
;
f177: 83 f1 00 00                ; ? - (next: f183 ALLOT)
f17b: 7e 11 00 00 00             ; XT=117e, flags=00
f180: 01 3f 00                   ; 1, ?
;
f183: 93 f1 00 00                ; ALLOT - (next: f193 resetState)
f187: 6c 11 00 00 00             ; XT=116c, flags=00
f18c: 05 41 4c 4c 4f 54 00       ; 5, ALLOT
;
f193: a8 f1 00 00                ; resetState - (next: f1a8 close-input)
f197: 4d 11 00 00 00             ; XT=114d, flags=00
f19c: 0a 72 65 73 65 74 53 74 61 74 65 00 ; 10, resetState
;
f1a8: be f1 00 00                ; close-input - (next: f1be ForgetLast)
f1ac: 38 11 00 00 00             ; XT=1138, flags=00
f1b1: 0b 63 6c 6f 73 65 2d 69 6e 70 75 74 00 ; 11, close-input
;
f1be: d3 f1 00 00                ; ForgetLast - (next: f1d3 ;)
f1c2: 17 11 00 00 00             ; XT=1117, flags=00
f1c7: 0a 46 6f 72 67 65 74 4c 61 73 74 00 ; 10, ForgetLast
;
f1d3: df f1 00 00                ; ; - (next: f1df :NONAME)
f1d7: 02 11 00 00 01             ; XT=1102, flags=01
f1dc: 01 3b 00                   ; 1, ;
;
f1df: f1 f1 00 00                ; :NONAME - (next: f1f1 :)
f1e3: ed 10 00 00 00             ; XT=10ed, flags=00
f1e8: 07 3a 4e 4f 4e 41 4d 45 00 ; 7, :NONAME
;
f1f1: fd f1 00 00                ; : - (next: f1fd CREATE-NAME)
f1f5: d8 10 00 00 00             ; XT=10d8, flags=00
f1fa: 01 3a 00                   ; 1, :
;
f1fd: 13 f2 00 00                ; CREATE-NAME - (next: f213 Define-Word)
f201: 89 10 00 00 00             ; XT=1089, flags=00
f206: 0b 43 52 45 41 54 45 2d 4e 41 4d 45 00 ; 11, CREATE-NAME
;
f213: 29 f2 00 00                ; Define-Word - (next: f229 strcpy2c)
f217: 3f 10 00 00 00             ; XT=103f, flags=00
f21c: 0b 44 65 66 69 6e 65 2d 57 6f 72 64 00 ; 11, Define-Word
;
f229: 3c f2 00 00                ; strcpy2c - (next: f23c getLine)
f22d: 11 10 00 00 00             ; XT=1011, flags=00
f232: 08 73 74 72 63 70 79 32 63 00 ; 8, strcpy2c
;
f23c: 4e f2 00 00                ; getLine - (next: f24e Pad)
f240: 73 0f 00 00 00             ; XT=0f73, flags=00
f245: 07 67 65 74 4c 69 6e 65 00 ; 7, getLine
;
f24e: 5c f2 00 00                ; Pad - (next: f25c executeInput)
f252: 4a 0f 00 00 00             ; XT=0f4a, flags=00
f257: 03 50 61 64 00             ; 3, Pad
;
f25c: 73 f2 00 00                ; executeInput - (next: f273 executeWord)
f260: 0f 0f 00 00 00             ; XT=0f0f, flags=00
f265: 0c 65 78 65 63 75 74 65 49 6e 70 75 74 00 ; 12, executeInput
;
f273: 89 f2 00 00                ; executeWord - (next: f289 [COMPILE])
f277: 93 0e 00 00 00             ; XT=0e93, flags=00
f27c: 0b 65 78 65 63 75 74 65 57 6f 72 64 00 ; 11, executeWord
;
f289: 9d f2 00 00                ; [COMPILE] - (next: f29d cstr,)
f28d: 75 0e 00 00 00             ; XT=0e75, flags=00
f292: 09 5b 43 4f 4d 50 49 4c 45 5d 00 ; 9, [COMPILE]
;
f29d: ad f2 00 00                ; cstr, - (next: f2ad strlen)
f2a1: 64 0e 00 00 00             ; XT=0e64, flags=00
f2a6: 05 63 73 74 72 2c 00       ; 5, cstr,
;
f2ad: be f2 00 00                ; strlen - (next: f2be Copy.INLINE)
f2b1: 4b 0e 00 00 00             ; XT=0e4b, flags=00
f2b6: 06 73 74 72 6c 65 6e 00    ; 6, strlen
;
f2be: d4 f2 00 00                ; Copy.INLINE - (next: f2d4 DOES>)
f2c2: 2f 0e 00 00 00             ; XT=0e2f, flags=00
f2c7: 0b 43 6f 70 79 2e 49 4e 4c 49 4e 45 00 ; 11, Copy.INLINE
;
f2d4: e4 f2 00 00                ; DOES> - (next: f2e4 (inline))
f2d8: 1a 0e 00 00 00             ; XT=0e1a, flags=00
f2dd: 05 44 4f 45 53 3e 00       ; 5, DOES>
;
f2e4: f7 f2 00 00                ; (inline) - (next: f2f7 find.ret)
f2e8: ff 0d 00 00 00             ; XT=0dff, flags=00
f2ed: 08 28 69 6e 6c 69 6e 65 29 00 ; 8, (inline)
;
f2f7: 0a f3 00 00                ; find.ret - (next: f30a EXECUTE)
f2fb: ee 0d 00 00 00             ; XT=0dee, flags=00
f300: 08 66 69 6e 64 2e 72 65 74 00 ; 8, find.ret
;
f30a: 1c f3 00 00                ; EXECUTE - (next: f31c .lastx)
f30e: e5 0d 00 00 00             ; XT=0de5, flags=00
f313: 07 45 58 45 43 55 54 45 00 ; 7, EXECUTE
;
f31c: 2d f3 00 00                ; .lastx - (next: f32d NUM-WORDS)
f320: c6 0d 00 00 00             ; XT=0dc6, flags=00
f325: 06 2e 6c 61 73 74 78 00    ; 6, .lastx
;
f32d: 41 f3 00 00                ; NUM-WORDS - (next: f341 WORDSV)
f331: a4 0d 00 00 00             ; XT=0da4, flags=00
f336: 09 4e 55 4d 2d 57 4f 52 44 53 00 ; 9, NUM-WORDS
;
f341: 52 f3 00 00                ; WORDSV - (next: f352 .WORD-LONG)
f345: 7a 0d 00 00 00             ; XT=0d7a, flags=00
f34a: 06 57 4f 52 44 53 56 00    ; 6, WORDSV
;
f352: 67 f3 00 00                ; .WORD-LONG - (next: f367 WORDS)
f356: f0 0c 00 00 00             ; XT=0cf0, flags=00
f35b: 0a 2e 57 4f 52 44 2d 4c 4f 4e 47 00 ; 10, .WORD-LONG
;
f367: 77 f3 00 00                ; WORDS - (next: f377 .WORD-SHORT)
f36b: d1 0c 00 00 00             ; XT=0cd1, flags=00
f370: 05 57 4f 52 44 53 00       ; 5, WORDS
;
f377: 8d f3 00 00                ; .WORD-SHORT - (next: f38d .(LAST))
f37b: bc 0c 00 00 00             ; XT=0cbc, flags=00
f380: 0b 2e 57 4f 52 44 2d 53 48 4f 52 54 00 ; 11, .WORD-SHORT
;
f38d: 9f f3 00 00                ; .(LAST) - (next: f39f .(HERE))
f391: 85 0c 00 00 00             ; XT=0c85, flags=00
f396: 07 2e 28 4c 41 53 54 29 00 ; 7, .(LAST)
;
f39f: b1 f3 00 00                ; .(HERE) - (next: f3b1 .(MEM_SZ))
f3a3: 4e 0c 00 00 00             ; XT=0c4e, flags=00
f3a8: 07 2e 28 48 45 52 45 29 00 ; 7, .(HERE)
;
f3b1: c5 f3 00 00                ; .(MEM_SZ) - (next: f3c5 .S)
f3b5: 15 0c 00 00 00             ; XT=0c15, flags=00
f3ba: 09 2e 28 4d 45 4d 5f 53 5a 29 00 ; 9, .(MEM_SZ)
;
f3c5: d2 f3 00 00                ; .S - (next: f3d2 MAX)
f3c9: b8 0b 00 00 00             ; XT=0bb8, flags=00
f3ce: 02 2e 53 00                ; 2, .S
;
f3d2: e0 f3 00 00                ; MAX - (next: f3e0 MIN)
f3d6: ab 0b 00 00 00             ; XT=0bab, flags=00
f3db: 03 4d 41 58 00             ; 3, MAX
;
f3e0: ee f3 00 00                ; MIN - (next: f3ee BINARY.)
f3e4: 9e 0b 00 00 00             ; XT=0b9e, flags=00
f3e9: 03 4d 49 4e 00             ; 3, MIN
;
f3ee: 00 f4 00 00                ; BINARY. - (next: f400 DECIMAL.3)
f3f2: 81 0b 00 00 00             ; XT=0b81, flags=00
f3f7: 07 42 49 4e 41 52 59 2e 00 ; 7, BINARY.
;
f400: 14 f4 00 00                ; DECIMAL.3 - (next: f414 DECIMAL.)
f404: 64 0b 00 00 00             ; XT=0b64, flags=00
f409: 09 44 45 43 49 4d 41 4c 2e 33 00 ; 9, DECIMAL.3
;
f414: 27 f4 00 00                ; DECIMAL. - (next: f427 HEX.4)
f418: 47 0b 00 00 00             ; XT=0b47, flags=00
f41d: 08 44 45 43 49 4d 41 4c 2e 00 ; 8, DECIMAL.
;
f427: 37 f4 00 00                ; HEX.4 - (next: f437 HEX.2)
f42b: 2a 0b 00 00 00             ; XT=0b2a, flags=00
f430: 05 48 45 58 2e 34 00       ; 5, HEX.4
;
f437: 47 f4 00 00                ; HEX.2 - (next: f447 HEX.)
f43b: 0d 0b 00 00 00             ; XT=0b0d, flags=00
f440: 05 48 45 58 2e 32 00       ; 5, HEX.2
;
f447: 56 f4 00 00                ; HEX. - (next: f456 .4)
f44b: f0 0a 00 00 00             ; XT=0af0, flags=00
f450: 04 48 45 58 2e 00          ; 4, HEX.
;
f456: 63 f4 00 00                ; .4 - (next: f463 .3)
f45a: c7 0a 00 00 00             ; XT=0ac7, flags=00
f45f: 02 2e 34 00                ; 2, .4
;
f463: 70 f4 00 00                ; .3 - (next: f470 .2)
f467: a3 0a 00 00 00             ; XT=0aa3, flags=00
f46c: 02 2e 33 00                ; 2, .3
;
f470: 7d f4 00 00                ; .2 - (next: f47d .)
f474: 84 0a 00 00 00             ; XT=0a84, flags=00
f479: 02 2e 32 00                ; 2, .2
;
f47d: 89 f4 00 00                ; . - (next: f489 (.))
f481: 76 0a 00 00 00             ; XT=0a76, flags=00
f486: 01 2e 00                   ; 1, .
;
f489: 97 f4 00 00                ; (.) - (next: f497 #P)
f48d: 5c 0a 00 00 00             ; XT=0a5c, flags=00
f492: 03 28 2e 29 00             ; 3, (.)
;
f497: a4 f4 00 00                ; #P - (next: f4a4 #P-)
f49b: 4b 0a 00 00 00             ; XT=0a4b, flags=00
f4a0: 02 23 50 00                ; 2, #P
;
f4a4: b2 f4 00 00                ; #P- - (next: f4b2 #>)
f4a8: 39 0a 00 00 00             ; XT=0a39, flags=00
f4ad: 03 23 50 2d 00             ; 3, #P-
;
f4b2: bf f4 00 00                ; #> - (next: f4bf #S)
f4b6: 33 0a 00 00 00             ; XT=0a33, flags=00
f4bb: 02 23 3e 00                ; 2, #>
;
f4bf: cc f4 00 00                ; #S - (next: f4cc #)
f4c3: 24 0a 00 00 00             ; XT=0a24, flags=00
f4c8: 02 23 53 00                ; 2, #S
;
f4cc: d8 f4 00 00                ; # - (next: f4d8 <#)
f4d0: ff 09 00 00 00             ; XT=09ff, flags=00
f4d5: 01 23 00                   ; 1, #
;
f4d8: e5 f4 00 00                ; <# - (next: f4e5 isNumber?)
f4dc: cd 09 00 00 00             ; XT=09cd, flags=00
f4e1: 02 3c 23 00                ; 2, <#
;
f4e5: f9 f4 00 00                ; isNumber? - (next: f4f9 parse-char)
f4e9: 19 09 00 00 00             ; XT=0919, flags=00
f4ee: 09 69 73 4e 75 6d 62 65 72 3f 00 ; 9, isNumber?
;
f4f9: 0e f5 00 00                ; parse-char - (next: f50e ABS)
f4fd: f9 08 00 00 00             ; XT=08f9, flags=00
f502: 0a 70 61 72 73 65 2d 63 68 61 72 00 ; 10, parse-char
;
f50e: 1c f5 00 00                ; ABS - (next: f51c NEGATE)
f512: e8 08 00 00 00             ; XT=08e8, flags=00
f517: 03 41 42 53 00             ; 3, ABS
;
f51c: 2d f5 00 00                ; NEGATE - (next: f52d is-num-char?)
f520: de 08 00 00 00             ; XT=08de, flags=00
f525: 06 4e 45 47 41 54 45 00    ; 6, NEGATE
;
f52d: 44 f5 00 00                ; is-num-char? - (next: f544 findInDict)
f531: a2 08 00 00 00             ; XT=08a2, flags=00
f536: 0c 69 73 2d 6e 75 6d 2d 63 68 61 72 3f 00 ; 12, is-num-char?
;
f544: 59 f5 00 00                ; findInDict - (next: f559 DICT.GetINLINE)
f548: 69 08 00 00 00             ; XT=0869, flags=00
f54d: 0a 66 69 6e 64 49 6e 44 69 63 74 00 ; 10, findInDict
;
f559: 72 f5 00 00                ; DICT.GetINLINE - (next: f572 DICT.GetIMMEDIATE)
f55d: 59 08 00 00 00             ; XT=0859, flags=00
f562: 0e 44 49 43 54 2e 47 65 74 49 4e 4c 49 4e 45 00 ; 14, DICT.GetINLINE
;
f572: 8e f5 00 00                ; DICT.GetIMMEDIATE - (next: f58e FLAGS.ISINLINE?)
f576: 49 08 00 00 00             ; XT=0849, flags=00
f57b: 11 44 49 43 54 2e 47 65 74 49 4d 4d 45 44 49 41 54 45 00 ; 17, DICT.GetIMMEDIATE
;
f58e: a8 f5 00 00                ; FLAGS.ISINLINE? - (next: f5a8 FLAGS.ISIMMEDIATE?)
f592: 40 08 00 00 00             ; XT=0840, flags=00
f597: 0f 46 4c 41 47 53 2e 49 53 49 4e 4c 49 4e 45 3f 00 ; 15, FLAGS.ISINLINE?
;
f5a8: c5 f5 00 00                ; FLAGS.ISIMMEDIATE? - (next: f5c5 XT.GetDICTP)
f5ac: 37 08 00 00 00             ; XT=0837, flags=00
f5b1: 12 46 4c 41 47 53 2e 49 53 49 4d 4d 45 44 49 41 54 45 3f 00 ; 18, FLAGS.ISIMMEDIATE?
;
f5c5: db f5 00 00                ; XT.GetDICTP - (next: f5db DICTP>NAME)
f5c9: 24 08 00 00 00             ; XT=0824, flags=00
f5ce: 0b 58 54 2e 47 65 74 44 49 43 54 50 00 ; 11, XT.GetDICTP
;
f5db: f0 f5 00 00                ; DICTP>NAME - (next: f5f0 DICT.GetFLAGS)
f5df: 17 08 00 00 00             ; XT=0817, flags=00
f5e4: 0a 44 49 43 54 50 3e 4e 41 4d 45 00 ; 10, DICTP>NAME
;
f5f0: 08 f6 00 00                ; DICT.GetFLAGS - (next: f608 DICT.GetXT)
f5f4: 0b 08 00 00 00             ; XT=080b, flags=00
f5f9: 0d 44 49 43 54 2e 47 65 74 46 4c 41 47 53 00 ; 13, DICT.GetFLAGS
;
f608: 1d f6 00 00                ; DICT.GetXT - (next: f61d NAME>DICT)
f60c: ff 07 00 00 00             ; XT=07ff, flags=00
f611: 0a 44 49 43 54 2e 47 65 74 58 54 00 ; 10, DICT.GetXT
;
f61d: 31 f6 00 00                ; NAME>DICT - (next: f631 FLAGS>DICT)
f621: f2 07 00 00 00             ; XT=07f2, flags=00
f626: 09 4e 41 4d 45 3e 44 49 43 54 00 ; 9, NAME>DICT
;
f631: 46 f6 00 00                ; FLAGS>DICT - (next: f646 XT>DICT)
f635: e6 07 00 00 00             ; XT=07e6, flags=00
f63a: 0a 46 4c 41 47 53 3e 44 49 43 54 00 ; 10, FLAGS>DICT
;
f646: 58 f6 00 00                ; XT>DICT - (next: f658 NEXT>DICT)
f64a: dd 07 00 00 00             ; XT=07dd, flags=00
f64f: 07 58 54 3e 44 49 43 54 00 ; 7, XT>DICT
;
f658: 6c f6 00 00                ; NEXT>DICT - (next: f66c DICT>NAME)
f65c: d7 07 00 00 00             ; XT=07d7, flags=00
f661: 09 4e 45 58 54 3e 44 49 43 54 00 ; 9, NEXT>DICT
;
f66c: 80 f6 00 00                ; DICT>NAME - (next: f680 DICT>FLAGS)
f670: cb 07 00 00 00             ; XT=07cb, flags=00
f675: 09 44 49 43 54 3e 4e 41 4d 45 00 ; 9, DICT>NAME
;
f680: 95 f6 00 00                ; DICT>FLAGS - (next: f695 DICT>XT)
f684: bf 07 00 00 00             ; XT=07bf, flags=00
f689: 0a 44 49 43 54 3e 46 4c 41 47 53 00 ; 10, DICT>FLAGS
;
f695: a7 f6 00 00                ; DICT>XT - (next: f6a7 DICT>NEXT)
f699: b6 07 00 00 00             ; XT=07b6, flags=00
f69e: 07 44 49 43 54 3e 58 54 00 ; 7, DICT>XT
;
f6a7: bb f6 00 00                ; DICT>NEXT - (next: f6bb getOneWord)
f6ab: b0 07 00 00 00             ; XT=07b0, flags=00
f6b0: 09 44 49 43 54 3e 4e 45 58 54 00 ; 9, DICT>NEXT
;
f6bb: d0 f6 00 00                ; getOneWord - (next: f6d0 char-find)
f6bf: 8a 07 00 00 00             ; XT=078a, flags=00
f6c4: 0a 67 65 74 4f 6e 65 57 6f 72 64 00 ; 10, getOneWord
;
f6d0: e4 f6 00 00                ; char-find - (next: f6e4 to-lower)
f6d4: 4f 07 00 00 00             ; XT=074f, flags=00
f6d9: 09 63 68 61 72 2d 66 69 6e 64 00 ; 9, char-find
;
f6e4: f7 f6 00 00                ; to-lower - (next: f6f7 to-upper)
f6e8: 38 07 00 00 00             ; XT=0738, flags=00
f6ed: 08 74 6f 2d 6c 6f 77 65 72 00 ; 8, to-lower
;
f6f7: 0a f7 00 00                ; to-upper - (next: f70a skipWS)
f6fb: 21 07 00 00 00             ; XT=0721, flags=00
f700: 08 74 6f 2d 75 70 70 65 72 00 ; 8, to-upper
;
f70a: 1b f7 00 00                ; skipWS - (next: f71b BETWEEN)
f70e: 07 07 00 00 00             ; XT=0707, flags=00
f713: 06 73 6b 69 70 57 53 00    ; 6, skipWS
;
f71b: 2d f7 00 00                ; BETWEEN - (next: f72d CR)
f71f: f4 06 00 00 00             ; XT=06f4, flags=00
f724: 07 42 45 54 57 45 45 4e 00 ; 7, BETWEEN
;
f72d: 3a f7 00 00                ; CR - (next: f73a CRLF)
f731: e8 06 00 00 02             ; XT=06e8, flags=02
f736: 02 43 52 00                ; 2, CR
;
f73a: 49 f7 00 00                ; CRLF - (next: f749 BL)
f73e: dc 06 00 00 02             ; XT=06dc, flags=02
f743: 04 43 52 4c 46 00          ; 4, CRLF
;
f749: 56 f7 00 00                ; BL - (next: f756 SPACE)
f74d: d3 06 00 00 02             ; XT=06d3, flags=02
f752: 02 42 4c 00                ; 2, BL
;
f756: 66 f7 00 00                ; SPACE - (next: f766 ()
f75a: ca 06 00 00 02             ; XT=06ca, flags=02
f75f: 05 53 50 41 43 45 00       ; 5, SPACE
;
f766: 72 f7 00 00                ; ( - (next: f772 \)
f76a: 8e 06 00 00 01             ; XT=068e, flags=01
f76f: 01 28 00                   ; 1, (
;
f772: 7e f7 00 00                ; \ - (next: f77e CT)
f776: 7f 06 00 00 01             ; XT=067f, flags=01
f77b: 01 5c 00                   ; 1, \
;
f77e: 8b f7 00 00                ; CT - (next: f78b TYPE)
f782: 6f 06 00 00 00             ; XT=066f, flags=00
f787: 02 43 54 00                ; 2, CT
;
f78b: 9a f7 00 00                ; TYPE - (next: f79a COUNT)
f78f: 59 06 00 00 00             ; XT=0659, flags=00
f794: 04 54 59 50 45 00          ; 4, TYPE
;
f79a: aa f7 00 00                ; COUNT - (next: f7aa FALSE)
f79e: 4f 06 00 00 00             ; XT=064f, flags=00
f7a3: 05 43 4f 55 4e 54 00       ; 5, COUNT
;
f7aa: ba f7 00 00                ; FALSE - (next: f7ba TRUE)
f7ae: 47 06 00 00 02             ; XT=0647, flags=02
f7b3: 05 46 41 4c 53 45 00       ; 5, FALSE
;
f7ba: c9 f7 00 00                ; TRUE - (next: f7c9 >=)
f7be: 3c 06 00 00 02             ; XT=063c, flags=02
f7c3: 04 54 52 55 45 00          ; 4, TRUE
;
f7c9: d6 f7 00 00                ; >= - (next: f7d6 <=)
f7cd: 34 06 00 00 02             ; XT=0634, flags=02
f7d2: 02 3e 3d 00                ; 2, >=
;
f7d6: e3 f7 00 00                ; <= - (next: f7e3 <>)
f7da: 2c 06 00 00 02             ; XT=062c, flags=02
f7df: 02 3c 3d 00                ; 2, <=
;
f7e3: f0 f7 00 00                ; <> - (next: f7f0 0=)
f7e7: 24 06 00 00 02             ; XT=0624, flags=02
f7ec: 02 3c 3e 00                ; 2, <>
;
f7f0: fd f7 00 00                ; 0= - (next: f7fd C--)
f7f4: 1d 06 00 00 02             ; XT=061d, flags=02
f7f9: 02 30 3d 00                ; 2, 0=
;
f7fd: 0b f8 00 00                ; C-- - (next: f80b C++)
f801: 12 06 00 00 02             ; XT=0612, flags=02
f806: 03 43 2d 2d 00             ; 3, C--
;
f80b: 19 f8 00 00                ; C++ - (next: f819 --)
f80f: 07 06 00 00 02             ; XT=0607, flags=02
f814: 03 43 2b 2b 00             ; 3, C++
;
f819: 26 f8 00 00                ; -- - (next: f826 ++)
f81d: fc 05 00 00 02             ; XT=05fc, flags=02
f822: 02 2d 2d 00                ; 2, --
;
f826: 33 f8 00 00                ; ++ - (next: f833 -!)
f82a: f1 05 00 00 02             ; XT=05f1, flags=02
f82f: 02 2b 2b 00                ; 2, ++
;
f833: 40 f8 00 00                ; -! - (next: f840 -=)
f837: e4 05 00 00 00             ; XT=05e4, flags=00
f83c: 02 2d 21 00                ; 2, -!
;
f840: 4d f8 00 00                ; -= - (next: f84d +=)
f844: d8 05 00 00 02             ; XT=05d8, flags=02
f849: 02 2d 3d 00                ; 2, -=
;
f84d: 5a f8 00 00                ; += - (next: f85a 2/)
f851: cd 05 00 00 02             ; XT=05cd, flags=02
f856: 02 2b 3d 00                ; 2, +=
;
f85a: 67 f8 00 00                ; 2/ - (next: f867 2*)
f85e: c2 05 00 00 02             ; XT=05c2, flags=02
f863: 02 32 2f 00                ; 2, 2/
;
f867: 74 f8 00 00                ; 2* - (next: f874 1-)
f86b: b9 05 00 00 02             ; XT=05b9, flags=02
f870: 02 32 2a 00                ; 2, 2*
;
f874: 81 f8 00 00                ; 1- - (next: f881 1+)
f878: b2 05 00 00 02             ; XT=05b2, flags=02
f87d: 02 31 2d 00                ; 2, 1-
;
f881: 8e f8 00 00                ; 1+ - (next: f88e MOD)
f885: ab 05 00 00 02             ; XT=05ab, flags=02
f88a: 02 31 2b 00                ; 2, 1+
;
f88e: 9c f8 00 00                ; MOD - (next: f89c /)
f892: a3 05 00 00 02             ; XT=05a3, flags=02
f897: 03 4d 4f 44 00             ; 3, MOD
;
f89c: a8 f8 00 00                ; / - (next: f8a8 -ROT)
f8a0: 9a 05 00 00 02             ; XT=059a, flags=02
f8a5: 01 2f 00                   ; 1, /
;
f8a8: b7 f8 00 00                ; -ROT - (next: f8b7 ROT)
f8ac: 90 05 00 00 02             ; XT=0590, flags=02
f8b1: 04 2d 52 4f 54 00          ; 4, -ROT
;
f8b7: c5 f8 00 00                ; ROT - (next: f8c5 NIP)
f8bb: 86 05 00 00 02             ; XT=0586, flags=02
f8c0: 03 52 4f 54 00             ; 3, ROT
;
f8c5: d3 f8 00 00                ; NIP - (next: f8d3 TUCK)
f8c9: 7e 05 00 00 02             ; XT=057e, flags=02
f8ce: 03 4e 49 50 00             ; 3, NIP
;
f8d3: e2 f8 00 00                ; TUCK - (next: f8e2 2DROP)
f8d7: 76 05 00 00 02             ; XT=0576, flags=02
f8dc: 04 54 55 43 4b 00          ; 4, TUCK
;
f8e2: f2 f8 00 00                ; 2DROP - (next: f8f2 2DUP)
f8e6: 6e 05 00 00 02             ; XT=056e, flags=02
f8eb: 05 32 44 52 4f 50 00       ; 5, 2DROP
;
f8f2: 01 f9 00 00                ; 2DUP - (next: f901 ?DUP)
f8f6: 66 05 00 00 02             ; XT=0566, flags=02
f8fb: 04 32 44 55 50 00          ; 4, 2DUP
;
f901: 10 f9 00 00                ; ?DUP - (next: f910 RDROP)
f905: 5c 05 00 00 00             ; XT=055c, flags=00
f90a: 04 3f 44 55 50 00          ; 4, ?DUP
;
f910: 20 f9 00 00                ; RDROP - (next: f920 R@)
f914: 54 05 00 00 02             ; XT=0554, flags=02
f919: 05 52 44 52 4f 50 00       ; 5, RDROP
;
f920: 2d f9 00 00                ; R@ - (next: f92d DEBUG-OFF)
f924: 4d 05 00 00 02             ; XT=054d, flags=02
f929: 02 52 40 00                ; 2, R@
;
f92d: 41 f9 00 00                ; DEBUG-OFF - (next: f941 DEBUG-ON)
f931: 44 05 00 00 02             ; XT=0544, flags=02
f936: 09 44 45 42 55 47 2d 4f 46 46 00 ; 9, DEBUG-OFF
;
f941: 54 f9 00 00                ; DEBUG-ON - (next: f954 TRACE-OFF)
f945: 3b 05 00 00 02             ; XT=053b, flags=02
f94a: 08 44 45 42 55 47 2d 4f 4e 00 ; 8, DEBUG-ON
;
f954: 68 f9 00 00                ; TRACE-OFF - (next: f968 TRACE-ON)
f958: 32 05 00 00 02             ; XT=0532, flags=02
f95d: 09 54 52 41 43 45 2d 4f 46 46 00 ; 9, TRACE-OFF
;
f968: 7b f9 00 00                ; TRACE-ON - (next: f97b MEM_SZ)
f96c: 29 05 00 00 02             ; XT=0529, flags=02
f971: 08 54 52 41 43 45 2d 4f 4e 00 ; 8, TRACE-ON
;
f97b: 8c f9 00 00                ; MEM_SZ - (next: f98c LEAVE)
f97f: 1d 05 00 00 00             ; XT=051d, flags=00
f984: 06 4d 45 4d 5f 53 5a 00    ; 6, MEM_SZ
;
f98c: 9c f9 00 00                ; LEAVE - (next: f99c UNTIL)
f990: 0b 05 00 00 01             ; XT=050b, flags=01
f995: 05 4c 45 41 56 45 00       ; 5, LEAVE
;
f99c: ac f9 00 00                ; UNTIL - (next: f9ac WHILE)
f9a0: ed 04 00 00 01             ; XT=04ed, flags=01
f9a5: 05 55 4e 54 49 4c 00       ; 5, UNTIL
;
f9ac: bc f9 00 00                ; WHILE - (next: f9bc AGAIN)
f9b0: cf 04 00 00 01             ; XT=04cf, flags=01
f9b5: 05 57 48 49 4c 45 00       ; 5, WHILE
;
f9bc: cc f9 00 00                ; AGAIN - (next: f9cc BEGIN)
f9c0: b1 04 00 00 01             ; XT=04b1, flags=01
f9c5: 05 41 47 41 49 4e 00       ; 5, AGAIN
;
f9cc: dc f9 00 00                ; BEGIN - (next: f9dc THEN)
f9d0: 9f 04 00 00 01             ; XT=049f, flags=01
f9d5: 05 42 45 47 49 4e 00       ; 5, BEGIN
;
f9dc: eb f9 00 00                ; THEN - (next: f9eb ELSE)
f9e0: 86 04 00 00 01             ; XT=0486, flags=01
f9e5: 04 54 48 45 4e 00          ; 4, THEN
;
f9eb: fa f9 00 00                ; ELSE - (next: f9fa IF)
f9ef: 5b 04 00 00 01             ; XT=045b, flags=01
f9f4: 04 45 4c 53 45 00          ; 4, ELSE
;
f9fa: 07 fa 00 00                ; IF - (next: fa07 ?COMPILING)
f9fe: 3a 04 00 00 01             ; XT=043a, flags=01
fa03: 02 49 46 00                ; 2, IF
;
fa07: 1c fa 00 00                ; ?COMPILING - (next: fa1c OFF)
fa0b: 2e 04 00 00 00             ; XT=042e, flags=00
fa10: 0a 3f 43 4f 4d 50 49 4c 49 4e 47 00 ; 10, ?COMPILING
;
fa1c: 2a fa 00 00                ; OFF - (next: fa2a ON)
fa20: 24 04 00 00 00             ; XT=0424, flags=00
fa25: 03 4f 46 46 00             ; 3, OFF
;
fa2a: 37 fa 00 00                ; ON - (next: fa37 BINARY)
fa2e: 1a 04 00 00 00             ; XT=041a, flags=00
fa33: 02 4f 4e 00                ; 2, ON
;
fa37: 48 fa 00 00                ; BINARY - (next: fa48 OCTAL)
fa3b: 0c 04 00 00 00             ; XT=040c, flags=00
fa40: 06 42 49 4e 41 52 59 00    ; 6, BINARY
;
fa48: 58 fa 00 00                ; OCTAL - (next: fa58 DECIMAL)
fa4c: fe 03 00 00 00             ; XT=03fe, flags=00
fa51: 05 4f 43 54 41 4c 00       ; 5, OCTAL
;
fa58: 6a fa 00 00                ; DECIMAL - (next: fa6a HEX)
fa5c: f0 03 00 00 00             ; XT=03f0, flags=00
fa61: 07 44 45 43 49 4d 41 4c 00 ; 7, DECIMAL
;
fa6a: 78 fa 00 00                ; HEX - (next: fa78 FLAG_INLINE)
fa6e: e2 03 00 00 00             ; XT=03e2, flags=00
fa73: 03 48 45 58 00             ; 3, HEX
;
fa78: 8e fa 00 00                ; FLAG_INLINE - (next: fa8e FLAG_IMMEDIATE)
fa7c: da 03 00 00 02             ; XT=03da, flags=02
fa81: 0b 46 4c 41 47 5f 49 4e 4c 49 4e 45 00 ; 11, FLAG_INLINE
;
fa8e: a7 fa 00 00                ; FLAG_IMMEDIATE - (next: faa7 CELLS)
fa92: d2 03 00 00 02             ; XT=03d2, flags=02
fa97: 0e 46 4c 41 47 5f 49 4d 4d 45 44 49 41 54 45 00 ; 14, FLAG_IMMEDIATE
;
faa7: b7 fa 00 00                ; CELLS - (next: fab7 IMMEDIATE)
faab: c9 03 00 00 02             ; XT=03c9, flags=02
fab0: 05 43 45 4c 4c 53 00       ; 5, CELLS
;
fab7: cb fa 00 00                ; IMMEDIATE - (next: facb INLINE)
fabb: b1 03 00 00 00             ; XT=03b1, flags=00
fac0: 09 49 4d 4d 45 44 49 41 54 45 00 ; 9, IMMEDIATE
;
facb: dc fa 00 00                ; INLINE - (next: fadc BYE)
facf: 99 03 00 00 00             ; XT=0399, flags=00
fad4: 06 49 4e 4c 49 4e 45 00    ; 6, INLINE
;
fadc: ea fa 00 00                ; BYE - (next: faea RESET)
fae0: 92 03 00 00 02             ; XT=0392, flags=02
fae5: 03 42 59 45 00             ; 3, BYE
;
faea: fa fa 00 00                ; RESET - (next: fafa BREAK)
faee: 8b 03 00 00 02             ; XT=038b, flags=02
faf3: 05 52 45 53 45 54 00       ; 5, RESET
;
fafa: 0a fb 00 00                ; BREAK - (next: fb0a NOP)
fafe: 84 03 00 00 02             ; XT=0384, flags=02
fb03: 05 42 52 45 41 4b 00       ; 5, BREAK
;
fb0a: 18 fb 00 00                ; NOP - (next: fb18 BRANCHBNZ)
fb0e: 7d 03 00 00 02             ; XT=037d, flags=02
fb13: 03 4e 4f 50 00             ; 3, NOP
;
fb18: 2c fb 00 00                ; BRANCHBNZ - (next: fb2c BRANCHBZ)
fb1c: 70 03 00 00 00             ; XT=0370, flags=00
fb21: 09 42 52 41 4e 43 48 42 4e 5a 00 ; 9, BRANCHBNZ
;
fb2c: 3f fb 00 00                ; BRANCHBZ - (next: fb3f BRANCHB)
fb30: 63 03 00 00 00             ; XT=0363, flags=00
fb35: 08 42 52 41 4e 43 48 42 5a 00 ; 8, BRANCHBZ
;
fb3f: 51 fb 00 00                ; BRANCHB - (next: fb51 BRANCHFNZ)
fb43: 56 03 00 00 00             ; XT=0356, flags=00
fb48: 07 42 52 41 4e 43 48 42 00 ; 7, BRANCHB
;
fb51: 65 fb 00 00                ; BRANCHFNZ - (next: fb65 BRANCHFZ)
fb55: 49 03 00 00 00             ; XT=0349, flags=00
fb5a: 09 42 52 41 4e 43 48 46 4e 5a 00 ; 9, BRANCHFNZ
;
fb65: 78 fb 00 00                ; BRANCHFZ - (next: fb78 BRANCHF)
fb69: 3c 03 00 00 00             ; XT=033c, flags=00
fb6e: 08 42 52 41 4e 43 48 46 5a 00 ; 8, BRANCHFZ
;
fb78: 8a fb 00 00                ; BRANCHF - (next: fb8a c!+)
fb7c: 2f 03 00 00 00             ; XT=032f, flags=00
fb81: 07 42 52 41 4e 43 48 46 00 ; 7, BRANCHF
;
fb8a: 98 fb 00 00                ; c!+ - (next: fb98 !+)
fb8e: 28 03 00 00 02             ; XT=0328, flags=02
fb93: 03 63 21 2b 00             ; 3, c!+
;
fb98: a5 fb 00 00                ; !+ - (next: fba5 c@+)
fb9c: 21 03 00 00 02             ; XT=0321, flags=02
fba1: 02 21 2b 00                ; 2, !+
;
fba5: b3 fb 00 00                ; c@+ - (next: fbb3 @+)
fba9: 1a 03 00 00 02             ; XT=031a, flags=02
fbae: 03 63 40 2b 00             ; 3, c@+
;
fbb3: c0 fb 00 00                ; @+ - (next: fbc0 a)
fbb7: 13 03 00 00 02             ; XT=0313, flags=02
fbbc: 02 40 2b 00                ; 2, @+
;
fbc0: cc fb 00 00                ; a - (next: fbcc a!)
fbc4: 0c 03 00 00 02             ; XT=030c, flags=02
fbc9: 01 61 00                   ; 1, a
;
fbcc: d9 fb 00 00                ; a! - (next: fbd9 XOR)
fbd0: 05 03 00 00 02             ; XT=0305, flags=02
fbd5: 02 61 21 00                ; 2, a!
;
fbd9: e7 fb 00 00                ; XOR - (next: fbe7 OPEN-BLOCK)
fbdd: fe 02 00 00 02             ; XT=02fe, flags=02
fbe2: 03 58 4f 52 00             ; 3, XOR
;
fbe7: fc fb 00 00                ; OPEN-BLOCK - (next: fbfc +!)
fbeb: f7 02 00 00 02             ; XT=02f7, flags=02
fbf0: 0a 4f 50 45 4e 2d 42 4c 4f 43 4b 00 ; 10, OPEN-BLOCK
;
fbfc: 09 fc 00 00                ; +! - (next: fc09 >>)
fc00: f0 02 00 00 02             ; XT=02f0, flags=02
fc05: 02 2b 21 00                ; 2, +!
;
fc09: 16 fc 00 00                ; >> - (next: fc16 <<)
fc0d: e9 02 00 00 02             ; XT=02e9, flags=02
fc12: 02 3e 3e 00                ; 2, >>
;
fc16: 23 fc 00 00                ; << - (next: fc23 GETTICK)
fc1a: e2 02 00 00 02             ; XT=02e2, flags=02
fc1f: 02 3c 3c 00                ; 2, <<
;
fc23: 35 fc 00 00                ; GETTICK - (next: fc35 DEC)
fc27: db 02 00 00 02             ; XT=02db, flags=02
fc2c: 07 47 45 54 54 49 43 4b 00 ; 7, GETTICK
;
fc35: 43 fc 00 00                ; DEC - (next: fc43 RDEPTH)
fc39: d4 02 00 00 02             ; XT=02d4, flags=02
fc3e: 03 44 45 43 00             ; 3, DEC
;
fc43: 54 fc 00 00                ; RDEPTH - (next: fc54 INC)
fc47: cd 02 00 00 02             ; XT=02cd, flags=02
fc4c: 06 52 44 45 50 54 48 00    ; 6, RDEPTH
;
fc54: 62 fc 00 00                ; INC - (next: fc62 RFETCH)
fc58: c6 02 00 00 02             ; XT=02c6, flags=02
fc5d: 03 49 4e 43 00             ; 3, INC
;
fc62: 73 fc 00 00                ; RFETCH - (next: fc73 NOT)
fc66: bf 02 00 00 02             ; XT=02bf, flags=02
fc6b: 06 52 46 45 54 43 48 00    ; 6, RFETCH
;
fc73: 81 fc 00 00                ; NOT - (next: fc81 /MOD)
fc77: b8 02 00 00 02             ; XT=02b8, flags=02
fc7c: 03 4e 4f 54 00             ; 3, NOT
;
fc81: 90 fc 00 00                ; /MOD - (next: fc90 COMPAREI)
fc85: b1 02 00 00 02             ; XT=02b1, flags=02
fc8a: 04 2f 4d 4f 44 00          ; 4, /MOD
;
fc90: a3 fc 00 00                ; COMPAREI - (next: fca3 GETCH)
fc94: aa 02 00 00 02             ; XT=02aa, flags=02
fc99: 08 43 4f 4d 50 41 52 45 49 00 ; 8, COMPAREI
;
fca3: b3 fc 00 00                ; GETCH - (next: fcb3 DEPTH)
fca7: a3 02 00 00 02             ; XT=02a3, flags=02
fcac: 05 47 45 54 43 48 00       ; 5, GETCH
;
fcb3: c3 fc 00 00                ; DEPTH - (next: fcc3 PICK)
fcb7: 9c 02 00 00 02             ; XT=029c, flags=02
fcbc: 05 44 45 50 54 48 00       ; 5, DEPTH
;
fcc3: d2 fc 00 00                ; PICK - (next: fcd2 AND)
fcc7: 95 02 00 00 02             ; XT=0295, flags=02
fccc: 04 50 49 43 4b 00          ; 4, PICK
;
fcd2: e0 fc 00 00                ; AND - (next: fce0 LOGLEVEL)
fcd6: 8e 02 00 00 02             ; XT=028e, flags=02
fcdb: 03 41 4e 44 00             ; 3, AND
;
fce0: f3 fc 00 00                ; LOGLEVEL - (next: fcf3 R>)
fce4: 87 02 00 00 02             ; XT=0287, flags=02
fce9: 08 4c 4f 47 4c 45 56 45 4c 00 ; 8, LOGLEVEL
;
fcf3: 00 fd 00 00                ; R> - (next: fd00 >R)
fcf7: 80 02 00 00 02             ; XT=0280, flags=02
fcfc: 02 52 3e 00                ; 2, R>
;
fd00: 0d fd 00 00                ; >R - (next: fd0d FCLOSE)
fd04: 79 02 00 00 02             ; XT=0279, flags=02
fd09: 02 3e 52 00                ; 2, >R
;
fd0d: 1e fd 00 00                ; FCLOSE - (next: fd1e FWRITE)
fd11: 72 02 00 00 02             ; XT=0272, flags=02
fd16: 06 46 43 4c 4f 53 45 00    ; 6, FCLOSE
;
fd1e: 2f fd 00 00                ; FWRITE - (next: fd2f FREADLINE)
fd22: 6b 02 00 00 02             ; XT=026b, flags=02
fd27: 06 46 57 52 49 54 45 00    ; 6, FWRITE
;
fd2f: 43 fd 00 00                ; FREADLINE - (next: fd43 FREAD)
fd33: 64 02 00 00 02             ; XT=0264, flags=02
fd38: 09 46 52 45 41 44 4c 49 4e 45 00 ; 9, FREADLINE
;
fd43: 53 fd 00 00                ; FREAD - (next: fd53 FOPEN)
fd47: 5d 02 00 00 02             ; XT=025d, flags=02
fd4c: 05 46 52 45 41 44 00       ; 5, FREAD
;
fd53: 63 fd 00 00                ; FOPEN - (next: fd63 COMPARE)
fd57: 56 02 00 00 02             ; XT=0256, flags=02
fd5c: 05 46 4f 50 45 4e 00       ; 5, FOPEN
;
fd63: 75 fd 00 00                ; COMPARE - (next: fd75 OVER)
fd67: 4f 02 00 00 02             ; XT=024f, flags=02
fd6c: 07 43 4f 4d 50 41 52 45 00 ; 7, COMPARE
;
fd75: 84 fd 00 00                ; OVER - (next: fd84 EMIT)
fd79: 48 02 00 00 02             ; XT=0248, flags=02
fd7e: 04 4f 56 45 52 00          ; 4, OVER
;
fd84: 93 fd 00 00                ; EMIT - (next: fd93 DICTP)
fd88: 41 02 00 00 02             ; XT=0241, flags=02
fd8d: 04 45 4d 49 54 00          ; 4, EMIT
;
fd93: a3 fd 00 00                ; DICTP - (next: fda3 >)
fd97: 34 02 00 00 02             ; XT=0234, flags=02
fd9c: 05 44 49 43 54 50 00       ; 5, DICTP
;
fda3: af fd 00 00                ; > - (next: fdaf =)
fda7: 2d 02 00 00 02             ; XT=022d, flags=02
fdac: 01 3e 00                   ; 1, >
;
fdaf: bb fd 00 00                ; = - (next: fdbb <)
fdb3: 26 02 00 00 02             ; XT=0226, flags=02
fdb8: 01 3d 00                   ; 1, =
;
fdbb: c7 fd 00 00                ; < - (next: fdc7 /)
fdbf: 1f 02 00 00 02             ; XT=021f, flags=02
fdc4: 01 3c 00                   ; 1, <
;
fdc7: d3 fd 00 00                ; / - (next: fdd3 *)
fdcb: 18 02 00 00 02             ; XT=0218, flags=02
fdd0: 01 2f 00                   ; 1, /
;
fdd3: df fd 00 00                ; * - (next: fddf -)
fdd7: 11 02 00 00 02             ; XT=0211, flags=02
fddc: 01 2a 00                   ; 1, *
;
fddf: eb fd 00 00                ; - - (next: fdeb +)
fde3: 0a 02 00 00 02             ; XT=020a, flags=02
fde8: 01 2d 00                   ; 1, -
;
fdeb: f7 fd 00 00                ; + - (next: fdf7 C!)
fdef: 03 02 00 00 02             ; XT=0203, flags=02
fdf4: 01 2b 00                   ; 1, +
;
fdf7: 04 fe 00 00                ; C! - (next: fe04 C@)
fdfb: fc 01 00 00 02             ; XT=01fc, flags=02
fe00: 02 43 21 00                ; 2, C!
;
fe04: 11 fe 00 00                ; C@ - (next: fe11 CLITERAL)
fe08: f5 01 00 00 02             ; XT=01f5, flags=02
fe0d: 02 43 40 00                ; 2, C@
;
fe11: 24 fe 00 00                ; CLITERAL - (next: fe24 OR)
fe15: e8 01 00 00 02             ; XT=01e8, flags=02
fe1a: 08 43 4c 49 54 45 52 41 4c 00 ; 8, CLITERAL
;
fe24: 31 fe 00 00                ; OR - (next: fe31 RET)
fe28: e1 01 00 00 02             ; XT=01e1, flags=02
fe2d: 02 4f 52 00                ; 2, OR
;
fe31: 3f fe 00 00                ; RET - (next: fe3f CALL)
fe35: d4 01 00 00 00             ; XT=01d4, flags=00
fe3a: 03 52 45 54 00             ; 3, RET
;
fe3f: 4e fe 00 00                ; CALL - (next: fe4e JMPNZ)
fe43: c7 01 00 00 00             ; XT=01c7, flags=00
fe48: 04 43 41 4c 4c 00          ; 4, CALL
;
fe4e: 5e fe 00 00                ; JMPNZ - (next: fe5e JMPZ)
fe52: ba 01 00 00 00             ; XT=01ba, flags=00
fe57: 05 4a 4d 50 4e 5a 00       ; 5, JMPNZ
;
fe5e: 6d fe 00 00                ; JMPZ - (next: fe6d JMP)
fe62: ad 01 00 00 00             ; XT=01ad, flags=00
fe67: 04 4a 4d 50 5a 00          ; 4, JMPZ
;
fe6d: 7b fe 00 00                ; JMP - (next: fe7b SLITERAL)
fe71: a0 01 00 00 00             ; XT=01a0, flags=00
fe76: 03 4a 4d 50 00             ; 3, JMP
;
fe7b: 8e fe 00 00                ; SLITERAL - (next: fe8e DUP)
fe7f: 93 01 00 00 00             ; XT=0193, flags=00
fe84: 08 53 4c 49 54 45 52 41 4c 00 ; 8, SLITERAL
;
fe8e: 9c fe 00 00                ; DUP - (next: fe9c DROP)
fe92: 8c 01 00 00 02             ; XT=018c, flags=02
fe97: 03 44 55 50 00             ; 3, DUP
;
fe9c: ab fe 00 00                ; DROP - (next: feab SWAP)
fea0: 85 01 00 00 02             ; XT=0185, flags=02
fea5: 04 44 52 4f 50 00          ; 4, DROP
;
feab: ba fe 00 00                ; SWAP - (next: feba !)
feaf: 7e 01 00 00 02             ; XT=017e, flags=02
feb4: 04 53 57 41 50 00          ; 4, SWAP
;
feba: c6 fe 00 00                ; ! - (next: fec6 @)
febe: 77 01 00 00 02             ; XT=0177, flags=02
fec3: 01 21 00                   ; 1, !
;
fec6: d2 fe 00 00                ; @ - (next: fed2 LITERAL)
feca: 70 01 00 00 02             ; XT=0170, flags=02
fecf: 01 40 00                   ; 1, @
;
fed2: e4 fe 00 00                ; LITERAL - (next: fee4 ])
fed6: 63 01 00 00 00             ; XT=0163, flags=00
fedb: 07 4c 49 54 45 52 41 4c 00 ; 7, LITERAL
;
fee4: f0 fe 00 00                ; ] - (next: fef0 [)
fee8: 55 01 00 00 01             ; XT=0155, flags=01
feed: 01 5d 00                   ; 1, ]
;
fef0: fc fe 00 00                ; [ - (next: fefc ,)
fef4: 47 01 00 00 01             ; XT=0147, flags=01
fef9: 01 5b 00                   ; 1, [
;
fefc: 08 ff 00 00                ; , - (next: ff08 C,)
ff00: 2d 01 00 00 00             ; XT=012d, flags=00
ff05: 01 2c 00                   ; 1, ,
;
ff08: 15 ff 00 00                ; C, - (next: ff15 LAST)
ff0c: 15 01 00 00 00             ; XT=0115, flags=00
ff11: 02 43 2c 00                ; 2, C,
;
ff15: 24 ff 00 00                ; LAST - (next: ff24 HERE)
ff19: 09 01 00 00 00             ; XT=0109, flags=00
ff1e: 04 4c 41 53 54 00          ; 4, LAST
;
ff24: 33 ff 00 00                ; HERE - (next: ff33 CELL)
ff28: fd 00 00 00 00             ; XT=00fd, flags=00
ff2d: 04 48 45 52 45 00          ; 4, HERE
;
ff33: 42 ff 00 00                ; CELL - (next: ff42 T3)
ff37: f5 00 00 00 02             ; XT=00f5, flags=02
ff3c: 04 43 45 4c 4c 00          ; 4, CELL
;
ff42: 4f ff 00 00                ; T3 - (next: ff4f T2)
ff46: e5 00 00 00 00             ; XT=00e5, flags=00
ff4b: 02 54 33 00                ; 2, T3
;
ff4f: 5c ff 00 00                ; T2 - (next: ff5c T1)
ff53: d6 00 00 00 00             ; XT=00d6, flags=00
ff58: 02 54 32 00                ; 2, T2
;
ff5c: 69 ff 00 00                ; T1 - (next: ff69 INPUT-FP)
ff60: c7 00 00 00 00             ; XT=00c7, flags=00
ff65: 02 54 31 00                ; 2, T1
;
ff69: 7c ff 00 00                ; INPUT-FP - (next: ff7c #LEN)
ff6d: b8 00 00 00 00             ; XT=00b8, flags=00
ff72: 08 49 4e 50 55 54 2d 46 50 00 ; 8, INPUT-FP
;
ff7c: 8b ff 00 00                ; #LEN - (next: ff8b #NEG)
ff80: a9 00 00 00 00             ; XT=00a9, flags=00
ff85: 04 23 4c 45 4e 00          ; 4, #LEN
;
ff8b: 9a ff 00 00                ; #NEG - (next: ff9a >IN)
ff8f: 9a 00 00 00 00             ; XT=009a, flags=00
ff94: 04 23 4e 45 47 00          ; 4, #NEG
;
ff9a: a8 ff 00 00                ; >IN - (next: ffa8 (MEM_SZ))
ff9e: 8b 00 00 00 00             ; XT=008b, flags=00
ffa3: 03 3e 49 4e 00             ; 3, >IN
;
ffa8: bb ff 00 00                ; (MEM_SZ) - (next: ffbb STATE)
ffac: 7c 00 00 00 00             ; XT=007c, flags=00
ffb1: 08 28 4d 45 4d 5f 53 5a 29 00 ; 8, (MEM_SZ)
;
ffbb: cb ff 00 00                ; STATE - (next: ffcb BASE)
ffbf: 6d 00 00 00 00             ; XT=006d, flags=00
ffc4: 05 53 54 41 54 45 00       ; 5, STATE
;
ffcb: da ff 00 00                ; BASE - (next: ffda (LAST))
ffcf: 5e 00 00 00 00             ; XT=005e, flags=00
ffd4: 04 42 41 53 45 00          ; 4, BASE
;
ffda: eb ff 00 00                ; (LAST) - (next: ffeb (HERE))
ffde: 4f 00 00 00 00             ; XT=004f, flags=00
ffe3: 06 28 4c 41 53 54 29 00    ; 6, (LAST)
;
ffeb: fc ff 00 00                ; (HERE) - (next: fffc <end>)
ffef: 40 00 00 00 00             ; XT=0040, flags=00
fff4: 06 28 48 45 52 45 29 00    ; 6, (HERE)
;
fffc: 00 00 00 00                ; End.
