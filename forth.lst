; memory-size: 65536 bytes, (10000 hex)
; data-stack: fe00, grows up
; return-stack: fffc, grows down
;
0000: 08 b3 11 00 00             ; JMP main (11b3)
;
0005: 00 00 00
0008: 00000004 00000000
0010: 000013d2 0000f0d4 0000000a 00000000
0020: 00000000 00010000 00000000 00000000
0030: 00000000 00000000 00000000 00000000
;
0040: 18 eb ff 00 00             ; DICTP (HERE) (ffeb)
0045: 01 4b 00 00 00             ; LITERAL 75 (0x004b)
004a: 0c                         ; RET
004b: d2 13 00 00                ; dw 0x13d2
;
004f: 18 da ff 00 00             ; DICTP (LAST) (ffda)
0054: 01 5a 00 00 00             ; LITERAL 90 (0x005a)
0059: 0c                         ; RET
005a: d4 f0 00 00                ; dw 0xf0d4
;
005e: 18 cb ff 00 00             ; DICTP BASE (ffcb)
0063: 01 69 00 00 00             ; LITERAL 105 (0x0069)
0068: 0c                         ; RET
0069: 0a 00 00 00                ; dw 0x000a
;
006d: 18 bb ff 00 00             ; DICTP STATE (ffbb)
0072: 01 78 00 00 00             ; LITERAL 120 (0x0078)
0077: 0c                         ; RET
0078: 63 00 00 00                ; dw 0x0063
;
007c: 18 a8 ff 00 00             ; DICTP (MEM_SZ) (ffa8)
0081: 01 87 00 00 00             ; LITERAL 135 (0x0087)
0086: 0c                         ; RET
0087: 00 00 01 00                ; dw 0x10000
;
008b: 18 9a ff 00 00             ; DICTP >IN (ff9a)
0090: 01 96 00 00 00             ; LITERAL 150 (0x0096)
0095: 0c                         ; RET
0096: 00 00 00 00                ; dw 0x0000
;
009a: 18 8b ff 00 00             ; DICTP #NEG (ff8b)
009f: 01 a5 00 00 00             ; LITERAL 165 (0x00a5)
00a4: 0c                         ; RET
00a5: 00 00 00 00                ; dw 0x0000
;
00a9: 18 7c ff 00 00             ; DICTP #LEN (ff7c)
00ae: 01 b4 00 00 00             ; LITERAL 180 (0x00b4)
00b3: 0c                         ; RET
00b4: 05 00 00 00                ; dw 0x0005
;
00b8: 18 69 ff 00 00             ; DICTP INPUT-FP (ff69)
00bd: 01 c3 00 00 00             ; LITERAL 195 (0x00c3)
00c2: 0c                         ; RET
00c3: 00 00 00 00                ; dw 0x0000
;
00c7: 18 5c ff 00 00             ; DICTP T1 (ff5c)
00cc: 01 d2 00 00 00             ; LITERAL 210 (0x00d2)
00d1: 0c                         ; RET
00d2: 00 00 00 00                ; dw 0x0000
;
00d6: 18 4f ff 00 00             ; DICTP T2 (ff4f)
00db: 01 e1 00 00 00             ; LITERAL 225 (0x00e1)
00e0: 0c                         ; RET
00e1: 00 00 00 00                ; dw 0x0000
;
00e5: 18 42 ff 00 00             ; DICTP T3 (ff42)
00ea: 01 f0 00 00 00             ; LITERAL 240 (0x00f0)
00ef: 0c                         ; RET
00f0: 00 00 00 00                ; dw 0x0000
;
00f4: fc                         ; NOP
00f5: 18 33 ff 00 00             ; DICTP CELL (ff33)
00fa: 0e 04                      ; CLITERAL 4
00fc: 0c                         ; RET
;
00fd: 18 24 ff 00 00             ; DICTP HERE (ff24)
0102: 0b 40 00 00 00             ; CALL (HERE) (0040)
0107: 02                         ; FETCH
0108: 0c                         ; RET
;
0109: 18 15 ff 00 00             ; DICTP LAST (ff15)
010e: 0b 4f 00 00 00             ; CALL (LAST) (004f)
0113: 02                         ; FETCH
0114: 0c                         ; RET
;
0115: 18 08 ff 00 00             ; DICTP C, (ff08)
011a: 0b fd 00 00 00             ; CALL HERE (00fd)
011f: 10                         ; CSTORE
0120: 0b fd 00 00 00             ; CALL HERE (00fd)
0125: 2c                         ; INC
0126: 0b 40 00 00 00             ; CALL (HERE) (0040)
012b: 03                         ; STORE
012c: 0c                         ; RET
;
012d: 18 fc fe 00 00             ; DICTP , (fefc)
0132: 0b fd 00 00 00             ; CALL HERE (00fd)
0137: 03                         ; STORE
0138: 0b fd 00 00 00             ; CALL HERE (00fd)
013d: 0e 04                      ; CLITERAL 4
013f: 11                         ; ADD
0140: 0b 40 00 00 00             ; CALL (HERE) (0040)
0145: 03                         ; STORE
0146: 0c                         ; RET
;
0147: 18 f0 fe 00 00             ; DICTP [ (fef0)
014c: 0e 00                      ; CLITERAL 0
014e: 0b 6d 00 00 00             ; CALL STATE (006d)
0153: 03                         ; STORE
0154: 0c                         ; RET
;
0155: 18 e4 fe 00 00             ; DICTP ] (fee4)
015a: 0e 01                      ; CLITERAL 1
015c: 0b 6d 00 00 00             ; CALL STATE (006d)
0161: 03                         ; STORE
0162: 0c                         ; RET
;
0163: 18 d2 fe 00 00             ; DICTP LITERAL (fed2)
0168: 0e 01                      ; CLITERAL 1
016a: 0b 15 01 00 00             ; CALL C, (0115)
016f: 0c                         ; RET
;
0170: 18 c6 fe 00 00             ; DICTP @ (fec6)
0175: 02                         ; FETCH
0176: 0c                         ; RET
;
0177: 18 ba fe 00 00             ; DICTP ! (feba)
017c: 03                         ; STORE
017d: 0c                         ; RET
;
017e: 18 ab fe 00 00             ; DICTP SWAP (feab)
0183: 04                         ; SWAP
0184: 0c                         ; RET
;
0185: 18 9c fe 00 00             ; DICTP DROP (fe9c)
018a: 05                         ; DROP
018b: 0c                         ; RET
;
018c: 18 8e fe 00 00             ; DICTP DUP (fe8e)
0191: 06                         ; DUP
0192: 0c                         ; RET
;
0193: 18 7b fe 00 00             ; DICTP SLITERAL (fe7b)
0198: 0e 07                      ; CLITERAL 7
019a: 0b 15 01 00 00             ; CALL C, (0115)
019f: 0c                         ; RET
;
01a0: 18 6d fe 00 00             ; DICTP JMP (fe6d)
01a5: 0e 08                      ; CLITERAL 8
01a7: 0b 15 01 00 00             ; CALL C, (0115)
01ac: 0c                         ; RET
;
01ad: 18 5e fe 00 00             ; DICTP JMPZ (fe5e)
01b2: 0e 09                      ; CLITERAL 9
01b4: 0b 15 01 00 00             ; CALL C, (0115)
01b9: 0c                         ; RET
;
01ba: 18 4e fe 00 00             ; DICTP JMPNZ (fe4e)
01bf: 0e 0a                      ; CLITERAL 10
01c1: 0b 15 01 00 00             ; CALL C, (0115)
01c6: 0c                         ; RET
;
01c7: 18 3f fe 00 00             ; DICTP CALL (fe3f)
01cc: 0e 0b                      ; CLITERAL 11
01ce: 0b 15 01 00 00             ; CALL C, (0115)
01d3: 0c                         ; RET
;
01d4: 18 31 fe 00 00             ; DICTP RET (fe31)
01d9: 0e 0c                      ; CLITERAL 12
01db: 0b 15 01 00 00             ; CALL C, (0115)
01e0: 0c                         ; RET
;
01e1: 18 24 fe 00 00             ; DICTP OR (fe24)
01e6: 0d                         ; OR
01e7: 0c                         ; RET
;
01e8: 18 11 fe 00 00             ; DICTP CLITERAL (fe11)
01ed: 0e 0e                      ; CLITERAL 14
01ef: 0b 15 01 00 00             ; CALL C, (0115)
01f4: 0c                         ; RET
;
01f5: 18 04 fe 00 00             ; DICTP C@ (fe04)
01fa: 0f                         ; CFETCH
01fb: 0c                         ; RET
;
01fc: 18 f7 fd 00 00             ; DICTP C! (fdf7)
0201: 10                         ; CSTORE
0202: 0c                         ; RET
;
0203: 18 eb fd 00 00             ; DICTP + (fdeb)
0208: 11                         ; ADD
0209: 0c                         ; RET
;
020a: 18 df fd 00 00             ; DICTP - (fddf)
020f: 12                         ; SUB
0210: 0c                         ; RET
;
0211: 18 d3 fd 00 00             ; DICTP * (fdd3)
0216: 13                         ; MUL
0217: 0c                         ; RET
;
0218: 18 c7 fd 00 00             ; DICTP / (fdc7)
021d: 14                         ; DIV
021e: 0c                         ; RET
;
021f: 18 bb fd 00 00             ; DICTP < (fdbb)
0224: 15                         ; LT
0225: 0c                         ; RET
;
0226: 18 af fd 00 00             ; DICTP = (fdaf)
022b: 16                         ; EQ
022c: 0c                         ; RET
;
022d: 18 a3 fd 00 00             ; DICTP > (fda3)
0232: 17                         ; GT
0233: 0c                         ; RET
;
0234: 18 93 fd 00 00             ; DICTP DICTP (fd93)
0239: 0e 18                      ; CLITERAL 24
023b: 0b 15 01 00 00             ; CALL C, (0115)
0240: 0c                         ; RET
;
0241: 18 84 fd 00 00             ; DICTP EMIT (fd84)
0246: 19                         ; EMIT
0247: 0c                         ; RET
;
0248: 18 75 fd 00 00             ; DICTP OVER (fd75)
024d: 1a                         ; OVER
024e: 0c                         ; RET
;
024f: 18 63 fd 00 00             ; DICTP COMPARE (fd63)
0254: 1b                         ; COMPARE
0255: 0c                         ; RET
;
0256: 18 53 fd 00 00             ; DICTP FOPEN (fd53)
025b: 1c                         ; FOPEN
025c: 0c                         ; RET
;
025d: 18 43 fd 00 00             ; DICTP FREAD (fd43)
0262: 1d                         ; FREAD
0263: 0c                         ; RET
;
0264: 18 2f fd 00 00             ; DICTP FREADLINE (fd2f)
0269: 1e                         ; FREADLINE
026a: 0c                         ; RET
;
026b: 18 1e fd 00 00             ; DICTP FWRITE (fd1e)
0270: 1f                         ; FWRITE
0271: 0c                         ; RET
;
0272: 18 0d fd 00 00             ; DICTP FCLOSE (fd0d)
0277: 20                         ; FCLOSE
0278: 0c                         ; RET
;
0279: 18 00 fd 00 00             ; DICTP >R (fd00)
027e: 21                         ; DTOR
027f: 0c                         ; RET
;
0280: 18 f3 fc 00 00             ; DICTP R> (fcf3)
0285: 22                         ; RTOD
0286: 0c                         ; RET
;
0287: 18 e0 fc 00 00             ; DICTP LOGLEVEL (fce0)
028c: 23                         ; LOGLEVEL
028d: 0c                         ; RET
;
028e: 18 d2 fc 00 00             ; DICTP AND (fcd2)
0293: 24                         ; AND
0294: 0c                         ; RET
;
0295: 18 c3 fc 00 00             ; DICTP PICK (fcc3)
029a: 25                         ; PICK
029b: 0c                         ; RET
;
029c: 18 b3 fc 00 00             ; DICTP DEPTH (fcb3)
02a1: 26                         ; DEPTH
02a2: 0c                         ; RET
;
02a3: 18 a3 fc 00 00             ; DICTP GETCH (fca3)
02a8: 27                         ; GETCH
02a9: 0c                         ; RET
;
02aa: 18 90 fc 00 00             ; DICTP COMPAREI (fc90)
02af: 28                         ; COMPAREI
02b0: 0c                         ; RET
;
02b1: 18 81 fc 00 00             ; DICTP /MOD (fc81)
02b6: 29                         ; SLASHMOD
02b7: 0c                         ; RET
;
02b8: 18 73 fc 00 00             ; DICTP NOT (fc73)
02bd: 2a                         ; NOT
02be: 0c                         ; RET
;
02bf: 18 62 fc 00 00             ; DICTP RFETCH (fc62)
02c4: 2b                         ; RFETCH
02c5: 0c                         ; RET
;
02c6: 18 54 fc 00 00             ; DICTP INC (fc54)
02cb: 2c                         ; INC
02cc: 0c                         ; RET
;
02cd: 18 43 fc 00 00             ; DICTP RDEPTH (fc43)
02d2: 2d                         ; RDEPTH
02d3: 0c                         ; RET
;
02d4: 18 35 fc 00 00             ; DICTP DEC (fc35)
02d9: 2e                         ; DEC
02da: 0c                         ; RET
;
02db: 18 23 fc 00 00             ; DICTP GETTICK (fc23)
02e0: 2f                         ; GETTICK
02e1: 0c                         ; RET
;
02e2: 18 16 fc 00 00             ; DICTP << (fc16)
02e7: 30                         ; SHIFTLEFT
02e8: 0c                         ; RET
;
02e9: 18 09 fc 00 00             ; DICTP >> (fc09)
02ee: 31                         ; SHIFTRIGHT
02ef: 0c                         ; RET
;
02f0: 18 fc fb 00 00             ; DICTP +! (fbfc)
02f5: 32                         ; PLUSSTORE
02f6: 0c                         ; RET
;
02f7: 18 ea fb 00 00             ; DICTP BRANCHF (fbea)
02fc: 0e 5a                      ; CLITERAL 90
02fe: 0b 15 01 00 00             ; CALL C, (0115)
0303: 0c                         ; RET
;
0304: 18 d7 fb 00 00             ; DICTP BRANCHFZ (fbd7)
0309: 0e 5b                      ; CLITERAL 91
030b: 0b 15 01 00 00             ; CALL C, (0115)
0310: 0c                         ; RET
;
0311: 18 c3 fb 00 00             ; DICTP BRANCHFNZ (fbc3)
0316: 0e 5c                      ; CLITERAL 92
0318: 0b 15 01 00 00             ; CALL C, (0115)
031d: 0c                         ; RET
;
031e: 18 b1 fb 00 00             ; DICTP BRANCHB (fbb1)
0323: 0e 5d                      ; CLITERAL 93
0325: 0b 15 01 00 00             ; CALL C, (0115)
032a: 0c                         ; RET
;
032b: 18 9e fb 00 00             ; DICTP BRANCHBZ (fb9e)
0330: 0e 5e                      ; CLITERAL 94
0332: 0b 15 01 00 00             ; CALL C, (0115)
0337: 0c                         ; RET
;
0338: 18 8a fb 00 00             ; DICTP BRANCHBNZ (fb8a)
033d: 0e 5f                      ; CLITERAL 95
033f: 0b 15 01 00 00             ; CALL C, (0115)
0344: 0c                         ; RET
;
0345: 18 7c fb 00 00             ; DICTP NOP (fb7c)
034a: fc                         ; NOP
034b: 0c                         ; RET
;
034c: 18 6c fb 00 00             ; DICTP BREAK (fb6c)
0351: fd                         ; BREAK
0352: 0c                         ; RET
;
0353: 18 5c fb 00 00             ; DICTP RESET (fb5c)
0358: fe                         ; RESET
0359: 0c                         ; RET
;
035a: 18 4e fb 00 00             ; DICTP BYE (fb4e)
035f: ff                         ; BYE
0360: 0c                         ; RET
;
0361: 18 3d fb 00 00             ; DICTP INLINE (fb3d)
0366: 0b 09 01 00 00             ; CALL LAST (0109)
036b: 0e 02                      ; CLITERAL 2
036d: 0e 04                      ; CLITERAL 4
036f: 13                         ; MUL
0370: 11                         ; ADD
0371: 06                         ; DUP
0372: 0f                         ; CFETCH
0373: 0e 02                      ; CLITERAL 2
0375: 0d                         ; OR
0376: 04                         ; SWAP
0377: 10                         ; CSTORE
0378: 0c                         ; RET
;
0379: 18 29 fb 00 00             ; DICTP IMMEDIATE (fb29)
037e: 0b 09 01 00 00             ; CALL LAST (0109)
0383: 0e 02                      ; CLITERAL 2
0385: 0e 04                      ; CLITERAL 4
0387: 13                         ; MUL
0388: 11                         ; ADD
0389: 06                         ; DUP
038a: 0f                         ; CFETCH
038b: 0e 01                      ; CLITERAL 1
038d: 0d                         ; OR
038e: 04                         ; SWAP
038f: 10                         ; CSTORE
0390: 0c                         ; RET
;
0391: 18 19 fb 00 00             ; DICTP CELLS (fb19)
0396: 0e 04                      ; CLITERAL 4
0398: 13                         ; MUL
0399: 0c                         ; RET
;
039a: 18 00 fb 00 00             ; DICTP FLAG_IMMEDIATE (fb00)
039f: 0e 01                      ; CLITERAL 1
03a1: 0c                         ; RET
;
03a2: 18 ea fa 00 00             ; DICTP FLAG_INLINE (faea)
03a7: 0e 02                      ; CLITERAL 2
03a9: 0c                         ; RET
;
03aa: 18 dc fa 00 00             ; DICTP HEX (fadc)
03af: 0e 10                      ; CLITERAL 16
03b1: 0b 5e 00 00 00             ; CALL BASE (005e)
03b6: 03                         ; STORE
03b7: 0c                         ; RET
;
03b8: 18 ca fa 00 00             ; DICTP DECIMAL (faca)
03bd: 0e 0a                      ; CLITERAL 10
03bf: 0b 5e 00 00 00             ; CALL BASE (005e)
03c4: 03                         ; STORE
03c5: 0c                         ; RET
;
03c6: 18 ba fa 00 00             ; DICTP OCTAL (faba)
03cb: 0e 08                      ; CLITERAL 8
03cd: 0b 5e 00 00 00             ; CALL BASE (005e)
03d2: 03                         ; STORE
03d3: 0c                         ; RET
;
03d4: 18 a9 fa 00 00             ; DICTP BINARY (faa9)
03d9: 0e 02                      ; CLITERAL 2
03db: 0b 5e 00 00 00             ; CALL BASE (005e)
03e0: 03                         ; STORE
03e1: 0c                         ; RET
;
03e2: 18 9c fa 00 00             ; DICTP ON (fa9c)
03e7: 0e 01                      ; CLITERAL 1
03e9: 04                         ; SWAP
03ea: 03                         ; STORE
03eb: 0c                         ; RET
;
03ec: 18 8e fa 00 00             ; DICTP OFF (fa8e)
03f1: 0e 00                      ; CLITERAL 0
03f3: 04                         ; SWAP
03f4: 03                         ; STORE
03f5: 0c                         ; RET
;
03f6: 18 79 fa 00 00             ; DICTP ?COMPILING (fa79)
03fb: 0b 6d 00 00 00             ; CALL STATE (006d)
0400: 02                         ; FETCH
0401: 0c                         ; RET
;
0402: 18 6c fa 00 00             ; DICTP IF (fa6c)
0407: 0b f6 03 00 00             ; CALL ?COMPILING (03f6)
040c: 09 22 04 00 00             ; JMPZ 0422
0411: 0b 04 03 00 00             ; CALL BRANCHFZ (0304)
0416: 0b fd 00 00 00             ; CALL HERE (00fd)
041b: 0e 00                      ; CLITERAL 0
041d: 0b 15 01 00 00             ; CALL C, (0115)
0422: 0c                         ; RET
;
0423: 18 5d fa 00 00             ; DICTP ELSE (fa5d)
0428: 0b f6 03 00 00             ; CALL ?COMPILING (03f6)
042d: 09 4d 04 00 00             ; JMPZ 044d
0432: 0b f7 02 00 00             ; CALL BRANCHF (02f7)
0437: 0b fd 00 00 00             ; CALL HERE (00fd)
043c: 0e 00                      ; CLITERAL 0
043e: 0b 15 01 00 00             ; CALL C, (0115)
0443: 04                         ; SWAP
0444: 0b fd 00 00 00             ; CALL HERE (00fd)
0449: 1a                         ; OVER
044a: 12                         ; SUB
044b: 04                         ; SWAP
044c: 10                         ; CSTORE
044d: 0c                         ; RET
;
044e: 18 4e fa 00 00             ; DICTP THEN (fa4e)
0453: 0b f6 03 00 00             ; CALL ?COMPILING (03f6)
0458: 09 66 04 00 00             ; JMPZ 0466
045d: 0b fd 00 00 00             ; CALL HERE (00fd)
0462: 1a                         ; OVER
0463: 12                         ; SUB
0464: 04                         ; SWAP
0465: 10                         ; CSTORE
0466: 0c                         ; RET
;
0467: 18 3e fa 00 00             ; DICTP BEGIN (fa3e)
046c: 0b f6 03 00 00             ; CALL ?COMPILING (03f6)
0471: 5b 06                      ; BRANCHFZ 6 (0478)
0473: 0b fd 00 00 00             ; CALL HERE (00fd)
0478: 0c                         ; RET
;
0479: 18 2e fa 00 00             ; DICTP AGAIN (fa2e)
047e: 0b f6 03 00 00             ; CALL ?COMPILING (03f6)
0483: 5b 12                      ; BRANCHFZ 18 (0496)
0485: 0b 1e 03 00 00             ; CALL BRANCHB (031e)
048a: 0b fd 00 00 00             ; CALL HERE (00fd)
048f: 04                         ; SWAP
0490: 12                         ; SUB
0491: 0b 15 01 00 00             ; CALL C, (0115)
0496: 0c                         ; RET
;
0497: 18 1e fa 00 00             ; DICTP WHILE (fa1e)
049c: 0b f6 03 00 00             ; CALL ?COMPILING (03f6)
04a1: 5b 12                      ; BRANCHFZ 18 (04b4)
04a3: 0b 38 03 00 00             ; CALL BRANCHBNZ (0338)
04a8: 0b fd 00 00 00             ; CALL HERE (00fd)
04ad: 04                         ; SWAP
04ae: 12                         ; SUB
04af: 0b 15 01 00 00             ; CALL C, (0115)
04b4: 0c                         ; RET
;
04b5: 18 0e fa 00 00             ; DICTP UNTIL (fa0e)
04ba: 0b f6 03 00 00             ; CALL ?COMPILING (03f6)
04bf: 5b 12                      ; BRANCHFZ 18 (04d2)
04c1: 0b 2b 03 00 00             ; CALL BRANCHBZ (032b)
04c6: 0b fd 00 00 00             ; CALL HERE (00fd)
04cb: 04                         ; SWAP
04cc: 12                         ; SUB
04cd: 0b 15 01 00 00             ; CALL C, (0115)
04d2: 0c                         ; RET
;
04d3: 18 fe f9 00 00             ; DICTP LEAVE (f9fe)
04d8: 0b f6 03 00 00             ; CALL ?COMPILING (03f6)
04dd: 5b 06                      ; BRANCHFZ 6 (04e4)
04df: 0b d4 01 00 00             ; CALL RET (01d4)
04e4: 0c                         ; RET
;
04e5: 18 ed f9 00 00             ; DICTP MEM_SZ (f9ed)
04ea: 0b 7c 00 00 00             ; CALL (MEM_SZ) (007c)
04ef: 02                         ; FETCH
04f0: 0c                         ; RET
;
04f1: 18 da f9 00 00             ; DICTP TRACE-ON (f9da)
04f6: 0e 02                      ; CLITERAL 2
04f8: 23                         ; LOGLEVEL
04f9: 0c                         ; RET
;
04fa: 18 c6 f9 00 00             ; DICTP TRACE-OFF (f9c6)
04ff: 0e 00                      ; CLITERAL 0
0501: 23                         ; LOGLEVEL
0502: 0c                         ; RET
;
0503: 18 b3 f9 00 00             ; DICTP DEBUG-ON (f9b3)
0508: 0e 01                      ; CLITERAL 1
050a: 23                         ; LOGLEVEL
050b: 0c                         ; RET
;
050c: 18 9f f9 00 00             ; DICTP DEBUG-OFF (f99f)
0511: 0e 00                      ; CLITERAL 0
0513: 23                         ; LOGLEVEL
0514: 0c                         ; RET
;
0515: 18 92 f9 00 00             ; DICTP R@ (f992)
051a: 2b                         ; RFETCH
051b: 0c                         ; RET
;
051c: 18 82 f9 00 00             ; DICTP RDROP (f982)
0521: 22                         ; RTOD
0522: 05                         ; DROP
0523: 0c                         ; RET
;
0524: 18 73 f9 00 00             ; DICTP ?DUP (f973)
0529: 06                         ; DUP
052a: 5b 02                      ; BRANCHFZ 2 (052d)
052c: 06                         ; DUP
052d: 0c                         ; RET
;
052e: 18 64 f9 00 00             ; DICTP 2DUP (f964)
0533: 1a                         ; OVER
0534: 1a                         ; OVER
0535: 0c                         ; RET
;
0536: 18 54 f9 00 00             ; DICTP 2DROP (f954)
053b: 05                         ; DROP
053c: 05                         ; DROP
053d: 0c                         ; RET
;
053e: 18 45 f9 00 00             ; DICTP TUCK (f945)
0543: 04                         ; SWAP
0544: 1a                         ; OVER
0545: 0c                         ; RET
;
0546: 18 37 f9 00 00             ; DICTP NIP (f937)
054b: 04                         ; SWAP
054c: 05                         ; DROP
054d: 0c                         ; RET
;
054e: 18 29 f9 00 00             ; DICTP ROT (f929)
0553: 21                         ; DTOR
0554: 04                         ; SWAP
0555: 22                         ; RTOD
0556: 04                         ; SWAP
0557: 0c                         ; RET
;
0558: 18 1a f9 00 00             ; DICTP -ROT (f91a)
055d: 04                         ; SWAP
055e: 21                         ; DTOR
055f: 04                         ; SWAP
0560: 22                         ; RTOD
0561: 0c                         ; RET
;
0562: 18 0e f9 00 00             ; DICTP / (f90e)
0567: 29                         ; SLASHMOD
0568: 04                         ; SWAP
0569: 05                         ; DROP
056a: 0c                         ; RET
;
056b: 18 00 f9 00 00             ; DICTP MOD (f900)
0570: 29                         ; SLASHMOD
0571: 05                         ; DROP
0572: 0c                         ; RET
;
0573: 18 f3 f8 00 00             ; DICTP 1+ (f8f3)
0578: 2c                         ; INC
0579: 0c                         ; RET
;
057a: 18 e6 f8 00 00             ; DICTP 1- (f8e6)
057f: 2e                         ; DEC
0580: 0c                         ; RET
;
0581: 18 d9 f8 00 00             ; DICTP 2* (f8d9)
0586: 0e 02                      ; CLITERAL 2
0588: 13                         ; MUL
0589: 0c                         ; RET
;
058a: 18 cc f8 00 00             ; DICTP 2/ (f8cc)
058f: 0e 02                      ; CLITERAL 2
0591: 29                         ; SLASHMOD
0592: 04                         ; SWAP
0593: 05                         ; DROP
0594: 0c                         ; RET
;
0595: 18 bf f8 00 00             ; DICTP += (f8bf)
059a: 1a                         ; OVER
059b: 02                         ; FETCH
059c: 11                         ; ADD
059d: 04                         ; SWAP
059e: 03                         ; STORE
059f: 0c                         ; RET
;
05a0: 18 b2 f8 00 00             ; DICTP -= (f8b2)
05a5: 1a                         ; OVER
05a6: 02                         ; FETCH
05a7: 04                         ; SWAP
05a8: 12                         ; SUB
05a9: 04                         ; SWAP
05aa: 03                         ; STORE
05ab: 0c                         ; RET
;
05ac: 18 a5 f8 00 00             ; DICTP -! (f8a5)
05b1: 04                         ; SWAP
05b2: 1a                         ; OVER
05b3: 02                         ; FETCH
05b4: 04                         ; SWAP
05b5: 12                         ; SUB
05b6: 04                         ; SWAP
05b7: 03                         ; STORE
05b8: 0c                         ; RET
;
05b9: 18 98 f8 00 00             ; DICTP ++ (f898)
05be: 06                         ; DUP
05bf: 02                         ; FETCH
05c0: 2c                         ; INC
05c1: 04                         ; SWAP
05c2: 03                         ; STORE
05c3: 0c                         ; RET
;
05c4: 18 8b f8 00 00             ; DICTP -- (f88b)
05c9: 06                         ; DUP
05ca: 02                         ; FETCH
05cb: 2e                         ; DEC
05cc: 04                         ; SWAP
05cd: 03                         ; STORE
05ce: 0c                         ; RET
;
05cf: 18 7d f8 00 00             ; DICTP C++ (f87d)
05d4: 06                         ; DUP
05d5: 0f                         ; CFETCH
05d6: 2c                         ; INC
05d7: 04                         ; SWAP
05d8: 10                         ; CSTORE
05d9: 0c                         ; RET
;
05da: 18 6f f8 00 00             ; DICTP C-- (f86f)
05df: 06                         ; DUP
05e0: 0f                         ; CFETCH
05e1: 2e                         ; DEC
05e2: 04                         ; SWAP
05e3: 10                         ; CSTORE
05e4: 0c                         ; RET
;
05e5: 18 62 f8 00 00             ; DICTP 0= (f862)
05ea: 2a                         ; NOT
05eb: 0c                         ; RET
;
05ec: 18 55 f8 00 00             ; DICTP <> (f855)
05f1: 16                         ; EQ
05f2: 2a                         ; NOT
05f3: 0c                         ; RET
;
05f4: 18 48 f8 00 00             ; DICTP <= (f848)
05f9: 17                         ; GT
05fa: 2a                         ; NOT
05fb: 0c                         ; RET
;
05fc: 18 3b f8 00 00             ; DICTP >= (f83b)
0601: 15                         ; LT
0602: 2a                         ; NOT
0603: 0c                         ; RET
;
0604: 18 2c f8 00 00             ; DICTP TRUE (f82c)
0609: 01 ff ff ff ff             ; LITERAL -1 (ffffffff)
060e: 0c                         ; RET
;
060f: 18 1c f8 00 00             ; DICTP FALSE (f81c)
0614: 0e 00                      ; CLITERAL 0
0616: 0c                         ; RET
;
0617: 18 0c f8 00 00             ; DICTP COUNT (f80c)
061c: 06                         ; DUP
061d: 2c                         ; INC
061e: 04                         ; SWAP
061f: 0f                         ; CFETCH
0620: 0c                         ; RET
;
0621: 18 fd f7 00 00             ; DICTP TYPE (f7fd)
0626: 06                         ; DUP
0627: 2a                         ; NOT
0628: 5b 04                      ; BRANCHFZ 4 (062d)
062a: 05                         ; DROP
062b: 05                         ; DROP
062c: 0c                         ; RET
062d: 04                         ; SWAP
062e: 06                         ; DUP
062f: 0f                         ; CFETCH
0630: 19                         ; EMIT
0631: 2c                         ; INC
0632: 04                         ; SWAP
0633: 2e                         ; DEC
0634: 5d 0f                      ; BRANCHB 15 (0626)
0636: 0c                         ; RET
;
0637: 18 f0 f7 00 00             ; DICTP CT (f7f0)
063c: 0b 17 06 00 00             ; CALL COUNT (0617)
0641: 0b 21 06 00 00             ; CALL TYPE (0621)
0646: 0c                         ; RET
;
0647: 18 e4 f7 00 00             ; DICTP \ (f7e4)
064c: 0e 00                      ; CLITERAL 0
064e: 0b 8b 00 00 00             ; CALL >IN (008b)
0653: 02                         ; FETCH
0654: 10                         ; CSTORE
0655: 0c                         ; RET
;
0656: 18 d8 f7 00 00             ; DICTP ( (f7d8)
065b: 0b 8b 00 00 00             ; CALL >IN (008b)
0660: 02                         ; FETCH
0661: 0f                         ; CFETCH
0662: 06                         ; DUP
0663: 2a                         ; NOT
0664: 5b 1d                      ; BRANCHFZ 29 (0682)
0666: 07 13 6d 69 73 73 69 6e 67 20 63 6c 6f 73 69 6e 67 20 27 29 27 00 ; SLITERAL (0667) [missing closing ')']
067c: 0b 37 06 00 00             ; CALL CT (0637)
0681: fe                         ; RESET
0682: 0b 8b 00 00 00             ; CALL >IN (008b)
0687: 06                         ; DUP
0688: 02                         ; FETCH
0689: 2c                         ; INC
068a: 04                         ; SWAP
068b: 03                         ; STORE
068c: 0e 29                      ; CLITERAL 41
068e: 16                         ; EQ
068f: 5e 35                      ; BRANCHBZ 53 (065b)
0691: 0c                         ; RET
;
0692: 18 c8 f7 00 00             ; DICTP SPACE (f7c8)
0697: 0e 20                      ; CLITERAL 32
0699: 19                         ; EMIT
069a: 0c                         ; RET
;
069b: 18 bb f7 00 00             ; DICTP BL (f7bb)
06a0: 0e 20                      ; CLITERAL 32
06a2: 19                         ; EMIT
06a3: 0c                         ; RET
;
06a4: 18 ac f7 00 00             ; DICTP CRLF (f7ac)
06a9: 0e 0d                      ; CLITERAL 13
06ab: 19                         ; EMIT
06ac: 0e 0a                      ; CLITERAL 10
06ae: 19                         ; EMIT
06af: 0c                         ; RET
;
06b0: 18 9f f7 00 00             ; DICTP CR (f79f)
06b5: 0e 0d                      ; CLITERAL 13
06b7: 19                         ; EMIT
06b8: 0e 0a                      ; CLITERAL 10
06ba: 19                         ; EMIT
06bb: 0c                         ; RET
;
06bc: 18 8d f7 00 00             ; DICTP BETWEEN (f78d)
06c1: 0e 02                      ; CLITERAL 2
06c3: 25                         ; PICK
06c4: 15                         ; LT
06c5: 5b 06                      ; BRANCHFZ 6 (06cc)
06c7: 05                         ; DROP
06c8: 05                         ; DROP
06c9: 0e 00                      ; CLITERAL 0
06cb: 0c                         ; RET
06cc: 15                         ; LT
06cd: 2a                         ; NOT
06ce: 0c                         ; RET
;
06cf: 18 7c f7 00 00             ; DICTP skipWS (f77c)
06d4: 06                         ; DUP
06d5: 0f                         ; CFETCH
06d6: 06                         ; DUP
06d7: 5b 0c                      ; BRANCHFZ 12 (06e4)
06d9: 0e 20                      ; CLITERAL 32
06db: 17                         ; GT
06dc: 5b 04                      ; BRANCHFZ 4 (06e1)
06de: 0c                         ; RET
06df: 5a 02                      ; BRANCHF 2 (06e2)
06e1: 2c                         ; INC
06e2: 5a 03                      ; BRANCHF 3 (06e6)
06e4: 05                         ; DROP
06e5: 0c                         ; RET
06e6: 5d 13                      ; BRANCHB 19 (06d4)
06e8: 0c                         ; RET
;
06e9: 18 67 f7 00 00             ; DICTP getOneWord (f767)
06ee: 06                         ; DUP
06ef: 21                         ; DTOR
06f0: 21                         ; DTOR
06f1: 2b                         ; RFETCH
06f2: 0f                         ; CFETCH
06f3: 0e 20                      ; CLITERAL 32
06f5: 17                         ; GT
06f6: 5b 06                      ; BRANCHFZ 6 (06fd)
06f8: 22                         ; RTOD
06f9: 2c                         ; INC
06fa: 21                         ; DTOR
06fb: 5a 10                      ; BRANCHF 16 (070c)
06fd: 2b                         ; RFETCH
06fe: 0f                         ; CFETCH
06ff: 5b 08                      ; BRANCHFZ 8 (0708)
0701: 0e 00                      ; CLITERAL 0
0703: 2b                         ; RFETCH
0704: 10                         ; CSTORE
0705: 22                         ; RTOD
0706: 2c                         ; INC
0707: 21                         ; DTOR
0708: 22                         ; RTOD
0709: 22                         ; RTOD
070a: 04                         ; SWAP
070b: 0c                         ; RET
070c: 5d 1c                      ; BRANCHB 28 (06f1)
070e: 0c                         ; RET
;
070f: 18 53 f7 00 00             ; DICTP DICT>NEXT (f753)
0714: 0c                         ; RET
;
0715: 18 41 f7 00 00             ; DICTP DICT>XT (f741)
071a: 0e 04                      ; CLITERAL 4
071c: 11                         ; ADD
071d: 0c                         ; RET
;
071e: 18 2c f7 00 00             ; DICTP DICT>FLAGS (f72c)
0723: 0e 02                      ; CLITERAL 2
0725: 0e 04                      ; CLITERAL 4
0727: 13                         ; MUL
0728: 11                         ; ADD
0729: 0c                         ; RET
;
072a: 18 18 f7 00 00             ; DICTP DICT>NAME (f718)
072f: 0b 1e 07 00 00             ; CALL DICT>FLAGS (071e)
0734: 2c                         ; INC
0735: 0c                         ; RET
;
0736: 18 04 f7 00 00             ; DICTP NEXT>DICT (f704)
073b: 0c                         ; RET
;
073c: 18 f2 f6 00 00             ; DICTP XT>DICT (f6f2)
0741: 0e 04                      ; CLITERAL 4
0743: 12                         ; SUB
0744: 0c                         ; RET
;
0745: 18 dd f6 00 00             ; DICTP FLAGS>DICT (f6dd)
074a: 0e 02                      ; CLITERAL 2
074c: 0e 04                      ; CLITERAL 4
074e: 13                         ; MUL
074f: 12                         ; SUB
0750: 0c                         ; RET
;
0751: 18 c9 f6 00 00             ; DICTP NAME>DICT (f6c9)
0756: 2e                         ; DEC
0757: 0e 02                      ; CLITERAL 2
0759: 0e 04                      ; CLITERAL 4
075b: 13                         ; MUL
075c: 12                         ; SUB
075d: 0c                         ; RET
;
075e: 18 b4 f6 00 00             ; DICTP DICT.GetXT (f6b4)
0763: 0b 15 07 00 00             ; CALL DICT>XT (0715)
0768: 02                         ; FETCH
0769: 0c                         ; RET
;
076a: 18 9c f6 00 00             ; DICTP DICT.GetFLAGS (f69c)
076f: 0b 1e 07 00 00             ; CALL DICT>FLAGS (071e)
0774: 0f                         ; CFETCH
0775: 0c                         ; RET
;
0776: 18 87 f6 00 00             ; DICTP DICTP>NAME (f687)
077b: 2c                         ; INC
077c: 02                         ; FETCH
077d: 0b 2a 07 00 00             ; CALL DICT>NAME (072a)
0782: 0c                         ; RET
;
0783: 18 71 f6 00 00             ; DICTP XT.GetDICTP (f671)
0788: 06                         ; DUP
0789: 0f                         ; CFETCH
078a: 0e 18                      ; CLITERAL 24
078c: 16                         ; EQ
078d: 5b 05                      ; BRANCHFZ 5 (0793)
078f: 2c                         ; INC
0790: 02                         ; FETCH
0791: 5a 03                      ; BRANCHF 3 (0795)
0793: 05                         ; DROP
0794: fe                         ; RESET
0795: 0c                         ; RET
;
0796: 18 54 f6 00 00             ; DICTP FLAGS.ISIMMEDIATE? (f654)
079b: 0e 01                      ; CLITERAL 1
079d: 24                         ; AND
079e: 0c                         ; RET
;
079f: 18 3a f6 00 00             ; DICTP FLAGS.ISINLINE? (f63a)
07a4: 0e 02                      ; CLITERAL 2
07a6: 24                         ; AND
07a7: 0c                         ; RET
;
07a8: 18 1e f6 00 00             ; DICTP DICT.GetIMMEDIATE (f61e)
07ad: 0b 6a 07 00 00             ; CALL DICT.GetFLAGS (076a)
07b2: 0b 96 07 00 00             ; CALL FLAGS.ISIMMEDIATE? (0796)
07b7: 0c                         ; RET
;
07b8: 18 05 f6 00 00             ; DICTP DICT.GetINLINE (f605)
07bd: 0b 6a 07 00 00             ; CALL DICT.GetFLAGS (076a)
07c2: 0b 9f 07 00 00             ; CALL FLAGS.ISINLINE? (079f)
07c7: 0c                         ; RET
;
07c8: 18 f0 f5 00 00             ; DICTP findInDict (f5f0)
07cd: 0b 09 01 00 00             ; CALL LAST (0109)
07d2: 21                         ; DTOR
07d3: 2b                         ; RFETCH
07d4: 06                         ; DUP
07d5: 5b 1d                      ; BRANCHFZ 29 (07f3)
07d7: 0b 2a 07 00 00             ; CALL DICT>NAME (072a)
07dc: 2c                         ; INC
07dd: 1a                         ; OVER
07de: 28                         ; COMPAREI
07df: 5b 11                      ; BRANCHFZ 17 (07f1)
07e1: 05                         ; DROP
07e2: 2b                         ; RFETCH
07e3: 0b 5e 07 00 00             ; CALL DICT.GetXT (075e)
07e8: 22                         ; RTOD
07e9: 0b 6a 07 00 00             ; CALL DICT.GetFLAGS (076a)
07ee: 0e 01                      ; CLITERAL 1
07f0: 0c                         ; RET
07f1: 5a 09                      ; BRANCHF 9 (07fb)
07f3: 05                         ; DROP
07f4: 05                         ; DROP
07f5: 22                         ; RTOD
07f6: 0e 00                      ; CLITERAL 0
07f8: 0e 00                      ; CLITERAL 0
07fa: 0c                         ; RET
07fb: 22                         ; RTOD
07fc: 02                         ; FETCH
07fd: 21                         ; DTOR
07fe: 5d 2c                      ; BRANCHB 44 (07d3)
0800: 0c                         ; RET
;
0801: 18 df f5 00 00             ; DICTP isHEX? (f5df)
0806: 0b 5e 00 00 00             ; CALL BASE (005e)
080b: 02                         ; FETCH
080c: 0e 10                      ; CLITERAL 16
080e: 16                         ; EQ
080f: 0c                         ; RET
;
0810: 18 c4 f5 00 00             ; DICTP is-decimal-char? (f5c4)
0815: 06                         ; DUP
0816: 0e 30                      ; CLITERAL 48
0818: 0e 39                      ; CLITERAL 57
081a: 0b bc 06 00 00             ; CALL BETWEEN (06bc)
081f: 5b 08                      ; BRANCHFZ 8 (0828)
0821: 0e 30                      ; CLITERAL 48
0823: 12                         ; SUB
0824: 0e 01                      ; CLITERAL 1
0826: 5a 03                      ; BRANCHF 3 (082a)
0828: 0e 00                      ; CLITERAL 0
082a: 0c                         ; RET
;
082b: 18 ad f5 00 00             ; DICTP is-hex-char? (f5ad)
0830: 06                         ; DUP
0831: 0b 10 08 00 00             ; CALL is-decimal-char? (0810)
0836: 5b 06                      ; BRANCHFZ 6 (083d)
0838: 04                         ; SWAP
0839: 05                         ; DROP
083a: 0e 01                      ; CLITERAL 1
083c: 0c                         ; RET
083d: 06                         ; DUP
083e: 0e 41                      ; CLITERAL 65
0840: 0e 46                      ; CLITERAL 70
0842: 0b bc 06 00 00             ; CALL BETWEEN (06bc)
0847: 5b 0b                      ; BRANCHFZ 11 (0853)
0849: 05                         ; DROP
084a: 0e 41                      ; CLITERAL 65
084c: 12                         ; SUB
084d: 0e 0a                      ; CLITERAL 10
084f: 11                         ; ADD
0850: 0e 01                      ; CLITERAL 1
0852: 0c                         ; RET
0853: 06                         ; DUP
0854: 0e 61                      ; CLITERAL 97
0856: 0e 66                      ; CLITERAL 102
0858: 0b bc 06 00 00             ; CALL BETWEEN (06bc)
085d: 5b 0b                      ; BRANCHFZ 11 (0869)
085f: 05                         ; DROP
0860: 0e 61                      ; CLITERAL 97
0862: 12                         ; SUB
0863: 0e 0a                      ; CLITERAL 10
0865: 11                         ; ADD
0866: 0e 01                      ; CLITERAL 1
0868: 0c                         ; RET
0869: 0e 00                      ; CLITERAL 0
086b: 0c                         ; RET
;
086c: 18 98 f5 00 00             ; DICTP isNumChar? (f598)
0871: 0b 01 08 00 00             ; CALL isHEX? (0801)
0876: 5b 08                      ; BRANCHFZ 8 (087f)
0878: 0b 2b 08 00 00             ; CALL is-hex-char? (082b)
087d: 5a 06                      ; BRANCHF 6 (0884)
087f: 0b 10 08 00 00             ; CALL is-decimal-char? (0810)
0884: 0c                         ; RET
;
0885: 18 87 f5 00 00             ; DICTP NEGATE (f587)
088a: 0e 00                      ; CLITERAL 0
088c: 04                         ; SWAP
088d: 12                         ; SUB
088e: 0c                         ; RET
;
088f: 18 79 f5 00 00             ; DICTP ABS (f579)
0894: 06                         ; DUP
0895: 0e 00                      ; CLITERAL 0
0897: 15                         ; LT
0898: 5b 06                      ; BRANCHFZ 6 (089f)
089a: 0b 85 08 00 00             ; CALL NEGATE (0885)
089f: 0c                         ; RET
;
08a0: 18 65 f5 00 00             ; DICTP parse-hex (f565)
08a5: 06                         ; DUP
08a6: 0f                         ; CFETCH
08a7: 0e 00                      ; CLITERAL 0
08a9: 16                         ; EQ
08aa: 5b 04                      ; BRANCHFZ 4 (08af)
08ac: 0e 00                      ; CLITERAL 0
08ae: 0c                         ; RET
08af: 0e 00                      ; CLITERAL 0
08b1: 21                         ; DTOR
08b2: 06                         ; DUP
08b3: 0f                         ; CFETCH
08b4: 06                         ; DUP
08b5: 0e 00                      ; CLITERAL 0
08b7: 16                         ; EQ
08b8: 5b 07                      ; BRANCHFZ 7 (08c0)
08ba: 05                         ; DROP
08bb: 05                         ; DROP
08bc: 22                         ; RTOD
08bd: 0e 01                      ; CLITERAL 1
08bf: 0c                         ; RET
08c0: 0b 2b 08 00 00             ; CALL is-hex-char? (082b)
08c5: 5b 0a                      ; BRANCHFZ 10 (08d0)
08c7: 22                         ; RTOD
08c8: 0e 10                      ; CLITERAL 16
08ca: 13                         ; MUL
08cb: 11                         ; ADD
08cc: 21                         ; DTOR
08cd: 2c                         ; INC
08ce: 5a 06                      ; BRANCHF 6 (08d5)
08d0: 05                         ; DROP
08d1: 22                         ; RTOD
08d2: 0e 00                      ; CLITERAL 0
08d4: 0c                         ; RET
08d5: 5d 24                      ; BRANCHB 36 (08b2)
08d7: 0c                         ; RET
;
08d8: 18 50 f5 00 00             ; DICTP parse-char (f550)
08dd: 06                         ; DUP
08de: 2c                         ; INC
08df: 0f                         ; CFETCH
08e0: 0e 27                      ; CLITERAL 39
08e2: 16                         ; EQ
08e3: 2a                         ; NOT
08e4: 5b 04                      ; BRANCHFZ 4 (08e9)
08e6: 0e 00                      ; CLITERAL 0
08e8: 0c                         ; RET
08e9: 06                         ; DUP
08ea: 0e 02                      ; CLITERAL 2
08ec: 11                         ; ADD
08ed: 0f                         ; CFETCH
08ee: 5b 05                      ; BRANCHFZ 5 (08f4)
08f0: 0e 00                      ; CLITERAL 0
08f2: 5a 04                      ; BRANCHF 4 (08f7)
08f4: 0f                         ; CFETCH
08f5: 0e 01                      ; CLITERAL 1
08f7: 0c                         ; RET
;
08f8: 18 3c f5 00 00             ; DICTP isNumber? (f53c)
08fd: 06                         ; DUP
08fe: 0f                         ; CFETCH
08ff: 0e 24                      ; CLITERAL 36
0901: 16                         ; EQ
0902: 5b 08                      ; BRANCHFZ 8 (090b)
0904: 2c                         ; INC
0905: 0b a0 08 00 00             ; CALL parse-hex (08a0)
090a: 0c                         ; RET
090b: 0b 5e 00 00 00             ; CALL BASE (005e)
0910: 02                         ; FETCH
0911: 0e 10                      ; CLITERAL 16
0913: 16                         ; EQ
0914: 5b 07                      ; BRANCHFZ 7 (091c)
0916: 0b a0 08 00 00             ; CALL parse-hex (08a0)
091b: 0c                         ; RET
091c: 06                         ; DUP
091d: 0f                         ; CFETCH
091e: 0e 27                      ; CLITERAL 39
0920: 16                         ; EQ
0921: 5b 08                      ; BRANCHFZ 8 (092a)
0923: 2c                         ; INC
0924: 0b d8 08 00 00             ; CALL parse-char (08d8)
0929: 0c                         ; RET
092a: 06                         ; DUP
092b: 0f                         ; CFETCH
092c: 0e 2d                      ; CLITERAL 45
092e: 16                         ; EQ
092f: 06                         ; DUP
0930: 0b 9a 00 00 00             ; CALL #NEG (009a)
0935: 03                         ; STORE
0936: 5b 02                      ; BRANCHFZ 2 (0939)
0938: 2c                         ; INC
0939: 0e 00                      ; CLITERAL 0
093b: 21                         ; DTOR
093c: 06                         ; DUP
093d: 0f                         ; CFETCH
093e: 06                         ; DUP
093f: 0e 00                      ; CLITERAL 0
0941: 16                         ; EQ
0942: 5b 14                      ; BRANCHFZ 20 (0957)
0944: 05                         ; DROP
0945: 05                         ; DROP
0946: 22                         ; RTOD
0947: 0b 9a 00 00 00             ; CALL #NEG (009a)
094c: 02                         ; FETCH
094d: 5b 06                      ; BRANCHFZ 6 (0954)
094f: 0b 85 08 00 00             ; CALL NEGATE (0885)
0954: 0e 01                      ; CLITERAL 1
0956: 0c                         ; RET
0957: 0b 6c 08 00 00             ; CALL isNumChar? (086c)
095c: 5b 0e                      ; BRANCHFZ 14 (096b)
095e: 22                         ; RTOD
095f: 0b 5e 00 00 00             ; CALL BASE (005e)
0964: 02                         ; FETCH
0965: 13                         ; MUL
0966: 11                         ; ADD
0967: 21                         ; DTOR
0968: 2c                         ; INC
0969: 5a 06                      ; BRANCHF 6 (0970)
096b: 05                         ; DROP
096c: 22                         ; RTOD
096d: 0e 00                      ; CLITERAL 0
096f: 0c                         ; RET
0970: 5d 35                      ; BRANCHB 53 (093c)
0972: 0c                         ; RET
;
0973: 18 2f f5 00 00             ; DICTP <# (f52f)
0978: 0b 9a 00 00 00             ; CALL #NEG (009a)
097d: 0b ec 03 00 00             ; CALL OFF (03ec)
0982: 0b a9 00 00 00             ; CALL #LEN (00a9)
0987: 0b ec 03 00 00             ; CALL OFF (03ec)
098c: 06                         ; DUP
098d: 0e 00                      ; CLITERAL 0
098f: 15                         ; LT
0990: 5b 10                      ; BRANCHFZ 16 (09a1)
0992: 0b 85 08 00 00             ; CALL NEGATE (0885)
0997: 0b 9a 00 00 00             ; CALL #NEG (009a)
099c: 0b e2 03 00 00             ; CALL ON (03e2)
09a1: 0e 00                      ; CLITERAL 0
09a3: 04                         ; SWAP
09a4: 0c                         ; RET
;
09a5: 18 23 f5 00 00             ; DICTP # (f523)
09aa: 0b 5e 00 00 00             ; CALL BASE (005e)
09af: 02                         ; FETCH
09b0: 29                         ; SLASHMOD
09b1: 04                         ; SWAP
09b2: 0e 30                      ; CLITERAL 48
09b4: 11                         ; ADD
09b5: 06                         ; DUP
09b6: 0e 39                      ; CLITERAL 57
09b8: 17                         ; GT
09b9: 5b 04                      ; BRANCHFZ 4 (09be)
09bb: 0e 07                      ; CLITERAL 7
09bd: 11                         ; ADD
09be: 0b a9 00 00 00             ; CALL #LEN (00a9)
09c3: 06                         ; DUP
09c4: 02                         ; FETCH
09c5: 2c                         ; INC
09c6: 04                         ; SWAP
09c7: 03                         ; STORE
09c8: 04                         ; SWAP
09c9: 0c                         ; RET
;
09ca: 18 16 f5 00 00             ; DICTP #S (f516)
09cf: 0b a5 09 00 00             ; CALL # (09a5)
09d4: 06                         ; DUP
09d5: 2a                         ; NOT
09d6: 5e 08                      ; BRANCHBZ 8 (09cf)
09d8: 0c                         ; RET
;
09d9: 18 09 f5 00 00             ; DICTP #> (f509)
09de: 0c                         ; RET
;
09df: 18 fb f4 00 00             ; DICTP #P- (f4fb)
09e4: 05                         ; DROP
09e5: 0b 9a 00 00 00             ; CALL #NEG (009a)
09ea: 02                         ; FETCH
09eb: 5b 04                      ; BRANCHFZ 4 (09f0)
09ed: 0e 2d                      ; CLITERAL 45
09ef: 19                         ; EMIT
09f0: 0c                         ; RET
;
09f1: 18 ee f4 00 00             ; DICTP #P (f4ee)
09f6: 0b df 09 00 00             ; CALL #P- (09df)
09fb: 19                         ; EMIT
09fc: 06                         ; DUP
09fd: 2a                         ; NOT
09fe: 5e 04                      ; BRANCHBZ 4 (09fb)
0a00: 05                         ; DROP
0a01: 0c                         ; RET
;
0a02: 18 e0 f4 00 00             ; DICTP (.) (f4e0)
0a07: 0b 73 09 00 00             ; CALL <# (0973)
0a0c: 0b ca 09 00 00             ; CALL #S (09ca)
0a11: 0b d9 09 00 00             ; CALL #> (09d9)
0a16: 0b f1 09 00 00             ; CALL #P (09f1)
0a1b: 0c                         ; RET
;
0a1c: 18 d4 f4 00 00             ; DICTP . (f4d4)
0a21: 0b 02 0a 00 00             ; CALL (.) (0a02)
0a26: 0e 20                      ; CLITERAL 32
0a28: 19                         ; EMIT
0a29: 0c                         ; RET
;
0a2a: 18 c7 f4 00 00             ; DICTP .2 (f4c7)
0a2f: 0b 73 09 00 00             ; CALL <# (0973)
0a34: 0b a5 09 00 00             ; CALL # (09a5)
0a39: 0b a5 09 00 00             ; CALL # (09a5)
0a3e: 0b d9 09 00 00             ; CALL #> (09d9)
0a43: 0b f1 09 00 00             ; CALL #P (09f1)
0a48: 0c                         ; RET
;
0a49: 18 ba f4 00 00             ; DICTP .3 (f4ba)
0a4e: 0b 73 09 00 00             ; CALL <# (0973)
0a53: 0b a5 09 00 00             ; CALL # (09a5)
0a58: 0b a5 09 00 00             ; CALL # (09a5)
0a5d: 0b a5 09 00 00             ; CALL # (09a5)
0a62: 0b d9 09 00 00             ; CALL #> (09d9)
0a67: 0b f1 09 00 00             ; CALL #P (09f1)
0a6c: 0c                         ; RET
;
0a6d: 18 ad f4 00 00             ; DICTP .4 (f4ad)
0a72: 0b 73 09 00 00             ; CALL <# (0973)
0a77: 0b a5 09 00 00             ; CALL # (09a5)
0a7c: 0b a5 09 00 00             ; CALL # (09a5)
0a81: 0b a5 09 00 00             ; CALL # (09a5)
0a86: 0b a5 09 00 00             ; CALL # (09a5)
0a8b: 0b d9 09 00 00             ; CALL #> (09d9)
0a90: 0b f1 09 00 00             ; CALL #P (09f1)
0a95: 0c                         ; RET
;
0a96: 18 9e f4 00 00             ; DICTP HEX. (f49e)
0a9b: 0b 5e 00 00 00             ; CALL BASE (005e)
0aa0: 02                         ; FETCH
0aa1: 04                         ; SWAP
0aa2: 0b aa 03 00 00             ; CALL HEX (03aa)
0aa7: 0b 02 0a 00 00             ; CALL (.) (0a02)
0aac: 0b 5e 00 00 00             ; CALL BASE (005e)
0ab1: 03                         ; STORE
0ab2: 0c                         ; RET
;
0ab3: 18 8e f4 00 00             ; DICTP HEX.2 (f48e)
0ab8: 0b 5e 00 00 00             ; CALL BASE (005e)
0abd: 02                         ; FETCH
0abe: 04                         ; SWAP
0abf: 0b aa 03 00 00             ; CALL HEX (03aa)
0ac4: 0b 2a 0a 00 00             ; CALL .2 (0a2a)
0ac9: 0b 5e 00 00 00             ; CALL BASE (005e)
0ace: 03                         ; STORE
0acf: 0c                         ; RET
;
0ad0: 18 7e f4 00 00             ; DICTP HEX.4 (f47e)
0ad5: 0b 5e 00 00 00             ; CALL BASE (005e)
0ada: 02                         ; FETCH
0adb: 04                         ; SWAP
0adc: 0b aa 03 00 00             ; CALL HEX (03aa)
0ae1: 0b 6d 0a 00 00             ; CALL .4 (0a6d)
0ae6: 0b 5e 00 00 00             ; CALL BASE (005e)
0aeb: 03                         ; STORE
0aec: 0c                         ; RET
;
0aed: 18 6b f4 00 00             ; DICTP DECIMAL. (f46b)
0af2: 0b 5e 00 00 00             ; CALL BASE (005e)
0af7: 02                         ; FETCH
0af8: 04                         ; SWAP
0af9: 0b b8 03 00 00             ; CALL DECIMAL (03b8)
0afe: 0b 02 0a 00 00             ; CALL (.) (0a02)
0b03: 0b 5e 00 00 00             ; CALL BASE (005e)
0b08: 03                         ; STORE
0b09: 0c                         ; RET
;
0b0a: 18 57 f4 00 00             ; DICTP DECIMAL.3 (f457)
0b0f: 0b 5e 00 00 00             ; CALL BASE (005e)
0b14: 02                         ; FETCH
0b15: 04                         ; SWAP
0b16: 0b b8 03 00 00             ; CALL DECIMAL (03b8)
0b1b: 0b 49 0a 00 00             ; CALL .3 (0a49)
0b20: 0b 5e 00 00 00             ; CALL BASE (005e)
0b25: 03                         ; STORE
0b26: 0c                         ; RET
;
0b27: 18 45 f4 00 00             ; DICTP BINARY. (f445)
0b2c: 0b 5e 00 00 00             ; CALL BASE (005e)
0b31: 02                         ; FETCH
0b32: 04                         ; SWAP
0b33: 0b d4 03 00 00             ; CALL BINARY (03d4)
0b38: 0b 02 0a 00 00             ; CALL (.) (0a02)
0b3d: 0b 5e 00 00 00             ; CALL BASE (005e)
0b42: 03                         ; STORE
0b43: 0c                         ; RET
;
0b44: 18 37 f4 00 00             ; DICTP MIN (f437)
0b49: 1a                         ; OVER
0b4a: 1a                         ; OVER
0b4b: 17                         ; GT
0b4c: 5b 02                      ; BRANCHFZ 2 (0b4f)
0b4e: 04                         ; SWAP
0b4f: 05                         ; DROP
0b50: 0c                         ; RET
;
0b51: 18 29 f4 00 00             ; DICTP MAX (f429)
0b56: 1a                         ; OVER
0b57: 1a                         ; OVER
0b58: 15                         ; LT
0b59: 5b 02                      ; BRANCHFZ 2 (0b5c)
0b5b: 04                         ; SWAP
0b5c: 05                         ; DROP
0b5d: 0c                         ; RET
;
0b5e: 18 1c f4 00 00             ; DICTP .S (f41c)
0b63: 0e 20                      ; CLITERAL 32
0b65: 19                         ; EMIT
0b66: 26                         ; DEPTH
0b67: 0e 00                      ; CLITERAL 0
0b69: 15                         ; LT
0b6a: 5b 1f                      ; BRANCHFZ 31 (0b8a)
0b6c: 07 10 53 74 61 63 6b 20 75 6e 64 65 72 66 6c 6f 77 21 00 ; SLITERAL (0b6d) [Stack underflow!]
0b7f: 0b 17 06 00 00             ; CALL COUNT (0617)
0b84: 0b 21 06 00 00             ; CALL TYPE (0621)
0b89: fe                         ; RESET
0b8a: 26                         ; DEPTH
0b8b: 0e 00                      ; CLITERAL 0
0b8d: 16                         ; EQ
0b8e: 5b 0b                      ; BRANCHFZ 11 (0b9a)
0b90: 0e 28                      ; CLITERAL 40
0b92: 19                         ; EMIT
0b93: 0e ed                      ; CLITERAL 237
0b95: 19                         ; EMIT
0b96: 0e 29                      ; CLITERAL 41
0b98: 19                         ; EMIT
0b99: 0c                         ; RET
0b9a: 0e 28                      ; CLITERAL 40
0b9c: 19                         ; EMIT
0b9d: 0e 20                      ; CLITERAL 32
0b9f: 19                         ; EMIT
0ba0: 26                         ; DEPTH
0ba1: 2e                         ; DEC
0ba2: 21                         ; DTOR
0ba3: 2b                         ; RFETCH
0ba4: 25                         ; PICK
0ba5: 0b 1c 0a 00 00             ; CALL . (0a1c)
0baa: 2b                         ; RFETCH
0bab: 5b 06                      ; BRANCHFZ 6 (0bb2)
0bad: 22                         ; RTOD
0bae: 2e                         ; DEC
0baf: 21                         ; DTOR
0bb0: 5a 07                      ; BRANCHF 7 (0bb8)
0bb2: 22                         ; RTOD
0bb3: 05                         ; DROP
0bb4: 0e 29                      ; CLITERAL 41
0bb6: 19                         ; EMIT
0bb7: 0c                         ; RET
0bb8: 5d 16                      ; BRANCHB 22 (0ba3)
0bba: 0c                         ; RET
;
0bbb: 18 08 f4 00 00             ; DICTP .(MEM_SZ) (f408)
0bc0: 07 08 4d 65 6d 6f 72 79 3a 20 00 ; SLITERAL (0bc1) [Memory: ]
0bcb: 0b 37 06 00 00             ; CALL CT (0637)
0bd0: 0b e5 04 00 00             ; CALL MEM_SZ (04e5)
0bd5: 06                         ; DUP
0bd6: 0b 96 0a 00 00             ; CALL HEX. (0a96)
0bdb: 07 02 20 28 00             ; SLITERAL (0bdc) [ (]
0be0: 0b 37 06 00 00             ; CALL CT (0637)
0be5: 0b 02 0a 00 00             ; CALL (.) (0a02)
0bea: 07 01 29 00                ; SLITERAL (0beb) [)]
0bee: 0b 37 06 00 00             ; CALL CT (0637)
0bf3: 0c                         ; RET
;
0bf4: 18 f6 f3 00 00             ; DICTP .(HERE) (f3f6)
0bf9: 07 06 48 45 52 45 3a 20 00 ; SLITERAL (0bfa) [HERE: ]
0c02: 0b 37 06 00 00             ; CALL CT (0637)
0c07: 0b fd 00 00 00             ; CALL HERE (00fd)
0c0c: 06                         ; DUP
0c0d: 0b 96 0a 00 00             ; CALL HEX. (0a96)
0c12: 07 02 20 28 00             ; SLITERAL (0c13) [ (]
0c17: 0b 37 06 00 00             ; CALL CT (0637)
0c1c: 0b 02 0a 00 00             ; CALL (.) (0a02)
0c21: 07 01 29 00                ; SLITERAL (0c22) [)]
0c25: 0b 37 06 00 00             ; CALL CT (0637)
0c2a: 0c                         ; RET
;
0c2b: 18 e4 f3 00 00             ; DICTP .(LAST) (f3e4)
0c30: 07 06 4c 41 53 54 3a 20 00 ; SLITERAL (0c31) [LAST: ]
0c39: 0b 37 06 00 00             ; CALL CT (0637)
0c3e: 0b 09 01 00 00             ; CALL LAST (0109)
0c43: 06                         ; DUP
0c44: 0b 96 0a 00 00             ; CALL HEX. (0a96)
0c49: 07 02 20 28 00             ; SLITERAL (0c4a) [ (]
0c4e: 0b 37 06 00 00             ; CALL CT (0637)
0c53: 0b 02 0a 00 00             ; CALL (.) (0a02)
0c58: 07 01 29 00                ; SLITERAL (0c59) [)]
0c5c: 0b 37 06 00 00             ; CALL CT (0637)
0c61: 0c                         ; RET
;
0c62: 18 ce f3 00 00             ; DICTP .WORD-SHORT (f3ce)
0c67: 06                         ; DUP
0c68: 0b 2a 07 00 00             ; CALL DICT>NAME (072a)
0c6d: 0b 37 06 00 00             ; CALL CT (0637)
0c72: 0e 20                      ; CLITERAL 32
0c74: 19                         ; EMIT
0c75: 02                         ; FETCH
0c76: 0c                         ; RET
;
0c77: 18 be f3 00 00             ; DICTP WORDS (f3be)
0c7c: 0b 09 01 00 00             ; CALL LAST (0109)
0c81: 06                         ; DUP
0c82: 02                         ; FETCH
0c83: 2a                         ; NOT
0c84: 5b 09                      ; BRANCHFZ 9 (0c8e)
0c86: 05                         ; DROP
0c87: 0e 0d                      ; CLITERAL 13
0c89: 19                         ; EMIT
0c8a: 0e 0a                      ; CLITERAL 10
0c8c: 19                         ; EMIT
0c8d: 0c                         ; RET
0c8e: 0b 62 0c 00 00             ; CALL .WORD-SHORT (0c62)
0c93: 5d 13                      ; BRANCHB 19 (0c81)
0c95: 0c                         ; RET
;
0c96: 18 a9 f3 00 00             ; DICTP .WORD-LONG (f3a9)
0c9b: 06                         ; DUP
0c9c: 0b 96 0a 00 00             ; CALL HEX. (0a96)
0ca1: 0e 3a                      ; CLITERAL 58
0ca3: 19                         ; EMIT
0ca4: 0e 20                      ; CLITERAL 32
0ca6: 19                         ; EMIT
0ca7: 06                         ; DUP
0ca8: 0b 2a 07 00 00             ; CALL DICT>NAME (072a)
0cad: 0b 37 06 00 00             ; CALL CT (0637)
0cb2: 0e 20                      ; CLITERAL 32
0cb4: 19                         ; EMIT
0cb5: 06                         ; DUP
0cb6: 0b 5e 07 00 00             ; CALL DICT.GetXT (075e)
0cbb: 0e 28                      ; CLITERAL 40
0cbd: 19                         ; EMIT
0cbe: 0b d0 0a 00 00             ; CALL HEX.4 (0ad0)
0cc3: 0e 29                      ; CLITERAL 41
0cc5: 19                         ; EMIT
0cc6: 06                         ; DUP
0cc7: 0b 1e 07 00 00             ; CALL DICT>FLAGS (071e)
0ccc: 0f                         ; CFETCH
0ccd: 06                         ; DUP
0cce: 07 09 2c 20 46 6c 61 67 73 3a 20 00 ; SLITERAL (0ccf) [, Flags: ]
0cda: 0b 37 06 00 00             ; CALL CT (0637)
0cdf: 0b b3 0a 00 00             ; CALL HEX.2 (0ab3)
0ce4: 06                         ; DUP
0ce5: 0b 9f 07 00 00             ; CALL FLAGS.ISINLINE? (079f)
0cea: 5b 12                      ; BRANCHFZ 18 (0cfd)
0cec: 07 09 20 28 49 4e 4c 49 4e 45 29 00 ; SLITERAL (0ced) [ (INLINE)]
0cf8: 0b 37 06 00 00             ; CALL CT (0637)
0cfd: 0b 96 07 00 00             ; CALL FLAGS.ISIMMEDIATE? (0796)
0d02: 5b 15                      ; BRANCHFZ 21 (0d18)
0d04: 07 0c 20 28 49 4d 4d 45 44 49 41 54 45 29 00 ; SLITERAL (0d05) [ (IMMEDIATE)]
0d13: 0b 37 06 00 00             ; CALL CT (0637)
0d18: 0e 0d                      ; CLITERAL 13
0d1a: 19                         ; EMIT
0d1b: 0e 0a                      ; CLITERAL 10
0d1d: 19                         ; EMIT
0d1e: 02                         ; FETCH
0d1f: 0c                         ; RET
;
0d20: 18 98 f3 00 00             ; DICTP WORDSV (f398)
0d25: 0b 2b 0c 00 00             ; CALL .(LAST) (0c2b)
0d2a: 0e 0d                      ; CLITERAL 13
0d2c: 19                         ; EMIT
0d2d: 0e 0a                      ; CLITERAL 10
0d2f: 19                         ; EMIT
0d30: 0b 09 01 00 00             ; CALL LAST (0109)
0d35: 06                         ; DUP
0d36: 02                         ; FETCH
0d37: 2a                         ; NOT
0d38: 5b 09                      ; BRANCHFZ 9 (0d42)
0d3a: 05                         ; DROP
0d3b: 0e 0d                      ; CLITERAL 13
0d3d: 19                         ; EMIT
0d3e: 0e 0a                      ; CLITERAL 10
0d40: 19                         ; EMIT
0d41: 0c                         ; RET
0d42: 0b 96 0c 00 00             ; CALL .WORD-LONG (0c96)
0d47: 5d 13                      ; BRANCHB 19 (0d35)
0d49: 0c                         ; RET
;
0d4a: 18 84 f3 00 00             ; DICTP NUM-WORDS (f384)
0d4f: 0e 00                      ; CLITERAL 0
0d51: 21                         ; DTOR
0d52: 0b 09 01 00 00             ; CALL LAST (0109)
0d57: 06                         ; DUP
0d58: 02                         ; FETCH
0d59: 2a                         ; NOT
0d5a: 5b 0a                      ; BRANCHFZ 10 (0d65)
0d5c: 05                         ; DROP
0d5d: 22                         ; RTOD
0d5e: 0e 0d                      ; CLITERAL 13
0d60: 19                         ; EMIT
0d61: 0e 0a                      ; CLITERAL 10
0d63: 19                         ; EMIT
0d64: 0c                         ; RET
0d65: 22                         ; RTOD
0d66: 2c                         ; INC
0d67: 21                         ; DTOR
0d68: 02                         ; FETCH
0d69: 5d 13                      ; BRANCHB 19 (0d57)
0d6b: 0c                         ; RET
;
0d6c: 18 73 f3 00 00             ; DICTP .lastx (f373)
0d71: 0e 0d                      ; CLITERAL 13
0d73: 19                         ; EMIT
0d74: 0e 0a                      ; CLITERAL 10
0d76: 19                         ; EMIT
0d77: 0b 09 01 00 00             ; CALL LAST (0109)
0d7c: 04                         ; SWAP
0d7d: 04                         ; SWAP
0d7e: 0b 96 0c 00 00             ; CALL .WORD-LONG (0c96)
0d83: 04                         ; SWAP
0d84: 2e                         ; DEC
0d85: 06                         ; DUP
0d86: 5f 0a                      ; BRANCHBNZ 10 (0d7d)
0d88: 05                         ; DROP
0d89: 05                         ; DROP
0d8a: 0c                         ; RET
;
0d8b: 18 61 f3 00 00             ; DICTP EXECUTE (f361)
0d90: 22                         ; RTOD
0d91: 05                         ; DROP
0d92: 21                         ; DTOR
0d93: 0c                         ; RET
;
0d94: 18 4e f3 00 00             ; DICTP find.ret (f34e)
0d99: 06                         ; DUP
0d9a: 0f                         ; CFETCH
0d9b: 0e 0c                      ; CLITERAL 12
0d9d: 16                         ; EQ
0d9e: 5b 02                      ; BRANCHFZ 2 (0da1)
0da0: 0c                         ; RET
0da1: 2c                         ; INC
0da2: 5d 0a                      ; BRANCHB 10 (0d99)
0da4: 0c                         ; RET
;
0da5: 18 3b f3 00 00             ; DICTP (inline) (f33b)
0daa: 1a                         ; OVER
0dab: 1a                         ; OVER
0dac: 15                         ; LT
0dad: 5b 02                      ; BRANCHFZ 2 (0db0)
0daf: 04                         ; SWAP
0db0: 06                         ; DUP
0db1: 0f                         ; CFETCH
0db2: 0b 15 01 00 00             ; CALL C, (0115)
0db7: 2c                         ; INC
0db8: 1a                         ; OVER
0db9: 1a                         ; OVER
0dba: 17                         ; GT
0dbb: 5f 0c                      ; BRANCHBNZ 12 (0db0)
0dbd: 05                         ; DROP
0dbe: 05                         ; DROP
0dbf: 0c                         ; RET
;
0dc0: 18 2b f3 00 00             ; DICTP DOES> (f32b)
0dc5: 22                         ; RTOD
0dc6: 06                         ; DUP
0dc7: 0b 94 0d 00 00             ; CALL find.ret (0d94)
0dcc: 06                         ; DUP
0dcd: 21                         ; DTOR
0dce: 2c                         ; INC
0dcf: 0b a5 0d 00 00             ; CALL (inline) (0da5)
0dd4: 0c                         ; RET
;
0dd5: 18 15 f3 00 00             ; DICTP Copy.INLINE (f315)
0dda: 06                         ; DUP
0ddb: 0f                         ; CFETCH
0ddc: 0e 18                      ; CLITERAL 24
0dde: 16                         ; EQ
0ddf: 5b 05                      ; BRANCHFZ 5 (0de5)
0de1: 2c                         ; INC
0de2: 0e 04                      ; CLITERAL 4
0de4: 11                         ; ADD
0de5: 06                         ; DUP
0de6: 0b 94 0d 00 00             ; CALL find.ret (0d94)
0deb: 0b a5 0d 00 00             ; CALL (inline) (0da5)
0df0: 0c                         ; RET
;
0df1: 18 04 f3 00 00             ; DICTP strlen (f304)
0df6: 0e 00                      ; CLITERAL 0
0df8: 04                         ; SWAP
0df9: 04                         ; SWAP
0dfa: 1a                         ; OVER
0dfb: 0f                         ; CFETCH
0dfc: 06                         ; DUP
0dfd: 5b 07                      ; BRANCHFZ 7 (0e05)
0dff: 05                         ; DROP
0e00: 2c                         ; INC
0e01: 04                         ; SWAP
0e02: 2c                         ; INC
0e03: 0e 01                      ; CLITERAL 1
0e05: 5f 0d                      ; BRANCHBNZ 13 (0df9)
0e07: 04                         ; SWAP
0e08: 05                         ; DROP
0e09: 0c                         ; RET
;
0e0a: 18 f4 f2 00 00             ; DICTP cstr, (f2f4)
0e0f: 06                         ; DUP
0e10: 0f                         ; CFETCH
0e11: 1a                         ; OVER
0e12: 11                         ; ADD
0e13: 2c                         ; INC
0e14: 2c                         ; INC
0e15: 0b a5 0d 00 00             ; CALL (inline) (0da5)
0e1a: 0c                         ; RET
;
0e1b: 18 e0 f2 00 00             ; DICTP [COMPILE] (f2e0)
0e20: 0b 9f 07 00 00             ; CALL FLAGS.ISINLINE? (079f)
0e25: 5b 08                      ; BRANCHFZ 8 (0e2e)
0e27: 0b d5 0d 00 00             ; CALL Copy.INLINE (0dd5)
0e2c: 5a 0b                      ; BRANCHF 11 (0e38)
0e2e: 0b c7 01 00 00             ; CALL CALL (01c7)
0e33: 0b 2d 01 00 00             ; CALL , (012d)
0e38: 0c                         ; RET
;
0e39: 18 ca f2 00 00             ; DICTP executeWord (f2ca)
0e3e: 21                         ; DTOR
0e3f: 2b                         ; RFETCH
0e40: 0b c8 07 00 00             ; CALL findInDict (07c8)
0e45: 5b 29                      ; BRANCHFZ 41 (0e6f)
0e47: 22                         ; RTOD
0e48: 05                         ; DROP
0e49: 0b f6 03 00 00             ; CALL ?COMPILING (03f6)
0e4e: 5b 18                      ; BRANCHFZ 24 (0e67)
0e50: 06                         ; DUP
0e51: 0b 96 07 00 00             ; CALL FLAGS.ISIMMEDIATE? (0796)
0e56: 5b 09                      ; BRANCHFZ 9 (0e60)
0e58: 05                         ; DROP
0e59: 0b 8b 0d 00 00             ; CALL EXECUTE (0d8b)
0e5e: 5a 06                      ; BRANCHF 6 (0e65)
0e60: 0b 1b 0e 00 00             ; CALL [COMPILE] (0e1b)
0e65: 5a 07                      ; BRANCHF 7 (0e6d)
0e67: 05                         ; DROP
0e68: 0b 8b 0d 00 00             ; CALL EXECUTE (0d8b)
0e6d: 5a 46                      ; BRANCHF 70 (0eb4)
0e6f: 05                         ; DROP
0e70: 05                         ; DROP
0e71: 2b                         ; RFETCH
0e72: 0b f8 08 00 00             ; CALL isNumber? (08f8)
0e77: 5b 2e                      ; BRANCHFZ 46 (0ea6)
0e79: 0b f6 03 00 00             ; CALL ?COMPILING (03f6)
0e7e: 5b 25                      ; BRANCHFZ 37 (0ea4)
0e80: 06                         ; DUP
0e81: 0e 00                      ; CLITERAL 0
0e83: 0e ff                      ; CLITERAL 255
0e85: 0b bc 06 00 00             ; CALL BETWEEN (06bc)
0e8a: 5b 0f                      ; BRANCHFZ 15 (0e9a)
0e8c: 0e 0e                      ; CLITERAL 14
0e8e: 0b 15 01 00 00             ; CALL C, (0115)
0e93: 0b 15 01 00 00             ; CALL C, (0115)
0e98: 5a 0b                      ; BRANCHF 11 (0ea4)
0e9a: 0b 63 01 00 00             ; CALL LITERAL (0163)
0e9f: 0b 2d 01 00 00             ; CALL , (012d)
0ea4: 5a 0d                      ; BRANCHF 13 (0eb2)
0ea6: 05                         ; DROP
0ea7: 07 02 3f 3f 00             ; SLITERAL (0ea8) [??]
0eac: 0b 37 06 00 00             ; CALL CT (0637)
0eb1: fe                         ; RESET
0eb2: 22                         ; RTOD
0eb3: 05                         ; DROP
0eb4: 0c                         ; RET
;
0eb5: 18 b3 f2 00 00             ; DICTP executeInput (f2b3)
0eba: 0b 8b 00 00 00             ; CALL >IN (008b)
0ebf: 02                         ; FETCH
0ec0: 0b cf 06 00 00             ; CALL skipWS (06cf)
0ec5: 0b 8b 00 00 00             ; CALL >IN (008b)
0eca: 03                         ; STORE
0ecb: 0b 8b 00 00 00             ; CALL >IN (008b)
0ed0: 02                         ; FETCH
0ed1: 0f                         ; CFETCH
0ed2: 5b 19                      ; BRANCHFZ 25 (0eec)
0ed4: 0b 8b 00 00 00             ; CALL >IN (008b)
0ed9: 02                         ; FETCH
0eda: 0b e9 06 00 00             ; CALL getOneWord (06e9)
0edf: 0b 8b 00 00 00             ; CALL >IN (008b)
0ee4: 03                         ; STORE
0ee5: 0b 39 0e 00 00             ; CALL executeWord (0e39)
0eea: 5a 02                      ; BRANCHF 2 (0eed)
0eec: 0c                         ; RET
0eed: 5d 34                      ; BRANCHB 52 (0eba)
0eef: 0c                         ; RET
;
0ef0: 18 a5 f2 00 00             ; DICTP Pad (f2a5)
0ef5: 0b 09 01 00 00             ; CALL LAST (0109)
0efa: 0e c8                      ; CLITERAL 200
0efc: 12                         ; SUB
0efd: 06                         ; DUP
0efe: 0b fd 00 00 00             ; CALL HERE (00fd)
0f03: 15                         ; LT
0f04: 5b 13                      ; BRANCHFZ 19 (0f18)
0f06: 07 0e 4f 75 74 20 6f 66 20 4d 65 6d 6f 72 79 21 00 ; SLITERAL (0f07) [Out of Memory!]
0f17: fe                         ; RESET
0f18: 0c                         ; RET
;
0f19: 18 93 f2 00 00             ; DICTP getLine (f293)
0f1e: 0e 00                      ; CLITERAL 0
0f20: 0b f0 0e 00 00             ; CALL Pad (0ef0)
0f25: 06                         ; DUP
0f26: 2c                         ; INC
0f27: 0b 8b 00 00 00             ; CALL >IN (008b)
0f2c: 03                         ; STORE
0f2d: 10                         ; CSTORE
0f2e: 0e 00                      ; CLITERAL 0
0f30: 0b 8b 00 00 00             ; CALL >IN (008b)
0f35: 02                         ; FETCH
0f36: 10                         ; CSTORE
0f37: 27                         ; GETCH
0f38: 06                         ; DUP
0f39: 0e 0d                      ; CLITERAL 13
0f3b: 16                         ; EQ
0f3c: 5b 0b                      ; BRANCHFZ 11 (0f48)
0f3e: 05                         ; DROP
0f3f: 0b f0 0e 00 00             ; CALL Pad (0ef0)
0f44: 0e 20                      ; CLITERAL 32
0f46: 19                         ; EMIT
0f47: 0c                         ; RET
0f48: 06                         ; DUP
0f49: 0e 09                      ; CLITERAL 9
0f4b: 16                         ; EQ
0f4c: 5b 04                      ; BRANCHFZ 4 (0f51)
0f4e: 05                         ; DROP
0f4f: 0e 20                      ; CLITERAL 32
0f51: 06                         ; DUP
0f52: 0e 03                      ; CLITERAL 3
0f54: 16                         ; EQ
0f55: 5b 02                      ; BRANCHFZ 2 (0f58)
0f57: ff                         ; BYE
0f58: 06                         ; DUP
0f59: 0e 08                      ; CLITERAL 8
0f5b: 16                         ; EQ
0f5c: 5b 2b                      ; BRANCHFZ 43 (0f88)
0f5e: 0b f0 0e 00 00             ; CALL Pad (0ef0)
0f63: 0f                         ; CFETCH
0f64: 0e 00                      ; CLITERAL 0
0f66: 17                         ; GT
0f67: 5b 1d                      ; BRANCHFZ 29 (0f85)
0f69: 0b f0 0e 00 00             ; CALL Pad (0ef0)
0f6e: 06                         ; DUP
0f6f: 0f                         ; CFETCH
0f70: 2e                         ; DEC
0f71: 04                         ; SWAP
0f72: 10                         ; CSTORE
0f73: 0b 8b 00 00 00             ; CALL >IN (008b)
0f78: 06                         ; DUP
0f79: 02                         ; FETCH
0f7a: 2e                         ; DEC
0f7b: 04                         ; SWAP
0f7c: 03                         ; STORE
0f7d: 06                         ; DUP
0f7e: 19                         ; EMIT
0f7f: 0e 20                      ; CLITERAL 32
0f81: 19                         ; EMIT
0f82: 19                         ; EMIT
0f83: 5a 02                      ; BRANCHF 2 (0f86)
0f85: 05                         ; DROP
0f86: 5a 2d                      ; BRANCHF 45 (0fb4)
0f88: 06                         ; DUP
0f89: 0e 20                      ; CLITERAL 32
0f8b: 0e 7f                      ; CLITERAL 127
0f8d: 0b bc 06 00 00             ; CALL BETWEEN (06bc)
0f92: 5b 20                      ; BRANCHFZ 32 (0fb3)
0f94: 06                         ; DUP
0f95: 19                         ; EMIT
0f96: 0b 8b 00 00 00             ; CALL >IN (008b)
0f9b: 02                         ; FETCH
0f9c: 10                         ; CSTORE
0f9d: 0b 8b 00 00 00             ; CALL >IN (008b)
0fa2: 06                         ; DUP
0fa3: 02                         ; FETCH
0fa4: 2c                         ; INC
0fa5: 04                         ; SWAP
0fa6: 03                         ; STORE
0fa7: 0b f0 0e 00 00             ; CALL Pad (0ef0)
0fac: 06                         ; DUP
0fad: 0f                         ; CFETCH
0fae: 2c                         ; INC
0faf: 04                         ; SWAP
0fb0: 10                         ; CSTORE
0fb1: 5a 02                      ; BRANCHF 2 (0fb4)
0fb3: 05                         ; DROP
0fb4: 5d 87                      ; BRANCHB 135 (0f2e)
0fb6: 0c                         ; RET
;
0fb7: 18 80 f2 00 00             ; DICTP strcpy2c (f280)
0fbc: 06                         ; DUP
0fbd: 21                         ; DTOR
0fbe: 0e 00                      ; CLITERAL 0
0fc0: 1a                         ; OVER
0fc1: 10                         ; CSTORE
0fc2: 2c                         ; INC
0fc3: 04                         ; SWAP
0fc4: 06                         ; DUP
0fc5: 0f                         ; CFETCH
0fc6: 06                         ; DUP
0fc7: 5b 11                      ; BRANCHFZ 17 (0fd9)
0fc9: 0e 02                      ; CLITERAL 2
0fcb: 25                         ; PICK
0fcc: 10                         ; CSTORE
0fcd: 04                         ; SWAP
0fce: 2c                         ; INC
0fcf: 04                         ; SWAP
0fd0: 2c                         ; INC
0fd1: 2b                         ; RFETCH
0fd2: 06                         ; DUP
0fd3: 0f                         ; CFETCH
0fd4: 2c                         ; INC
0fd5: 04                         ; SWAP
0fd6: 10                         ; CSTORE
0fd7: 5a 0a                      ; BRANCHF 10 (0fe2)
0fd9: 21                         ; DTOR
0fda: 04                         ; SWAP
0fdb: 22                         ; RTOD
0fdc: 04                         ; SWAP
0fdd: 10                         ; CSTORE
0fde: 05                         ; DROP
0fdf: 22                         ; RTOD
0fe0: 05                         ; DROP
0fe1: 0c                         ; RET
0fe2: 5d 1f                      ; BRANCHB 31 (0fc4)
0fe4: 0c                         ; RET
;
0fe5: 18 6a f2 00 00             ; DICTP Define-Word (f26a)
0fea: 0b 09 01 00 00             ; CALL LAST (0109)
0fef: 1a                         ; OVER
0ff0: 0b f1 0d 00 00             ; CALL strlen (0df1)
0ff5: 0e 02                      ; CLITERAL 2
0ff7: 0e 04                      ; CLITERAL 4
0ff9: 13                         ; MUL
0ffa: 0e 03                      ; CLITERAL 3
0ffc: 11                         ; ADD
0ffd: 11                         ; ADD
0ffe: 12                         ; SUB
0fff: 06                         ; DUP
1000: 21                         ; DTOR
1001: 21                         ; DTOR
1002: 0b 09 01 00 00             ; CALL LAST (0109)
1007: 2b                         ; RFETCH
1008: 03                         ; STORE
1009: 22                         ; RTOD
100a: 0e 04                      ; CLITERAL 4
100c: 11                         ; ADD
100d: 21                         ; DTOR
100e: 0b fd 00 00 00             ; CALL HERE (00fd)
1013: 2b                         ; RFETCH
1014: 03                         ; STORE
1015: 22                         ; RTOD
1016: 0e 04                      ; CLITERAL 4
1018: 11                         ; ADD
1019: 21                         ; DTOR
101a: 0e 00                      ; CLITERAL 0
101c: 2b                         ; RFETCH
101d: 10                         ; CSTORE
101e: 22                         ; RTOD
101f: 2c                         ; INC
1020: 21                         ; DTOR
1021: 22                         ; RTOD
1022: 0b b7 0f 00 00             ; CALL strcpy2c (0fb7)
1027: 22                         ; RTOD
1028: 0b 4f 00 00 00             ; CALL (LAST) (004f)
102d: 03                         ; STORE
102e: 0c                         ; RET
;
102f: 18 54 f2 00 00             ; DICTP CREATE-NAME (f254)
1034: 0b 8b 00 00 00             ; CALL >IN (008b)
1039: 02                         ; FETCH
103a: 0b cf 06 00 00             ; CALL skipWS (06cf)
103f: 0b 8b 00 00 00             ; CALL >IN (008b)
1044: 03                         ; STORE
1045: 0b 8b 00 00 00             ; CALL >IN (008b)
104a: 02                         ; FETCH
104b: 0f                         ; CFETCH
104c: 5b 30                      ; BRANCHFZ 48 (107d)
104e: 0b 8b 00 00 00             ; CALL >IN (008b)
1053: 02                         ; FETCH
1054: 0b e9 06 00 00             ; CALL getOneWord (06e9)
1059: 0b 8b 00 00 00             ; CALL >IN (008b)
105e: 03                         ; STORE
105f: 06                         ; DUP
1060: 0f                         ; CFETCH
1061: 5b 19                      ; BRANCHFZ 25 (107b)
1063: 0b e5 0f 00 00             ; CALL Define-Word (0fe5)
1068: 0e 18                      ; CLITERAL 24
106a: 0b 15 01 00 00             ; CALL C, (0115)
106f: 0b 09 01 00 00             ; CALL LAST (0109)
1074: 0b 2d 01 00 00             ; CALL , (012d)
1079: 5a 03                      ; BRANCHF 3 (107d)
107b: 05                         ; DROP
107c: fe                         ; RESET
107d: 0c                         ; RET
;
107e: 18 48 f2 00 00             ; DICTP : (f248)
1083: 0b 2f 10 00 00             ; CALL CREATE-NAME (102f)
1088: 0b 6d 00 00 00             ; CALL STATE (006d)
108d: 0b e2 03 00 00             ; CALL ON (03e2)
1092: 0c                         ; RET
;
1093: 18 36 f2 00 00             ; DICTP :NONAME (f236)
1098: 0b fd 00 00 00             ; CALL HERE (00fd)
109d: 0b 6d 00 00 00             ; CALL STATE (006d)
10a2: 0b e2 03 00 00             ; CALL ON (03e2)
10a7: 0c                         ; RET
;
10a8: 18 2a f2 00 00             ; DICTP ; (f22a)
10ad: 0b d4 01 00 00             ; CALL RET (01d4)
10b2: 0b 6d 00 00 00             ; CALL STATE (006d)
10b7: 0b ec 03 00 00             ; CALL OFF (03ec)
10bc: 0c                         ; RET
;
10bd: 18 15 f2 00 00             ; DICTP ForgetLast (f215)
10c2: 0b 09 01 00 00             ; CALL LAST (0109)
10c7: 0e 04                      ; CLITERAL 4
10c9: 11                         ; ADD
10ca: 02                         ; FETCH
10cb: 0b 40 00 00 00             ; CALL (HERE) (0040)
10d0: 03                         ; STORE
10d1: 0b 09 01 00 00             ; CALL LAST (0109)
10d6: 02                         ; FETCH
10d7: 0b 4f 00 00 00             ; CALL (LAST) (004f)
10dc: 03                         ; STORE
10dd: 0c                         ; RET
;
10de: 18 00 f2 00 00             ; DICTP resetState (f200)
10e3: 0b f6 03 00 00             ; CALL ?COMPILING (03f6)
10e8: 5b 06                      ; BRANCHFZ 6 (10ef)
10ea: 0b bd 10 00 00             ; CALL ForgetLast (10bd)
10ef: 0b 6d 00 00 00             ; CALL STATE (006d)
10f4: 0b ec 03 00 00             ; CALL OFF (03ec)
10f9: 0b b8 03 00 00             ; CALL DECIMAL (03b8)
10fe: 0b b8 00 00 00             ; CALL INPUT-FP (00b8)
1103: 02                         ; FETCH
1104: 0b 24 05 00 00             ; CALL ?DUP (0524)
1109: 5b 0a                      ; BRANCHFZ 10 (1114)
110b: 20                         ; FCLOSE
110c: 0e 00                      ; CLITERAL 0
110e: 0b b8 00 00 00             ; CALL INPUT-FP (00b8)
1113: 03                         ; STORE
1114: 0c                         ; RET
;
1115: 18 f0 f1 00 00             ; DICTP ALLOT (f1f0)
111a: 0b fd 00 00 00             ; CALL HERE (00fd)
111f: 11                         ; ADD
1120: 0b 40 00 00 00             ; CALL (HERE) (0040)
1125: 03                         ; STORE
1126: 0c                         ; RET
;
1127: 18 e4 f1 00 00             ; DICTP ? (f1e4)
112c: 02                         ; FETCH
112d: 0b 1c 0a 00 00             ; CALL . (0a1c)
1132: 0c                         ; RET
;
1133: 18 d7 f1 00 00             ; DICTP C? (f1d7)
1138: 0f                         ; CFETCH
1139: 0b 1c 0a 00 00             ; CALL . (0a1c)
113e: 0c                         ; RET
;
113f: 18 c8 f1 00 00             ; DICTP FREE (f1c8)
1144: 0b 09 01 00 00             ; CALL LAST (0109)
1149: 0b fd 00 00 00             ; CALL HERE (00fd)
114e: 12                         ; SUB
114f: 0c                         ; RET
;
1150: 18 b8 f1 00 00             ; DICTP .FREE (f1b8)
1155: 0b 3f 11 00 00             ; CALL FREE (113f)
115a: 0b 02 0a 00 00             ; CALL (.) (0a02)
115f: 07 0c 20 62 79 74 65 73 20 66 72 65 65 2e 00 ; SLITERAL (1160) [ bytes free.]
116e: 0b 37 06 00 00             ; CALL CT (0637)
1173: 0c                         ; RET
;
1174: 18 a5 f1 00 00             ; DICTP mainLoop (f1a5)
1179: 0b de 10 00 00             ; CALL resetState (10de)
117e: 0b f6 03 00 00             ; CALL ?COMPILING (03f6)
1183: 2a                         ; NOT
1184: 5b 11                      ; BRANCHFZ 17 (1196)
1186: 07 03 20 4f 4b 00          ; SLITERAL (1187) [ OK]
118c: 0b 37 06 00 00             ; CALL CT (0637)
1191: 0b 5e 0b 00 00             ; CALL .S (0b5e)
1196: 0e 0d                      ; CLITERAL 13
1198: 19                         ; EMIT
1199: 0e 0a                      ; CLITERAL 10
119b: 19                         ; EMIT
119c: 0b 19 0f 00 00             ; CALL getLine (0f19)
11a1: 2c                         ; INC
11a2: 0b 8b 00 00 00             ; CALL >IN (008b)
11a7: 03                         ; STORE
11a8: 0b b5 0e 00 00             ; CALL executeInput (0eb5)
11ad: 0e 20                      ; CLITERAL 32
11af: 19                         ; EMIT
11b0: 5d 33                      ; BRANCHB 51 (117e)
11b2: 0c                         ; RET
;
11b3: 18 96 f1 00 00             ; DICTP main (f196)
11b8: 0b 6d 00 00 00             ; CALL STATE (006d)
11bd: 02                         ; FETCH
11be: 0e 63                      ; CLITERAL 99
11c0: 16                         ; EQ
11c1: 5b 19                      ; BRANCHFZ 25 (11db)
11c3: 0b 6d 00 00 00             ; CALL STATE (006d)
11c8: 0b ec 03 00 00             ; CALL OFF (03ec)
11cd: 07 06 48 65 6c 6c 6f 2e 00 ; SLITERAL (11ce) [Hello.]
11d6: 0b 37 06 00 00             ; CALL CT (0637)
11db: 0b 74 11 00 00             ; CALL mainLoop (1174)
11e0: 0c                         ; RET
;
11e1: 18 7f f1 00 00             ; DICTP file-getLine (f17f)
11e6: 0b f0 0e 00 00             ; CALL Pad (0ef0)
11eb: 04                         ; SWAP
11ec: 0e c8                      ; CLITERAL 200
11ee: 04                         ; SWAP
11ef: 1e                         ; FREADLINE
11f0: 0b f0 0e 00 00             ; CALL Pad (0ef0)
11f5: 04                         ; SWAP
11f6: 0c                         ; RET
;
11f7: 18 70 f1 00 00             ; DICTP load (f170)
11fc: 0e 00                      ; CLITERAL 0
11fe: 0e 00                      ; CLITERAL 0
1200: 1c                         ; FOPEN
1201: 2a                         ; NOT
1202: 5b 1b                      ; BRANCHFZ 27 (121e)
1204: 07 11 43 61 6e 6e 6f 74 20 6f 70 65 6e 20 66 69 6c 65 2e 00 ; SLITERAL (1205) [Cannot open file.]
1218: 0b 37 06 00 00             ; CALL CT (0637)
121d: 0c                         ; RET
121e: 0b b8 00 00 00             ; CALL INPUT-FP (00b8)
1223: 03                         ; STORE
1224: 0b b8 00 00 00             ; CALL INPUT-FP (00b8)
1229: 02                         ; FETCH
122a: 0b e1 11 00 00             ; CALL file-getLine (11e1)
122f: 5b 0f                      ; BRANCHFZ 15 (123f)
1231: 2c                         ; INC
1232: 0b 8b 00 00 00             ; CALL >IN (008b)
1237: 03                         ; STORE
1238: 0b b5 0e 00 00             ; CALL executeInput (0eb5)
123d: 5a 12                      ; BRANCHF 18 (1250)
123f: 05                         ; DROP
1240: 0b b8 00 00 00             ; CALL INPUT-FP (00b8)
1245: 02                         ; FETCH
1246: 20                         ; FCLOSE
1247: 0e 00                      ; CLITERAL 0
1249: 0b b8 00 00 00             ; CALL INPUT-FP (00b8)
124e: 03                         ; STORE
124f: 0c                         ; RET
1250: 5d 2d                      ; BRANCHB 45 (1224)
1252: 0c                         ; RET
;
1253: 18 5c f1 00 00             ; DICTP STR.EMPTY (f15c)
1258: 0e 00                      ; CLITERAL 0
125a: 1a                         ; OVER
125b: 03                         ; STORE
125c: 0c                         ; RET
;
125d: 18 4a f1 00 00             ; DICTP STR.LEN (f14a)
1262: 06                         ; DUP
1263: 0f                         ; CFETCH
1264: 0c                         ; RET
;
1265: 18 37 f1 00 00             ; DICTP STR.CATC (f137)
126a: 1a                         ; OVER
126b: 06                         ; DUP
126c: 06                         ; DUP
126d: 0f                         ; CFETCH
126e: 2c                         ; INC
126f: 04                         ; SWAP
1270: 10                         ; CSTORE
1271: 06                         ; DUP
1272: 0f                         ; CFETCH
1273: 11                         ; ADD
1274: 0e 00                      ; CLITERAL 0
1276: 1a                         ; OVER
1277: 2c                         ; INC
1278: 10                         ; CSTORE
1279: 10                         ; CSTORE
127a: 0c                         ; RET
;
127b: 18 20 f1 00 00             ; DICTP STR.NULLTERM (f120)
1280: 06                         ; DUP
1281: 06                         ; DUP
1282: 0f                         ; CFETCH
1283: 11                         ; ADD
1284: 2c                         ; INC
1285: 0e 00                      ; CLITERAL 0
1287: 04                         ; SWAP
1288: 10                         ; CSTORE
1289: 0c                         ; RET
;
128a: 18 13 f1 00 00             ; DICTP I" (f113)
128f: 0b fd 00 00 00             ; CALL HERE (00fd)
1294: 0e 64                      ; CLITERAL 100
1296: 11                         ; ADD
1297: 0e 00                      ; CLITERAL 0
1299: 1a                         ; OVER
129a: 03                         ; STORE
129b: 0b 8b 00 00 00             ; CALL >IN (008b)
12a0: 02                         ; FETCH
12a1: 0f                         ; CFETCH
12a2: 06                         ; DUP
12a3: 2a                         ; NOT
12a4: 5b 1d                      ; BRANCHFZ 29 (12c2)
12a6: 07 10 6d 69 73 73 69 6e 67 20 63 6c 6f 73 69 6e 67 20 00 ; SLITERAL (12a7) [missing closing ]
12b9: 0b 37 06 00 00             ; CALL CT (0637)
12be: 0e 22                      ; CLITERAL 34
12c0: 19                         ; EMIT
12c1: fe                         ; RESET
12c2: 0b 8b 00 00 00             ; CALL >IN (008b)
12c7: 06                         ; DUP
12c8: 02                         ; FETCH
12c9: 2c                         ; INC
12ca: 04                         ; SWAP
12cb: 03                         ; STORE
12cc: 06                         ; DUP
12cd: 0e 22                      ; CLITERAL 34
12cf: 16                         ; EQ
12d0: 5b 03                      ; BRANCHFZ 3 (12d4)
12d2: 05                         ; DROP
12d3: 0c                         ; RET
12d4: 0b 65 12 00 00             ; CALL STR.CATC (1265)
12d9: 5d 3f                      ; BRANCHB 63 (129b)
12db: 0c                         ; RET
;
12dc: 18 07 f1 00 00             ; DICTP " (f107)
12e1: 0b f6 03 00 00             ; CALL ?COMPILING (03f6)
12e6: 2a                         ; NOT
12e7: 5b 07                      ; BRANCHFZ 7 (12ef)
12e9: 0b 8a 12 00 00             ; CALL I" (128a)
12ee: 0c                         ; RET
12ef: 0b 93 01 00 00             ; CALL SLITERAL (0193)
12f4: 0b fd 00 00 00             ; CALL HERE (00fd)
12f9: 0e 00                      ; CLITERAL 0
12fb: 0b 15 01 00 00             ; CALL C, (0115)
1300: 0b 8b 00 00 00             ; CALL >IN (008b)
1305: 02                         ; FETCH
1306: 0f                         ; CFETCH
1307: 06                         ; DUP
1308: 2a                         ; NOT
1309: 5b 29                      ; BRANCHFZ 41 (1333)
130b: 05                         ; DROP
130c: 2e                         ; DEC
130d: 0b 40 00 00 00             ; CALL (HERE) (0040)
1312: 03                         ; STORE
1313: 07 11 6d 69 73 73 69 6e 67 20 63 6c 6f 73 69 6e 67 20 27 00 ; SLITERAL (1314) [missing closing ']
1327: 0b 37 06 00 00             ; CALL CT (0637)
132c: 0e 22                      ; CLITERAL 34
132e: 19                         ; EMIT
132f: 0e 27                      ; CLITERAL 39
1331: 19                         ; EMIT
1332: fe                         ; RESET
1333: 0b 8b 00 00 00             ; CALL >IN (008b)
1338: 06                         ; DUP
1339: 02                         ; FETCH
133a: 2c                         ; INC
133b: 04                         ; SWAP
133c: 03                         ; STORE
133d: 06                         ; DUP
133e: 0e 22                      ; CLITERAL 34
1340: 16                         ; EQ
1341: 5b 14                      ; BRANCHFZ 20 (1356)
1343: 05                         ; DROP
1344: 0b fd 00 00 00             ; CALL HERE (00fd)
1349: 0e 00                      ; CLITERAL 0
134b: 0b 15 01 00 00             ; CALL C, (0115)
1350: 1a                         ; OVER
1351: 12                         ; SUB
1352: 2e                         ; DEC
1353: 04                         ; SWAP
1354: 10                         ; CSTORE
1355: 0c                         ; RET
1356: 0b 15 01 00 00             ; CALL C, (0115)
135b: 5d 5c                      ; BRANCHB 92 (1300)
135d: 0c                         ; RET
;
135e: 18 fa f0 00 00             ; DICTP ll (f0fa)
1363: 07 08 6c 6f 61 64 73 2e 66 73 00 ; SLITERAL (1364) [loads.fs]
136e: 0b f7 11 00 00             ; CALL load (11f7)
1373: 0c                         ; RET
;
1374: 18 e7 f0 00 00             ; DICTP sys-info (f0e7)
1379: 0b bb 0b 00 00             ; CALL .(MEM_SZ) (0bbb)
137e: 0e 2c                      ; CLITERAL 44
1380: 19                         ; EMIT
1381: 0e 20                      ; CLITERAL 32
1383: 19                         ; EMIT
1384: 0b f4 0b 00 00             ; CALL .(HERE) (0bf4)
1389: 0e 2c                      ; CLITERAL 44
138b: 19                         ; EMIT
138c: 0e 20                      ; CLITERAL 32
138e: 19                         ; EMIT
138f: 0b 2b 0c 00 00             ; CALL .(LAST) (0c2b)
1394: 0e 2c                      ; CLITERAL 44
1396: 19                         ; EMIT
1397: 0e 20                      ; CLITERAL 32
1399: 19                         ; EMIT
139a: 0b 50 11 00 00             ; CALL .FREE (1150)
139f: 0e 0d                      ; CLITERAL 13
13a1: 19                         ; EMIT
13a2: 0e 0a                      ; CLITERAL 10
13a4: 19                         ; EMIT
13a5: 0c                         ; RET
;
13a6: 18 d4 f0 00 00             ; DICTP VARIABLE (f0d4)
13ab: 0b 2f 10 00 00             ; CALL CREATE-NAME (102f)
13b0: 0b fd 00 00 00             ; CALL HERE (00fd)
13b5: 0e 02                      ; CLITERAL 2
13b7: 11                         ; ADD
13b8: 0e 04                      ; CLITERAL 4
13ba: 11                         ; ADD
13bb: 0b 63 01 00 00             ; CALL LITERAL (0163)
13c0: 0b 2d 01 00 00             ; CALL , (012d)
13c5: 0b d4 01 00 00             ; CALL RET (01d4)
13ca: 0e 00                      ; CLITERAL 0
13cc: 0b 2d 01 00 00             ; CALL , (012d)
13d1: 0c                         ; RET
;
; End of code, Dictionary:
;
f0d4: e7 f0 00 00                ; VARIABLE - (next: f0e7 sys-info)
f0d8: a6 13 00 00 00             ; XT=13a6, flags=00
f0dd: 08 56 41 52 49 41 42 4c 45 00 ; 8, VARIABLE
;
f0e7: fa f0 00 00                ; sys-info - (next: f0fa ll)
f0eb: 74 13 00 00 00             ; XT=1374, flags=00
f0f0: 08 73 79 73 2d 69 6e 66 6f 00 ; 8, sys-info
;
f0fa: 07 f1 00 00                ; ll - (next: f107 ")
f0fe: 5e 13 00 00 00             ; XT=135e, flags=00
f103: 02 6c 6c 00                ; 2, ll
;
f107: 13 f1 00 00                ; " - (next: f113 I")
f10b: dc 12 00 00 01             ; XT=12dc, flags=01
f110: 01 22 00                   ; 1, "
;
f113: 20 f1 00 00                ; I" - (next: f120 STR.NULLTERM)
f117: 8a 12 00 00 00             ; XT=128a, flags=00
f11c: 02 49 22 00                ; 2, I"
;
f120: 37 f1 00 00                ; STR.NULLTERM - (next: f137 STR.CATC)
f124: 7b 12 00 00 00             ; XT=127b, flags=00
f129: 0c 53 54 52 2e 4e 55 4c 4c 54 45 52 4d 00 ; 12, STR.NULLTERM
;
f137: 4a f1 00 00                ; STR.CATC - (next: f14a STR.LEN)
f13b: 65 12 00 00 00             ; XT=1265, flags=00
f140: 08 53 54 52 2e 43 41 54 43 00 ; 8, STR.CATC
;
f14a: 5c f1 00 00                ; STR.LEN - (next: f15c STR.EMPTY)
f14e: 5d 12 00 00 02             ; XT=125d, flags=02
f153: 07 53 54 52 2e 4c 45 4e 00 ; 7, STR.LEN
;
f15c: 70 f1 00 00                ; STR.EMPTY - (next: f170 load)
f160: 53 12 00 00 02             ; XT=1253, flags=02
f165: 09 53 54 52 2e 45 4d 50 54 59 00 ; 9, STR.EMPTY
;
f170: 7f f1 00 00                ; load - (next: f17f file-getLine)
f174: f7 11 00 00 00             ; XT=11f7, flags=00
f179: 04 6c 6f 61 64 00          ; 4, load
;
f17f: 96 f1 00 00                ; file-getLine - (next: f196 main)
f183: e1 11 00 00 00             ; XT=11e1, flags=00
f188: 0c 66 69 6c 65 2d 67 65 74 4c 69 6e 65 00 ; 12, file-getLine
;
f196: a5 f1 00 00                ; main - (next: f1a5 mainLoop)
f19a: b3 11 00 00 00             ; XT=11b3, flags=00
f19f: 04 6d 61 69 6e 00          ; 4, main
;
f1a5: b8 f1 00 00                ; mainLoop - (next: f1b8 .FREE)
f1a9: 74 11 00 00 00             ; XT=1174, flags=00
f1ae: 08 6d 61 69 6e 4c 6f 6f 70 00 ; 8, mainLoop
;
f1b8: c8 f1 00 00                ; .FREE - (next: f1c8 FREE)
f1bc: 50 11 00 00 00             ; XT=1150, flags=00
f1c1: 05 2e 46 52 45 45 00       ; 5, .FREE
;
f1c8: d7 f1 00 00                ; FREE - (next: f1d7 C?)
f1cc: 3f 11 00 00 00             ; XT=113f, flags=00
f1d1: 04 46 52 45 45 00          ; 4, FREE
;
f1d7: e4 f1 00 00                ; C? - (next: f1e4 ?)
f1db: 33 11 00 00 00             ; XT=1133, flags=00
f1e0: 02 43 3f 00                ; 2, C?
;
f1e4: f0 f1 00 00                ; ? - (next: f1f0 ALLOT)
f1e8: 27 11 00 00 00             ; XT=1127, flags=00
f1ed: 01 3f 00                   ; 1, ?
;
f1f0: 00 f2 00 00                ; ALLOT - (next: f200 resetState)
f1f4: 15 11 00 00 00             ; XT=1115, flags=00
f1f9: 05 41 4c 4c 4f 54 00       ; 5, ALLOT
;
f200: 15 f2 00 00                ; resetState - (next: f215 ForgetLast)
f204: de 10 00 00 00             ; XT=10de, flags=00
f209: 0a 72 65 73 65 74 53 74 61 74 65 00 ; 10, resetState
;
f215: 2a f2 00 00                ; ForgetLast - (next: f22a ;)
f219: bd 10 00 00 00             ; XT=10bd, flags=00
f21e: 0a 46 6f 72 67 65 74 4c 61 73 74 00 ; 10, ForgetLast
;
f22a: 36 f2 00 00                ; ; - (next: f236 :NONAME)
f22e: a8 10 00 00 01             ; XT=10a8, flags=01
f233: 01 3b 00                   ; 1, ;
;
f236: 48 f2 00 00                ; :NONAME - (next: f248 :)
f23a: 93 10 00 00 00             ; XT=1093, flags=00
f23f: 07 3a 4e 4f 4e 41 4d 45 00 ; 7, :NONAME
;
f248: 54 f2 00 00                ; : - (next: f254 CREATE-NAME)
f24c: 7e 10 00 00 00             ; XT=107e, flags=00
f251: 01 3a 00                   ; 1, :
;
f254: 6a f2 00 00                ; CREATE-NAME - (next: f26a Define-Word)
f258: 2f 10 00 00 00             ; XT=102f, flags=00
f25d: 0b 43 52 45 41 54 45 2d 4e 41 4d 45 00 ; 11, CREATE-NAME
;
f26a: 80 f2 00 00                ; Define-Word - (next: f280 strcpy2c)
f26e: e5 0f 00 00 00             ; XT=0fe5, flags=00
f273: 0b 44 65 66 69 6e 65 2d 57 6f 72 64 00 ; 11, Define-Word
;
f280: 93 f2 00 00                ; strcpy2c - (next: f293 getLine)
f284: b7 0f 00 00 00             ; XT=0fb7, flags=00
f289: 08 73 74 72 63 70 79 32 63 00 ; 8, strcpy2c
;
f293: a5 f2 00 00                ; getLine - (next: f2a5 Pad)
f297: 19 0f 00 00 00             ; XT=0f19, flags=00
f29c: 07 67 65 74 4c 69 6e 65 00 ; 7, getLine
;
f2a5: b3 f2 00 00                ; Pad - (next: f2b3 executeInput)
f2a9: f0 0e 00 00 00             ; XT=0ef0, flags=00
f2ae: 03 50 61 64 00             ; 3, Pad
;
f2b3: ca f2 00 00                ; executeInput - (next: f2ca executeWord)
f2b7: b5 0e 00 00 00             ; XT=0eb5, flags=00
f2bc: 0c 65 78 65 63 75 74 65 49 6e 70 75 74 00 ; 12, executeInput
;
f2ca: e0 f2 00 00                ; executeWord - (next: f2e0 [COMPILE])
f2ce: 39 0e 00 00 00             ; XT=0e39, flags=00
f2d3: 0b 65 78 65 63 75 74 65 57 6f 72 64 00 ; 11, executeWord
;
f2e0: f4 f2 00 00                ; [COMPILE] - (next: f2f4 cstr,)
f2e4: 1b 0e 00 00 00             ; XT=0e1b, flags=00
f2e9: 09 5b 43 4f 4d 50 49 4c 45 5d 00 ; 9, [COMPILE]
;
f2f4: 04 f3 00 00                ; cstr, - (next: f304 strlen)
f2f8: 0a 0e 00 00 00             ; XT=0e0a, flags=00
f2fd: 05 63 73 74 72 2c 00       ; 5, cstr,
;
f304: 15 f3 00 00                ; strlen - (next: f315 Copy.INLINE)
f308: f1 0d 00 00 00             ; XT=0df1, flags=00
f30d: 06 73 74 72 6c 65 6e 00    ; 6, strlen
;
f315: 2b f3 00 00                ; Copy.INLINE - (next: f32b DOES>)
f319: d5 0d 00 00 00             ; XT=0dd5, flags=00
f31e: 0b 43 6f 70 79 2e 49 4e 4c 49 4e 45 00 ; 11, Copy.INLINE
;
f32b: 3b f3 00 00                ; DOES> - (next: f33b (inline))
f32f: c0 0d 00 00 00             ; XT=0dc0, flags=00
f334: 05 44 4f 45 53 3e 00       ; 5, DOES>
;
f33b: 4e f3 00 00                ; (inline) - (next: f34e find.ret)
f33f: a5 0d 00 00 00             ; XT=0da5, flags=00
f344: 08 28 69 6e 6c 69 6e 65 29 00 ; 8, (inline)
;
f34e: 61 f3 00 00                ; find.ret - (next: f361 EXECUTE)
f352: 94 0d 00 00 00             ; XT=0d94, flags=00
f357: 08 66 69 6e 64 2e 72 65 74 00 ; 8, find.ret
;
f361: 73 f3 00 00                ; EXECUTE - (next: f373 .lastx)
f365: 8b 0d 00 00 00             ; XT=0d8b, flags=00
f36a: 07 45 58 45 43 55 54 45 00 ; 7, EXECUTE
;
f373: 84 f3 00 00                ; .lastx - (next: f384 NUM-WORDS)
f377: 6c 0d 00 00 00             ; XT=0d6c, flags=00
f37c: 06 2e 6c 61 73 74 78 00    ; 6, .lastx
;
f384: 98 f3 00 00                ; NUM-WORDS - (next: f398 WORDSV)
f388: 4a 0d 00 00 00             ; XT=0d4a, flags=00
f38d: 09 4e 55 4d 2d 57 4f 52 44 53 00 ; 9, NUM-WORDS
;
f398: a9 f3 00 00                ; WORDSV - (next: f3a9 .WORD-LONG)
f39c: 20 0d 00 00 00             ; XT=0d20, flags=00
f3a1: 06 57 4f 52 44 53 56 00    ; 6, WORDSV
;
f3a9: be f3 00 00                ; .WORD-LONG - (next: f3be WORDS)
f3ad: 96 0c 00 00 00             ; XT=0c96, flags=00
f3b2: 0a 2e 57 4f 52 44 2d 4c 4f 4e 47 00 ; 10, .WORD-LONG
;
f3be: ce f3 00 00                ; WORDS - (next: f3ce .WORD-SHORT)
f3c2: 77 0c 00 00 00             ; XT=0c77, flags=00
f3c7: 05 57 4f 52 44 53 00       ; 5, WORDS
;
f3ce: e4 f3 00 00                ; .WORD-SHORT - (next: f3e4 .(LAST))
f3d2: 62 0c 00 00 00             ; XT=0c62, flags=00
f3d7: 0b 2e 57 4f 52 44 2d 53 48 4f 52 54 00 ; 11, .WORD-SHORT
;
f3e4: f6 f3 00 00                ; .(LAST) - (next: f3f6 .(HERE))
f3e8: 2b 0c 00 00 00             ; XT=0c2b, flags=00
f3ed: 07 2e 28 4c 41 53 54 29 00 ; 7, .(LAST)
;
f3f6: 08 f4 00 00                ; .(HERE) - (next: f408 .(MEM_SZ))
f3fa: f4 0b 00 00 00             ; XT=0bf4, flags=00
f3ff: 07 2e 28 48 45 52 45 29 00 ; 7, .(HERE)
;
f408: 1c f4 00 00                ; .(MEM_SZ) - (next: f41c .S)
f40c: bb 0b 00 00 00             ; XT=0bbb, flags=00
f411: 09 2e 28 4d 45 4d 5f 53 5a 29 00 ; 9, .(MEM_SZ)
;
f41c: 29 f4 00 00                ; .S - (next: f429 MAX)
f420: 5e 0b 00 00 00             ; XT=0b5e, flags=00
f425: 02 2e 53 00                ; 2, .S
;
f429: 37 f4 00 00                ; MAX - (next: f437 MIN)
f42d: 51 0b 00 00 00             ; XT=0b51, flags=00
f432: 03 4d 41 58 00             ; 3, MAX
;
f437: 45 f4 00 00                ; MIN - (next: f445 BINARY.)
f43b: 44 0b 00 00 00             ; XT=0b44, flags=00
f440: 03 4d 49 4e 00             ; 3, MIN
;
f445: 57 f4 00 00                ; BINARY. - (next: f457 DECIMAL.3)
f449: 27 0b 00 00 00             ; XT=0b27, flags=00
f44e: 07 42 49 4e 41 52 59 2e 00 ; 7, BINARY.
;
f457: 6b f4 00 00                ; DECIMAL.3 - (next: f46b DECIMAL.)
f45b: 0a 0b 00 00 00             ; XT=0b0a, flags=00
f460: 09 44 45 43 49 4d 41 4c 2e 33 00 ; 9, DECIMAL.3
;
f46b: 7e f4 00 00                ; DECIMAL. - (next: f47e HEX.4)
f46f: ed 0a 00 00 00             ; XT=0aed, flags=00
f474: 08 44 45 43 49 4d 41 4c 2e 00 ; 8, DECIMAL.
;
f47e: 8e f4 00 00                ; HEX.4 - (next: f48e HEX.2)
f482: d0 0a 00 00 00             ; XT=0ad0, flags=00
f487: 05 48 45 58 2e 34 00       ; 5, HEX.4
;
f48e: 9e f4 00 00                ; HEX.2 - (next: f49e HEX.)
f492: b3 0a 00 00 00             ; XT=0ab3, flags=00
f497: 05 48 45 58 2e 32 00       ; 5, HEX.2
;
f49e: ad f4 00 00                ; HEX. - (next: f4ad .4)
f4a2: 96 0a 00 00 00             ; XT=0a96, flags=00
f4a7: 04 48 45 58 2e 00          ; 4, HEX.
;
f4ad: ba f4 00 00                ; .4 - (next: f4ba .3)
f4b1: 6d 0a 00 00 00             ; XT=0a6d, flags=00
f4b6: 02 2e 34 00                ; 2, .4
;
f4ba: c7 f4 00 00                ; .3 - (next: f4c7 .2)
f4be: 49 0a 00 00 00             ; XT=0a49, flags=00
f4c3: 02 2e 33 00                ; 2, .3
;
f4c7: d4 f4 00 00                ; .2 - (next: f4d4 .)
f4cb: 2a 0a 00 00 00             ; XT=0a2a, flags=00
f4d0: 02 2e 32 00                ; 2, .2
;
f4d4: e0 f4 00 00                ; . - (next: f4e0 (.))
f4d8: 1c 0a 00 00 00             ; XT=0a1c, flags=00
f4dd: 01 2e 00                   ; 1, .
;
f4e0: ee f4 00 00                ; (.) - (next: f4ee #P)
f4e4: 02 0a 00 00 00             ; XT=0a02, flags=00
f4e9: 03 28 2e 29 00             ; 3, (.)
;
f4ee: fb f4 00 00                ; #P - (next: f4fb #P-)
f4f2: f1 09 00 00 00             ; XT=09f1, flags=00
f4f7: 02 23 50 00                ; 2, #P
;
f4fb: 09 f5 00 00                ; #P- - (next: f509 #>)
f4ff: df 09 00 00 00             ; XT=09df, flags=00
f504: 03 23 50 2d 00             ; 3, #P-
;
f509: 16 f5 00 00                ; #> - (next: f516 #S)
f50d: d9 09 00 00 00             ; XT=09d9, flags=00
f512: 02 23 3e 00                ; 2, #>
;
f516: 23 f5 00 00                ; #S - (next: f523 #)
f51a: ca 09 00 00 00             ; XT=09ca, flags=00
f51f: 02 23 53 00                ; 2, #S
;
f523: 2f f5 00 00                ; # - (next: f52f <#)
f527: a5 09 00 00 00             ; XT=09a5, flags=00
f52c: 01 23 00                   ; 1, #
;
f52f: 3c f5 00 00                ; <# - (next: f53c isNumber?)
f533: 73 09 00 00 00             ; XT=0973, flags=00
f538: 02 3c 23 00                ; 2, <#
;
f53c: 50 f5 00 00                ; isNumber? - (next: f550 parse-char)
f540: f8 08 00 00 00             ; XT=08f8, flags=00
f545: 09 69 73 4e 75 6d 62 65 72 3f 00 ; 9, isNumber?
;
f550: 65 f5 00 00                ; parse-char - (next: f565 parse-hex)
f554: d8 08 00 00 00             ; XT=08d8, flags=00
f559: 0a 70 61 72 73 65 2d 63 68 61 72 00 ; 10, parse-char
;
f565: 79 f5 00 00                ; parse-hex - (next: f579 ABS)
f569: a0 08 00 00 00             ; XT=08a0, flags=00
f56e: 09 70 61 72 73 65 2d 68 65 78 00 ; 9, parse-hex
;
f579: 87 f5 00 00                ; ABS - (next: f587 NEGATE)
f57d: 8f 08 00 00 00             ; XT=088f, flags=00
f582: 03 41 42 53 00             ; 3, ABS
;
f587: 98 f5 00 00                ; NEGATE - (next: f598 isNumChar?)
f58b: 85 08 00 00 00             ; XT=0885, flags=00
f590: 06 4e 45 47 41 54 45 00    ; 6, NEGATE
;
f598: ad f5 00 00                ; isNumChar? - (next: f5ad is-hex-char?)
f59c: 6c 08 00 00 00             ; XT=086c, flags=00
f5a1: 0a 69 73 4e 75 6d 43 68 61 72 3f 00 ; 10, isNumChar?
;
f5ad: c4 f5 00 00                ; is-hex-char? - (next: f5c4 is-decimal-char?)
f5b1: 2b 08 00 00 00             ; XT=082b, flags=00
f5b6: 0c 69 73 2d 68 65 78 2d 63 68 61 72 3f 00 ; 12, is-hex-char?
;
f5c4: df f5 00 00                ; is-decimal-char? - (next: f5df isHEX?)
f5c8: 10 08 00 00 00             ; XT=0810, flags=00
f5cd: 10 69 73 2d 64 65 63 69 6d 61 6c 2d 63 68 61 72 3f 00 ; 16, is-decimal-char?
;
f5df: f0 f5 00 00                ; isHEX? - (next: f5f0 findInDict)
f5e3: 01 08 00 00 00             ; XT=0801, flags=00
f5e8: 06 69 73 48 45 58 3f 00    ; 6, isHEX?
;
f5f0: 05 f6 00 00                ; findInDict - (next: f605 DICT.GetINLINE)
f5f4: c8 07 00 00 00             ; XT=07c8, flags=00
f5f9: 0a 66 69 6e 64 49 6e 44 69 63 74 00 ; 10, findInDict
;
f605: 1e f6 00 00                ; DICT.GetINLINE - (next: f61e DICT.GetIMMEDIATE)
f609: b8 07 00 00 00             ; XT=07b8, flags=00
f60e: 0e 44 49 43 54 2e 47 65 74 49 4e 4c 49 4e 45 00 ; 14, DICT.GetINLINE
;
f61e: 3a f6 00 00                ; DICT.GetIMMEDIATE - (next: f63a FLAGS.ISINLINE?)
f622: a8 07 00 00 00             ; XT=07a8, flags=00
f627: 11 44 49 43 54 2e 47 65 74 49 4d 4d 45 44 49 41 54 45 00 ; 17, DICT.GetIMMEDIATE
;
f63a: 54 f6 00 00                ; FLAGS.ISINLINE? - (next: f654 FLAGS.ISIMMEDIATE?)
f63e: 9f 07 00 00 00             ; XT=079f, flags=00
f643: 0f 46 4c 41 47 53 2e 49 53 49 4e 4c 49 4e 45 3f 00 ; 15, FLAGS.ISINLINE?
;
f654: 71 f6 00 00                ; FLAGS.ISIMMEDIATE? - (next: f671 XT.GetDICTP)
f658: 96 07 00 00 00             ; XT=0796, flags=00
f65d: 12 46 4c 41 47 53 2e 49 53 49 4d 4d 45 44 49 41 54 45 3f 00 ; 18, FLAGS.ISIMMEDIATE?
;
f671: 87 f6 00 00                ; XT.GetDICTP - (next: f687 DICTP>NAME)
f675: 83 07 00 00 00             ; XT=0783, flags=00
f67a: 0b 58 54 2e 47 65 74 44 49 43 54 50 00 ; 11, XT.GetDICTP
;
f687: 9c f6 00 00                ; DICTP>NAME - (next: f69c DICT.GetFLAGS)
f68b: 76 07 00 00 00             ; XT=0776, flags=00
f690: 0a 44 49 43 54 50 3e 4e 41 4d 45 00 ; 10, DICTP>NAME
;
f69c: b4 f6 00 00                ; DICT.GetFLAGS - (next: f6b4 DICT.GetXT)
f6a0: 6a 07 00 00 00             ; XT=076a, flags=00
f6a5: 0d 44 49 43 54 2e 47 65 74 46 4c 41 47 53 00 ; 13, DICT.GetFLAGS
;
f6b4: c9 f6 00 00                ; DICT.GetXT - (next: f6c9 NAME>DICT)
f6b8: 5e 07 00 00 00             ; XT=075e, flags=00
f6bd: 0a 44 49 43 54 2e 47 65 74 58 54 00 ; 10, DICT.GetXT
;
f6c9: dd f6 00 00                ; NAME>DICT - (next: f6dd FLAGS>DICT)
f6cd: 51 07 00 00 00             ; XT=0751, flags=00
f6d2: 09 4e 41 4d 45 3e 44 49 43 54 00 ; 9, NAME>DICT
;
f6dd: f2 f6 00 00                ; FLAGS>DICT - (next: f6f2 XT>DICT)
f6e1: 45 07 00 00 00             ; XT=0745, flags=00
f6e6: 0a 46 4c 41 47 53 3e 44 49 43 54 00 ; 10, FLAGS>DICT
;
f6f2: 04 f7 00 00                ; XT>DICT - (next: f704 NEXT>DICT)
f6f6: 3c 07 00 00 00             ; XT=073c, flags=00
f6fb: 07 58 54 3e 44 49 43 54 00 ; 7, XT>DICT
;
f704: 18 f7 00 00                ; NEXT>DICT - (next: f718 DICT>NAME)
f708: 36 07 00 00 00             ; XT=0736, flags=00
f70d: 09 4e 45 58 54 3e 44 49 43 54 00 ; 9, NEXT>DICT
;
f718: 2c f7 00 00                ; DICT>NAME - (next: f72c DICT>FLAGS)
f71c: 2a 07 00 00 00             ; XT=072a, flags=00
f721: 09 44 49 43 54 3e 4e 41 4d 45 00 ; 9, DICT>NAME
;
f72c: 41 f7 00 00                ; DICT>FLAGS - (next: f741 DICT>XT)
f730: 1e 07 00 00 00             ; XT=071e, flags=00
f735: 0a 44 49 43 54 3e 46 4c 41 47 53 00 ; 10, DICT>FLAGS
;
f741: 53 f7 00 00                ; DICT>XT - (next: f753 DICT>NEXT)
f745: 15 07 00 00 00             ; XT=0715, flags=00
f74a: 07 44 49 43 54 3e 58 54 00 ; 7, DICT>XT
;
f753: 67 f7 00 00                ; DICT>NEXT - (next: f767 getOneWord)
f757: 0f 07 00 00 00             ; XT=070f, flags=00
f75c: 09 44 49 43 54 3e 4e 45 58 54 00 ; 9, DICT>NEXT
;
f767: 7c f7 00 00                ; getOneWord - (next: f77c skipWS)
f76b: e9 06 00 00 00             ; XT=06e9, flags=00
f770: 0a 67 65 74 4f 6e 65 57 6f 72 64 00 ; 10, getOneWord
;
f77c: 8d f7 00 00                ; skipWS - (next: f78d BETWEEN)
f780: cf 06 00 00 00             ; XT=06cf, flags=00
f785: 06 73 6b 69 70 57 53 00    ; 6, skipWS
;
f78d: 9f f7 00 00                ; BETWEEN - (next: f79f CR)
f791: bc 06 00 00 00             ; XT=06bc, flags=00
f796: 07 42 45 54 57 45 45 4e 00 ; 7, BETWEEN
;
f79f: ac f7 00 00                ; CR - (next: f7ac CRLF)
f7a3: b0 06 00 00 02             ; XT=06b0, flags=02
f7a8: 02 43 52 00                ; 2, CR
;
f7ac: bb f7 00 00                ; CRLF - (next: f7bb BL)
f7b0: a4 06 00 00 02             ; XT=06a4, flags=02
f7b5: 04 43 52 4c 46 00          ; 4, CRLF
;
f7bb: c8 f7 00 00                ; BL - (next: f7c8 SPACE)
f7bf: 9b 06 00 00 02             ; XT=069b, flags=02
f7c4: 02 42 4c 00                ; 2, BL
;
f7c8: d8 f7 00 00                ; SPACE - (next: f7d8 ()
f7cc: 92 06 00 00 02             ; XT=0692, flags=02
f7d1: 05 53 50 41 43 45 00       ; 5, SPACE
;
f7d8: e4 f7 00 00                ; ( - (next: f7e4 \)
f7dc: 56 06 00 00 01             ; XT=0656, flags=01
f7e1: 01 28 00                   ; 1, (
;
f7e4: f0 f7 00 00                ; \ - (next: f7f0 CT)
f7e8: 47 06 00 00 01             ; XT=0647, flags=01
f7ed: 01 5c 00                   ; 1, \
;
f7f0: fd f7 00 00                ; CT - (next: f7fd TYPE)
f7f4: 37 06 00 00 00             ; XT=0637, flags=00
f7f9: 02 43 54 00                ; 2, CT
;
f7fd: 0c f8 00 00                ; TYPE - (next: f80c COUNT)
f801: 21 06 00 00 00             ; XT=0621, flags=00
f806: 04 54 59 50 45 00          ; 4, TYPE
;
f80c: 1c f8 00 00                ; COUNT - (next: f81c FALSE)
f810: 17 06 00 00 00             ; XT=0617, flags=00
f815: 05 43 4f 55 4e 54 00       ; 5, COUNT
;
f81c: 2c f8 00 00                ; FALSE - (next: f82c TRUE)
f820: 0f 06 00 00 02             ; XT=060f, flags=02
f825: 05 46 41 4c 53 45 00       ; 5, FALSE
;
f82c: 3b f8 00 00                ; TRUE - (next: f83b >=)
f830: 04 06 00 00 02             ; XT=0604, flags=02
f835: 04 54 52 55 45 00          ; 4, TRUE
;
f83b: 48 f8 00 00                ; >= - (next: f848 <=)
f83f: fc 05 00 00 02             ; XT=05fc, flags=02
f844: 02 3e 3d 00                ; 2, >=
;
f848: 55 f8 00 00                ; <= - (next: f855 <>)
f84c: f4 05 00 00 02             ; XT=05f4, flags=02
f851: 02 3c 3d 00                ; 2, <=
;
f855: 62 f8 00 00                ; <> - (next: f862 0=)
f859: ec 05 00 00 02             ; XT=05ec, flags=02
f85e: 02 3c 3e 00                ; 2, <>
;
f862: 6f f8 00 00                ; 0= - (next: f86f C--)
f866: e5 05 00 00 02             ; XT=05e5, flags=02
f86b: 02 30 3d 00                ; 2, 0=
;
f86f: 7d f8 00 00                ; C-- - (next: f87d C++)
f873: da 05 00 00 02             ; XT=05da, flags=02
f878: 03 43 2d 2d 00             ; 3, C--
;
f87d: 8b f8 00 00                ; C++ - (next: f88b --)
f881: cf 05 00 00 02             ; XT=05cf, flags=02
f886: 03 43 2b 2b 00             ; 3, C++
;
f88b: 98 f8 00 00                ; -- - (next: f898 ++)
f88f: c4 05 00 00 02             ; XT=05c4, flags=02
f894: 02 2d 2d 00                ; 2, --
;
f898: a5 f8 00 00                ; ++ - (next: f8a5 -!)
f89c: b9 05 00 00 02             ; XT=05b9, flags=02
f8a1: 02 2b 2b 00                ; 2, ++
;
f8a5: b2 f8 00 00                ; -! - (next: f8b2 -=)
f8a9: ac 05 00 00 00             ; XT=05ac, flags=00
f8ae: 02 2d 21 00                ; 2, -!
;
f8b2: bf f8 00 00                ; -= - (next: f8bf +=)
f8b6: a0 05 00 00 02             ; XT=05a0, flags=02
f8bb: 02 2d 3d 00                ; 2, -=
;
f8bf: cc f8 00 00                ; += - (next: f8cc 2/)
f8c3: 95 05 00 00 02             ; XT=0595, flags=02
f8c8: 02 2b 3d 00                ; 2, +=
;
f8cc: d9 f8 00 00                ; 2/ - (next: f8d9 2*)
f8d0: 8a 05 00 00 02             ; XT=058a, flags=02
f8d5: 02 32 2f 00                ; 2, 2/
;
f8d9: e6 f8 00 00                ; 2* - (next: f8e6 1-)
f8dd: 81 05 00 00 02             ; XT=0581, flags=02
f8e2: 02 32 2a 00                ; 2, 2*
;
f8e6: f3 f8 00 00                ; 1- - (next: f8f3 1+)
f8ea: 7a 05 00 00 02             ; XT=057a, flags=02
f8ef: 02 31 2d 00                ; 2, 1-
;
f8f3: 00 f9 00 00                ; 1+ - (next: f900 MOD)
f8f7: 73 05 00 00 02             ; XT=0573, flags=02
f8fc: 02 31 2b 00                ; 2, 1+
;
f900: 0e f9 00 00                ; MOD - (next: f90e /)
f904: 6b 05 00 00 02             ; XT=056b, flags=02
f909: 03 4d 4f 44 00             ; 3, MOD
;
f90e: 1a f9 00 00                ; / - (next: f91a -ROT)
f912: 62 05 00 00 02             ; XT=0562, flags=02
f917: 01 2f 00                   ; 1, /
;
f91a: 29 f9 00 00                ; -ROT - (next: f929 ROT)
f91e: 58 05 00 00 02             ; XT=0558, flags=02
f923: 04 2d 52 4f 54 00          ; 4, -ROT
;
f929: 37 f9 00 00                ; ROT - (next: f937 NIP)
f92d: 4e 05 00 00 02             ; XT=054e, flags=02
f932: 03 52 4f 54 00             ; 3, ROT
;
f937: 45 f9 00 00                ; NIP - (next: f945 TUCK)
f93b: 46 05 00 00 02             ; XT=0546, flags=02
f940: 03 4e 49 50 00             ; 3, NIP
;
f945: 54 f9 00 00                ; TUCK - (next: f954 2DROP)
f949: 3e 05 00 00 02             ; XT=053e, flags=02
f94e: 04 54 55 43 4b 00          ; 4, TUCK
;
f954: 64 f9 00 00                ; 2DROP - (next: f964 2DUP)
f958: 36 05 00 00 02             ; XT=0536, flags=02
f95d: 05 32 44 52 4f 50 00       ; 5, 2DROP
;
f964: 73 f9 00 00                ; 2DUP - (next: f973 ?DUP)
f968: 2e 05 00 00 02             ; XT=052e, flags=02
f96d: 04 32 44 55 50 00          ; 4, 2DUP
;
f973: 82 f9 00 00                ; ?DUP - (next: f982 RDROP)
f977: 24 05 00 00 00             ; XT=0524, flags=00
f97c: 04 3f 44 55 50 00          ; 4, ?DUP
;
f982: 92 f9 00 00                ; RDROP - (next: f992 R@)
f986: 1c 05 00 00 02             ; XT=051c, flags=02
f98b: 05 52 44 52 4f 50 00       ; 5, RDROP
;
f992: 9f f9 00 00                ; R@ - (next: f99f DEBUG-OFF)
f996: 15 05 00 00 02             ; XT=0515, flags=02
f99b: 02 52 40 00                ; 2, R@
;
f99f: b3 f9 00 00                ; DEBUG-OFF - (next: f9b3 DEBUG-ON)
f9a3: 0c 05 00 00 02             ; XT=050c, flags=02
f9a8: 09 44 45 42 55 47 2d 4f 46 46 00 ; 9, DEBUG-OFF
;
f9b3: c6 f9 00 00                ; DEBUG-ON - (next: f9c6 TRACE-OFF)
f9b7: 03 05 00 00 02             ; XT=0503, flags=02
f9bc: 08 44 45 42 55 47 2d 4f 4e 00 ; 8, DEBUG-ON
;
f9c6: da f9 00 00                ; TRACE-OFF - (next: f9da TRACE-ON)
f9ca: fa 04 00 00 02             ; XT=04fa, flags=02
f9cf: 09 54 52 41 43 45 2d 4f 46 46 00 ; 9, TRACE-OFF
;
f9da: ed f9 00 00                ; TRACE-ON - (next: f9ed MEM_SZ)
f9de: f1 04 00 00 02             ; XT=04f1, flags=02
f9e3: 08 54 52 41 43 45 2d 4f 4e 00 ; 8, TRACE-ON
;
f9ed: fe f9 00 00                ; MEM_SZ - (next: f9fe LEAVE)
f9f1: e5 04 00 00 00             ; XT=04e5, flags=00
f9f6: 06 4d 45 4d 5f 53 5a 00    ; 6, MEM_SZ
;
f9fe: 0e fa 00 00                ; LEAVE - (next: fa0e UNTIL)
fa02: d3 04 00 00 01             ; XT=04d3, flags=01
fa07: 05 4c 45 41 56 45 00       ; 5, LEAVE
;
fa0e: 1e fa 00 00                ; UNTIL - (next: fa1e WHILE)
fa12: b5 04 00 00 01             ; XT=04b5, flags=01
fa17: 05 55 4e 54 49 4c 00       ; 5, UNTIL
;
fa1e: 2e fa 00 00                ; WHILE - (next: fa2e AGAIN)
fa22: 97 04 00 00 01             ; XT=0497, flags=01
fa27: 05 57 48 49 4c 45 00       ; 5, WHILE
;
fa2e: 3e fa 00 00                ; AGAIN - (next: fa3e BEGIN)
fa32: 79 04 00 00 01             ; XT=0479, flags=01
fa37: 05 41 47 41 49 4e 00       ; 5, AGAIN
;
fa3e: 4e fa 00 00                ; BEGIN - (next: fa4e THEN)
fa42: 67 04 00 00 01             ; XT=0467, flags=01
fa47: 05 42 45 47 49 4e 00       ; 5, BEGIN
;
fa4e: 5d fa 00 00                ; THEN - (next: fa5d ELSE)
fa52: 4e 04 00 00 01             ; XT=044e, flags=01
fa57: 04 54 48 45 4e 00          ; 4, THEN
;
fa5d: 6c fa 00 00                ; ELSE - (next: fa6c IF)
fa61: 23 04 00 00 01             ; XT=0423, flags=01
fa66: 04 45 4c 53 45 00          ; 4, ELSE
;
fa6c: 79 fa 00 00                ; IF - (next: fa79 ?COMPILING)
fa70: 02 04 00 00 01             ; XT=0402, flags=01
fa75: 02 49 46 00                ; 2, IF
;
fa79: 8e fa 00 00                ; ?COMPILING - (next: fa8e OFF)
fa7d: f6 03 00 00 00             ; XT=03f6, flags=00
fa82: 0a 3f 43 4f 4d 50 49 4c 49 4e 47 00 ; 10, ?COMPILING
;
fa8e: 9c fa 00 00                ; OFF - (next: fa9c ON)
fa92: ec 03 00 00 00             ; XT=03ec, flags=00
fa97: 03 4f 46 46 00             ; 3, OFF
;
fa9c: a9 fa 00 00                ; ON - (next: faa9 BINARY)
faa0: e2 03 00 00 00             ; XT=03e2, flags=00
faa5: 02 4f 4e 00                ; 2, ON
;
faa9: ba fa 00 00                ; BINARY - (next: faba OCTAL)
faad: d4 03 00 00 00             ; XT=03d4, flags=00
fab2: 06 42 49 4e 41 52 59 00    ; 6, BINARY
;
faba: ca fa 00 00                ; OCTAL - (next: faca DECIMAL)
fabe: c6 03 00 00 00             ; XT=03c6, flags=00
fac3: 05 4f 43 54 41 4c 00       ; 5, OCTAL
;
faca: dc fa 00 00                ; DECIMAL - (next: fadc HEX)
face: b8 03 00 00 00             ; XT=03b8, flags=00
fad3: 07 44 45 43 49 4d 41 4c 00 ; 7, DECIMAL
;
fadc: ea fa 00 00                ; HEX - (next: faea FLAG_INLINE)
fae0: aa 03 00 00 00             ; XT=03aa, flags=00
fae5: 03 48 45 58 00             ; 3, HEX
;
faea: 00 fb 00 00                ; FLAG_INLINE - (next: fb00 FLAG_IMMEDIATE)
faee: a2 03 00 00 02             ; XT=03a2, flags=02
faf3: 0b 46 4c 41 47 5f 49 4e 4c 49 4e 45 00 ; 11, FLAG_INLINE
;
fb00: 19 fb 00 00                ; FLAG_IMMEDIATE - (next: fb19 CELLS)
fb04: 9a 03 00 00 02             ; XT=039a, flags=02
fb09: 0e 46 4c 41 47 5f 49 4d 4d 45 44 49 41 54 45 00 ; 14, FLAG_IMMEDIATE
;
fb19: 29 fb 00 00                ; CELLS - (next: fb29 IMMEDIATE)
fb1d: 91 03 00 00 02             ; XT=0391, flags=02
fb22: 05 43 45 4c 4c 53 00       ; 5, CELLS
;
fb29: 3d fb 00 00                ; IMMEDIATE - (next: fb3d INLINE)
fb2d: 79 03 00 00 00             ; XT=0379, flags=00
fb32: 09 49 4d 4d 45 44 49 41 54 45 00 ; 9, IMMEDIATE
;
fb3d: 4e fb 00 00                ; INLINE - (next: fb4e BYE)
fb41: 61 03 00 00 00             ; XT=0361, flags=00
fb46: 06 49 4e 4c 49 4e 45 00    ; 6, INLINE
;
fb4e: 5c fb 00 00                ; BYE - (next: fb5c RESET)
fb52: 5a 03 00 00 02             ; XT=035a, flags=02
fb57: 03 42 59 45 00             ; 3, BYE
;
fb5c: 6c fb 00 00                ; RESET - (next: fb6c BREAK)
fb60: 53 03 00 00 02             ; XT=0353, flags=02
fb65: 05 52 45 53 45 54 00       ; 5, RESET
;
fb6c: 7c fb 00 00                ; BREAK - (next: fb7c NOP)
fb70: 4c 03 00 00 02             ; XT=034c, flags=02
fb75: 05 42 52 45 41 4b 00       ; 5, BREAK
;
fb7c: 8a fb 00 00                ; NOP - (next: fb8a BRANCHBNZ)
fb80: 45 03 00 00 02             ; XT=0345, flags=02
fb85: 03 4e 4f 50 00             ; 3, NOP
;
fb8a: 9e fb 00 00                ; BRANCHBNZ - (next: fb9e BRANCHBZ)
fb8e: 38 03 00 00 00             ; XT=0338, flags=00
fb93: 09 42 52 41 4e 43 48 42 4e 5a 00 ; 9, BRANCHBNZ
;
fb9e: b1 fb 00 00                ; BRANCHBZ - (next: fbb1 BRANCHB)
fba2: 2b 03 00 00 00             ; XT=032b, flags=00
fba7: 08 42 52 41 4e 43 48 42 5a 00 ; 8, BRANCHBZ
;
fbb1: c3 fb 00 00                ; BRANCHB - (next: fbc3 BRANCHFNZ)
fbb5: 1e 03 00 00 00             ; XT=031e, flags=00
fbba: 07 42 52 41 4e 43 48 42 00 ; 7, BRANCHB
;
fbc3: d7 fb 00 00                ; BRANCHFNZ - (next: fbd7 BRANCHFZ)
fbc7: 11 03 00 00 00             ; XT=0311, flags=00
fbcc: 09 42 52 41 4e 43 48 46 4e 5a 00 ; 9, BRANCHFNZ
;
fbd7: ea fb 00 00                ; BRANCHFZ - (next: fbea BRANCHF)
fbdb: 04 03 00 00 00             ; XT=0304, flags=00
fbe0: 08 42 52 41 4e 43 48 46 5a 00 ; 8, BRANCHFZ
;
fbea: fc fb 00 00                ; BRANCHF - (next: fbfc +!)
fbee: f7 02 00 00 00             ; XT=02f7, flags=00
fbf3: 07 42 52 41 4e 43 48 46 00 ; 7, BRANCHF
;
fbfc: 09 fc 00 00                ; +! - (next: fc09 >>)
fc00: f0 02 00 00 02             ; XT=02f0, flags=02
fc05: 02 2b 21 00                ; 2, +!
;
fc09: 16 fc 00 00                ; >> - (next: fc16 <<)
fc0d: e9 02 00 00 02             ; XT=02e9, flags=02
fc12: 02 3e 3e 00                ; 2, >>
;
fc16: 23 fc 00 00                ; << - (next: fc23 GETTICK)
fc1a: e2 02 00 00 02             ; XT=02e2, flags=02
fc1f: 02 3c 3c 00                ; 2, <<
;
fc23: 35 fc 00 00                ; GETTICK - (next: fc35 DEC)
fc27: db 02 00 00 02             ; XT=02db, flags=02
fc2c: 07 47 45 54 54 49 43 4b 00 ; 7, GETTICK
;
fc35: 43 fc 00 00                ; DEC - (next: fc43 RDEPTH)
fc39: d4 02 00 00 02             ; XT=02d4, flags=02
fc3e: 03 44 45 43 00             ; 3, DEC
;
fc43: 54 fc 00 00                ; RDEPTH - (next: fc54 INC)
fc47: cd 02 00 00 02             ; XT=02cd, flags=02
fc4c: 06 52 44 45 50 54 48 00    ; 6, RDEPTH
;
fc54: 62 fc 00 00                ; INC - (next: fc62 RFETCH)
fc58: c6 02 00 00 02             ; XT=02c6, flags=02
fc5d: 03 49 4e 43 00             ; 3, INC
;
fc62: 73 fc 00 00                ; RFETCH - (next: fc73 NOT)
fc66: bf 02 00 00 02             ; XT=02bf, flags=02
fc6b: 06 52 46 45 54 43 48 00    ; 6, RFETCH
;
fc73: 81 fc 00 00                ; NOT - (next: fc81 /MOD)
fc77: b8 02 00 00 02             ; XT=02b8, flags=02
fc7c: 03 4e 4f 54 00             ; 3, NOT
;
fc81: 90 fc 00 00                ; /MOD - (next: fc90 COMPAREI)
fc85: b1 02 00 00 02             ; XT=02b1, flags=02
fc8a: 04 2f 4d 4f 44 00          ; 4, /MOD
;
fc90: a3 fc 00 00                ; COMPAREI - (next: fca3 GETCH)
fc94: aa 02 00 00 02             ; XT=02aa, flags=02
fc99: 08 43 4f 4d 50 41 52 45 49 00 ; 8, COMPAREI
;
fca3: b3 fc 00 00                ; GETCH - (next: fcb3 DEPTH)
fca7: a3 02 00 00 02             ; XT=02a3, flags=02
fcac: 05 47 45 54 43 48 00       ; 5, GETCH
;
fcb3: c3 fc 00 00                ; DEPTH - (next: fcc3 PICK)
fcb7: 9c 02 00 00 02             ; XT=029c, flags=02
fcbc: 05 44 45 50 54 48 00       ; 5, DEPTH
;
fcc3: d2 fc 00 00                ; PICK - (next: fcd2 AND)
fcc7: 95 02 00 00 02             ; XT=0295, flags=02
fccc: 04 50 49 43 4b 00          ; 4, PICK
;
fcd2: e0 fc 00 00                ; AND - (next: fce0 LOGLEVEL)
fcd6: 8e 02 00 00 02             ; XT=028e, flags=02
fcdb: 03 41 4e 44 00             ; 3, AND
;
fce0: f3 fc 00 00                ; LOGLEVEL - (next: fcf3 R>)
fce4: 87 02 00 00 02             ; XT=0287, flags=02
fce9: 08 4c 4f 47 4c 45 56 45 4c 00 ; 8, LOGLEVEL
;
fcf3: 00 fd 00 00                ; R> - (next: fd00 >R)
fcf7: 80 02 00 00 02             ; XT=0280, flags=02
fcfc: 02 52 3e 00                ; 2, R>
;
fd00: 0d fd 00 00                ; >R - (next: fd0d FCLOSE)
fd04: 79 02 00 00 02             ; XT=0279, flags=02
fd09: 02 3e 52 00                ; 2, >R
;
fd0d: 1e fd 00 00                ; FCLOSE - (next: fd1e FWRITE)
fd11: 72 02 00 00 02             ; XT=0272, flags=02
fd16: 06 46 43 4c 4f 53 45 00    ; 6, FCLOSE
;
fd1e: 2f fd 00 00                ; FWRITE - (next: fd2f FREADLINE)
fd22: 6b 02 00 00 02             ; XT=026b, flags=02
fd27: 06 46 57 52 49 54 45 00    ; 6, FWRITE
;
fd2f: 43 fd 00 00                ; FREADLINE - (next: fd43 FREAD)
fd33: 64 02 00 00 02             ; XT=0264, flags=02
fd38: 09 46 52 45 41 44 4c 49 4e 45 00 ; 9, FREADLINE
;
fd43: 53 fd 00 00                ; FREAD - (next: fd53 FOPEN)
fd47: 5d 02 00 00 02             ; XT=025d, flags=02
fd4c: 05 46 52 45 41 44 00       ; 5, FREAD
;
fd53: 63 fd 00 00                ; FOPEN - (next: fd63 COMPARE)
fd57: 56 02 00 00 02             ; XT=0256, flags=02
fd5c: 05 46 4f 50 45 4e 00       ; 5, FOPEN
;
fd63: 75 fd 00 00                ; COMPARE - (next: fd75 OVER)
fd67: 4f 02 00 00 02             ; XT=024f, flags=02
fd6c: 07 43 4f 4d 50 41 52 45 00 ; 7, COMPARE
;
fd75: 84 fd 00 00                ; OVER - (next: fd84 EMIT)
fd79: 48 02 00 00 02             ; XT=0248, flags=02
fd7e: 04 4f 56 45 52 00          ; 4, OVER
;
fd84: 93 fd 00 00                ; EMIT - (next: fd93 DICTP)
fd88: 41 02 00 00 02             ; XT=0241, flags=02
fd8d: 04 45 4d 49 54 00          ; 4, EMIT
;
fd93: a3 fd 00 00                ; DICTP - (next: fda3 >)
fd97: 34 02 00 00 02             ; XT=0234, flags=02
fd9c: 05 44 49 43 54 50 00       ; 5, DICTP
;
fda3: af fd 00 00                ; > - (next: fdaf =)
fda7: 2d 02 00 00 02             ; XT=022d, flags=02
fdac: 01 3e 00                   ; 1, >
;
fdaf: bb fd 00 00                ; = - (next: fdbb <)
fdb3: 26 02 00 00 02             ; XT=0226, flags=02
fdb8: 01 3d 00                   ; 1, =
;
fdbb: c7 fd 00 00                ; < - (next: fdc7 /)
fdbf: 1f 02 00 00 02             ; XT=021f, flags=02
fdc4: 01 3c 00                   ; 1, <
;
fdc7: d3 fd 00 00                ; / - (next: fdd3 *)
fdcb: 18 02 00 00 02             ; XT=0218, flags=02
fdd0: 01 2f 00                   ; 1, /
;
fdd3: df fd 00 00                ; * - (next: fddf -)
fdd7: 11 02 00 00 02             ; XT=0211, flags=02
fddc: 01 2a 00                   ; 1, *
;
fddf: eb fd 00 00                ; - - (next: fdeb +)
fde3: 0a 02 00 00 02             ; XT=020a, flags=02
fde8: 01 2d 00                   ; 1, -
;
fdeb: f7 fd 00 00                ; + - (next: fdf7 C!)
fdef: 03 02 00 00 02             ; XT=0203, flags=02
fdf4: 01 2b 00                   ; 1, +
;
fdf7: 04 fe 00 00                ; C! - (next: fe04 C@)
fdfb: fc 01 00 00 02             ; XT=01fc, flags=02
fe00: 02 43 21 00                ; 2, C!
;
fe04: 11 fe 00 00                ; C@ - (next: fe11 CLITERAL)
fe08: f5 01 00 00 02             ; XT=01f5, flags=02
fe0d: 02 43 40 00                ; 2, C@
;
fe11: 24 fe 00 00                ; CLITERAL - (next: fe24 OR)
fe15: e8 01 00 00 02             ; XT=01e8, flags=02
fe1a: 08 43 4c 49 54 45 52 41 4c 00 ; 8, CLITERAL
;
fe24: 31 fe 00 00                ; OR - (next: fe31 RET)
fe28: e1 01 00 00 02             ; XT=01e1, flags=02
fe2d: 02 4f 52 00                ; 2, OR
;
fe31: 3f fe 00 00                ; RET - (next: fe3f CALL)
fe35: d4 01 00 00 00             ; XT=01d4, flags=00
fe3a: 03 52 45 54 00             ; 3, RET
;
fe3f: 4e fe 00 00                ; CALL - (next: fe4e JMPNZ)
fe43: c7 01 00 00 00             ; XT=01c7, flags=00
fe48: 04 43 41 4c 4c 00          ; 4, CALL
;
fe4e: 5e fe 00 00                ; JMPNZ - (next: fe5e JMPZ)
fe52: ba 01 00 00 00             ; XT=01ba, flags=00
fe57: 05 4a 4d 50 4e 5a 00       ; 5, JMPNZ
;
fe5e: 6d fe 00 00                ; JMPZ - (next: fe6d JMP)
fe62: ad 01 00 00 00             ; XT=01ad, flags=00
fe67: 04 4a 4d 50 5a 00          ; 4, JMPZ
;
fe6d: 7b fe 00 00                ; JMP - (next: fe7b SLITERAL)
fe71: a0 01 00 00 00             ; XT=01a0, flags=00
fe76: 03 4a 4d 50 00             ; 3, JMP
;
fe7b: 8e fe 00 00                ; SLITERAL - (next: fe8e DUP)
fe7f: 93 01 00 00 00             ; XT=0193, flags=00
fe84: 08 53 4c 49 54 45 52 41 4c 00 ; 8, SLITERAL
;
fe8e: 9c fe 00 00                ; DUP - (next: fe9c DROP)
fe92: 8c 01 00 00 02             ; XT=018c, flags=02
fe97: 03 44 55 50 00             ; 3, DUP
;
fe9c: ab fe 00 00                ; DROP - (next: feab SWAP)
fea0: 85 01 00 00 02             ; XT=0185, flags=02
fea5: 04 44 52 4f 50 00          ; 4, DROP
;
feab: ba fe 00 00                ; SWAP - (next: feba !)
feaf: 7e 01 00 00 02             ; XT=017e, flags=02
feb4: 04 53 57 41 50 00          ; 4, SWAP
;
feba: c6 fe 00 00                ; ! - (next: fec6 @)
febe: 77 01 00 00 02             ; XT=0177, flags=02
fec3: 01 21 00                   ; 1, !
;
fec6: d2 fe 00 00                ; @ - (next: fed2 LITERAL)
feca: 70 01 00 00 02             ; XT=0170, flags=02
fecf: 01 40 00                   ; 1, @
;
fed2: e4 fe 00 00                ; LITERAL - (next: fee4 ])
fed6: 63 01 00 00 00             ; XT=0163, flags=00
fedb: 07 4c 49 54 45 52 41 4c 00 ; 7, LITERAL
;
fee4: f0 fe 00 00                ; ] - (next: fef0 [)
fee8: 55 01 00 00 01             ; XT=0155, flags=01
feed: 01 5d 00                   ; 1, ]
;
fef0: fc fe 00 00                ; [ - (next: fefc ,)
fef4: 47 01 00 00 01             ; XT=0147, flags=01
fef9: 01 5b 00                   ; 1, [
;
fefc: 08 ff 00 00                ; , - (next: ff08 C,)
ff00: 2d 01 00 00 00             ; XT=012d, flags=00
ff05: 01 2c 00                   ; 1, ,
;
ff08: 15 ff 00 00                ; C, - (next: ff15 LAST)
ff0c: 15 01 00 00 00             ; XT=0115, flags=00
ff11: 02 43 2c 00                ; 2, C,
;
ff15: 24 ff 00 00                ; LAST - (next: ff24 HERE)
ff19: 09 01 00 00 00             ; XT=0109, flags=00
ff1e: 04 4c 41 53 54 00          ; 4, LAST
;
ff24: 33 ff 00 00                ; HERE - (next: ff33 CELL)
ff28: fd 00 00 00 00             ; XT=00fd, flags=00
ff2d: 04 48 45 52 45 00          ; 4, HERE
;
ff33: 42 ff 00 00                ; CELL - (next: ff42 T3)
ff37: f5 00 00 00 02             ; XT=00f5, flags=02
ff3c: 04 43 45 4c 4c 00          ; 4, CELL
;
ff42: 4f ff 00 00                ; T3 - (next: ff4f T2)
ff46: e5 00 00 00 00             ; XT=00e5, flags=00
ff4b: 02 54 33 00                ; 2, T3
;
ff4f: 5c ff 00 00                ; T2 - (next: ff5c T1)
ff53: d6 00 00 00 00             ; XT=00d6, flags=00
ff58: 02 54 32 00                ; 2, T2
;
ff5c: 69 ff 00 00                ; T1 - (next: ff69 INPUT-FP)
ff60: c7 00 00 00 00             ; XT=00c7, flags=00
ff65: 02 54 31 00                ; 2, T1
;
ff69: 7c ff 00 00                ; INPUT-FP - (next: ff7c #LEN)
ff6d: b8 00 00 00 00             ; XT=00b8, flags=00
ff72: 08 49 4e 50 55 54 2d 46 50 00 ; 8, INPUT-FP
;
ff7c: 8b ff 00 00                ; #LEN - (next: ff8b #NEG)
ff80: a9 00 00 00 00             ; XT=00a9, flags=00
ff85: 04 23 4c 45 4e 00          ; 4, #LEN
;
ff8b: 9a ff 00 00                ; #NEG - (next: ff9a >IN)
ff8f: 9a 00 00 00 00             ; XT=009a, flags=00
ff94: 04 23 4e 45 47 00          ; 4, #NEG
;
ff9a: a8 ff 00 00                ; >IN - (next: ffa8 (MEM_SZ))
ff9e: 8b 00 00 00 00             ; XT=008b, flags=00
ffa3: 03 3e 49 4e 00             ; 3, >IN
;
ffa8: bb ff 00 00                ; (MEM_SZ) - (next: ffbb STATE)
ffac: 7c 00 00 00 00             ; XT=007c, flags=00
ffb1: 08 28 4d 45 4d 5f 53 5a 29 00 ; 8, (MEM_SZ)
;
ffbb: cb ff 00 00                ; STATE - (next: ffcb BASE)
ffbf: 6d 00 00 00 00             ; XT=006d, flags=00
ffc4: 05 53 54 41 54 45 00       ; 5, STATE
;
ffcb: da ff 00 00                ; BASE - (next: ffda (LAST))
ffcf: 5e 00 00 00 00             ; XT=005e, flags=00
ffd4: 04 42 41 53 45 00          ; 4, BASE
;
ffda: eb ff 00 00                ; (LAST) - (next: ffeb (HERE))
ffde: 4f 00 00 00 00             ; XT=004f, flags=00
ffe3: 06 28 4c 41 53 54 29 00    ; 6, (LAST)
;
ffeb: fc ff 00 00                ; (HERE) - (next: fffc <end>)
ffef: 40 00 00 00 00             ; XT=0040, flags=00
fff4: 06 28 48 45 52 45 29 00    ; 6, (HERE)
;
fffc: 00 00 00 00                ; End.
