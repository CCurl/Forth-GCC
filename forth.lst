; memory-size: 65536 bytes, (10000 hex)
; data-stack: fe00, grows up
; return-stack: fffc, grows down
;
0000: 08 bc 10 00 00             ; JMP main (10bc)
;
0005: 00 0a 04
0008: 00000000 00000000
0010: 00001319 0000f02c 00000000 00000000
0020: 00000063 00010000 00000000 00000000
0030: 00000000 00000000 00000000 00000000
;
0040: 18 ed fd 00 00             ; DICTP BASE (fded)
0045: 0e 06                      ; CLITERAL 6
0047: 0c                         ; RET
;
0048: 18 de fd 00 00             ; DICTP CELL (fdde)
004d: 0e 04                      ; CLITERAL 4
004f: 0c                         ; RET
;
0050: 18 cd fd 00 00             ; DICTP (HERE) (fdcd)
0055: 0e 10                      ; CLITERAL 16
0057: 0c                         ; RET
;
0058: 18 bc fd 00 00             ; DICTP (LAST) (fdbc)
005d: 0e 14                      ; CLITERAL 20
005f: 0c                         ; RET
;
0060: 18 a9 fd 00 00             ; DICTP INPUT-FP (fda9)
0065: 0e 1c                      ; CLITERAL 28
0067: 0c                         ; RET
;
0068: 18 99 fd 00 00             ; DICTP STATE (fd99)
006d: 0e 20                      ; CLITERAL 32
006f: 0c                         ; RET
;
0070: 18 8c fd 00 00             ; DICTP C, (fd8c)
0075: 0e 10                      ; CLITERAL 16
0077: 02                         ; FETCH
0078: 10                         ; CSTORE
0079: 0e 10                      ; CLITERAL 16
007b: 02                         ; FETCH
007c: 2c                         ; INC
007d: 0e 10                      ; CLITERAL 16
007f: 03                         ; STORE
0080: 0c                         ; RET
;
0081: 18 80 fd 00 00             ; DICTP , (fd80)
0086: 0e 10                      ; CLITERAL 16
0088: 02                         ; FETCH
0089: 03                         ; STORE
008a: 0e 10                      ; CLITERAL 16
008c: 02                         ; FETCH
008d: 0e 04                      ; CLITERAL 4
008f: 11                         ; ADD
0090: 0e 10                      ; CLITERAL 16
0092: 03                         ; STORE
0093: 0c                         ; RET
;
0094: 18 74 fd 00 00             ; DICTP [ (fd74)
0099: 0e 00                      ; CLITERAL 0
009b: 0e 20                      ; CLITERAL 32
009d: 03                         ; STORE
009e: 0c                         ; RET
;
009f: 18 68 fd 00 00             ; DICTP ] (fd68)
00a4: 0e 01                      ; CLITERAL 1
00a6: 0e 20                      ; CLITERAL 32
00a8: 03                         ; STORE
00a9: 0c                         ; RET
;
00aa: 18 56 fd 00 00             ; DICTP LITERAL (fd56)
00af: 0e 01                      ; CLITERAL 1
00b1: 0b 70 00 00 00             ; CALL C, (0070)
00b6: 0c                         ; RET
;
00b7: 18 4a fd 00 00             ; DICTP @ (fd4a)
00bc: 02                         ; FETCH
00bd: 0c                         ; RET
;
00be: 18 3e fd 00 00             ; DICTP ! (fd3e)
00c3: 03                         ; STORE
00c4: 0c                         ; RET
;
00c5: 18 2f fd 00 00             ; DICTP SWAP (fd2f)
00ca: 04                         ; SWAP
00cb: 0c                         ; RET
;
00cc: 18 20 fd 00 00             ; DICTP DROP (fd20)
00d1: 05                         ; DROP
00d2: 0c                         ; RET
;
00d3: 18 12 fd 00 00             ; DICTP DUP (fd12)
00d8: 06                         ; DUP
00d9: 0c                         ; RET
;
00da: 18 ff fc 00 00             ; DICTP SLITERAL (fcff)
00df: 0e 07                      ; CLITERAL 7
00e1: 0b 70 00 00 00             ; CALL C, (0070)
00e6: 0c                         ; RET
;
00e7: 18 f1 fc 00 00             ; DICTP JMP (fcf1)
00ec: 0e 08                      ; CLITERAL 8
00ee: 0b 70 00 00 00             ; CALL C, (0070)
00f3: 0c                         ; RET
;
00f4: 18 e2 fc 00 00             ; DICTP JMPZ (fce2)
00f9: 0e 09                      ; CLITERAL 9
00fb: 0b 70 00 00 00             ; CALL C, (0070)
0100: 0c                         ; RET
;
0101: 18 d2 fc 00 00             ; DICTP JMPNZ (fcd2)
0106: 0e 0a                      ; CLITERAL 10
0108: 0b 70 00 00 00             ; CALL C, (0070)
010d: 0c                         ; RET
;
010e: 18 c3 fc 00 00             ; DICTP CALL (fcc3)
0113: 0e 0b                      ; CLITERAL 11
0115: 0b 70 00 00 00             ; CALL C, (0070)
011a: 0c                         ; RET
;
011b: 18 b5 fc 00 00             ; DICTP RET (fcb5)
0120: 0e 0c                      ; CLITERAL 12
0122: 0b 70 00 00 00             ; CALL C, (0070)
0127: 0c                         ; RET
;
0128: 18 a8 fc 00 00             ; DICTP OR (fca8)
012d: 0d                         ; OR
012e: 0c                         ; RET
;
012f: 18 95 fc 00 00             ; DICTP CLITERAL (fc95)
0134: 0e 0e                      ; CLITERAL 14
0136: 0b 70 00 00 00             ; CALL C, (0070)
013b: 0c                         ; RET
;
013c: 18 88 fc 00 00             ; DICTP C@ (fc88)
0141: 0f                         ; CFETCH
0142: 0c                         ; RET
;
0143: 18 7b fc 00 00             ; DICTP C! (fc7b)
0148: 10                         ; CSTORE
0149: 0c                         ; RET
;
014a: 18 6f fc 00 00             ; DICTP + (fc6f)
014f: 11                         ; ADD
0150: 0c                         ; RET
;
0151: 18 63 fc 00 00             ; DICTP - (fc63)
0156: 12                         ; SUB
0157: 0c                         ; RET
;
0158: 18 57 fc 00 00             ; DICTP * (fc57)
015d: 13                         ; MUL
015e: 0c                         ; RET
;
015f: 18 4b fc 00 00             ; DICTP / (fc4b)
0164: 14                         ; DIV
0165: 0c                         ; RET
;
0166: 18 3f fc 00 00             ; DICTP < (fc3f)
016b: 15                         ; LT
016c: 0c                         ; RET
;
016d: 18 33 fc 00 00             ; DICTP = (fc33)
0172: 16                         ; EQ
0173: 0c                         ; RET
;
0174: 18 27 fc 00 00             ; DICTP > (fc27)
0179: 17                         ; GT
017a: 0c                         ; RET
;
017b: 18 17 fc 00 00             ; DICTP DICTP (fc17)
0180: 0e 18                      ; CLITERAL 24
0182: 0b 70 00 00 00             ; CALL C, (0070)
0187: 0c                         ; RET
;
0188: 18 08 fc 00 00             ; DICTP EMIT (fc08)
018d: 19                         ; EMIT
018e: 0c                         ; RET
;
018f: 18 f9 fb 00 00             ; DICTP OVER (fbf9)
0194: 1a                         ; OVER
0195: 0c                         ; RET
;
0196: 18 e7 fb 00 00             ; DICTP COMPARE (fbe7)
019b: 1b                         ; COMPARE
019c: 0c                         ; RET
;
019d: 18 d7 fb 00 00             ; DICTP FOPEN (fbd7)
01a2: 1c                         ; FOPEN
01a3: 0c                         ; RET
;
01a4: 18 c7 fb 00 00             ; DICTP FREAD (fbc7)
01a9: 1d                         ; FREAD
01aa: 0c                         ; RET
;
01ab: 18 b3 fb 00 00             ; DICTP FREADLINE (fbb3)
01b0: 1e                         ; FREADLINE
01b1: 0c                         ; RET
;
01b2: 18 a2 fb 00 00             ; DICTP FWRITE (fba2)
01b7: 1f                         ; FWRITE
01b8: 0c                         ; RET
;
01b9: 18 91 fb 00 00             ; DICTP FCLOSE (fb91)
01be: 20                         ; FCLOSE
01bf: 0c                         ; RET
;
01c0: 18 84 fb 00 00             ; DICTP >R (fb84)
01c5: 21                         ; DTOR
01c6: 0c                         ; RET
;
01c7: 18 77 fb 00 00             ; DICTP R> (fb77)
01cc: 22                         ; RTOD
01cd: 0c                         ; RET
;
01ce: 18 64 fb 00 00             ; DICTP LOGLEVEL (fb64)
01d3: 23                         ; LOGLEVEL
01d4: 0c                         ; RET
;
01d5: 18 56 fb 00 00             ; DICTP AND (fb56)
01da: 24                         ; AND
01db: 0c                         ; RET
;
01dc: 18 47 fb 00 00             ; DICTP PICK (fb47)
01e1: 25                         ; PICK
01e2: 0c                         ; RET
;
01e3: 18 37 fb 00 00             ; DICTP DEPTH (fb37)
01e8: 26                         ; DEPTH
01e9: 0c                         ; RET
;
01ea: 18 27 fb 00 00             ; DICTP GETCH (fb27)
01ef: 27                         ; GETCH
01f0: 0c                         ; RET
;
01f1: 18 14 fb 00 00             ; DICTP COMPAREI (fb14)
01f6: 28                         ; COMPAREI
01f7: 0c                         ; RET
;
01f8: 18 03 fb 00 00             ; DICTP USINIT (fb03)
01fd: 29                         ; USTACKINIT
01fe: 0c                         ; RET
;
01ff: 18 f2 fa 00 00             ; DICTP USPUSH (faf2)
0204: 2a                         ; UPUSH
0205: 0c                         ; RET
;
0206: 18 e2 fa 00 00             ; DICTP USPOP (fae2)
020b: 2b                         ; UPOP
020c: 0c                         ; RET
;
020d: 18 d4 fa 00 00             ; DICTP INC (fad4)
0212: 2c                         ; INC
0213: 0c                         ; RET
;
0214: 18 c3 fa 00 00             ; DICTP RDEPTH (fac3)
0219: 2d                         ; RDEPTH
021a: 0c                         ; RET
;
021b: 18 b3 fa 00 00             ; DICTP BREAK (fab3)
0220: fd                         ; BREAK
0221: 0c                         ; RET
;
0222: 18 a3 fa 00 00             ; DICTP RESET (faa3)
0227: fe                         ; RESET
0228: 0c                         ; RET
;
0229: 18 95 fa 00 00             ; DICTP BYE (fa95)
022e: ff                         ; BYE
022f: 0c                         ; RET
;
0230: 18 84 fa 00 00             ; DICTP INLINE (fa84)
0235: 0e 14                      ; CLITERAL 20
0237: 02                         ; FETCH
0238: 0e 02                      ; CLITERAL 2
023a: 0e 04                      ; CLITERAL 4
023c: 13                         ; MUL
023d: 11                         ; ADD
023e: 06                         ; DUP
023f: 0f                         ; CFETCH
0240: 0e 02                      ; CLITERAL 2
0242: 0d                         ; OR
0243: 04                         ; SWAP
0244: 10                         ; CSTORE
0245: 0c                         ; RET
;
0246: 18 70 fa 00 00             ; DICTP IMMEDIATE (fa70)
024b: 0e 14                      ; CLITERAL 20
024d: 02                         ; FETCH
024e: 0e 02                      ; CLITERAL 2
0250: 0e 04                      ; CLITERAL 4
0252: 13                         ; MUL
0253: 11                         ; ADD
0254: 06                         ; DUP
0255: 0f                         ; CFETCH
0256: 0e 01                      ; CLITERAL 1
0258: 0d                         ; OR
0259: 04                         ; SWAP
025a: 10                         ; CSTORE
025b: 0c                         ; RET
;
025c: 18 60 fa 00 00             ; DICTP CELLS (fa60)
0261: 0e 04                      ; CLITERAL 4
0263: 13                         ; MUL
0264: 0c                         ; RET
;
0265: 18 47 fa 00 00             ; DICTP FLAG_IMMEDIATE (fa47)
026a: 0e 01                      ; CLITERAL 1
026c: 0c                         ; RET
;
026d: 18 31 fa 00 00             ; DICTP FLAG_INLINE (fa31)
0272: 0e 02                      ; CLITERAL 2
0274: 0c                         ; RET
;
0275: 18 22 fa 00 00             ; DICTP LAST (fa22)
027a: 0e 14                      ; CLITERAL 20
027c: 02                         ; FETCH
027d: 0c                         ; RET
;
027e: 18 13 fa 00 00             ; DICTP HERE (fa13)
0283: 0e 10                      ; CLITERAL 16
0285: 02                         ; FETCH
0286: 0c                         ; RET
;
0287: 18 07 fa 00 00             ; DICTP , (fa07)
028c: 0e 10                      ; CLITERAL 16
028e: 02                         ; FETCH
028f: 03                         ; STORE
0290: 0e 10                      ; CLITERAL 16
0292: 02                         ; FETCH
0293: 0e 04                      ; CLITERAL 4
0295: 11                         ; ADD
0296: 0e 10                      ; CLITERAL 16
0298: 03                         ; STORE
0299: 0c                         ; RET
;
029a: 18 fa f9 00 00             ; DICTP C, (f9fa)
029f: 0e 10                      ; CLITERAL 16
02a1: 02                         ; FETCH
02a2: 10                         ; CSTORE
02a3: 0e 10                      ; CLITERAL 16
02a5: 02                         ; FETCH
02a6: 0e 01                      ; CLITERAL 1
02a8: 11                         ; ADD
02a9: 0e 10                      ; CLITERAL 16
02ab: 03                         ; STORE
02ac: 0c                         ; RET
;
02ad: 18 ec f9 00 00             ; DICTP HEX (f9ec)
02b2: 0e 10                      ; CLITERAL 16
02b4: 0e 06                      ; CLITERAL 6
02b6: 10                         ; CSTORE
02b7: 0c                         ; RET
;
02b8: 18 da f9 00 00             ; DICTP DECIMAL (f9da)
02bd: 0e 0a                      ; CLITERAL 10
02bf: 0e 06                      ; CLITERAL 6
02c1: 10                         ; CSTORE
02c2: 0c                         ; RET
;
02c3: 18 ca f9 00 00             ; DICTP OCTAL (f9ca)
02c8: 0e 08                      ; CLITERAL 8
02ca: 0e 06                      ; CLITERAL 6
02cc: 10                         ; CSTORE
02cd: 0c                         ; RET
;
02ce: 18 b9 f9 00 00             ; DICTP BINARY (f9b9)
02d3: 0e 02                      ; CLITERAL 2
02d5: 0e 06                      ; CLITERAL 6
02d7: 10                         ; CSTORE
02d8: 0c                         ; RET
;
02d9: 18 ac f9 00 00             ; DICTP ON (f9ac)
02de: 0e 01                      ; CLITERAL 1
02e0: 04                         ; SWAP
02e1: 03                         ; STORE
02e2: 0c                         ; RET
;
02e3: 18 9e f9 00 00             ; DICTP OFF (f99e)
02e8: 0e 00                      ; CLITERAL 0
02ea: 04                         ; SWAP
02eb: 03                         ; STORE
02ec: 0c                         ; RET
;
02ed: 18 89 f9 00 00             ; DICTP ?COMPILING (f989)
02f2: 0e 20                      ; CLITERAL 32
02f4: 02                         ; FETCH
02f5: 0c                         ; RET
;
02f6: 18 7c f9 00 00             ; DICTP IF (f97c)
02fb: 0b ed 02 00 00             ; CALL ?COMPILING (02ed)
0300: 09 14 03 00 00             ; JMPZ 0314
0305: 0b f4 00 00 00             ; CALL JMPZ (00f4)
030a: 0e 10                      ; CLITERAL 16
030c: 02                         ; FETCH
030d: 0e 00                      ; CLITERAL 0
030f: 0b 87 02 00 00             ; CALL , (0287)
0314: 0c                         ; RET
;
0315: 18 6d f9 00 00             ; DICTP ELSE (f96d)
031a: 0b ed 02 00 00             ; CALL ?COMPILING (02ed)
031f: 09 39 03 00 00             ; JMPZ 0339
0324: 0b e7 00 00 00             ; CALL JMP (00e7)
0329: 0e 10                      ; CLITERAL 16
032b: 02                         ; FETCH
032c: 04                         ; SWAP
032d: 0e 00                      ; CLITERAL 0
032f: 0b 87 02 00 00             ; CALL , (0287)
0334: 0e 10                      ; CLITERAL 16
0336: 02                         ; FETCH
0337: 04                         ; SWAP
0338: 03                         ; STORE
0339: 0c                         ; RET
;
033a: 18 5e f9 00 00             ; DICTP THEN (f95e)
033f: 0b ed 02 00 00             ; CALL ?COMPILING (02ed)
0344: 09 4e 03 00 00             ; JMPZ 034e
0349: 0e 10                      ; CLITERAL 16
034b: 02                         ; FETCH
034c: 04                         ; SWAP
034d: 03                         ; STORE
034e: 0c                         ; RET
;
034f: 18 4e f9 00 00             ; DICTP BEGIN (f94e)
0354: 0b ed 02 00 00             ; CALL ?COMPILING (02ed)
0359: 09 61 03 00 00             ; JMPZ 0361
035e: 0e 10                      ; CLITERAL 16
0360: 02                         ; FETCH
0361: 0c                         ; RET
;
0362: 18 3e f9 00 00             ; DICTP AGAIN (f93e)
0367: 0b ed 02 00 00             ; CALL ?COMPILING (02ed)
036c: 09 7b 03 00 00             ; JMPZ 037b
0371: 0b e7 00 00 00             ; CALL JMP (00e7)
0376: 0b 87 02 00 00             ; CALL , (0287)
037b: 0c                         ; RET
;
037c: 18 2e f9 00 00             ; DICTP WHILE (f92e)
0381: 0b ed 02 00 00             ; CALL ?COMPILING (02ed)
0386: 09 95 03 00 00             ; JMPZ 0395
038b: 0b 01 01 00 00             ; CALL JMPNZ (0101)
0390: 0b 87 02 00 00             ; CALL , (0287)
0395: 0c                         ; RET
;
0396: 18 1e f9 00 00             ; DICTP UNTIL (f91e)
039b: 0b ed 02 00 00             ; CALL ?COMPILING (02ed)
03a0: 09 af 03 00 00             ; JMPZ 03af
03a5: 0b f4 00 00 00             ; CALL JMPZ (00f4)
03aa: 0b 87 02 00 00             ; CALL , (0287)
03af: 0c                         ; RET
;
03b0: 18 0e f9 00 00             ; DICTP LEAVE (f90e)
03b5: 0b ed 02 00 00             ; CALL ?COMPILING (02ed)
03ba: 09 c4 03 00 00             ; JMPZ 03c4
03bf: 0b 1b 01 00 00             ; CALL RET (011b)
03c4: 0c                         ; RET
;
03c5: 18 00 f9 00 00             ; DICTP >IN (f900)
03ca: 01 d0 03 00 00             ; LITERAL 976 (3d0)
03cf: 0c                         ; RET
03d0: 00                         ; RESET
03d1: 00                         ; RESET
03d2: 00                         ; RESET
03d3: 00                         ; RESET
03d4: 0c                         ; RET
;
03d5: 18 f0 f8 00 00             ; DICTP isNeg (f8f0)
03da: 01 e0 03 00 00             ; LITERAL 992 (3e0)
03df: 0c                         ; RET
03e0: 00                         ; RESET
03e1: 00                         ; RESET
03e2: 00                         ; RESET
03e3: 00                         ; RESET
03e4: 0c                         ; RET
;
03e5: 18 df f8 00 00             ; DICTP MEM_SZ (f8df)
03ea: 0e 24                      ; CLITERAL 36
03ec: 02                         ; FETCH
03ed: 0c                         ; RET
;
03ee: 18 cc f8 00 00             ; DICTP TRACE-ON (f8cc)
03f3: 0e 02                      ; CLITERAL 2
03f5: 23                         ; LOGLEVEL
03f6: 0c                         ; RET
;
03f7: 18 b8 f8 00 00             ; DICTP TRACE-OFF (f8b8)
03fc: 0e 00                      ; CLITERAL 0
03fe: 23                         ; LOGLEVEL
03ff: 0c                         ; RET
;
0400: 18 a5 f8 00 00             ; DICTP DEBUG-ON (f8a5)
0405: 0e 01                      ; CLITERAL 1
0407: 23                         ; LOGLEVEL
0408: 0c                         ; RET
;
0409: 18 91 f8 00 00             ; DICTP DEBUG-OFF (f891)
040e: 0e 00                      ; CLITERAL 0
0410: 23                         ; LOGLEVEL
0411: 0c                         ; RET
;
0412: 18 84 f8 00 00             ; DICTP R@ (f884)
0417: 22                         ; RTOD
0418: 06                         ; DUP
0419: 21                         ; DTOR
041a: 0c                         ; RET
;
041b: 18 74 f8 00 00             ; DICTP RDROP (f874)
0420: 22                         ; RTOD
0421: 05                         ; DROP
0422: 0c                         ; RET
;
0423: 18 65 f8 00 00             ; DICTP 2DUP (f865)
0428: 1a                         ; OVER
0429: 1a                         ; OVER
042a: 0c                         ; RET
;
042b: 18 55 f8 00 00             ; DICTP 2DROP (f855)
0430: 05                         ; DROP
0431: 05                         ; DROP
0432: 0c                         ; RET
;
0433: 18 46 f8 00 00             ; DICTP TUCK (f846)
0438: 04                         ; SWAP
0439: 1a                         ; OVER
043a: 0c                         ; RET
;
043b: 18 38 f8 00 00             ; DICTP NIP (f838)
0440: 04                         ; SWAP
0441: 05                         ; DROP
0442: 0c                         ; RET
;
0443: 18 2a f8 00 00             ; DICTP ROT (f82a)
0448: 21                         ; DTOR
0449: 04                         ; SWAP
044a: 22                         ; RTOD
044b: 04                         ; SWAP
044c: 0c                         ; RET
;
044d: 18 1b f8 00 00             ; DICTP -ROT (f81b)
0452: 04                         ; SWAP
0453: 21                         ; DTOR
0454: 04                         ; SWAP
0455: 22                         ; RTOD
0456: 0c                         ; RET
;
0457: 18 0e f8 00 00             ; DICTP 1+ (f80e)
045c: 2c                         ; INC
045d: 0c                         ; RET
;
045e: 18 01 f8 00 00             ; DICTP 1- (f801)
0463: 0e 01                      ; CLITERAL 1
0465: 12                         ; SUB
0466: 0c                         ; RET
;
0467: 18 f4 f7 00 00             ; DICTP 2* (f7f4)
046c: 0e 02                      ; CLITERAL 2
046e: 13                         ; MUL
046f: 0c                         ; RET
;
0470: 18 e7 f7 00 00             ; DICTP 2/ (f7e7)
0475: 0e 02                      ; CLITERAL 2
0477: 14                         ; DIV
0478: 0c                         ; RET
;
0479: 18 da f7 00 00             ; DICTP += (f7da)
047e: 1a                         ; OVER
047f: 02                         ; FETCH
0480: 11                         ; ADD
0481: 04                         ; SWAP
0482: 03                         ; STORE
0483: 0c                         ; RET
;
0484: 18 cd f7 00 00             ; DICTP -= (f7cd)
0489: 1a                         ; OVER
048a: 02                         ; FETCH
048b: 04                         ; SWAP
048c: 12                         ; SUB
048d: 04                         ; SWAP
048e: 03                         ; STORE
048f: 0c                         ; RET
;
0490: 18 c0 f7 00 00             ; DICTP ++ (f7c0)
0495: 0e 01                      ; CLITERAL 1
0497: 0b 79 04 00 00             ; CALL += (0479)
049c: 0c                         ; RET
;
049d: 18 b3 f7 00 00             ; DICTP -- (f7b3)
04a2: 0e 01                      ; CLITERAL 1
04a4: 0b 84 04 00 00             ; CALL -= (0484)
04a9: 0c                         ; RET
;
04aa: 18 a5 f7 00 00             ; DICTP C++ (f7a5)
04af: 06                         ; DUP
04b0: 0f                         ; CFETCH
04b1: 2c                         ; INC
04b2: 04                         ; SWAP
04b3: 10                         ; CSTORE
04b4: 0c                         ; RET
;
04b5: 18 97 f7 00 00             ; DICTP C-- (f797)
04ba: 06                         ; DUP
04bb: 0f                         ; CFETCH
04bc: 0e 01                      ; CLITERAL 1
04be: 12                         ; SUB
04bf: 04                         ; SWAP
04c0: 10                         ; CSTORE
04c1: 0c                         ; RET
;
04c2: 18 8a f7 00 00             ; DICTP +! (f78a)
04c7: 04                         ; SWAP
04c8: 1a                         ; OVER
04c9: 02                         ; FETCH
04ca: 11                         ; ADD
04cb: 04                         ; SWAP
04cc: 03                         ; STORE
04cd: 0c                         ; RET
;
04ce: 18 7c f7 00 00             ; DICTP C+! (f77c)
04d3: 04                         ; SWAP
04d4: 1a                         ; OVER
04d5: 0f                         ; CFETCH
04d6: 11                         ; ADD
04d7: 04                         ; SWAP
04d8: 10                         ; CSTORE
04d9: 0c                         ; RET
;
04da: 18 6f f7 00 00             ; DICTP 0= (f76f)
04df: 0e 00                      ; CLITERAL 0
04e1: 16                         ; EQ
04e2: 0c                         ; RET
;
04e3: 18 62 f7 00 00             ; DICTP <> (f762)
04e8: 16                         ; EQ
04e9: 0e 00                      ; CLITERAL 0
04eb: 16                         ; EQ
04ec: 0c                         ; RET
;
04ed: 18 55 f7 00 00             ; DICTP <= (f755)
04f2: 17                         ; GT
04f3: 0e 00                      ; CLITERAL 0
04f5: 16                         ; EQ
04f6: 0c                         ; RET
;
04f7: 18 48 f7 00 00             ; DICTP >= (f748)
04fc: 15                         ; LT
04fd: 0e 00                      ; CLITERAL 0
04ff: 16                         ; EQ
0500: 0c                         ; RET
;
0501: 18 39 f7 00 00             ; DICTP TRUE (f739)
0506: 0e 01                      ; CLITERAL 1
0508: 0c                         ; RET
;
0509: 18 29 f7 00 00             ; DICTP FALSE (f729)
050e: 0e 00                      ; CLITERAL 0
0510: 0c                         ; RET
;
0511: 18 1b f7 00 00             ; DICTP NOT (f71b)
0516: 0e 00                      ; CLITERAL 0
0518: 16                         ; EQ
0519: 0c                         ; RET
;
051a: 18 0b f7 00 00             ; DICTP COUNT (f70b)
051f: 06                         ; DUP
0520: 2c                         ; INC
0521: 04                         ; SWAP
0522: 0f                         ; CFETCH
0523: 0c                         ; RET
;
0524: 18 fc f6 00 00             ; DICTP TYPE (f6fc)
0529: 1a                         ; OVER
052a: 11                         ; ADD
052b: 04                         ; SWAP
052c: 1a                         ; OVER
052d: 1a                         ; OVER
052e: 17                         ; GT
052f: 0e 00                      ; CLITERAL 0
0531: 16                         ; EQ
0532: 09 3a 05 00 00             ; JMPZ 053a
0537: 05                         ; DROP
0538: 05                         ; DROP
0539: 0c                         ; RET
053a: 06                         ; DUP
053b: 0f                         ; CFETCH
053c: 19                         ; EMIT
053d: 2c                         ; INC
053e: 08 2c 05 00 00             ; JMP 052c
0543: 0c                         ; RET
;
0544: 18 ef f6 00 00             ; DICTP CT (f6ef)
0549: 0b 1a 05 00 00             ; CALL COUNT (051a)
054e: 0b 24 05 00 00             ; CALL TYPE (0524)
0553: 0c                         ; RET
;
0554: 18 e3 f6 00 00             ; DICTP \ (f6e3)
0559: 0e 00                      ; CLITERAL 0
055b: 0b c5 03 00 00             ; CALL >IN (03c5)
0560: 02                         ; FETCH
0561: 10                         ; CSTORE
0562: 0c                         ; RET
;
0563: 18 d7 f6 00 00             ; DICTP ( (f6d7)
0568: 0b c5 03 00 00             ; CALL >IN (03c5)
056d: 02                         ; FETCH
056e: 0f                         ; CFETCH
056f: 06                         ; DUP
0570: 0e 00                      ; CLITERAL 0
0572: 16                         ; EQ
0573: 09 94 05 00 00             ; JMPZ 0594
0578: 07 13 6d 69 73 73 69 6e 67 20 63 6c 6f 73 69 6e 67 20 27 29 27 00 ; SLITERAL (0579) [missing closing ')']
058e: 0b 44 05 00 00             ; CALL CT (0544)
0593: fe                         ; RESET
0594: 0b c5 03 00 00             ; CALL >IN (03c5)
0599: 0b 90 04 00 00             ; CALL ++ (0490)
059e: 0e 29                      ; CLITERAL 41
05a0: 16                         ; EQ
05a1: 09 a7 05 00 00             ; JMPZ 05a7
05a6: 0c                         ; RET
05a7: 08 68 05 00 00             ; JMP 0568
05ac: 0c                         ; RET
;
05ad: 18 ca f6 00 00             ; DICTP BL (f6ca)
05b2: 0e 20                      ; CLITERAL 32
05b4: 19                         ; EMIT
05b5: 0c                         ; RET
;
05b6: 18 bb f6 00 00             ; DICTP CRLF (f6bb)
05bb: 0e 0d                      ; CLITERAL 13
05bd: 19                         ; EMIT
05be: 0e 0a                      ; CLITERAL 10
05c0: 19                         ; EMIT
05c1: 0c                         ; RET
;
05c2: 18 ae f6 00 00             ; DICTP CR (f6ae)
05c7: 0e 0d                      ; CLITERAL 13
05c9: 19                         ; EMIT
05ca: 0e 0a                      ; CLITERAL 10
05cc: 19                         ; EMIT
05cd: 0c                         ; RET
;
05ce: 18 9c f6 00 00             ; DICTP BETWEEN (f69c)
05d3: 0e 02                      ; CLITERAL 2
05d5: 25                         ; PICK
05d6: 15                         ; LT
05d7: 09 e1 05 00 00             ; JMPZ 05e1
05dc: 05                         ; DROP
05dd: 05                         ; DROP
05de: 0e 00                      ; CLITERAL 0
05e0: 0c                         ; RET
05e1: 15                         ; LT
05e2: 0e 00                      ; CLITERAL 0
05e4: 16                         ; EQ
05e5: 0c                         ; RET
;
05e6: 18 8c f6 00 00             ; DICTP (tmp) (f68c)
05eb: 01 f1 05 00 00             ; LITERAL 1521 (5f1)
05f0: 0c                         ; RET
05f1: 00                         ; RESET
05f2: 00                         ; RESET
05f3: 00                         ; RESET
05f4: 00                         ; RESET
05f5: 0c                         ; RET
;
05f6: 18 79 f6 00 00             ; DICTP tmp-init (f679)
05fb: 0e 14                      ; CLITERAL 20
05fd: 02                         ; FETCH
05fe: 0b e6 05 00 00             ; CALL (tmp) (05e6)
0603: 03                         ; STORE
0604: 0c                         ; RET
;
0605: 18 67 f6 00 00             ; DICTP tmp-cur (f667)
060a: 0b e6 05 00 00             ; CALL (tmp) (05e6)
060f: 02                         ; FETCH
0610: 0c                         ; RET
;
0611: 18 53 f6 00 00             ; DICTP tmp-alloc (f653)
0616: 0b e6 05 00 00             ; CALL (tmp) (05e6)
061b: 04                         ; SWAP
061c: 1a                         ; OVER
061d: 02                         ; FETCH
061e: 04                         ; SWAP
061f: 12                         ; SUB
0620: 04                         ; SWAP
0621: 03                         ; STORE
0622: 0b 05 06 00 00             ; CALL tmp-cur (0605)
0627: 0c                         ; RET
;
0628: 18 45 f6 00 00             ; DICTP PAD (f645)
062d: 0b f6 05 00 00             ; CALL tmp-init (05f6)
0632: 0e c8                      ; CLITERAL 200
0634: 0b 11 06 00 00             ; CALL tmp-alloc (0611)
0639: 0c                         ; RET
;
063a: 18 32 f6 00 00             ; DICTP getInput (f632)
063f: 0b 28 06 00 00             ; CALL PAD (0628)
0644: 0e 80                      ; CLITERAL 128
0646: 0e 00                      ; CLITERAL 0
0648: 1e                         ; FREADLINE
0649: 05                         ; DROP
064a: 0b 28 06 00 00             ; CALL PAD (0628)
064f: 0c                         ; RET
;
0650: 18 21 f6 00 00             ; DICTP skipWS (f621)
0655: 06                         ; DUP
0656: 0f                         ; CFETCH
0657: 06                         ; DUP
0658: 09 71 06 00 00             ; JMPZ 0671
065d: 0e 20                      ; CLITERAL 32
065f: 17                         ; GT
0660: 09 6b 06 00 00             ; JMPZ 066b
0665: 0c                         ; RET
0666: 08 6c 06 00 00             ; JMP 066c
066b: 2c                         ; INC
066c: 08 73 06 00 00             ; JMP 0673
0671: 05                         ; DROP
0672: 0c                         ; RET
0673: 08 55 06 00 00             ; JMP 0655
0678: 0c                         ; RET
;
0679: 18 0c f6 00 00             ; DICTP getOneWord (f60c)
067e: 06                         ; DUP
067f: 21                         ; DTOR
0680: 21                         ; DTOR
0681: 22                         ; RTOD
0682: 06                         ; DUP
0683: 21                         ; DTOR
0684: 0f                         ; CFETCH
0685: 0e 20                      ; CLITERAL 32
0687: 17                         ; GT
0688: 09 95 06 00 00             ; JMPZ 0695
068d: 22                         ; RTOD
068e: 2c                         ; INC
068f: 21                         ; DTOR
0690: 08 ab 06 00 00             ; JMP 06ab
0695: 22                         ; RTOD
0696: 06                         ; DUP
0697: 21                         ; DTOR
0698: 0f                         ; CFETCH
0699: 09 a7 06 00 00             ; JMPZ 06a7
069e: 0e 00                      ; CLITERAL 0
06a0: 22                         ; RTOD
06a1: 06                         ; DUP
06a2: 21                         ; DTOR
06a3: 10                         ; CSTORE
06a4: 22                         ; RTOD
06a5: 2c                         ; INC
06a6: 21                         ; DTOR
06a7: 22                         ; RTOD
06a8: 22                         ; RTOD
06a9: 04                         ; SWAP
06aa: 0c                         ; RET
06ab: 08 81 06 00 00             ; JMP 0681
06b0: 0c                         ; RET
;
06b1: 18 f8 f5 00 00             ; DICTP DICT>NEXT (f5f8)
06b6: 0c                         ; RET
;
06b7: 18 e6 f5 00 00             ; DICTP DICT>XT (f5e6)
06bc: 0e 04                      ; CLITERAL 4
06be: 11                         ; ADD
06bf: 0c                         ; RET
;
06c0: 18 d1 f5 00 00             ; DICTP DICT>FLAGS (f5d1)
06c5: 0e 02                      ; CLITERAL 2
06c7: 0e 04                      ; CLITERAL 4
06c9: 13                         ; MUL
06ca: 11                         ; ADD
06cb: 0c                         ; RET
;
06cc: 18 bd f5 00 00             ; DICTP DICT>NAME (f5bd)
06d1: 0b c0 06 00 00             ; CALL DICT>FLAGS (06c0)
06d6: 2c                         ; INC
06d7: 0c                         ; RET
;
06d8: 18 a9 f5 00 00             ; DICTP NEXT>DICT (f5a9)
06dd: 0c                         ; RET
;
06de: 18 97 f5 00 00             ; DICTP XT>DICT (f597)
06e3: 0e 04                      ; CLITERAL 4
06e5: 12                         ; SUB
06e6: 0c                         ; RET
;
06e7: 18 82 f5 00 00             ; DICTP FLAGS>DICT (f582)
06ec: 0e 02                      ; CLITERAL 2
06ee: 0e 04                      ; CLITERAL 4
06f0: 13                         ; MUL
06f1: 12                         ; SUB
06f2: 0c                         ; RET
;
06f3: 18 6e f5 00 00             ; DICTP NAME>DICT (f56e)
06f8: 0e 01                      ; CLITERAL 1
06fa: 12                         ; SUB
06fb: 0e 02                      ; CLITERAL 2
06fd: 0e 04                      ; CLITERAL 4
06ff: 13                         ; MUL
0700: 12                         ; SUB
0701: 0c                         ; RET
;
0702: 18 59 f5 00 00             ; DICTP DICT.GetXT (f559)
0707: 0b b7 06 00 00             ; CALL DICT>XT (06b7)
070c: 02                         ; FETCH
070d: 0c                         ; RET
;
070e: 18 41 f5 00 00             ; DICTP DICT.GetFLAGS (f541)
0713: 0b c0 06 00 00             ; CALL DICT>FLAGS (06c0)
0718: 0f                         ; CFETCH
0719: 0c                         ; RET
;
071a: 18 2c f5 00 00             ; DICTP DICTP>NAME (f52c)
071f: 2c                         ; INC
0720: 02                         ; FETCH
0721: 0b cc 06 00 00             ; CALL DICT>NAME (06cc)
0726: 0c                         ; RET
;
0727: 18 16 f5 00 00             ; DICTP XT.GetDICTP (f516)
072c: 06                         ; DUP
072d: 0f                         ; CFETCH
072e: 0e 18                      ; CLITERAL 24
0730: 16                         ; EQ
0731: 09 3d 07 00 00             ; JMPZ 073d
0736: 2c                         ; INC
0737: 02                         ; FETCH
0738: 08 3f 07 00 00             ; JMP 073f
073d: 05                         ; DROP
073e: fe                         ; RESET
073f: 0c                         ; RET
;
0740: 18 f9 f4 00 00             ; DICTP FLAGS.ISIMMEDIATE? (f4f9)
0745: 0e 01                      ; CLITERAL 1
0747: 24                         ; AND
0748: 0c                         ; RET
;
0749: 18 df f4 00 00             ; DICTP FLAGS.ISINLINE? (f4df)
074e: 0e 02                      ; CLITERAL 2
0750: 24                         ; AND
0751: 0c                         ; RET
;
0752: 18 c3 f4 00 00             ; DICTP DICT.GetIMMEDIATE (f4c3)
0757: 0b 0e 07 00 00             ; CALL DICT.GetFLAGS (070e)
075c: 0b 40 07 00 00             ; CALL FLAGS.ISIMMEDIATE? (0740)
0761: 0c                         ; RET
;
0762: 18 aa f4 00 00             ; DICTP DICT.GetINLINE (f4aa)
0767: 0b 0e 07 00 00             ; CALL DICT.GetFLAGS (070e)
076c: 0b 49 07 00 00             ; CALL FLAGS.ISINLINE? (0749)
0771: 0c                         ; RET
;
0772: 18 95 f4 00 00             ; DICTP findInDict (f495)
0777: 0e 14                      ; CLITERAL 20
0779: 02                         ; FETCH
077a: 21                         ; DTOR
077b: 22                         ; RTOD
077c: 06                         ; DUP
077d: 21                         ; DTOR
077e: 06                         ; DUP
077f: 09 a8 07 00 00             ; JMPZ 07a8
0784: 0b cc 06 00 00             ; CALL DICT>NAME (06cc)
0789: 2c                         ; INC
078a: 1a                         ; OVER
078b: 28                         ; COMPAREI
078c: 09 a3 07 00 00             ; JMPZ 07a3
0791: 05                         ; DROP
0792: 22                         ; RTOD
0793: 06                         ; DUP
0794: 21                         ; DTOR
0795: 0b 02 07 00 00             ; CALL DICT.GetXT (0702)
079a: 22                         ; RTOD
079b: 0b 0e 07 00 00             ; CALL DICT.GetFLAGS (070e)
07a0: 0e 01                      ; CLITERAL 1
07a2: 0c                         ; RET
07a3: 08 b0 07 00 00             ; JMP 07b0
07a8: 05                         ; DROP
07a9: 05                         ; DROP
07aa: 22                         ; RTOD
07ab: 0e 00                      ; CLITERAL 0
07ad: 0e 00                      ; CLITERAL 0
07af: 0c                         ; RET
07b0: 22                         ; RTOD
07b1: 02                         ; FETCH
07b2: 21                         ; DTOR
07b3: 08 7b 07 00 00             ; JMP 077b
07b8: 0c                         ; RET
;
07b9: 18 84 f4 00 00             ; DICTP isHEX? (f484)
07be: 0e 06                      ; CLITERAL 6
07c0: 0f                         ; CFETCH
07c1: 0e 10                      ; CLITERAL 16
07c3: 16                         ; EQ
07c4: 0c                         ; RET
;
07c5: 18 6f f4 00 00             ; DICTP isNumChar? (f46f)
07ca: 06                         ; DUP
07cb: 0e 30                      ; CLITERAL 48
07cd: 0e 39                      ; CLITERAL 57
07cf: 0b ce 05 00 00             ; CALL BETWEEN (05ce)
07d4: 09 df 07 00 00             ; JMPZ 07df
07d9: 0e 30                      ; CLITERAL 48
07db: 12                         ; SUB
07dc: 0e 01                      ; CLITERAL 1
07de: 0c                         ; RET
07df: 0b b9 07 00 00             ; CALL isHEX? (07b9)
07e4: 09 13 08 00 00             ; JMPZ 0813
07e9: 06                         ; DUP
07ea: 0e 41                      ; CLITERAL 65
07ec: 0e 46                      ; CLITERAL 70
07ee: 0b ce 05 00 00             ; CALL BETWEEN (05ce)
07f3: 09 fe 07 00 00             ; JMPZ 07fe
07f8: 0e 37                      ; CLITERAL 55
07fa: 12                         ; SUB
07fb: 0e 01                      ; CLITERAL 1
07fd: 0c                         ; RET
07fe: 06                         ; DUP
07ff: 0e 61                      ; CLITERAL 97
0801: 0e 66                      ; CLITERAL 102
0803: 0b ce 05 00 00             ; CALL BETWEEN (05ce)
0808: 09 13 08 00 00             ; JMPZ 0813
080d: 0e 57                      ; CLITERAL 87
080f: 12                         ; SUB
0810: 0e 01                      ; CLITERAL 1
0812: 0c                         ; RET
0813: 0e 00                      ; CLITERAL 0
0815: 0c                         ; RET
;
0816: 18 5e f4 00 00             ; DICTP NEGATE (f45e)
081b: 0e 00                      ; CLITERAL 0
081d: 04                         ; SWAP
081e: 12                         ; SUB
081f: 0c                         ; RET
;
0820: 18 50 f4 00 00             ; DICTP ABS (f450)
0825: 06                         ; DUP
0826: 0e 00                      ; CLITERAL 0
0828: 15                         ; LT
0829: 09 33 08 00 00             ; JMPZ 0833
082e: 0b 16 08 00 00             ; CALL NEGATE (0816)
0833: 0c                         ; RET
;
0834: 18 3c f4 00 00             ; DICTP isNumber? (f43c)
0839: 06                         ; DUP
083a: 0f                         ; CFETCH
083b: 0e 2d                      ; CLITERAL 45
083d: 16                         ; EQ
083e: 06                         ; DUP
083f: 0b d5 03 00 00             ; CALL isNeg (03d5)
0844: 10                         ; CSTORE
0845: 09 4b 08 00 00             ; JMPZ 084b
084a: 2c                         ; INC
084b: 0e 00                      ; CLITERAL 0
084d: 21                         ; DTOR
084e: 06                         ; DUP
084f: 0f                         ; CFETCH
0850: 06                         ; DUP
0851: 0e 00                      ; CLITERAL 0
0853: 16                         ; EQ
0854: 09 6f 08 00 00             ; JMPZ 086f
0859: 05                         ; DROP
085a: 05                         ; DROP
085b: 22                         ; RTOD
085c: 0b d5 03 00 00             ; CALL isNeg (03d5)
0861: 0f                         ; CFETCH
0862: 09 6c 08 00 00             ; JMPZ 086c
0867: 0b 16 08 00 00             ; CALL NEGATE (0816)
086c: 0e 01                      ; CLITERAL 1
086e: 0c                         ; RET
086f: 0b c5 07 00 00             ; CALL isNumChar? (07c5)
0874: 09 86 08 00 00             ; JMPZ 0886
0879: 22                         ; RTOD
087a: 0e 06                      ; CLITERAL 6
087c: 0f                         ; CFETCH
087d: 13                         ; MUL
087e: 11                         ; ADD
087f: 21                         ; DTOR
0880: 2c                         ; INC
0881: 08 8b 08 00 00             ; JMP 088b
0886: 05                         ; DROP
0887: 22                         ; RTOD
0888: 0e 00                      ; CLITERAL 0
088a: 0c                         ; RET
088b: 08 4e 08 00 00             ; JMP 084e
0890: 0c                         ; RET
;
0891: 18 2e f4 00 00             ; DICTP MOD (f42e)
0896: 1a                         ; OVER
0897: 1a                         ; OVER
0898: 14                         ; DIV
0899: 13                         ; MUL
089a: 12                         ; SUB
089b: 0c                         ; RET
;
089c: 18 1f f4 00 00             ; DICTP /MOD (f41f)
08a1: 1a                         ; OVER
08a2: 1a                         ; OVER
08a3: 14                         ; DIV
08a4: 06                         ; DUP
08a5: 21                         ; DTOR
08a6: 13                         ; MUL
08a7: 12                         ; SUB
08a8: 22                         ; RTOD
08a9: 04                         ; SWAP
08aa: 0c                         ; RET
;
08ab: 18 11 f4 00 00             ; DICTP (.) (f411)
08b0: 06                         ; DUP
08b1: 0e 00                      ; CLITERAL 0
08b3: 16                         ; EQ
08b4: 09 be 08 00 00             ; JMPZ 08be
08b9: 05                         ; DROP
08ba: 0e 30                      ; CLITERAL 48
08bc: 19                         ; EMIT
08bd: 0c                         ; RET
08be: 06                         ; DUP
08bf: 0e 00                      ; CLITERAL 0
08c1: 15                         ; LT
08c2: 09 d3 08 00 00             ; JMPZ 08d3
08c7: 0b 16 08 00 00             ; CALL NEGATE (0816)
08cc: 0e 01                      ; CLITERAL 1
08ce: 08 d5 08 00 00             ; JMP 08d5
08d3: 0e 00                      ; CLITERAL 0
08d5: 21                         ; DTOR
08d6: 0e 00                      ; CLITERAL 0
08d8: 04                         ; SWAP
08d9: 06                         ; DUP
08da: 09 fc 08 00 00             ; JMPZ 08fc
08df: 0e 06                      ; CLITERAL 6
08e1: 0f                         ; CFETCH
08e2: 0b 9c 08 00 00             ; CALL /MOD (089c)
08e7: 0e 30                      ; CLITERAL 48
08e9: 1a                         ; OVER
08ea: 0e 09                      ; CLITERAL 9
08ec: 17                         ; GT
08ed: 09 f5 08 00 00             ; JMPZ 08f5
08f2: 0e 07                      ; CLITERAL 7
08f4: 11                         ; ADD
08f5: 11                         ; ADD
08f6: 04                         ; SWAP
08f7: 08 19 09 00 00             ; JMP 0919
08fc: 05                         ; DROP
08fd: 22                         ; RTOD
08fe: 09 06 09 00 00             ; JMPZ 0906
0903: 0e 2d                      ; CLITERAL 45
0905: 19                         ; EMIT
0906: 06                         ; DUP
0907: 09 12 09 00 00             ; JMPZ 0912
090c: 19                         ; EMIT
090d: 08 14 09 00 00             ; JMP 0914
0912: 05                         ; DROP
0913: 0c                         ; RET
0914: 08 06 09 00 00             ; JMP 0906
0919: 08 d9 08 00 00             ; JMP 08d9
091e: 0c                         ; RET
;
091f: 18 05 f4 00 00             ; DICTP . (f405)
0924: 0e 20                      ; CLITERAL 32
0926: 19                         ; EMIT
0927: 0b ab 08 00 00             ; CALL (.) (08ab)
092c: 0c                         ; RET
;
092d: 18 f6 f3 00 00             ; DICTP HEX. (f3f6)
0932: 0e 06                      ; CLITERAL 6
0934: 0f                         ; CFETCH
0935: 04                         ; SWAP
0936: 0b ad 02 00 00             ; CALL HEX (02ad)
093b: 06                         ; DUP
093c: 0e 10                      ; CLITERAL 16
093e: 15                         ; LT
093f: 09 47 09 00 00             ; JMPZ 0947
0944: 0e 30                      ; CLITERAL 48
0946: 19                         ; EMIT
0947: 0b ab 08 00 00             ; CALL (.) (08ab)
094c: 0e 06                      ; CLITERAL 6
094e: 10                         ; CSTORE
094f: 0c                         ; RET
;
0950: 18 e3 f3 00 00             ; DICTP DECIMAL. (f3e3)
0955: 0e 06                      ; CLITERAL 6
0957: 0f                         ; CFETCH
0958: 04                         ; SWAP
0959: 0b b8 02 00 00             ; CALL DECIMAL (02b8)
095e: 0b ab 08 00 00             ; CALL (.) (08ab)
0963: 0e 06                      ; CLITERAL 6
0965: 10                         ; CSTORE
0966: 0c                         ; RET
;
0967: 18 d1 f3 00 00             ; DICTP BINARY. (f3d1)
096c: 0e 06                      ; CLITERAL 6
096e: 0f                         ; CFETCH
096f: 04                         ; SWAP
0970: 0b ce 02 00 00             ; CALL BINARY (02ce)
0975: 0b ab 08 00 00             ; CALL (.) (08ab)
097a: 0e 06                      ; CLITERAL 6
097c: 10                         ; CSTORE
097d: 0c                         ; RET
;
097e: 18 c3 f3 00 00             ; DICTP MIN (f3c3)
0983: 1a                         ; OVER
0984: 1a                         ; OVER
0985: 17                         ; GT
0986: 09 8c 09 00 00             ; JMPZ 098c
098b: 04                         ; SWAP
098c: 05                         ; DROP
098d: 0c                         ; RET
;
098e: 18 b5 f3 00 00             ; DICTP MAX (f3b5)
0993: 1a                         ; OVER
0994: 1a                         ; OVER
0995: 15                         ; LT
0996: 09 9c 09 00 00             ; JMPZ 099c
099b: 04                         ; SWAP
099c: 05                         ; DROP
099d: 0c                         ; RET
;
099e: 18 a8 f3 00 00             ; DICTP .S (f3a8)
09a3: 0e 20                      ; CLITERAL 32
09a5: 19                         ; EMIT
09a6: 26                         ; DEPTH
09a7: 0e 00                      ; CLITERAL 0
09a9: 15                         ; LT
09aa: 09 cd 09 00 00             ; JMPZ 09cd
09af: 07 10 53 74 61 63 6b 20 75 6e 64 65 72 66 6c 6f 77 21 00 ; SLITERAL (09b0) [Stack underflow!]
09c2: 0b 1a 05 00 00             ; CALL COUNT (051a)
09c7: 0b 24 05 00 00             ; CALL TYPE (0524)
09cc: fe                         ; RESET
09cd: 26                         ; DEPTH
09ce: 0e 00                      ; CLITERAL 0
09d0: 16                         ; EQ
09d1: 09 e0 09 00 00             ; JMPZ 09e0
09d6: 0e 28                      ; CLITERAL 40
09d8: 19                         ; EMIT
09d9: 0e ed                      ; CLITERAL 237
09db: 19                         ; EMIT
09dc: 0e 29                      ; CLITERAL 41
09de: 19                         ; EMIT
09df: 0c                         ; RET
09e0: 0e 28                      ; CLITERAL 40
09e2: 19                         ; EMIT
09e3: 26                         ; DEPTH
09e4: 0e 01                      ; CLITERAL 1
09e6: 12                         ; SUB
09e7: 21                         ; DTOR
09e8: 22                         ; RTOD
09e9: 06                         ; DUP
09ea: 21                         ; DTOR
09eb: 25                         ; PICK
09ec: 0b 1f 09 00 00             ; CALL . (091f)
09f1: 22                         ; RTOD
09f2: 06                         ; DUP
09f3: 21                         ; DTOR
09f4: 09 03 0a 00 00             ; JMPZ 0a03
09f9: 22                         ; RTOD
09fa: 0e 01                      ; CLITERAL 1
09fc: 12                         ; SUB
09fd: 21                         ; DTOR
09fe: 08 0c 0a 00 00             ; JMP 0a0c
0a03: 22                         ; RTOD
0a04: 05                         ; DROP
0a05: 0e 20                      ; CLITERAL 32
0a07: 19                         ; EMIT
0a08: 0e 29                      ; CLITERAL 41
0a0a: 19                         ; EMIT
0a0b: 0c                         ; RET
0a0c: 08 e8 09 00 00             ; JMP 09e8
0a11: 0c                         ; RET
;
0a12: 18 94 f3 00 00             ; DICTP .(MEM_SZ) (f394)
0a17: 07 08 4d 65 6d 6f 72 79 3a 20 00 ; SLITERAL (0a18) [Memory: ]
0a22: 0b 44 05 00 00             ; CALL CT (0544)
0a27: 0b e5 03 00 00             ; CALL MEM_SZ (03e5)
0a2c: 06                         ; DUP
0a2d: 0b 2d 09 00 00             ; CALL HEX. (092d)
0a32: 07 02 20 28 00             ; SLITERAL (0a33) [ (]
0a37: 0b 44 05 00 00             ; CALL CT (0544)
0a3c: 0b ab 08 00 00             ; CALL (.) (08ab)
0a41: 07 01 29 00                ; SLITERAL (0a42) [)]
0a45: 0b 44 05 00 00             ; CALL CT (0544)
0a4a: 0c                         ; RET
;
0a4b: 18 82 f3 00 00             ; DICTP .(HERE) (f382)
0a50: 07 06 48 45 52 45 3a 20 00 ; SLITERAL (0a51) [HERE: ]
0a59: 0b 44 05 00 00             ; CALL CT (0544)
0a5e: 0e 10                      ; CLITERAL 16
0a60: 02                         ; FETCH
0a61: 06                         ; DUP
0a62: 0b 2d 09 00 00             ; CALL HEX. (092d)
0a67: 07 02 20 28 00             ; SLITERAL (0a68) [ (]
0a6c: 0b 44 05 00 00             ; CALL CT (0544)
0a71: 0b ab 08 00 00             ; CALL (.) (08ab)
0a76: 07 01 29 00                ; SLITERAL (0a77) [)]
0a7a: 0b 44 05 00 00             ; CALL CT (0544)
0a7f: 0c                         ; RET
;
0a80: 18 70 f3 00 00             ; DICTP .(LAST) (f370)
0a85: 07 06 4c 41 53 54 3a 20 00 ; SLITERAL (0a86) [LAST: ]
0a8e: 0b 44 05 00 00             ; CALL CT (0544)
0a93: 0e 14                      ; CLITERAL 20
0a95: 02                         ; FETCH
0a96: 06                         ; DUP
0a97: 0b 2d 09 00 00             ; CALL HEX. (092d)
0a9c: 07 02 20 28 00             ; SLITERAL (0a9d) [ (]
0aa1: 0b 44 05 00 00             ; CALL CT (0544)
0aa6: 0b ab 08 00 00             ; CALL (.) (08ab)
0aab: 07 01 29 00                ; SLITERAL (0aac) [)]
0aaf: 0b 44 05 00 00             ; CALL CT (0544)
0ab4: 0c                         ; RET
;
0ab5: 18 5a f3 00 00             ; DICTP .WORD-SHORT (f35a)
0aba: 06                         ; DUP
0abb: 0b cc 06 00 00             ; CALL DICT>NAME (06cc)
0ac0: 0b 44 05 00 00             ; CALL CT (0544)
0ac5: 0e 20                      ; CLITERAL 32
0ac7: 19                         ; EMIT
0ac8: 02                         ; FETCH
0ac9: 0c                         ; RET
;
0aca: 18 4a f3 00 00             ; DICTP WORDS (f34a)
0acf: 0e 14                      ; CLITERAL 20
0ad1: 02                         ; FETCH
0ad2: 06                         ; DUP
0ad3: 02                         ; FETCH
0ad4: 0e 00                      ; CLITERAL 0
0ad6: 16                         ; EQ
0ad7: 09 e4 0a 00 00             ; JMPZ 0ae4
0adc: 05                         ; DROP
0add: 0e 0d                      ; CLITERAL 13
0adf: 19                         ; EMIT
0ae0: 0e 0a                      ; CLITERAL 10
0ae2: 19                         ; EMIT
0ae3: 0c                         ; RET
0ae4: 0b b5 0a 00 00             ; CALL .WORD-SHORT (0ab5)
0ae9: 08 d2 0a 00 00             ; JMP 0ad2
0aee: 0c                         ; RET
;
0aef: 18 35 f3 00 00             ; DICTP .WORD-LONG (f335)
0af4: 06                         ; DUP
0af5: 0b 2d 09 00 00             ; CALL HEX. (092d)
0afa: 0e 3a                      ; CLITERAL 58
0afc: 19                         ; EMIT
0afd: 0e 20                      ; CLITERAL 32
0aff: 19                         ; EMIT
0b00: 06                         ; DUP
0b01: 0b cc 06 00 00             ; CALL DICT>NAME (06cc)
0b06: 0b 44 05 00 00             ; CALL CT (0544)
0b0b: 0e 20                      ; CLITERAL 32
0b0d: 19                         ; EMIT
0b0e: 06                         ; DUP
0b0f: 0b 02 07 00 00             ; CALL DICT.GetXT (0702)
0b14: 0e 28                      ; CLITERAL 40
0b16: 19                         ; EMIT
0b17: 0b 2d 09 00 00             ; CALL HEX. (092d)
0b1c: 0e 29                      ; CLITERAL 41
0b1e: 19                         ; EMIT
0b1f: 06                         ; DUP
0b20: 0b c0 06 00 00             ; CALL DICT>FLAGS (06c0)
0b25: 0f                         ; CFETCH
0b26: 06                         ; DUP
0b27: 07 09 2c 20 46 6c 61 67 73 3a 20 00 ; SLITERAL (0b28) [, Flags: ]
0b33: 0b 44 05 00 00             ; CALL CT (0544)
0b38: 0b 2d 09 00 00             ; CALL HEX. (092d)
0b3d: 06                         ; DUP
0b3e: 0b 49 07 00 00             ; CALL FLAGS.ISINLINE? (0749)
0b43: 09 59 0b 00 00             ; JMPZ 0b59
0b48: 07 09 20 28 49 4e 4c 49 4e 45 29 00 ; SLITERAL (0b49) [ (INLINE)]
0b54: 0b 44 05 00 00             ; CALL CT (0544)
0b59: 0b 40 07 00 00             ; CALL FLAGS.ISIMMEDIATE? (0740)
0b5e: 09 77 0b 00 00             ; JMPZ 0b77
0b63: 07 0c 20 28 49 4d 4d 45 44 49 41 54 45 29 00 ; SLITERAL (0b64) [ (IMMEDIATE)]
0b72: 0b 44 05 00 00             ; CALL CT (0544)
0b77: 0e 0d                      ; CLITERAL 13
0b79: 19                         ; EMIT
0b7a: 0e 0a                      ; CLITERAL 10
0b7c: 19                         ; EMIT
0b7d: 02                         ; FETCH
0b7e: 0c                         ; RET
;
0b7f: 18 24 f3 00 00             ; DICTP WORDSV (f324)
0b84: 0b 80 0a 00 00             ; CALL .(LAST) (0a80)
0b89: 0e 0d                      ; CLITERAL 13
0b8b: 19                         ; EMIT
0b8c: 0e 0a                      ; CLITERAL 10
0b8e: 19                         ; EMIT
0b8f: 0e 14                      ; CLITERAL 20
0b91: 02                         ; FETCH
0b92: 06                         ; DUP
0b93: 02                         ; FETCH
0b94: 0e 00                      ; CLITERAL 0
0b96: 16                         ; EQ
0b97: 09 a4 0b 00 00             ; JMPZ 0ba4
0b9c: 05                         ; DROP
0b9d: 0e 0d                      ; CLITERAL 13
0b9f: 19                         ; EMIT
0ba0: 0e 0a                      ; CLITERAL 10
0ba2: 19                         ; EMIT
0ba3: 0c                         ; RET
0ba4: 0b ef 0a 00 00             ; CALL .WORD-LONG (0aef)
0ba9: 08 92 0b 00 00             ; JMP 0b92
0bae: 0c                         ; RET
;
0baf: 18 10 f3 00 00             ; DICTP NUM-WORDS (f310)
0bb4: 0e 00                      ; CLITERAL 0
0bb6: 21                         ; DTOR
0bb7: 0e 14                      ; CLITERAL 20
0bb9: 02                         ; FETCH
0bba: 06                         ; DUP
0bbb: 02                         ; FETCH
0bbc: 0e 00                      ; CLITERAL 0
0bbe: 16                         ; EQ
0bbf: 09 cd 0b 00 00             ; JMPZ 0bcd
0bc4: 05                         ; DROP
0bc5: 22                         ; RTOD
0bc6: 0e 0d                      ; CLITERAL 13
0bc8: 19                         ; EMIT
0bc9: 0e 0a                      ; CLITERAL 10
0bcb: 19                         ; EMIT
0bcc: 0c                         ; RET
0bcd: 22                         ; RTOD
0bce: 2c                         ; INC
0bcf: 21                         ; DTOR
0bd0: 02                         ; FETCH
0bd1: 08 ba 0b 00 00             ; JMP 0bba
0bd6: 0c                         ; RET
;
0bd7: 18 ff f2 00 00             ; DICTP .lastx (f2ff)
0bdc: 0e 0d                      ; CLITERAL 13
0bde: 19                         ; EMIT
0bdf: 0e 0a                      ; CLITERAL 10
0be1: 19                         ; EMIT
0be2: 0e 14                      ; CLITERAL 20
0be4: 02                         ; FETCH
0be5: 04                         ; SWAP
0be6: 0e 00                      ; CLITERAL 0
0be8: 1a                         ; OVER
0be9: 1a                         ; OVER
0bea: 17                         ; GT
0beb: 09 03 0c 00 00             ; JMPZ 0c03
0bf0: 21                         ; DTOR
0bf1: 04                         ; SWAP
0bf2: 22                         ; RTOD
0bf3: 04                         ; SWAP
0bf4: 0b ef 0a 00 00             ; CALL .WORD-LONG (0aef)
0bf9: 04                         ; SWAP
0bfa: 21                         ; DTOR
0bfb: 04                         ; SWAP
0bfc: 22                         ; RTOD
0bfd: 2c                         ; INC
0bfe: 08 07 0c 00 00             ; JMP 0c07
0c03: 05                         ; DROP
0c04: 05                         ; DROP
0c05: 05                         ; DROP
0c06: 0c                         ; RET
0c07: 08 e8 0b 00 00             ; JMP 0be8
0c0c: 0c                         ; RET
;
0c0d: 18 ed f2 00 00             ; DICTP EXECUTE (f2ed)
0c12: 22                         ; RTOD
0c13: 05                         ; DROP
0c14: 21                         ; DTOR
0c15: 0c                         ; RET
;
0c16: 18 da f2 00 00             ; DICTP find.ret (f2da)
0c1b: 06                         ; DUP
0c1c: 0f                         ; CFETCH
0c1d: 0e 0c                      ; CLITERAL 12
0c1f: 16                         ; EQ
0c20: 09 26 0c 00 00             ; JMPZ 0c26
0c25: 0c                         ; RET
0c26: 2c                         ; INC
0c27: 08 1b 0c 00 00             ; JMP 0c1b
0c2c: 0c                         ; RET
;
0c2d: 18 c7 f2 00 00             ; DICTP (inline) (f2c7)
0c32: 1a                         ; OVER
0c33: 1a                         ; OVER
0c34: 15                         ; LT
0c35: 09 3b 0c 00 00             ; JMPZ 0c3b
0c3a: 04                         ; SWAP
0c3b: 06                         ; DUP
0c3c: 0f                         ; CFETCH
0c3d: 0b 9a 02 00 00             ; CALL C, (029a)
0c42: 2c                         ; INC
0c43: 1a                         ; OVER
0c44: 1a                         ; OVER
0c45: 17                         ; GT
0c46: 0a 3b 0c 00 00             ; JMPNZ 0c3b
0c4b: 05                         ; DROP
0c4c: 05                         ; DROP
0c4d: 0c                         ; RET
;
0c4e: 18 b7 f2 00 00             ; DICTP DOES> (f2b7)
0c53: 22                         ; RTOD
0c54: 06                         ; DUP
0c55: 0b 16 0c 00 00             ; CALL find.ret (0c16)
0c5a: 06                         ; DUP
0c5b: 21                         ; DTOR
0c5c: 2c                         ; INC
0c5d: 0b 2d 0c 00 00             ; CALL (inline) (0c2d)
0c62: 0c                         ; RET
;
0c63: 18 a1 f2 00 00             ; DICTP Copy.INLINE (f2a1)
0c68: 06                         ; DUP
0c69: 0f                         ; CFETCH
0c6a: 0e 18                      ; CLITERAL 24
0c6c: 16                         ; EQ
0c6d: 09 76 0c 00 00             ; JMPZ 0c76
0c72: 2c                         ; INC
0c73: 0e 04                      ; CLITERAL 4
0c75: 11                         ; ADD
0c76: 06                         ; DUP
0c77: 0b 16 0c 00 00             ; CALL find.ret (0c16)
0c7c: 0b 2d 0c 00 00             ; CALL (inline) (0c2d)
0c81: 0c                         ; RET
;
0c82: 18 90 f2 00 00             ; DICTP strlen (f290)
0c87: 0e 00                      ; CLITERAL 0
0c89: 04                         ; SWAP
0c8a: 04                         ; SWAP
0c8b: 1a                         ; OVER
0c8c: 0f                         ; CFETCH
0c8d: 06                         ; DUP
0c8e: 09 99 0c 00 00             ; JMPZ 0c99
0c93: 05                         ; DROP
0c94: 2c                         ; INC
0c95: 04                         ; SWAP
0c96: 2c                         ; INC
0c97: 0e 01                      ; CLITERAL 1
0c99: 0a 8a 0c 00 00             ; JMPNZ 0c8a
0c9e: 04                         ; SWAP
0c9f: 05                         ; DROP
0ca0: 0c                         ; RET
;
0ca1: 18 80 f2 00 00             ; DICTP cstr, (f280)
0ca6: 06                         ; DUP
0ca7: 0f                         ; CFETCH
0ca8: 1a                         ; OVER
0ca9: 11                         ; ADD
0caa: 2c                         ; INC
0cab: 2c                         ; INC
0cac: 0b 2d 0c 00 00             ; CALL (inline) (0c2d)
0cb1: 0c                         ; RET
;
0cb2: 18 6c f2 00 00             ; DICTP [COMPILE] (f26c)
0cb7: 0b 49 07 00 00             ; CALL FLAGS.ISINLINE? (0749)
0cbc: 09 cb 0c 00 00             ; JMPZ 0ccb
0cc1: 0b 63 0c 00 00             ; CALL Copy.INLINE (0c63)
0cc6: 08 d5 0c 00 00             ; JMP 0cd5
0ccb: 0b 0e 01 00 00             ; CALL CALL (010e)
0cd0: 0b 87 02 00 00             ; CALL , (0287)
0cd5: 0c                         ; RET
;
0cd6: 18 56 f2 00 00             ; DICTP executeWord (f256)
0cdb: 21                         ; DTOR
0cdc: 22                         ; RTOD
0cdd: 06                         ; DUP
0cde: 21                         ; DTOR
0cdf: 0b 72 07 00 00             ; CALL findInDict (0772)
0ce4: 09 20 0d 00 00             ; JMPZ 0d20
0ce9: 22                         ; RTOD
0cea: 05                         ; DROP
0ceb: 0b ed 02 00 00             ; CALL ?COMPILING (02ed)
0cf0: 09 15 0d 00 00             ; JMPZ 0d15
0cf5: 06                         ; DUP
0cf6: 0b 40 07 00 00             ; CALL FLAGS.ISIMMEDIATE? (0740)
0cfb: 09 0b 0d 00 00             ; JMPZ 0d0b
0d00: 05                         ; DROP
0d01: 0b 0d 0c 00 00             ; CALL EXECUTE (0c0d)
0d06: 08 10 0d 00 00             ; JMP 0d10
0d0b: 0b b2 0c 00 00             ; CALL [COMPILE] (0cb2)
0d10: 08 1b 0d 00 00             ; JMP 0d1b
0d15: 05                         ; DROP
0d16: 0b 0d 0c 00 00             ; CALL EXECUTE (0c0d)
0d1b: 08 76 0d 00 00             ; JMP 0d76
0d20: 05                         ; DROP
0d21: 05                         ; DROP
0d22: 22                         ; RTOD
0d23: 06                         ; DUP
0d24: 21                         ; DTOR
0d25: 0b 34 08 00 00             ; CALL isNumber? (0834)
0d2a: 09 68 0d 00 00             ; JMPZ 0d68
0d2f: 0b ed 02 00 00             ; CALL ?COMPILING (02ed)
0d34: 09 63 0d 00 00             ; JMPZ 0d63
0d39: 06                         ; DUP
0d3a: 0e 00                      ; CLITERAL 0
0d3c: 0e ff                      ; CLITERAL 255
0d3e: 0b ce 05 00 00             ; CALL BETWEEN (05ce)
0d43: 09 59 0d 00 00             ; JMPZ 0d59
0d48: 0e 0e                      ; CLITERAL 14
0d4a: 0b 70 00 00 00             ; CALL C, (0070)
0d4f: 0b 9a 02 00 00             ; CALL C, (029a)
0d54: 08 63 0d 00 00             ; JMP 0d63
0d59: 0b aa 00 00 00             ; CALL LITERAL (00aa)
0d5e: 0b 87 02 00 00             ; CALL , (0287)
0d63: 08 74 0d 00 00             ; JMP 0d74
0d68: 05                         ; DROP
0d69: 07 02 3f 3f 00             ; SLITERAL (0d6a) [??]
0d6e: 0b 44 05 00 00             ; CALL CT (0544)
0d73: fe                         ; RESET
0d74: 22                         ; RTOD
0d75: 05                         ; DROP
0d76: 0c                         ; RET
;
0d77: 18 3f f2 00 00             ; DICTP executeInput (f23f)
0d7c: 0b c5 03 00 00             ; CALL >IN (03c5)
0d81: 02                         ; FETCH
0d82: 0b 50 06 00 00             ; CALL skipWS (0650)
0d87: 0b c5 03 00 00             ; CALL >IN (03c5)
0d8c: 03                         ; STORE
0d8d: 0b c5 03 00 00             ; CALL >IN (03c5)
0d92: 02                         ; FETCH
0d93: 0f                         ; CFETCH
0d94: 09 b4 0d 00 00             ; JMPZ 0db4
0d99: 0b c5 03 00 00             ; CALL >IN (03c5)
0d9e: 02                         ; FETCH
0d9f: 0b 79 06 00 00             ; CALL getOneWord (0679)
0da4: 0b c5 03 00 00             ; CALL >IN (03c5)
0da9: 03                         ; STORE
0daa: 0b d6 0c 00 00             ; CALL executeWord (0cd6)
0daf: 08 b5 0d 00 00             ; JMP 0db5
0db4: 0c                         ; RET
0db5: 08 7c 0d 00 00             ; JMP 0d7c
0dba: 0c                         ; RET
;
0dbb: 18 31 f2 00 00             ; DICTP Pad (f231)
0dc0: 0e 14                      ; CLITERAL 20
0dc2: 02                         ; FETCH
0dc3: 0e c8                      ; CLITERAL 200
0dc5: 12                         ; SUB
0dc6: 06                         ; DUP
0dc7: 0e 10                      ; CLITERAL 16
0dc9: 02                         ; FETCH
0dca: 15                         ; LT
0dcb: 09 e2 0d 00 00             ; JMPZ 0de2
0dd0: 07 0e 4f 75 74 20 6f 66 20 4d 65 6d 6f 72 79 21 00 ; SLITERAL (0dd1) [Out of Memory!]
0de1: fe                         ; RESET
0de2: 0c                         ; RET
;
0de3: 18 16 f2 00 00             ; DICTP LoadingFromFile? (f216)
0de8: 0e 1c                      ; CLITERAL 28
0dea: 02                         ; FETCH
0deb: 0c                         ; RET
;
0dec: 18 fc f1 00 00             ; DICTP getLineFromFile (f1fc)
0df1: 0e c8                      ; CLITERAL 200
0df3: 0e 1c                      ; CLITERAL 28
0df5: 02                         ; FETCH
0df6: 1e                         ; FREADLINE
0df7: 0e 00                      ; CLITERAL 0
0df9: 16                         ; EQ
0dfa: 09 06 0e 00 00             ; JMPZ 0e06
0dff: 0e 1c                      ; CLITERAL 28
0e01: 0b e3 02 00 00             ; CALL OFF (02e3)
0e06: 0c                         ; RET
;
0e07: 18 ea f1 00 00             ; DICTP getLine (f1ea)
0e0c: 0e 00                      ; CLITERAL 0
0e0e: 0b bb 0d 00 00             ; CALL Pad (0dbb)
0e13: 06                         ; DUP
0e14: 2c                         ; INC
0e15: 0b c5 03 00 00             ; CALL >IN (03c5)
0e1a: 03                         ; STORE
0e1b: 10                         ; CSTORE
0e1c: 0b e3 0d 00 00             ; CALL LoadingFromFile? (0de3)
0e21: 09 31 0e 00 00             ; JMPZ 0e31
0e26: 0b bb 0d 00 00             ; CALL Pad (0dbb)
0e2b: 0b ec 0d 00 00             ; CALL getLineFromFile (0dec)
0e30: 0c                         ; RET
0e31: 0e 00                      ; CLITERAL 0
0e33: 0b c5 03 00 00             ; CALL >IN (03c5)
0e38: 02                         ; FETCH
0e39: 10                         ; CSTORE
0e3a: 27                         ; GETCH
0e3b: 06                         ; DUP
0e3c: 0e 0d                      ; CLITERAL 13
0e3e: 16                         ; EQ
0e3f: 09 4e 0e 00 00             ; JMPZ 0e4e
0e44: 05                         ; DROP
0e45: 0b bb 0d 00 00             ; CALL Pad (0dbb)
0e4a: 0e 20                      ; CLITERAL 32
0e4c: 19                         ; EMIT
0e4d: 0c                         ; RET
0e4e: 06                         ; DUP
0e4f: 0e 09                      ; CLITERAL 9
0e51: 16                         ; EQ
0e52: 09 5a 0e 00 00             ; JMPZ 0e5a
0e57: 05                         ; DROP
0e58: 0e 20                      ; CLITERAL 32
0e5a: 06                         ; DUP
0e5b: 0e 03                      ; CLITERAL 3
0e5d: 16                         ; EQ
0e5e: 09 64 0e 00 00             ; JMPZ 0e64
0e63: ff                         ; BYE
0e64: 06                         ; DUP
0e65: 0e 08                      ; CLITERAL 8
0e67: 16                         ; EQ
0e68: 09 a0 0e 00 00             ; JMPZ 0ea0
0e6d: 0b bb 0d 00 00             ; CALL Pad (0dbb)
0e72: 0f                         ; CFETCH
0e73: 0e 00                      ; CLITERAL 0
0e75: 17                         ; GT
0e76: 09 9a 0e 00 00             ; JMPZ 0e9a
0e7b: 0b bb 0d 00 00             ; CALL Pad (0dbb)
0e80: 0b b5 04 00 00             ; CALL C-- (04b5)
0e85: 0b c5 03 00 00             ; CALL >IN (03c5)
0e8a: 0b 9d 04 00 00             ; CALL -- (049d)
0e8f: 06                         ; DUP
0e90: 19                         ; EMIT
0e91: 0e 20                      ; CLITERAL 32
0e93: 19                         ; EMIT
0e94: 19                         ; EMIT
0e95: 08 9b 0e 00 00             ; JMP 0e9b
0e9a: 05                         ; DROP
0e9b: 08 d2 0e 00 00             ; JMP 0ed2
0ea0: 06                         ; DUP
0ea1: 0e 20                      ; CLITERAL 32
0ea3: 0e 7f                      ; CLITERAL 127
0ea5: 0b ce 05 00 00             ; CALL BETWEEN (05ce)
0eaa: 09 d1 0e 00 00             ; JMPZ 0ed1
0eaf: 06                         ; DUP
0eb0: 19                         ; EMIT
0eb1: 0b c5 03 00 00             ; CALL >IN (03c5)
0eb6: 02                         ; FETCH
0eb7: 10                         ; CSTORE
0eb8: 0b c5 03 00 00             ; CALL >IN (03c5)
0ebd: 0b 90 04 00 00             ; CALL ++ (0490)
0ec2: 0b bb 0d 00 00             ; CALL Pad (0dbb)
0ec7: 0b aa 04 00 00             ; CALL C++ (04aa)
0ecc: 08 d2 0e 00 00             ; JMP 0ed2
0ed1: 05                         ; DROP
0ed2: 08 31 0e 00 00             ; JMP 0e31
0ed7: 0c                         ; RET
;
0ed8: 18 d7 f1 00 00             ; DICTP strcpy2c (f1d7)
0edd: 06                         ; DUP
0ede: 21                         ; DTOR
0edf: 0e 00                      ; CLITERAL 0
0ee1: 1a                         ; OVER
0ee2: 10                         ; CSTORE
0ee3: 2c                         ; INC
0ee4: 04                         ; SWAP
0ee5: 06                         ; DUP
0ee6: 0f                         ; CFETCH
0ee7: 06                         ; DUP
0ee8: 09 02 0f 00 00             ; JMPZ 0f02
0eed: 0e 02                      ; CLITERAL 2
0eef: 25                         ; PICK
0ef0: 10                         ; CSTORE
0ef1: 04                         ; SWAP
0ef2: 2c                         ; INC
0ef3: 04                         ; SWAP
0ef4: 2c                         ; INC
0ef5: 22                         ; RTOD
0ef6: 06                         ; DUP
0ef7: 21                         ; DTOR
0ef8: 0b aa 04 00 00             ; CALL C++ (04aa)
0efd: 08 0b 0f 00 00             ; JMP 0f0b
0f02: 21                         ; DTOR
0f03: 04                         ; SWAP
0f04: 22                         ; RTOD
0f05: 04                         ; SWAP
0f06: 10                         ; CSTORE
0f07: 05                         ; DROP
0f08: 22                         ; RTOD
0f09: 05                         ; DROP
0f0a: 0c                         ; RET
0f0b: 08 e5 0e 00 00             ; JMP 0ee5
0f10: 0c                         ; RET
;
0f11: 18 c1 f1 00 00             ; DICTP Define-Word (f1c1)
0f16: 0e 14                      ; CLITERAL 20
0f18: 02                         ; FETCH
0f19: 1a                         ; OVER
0f1a: 0b 82 0c 00 00             ; CALL strlen (0c82)
0f1f: 0e 02                      ; CLITERAL 2
0f21: 0e 04                      ; CLITERAL 4
0f23: 13                         ; MUL
0f24: 0e 03                      ; CLITERAL 3
0f26: 11                         ; ADD
0f27: 11                         ; ADD
0f28: 12                         ; SUB
0f29: 06                         ; DUP
0f2a: 21                         ; DTOR
0f2b: 21                         ; DTOR
0f2c: 0e 14                      ; CLITERAL 20
0f2e: 02                         ; FETCH
0f2f: 22                         ; RTOD
0f30: 06                         ; DUP
0f31: 21                         ; DTOR
0f32: 03                         ; STORE
0f33: 22                         ; RTOD
0f34: 0e 04                      ; CLITERAL 4
0f36: 11                         ; ADD
0f37: 21                         ; DTOR
0f38: 0e 10                      ; CLITERAL 16
0f3a: 02                         ; FETCH
0f3b: 22                         ; RTOD
0f3c: 06                         ; DUP
0f3d: 21                         ; DTOR
0f3e: 03                         ; STORE
0f3f: 22                         ; RTOD
0f40: 0e 04                      ; CLITERAL 4
0f42: 11                         ; ADD
0f43: 21                         ; DTOR
0f44: 0e 00                      ; CLITERAL 0
0f46: 22                         ; RTOD
0f47: 06                         ; DUP
0f48: 21                         ; DTOR
0f49: 10                         ; CSTORE
0f4a: 22                         ; RTOD
0f4b: 2c                         ; INC
0f4c: 21                         ; DTOR
0f4d: 22                         ; RTOD
0f4e: 0b d8 0e 00 00             ; CALL strcpy2c (0ed8)
0f53: 22                         ; RTOD
0f54: 0e 14                      ; CLITERAL 20
0f56: 03                         ; STORE
0f57: 0c                         ; RET
;
0f58: 18 ab f1 00 00             ; DICTP CREATE-NAME (f1ab)
0f5d: 0b c5 03 00 00             ; CALL >IN (03c5)
0f62: 02                         ; FETCH
0f63: 0b 50 06 00 00             ; CALL skipWS (0650)
0f68: 0b c5 03 00 00             ; CALL >IN (03c5)
0f6d: 03                         ; STORE
0f6e: 0b c5 03 00 00             ; CALL >IN (03c5)
0f73: 02                         ; FETCH
0f74: 0f                         ; CFETCH
0f75: 09 ad 0f 00 00             ; JMPZ 0fad
0f7a: 0b c5 03 00 00             ; CALL >IN (03c5)
0f7f: 02                         ; FETCH
0f80: 0b 79 06 00 00             ; CALL getOneWord (0679)
0f85: 0b c5 03 00 00             ; CALL >IN (03c5)
0f8a: 03                         ; STORE
0f8b: 06                         ; DUP
0f8c: 0f                         ; CFETCH
0f8d: 09 ab 0f 00 00             ; JMPZ 0fab
0f92: 0b 11 0f 00 00             ; CALL Define-Word (0f11)
0f97: 0e 18                      ; CLITERAL 24
0f99: 0b 70 00 00 00             ; CALL C, (0070)
0f9e: 0e 14                      ; CLITERAL 20
0fa0: 02                         ; FETCH
0fa1: 0b 87 02 00 00             ; CALL , (0287)
0fa6: 08 ad 0f 00 00             ; JMP 0fad
0fab: 05                         ; DROP
0fac: fe                         ; RESET
0fad: 0c                         ; RET
;
0fae: 18 9f f1 00 00             ; DICTP : (f19f)
0fb3: 0b 58 0f 00 00             ; CALL CREATE-NAME (0f58)
0fb8: 0e 20                      ; CLITERAL 32
0fba: 0b d9 02 00 00             ; CALL ON (02d9)
0fbf: 0c                         ; RET
;
0fc0: 18 8d f1 00 00             ; DICTP :NONAME (f18d)
0fc5: 0e 10                      ; CLITERAL 16
0fc7: 02                         ; FETCH
0fc8: 0e 20                      ; CLITERAL 32
0fca: 0b d9 02 00 00             ; CALL ON (02d9)
0fcf: 0c                         ; RET
;
0fd0: 18 81 f1 00 00             ; DICTP ; (f181)
0fd5: 0b 1b 01 00 00             ; CALL RET (011b)
0fda: 0e 20                      ; CLITERAL 32
0fdc: 0b e3 02 00 00             ; CALL OFF (02e3)
0fe1: 0c                         ; RET
;
0fe2: 18 6c f1 00 00             ; DICTP ForgetLast (f16c)
0fe7: 0e 14                      ; CLITERAL 20
0fe9: 02                         ; FETCH
0fea: 0e 04                      ; CLITERAL 4
0fec: 11                         ; ADD
0fed: 02                         ; FETCH
0fee: 0e 10                      ; CLITERAL 16
0ff0: 03                         ; STORE
0ff1: 0e 14                      ; CLITERAL 20
0ff3: 02                         ; FETCH
0ff4: 02                         ; FETCH
0ff5: 0e 14                      ; CLITERAL 20
0ff7: 03                         ; STORE
0ff8: 0c                         ; RET
;
0ff9: 18 57 f1 00 00             ; DICTP resetState (f157)
0ffe: 0b ed 02 00 00             ; CALL ?COMPILING (02ed)
1003: 09 0d 10 00 00             ; JMPZ 100d
1008: 0b e2 0f 00 00             ; CALL ForgetLast (0fe2)
100d: 0e 20                      ; CLITERAL 32
100f: 0b e3 02 00 00             ; CALL OFF (02e3)
1014: 0b b8 02 00 00             ; CALL DECIMAL (02b8)
1019: 0c                         ; RET
;
101a: 18 47 f1 00 00             ; DICTP ALLOT (f147)
101f: 0e 10                      ; CLITERAL 16
1021: 02                         ; FETCH
1022: 11                         ; ADD
1023: 0e 10                      ; CLITERAL 16
1025: 03                         ; STORE
1026: 0c                         ; RET
;
1027: 18 3b f1 00 00             ; DICTP ? (f13b)
102c: 02                         ; FETCH
102d: 0b 1f 09 00 00             ; CALL . (091f)
1032: 0c                         ; RET
;
1033: 18 2e f1 00 00             ; DICTP C? (f12e)
1038: 0f                         ; CFETCH
1039: 0b 1f 09 00 00             ; CALL . (091f)
103e: 0c                         ; RET
;
103f: 18 1f f1 00 00             ; DICTP FREE (f11f)
1044: 0e 14                      ; CLITERAL 20
1046: 02                         ; FETCH
1047: 0e 10                      ; CLITERAL 16
1049: 02                         ; FETCH
104a: 12                         ; SUB
104b: 0c                         ; RET
;
104c: 18 0f f1 00 00             ; DICTP .FREE (f10f)
1051: 0b 3f 10 00 00             ; CALL FREE (103f)
1056: 0b ab 08 00 00             ; CALL (.) (08ab)
105b: 07 0c 20 62 79 74 65 73 20 66 72 65 65 2e 00 ; SLITERAL (105c) [ bytes free.]
106a: 0b 44 05 00 00             ; CALL CT (0544)
106f: 0c                         ; RET
;
1070: 18 fc f0 00 00             ; DICTP mainLoop (f0fc)
1075: 0b f9 0f 00 00             ; CALL resetState (0ff9)
107a: 0b f6 05 00 00             ; CALL tmp-init (05f6)
107f: 0b ed 02 00 00             ; CALL ?COMPILING (02ed)
1084: 0e 00                      ; CLITERAL 0
1086: 16                         ; EQ
1087: 09 9c 10 00 00             ; JMPZ 109c
108c: 07 03 20 4f 4b 00          ; SLITERAL (108d) [ OK]
1092: 0b 44 05 00 00             ; CALL CT (0544)
1097: 0b 9e 09 00 00             ; CALL .S (099e)
109c: 0e 0d                      ; CLITERAL 13
109e: 19                         ; EMIT
109f: 0e 0a                      ; CLITERAL 10
10a1: 19                         ; EMIT
10a2: 0b 07 0e 00 00             ; CALL getLine (0e07)
10a7: 2c                         ; INC
10a8: 0b c5 03 00 00             ; CALL >IN (03c5)
10ad: 03                         ; STORE
10ae: 0b 77 0d 00 00             ; CALL executeInput (0d77)
10b3: 0e 20                      ; CLITERAL 32
10b5: 19                         ; EMIT
10b6: 08 7a 10 00 00             ; JMP 107a
10bb: 0c                         ; RET
;
10bc: 18 ed f0 00 00             ; DICTP main (f0ed)
10c1: 0e 20                      ; CLITERAL 32
10c3: 02                         ; FETCH
10c4: 0e 63                      ; CLITERAL 99
10c6: 16                         ; EQ
10c7: 09 e1 10 00 00             ; JMPZ 10e1
10cc: 0e 20                      ; CLITERAL 32
10ce: 0b e3 02 00 00             ; CALL OFF (02e3)
10d3: 07 06 48 65 6c 6c 6f 2e 00 ; SLITERAL (10d4) [Hello.]
10dc: 0b 44 05 00 00             ; CALL CT (0544)
10e1: 0b 70 10 00 00             ; CALL mainLoop (1070)
10e6: 0c                         ; RET
;
10e7: 18 d6 f0 00 00             ; DICTP file-getLine (f0d6)
10ec: 0b bb 0d 00 00             ; CALL Pad (0dbb)
10f1: 04                         ; SWAP
10f2: 0e c8                      ; CLITERAL 200
10f4: 04                         ; SWAP
10f5: 1e                         ; FREADLINE
10f6: 0b bb 0d 00 00             ; CALL Pad (0dbb)
10fb: 04                         ; SWAP
10fc: 0c                         ; RET
;
10fd: 18 c7 f0 00 00             ; DICTP load (f0c7)
1102: 0e 00                      ; CLITERAL 0
1104: 0e 00                      ; CLITERAL 0
1106: 1c                         ; FOPEN
1107: 0e 00                      ; CLITERAL 0
1109: 16                         ; EQ
110a: 09 29 11 00 00             ; JMPZ 1129
110f: 07 11 43 61 6e 6e 6f 74 20 6f 70 65 6e 20 66 69 6c 65 2e 00 ; SLITERAL (1110) [Cannot open file.]
1123: 0b 44 05 00 00             ; CALL CT (0544)
1128: 0c                         ; RET
1129: 0e 1c                      ; CLITERAL 28
112b: 03                         ; STORE
112c: 0e 1c                      ; CLITERAL 28
112e: 02                         ; FETCH
112f: 0b e7 10 00 00             ; CALL file-getLine (10e7)
1134: 09 4a 11 00 00             ; JMPZ 114a
1139: 2c                         ; INC
113a: 0b c5 03 00 00             ; CALL >IN (03c5)
113f: 03                         ; STORE
1140: 0b 77 0d 00 00             ; CALL executeInput (0d77)
1145: 08 57 11 00 00             ; JMP 1157
114a: 05                         ; DROP
114b: 0e 1c                      ; CLITERAL 28
114d: 02                         ; FETCH
114e: 20                         ; FCLOSE
114f: 0e 1c                      ; CLITERAL 28
1151: 0b e3 02 00 00             ; CALL OFF (02e3)
1156: 0c                         ; RET
1157: 08 2c 11 00 00             ; JMP 112c
115c: 0c                         ; RET
;
115d: 18 b3 f0 00 00             ; DICTP STR.EMPTY (f0b3)
1162: 0e 00                      ; CLITERAL 0
1164: 1a                         ; OVER
1165: 03                         ; STORE
1166: 0c                         ; RET
;
1167: 18 a1 f0 00 00             ; DICTP STR.LEN (f0a1)
116c: 06                         ; DUP
116d: 0f                         ; CFETCH
116e: 0c                         ; RET
;
116f: 18 8e f0 00 00             ; DICTP STR.CATC (f08e)
1174: 1a                         ; OVER
1175: 06                         ; DUP
1176: 0b aa 04 00 00             ; CALL C++ (04aa)
117b: 06                         ; DUP
117c: 0f                         ; CFETCH
117d: 11                         ; ADD
117e: 0e 00                      ; CLITERAL 0
1180: 1a                         ; OVER
1181: 2c                         ; INC
1182: 10                         ; CSTORE
1183: 10                         ; CSTORE
1184: 0c                         ; RET
;
1185: 18 77 f0 00 00             ; DICTP STR.NULLTERM (f077)
118a: 06                         ; DUP
118b: 06                         ; DUP
118c: 0f                         ; CFETCH
118d: 11                         ; ADD
118e: 2c                         ; INC
118f: 0e 00                      ; CLITERAL 0
1191: 04                         ; SWAP
1192: 10                         ; CSTORE
1193: 0c                         ; RET
;
1194: 18 6a f0 00 00             ; DICTP I" (f06a)
1199: 0e 10                      ; CLITERAL 16
119b: 02                         ; FETCH
119c: 0e 64                      ; CLITERAL 100
119e: 11                         ; ADD
119f: 0e 00                      ; CLITERAL 0
11a1: 1a                         ; OVER
11a2: 03                         ; STORE
11a3: 0b c5 03 00 00             ; CALL >IN (03c5)
11a8: 02                         ; FETCH
11a9: 0f                         ; CFETCH
11aa: 06                         ; DUP
11ab: 0e 00                      ; CLITERAL 0
11ad: 16                         ; EQ
11ae: 09 cf 11 00 00             ; JMPZ 11cf
11b3: 07 10 6d 69 73 73 69 6e 67 20 63 6c 6f 73 69 6e 67 20 00 ; SLITERAL (11b4) [missing closing ]
11c6: 0b 44 05 00 00             ; CALL CT (0544)
11cb: 0e 22                      ; CLITERAL 34
11cd: 19                         ; EMIT
11ce: fe                         ; RESET
11cf: 0b c5 03 00 00             ; CALL >IN (03c5)
11d4: 0b 90 04 00 00             ; CALL ++ (0490)
11d9: 06                         ; DUP
11da: 0e 22                      ; CLITERAL 34
11dc: 16                         ; EQ
11dd: 09 e4 11 00 00             ; JMPZ 11e4
11e2: 05                         ; DROP
11e3: 0c                         ; RET
11e4: 0b 6f 11 00 00             ; CALL STR.CATC (116f)
11e9: 08 a3 11 00 00             ; JMP 11a3
11ee: 0c                         ; RET
;
11ef: 18 5e f0 00 00             ; DICTP " (f05e)
11f4: 0b ed 02 00 00             ; CALL ?COMPILING (02ed)
11f9: 0e 00                      ; CLITERAL 0
11fb: 16                         ; EQ
11fc: 09 07 12 00 00             ; JMPZ 1207
1201: 0b 94 11 00 00             ; CALL I" (1194)
1206: 0c                         ; RET
1207: 0b da 00 00 00             ; CALL SLITERAL (00da)
120c: 0e 10                      ; CLITERAL 16
120e: 02                         ; FETCH
120f: 0e 00                      ; CLITERAL 0
1211: 0b 9a 02 00 00             ; CALL C, (029a)
1216: 0b c5 03 00 00             ; CALL >IN (03c5)
121b: 02                         ; FETCH
121c: 0f                         ; CFETCH
121d: 06                         ; DUP
121e: 0e 00                      ; CLITERAL 0
1220: 16                         ; EQ
1221: 09 4d 12 00 00             ; JMPZ 124d
1226: 05                         ; DROP
1227: 0e 01                      ; CLITERAL 1
1229: 12                         ; SUB
122a: 0e 10                      ; CLITERAL 16
122c: 03                         ; STORE
122d: 07 11 6d 69 73 73 69 6e 67 20 63 6c 6f 73 69 6e 67 20 27 00 ; SLITERAL (122e) [missing closing ']
1241: 0b 44 05 00 00             ; CALL CT (0544)
1246: 0e 22                      ; CLITERAL 34
1248: 19                         ; EMIT
1249: 0e 27                      ; CLITERAL 39
124b: 19                         ; EMIT
124c: fe                         ; RESET
124d: 0b c5 03 00 00             ; CALL >IN (03c5)
1252: 0b 90 04 00 00             ; CALL ++ (0490)
1257: 06                         ; DUP
1258: 0e 22                      ; CLITERAL 34
125a: 16                         ; EQ
125b: 09 73 12 00 00             ; JMPZ 1273
1260: 05                         ; DROP
1261: 0e 10                      ; CLITERAL 16
1263: 02                         ; FETCH
1264: 0e 00                      ; CLITERAL 0
1266: 0b 9a 02 00 00             ; CALL C, (029a)
126b: 1a                         ; OVER
126c: 12                         ; SUB
126d: 0e 01                      ; CLITERAL 1
126f: 12                         ; SUB
1270: 04                         ; SWAP
1271: 10                         ; CSTORE
1272: 0c                         ; RET
1273: 0b 9a 02 00 00             ; CALL C, (029a)
1278: 08 16 12 00 00             ; JMP 1216
127d: 0c                         ; RET
;
127e: 18 51 f0 00 00             ; DICTP ll (f051)
1283: 07 09 6c 6f 61 64 73 2e 34 74 68 00 ; SLITERAL (1284) [loads.4th]
128f: 0b fd 10 00 00             ; CALL load (10fd)
1294: 0c                         ; RET
;
1295: 18 3e f0 00 00             ; DICTP sys-info (f03e)
129a: 0b 12 0a 00 00             ; CALL .(MEM_SZ) (0a12)
129f: 0e 2c                      ; CLITERAL 44
12a1: 19                         ; EMIT
12a2: 0e 20                      ; CLITERAL 32
12a4: 19                         ; EMIT
12a5: 0b 4b 0a 00 00             ; CALL .(HERE) (0a4b)
12aa: 0e 2c                      ; CLITERAL 44
12ac: 19                         ; EMIT
12ad: 0e 20                      ; CLITERAL 32
12af: 19                         ; EMIT
12b0: 0b 80 0a 00 00             ; CALL .(LAST) (0a80)
12b5: 0e 2c                      ; CLITERAL 44
12b7: 19                         ; EMIT
12b8: 0e 20                      ; CLITERAL 32
12ba: 19                         ; EMIT
12bb: 0b 4c 10 00 00             ; CALL .FREE (104c)
12c0: 0e 0d                      ; CLITERAL 13
12c2: 19                         ; EMIT
12c3: 0e 0a                      ; CLITERAL 10
12c5: 19                         ; EMIT
12c6: 0c                         ; RET
;
12c7: 18 2c f0 00 00             ; DICTP countTo (f02c)
12cc: 07 0b 63 6f 75 6e 74 69 6e 67 20 74 6f 00 ; SLITERAL (12cd) [counting to]
12da: 0b 44 05 00 00             ; CALL CT (0544)
12df: 06                         ; DUP
12e0: 0b 1f 09 00 00             ; CALL . (091f)
12e5: 07 04 20 2e 2e 2e 00       ; SLITERAL (12e6) [ ...]
12ec: 0b 44 05 00 00             ; CALL CT (0544)
12f1: 0e 01                      ; CLITERAL 1
12f3: 1a                         ; OVER
12f4: 1a                         ; OVER
12f5: 15                         ; LT
12f6: 09 12 13 00 00             ; JMPZ 1312
12fb: 07 06 20 64 6f 6e 65 2e 00 ; SLITERAL (12fc) [ done.]
1304: 0b 44 05 00 00             ; CALL CT (0544)
1309: 0e 0d                      ; CLITERAL 13
130b: 19                         ; EMIT
130c: 0e 0a                      ; CLITERAL 10
130e: 19                         ; EMIT
130f: 05                         ; DROP
1310: 05                         ; DROP
1311: 0c                         ; RET
1312: 2c                         ; INC
1313: 08 f3 12 00 00             ; JMP 12f3
1318: 0c                         ; RET
;
; End of code, Dictionary:
;
f02c: 3e f0 00 00                ; countTo - (next: f03e sys-info)
f030: c7 12 00 00 00             ; XT=12c7, flags=00
f035: 07 63 6f 75 6e 74 54 6f 00 ; 7, countTo
;
f03e: 51 f0 00 00                ; sys-info - (next: f051 ll)
f042: 95 12 00 00 00             ; XT=1295, flags=00
f047: 08 73 79 73 2d 69 6e 66 6f 00 ; 8, sys-info
;
f051: 5e f0 00 00                ; ll - (next: f05e ")
f055: 7e 12 00 00 00             ; XT=127e, flags=00
f05a: 02 6c 6c 00                ; 2, ll
;
f05e: 6a f0 00 00                ; " - (next: f06a I")
f062: ef 11 00 00 01             ; XT=11ef, flags=01
f067: 01 22 00                   ; 1, "
;
f06a: 77 f0 00 00                ; I" - (next: f077 STR.NULLTERM)
f06e: 94 11 00 00 00             ; XT=1194, flags=00
f073: 02 49 22 00                ; 2, I"
;
f077: 8e f0 00 00                ; STR.NULLTERM - (next: f08e STR.CATC)
f07b: 85 11 00 00 00             ; XT=1185, flags=00
f080: 0c 53 54 52 2e 4e 55 4c 4c 54 45 52 4d 00 ; 12, STR.NULLTERM
;
f08e: a1 f0 00 00                ; STR.CATC - (next: f0a1 STR.LEN)
f092: 6f 11 00 00 00             ; XT=116f, flags=00
f097: 08 53 54 52 2e 43 41 54 43 00 ; 8, STR.CATC
;
f0a1: b3 f0 00 00                ; STR.LEN - (next: f0b3 STR.EMPTY)
f0a5: 67 11 00 00 02             ; XT=1167, flags=02
f0aa: 07 53 54 52 2e 4c 45 4e 00 ; 7, STR.LEN
;
f0b3: c7 f0 00 00                ; STR.EMPTY - (next: f0c7 load)
f0b7: 5d 11 00 00 02             ; XT=115d, flags=02
f0bc: 09 53 54 52 2e 45 4d 50 54 59 00 ; 9, STR.EMPTY
;
f0c7: d6 f0 00 00                ; load - (next: f0d6 file-getLine)
f0cb: fd 10 00 00 00             ; XT=10fd, flags=00
f0d0: 04 6c 6f 61 64 00          ; 4, load
;
f0d6: ed f0 00 00                ; file-getLine - (next: f0ed main)
f0da: e7 10 00 00 00             ; XT=10e7, flags=00
f0df: 0c 66 69 6c 65 2d 67 65 74 4c 69 6e 65 00 ; 12, file-getLine
;
f0ed: fc f0 00 00                ; main - (next: f0fc mainLoop)
f0f1: bc 10 00 00 00             ; XT=10bc, flags=00
f0f6: 04 6d 61 69 6e 00          ; 4, main
;
f0fc: 0f f1 00 00                ; mainLoop - (next: f10f .FREE)
f100: 70 10 00 00 00             ; XT=1070, flags=00
f105: 08 6d 61 69 6e 4c 6f 6f 70 00 ; 8, mainLoop
;
f10f: 1f f1 00 00                ; .FREE - (next: f11f FREE)
f113: 4c 10 00 00 00             ; XT=104c, flags=00
f118: 05 2e 46 52 45 45 00       ; 5, .FREE
;
f11f: 2e f1 00 00                ; FREE - (next: f12e C?)
f123: 3f 10 00 00 00             ; XT=103f, flags=00
f128: 04 46 52 45 45 00          ; 4, FREE
;
f12e: 3b f1 00 00                ; C? - (next: f13b ?)
f132: 33 10 00 00 00             ; XT=1033, flags=00
f137: 02 43 3f 00                ; 2, C?
;
f13b: 47 f1 00 00                ; ? - (next: f147 ALLOT)
f13f: 27 10 00 00 00             ; XT=1027, flags=00
f144: 01 3f 00                   ; 1, ?
;
f147: 57 f1 00 00                ; ALLOT - (next: f157 resetState)
f14b: 1a 10 00 00 00             ; XT=101a, flags=00
f150: 05 41 4c 4c 4f 54 00       ; 5, ALLOT
;
f157: 6c f1 00 00                ; resetState - (next: f16c ForgetLast)
f15b: f9 0f 00 00 00             ; XT=0ff9, flags=00
f160: 0a 72 65 73 65 74 53 74 61 74 65 00 ; 10, resetState
;
f16c: 81 f1 00 00                ; ForgetLast - (next: f181 ;)
f170: e2 0f 00 00 00             ; XT=0fe2, flags=00
f175: 0a 46 6f 72 67 65 74 4c 61 73 74 00 ; 10, ForgetLast
;
f181: 8d f1 00 00                ; ; - (next: f18d :NONAME)
f185: d0 0f 00 00 01             ; XT=0fd0, flags=01
f18a: 01 3b 00                   ; 1, ;
;
f18d: 9f f1 00 00                ; :NONAME - (next: f19f :)
f191: c0 0f 00 00 00             ; XT=0fc0, flags=00
f196: 07 3a 4e 4f 4e 41 4d 45 00 ; 7, :NONAME
;
f19f: ab f1 00 00                ; : - (next: f1ab CREATE-NAME)
f1a3: ae 0f 00 00 00             ; XT=0fae, flags=00
f1a8: 01 3a 00                   ; 1, :
;
f1ab: c1 f1 00 00                ; CREATE-NAME - (next: f1c1 Define-Word)
f1af: 58 0f 00 00 00             ; XT=0f58, flags=00
f1b4: 0b 43 52 45 41 54 45 2d 4e 41 4d 45 00 ; 11, CREATE-NAME
;
f1c1: d7 f1 00 00                ; Define-Word - (next: f1d7 strcpy2c)
f1c5: 11 0f 00 00 00             ; XT=0f11, flags=00
f1ca: 0b 44 65 66 69 6e 65 2d 57 6f 72 64 00 ; 11, Define-Word
;
f1d7: ea f1 00 00                ; strcpy2c - (next: f1ea getLine)
f1db: d8 0e 00 00 00             ; XT=0ed8, flags=00
f1e0: 08 73 74 72 63 70 79 32 63 00 ; 8, strcpy2c
;
f1ea: fc f1 00 00                ; getLine - (next: f1fc getLineFromFile)
f1ee: 07 0e 00 00 00             ; XT=0e07, flags=00
f1f3: 07 67 65 74 4c 69 6e 65 00 ; 7, getLine
;
f1fc: 16 f2 00 00                ; getLineFromFile - (next: f216 LoadingFromFile?)
f200: ec 0d 00 00 00             ; XT=0dec, flags=00
f205: 0f 67 65 74 4c 69 6e 65 46 72 6f 6d 46 69 6c 65 00 ; 15, getLineFromFile
;
f216: 31 f2 00 00                ; LoadingFromFile? - (next: f231 Pad)
f21a: e3 0d 00 00 00             ; XT=0de3, flags=00
f21f: 10 4c 6f 61 64 69 6e 67 46 72 6f 6d 46 69 6c 65 3f 00 ; 16, LoadingFromFile?
;
f231: 3f f2 00 00                ; Pad - (next: f23f executeInput)
f235: bb 0d 00 00 00             ; XT=0dbb, flags=00
f23a: 03 50 61 64 00             ; 3, Pad
;
f23f: 56 f2 00 00                ; executeInput - (next: f256 executeWord)
f243: 77 0d 00 00 00             ; XT=0d77, flags=00
f248: 0c 65 78 65 63 75 74 65 49 6e 70 75 74 00 ; 12, executeInput
;
f256: 6c f2 00 00                ; executeWord - (next: f26c [COMPILE])
f25a: d6 0c 00 00 00             ; XT=0cd6, flags=00
f25f: 0b 65 78 65 63 75 74 65 57 6f 72 64 00 ; 11, executeWord
;
f26c: 80 f2 00 00                ; [COMPILE] - (next: f280 cstr,)
f270: b2 0c 00 00 00             ; XT=0cb2, flags=00
f275: 09 5b 43 4f 4d 50 49 4c 45 5d 00 ; 9, [COMPILE]
;
f280: 90 f2 00 00                ; cstr, - (next: f290 strlen)
f284: a1 0c 00 00 00             ; XT=0ca1, flags=00
f289: 05 63 73 74 72 2c 00       ; 5, cstr,
;
f290: a1 f2 00 00                ; strlen - (next: f2a1 Copy.INLINE)
f294: 82 0c 00 00 00             ; XT=0c82, flags=00
f299: 06 73 74 72 6c 65 6e 00    ; 6, strlen
;
f2a1: b7 f2 00 00                ; Copy.INLINE - (next: f2b7 DOES>)
f2a5: 63 0c 00 00 00             ; XT=0c63, flags=00
f2aa: 0b 43 6f 70 79 2e 49 4e 4c 49 4e 45 00 ; 11, Copy.INLINE
;
f2b7: c7 f2 00 00                ; DOES> - (next: f2c7 (inline))
f2bb: 4e 0c 00 00 00             ; XT=0c4e, flags=00
f2c0: 05 44 4f 45 53 3e 00       ; 5, DOES>
;
f2c7: da f2 00 00                ; (inline) - (next: f2da find.ret)
f2cb: 2d 0c 00 00 00             ; XT=0c2d, flags=00
f2d0: 08 28 69 6e 6c 69 6e 65 29 00 ; 8, (inline)
;
f2da: ed f2 00 00                ; find.ret - (next: f2ed EXECUTE)
f2de: 16 0c 00 00 00             ; XT=0c16, flags=00
f2e3: 08 66 69 6e 64 2e 72 65 74 00 ; 8, find.ret
;
f2ed: ff f2 00 00                ; EXECUTE - (next: f2ff .lastx)
f2f1: 0d 0c 00 00 00             ; XT=0c0d, flags=00
f2f6: 07 45 58 45 43 55 54 45 00 ; 7, EXECUTE
;
f2ff: 10 f3 00 00                ; .lastx - (next: f310 NUM-WORDS)
f303: d7 0b 00 00 00             ; XT=0bd7, flags=00
f308: 06 2e 6c 61 73 74 78 00    ; 6, .lastx
;
f310: 24 f3 00 00                ; NUM-WORDS - (next: f324 WORDSV)
f314: af 0b 00 00 00             ; XT=0baf, flags=00
f319: 09 4e 55 4d 2d 57 4f 52 44 53 00 ; 9, NUM-WORDS
;
f324: 35 f3 00 00                ; WORDSV - (next: f335 .WORD-LONG)
f328: 7f 0b 00 00 00             ; XT=0b7f, flags=00
f32d: 06 57 4f 52 44 53 56 00    ; 6, WORDSV
;
f335: 4a f3 00 00                ; .WORD-LONG - (next: f34a WORDS)
f339: ef 0a 00 00 00             ; XT=0aef, flags=00
f33e: 0a 2e 57 4f 52 44 2d 4c 4f 4e 47 00 ; 10, .WORD-LONG
;
f34a: 5a f3 00 00                ; WORDS - (next: f35a .WORD-SHORT)
f34e: ca 0a 00 00 00             ; XT=0aca, flags=00
f353: 05 57 4f 52 44 53 00       ; 5, WORDS
;
f35a: 70 f3 00 00                ; .WORD-SHORT - (next: f370 .(LAST))
f35e: b5 0a 00 00 00             ; XT=0ab5, flags=00
f363: 0b 2e 57 4f 52 44 2d 53 48 4f 52 54 00 ; 11, .WORD-SHORT
;
f370: 82 f3 00 00                ; .(LAST) - (next: f382 .(HERE))
f374: 80 0a 00 00 00             ; XT=0a80, flags=00
f379: 07 2e 28 4c 41 53 54 29 00 ; 7, .(LAST)
;
f382: 94 f3 00 00                ; .(HERE) - (next: f394 .(MEM_SZ))
f386: 4b 0a 00 00 00             ; XT=0a4b, flags=00
f38b: 07 2e 28 48 45 52 45 29 00 ; 7, .(HERE)
;
f394: a8 f3 00 00                ; .(MEM_SZ) - (next: f3a8 .S)
f398: 12 0a 00 00 00             ; XT=0a12, flags=00
f39d: 09 2e 28 4d 45 4d 5f 53 5a 29 00 ; 9, .(MEM_SZ)
;
f3a8: b5 f3 00 00                ; .S - (next: f3b5 MAX)
f3ac: 9e 09 00 00 00             ; XT=099e, flags=00
f3b1: 02 2e 53 00                ; 2, .S
;
f3b5: c3 f3 00 00                ; MAX - (next: f3c3 MIN)
f3b9: 8e 09 00 00 00             ; XT=098e, flags=00
f3be: 03 4d 41 58 00             ; 3, MAX
;
f3c3: d1 f3 00 00                ; MIN - (next: f3d1 BINARY.)
f3c7: 7e 09 00 00 00             ; XT=097e, flags=00
f3cc: 03 4d 49 4e 00             ; 3, MIN
;
f3d1: e3 f3 00 00                ; BINARY. - (next: f3e3 DECIMAL.)
f3d5: 67 09 00 00 00             ; XT=0967, flags=00
f3da: 07 42 49 4e 41 52 59 2e 00 ; 7, BINARY.
;
f3e3: f6 f3 00 00                ; DECIMAL. - (next: f3f6 HEX.)
f3e7: 50 09 00 00 00             ; XT=0950, flags=00
f3ec: 08 44 45 43 49 4d 41 4c 2e 00 ; 8, DECIMAL.
;
f3f6: 05 f4 00 00                ; HEX. - (next: f405 .)
f3fa: 2d 09 00 00 00             ; XT=092d, flags=00
f3ff: 04 48 45 58 2e 00          ; 4, HEX.
;
f405: 11 f4 00 00                ; . - (next: f411 (.))
f409: 1f 09 00 00 00             ; XT=091f, flags=00
f40e: 01 2e 00                   ; 1, .
;
f411: 1f f4 00 00                ; (.) - (next: f41f /MOD)
f415: ab 08 00 00 00             ; XT=08ab, flags=00
f41a: 03 28 2e 29 00             ; 3, (.)
;
f41f: 2e f4 00 00                ; /MOD - (next: f42e MOD)
f423: 9c 08 00 00 00             ; XT=089c, flags=00
f428: 04 2f 4d 4f 44 00          ; 4, /MOD
;
f42e: 3c f4 00 00                ; MOD - (next: f43c isNumber?)
f432: 91 08 00 00 00             ; XT=0891, flags=00
f437: 03 4d 4f 44 00             ; 3, MOD
;
f43c: 50 f4 00 00                ; isNumber? - (next: f450 ABS)
f440: 34 08 00 00 00             ; XT=0834, flags=00
f445: 09 69 73 4e 75 6d 62 65 72 3f 00 ; 9, isNumber?
;
f450: 5e f4 00 00                ; ABS - (next: f45e NEGATE)
f454: 20 08 00 00 00             ; XT=0820, flags=00
f459: 03 41 42 53 00             ; 3, ABS
;
f45e: 6f f4 00 00                ; NEGATE - (next: f46f isNumChar?)
f462: 16 08 00 00 00             ; XT=0816, flags=00
f467: 06 4e 45 47 41 54 45 00    ; 6, NEGATE
;
f46f: 84 f4 00 00                ; isNumChar? - (next: f484 isHEX?)
f473: c5 07 00 00 00             ; XT=07c5, flags=00
f478: 0a 69 73 4e 75 6d 43 68 61 72 3f 00 ; 10, isNumChar?
;
f484: 95 f4 00 00                ; isHEX? - (next: f495 findInDict)
f488: b9 07 00 00 00             ; XT=07b9, flags=00
f48d: 06 69 73 48 45 58 3f 00    ; 6, isHEX?
;
f495: aa f4 00 00                ; findInDict - (next: f4aa DICT.GetINLINE)
f499: 72 07 00 00 00             ; XT=0772, flags=00
f49e: 0a 66 69 6e 64 49 6e 44 69 63 74 00 ; 10, findInDict
;
f4aa: c3 f4 00 00                ; DICT.GetINLINE - (next: f4c3 DICT.GetIMMEDIATE)
f4ae: 62 07 00 00 00             ; XT=0762, flags=00
f4b3: 0e 44 49 43 54 2e 47 65 74 49 4e 4c 49 4e 45 00 ; 14, DICT.GetINLINE
;
f4c3: df f4 00 00                ; DICT.GetIMMEDIATE - (next: f4df FLAGS.ISINLINE?)
f4c7: 52 07 00 00 00             ; XT=0752, flags=00
f4cc: 11 44 49 43 54 2e 47 65 74 49 4d 4d 45 44 49 41 54 45 00 ; 17, DICT.GetIMMEDIATE
;
f4df: f9 f4 00 00                ; FLAGS.ISINLINE? - (next: f4f9 FLAGS.ISIMMEDIATE?)
f4e3: 49 07 00 00 00             ; XT=0749, flags=00
f4e8: 0f 46 4c 41 47 53 2e 49 53 49 4e 4c 49 4e 45 3f 00 ; 15, FLAGS.ISINLINE?
;
f4f9: 16 f5 00 00                ; FLAGS.ISIMMEDIATE? - (next: f516 XT.GetDICTP)
f4fd: 40 07 00 00 00             ; XT=0740, flags=00
f502: 12 46 4c 41 47 53 2e 49 53 49 4d 4d 45 44 49 41 54 45 3f 00 ; 18, FLAGS.ISIMMEDIATE?
;
f516: 2c f5 00 00                ; XT.GetDICTP - (next: f52c DICTP>NAME)
f51a: 27 07 00 00 00             ; XT=0727, flags=00
f51f: 0b 58 54 2e 47 65 74 44 49 43 54 50 00 ; 11, XT.GetDICTP
;
f52c: 41 f5 00 00                ; DICTP>NAME - (next: f541 DICT.GetFLAGS)
f530: 1a 07 00 00 00             ; XT=071a, flags=00
f535: 0a 44 49 43 54 50 3e 4e 41 4d 45 00 ; 10, DICTP>NAME
;
f541: 59 f5 00 00                ; DICT.GetFLAGS - (next: f559 DICT.GetXT)
f545: 0e 07 00 00 00             ; XT=070e, flags=00
f54a: 0d 44 49 43 54 2e 47 65 74 46 4c 41 47 53 00 ; 13, DICT.GetFLAGS
;
f559: 6e f5 00 00                ; DICT.GetXT - (next: f56e NAME>DICT)
f55d: 02 07 00 00 00             ; XT=0702, flags=00
f562: 0a 44 49 43 54 2e 47 65 74 58 54 00 ; 10, DICT.GetXT
;
f56e: 82 f5 00 00                ; NAME>DICT - (next: f582 FLAGS>DICT)
f572: f3 06 00 00 00             ; XT=06f3, flags=00
f577: 09 4e 41 4d 45 3e 44 49 43 54 00 ; 9, NAME>DICT
;
f582: 97 f5 00 00                ; FLAGS>DICT - (next: f597 XT>DICT)
f586: e7 06 00 00 00             ; XT=06e7, flags=00
f58b: 0a 46 4c 41 47 53 3e 44 49 43 54 00 ; 10, FLAGS>DICT
;
f597: a9 f5 00 00                ; XT>DICT - (next: f5a9 NEXT>DICT)
f59b: de 06 00 00 00             ; XT=06de, flags=00
f5a0: 07 58 54 3e 44 49 43 54 00 ; 7, XT>DICT
;
f5a9: bd f5 00 00                ; NEXT>DICT - (next: f5bd DICT>NAME)
f5ad: d8 06 00 00 00             ; XT=06d8, flags=00
f5b2: 09 4e 45 58 54 3e 44 49 43 54 00 ; 9, NEXT>DICT
;
f5bd: d1 f5 00 00                ; DICT>NAME - (next: f5d1 DICT>FLAGS)
f5c1: cc 06 00 00 00             ; XT=06cc, flags=00
f5c6: 09 44 49 43 54 3e 4e 41 4d 45 00 ; 9, DICT>NAME
;
f5d1: e6 f5 00 00                ; DICT>FLAGS - (next: f5e6 DICT>XT)
f5d5: c0 06 00 00 00             ; XT=06c0, flags=00
f5da: 0a 44 49 43 54 3e 46 4c 41 47 53 00 ; 10, DICT>FLAGS
;
f5e6: f8 f5 00 00                ; DICT>XT - (next: f5f8 DICT>NEXT)
f5ea: b7 06 00 00 00             ; XT=06b7, flags=00
f5ef: 07 44 49 43 54 3e 58 54 00 ; 7, DICT>XT
;
f5f8: 0c f6 00 00                ; DICT>NEXT - (next: f60c getOneWord)
f5fc: b1 06 00 00 00             ; XT=06b1, flags=00
f601: 09 44 49 43 54 3e 4e 45 58 54 00 ; 9, DICT>NEXT
;
f60c: 21 f6 00 00                ; getOneWord - (next: f621 skipWS)
f610: 79 06 00 00 00             ; XT=0679, flags=00
f615: 0a 67 65 74 4f 6e 65 57 6f 72 64 00 ; 10, getOneWord
;
f621: 32 f6 00 00                ; skipWS - (next: f632 getInput)
f625: 50 06 00 00 00             ; XT=0650, flags=00
f62a: 06 73 6b 69 70 57 53 00    ; 6, skipWS
;
f632: 45 f6 00 00                ; getInput - (next: f645 PAD)
f636: 3a 06 00 00 00             ; XT=063a, flags=00
f63b: 08 67 65 74 49 6e 70 75 74 00 ; 8, getInput
;
f645: 53 f6 00 00                ; PAD - (next: f653 tmp-alloc)
f649: 28 06 00 00 00             ; XT=0628, flags=00
f64e: 03 50 41 44 00             ; 3, PAD
;
f653: 67 f6 00 00                ; tmp-alloc - (next: f667 tmp-cur)
f657: 11 06 00 00 00             ; XT=0611, flags=00
f65c: 09 74 6d 70 2d 61 6c 6c 6f 63 00 ; 9, tmp-alloc
;
f667: 79 f6 00 00                ; tmp-cur - (next: f679 tmp-init)
f66b: 05 06 00 00 00             ; XT=0605, flags=00
f670: 07 74 6d 70 2d 63 75 72 00 ; 7, tmp-cur
;
f679: 8c f6 00 00                ; tmp-init - (next: f68c (tmp))
f67d: f6 05 00 00 00             ; XT=05f6, flags=00
f682: 08 74 6d 70 2d 69 6e 69 74 00 ; 8, tmp-init
;
f68c: 9c f6 00 00                ; (tmp) - (next: f69c BETWEEN)
f690: e6 05 00 00 00             ; XT=05e6, flags=00
f695: 05 28 74 6d 70 29 00       ; 5, (tmp)
;
f69c: ae f6 00 00                ; BETWEEN - (next: f6ae CR)
f6a0: ce 05 00 00 00             ; XT=05ce, flags=00
f6a5: 07 42 45 54 57 45 45 4e 00 ; 7, BETWEEN
;
f6ae: bb f6 00 00                ; CR - (next: f6bb CRLF)
f6b2: c2 05 00 00 02             ; XT=05c2, flags=02
f6b7: 02 43 52 00                ; 2, CR
;
f6bb: ca f6 00 00                ; CRLF - (next: f6ca BL)
f6bf: b6 05 00 00 02             ; XT=05b6, flags=02
f6c4: 04 43 52 4c 46 00          ; 4, CRLF
;
f6ca: d7 f6 00 00                ; BL - (next: f6d7 ()
f6ce: ad 05 00 00 02             ; XT=05ad, flags=02
f6d3: 02 42 4c 00                ; 2, BL
;
f6d7: e3 f6 00 00                ; ( - (next: f6e3 \)
f6db: 63 05 00 00 01             ; XT=0563, flags=01
f6e0: 01 28 00                   ; 1, (
;
f6e3: ef f6 00 00                ; \ - (next: f6ef CT)
f6e7: 54 05 00 00 01             ; XT=0554, flags=01
f6ec: 01 5c 00                   ; 1, \
;
f6ef: fc f6 00 00                ; CT - (next: f6fc TYPE)
f6f3: 44 05 00 00 00             ; XT=0544, flags=00
f6f8: 02 43 54 00                ; 2, CT
;
f6fc: 0b f7 00 00                ; TYPE - (next: f70b COUNT)
f700: 24 05 00 00 00             ; XT=0524, flags=00
f705: 04 54 59 50 45 00          ; 4, TYPE
;
f70b: 1b f7 00 00                ; COUNT - (next: f71b NOT)
f70f: 1a 05 00 00 00             ; XT=051a, flags=00
f714: 05 43 4f 55 4e 54 00       ; 5, COUNT
;
f71b: 29 f7 00 00                ; NOT - (next: f729 FALSE)
f71f: 11 05 00 00 02             ; XT=0511, flags=02
f724: 03 4e 4f 54 00             ; 3, NOT
;
f729: 39 f7 00 00                ; FALSE - (next: f739 TRUE)
f72d: 09 05 00 00 02             ; XT=0509, flags=02
f732: 05 46 41 4c 53 45 00       ; 5, FALSE
;
f739: 48 f7 00 00                ; TRUE - (next: f748 >=)
f73d: 01 05 00 00 02             ; XT=0501, flags=02
f742: 04 54 52 55 45 00          ; 4, TRUE
;
f748: 55 f7 00 00                ; >= - (next: f755 <=)
f74c: f7 04 00 00 02             ; XT=04f7, flags=02
f751: 02 3e 3d 00                ; 2, >=
;
f755: 62 f7 00 00                ; <= - (next: f762 <>)
f759: ed 04 00 00 02             ; XT=04ed, flags=02
f75e: 02 3c 3d 00                ; 2, <=
;
f762: 6f f7 00 00                ; <> - (next: f76f 0=)
f766: e3 04 00 00 02             ; XT=04e3, flags=02
f76b: 02 3c 3e 00                ; 2, <>
;
f76f: 7c f7 00 00                ; 0= - (next: f77c C+!)
f773: da 04 00 00 02             ; XT=04da, flags=02
f778: 02 30 3d 00                ; 2, 0=
;
f77c: 8a f7 00 00                ; C+! - (next: f78a +!)
f780: ce 04 00 00 00             ; XT=04ce, flags=00
f785: 03 43 2b 21 00             ; 3, C+!
;
f78a: 97 f7 00 00                ; +! - (next: f797 C--)
f78e: c2 04 00 00 00             ; XT=04c2, flags=00
f793: 02 2b 21 00                ; 2, +!
;
f797: a5 f7 00 00                ; C-- - (next: f7a5 C++)
f79b: b5 04 00 00 00             ; XT=04b5, flags=00
f7a0: 03 43 2d 2d 00             ; 3, C--
;
f7a5: b3 f7 00 00                ; C++ - (next: f7b3 --)
f7a9: aa 04 00 00 00             ; XT=04aa, flags=00
f7ae: 03 43 2b 2b 00             ; 3, C++
;
f7b3: c0 f7 00 00                ; -- - (next: f7c0 ++)
f7b7: 9d 04 00 00 00             ; XT=049d, flags=00
f7bc: 02 2d 2d 00                ; 2, --
;
f7c0: cd f7 00 00                ; ++ - (next: f7cd -=)
f7c4: 90 04 00 00 00             ; XT=0490, flags=00
f7c9: 02 2b 2b 00                ; 2, ++
;
f7cd: da f7 00 00                ; -= - (next: f7da +=)
f7d1: 84 04 00 00 00             ; XT=0484, flags=00
f7d6: 02 2d 3d 00                ; 2, -=
;
f7da: e7 f7 00 00                ; += - (next: f7e7 2/)
f7de: 79 04 00 00 00             ; XT=0479, flags=00
f7e3: 02 2b 3d 00                ; 2, +=
;
f7e7: f4 f7 00 00                ; 2/ - (next: f7f4 2*)
f7eb: 70 04 00 00 02             ; XT=0470, flags=02
f7f0: 02 32 2f 00                ; 2, 2/
;
f7f4: 01 f8 00 00                ; 2* - (next: f801 1-)
f7f8: 67 04 00 00 02             ; XT=0467, flags=02
f7fd: 02 32 2a 00                ; 2, 2*
;
f801: 0e f8 00 00                ; 1- - (next: f80e 1+)
f805: 5e 04 00 00 02             ; XT=045e, flags=02
f80a: 02 31 2d 00                ; 2, 1-
;
f80e: 1b f8 00 00                ; 1+ - (next: f81b -ROT)
f812: 57 04 00 00 02             ; XT=0457, flags=02
f817: 02 31 2b 00                ; 2, 1+
;
f81b: 2a f8 00 00                ; -ROT - (next: f82a ROT)
f81f: 4d 04 00 00 02             ; XT=044d, flags=02
f824: 04 2d 52 4f 54 00          ; 4, -ROT
;
f82a: 38 f8 00 00                ; ROT - (next: f838 NIP)
f82e: 43 04 00 00 02             ; XT=0443, flags=02
f833: 03 52 4f 54 00             ; 3, ROT
;
f838: 46 f8 00 00                ; NIP - (next: f846 TUCK)
f83c: 3b 04 00 00 02             ; XT=043b, flags=02
f841: 03 4e 49 50 00             ; 3, NIP
;
f846: 55 f8 00 00                ; TUCK - (next: f855 2DROP)
f84a: 33 04 00 00 02             ; XT=0433, flags=02
f84f: 04 54 55 43 4b 00          ; 4, TUCK
;
f855: 65 f8 00 00                ; 2DROP - (next: f865 2DUP)
f859: 2b 04 00 00 02             ; XT=042b, flags=02
f85e: 05 32 44 52 4f 50 00       ; 5, 2DROP
;
f865: 74 f8 00 00                ; 2DUP - (next: f874 RDROP)
f869: 23 04 00 00 02             ; XT=0423, flags=02
f86e: 04 32 44 55 50 00          ; 4, 2DUP
;
f874: 84 f8 00 00                ; RDROP - (next: f884 R@)
f878: 1b 04 00 00 02             ; XT=041b, flags=02
f87d: 05 52 44 52 4f 50 00       ; 5, RDROP
;
f884: 91 f8 00 00                ; R@ - (next: f891 DEBUG-OFF)
f888: 12 04 00 00 02             ; XT=0412, flags=02
f88d: 02 52 40 00                ; 2, R@
;
f891: a5 f8 00 00                ; DEBUG-OFF - (next: f8a5 DEBUG-ON)
f895: 09 04 00 00 02             ; XT=0409, flags=02
f89a: 09 44 45 42 55 47 2d 4f 46 46 00 ; 9, DEBUG-OFF
;
f8a5: b8 f8 00 00                ; DEBUG-ON - (next: f8b8 TRACE-OFF)
f8a9: 00 04 00 00 02             ; XT=0400, flags=02
f8ae: 08 44 45 42 55 47 2d 4f 4e 00 ; 8, DEBUG-ON
;
f8b8: cc f8 00 00                ; TRACE-OFF - (next: f8cc TRACE-ON)
f8bc: f7 03 00 00 02             ; XT=03f7, flags=02
f8c1: 09 54 52 41 43 45 2d 4f 46 46 00 ; 9, TRACE-OFF
;
f8cc: df f8 00 00                ; TRACE-ON - (next: f8df MEM_SZ)
f8d0: ee 03 00 00 02             ; XT=03ee, flags=02
f8d5: 08 54 52 41 43 45 2d 4f 4e 00 ; 8, TRACE-ON
;
f8df: f0 f8 00 00                ; MEM_SZ - (next: f8f0 isNeg)
f8e3: e5 03 00 00 00             ; XT=03e5, flags=00
f8e8: 06 4d 45 4d 5f 53 5a 00    ; 6, MEM_SZ
;
f8f0: 00 f9 00 00                ; isNeg - (next: f900 >IN)
f8f4: d5 03 00 00 00             ; XT=03d5, flags=00
f8f9: 05 69 73 4e 65 67 00       ; 5, isNeg
;
f900: 0e f9 00 00                ; >IN - (next: f90e LEAVE)
f904: c5 03 00 00 00             ; XT=03c5, flags=00
f909: 03 3e 49 4e 00             ; 3, >IN
;
f90e: 1e f9 00 00                ; LEAVE - (next: f91e UNTIL)
f912: b0 03 00 00 01             ; XT=03b0, flags=01
f917: 05 4c 45 41 56 45 00       ; 5, LEAVE
;
f91e: 2e f9 00 00                ; UNTIL - (next: f92e WHILE)
f922: 96 03 00 00 01             ; XT=0396, flags=01
f927: 05 55 4e 54 49 4c 00       ; 5, UNTIL
;
f92e: 3e f9 00 00                ; WHILE - (next: f93e AGAIN)
f932: 7c 03 00 00 01             ; XT=037c, flags=01
f937: 05 57 48 49 4c 45 00       ; 5, WHILE
;
f93e: 4e f9 00 00                ; AGAIN - (next: f94e BEGIN)
f942: 62 03 00 00 01             ; XT=0362, flags=01
f947: 05 41 47 41 49 4e 00       ; 5, AGAIN
;
f94e: 5e f9 00 00                ; BEGIN - (next: f95e THEN)
f952: 4f 03 00 00 01             ; XT=034f, flags=01
f957: 05 42 45 47 49 4e 00       ; 5, BEGIN
;
f95e: 6d f9 00 00                ; THEN - (next: f96d ELSE)
f962: 3a 03 00 00 01             ; XT=033a, flags=01
f967: 04 54 48 45 4e 00          ; 4, THEN
;
f96d: 7c f9 00 00                ; ELSE - (next: f97c IF)
f971: 15 03 00 00 01             ; XT=0315, flags=01
f976: 04 45 4c 53 45 00          ; 4, ELSE
;
f97c: 89 f9 00 00                ; IF - (next: f989 ?COMPILING)
f980: f6 02 00 00 01             ; XT=02f6, flags=01
f985: 02 49 46 00                ; 2, IF
;
f989: 9e f9 00 00                ; ?COMPILING - (next: f99e OFF)
f98d: ed 02 00 00 00             ; XT=02ed, flags=00
f992: 0a 3f 43 4f 4d 50 49 4c 49 4e 47 00 ; 10, ?COMPILING
;
f99e: ac f9 00 00                ; OFF - (next: f9ac ON)
f9a2: e3 02 00 00 00             ; XT=02e3, flags=00
f9a7: 03 4f 46 46 00             ; 3, OFF
;
f9ac: b9 f9 00 00                ; ON - (next: f9b9 BINARY)
f9b0: d9 02 00 00 00             ; XT=02d9, flags=00
f9b5: 02 4f 4e 00                ; 2, ON
;
f9b9: ca f9 00 00                ; BINARY - (next: f9ca OCTAL)
f9bd: ce 02 00 00 00             ; XT=02ce, flags=00
f9c2: 06 42 49 4e 41 52 59 00    ; 6, BINARY
;
f9ca: da f9 00 00                ; OCTAL - (next: f9da DECIMAL)
f9ce: c3 02 00 00 00             ; XT=02c3, flags=00
f9d3: 05 4f 43 54 41 4c 00       ; 5, OCTAL
;
f9da: ec f9 00 00                ; DECIMAL - (next: f9ec HEX)
f9de: b8 02 00 00 00             ; XT=02b8, flags=00
f9e3: 07 44 45 43 49 4d 41 4c 00 ; 7, DECIMAL
;
f9ec: fa f9 00 00                ; HEX - (next: f9fa C,)
f9f0: ad 02 00 00 00             ; XT=02ad, flags=00
f9f5: 03 48 45 58 00             ; 3, HEX
;
f9fa: 07 fa 00 00                ; C, - (next: fa07 ,)
f9fe: 9a 02 00 00 00             ; XT=029a, flags=00
fa03: 02 43 2c 00                ; 2, C,
;
fa07: 13 fa 00 00                ; , - (next: fa13 HERE)
fa0b: 87 02 00 00 00             ; XT=0287, flags=00
fa10: 01 2c 00                   ; 1, ,
;
fa13: 22 fa 00 00                ; HERE - (next: fa22 LAST)
fa17: 7e 02 00 00 02             ; XT=027e, flags=02
fa1c: 04 48 45 52 45 00          ; 4, HERE
;
fa22: 31 fa 00 00                ; LAST - (next: fa31 FLAG_INLINE)
fa26: 75 02 00 00 02             ; XT=0275, flags=02
fa2b: 04 4c 41 53 54 00          ; 4, LAST
;
fa31: 47 fa 00 00                ; FLAG_INLINE - (next: fa47 FLAG_IMMEDIATE)
fa35: 6d 02 00 00 02             ; XT=026d, flags=02
fa3a: 0b 46 4c 41 47 5f 49 4e 4c 49 4e 45 00 ; 11, FLAG_INLINE
;
fa47: 60 fa 00 00                ; FLAG_IMMEDIATE - (next: fa60 CELLS)
fa4b: 65 02 00 00 02             ; XT=0265, flags=02
fa50: 0e 46 4c 41 47 5f 49 4d 4d 45 44 49 41 54 45 00 ; 14, FLAG_IMMEDIATE
;
fa60: 70 fa 00 00                ; CELLS - (next: fa70 IMMEDIATE)
fa64: 5c 02 00 00 02             ; XT=025c, flags=02
fa69: 05 43 45 4c 4c 53 00       ; 5, CELLS
;
fa70: 84 fa 00 00                ; IMMEDIATE - (next: fa84 INLINE)
fa74: 46 02 00 00 00             ; XT=0246, flags=00
fa79: 09 49 4d 4d 45 44 49 41 54 45 00 ; 9, IMMEDIATE
;
fa84: 95 fa 00 00                ; INLINE - (next: fa95 BYE)
fa88: 30 02 00 00 00             ; XT=0230, flags=00
fa8d: 06 49 4e 4c 49 4e 45 00    ; 6, INLINE
;
fa95: a3 fa 00 00                ; BYE - (next: faa3 RESET)
fa99: 29 02 00 00 02             ; XT=0229, flags=02
fa9e: 03 42 59 45 00             ; 3, BYE
;
faa3: b3 fa 00 00                ; RESET - (next: fab3 BREAK)
faa7: 22 02 00 00 02             ; XT=0222, flags=02
faac: 05 52 45 53 45 54 00       ; 5, RESET
;
fab3: c3 fa 00 00                ; BREAK - (next: fac3 RDEPTH)
fab7: 1b 02 00 00 02             ; XT=021b, flags=02
fabc: 05 42 52 45 41 4b 00       ; 5, BREAK
;
fac3: d4 fa 00 00                ; RDEPTH - (next: fad4 INC)
fac7: 14 02 00 00 02             ; XT=0214, flags=02
facc: 06 52 44 45 50 54 48 00    ; 6, RDEPTH
;
fad4: e2 fa 00 00                ; INC - (next: fae2 USPOP)
fad8: 0d 02 00 00 02             ; XT=020d, flags=02
fadd: 03 49 4e 43 00             ; 3, INC
;
fae2: f2 fa 00 00                ; USPOP - (next: faf2 USPUSH)
fae6: 06 02 00 00 02             ; XT=0206, flags=02
faeb: 05 55 53 50 4f 50 00       ; 5, USPOP
;
faf2: 03 fb 00 00                ; USPUSH - (next: fb03 USINIT)
faf6: ff 01 00 00 02             ; XT=01ff, flags=02
fafb: 06 55 53 50 55 53 48 00    ; 6, USPUSH
;
fb03: 14 fb 00 00                ; USINIT - (next: fb14 COMPAREI)
fb07: f8 01 00 00 02             ; XT=01f8, flags=02
fb0c: 06 55 53 49 4e 49 54 00    ; 6, USINIT
;
fb14: 27 fb 00 00                ; COMPAREI - (next: fb27 GETCH)
fb18: f1 01 00 00 02             ; XT=01f1, flags=02
fb1d: 08 43 4f 4d 50 41 52 45 49 00 ; 8, COMPAREI
;
fb27: 37 fb 00 00                ; GETCH - (next: fb37 DEPTH)
fb2b: ea 01 00 00 02             ; XT=01ea, flags=02
fb30: 05 47 45 54 43 48 00       ; 5, GETCH
;
fb37: 47 fb 00 00                ; DEPTH - (next: fb47 PICK)
fb3b: e3 01 00 00 02             ; XT=01e3, flags=02
fb40: 05 44 45 50 54 48 00       ; 5, DEPTH
;
fb47: 56 fb 00 00                ; PICK - (next: fb56 AND)
fb4b: dc 01 00 00 02             ; XT=01dc, flags=02
fb50: 04 50 49 43 4b 00          ; 4, PICK
;
fb56: 64 fb 00 00                ; AND - (next: fb64 LOGLEVEL)
fb5a: d5 01 00 00 02             ; XT=01d5, flags=02
fb5f: 03 41 4e 44 00             ; 3, AND
;
fb64: 77 fb 00 00                ; LOGLEVEL - (next: fb77 R>)
fb68: ce 01 00 00 02             ; XT=01ce, flags=02
fb6d: 08 4c 4f 47 4c 45 56 45 4c 00 ; 8, LOGLEVEL
;
fb77: 84 fb 00 00                ; R> - (next: fb84 >R)
fb7b: c7 01 00 00 02             ; XT=01c7, flags=02
fb80: 02 52 3e 00                ; 2, R>
;
fb84: 91 fb 00 00                ; >R - (next: fb91 FCLOSE)
fb88: c0 01 00 00 02             ; XT=01c0, flags=02
fb8d: 02 3e 52 00                ; 2, >R
;
fb91: a2 fb 00 00                ; FCLOSE - (next: fba2 FWRITE)
fb95: b9 01 00 00 02             ; XT=01b9, flags=02
fb9a: 06 46 43 4c 4f 53 45 00    ; 6, FCLOSE
;
fba2: b3 fb 00 00                ; FWRITE - (next: fbb3 FREADLINE)
fba6: b2 01 00 00 02             ; XT=01b2, flags=02
fbab: 06 46 57 52 49 54 45 00    ; 6, FWRITE
;
fbb3: c7 fb 00 00                ; FREADLINE - (next: fbc7 FREAD)
fbb7: ab 01 00 00 02             ; XT=01ab, flags=02
fbbc: 09 46 52 45 41 44 4c 49 4e 45 00 ; 9, FREADLINE
;
fbc7: d7 fb 00 00                ; FREAD - (next: fbd7 FOPEN)
fbcb: a4 01 00 00 02             ; XT=01a4, flags=02
fbd0: 05 46 52 45 41 44 00       ; 5, FREAD
;
fbd7: e7 fb 00 00                ; FOPEN - (next: fbe7 COMPARE)
fbdb: 9d 01 00 00 02             ; XT=019d, flags=02
fbe0: 05 46 4f 50 45 4e 00       ; 5, FOPEN
;
fbe7: f9 fb 00 00                ; COMPARE - (next: fbf9 OVER)
fbeb: 96 01 00 00 02             ; XT=0196, flags=02
fbf0: 07 43 4f 4d 50 41 52 45 00 ; 7, COMPARE
;
fbf9: 08 fc 00 00                ; OVER - (next: fc08 EMIT)
fbfd: 8f 01 00 00 02             ; XT=018f, flags=02
fc02: 04 4f 56 45 52 00          ; 4, OVER
;
fc08: 17 fc 00 00                ; EMIT - (next: fc17 DICTP)
fc0c: 88 01 00 00 02             ; XT=0188, flags=02
fc11: 04 45 4d 49 54 00          ; 4, EMIT
;
fc17: 27 fc 00 00                ; DICTP - (next: fc27 >)
fc1b: 7b 01 00 00 02             ; XT=017b, flags=02
fc20: 05 44 49 43 54 50 00       ; 5, DICTP
;
fc27: 33 fc 00 00                ; > - (next: fc33 =)
fc2b: 74 01 00 00 02             ; XT=0174, flags=02
fc30: 01 3e 00                   ; 1, >
;
fc33: 3f fc 00 00                ; = - (next: fc3f <)
fc37: 6d 01 00 00 02             ; XT=016d, flags=02
fc3c: 01 3d 00                   ; 1, =
;
fc3f: 4b fc 00 00                ; < - (next: fc4b /)
fc43: 66 01 00 00 02             ; XT=0166, flags=02
fc48: 01 3c 00                   ; 1, <
;
fc4b: 57 fc 00 00                ; / - (next: fc57 *)
fc4f: 5f 01 00 00 02             ; XT=015f, flags=02
fc54: 01 2f 00                   ; 1, /
;
fc57: 63 fc 00 00                ; * - (next: fc63 -)
fc5b: 58 01 00 00 02             ; XT=0158, flags=02
fc60: 01 2a 00                   ; 1, *
;
fc63: 6f fc 00 00                ; - - (next: fc6f +)
fc67: 51 01 00 00 02             ; XT=0151, flags=02
fc6c: 01 2d 00                   ; 1, -
;
fc6f: 7b fc 00 00                ; + - (next: fc7b C!)
fc73: 4a 01 00 00 02             ; XT=014a, flags=02
fc78: 01 2b 00                   ; 1, +
;
fc7b: 88 fc 00 00                ; C! - (next: fc88 C@)
fc7f: 43 01 00 00 02             ; XT=0143, flags=02
fc84: 02 43 21 00                ; 2, C!
;
fc88: 95 fc 00 00                ; C@ - (next: fc95 CLITERAL)
fc8c: 3c 01 00 00 02             ; XT=013c, flags=02
fc91: 02 43 40 00                ; 2, C@
;
fc95: a8 fc 00 00                ; CLITERAL - (next: fca8 OR)
fc99: 2f 01 00 00 02             ; XT=012f, flags=02
fc9e: 08 43 4c 49 54 45 52 41 4c 00 ; 8, CLITERAL
;
fca8: b5 fc 00 00                ; OR - (next: fcb5 RET)
fcac: 28 01 00 00 02             ; XT=0128, flags=02
fcb1: 02 4f 52 00                ; 2, OR
;
fcb5: c3 fc 00 00                ; RET - (next: fcc3 CALL)
fcb9: 1b 01 00 00 00             ; XT=011b, flags=00
fcbe: 03 52 45 54 00             ; 3, RET
;
fcc3: d2 fc 00 00                ; CALL - (next: fcd2 JMPNZ)
fcc7: 0e 01 00 00 00             ; XT=010e, flags=00
fccc: 04 43 41 4c 4c 00          ; 4, CALL
;
fcd2: e2 fc 00 00                ; JMPNZ - (next: fce2 JMPZ)
fcd6: 01 01 00 00 00             ; XT=0101, flags=00
fcdb: 05 4a 4d 50 4e 5a 00       ; 5, JMPNZ
;
fce2: f1 fc 00 00                ; JMPZ - (next: fcf1 JMP)
fce6: f4 00 00 00 00             ; XT=00f4, flags=00
fceb: 04 4a 4d 50 5a 00          ; 4, JMPZ
;
fcf1: ff fc 00 00                ; JMP - (next: fcff SLITERAL)
fcf5: e7 00 00 00 00             ; XT=00e7, flags=00
fcfa: 03 4a 4d 50 00             ; 3, JMP
;
fcff: 12 fd 00 00                ; SLITERAL - (next: fd12 DUP)
fd03: da 00 00 00 00             ; XT=00da, flags=00
fd08: 08 53 4c 49 54 45 52 41 4c 00 ; 8, SLITERAL
;
fd12: 20 fd 00 00                ; DUP - (next: fd20 DROP)
fd16: d3 00 00 00 02             ; XT=00d3, flags=02
fd1b: 03 44 55 50 00             ; 3, DUP
;
fd20: 2f fd 00 00                ; DROP - (next: fd2f SWAP)
fd24: cc 00 00 00 02             ; XT=00cc, flags=02
fd29: 04 44 52 4f 50 00          ; 4, DROP
;
fd2f: 3e fd 00 00                ; SWAP - (next: fd3e !)
fd33: c5 00 00 00 02             ; XT=00c5, flags=02
fd38: 04 53 57 41 50 00          ; 4, SWAP
;
fd3e: 4a fd 00 00                ; ! - (next: fd4a @)
fd42: be 00 00 00 02             ; XT=00be, flags=02
fd47: 01 21 00                   ; 1, !
;
fd4a: 56 fd 00 00                ; @ - (next: fd56 LITERAL)
fd4e: b7 00 00 00 02             ; XT=00b7, flags=02
fd53: 01 40 00                   ; 1, @
;
fd56: 68 fd 00 00                ; LITERAL - (next: fd68 ])
fd5a: aa 00 00 00 00             ; XT=00aa, flags=00
fd5f: 07 4c 49 54 45 52 41 4c 00 ; 7, LITERAL
;
fd68: 74 fd 00 00                ; ] - (next: fd74 [)
fd6c: 9f 00 00 00 01             ; XT=009f, flags=01
fd71: 01 5d 00                   ; 1, ]
;
fd74: 80 fd 00 00                ; [ - (next: fd80 ,)
fd78: 94 00 00 00 01             ; XT=0094, flags=01
fd7d: 01 5b 00                   ; 1, [
;
fd80: 8c fd 00 00                ; , - (next: fd8c C,)
fd84: 81 00 00 00 00             ; XT=0081, flags=00
fd89: 01 2c 00                   ; 1, ,
;
fd8c: 99 fd 00 00                ; C, - (next: fd99 STATE)
fd90: 70 00 00 00 00             ; XT=0070, flags=00
fd95: 02 43 2c 00                ; 2, C,
;
fd99: a9 fd 00 00                ; STATE - (next: fda9 INPUT-FP)
fd9d: 68 00 00 00 02             ; XT=0068, flags=02
fda2: 05 53 54 41 54 45 00       ; 5, STATE
;
fda9: bc fd 00 00                ; INPUT-FP - (next: fdbc (LAST))
fdad: 60 00 00 00 02             ; XT=0060, flags=02
fdb2: 08 49 4e 50 55 54 2d 46 50 00 ; 8, INPUT-FP
;
fdbc: cd fd 00 00                ; (LAST) - (next: fdcd (HERE))
fdc0: 58 00 00 00 02             ; XT=0058, flags=02
fdc5: 06 28 4c 41 53 54 29 00    ; 6, (LAST)
;
fdcd: de fd 00 00                ; (HERE) - (next: fdde CELL)
fdd1: 50 00 00 00 02             ; XT=0050, flags=02
fdd6: 06 28 48 45 52 45 29 00    ; 6, (HERE)
;
fdde: ed fd 00 00                ; CELL - (next: fded BASE)
fde2: 48 00 00 00 02             ; XT=0048, flags=02
fde7: 04 43 45 4c 4c 00          ; 4, CELL
;
fded: fc fd 00 00                ; BASE - (next: fdfc <end>)
fdf1: 40 00 00 00 02             ; XT=0040, flags=02
fdf6: 04 42 41 53 45 00          ; 4, BASE
;
fdfc: 00 00 00 00                ; End.
