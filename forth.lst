; memory-size: 65536 bytes, (10000 hex)
; data-stack: fe00, grows up
; return-stack: fffc, grows down
;
0000: 08 12 12 00 00             ; JMP main (1212)
;
0005: 00 00 00
0008: 00000004 00000000
0010: 00001465 0000f09b 0000000a 00000000
0020: 00000000 00010000 00000000 00000000
0030: 00000000 00000000 00000000 00000000
;
0040: 18 eb ff 00 00             ; DICTP (HERE) (ffeb)
0045: 01 4b 00 00 00             ; LITERAL 75 (0x004b)
004a: 0c                         ; RET
004b: 6c 14 00 00                ; dw 0x146c
;
004f: 18 da ff 00 00             ; DICTP (LAST) (ffda)
0054: 01 5a 00 00 00             ; LITERAL 90 (0x005a)
0059: 0c                         ; RET
005a: 8e f0 00 00                ; dw 0xf08e
;
005e: 18 cb ff 00 00             ; DICTP BASE (ffcb)
0063: 01 69 00 00 00             ; LITERAL 105 (0x0069)
0068: 0c                         ; RET
0069: 0a 00 00 00                ; dw 0x000a
;
006d: 18 bb ff 00 00             ; DICTP STATE (ffbb)
0072: 01 78 00 00 00             ; LITERAL 120 (0x0078)
0077: 0c                         ; RET
0078: 00 00 00 00                ; dw 0x0000
;
007c: 18 a8 ff 00 00             ; DICTP (MEM_SZ) (ffa8)
0081: 01 87 00 00 00             ; LITERAL 135 (0x0087)
0086: 0c                         ; RET
0087: 00 00 01 00                ; dw 0x10000
;
008b: 18 9a ff 00 00             ; DICTP >IN (ff9a)
0090: 01 96 00 00 00             ; LITERAL 150 (0x0096)
0095: 0c                         ; RET
0096: 00 00 00 00                ; dw 0x0000
;
009a: 18 8b ff 00 00             ; DICTP #NEG (ff8b)
009f: 01 a5 00 00 00             ; LITERAL 165 (0x00a5)
00a4: 0c                         ; RET
00a5: 00 00 00 00                ; dw 0x0000
;
00a9: 18 7c ff 00 00             ; DICTP #LEN (ff7c)
00ae: 01 b4 00 00 00             ; LITERAL 180 (0x00b4)
00b3: 0c                         ; RET
00b4: 05 00 00 00                ; dw 0x0005
;
00b8: 18 69 ff 00 00             ; DICTP INPUT-FP (ff69)
00bd: 01 c3 00 00 00             ; LITERAL 195 (0x00c3)
00c2: 0c                         ; RET
00c3: 00 00 00 00                ; dw 0x0000
;
00c7: 18 5c ff 00 00             ; DICTP T1 (ff5c)
00cc: 01 d2 00 00 00             ; LITERAL 210 (0x00d2)
00d1: 0c                         ; RET
00d2: 00 00 00 00                ; dw 0x0000
;
00d6: 18 4f ff 00 00             ; DICTP T2 (ff4f)
00db: 01 e1 00 00 00             ; LITERAL 225 (0x00e1)
00e0: 0c                         ; RET
00e1: 00 00 00 00                ; dw 0x0000
;
00e5: 18 42 ff 00 00             ; DICTP T3 (ff42)
00ea: 01 f0 00 00 00             ; LITERAL 240 (0x00f0)
00ef: 0c                         ; RET
00f0: 00 00 00 00                ; dw 0x0000
;
00f4: fc                         ; NOP
00f5: 18 33 ff 00 00             ; DICTP CELL (ff33)
00fa: 0e 04                      ; CLITERAL 4
00fc: 0c                         ; RET
;
00fd: 18 24 ff 00 00             ; DICTP HERE (ff24)
0102: 0b 40 00 00 00             ; CALL (HERE) (0040)
0107: 02                         ; FETCH
0108: 0c                         ; RET
;
0109: 18 15 ff 00 00             ; DICTP LAST (ff15)
010e: 0b 4f 00 00 00             ; CALL (LAST) (004f)
0113: 02                         ; FETCH
0114: 0c                         ; RET
;
0115: 18 08 ff 00 00             ; DICTP C, (ff08)
011a: 0b fd 00 00 00             ; CALL HERE (00fd)
011f: 10                         ; CSTORE
0120: 0b fd 00 00 00             ; CALL HERE (00fd)
0125: 2c                         ; INC
0126: 0b 40 00 00 00             ; CALL (HERE) (0040)
012b: 03                         ; STORE
012c: 0c                         ; RET
;
012d: 18 fc fe 00 00             ; DICTP , (fefc)
0132: 0b fd 00 00 00             ; CALL HERE (00fd)
0137: 03                         ; STORE
0138: 0b fd 00 00 00             ; CALL HERE (00fd)
013d: 0e 04                      ; CLITERAL 4
013f: 11                         ; ADD
0140: 0b 40 00 00 00             ; CALL (HERE) (0040)
0145: 03                         ; STORE
0146: 0c                         ; RET
;
0147: 18 f0 fe 00 00             ; DICTP [ (fef0)
014c: 0e 00                      ; CLITERAL 0
014e: 0b 6d 00 00 00             ; CALL STATE (006d)
0153: 03                         ; STORE
0154: 0c                         ; RET
;
0155: 18 e4 fe 00 00             ; DICTP ] (fee4)
015a: 0e 01                      ; CLITERAL 1
015c: 0b 6d 00 00 00             ; CALL STATE (006d)
0161: 03                         ; STORE
0162: 0c                         ; RET
;
0163: 18 d2 fe 00 00             ; DICTP LITERAL (fed2)
0168: 0e 01                      ; CLITERAL 1
016a: 0b 15 01 00 00             ; CALL C, (0115)
016f: 0c                         ; RET
;
0170: 18 c6 fe 00 00             ; DICTP @ (fec6)
0175: 02                         ; FETCH
0176: 0c                         ; RET
;
0177: 18 ba fe 00 00             ; DICTP ! (feba)
017c: 03                         ; STORE
017d: 0c                         ; RET
;
017e: 18 ab fe 00 00             ; DICTP SWAP (feab)
0183: 04                         ; SWAP
0184: 0c                         ; RET
;
0185: 18 9c fe 00 00             ; DICTP DROP (fe9c)
018a: 05                         ; DROP
018b: 0c                         ; RET
;
018c: 18 8e fe 00 00             ; DICTP DUP (fe8e)
0191: 06                         ; DUP
0192: 0c                         ; RET
;
0193: 18 7b fe 00 00             ; DICTP SLITERAL (fe7b)
0198: 0e 07                      ; CLITERAL 7
019a: 0b 15 01 00 00             ; CALL C, (0115)
019f: 0c                         ; RET
;
01a0: 18 6d fe 00 00             ; DICTP JMP (fe6d)
01a5: 0e 08                      ; CLITERAL 8
01a7: 0b 15 01 00 00             ; CALL C, (0115)
01ac: 0c                         ; RET
;
01ad: 18 5e fe 00 00             ; DICTP JMPZ (fe5e)
01b2: 0e 09                      ; CLITERAL 9
01b4: 0b 15 01 00 00             ; CALL C, (0115)
01b9: 0c                         ; RET
;
01ba: 18 4e fe 00 00             ; DICTP JMPNZ (fe4e)
01bf: 0e 0a                      ; CLITERAL 10
01c1: 0b 15 01 00 00             ; CALL C, (0115)
01c6: 0c                         ; RET
;
01c7: 18 3f fe 00 00             ; DICTP CALL (fe3f)
01cc: 0e 0b                      ; CLITERAL 11
01ce: 0b 15 01 00 00             ; CALL C, (0115)
01d3: 0c                         ; RET
;
01d4: 18 31 fe 00 00             ; DICTP RET (fe31)
01d9: 0e 0c                      ; CLITERAL 12
01db: 0b 15 01 00 00             ; CALL C, (0115)
01e0: 0c                         ; RET
;
01e1: 18 24 fe 00 00             ; DICTP OR (fe24)
01e6: 0d                         ; OR
01e7: 0c                         ; RET
;
01e8: 18 11 fe 00 00             ; DICTP CLITERAL (fe11)
01ed: 0e 0e                      ; CLITERAL 14
01ef: 0b 15 01 00 00             ; CALL C, (0115)
01f4: 0c                         ; RET
;
01f5: 18 04 fe 00 00             ; DICTP C@ (fe04)
01fa: 0f                         ; CFETCH
01fb: 0c                         ; RET
;
01fc: 18 f7 fd 00 00             ; DICTP C! (fdf7)
0201: 10                         ; CSTORE
0202: 0c                         ; RET
;
0203: 18 eb fd 00 00             ; DICTP + (fdeb)
0208: 11                         ; ADD
0209: 0c                         ; RET
;
020a: 18 df fd 00 00             ; DICTP - (fddf)
020f: 12                         ; SUB
0210: 0c                         ; RET
;
0211: 18 d3 fd 00 00             ; DICTP * (fdd3)
0216: 13                         ; MUL
0217: 0c                         ; RET
;
0218: 18 c7 fd 00 00             ; DICTP / (fdc7)
021d: 14                         ; DIV
021e: 0c                         ; RET
;
021f: 18 bb fd 00 00             ; DICTP < (fdbb)
0224: 15                         ; LT
0225: 0c                         ; RET
;
0226: 18 af fd 00 00             ; DICTP = (fdaf)
022b: 16                         ; EQ
022c: 0c                         ; RET
;
022d: 18 a3 fd 00 00             ; DICTP > (fda3)
0232: 17                         ; GT
0233: 0c                         ; RET
;
0234: 18 93 fd 00 00             ; DICTP DICTP (fd93)
0239: 0e 18                      ; CLITERAL 24
023b: 0b 15 01 00 00             ; CALL C, (0115)
0240: 0c                         ; RET
;
0241: 18 84 fd 00 00             ; DICTP EMIT (fd84)
0246: 19                         ; EMIT
0247: 0c                         ; RET
;
0248: 18 75 fd 00 00             ; DICTP OVER (fd75)
024d: 1a                         ; OVER
024e: 0c                         ; RET
;
024f: 18 63 fd 00 00             ; DICTP COMPARE (fd63)
0254: 1b                         ; COMPARE
0255: 0c                         ; RET
;
0256: 18 53 fd 00 00             ; DICTP FOPEN (fd53)
025b: 1c                         ; FOPEN
025c: 0c                         ; RET
;
025d: 18 43 fd 00 00             ; DICTP FREAD (fd43)
0262: 1d                         ; FREAD
0263: 0c                         ; RET
;
0264: 18 2f fd 00 00             ; DICTP FREADLINE (fd2f)
0269: 1e                         ; FREADLINE
026a: 0c                         ; RET
;
026b: 18 1e fd 00 00             ; DICTP FWRITE (fd1e)
0270: 1f                         ; FWRITE
0271: 0c                         ; RET
;
0272: 18 0d fd 00 00             ; DICTP FCLOSE (fd0d)
0277: 20                         ; FCLOSE
0278: 0c                         ; RET
;
0279: 18 00 fd 00 00             ; DICTP >R (fd00)
027e: 21                         ; DTOR
027f: 0c                         ; RET
;
0280: 18 f3 fc 00 00             ; DICTP R> (fcf3)
0285: 22                         ; RTOD
0286: 0c                         ; RET
;
0287: 18 e0 fc 00 00             ; DICTP LOGLEVEL (fce0)
028c: 23                         ; LOGLEVEL
028d: 0c                         ; RET
;
028e: 18 d2 fc 00 00             ; DICTP AND (fcd2)
0293: 24                         ; AND
0294: 0c                         ; RET
;
0295: 18 c3 fc 00 00             ; DICTP PICK (fcc3)
029a: 25                         ; PICK
029b: 0c                         ; RET
;
029c: 18 b3 fc 00 00             ; DICTP DEPTH (fcb3)
02a1: 26                         ; DEPTH
02a2: 0c                         ; RET
;
02a3: 18 a3 fc 00 00             ; DICTP GETCH (fca3)
02a8: 27                         ; GETCH
02a9: 0c                         ; RET
;
02aa: 18 90 fc 00 00             ; DICTP COMPAREI (fc90)
02af: 28                         ; COMPAREI
02b0: 0c                         ; RET
;
02b1: 18 81 fc 00 00             ; DICTP /MOD (fc81)
02b6: 29                         ; SLASHMOD
02b7: 0c                         ; RET
;
02b8: 18 73 fc 00 00             ; DICTP NOT (fc73)
02bd: 2a                         ; NOT
02be: 0c                         ; RET
;
02bf: 18 62 fc 00 00             ; DICTP RFETCH (fc62)
02c4: 2b                         ; RFETCH
02c5: 0c                         ; RET
;
02c6: 18 54 fc 00 00             ; DICTP INC (fc54)
02cb: 2c                         ; INC
02cc: 0c                         ; RET
;
02cd: 18 43 fc 00 00             ; DICTP RDEPTH (fc43)
02d2: 2d                         ; RDEPTH
02d3: 0c                         ; RET
;
02d4: 18 35 fc 00 00             ; DICTP DEC (fc35)
02d9: 2e                         ; DEC
02da: 0c                         ; RET
;
02db: 18 23 fc 00 00             ; DICTP GETTICK (fc23)
02e0: 2f                         ; GETTICK
02e1: 0c                         ; RET
;
02e2: 18 16 fc 00 00             ; DICTP << (fc16)
02e7: 30                         ; SHIFTLEFT
02e8: 0c                         ; RET
;
02e9: 18 09 fc 00 00             ; DICTP >> (fc09)
02ee: 31                         ; SHIFTRIGHT
02ef: 0c                         ; RET
;
02f0: 18 fc fb 00 00             ; DICTP +! (fbfc)
02f5: 32                         ; PLUSSTORE
02f6: 0c                         ; RET
;
02f7: 18 e7 fb 00 00             ; DICTP OPEN-BLOCK (fbe7)
02fc: 33                         ; RESET
02fd: 0c                         ; RET
;
02fe: 18 d5 fb 00 00             ; DICTP BRANCHF (fbd5)
0303: 0e 5a                      ; CLITERAL 90
0305: 0b 15 01 00 00             ; CALL C, (0115)
030a: 0c                         ; RET
;
030b: 18 c2 fb 00 00             ; DICTP BRANCHFZ (fbc2)
0310: 0e 5b                      ; CLITERAL 91
0312: 0b 15 01 00 00             ; CALL C, (0115)
0317: 0c                         ; RET
;
0318: 18 ae fb 00 00             ; DICTP BRANCHFNZ (fbae)
031d: 0e 5c                      ; CLITERAL 92
031f: 0b 15 01 00 00             ; CALL C, (0115)
0324: 0c                         ; RET
;
0325: 18 9c fb 00 00             ; DICTP BRANCHB (fb9c)
032a: 0e 5d                      ; CLITERAL 93
032c: 0b 15 01 00 00             ; CALL C, (0115)
0331: 0c                         ; RET
;
0332: 18 89 fb 00 00             ; DICTP BRANCHBZ (fb89)
0337: 0e 5e                      ; CLITERAL 94
0339: 0b 15 01 00 00             ; CALL C, (0115)
033e: 0c                         ; RET
;
033f: 18 75 fb 00 00             ; DICTP BRANCHBNZ (fb75)
0344: 0e 5f                      ; CLITERAL 95
0346: 0b 15 01 00 00             ; CALL C, (0115)
034b: 0c                         ; RET
;
034c: 18 67 fb 00 00             ; DICTP NOP (fb67)
0351: fc                         ; NOP
0352: 0c                         ; RET
;
0353: 18 57 fb 00 00             ; DICTP BREAK (fb57)
0358: fd                         ; BREAK
0359: 0c                         ; RET
;
035a: 18 47 fb 00 00             ; DICTP RESET (fb47)
035f: fe                         ; RESET
0360: 0c                         ; RET
;
0361: 18 39 fb 00 00             ; DICTP BYE (fb39)
0366: ff                         ; BYE
0367: 0c                         ; RET
;
0368: 18 28 fb 00 00             ; DICTP INLINE (fb28)
036d: 0b 09 01 00 00             ; CALL LAST (0109)
0372: 0e 02                      ; CLITERAL 2
0374: 0e 04                      ; CLITERAL 4
0376: 13                         ; MUL
0377: 11                         ; ADD
0378: 06                         ; DUP
0379: 0f                         ; CFETCH
037a: 0e 02                      ; CLITERAL 2
037c: 0d                         ; OR
037d: 04                         ; SWAP
037e: 10                         ; CSTORE
037f: 0c                         ; RET
;
0380: 18 14 fb 00 00             ; DICTP IMMEDIATE (fb14)
0385: 0b 09 01 00 00             ; CALL LAST (0109)
038a: 0e 02                      ; CLITERAL 2
038c: 0e 04                      ; CLITERAL 4
038e: 13                         ; MUL
038f: 11                         ; ADD
0390: 06                         ; DUP
0391: 0f                         ; CFETCH
0392: 0e 01                      ; CLITERAL 1
0394: 0d                         ; OR
0395: 04                         ; SWAP
0396: 10                         ; CSTORE
0397: 0c                         ; RET
;
0398: 18 04 fb 00 00             ; DICTP CELLS (fb04)
039d: 0e 04                      ; CLITERAL 4
039f: 13                         ; MUL
03a0: 0c                         ; RET
;
03a1: 18 eb fa 00 00             ; DICTP FLAG_IMMEDIATE (faeb)
03a6: 0e 01                      ; CLITERAL 1
03a8: 0c                         ; RET
;
03a9: 18 d5 fa 00 00             ; DICTP FLAG_INLINE (fad5)
03ae: 0e 02                      ; CLITERAL 2
03b0: 0c                         ; RET
;
03b1: 18 c7 fa 00 00             ; DICTP HEX (fac7)
03b6: 0e 10                      ; CLITERAL 16
03b8: 0b 5e 00 00 00             ; CALL BASE (005e)
03bd: 03                         ; STORE
03be: 0c                         ; RET
;
03bf: 18 b5 fa 00 00             ; DICTP DECIMAL (fab5)
03c4: 0e 0a                      ; CLITERAL 10
03c6: 0b 5e 00 00 00             ; CALL BASE (005e)
03cb: 03                         ; STORE
03cc: 0c                         ; RET
;
03cd: 18 a5 fa 00 00             ; DICTP OCTAL (faa5)
03d2: 0e 08                      ; CLITERAL 8
03d4: 0b 5e 00 00 00             ; CALL BASE (005e)
03d9: 03                         ; STORE
03da: 0c                         ; RET
;
03db: 18 94 fa 00 00             ; DICTP BINARY (fa94)
03e0: 0e 02                      ; CLITERAL 2
03e2: 0b 5e 00 00 00             ; CALL BASE (005e)
03e7: 03                         ; STORE
03e8: 0c                         ; RET
;
03e9: 18 87 fa 00 00             ; DICTP ON (fa87)
03ee: 0e 01                      ; CLITERAL 1
03f0: 04                         ; SWAP
03f1: 03                         ; STORE
03f2: 0c                         ; RET
;
03f3: 18 79 fa 00 00             ; DICTP OFF (fa79)
03f8: 0e 00                      ; CLITERAL 0
03fa: 04                         ; SWAP
03fb: 03                         ; STORE
03fc: 0c                         ; RET
;
03fd: 18 64 fa 00 00             ; DICTP ?COMPILING (fa64)
0402: 0b 6d 00 00 00             ; CALL STATE (006d)
0407: 02                         ; FETCH
0408: 0c                         ; RET
;
0409: 18 57 fa 00 00             ; DICTP IF (fa57)
040e: 0b fd 03 00 00             ; CALL ?COMPILING (03fd)
0413: 09 29 04 00 00             ; JMPZ 0429
0418: 0b 0b 03 00 00             ; CALL BRANCHFZ (030b)
041d: 0b fd 00 00 00             ; CALL HERE (00fd)
0422: 0e 00                      ; CLITERAL 0
0424: 0b 15 01 00 00             ; CALL C, (0115)
0429: 0c                         ; RET
;
042a: 18 48 fa 00 00             ; DICTP ELSE (fa48)
042f: 0b fd 03 00 00             ; CALL ?COMPILING (03fd)
0434: 09 54 04 00 00             ; JMPZ 0454
0439: 0b fe 02 00 00             ; CALL BRANCHF (02fe)
043e: 0b fd 00 00 00             ; CALL HERE (00fd)
0443: 0e 00                      ; CLITERAL 0
0445: 0b 15 01 00 00             ; CALL C, (0115)
044a: 04                         ; SWAP
044b: 0b fd 00 00 00             ; CALL HERE (00fd)
0450: 1a                         ; OVER
0451: 12                         ; SUB
0452: 04                         ; SWAP
0453: 10                         ; CSTORE
0454: 0c                         ; RET
;
0455: 18 39 fa 00 00             ; DICTP THEN (fa39)
045a: 0b fd 03 00 00             ; CALL ?COMPILING (03fd)
045f: 09 6d 04 00 00             ; JMPZ 046d
0464: 0b fd 00 00 00             ; CALL HERE (00fd)
0469: 1a                         ; OVER
046a: 12                         ; SUB
046b: 04                         ; SWAP
046c: 10                         ; CSTORE
046d: 0c                         ; RET
;
046e: 18 29 fa 00 00             ; DICTP BEGIN (fa29)
0473: 0b fd 03 00 00             ; CALL ?COMPILING (03fd)
0478: 5b 06                      ; BRANCHFZ 6 (047f)
047a: 0b fd 00 00 00             ; CALL HERE (00fd)
047f: 0c                         ; RET
;
0480: 18 19 fa 00 00             ; DICTP AGAIN (fa19)
0485: 0b fd 03 00 00             ; CALL ?COMPILING (03fd)
048a: 5b 12                      ; BRANCHFZ 18 (049d)
048c: 0b 25 03 00 00             ; CALL BRANCHB (0325)
0491: 0b fd 00 00 00             ; CALL HERE (00fd)
0496: 04                         ; SWAP
0497: 12                         ; SUB
0498: 0b 15 01 00 00             ; CALL C, (0115)
049d: 0c                         ; RET
;
049e: 18 09 fa 00 00             ; DICTP WHILE (fa09)
04a3: 0b fd 03 00 00             ; CALL ?COMPILING (03fd)
04a8: 5b 12                      ; BRANCHFZ 18 (04bb)
04aa: 0b 3f 03 00 00             ; CALL BRANCHBNZ (033f)
04af: 0b fd 00 00 00             ; CALL HERE (00fd)
04b4: 04                         ; SWAP
04b5: 12                         ; SUB
04b6: 0b 15 01 00 00             ; CALL C, (0115)
04bb: 0c                         ; RET
;
04bc: 18 f9 f9 00 00             ; DICTP UNTIL (f9f9)
04c1: 0b fd 03 00 00             ; CALL ?COMPILING (03fd)
04c6: 5b 12                      ; BRANCHFZ 18 (04d9)
04c8: 0b 32 03 00 00             ; CALL BRANCHBZ (0332)
04cd: 0b fd 00 00 00             ; CALL HERE (00fd)
04d2: 04                         ; SWAP
04d3: 12                         ; SUB
04d4: 0b 15 01 00 00             ; CALL C, (0115)
04d9: 0c                         ; RET
;
04da: 18 e9 f9 00 00             ; DICTP LEAVE (f9e9)
04df: 0b fd 03 00 00             ; CALL ?COMPILING (03fd)
04e4: 5b 06                      ; BRANCHFZ 6 (04eb)
04e6: 0b d4 01 00 00             ; CALL RET (01d4)
04eb: 0c                         ; RET
;
04ec: 18 d8 f9 00 00             ; DICTP MEM_SZ (f9d8)
04f1: 0b 7c 00 00 00             ; CALL (MEM_SZ) (007c)
04f6: 02                         ; FETCH
04f7: 0c                         ; RET
;
04f8: 18 c5 f9 00 00             ; DICTP TRACE-ON (f9c5)
04fd: 0e 02                      ; CLITERAL 2
04ff: 23                         ; LOGLEVEL
0500: 0c                         ; RET
;
0501: 18 b1 f9 00 00             ; DICTP TRACE-OFF (f9b1)
0506: 0e 00                      ; CLITERAL 0
0508: 23                         ; LOGLEVEL
0509: 0c                         ; RET
;
050a: 18 9e f9 00 00             ; DICTP DEBUG-ON (f99e)
050f: 0e 01                      ; CLITERAL 1
0511: 23                         ; LOGLEVEL
0512: 0c                         ; RET
;
0513: 18 8a f9 00 00             ; DICTP DEBUG-OFF (f98a)
0518: 0e 00                      ; CLITERAL 0
051a: 23                         ; LOGLEVEL
051b: 0c                         ; RET
;
051c: 18 7d f9 00 00             ; DICTP R@ (f97d)
0521: 2b                         ; RFETCH
0522: 0c                         ; RET
;
0523: 18 6d f9 00 00             ; DICTP RDROP (f96d)
0528: 22                         ; RTOD
0529: 05                         ; DROP
052a: 0c                         ; RET
;
052b: 18 5e f9 00 00             ; DICTP ?DUP (f95e)
0530: 06                         ; DUP
0531: 5b 02                      ; BRANCHFZ 2 (0534)
0533: 06                         ; DUP
0534: 0c                         ; RET
;
0535: 18 4f f9 00 00             ; DICTP 2DUP (f94f)
053a: 1a                         ; OVER
053b: 1a                         ; OVER
053c: 0c                         ; RET
;
053d: 18 3f f9 00 00             ; DICTP 2DROP (f93f)
0542: 05                         ; DROP
0543: 05                         ; DROP
0544: 0c                         ; RET
;
0545: 18 30 f9 00 00             ; DICTP TUCK (f930)
054a: 04                         ; SWAP
054b: 1a                         ; OVER
054c: 0c                         ; RET
;
054d: 18 22 f9 00 00             ; DICTP NIP (f922)
0552: 04                         ; SWAP
0553: 05                         ; DROP
0554: 0c                         ; RET
;
0555: 18 14 f9 00 00             ; DICTP ROT (f914)
055a: 21                         ; DTOR
055b: 04                         ; SWAP
055c: 22                         ; RTOD
055d: 04                         ; SWAP
055e: 0c                         ; RET
;
055f: 18 05 f9 00 00             ; DICTP -ROT (f905)
0564: 04                         ; SWAP
0565: 21                         ; DTOR
0566: 04                         ; SWAP
0567: 22                         ; RTOD
0568: 0c                         ; RET
;
0569: 18 f9 f8 00 00             ; DICTP / (f8f9)
056e: 29                         ; SLASHMOD
056f: 04                         ; SWAP
0570: 05                         ; DROP
0571: 0c                         ; RET
;
0572: 18 eb f8 00 00             ; DICTP MOD (f8eb)
0577: 29                         ; SLASHMOD
0578: 05                         ; DROP
0579: 0c                         ; RET
;
057a: 18 de f8 00 00             ; DICTP 1+ (f8de)
057f: 2c                         ; INC
0580: 0c                         ; RET
;
0581: 18 d1 f8 00 00             ; DICTP 1- (f8d1)
0586: 2e                         ; DEC
0587: 0c                         ; RET
;
0588: 18 c4 f8 00 00             ; DICTP 2* (f8c4)
058d: 0e 02                      ; CLITERAL 2
058f: 13                         ; MUL
0590: 0c                         ; RET
;
0591: 18 b7 f8 00 00             ; DICTP 2/ (f8b7)
0596: 0e 02                      ; CLITERAL 2
0598: 29                         ; SLASHMOD
0599: 04                         ; SWAP
059a: 05                         ; DROP
059b: 0c                         ; RET
;
059c: 18 aa f8 00 00             ; DICTP += (f8aa)
05a1: 1a                         ; OVER
05a2: 02                         ; FETCH
05a3: 11                         ; ADD
05a4: 04                         ; SWAP
05a5: 03                         ; STORE
05a6: 0c                         ; RET
;
05a7: 18 9d f8 00 00             ; DICTP -= (f89d)
05ac: 1a                         ; OVER
05ad: 02                         ; FETCH
05ae: 04                         ; SWAP
05af: 12                         ; SUB
05b0: 04                         ; SWAP
05b1: 03                         ; STORE
05b2: 0c                         ; RET
;
05b3: 18 90 f8 00 00             ; DICTP -! (f890)
05b8: 04                         ; SWAP
05b9: 1a                         ; OVER
05ba: 02                         ; FETCH
05bb: 04                         ; SWAP
05bc: 12                         ; SUB
05bd: 04                         ; SWAP
05be: 03                         ; STORE
05bf: 0c                         ; RET
;
05c0: 18 83 f8 00 00             ; DICTP ++ (f883)
05c5: 06                         ; DUP
05c6: 02                         ; FETCH
05c7: 2c                         ; INC
05c8: 04                         ; SWAP
05c9: 03                         ; STORE
05ca: 0c                         ; RET
;
05cb: 18 76 f8 00 00             ; DICTP -- (f876)
05d0: 06                         ; DUP
05d1: 02                         ; FETCH
05d2: 2e                         ; DEC
05d3: 04                         ; SWAP
05d4: 03                         ; STORE
05d5: 0c                         ; RET
;
05d6: 18 68 f8 00 00             ; DICTP C++ (f868)
05db: 06                         ; DUP
05dc: 0f                         ; CFETCH
05dd: 2c                         ; INC
05de: 04                         ; SWAP
05df: 10                         ; CSTORE
05e0: 0c                         ; RET
;
05e1: 18 5a f8 00 00             ; DICTP C-- (f85a)
05e6: 06                         ; DUP
05e7: 0f                         ; CFETCH
05e8: 2e                         ; DEC
05e9: 04                         ; SWAP
05ea: 10                         ; CSTORE
05eb: 0c                         ; RET
;
05ec: 18 4d f8 00 00             ; DICTP 0= (f84d)
05f1: 2a                         ; NOT
05f2: 0c                         ; RET
;
05f3: 18 40 f8 00 00             ; DICTP <> (f840)
05f8: 16                         ; EQ
05f9: 2a                         ; NOT
05fa: 0c                         ; RET
;
05fb: 18 33 f8 00 00             ; DICTP <= (f833)
0600: 17                         ; GT
0601: 2a                         ; NOT
0602: 0c                         ; RET
;
0603: 18 26 f8 00 00             ; DICTP >= (f826)
0608: 15                         ; LT
0609: 2a                         ; NOT
060a: 0c                         ; RET
;
060b: 18 17 f8 00 00             ; DICTP TRUE (f817)
0610: 01 ff ff ff ff             ; LITERAL -1 (ffffffff)
0615: 0c                         ; RET
;
0616: 18 07 f8 00 00             ; DICTP FALSE (f807)
061b: 0e 00                      ; CLITERAL 0
061d: 0c                         ; RET
;
061e: 18 f7 f7 00 00             ; DICTP COUNT (f7f7)
0623: 06                         ; DUP
0624: 2c                         ; INC
0625: 04                         ; SWAP
0626: 0f                         ; CFETCH
0627: 0c                         ; RET
;
0628: 18 e8 f7 00 00             ; DICTP TYPE (f7e8)
062d: 06                         ; DUP
062e: 2a                         ; NOT
062f: 5b 04                      ; BRANCHFZ 4 (0634)
0631: 05                         ; DROP
0632: 05                         ; DROP
0633: 0c                         ; RET
0634: 04                         ; SWAP
0635: 06                         ; DUP
0636: 0f                         ; CFETCH
0637: 19                         ; EMIT
0638: 2c                         ; INC
0639: 04                         ; SWAP
063a: 2e                         ; DEC
063b: 5d 0f                      ; BRANCHB 15 (062d)
063d: 0c                         ; RET
;
063e: 18 db f7 00 00             ; DICTP CT (f7db)
0643: 0b 1e 06 00 00             ; CALL COUNT (061e)
0648: 0b 28 06 00 00             ; CALL TYPE (0628)
064d: 0c                         ; RET
;
064e: 18 cf f7 00 00             ; DICTP \ (f7cf)
0653: 0e 00                      ; CLITERAL 0
0655: 0b 8b 00 00 00             ; CALL >IN (008b)
065a: 02                         ; FETCH
065b: 10                         ; CSTORE
065c: 0c                         ; RET
;
065d: 18 c3 f7 00 00             ; DICTP ( (f7c3)
0662: 0b 8b 00 00 00             ; CALL >IN (008b)
0667: 02                         ; FETCH
0668: 0f                         ; CFETCH
0669: 06                         ; DUP
066a: 2a                         ; NOT
066b: 5b 1d                      ; BRANCHFZ 29 (0689)
066d: 07 13 6d 69 73 73 69 6e 67 20 63 6c 6f 73 69 6e 67 20 27 29 27 00 ; SLITERAL (066e) [missing closing ')']
0683: 0b 3e 06 00 00             ; CALL CT (063e)
0688: fe                         ; RESET
0689: 0b 8b 00 00 00             ; CALL >IN (008b)
068e: 06                         ; DUP
068f: 02                         ; FETCH
0690: 2c                         ; INC
0691: 04                         ; SWAP
0692: 03                         ; STORE
0693: 0e 29                      ; CLITERAL 41
0695: 16                         ; EQ
0696: 5e 35                      ; BRANCHBZ 53 (0662)
0698: 0c                         ; RET
;
0699: 18 b3 f7 00 00             ; DICTP SPACE (f7b3)
069e: 0e 20                      ; CLITERAL 32
06a0: 19                         ; EMIT
06a1: 0c                         ; RET
;
06a2: 18 a6 f7 00 00             ; DICTP BL (f7a6)
06a7: 0e 20                      ; CLITERAL 32
06a9: 19                         ; EMIT
06aa: 0c                         ; RET
;
06ab: 18 97 f7 00 00             ; DICTP CRLF (f797)
06b0: 0e 0d                      ; CLITERAL 13
06b2: 19                         ; EMIT
06b3: 0e 0a                      ; CLITERAL 10
06b5: 19                         ; EMIT
06b6: 0c                         ; RET
;
06b7: 18 8a f7 00 00             ; DICTP CR (f78a)
06bc: 0e 0d                      ; CLITERAL 13
06be: 19                         ; EMIT
06bf: 0e 0a                      ; CLITERAL 10
06c1: 19                         ; EMIT
06c2: 0c                         ; RET
;
06c3: 18 78 f7 00 00             ; DICTP BETWEEN (f778)
06c8: 0e 02                      ; CLITERAL 2
06ca: 25                         ; PICK
06cb: 15                         ; LT
06cc: 5b 06                      ; BRANCHFZ 6 (06d3)
06ce: 05                         ; DROP
06cf: 05                         ; DROP
06d0: 0e 00                      ; CLITERAL 0
06d2: 0c                         ; RET
06d3: 15                         ; LT
06d4: 2a                         ; NOT
06d5: 0c                         ; RET
;
06d6: 18 67 f7 00 00             ; DICTP skipWS (f767)
06db: 06                         ; DUP
06dc: 0f                         ; CFETCH
06dd: 06                         ; DUP
06de: 5b 0c                      ; BRANCHFZ 12 (06eb)
06e0: 0e 20                      ; CLITERAL 32
06e2: 17                         ; GT
06e3: 5b 04                      ; BRANCHFZ 4 (06e8)
06e5: 0c                         ; RET
06e6: 5a 02                      ; BRANCHF 2 (06e9)
06e8: 2c                         ; INC
06e9: 5a 03                      ; BRANCHF 3 (06ed)
06eb: 05                         ; DROP
06ec: 0c                         ; RET
06ed: 5d 13                      ; BRANCHB 19 (06db)
06ef: 0c                         ; RET
;
06f0: 18 54 f7 00 00             ; DICTP to-upper (f754)
06f5: 06                         ; DUP
06f6: 0e 61                      ; CLITERAL 97
06f8: 15                         ; LT
06f9: 5b 02                      ; BRANCHFZ 2 (06fc)
06fb: 0c                         ; RET
06fc: 06                         ; DUP
06fd: 0e 7a                      ; CLITERAL 122
06ff: 17                         ; GT
0700: 5b 02                      ; BRANCHFZ 2 (0703)
0702: 0c                         ; RET
0703: 0e 20                      ; CLITERAL 32
0705: 12                         ; SUB
0706: 0c                         ; RET
;
0707: 18 41 f7 00 00             ; DICTP to-lower (f741)
070c: 06                         ; DUP
070d: 0e 41                      ; CLITERAL 65
070f: 15                         ; LT
0710: 5b 02                      ; BRANCHFZ 2 (0713)
0712: 0c                         ; RET
0713: 06                         ; DUP
0714: 0e 5a                      ; CLITERAL 90
0716: 17                         ; GT
0717: 5b 02                      ; BRANCHFZ 2 (071a)
0719: 0c                         ; RET
071a: 0e 20                      ; CLITERAL 32
071c: 11                         ; ADD
071d: 0c                         ; RET
;
071e: 18 2d f7 00 00             ; DICTP char-find (f72d)
0723: 04                         ; SWAP
0724: 0b d6 00 00 00             ; CALL T2 (00d6)
0729: 03                         ; STORE
072a: 0e 00                      ; CLITERAL 0
072c: 21                         ; DTOR
072d: 0b 1e 06 00 00             ; CALL COUNT (061e)
0732: 06                         ; DUP
0733: 2a                         ; NOT
0734: 5b 0b                      ; BRANCHFZ 11 (0740)
0736: 05                         ; DROP
0737: 05                         ; DROP
0738: 22                         ; RTOD
0739: 05                         ; DROP
073a: 01 ff ff ff ff             ; LITERAL -1 (ffffffff)
073f: 0c                         ; RET
0740: 1a                         ; OVER
0741: 0f                         ; CFETCH
0742: 0b d6 00 00 00             ; CALL T2 (00d6)
0747: 02                         ; FETCH
0748: 16                         ; EQ
0749: 5b 05                      ; BRANCHFZ 5 (074f)
074b: 05                         ; DROP
074c: 05                         ; DROP
074d: 22                         ; RTOD
074e: 0c                         ; RET
074f: 22                         ; RTOD
0750: 2c                         ; INC
0751: 21                         ; DTOR
0752: 2e                         ; DEC
0753: 04                         ; SWAP
0754: 2c                         ; INC
0755: 04                         ; SWAP
0756: 5d 25                      ; BRANCHB 37 (0732)
0758: 0c                         ; RET
;
0759: 18 18 f7 00 00             ; DICTP getOneWord (f718)
075e: 06                         ; DUP
075f: 21                         ; DTOR
0760: 21                         ; DTOR
0761: 2b                         ; RFETCH
0762: 0f                         ; CFETCH
0763: 0e 20                      ; CLITERAL 32
0765: 17                         ; GT
0766: 5b 06                      ; BRANCHFZ 6 (076d)
0768: 22                         ; RTOD
0769: 2c                         ; INC
076a: 21                         ; DTOR
076b: 5a 10                      ; BRANCHF 16 (077c)
076d: 2b                         ; RFETCH
076e: 0f                         ; CFETCH
076f: 5b 08                      ; BRANCHFZ 8 (0778)
0771: 0e 00                      ; CLITERAL 0
0773: 2b                         ; RFETCH
0774: 10                         ; CSTORE
0775: 22                         ; RTOD
0776: 2c                         ; INC
0777: 21                         ; DTOR
0778: 22                         ; RTOD
0779: 22                         ; RTOD
077a: 04                         ; SWAP
077b: 0c                         ; RET
077c: 5d 1c                      ; BRANCHB 28 (0761)
077e: 0c                         ; RET
;
077f: 18 04 f7 00 00             ; DICTP DICT>NEXT (f704)
0784: 0c                         ; RET
;
0785: 18 f2 f6 00 00             ; DICTP DICT>XT (f6f2)
078a: 0e 04                      ; CLITERAL 4
078c: 11                         ; ADD
078d: 0c                         ; RET
;
078e: 18 dd f6 00 00             ; DICTP DICT>FLAGS (f6dd)
0793: 0e 02                      ; CLITERAL 2
0795: 0e 04                      ; CLITERAL 4
0797: 13                         ; MUL
0798: 11                         ; ADD
0799: 0c                         ; RET
;
079a: 18 c9 f6 00 00             ; DICTP DICT>NAME (f6c9)
079f: 0b 8e 07 00 00             ; CALL DICT>FLAGS (078e)
07a4: 2c                         ; INC
07a5: 0c                         ; RET
;
07a6: 18 b5 f6 00 00             ; DICTP NEXT>DICT (f6b5)
07ab: 0c                         ; RET
;
07ac: 18 a3 f6 00 00             ; DICTP XT>DICT (f6a3)
07b1: 0e 04                      ; CLITERAL 4
07b3: 12                         ; SUB
07b4: 0c                         ; RET
;
07b5: 18 8e f6 00 00             ; DICTP FLAGS>DICT (f68e)
07ba: 0e 02                      ; CLITERAL 2
07bc: 0e 04                      ; CLITERAL 4
07be: 13                         ; MUL
07bf: 12                         ; SUB
07c0: 0c                         ; RET
;
07c1: 18 7a f6 00 00             ; DICTP NAME>DICT (f67a)
07c6: 2e                         ; DEC
07c7: 0e 02                      ; CLITERAL 2
07c9: 0e 04                      ; CLITERAL 4
07cb: 13                         ; MUL
07cc: 12                         ; SUB
07cd: 0c                         ; RET
;
07ce: 18 65 f6 00 00             ; DICTP DICT.GetXT (f665)
07d3: 0b 85 07 00 00             ; CALL DICT>XT (0785)
07d8: 02                         ; FETCH
07d9: 0c                         ; RET
;
07da: 18 4d f6 00 00             ; DICTP DICT.GetFLAGS (f64d)
07df: 0b 8e 07 00 00             ; CALL DICT>FLAGS (078e)
07e4: 0f                         ; CFETCH
07e5: 0c                         ; RET
;
07e6: 18 38 f6 00 00             ; DICTP DICTP>NAME (f638)
07eb: 2c                         ; INC
07ec: 02                         ; FETCH
07ed: 0b 9a 07 00 00             ; CALL DICT>NAME (079a)
07f2: 0c                         ; RET
;
07f3: 18 22 f6 00 00             ; DICTP XT.GetDICTP (f622)
07f8: 06                         ; DUP
07f9: 0f                         ; CFETCH
07fa: 0e 18                      ; CLITERAL 24
07fc: 16                         ; EQ
07fd: 5b 05                      ; BRANCHFZ 5 (0803)
07ff: 2c                         ; INC
0800: 02                         ; FETCH
0801: 5a 03                      ; BRANCHF 3 (0805)
0803: 05                         ; DROP
0804: fe                         ; RESET
0805: 0c                         ; RET
;
0806: 18 05 f6 00 00             ; DICTP FLAGS.ISIMMEDIATE? (f605)
080b: 0e 01                      ; CLITERAL 1
080d: 24                         ; AND
080e: 0c                         ; RET
;
080f: 18 eb f5 00 00             ; DICTP FLAGS.ISINLINE? (f5eb)
0814: 0e 02                      ; CLITERAL 2
0816: 24                         ; AND
0817: 0c                         ; RET
;
0818: 18 cf f5 00 00             ; DICTP DICT.GetIMMEDIATE (f5cf)
081d: 0b da 07 00 00             ; CALL DICT.GetFLAGS (07da)
0822: 0b 06 08 00 00             ; CALL FLAGS.ISIMMEDIATE? (0806)
0827: 0c                         ; RET
;
0828: 18 b6 f5 00 00             ; DICTP DICT.GetINLINE (f5b6)
082d: 0b da 07 00 00             ; CALL DICT.GetFLAGS (07da)
0832: 0b 0f 08 00 00             ; CALL FLAGS.ISINLINE? (080f)
0837: 0c                         ; RET
;
0838: 18 a1 f5 00 00             ; DICTP findInDict (f5a1)
083d: 0b 09 01 00 00             ; CALL LAST (0109)
0842: 21                         ; DTOR
0843: 2b                         ; RFETCH
0844: 06                         ; DUP
0845: 5b 1d                      ; BRANCHFZ 29 (0863)
0847: 0b 9a 07 00 00             ; CALL DICT>NAME (079a)
084c: 2c                         ; INC
084d: 1a                         ; OVER
084e: 28                         ; COMPAREI
084f: 5b 11                      ; BRANCHFZ 17 (0861)
0851: 05                         ; DROP
0852: 2b                         ; RFETCH
0853: 0b ce 07 00 00             ; CALL DICT.GetXT (07ce)
0858: 22                         ; RTOD
0859: 0b da 07 00 00             ; CALL DICT.GetFLAGS (07da)
085e: 0e 01                      ; CLITERAL 1
0860: 0c                         ; RET
0861: 5a 09                      ; BRANCHF 9 (086b)
0863: 05                         ; DROP
0864: 05                         ; DROP
0865: 22                         ; RTOD
0866: 0e 00                      ; CLITERAL 0
0868: 0e 00                      ; CLITERAL 0
086a: 0c                         ; RET
086b: 22                         ; RTOD
086c: 02                         ; FETCH
086d: 21                         ; DTOR
086e: 5d 2c                      ; BRANCHB 44 (0843)
0870: 0c                         ; RET
;
0871: 18 8a f5 00 00             ; DICTP is-num-char? (f58a)
0876: 0b f0 06 00 00             ; CALL to-upper (06f0)
087b: 04                         ; SWAP
087c: 21                         ; DTOR
087d: 07 10 30 31 32 33 34 35 36 37 38 39 41 42 43 44 45 46 00 ; SLITERAL (087e) [0123456789ABCDEF]
0890: 0b 1e 07 00 00             ; CALL char-find (071e)
0895: 06                         ; DUP
0896: 0e 00                      ; CLITERAL 0
0898: 15                         ; LT
0899: 5b 06                      ; BRANCHFZ 6 (08a0)
089b: 0e 00                      ; CLITERAL 0
089d: 22                         ; RTOD
089e: 05                         ; DROP
089f: 0c                         ; RET
08a0: 22                         ; RTOD
08a1: 2e                         ; DEC
08a2: 1a                         ; OVER
08a3: 15                         ; LT
08a4: 5b 05                      ; BRANCHFZ 5 (08aa)
08a6: 0e 00                      ; CLITERAL 0
08a8: 5a 03                      ; BRANCHF 3 (08ac)
08aa: 0e 01                      ; CLITERAL 1
08ac: 0c                         ; RET
;
08ad: 18 79 f5 00 00             ; DICTP NEGATE (f579)
08b2: 0e 00                      ; CLITERAL 0
08b4: 04                         ; SWAP
08b5: 12                         ; SUB
08b6: 0c                         ; RET
;
08b7: 18 6b f5 00 00             ; DICTP ABS (f56b)
08bc: 06                         ; DUP
08bd: 0e 00                      ; CLITERAL 0
08bf: 15                         ; LT
08c0: 5b 06                      ; BRANCHFZ 6 (08c7)
08c2: 0b ad 08 00 00             ; CALL NEGATE (08ad)
08c7: 0c                         ; RET
;
08c8: 18 56 f5 00 00             ; DICTP parse-char (f556)
08cd: 06                         ; DUP
08ce: 2c                         ; INC
08cf: 0f                         ; CFETCH
08d0: 0e 27                      ; CLITERAL 39
08d2: 16                         ; EQ
08d3: 2a                         ; NOT
08d4: 5b 04                      ; BRANCHFZ 4 (08d9)
08d6: 0e 00                      ; CLITERAL 0
08d8: 0c                         ; RET
08d9: 06                         ; DUP
08da: 0e 02                      ; CLITERAL 2
08dc: 11                         ; ADD
08dd: 0f                         ; CFETCH
08de: 5b 05                      ; BRANCHFZ 5 (08e4)
08e0: 0e 00                      ; CLITERAL 0
08e2: 5a 04                      ; BRANCHF 4 (08e7)
08e4: 0f                         ; CFETCH
08e5: 0e 01                      ; CLITERAL 1
08e7: 0c                         ; RET
;
08e8: 18 42 f5 00 00             ; DICTP isNumber? (f542)
08ed: 06                         ; DUP
08ee: 0f                         ; CFETCH
08ef: 0e 27                      ; CLITERAL 39
08f1: 16                         ; EQ
08f2: 5b 08                      ; BRANCHFZ 8 (08fb)
08f4: 2c                         ; INC
08f5: 0b c8 08 00 00             ; CALL parse-char (08c8)
08fa: 0c                         ; RET
08fb: 0b 5e 00 00 00             ; CALL BASE (005e)
0900: 02                         ; FETCH
0901: 0b e5 00 00 00             ; CALL T3 (00e5)
0906: 03                         ; STORE
0907: 06                         ; DUP
0908: 0f                         ; CFETCH
0909: 0e 24                      ; CLITERAL 36
090b: 16                         ; EQ
090c: 5b 0a                      ; BRANCHFZ 10 (0917)
090e: 2c                         ; INC
090f: 0e 10                      ; CLITERAL 16
0911: 0b e5 00 00 00             ; CALL T3 (00e5)
0916: 03                         ; STORE
0917: 06                         ; DUP
0918: 0f                         ; CFETCH
0919: 0e 23                      ; CLITERAL 35
091b: 16                         ; EQ
091c: 5b 0a                      ; BRANCHFZ 10 (0927)
091e: 2c                         ; INC
091f: 0e 0a                      ; CLITERAL 10
0921: 0b e5 00 00 00             ; CALL T3 (00e5)
0926: 03                         ; STORE
0927: 06                         ; DUP
0928: 0f                         ; CFETCH
0929: 0e 25                      ; CLITERAL 37
092b: 16                         ; EQ
092c: 5b 0a                      ; BRANCHFZ 10 (0937)
092e: 2c                         ; INC
092f: 0e 02                      ; CLITERAL 2
0931: 0b e5 00 00 00             ; CALL T3 (00e5)
0936: 03                         ; STORE
0937: 0b 9a 00 00 00             ; CALL #NEG (009a)
093c: 0b f3 03 00 00             ; CALL OFF (03f3)
0941: 0b e5 00 00 00             ; CALL T3 (00e5)
0946: 02                         ; FETCH
0947: 0e 0a                      ; CLITERAL 10
0949: 16                         ; EQ
094a: 5b 10                      ; BRANCHFZ 16 (095b)
094c: 06                         ; DUP
094d: 0f                         ; CFETCH
094e: 0e 2d                      ; CLITERAL 45
0950: 16                         ; EQ
0951: 06                         ; DUP
0952: 0b 9a 00 00 00             ; CALL #NEG (009a)
0957: 03                         ; STORE
0958: 5b 02                      ; BRANCHFZ 2 (095b)
095a: 2c                         ; INC
095b: 0e 00                      ; CLITERAL 0
095d: 21                         ; DTOR
095e: 06                         ; DUP
095f: 0f                         ; CFETCH
0960: 06                         ; DUP
0961: 0e 00                      ; CLITERAL 0
0963: 16                         ; EQ
0964: 5b 14                      ; BRANCHFZ 20 (0979)
0966: 05                         ; DROP
0967: 05                         ; DROP
0968: 22                         ; RTOD
0969: 0b 9a 00 00 00             ; CALL #NEG (009a)
096e: 02                         ; FETCH
096f: 5b 06                      ; BRANCHFZ 6 (0976)
0971: 0b ad 08 00 00             ; CALL NEGATE (08ad)
0976: 0e 01                      ; CLITERAL 1
0978: 0c                         ; RET
0979: 0b e5 00 00 00             ; CALL T3 (00e5)
097e: 02                         ; FETCH
097f: 04                         ; SWAP
0980: 0b 71 08 00 00             ; CALL is-num-char? (0871)
0985: 5b 0e                      ; BRANCHFZ 14 (0994)
0987: 22                         ; RTOD
0988: 0b e5 00 00 00             ; CALL T3 (00e5)
098d: 02                         ; FETCH
098e: 13                         ; MUL
098f: 11                         ; ADD
0990: 21                         ; DTOR
0991: 2c                         ; INC
0992: 5a 06                      ; BRANCHF 6 (0999)
0994: 05                         ; DROP
0995: 22                         ; RTOD
0996: 0e 00                      ; CLITERAL 0
0998: 0c                         ; RET
0999: 5d 3c                      ; BRANCHB 60 (095e)
099b: 0c                         ; RET
;
099c: 18 35 f5 00 00             ; DICTP <# (f535)
09a1: 0b 9a 00 00 00             ; CALL #NEG (009a)
09a6: 0b f3 03 00 00             ; CALL OFF (03f3)
09ab: 0b a9 00 00 00             ; CALL #LEN (00a9)
09b0: 0b f3 03 00 00             ; CALL OFF (03f3)
09b5: 06                         ; DUP
09b6: 0e 00                      ; CLITERAL 0
09b8: 15                         ; LT
09b9: 5b 10                      ; BRANCHFZ 16 (09ca)
09bb: 0b ad 08 00 00             ; CALL NEGATE (08ad)
09c0: 0b 9a 00 00 00             ; CALL #NEG (009a)
09c5: 0b e9 03 00 00             ; CALL ON (03e9)
09ca: 0e 00                      ; CLITERAL 0
09cc: 04                         ; SWAP
09cd: 0c                         ; RET
;
09ce: 18 29 f5 00 00             ; DICTP # (f529)
09d3: 0b 5e 00 00 00             ; CALL BASE (005e)
09d8: 02                         ; FETCH
09d9: 29                         ; SLASHMOD
09da: 04                         ; SWAP
09db: 0e 30                      ; CLITERAL 48
09dd: 11                         ; ADD
09de: 06                         ; DUP
09df: 0e 39                      ; CLITERAL 57
09e1: 17                         ; GT
09e2: 5b 04                      ; BRANCHFZ 4 (09e7)
09e4: 0e 07                      ; CLITERAL 7
09e6: 11                         ; ADD
09e7: 0b a9 00 00 00             ; CALL #LEN (00a9)
09ec: 06                         ; DUP
09ed: 02                         ; FETCH
09ee: 2c                         ; INC
09ef: 04                         ; SWAP
09f0: 03                         ; STORE
09f1: 04                         ; SWAP
09f2: 0c                         ; RET
;
09f3: 18 1c f5 00 00             ; DICTP #S (f51c)
09f8: 0b ce 09 00 00             ; CALL # (09ce)
09fd: 06                         ; DUP
09fe: 2a                         ; NOT
09ff: 5e 08                      ; BRANCHBZ 8 (09f8)
0a01: 0c                         ; RET
;
0a02: 18 0f f5 00 00             ; DICTP #> (f50f)
0a07: 0c                         ; RET
;
0a08: 18 01 f5 00 00             ; DICTP #P- (f501)
0a0d: 05                         ; DROP
0a0e: 0b 9a 00 00 00             ; CALL #NEG (009a)
0a13: 02                         ; FETCH
0a14: 5b 04                      ; BRANCHFZ 4 (0a19)
0a16: 0e 2d                      ; CLITERAL 45
0a18: 19                         ; EMIT
0a19: 0c                         ; RET
;
0a1a: 18 f4 f4 00 00             ; DICTP #P (f4f4)
0a1f: 0b 08 0a 00 00             ; CALL #P- (0a08)
0a24: 19                         ; EMIT
0a25: 06                         ; DUP
0a26: 2a                         ; NOT
0a27: 5e 04                      ; BRANCHBZ 4 (0a24)
0a29: 05                         ; DROP
0a2a: 0c                         ; RET
;
0a2b: 18 e6 f4 00 00             ; DICTP (.) (f4e6)
0a30: 0b 9c 09 00 00             ; CALL <# (099c)
0a35: 0b f3 09 00 00             ; CALL #S (09f3)
0a3a: 0b 02 0a 00 00             ; CALL #> (0a02)
0a3f: 0b 1a 0a 00 00             ; CALL #P (0a1a)
0a44: 0c                         ; RET
;
0a45: 18 da f4 00 00             ; DICTP . (f4da)
0a4a: 0b 2b 0a 00 00             ; CALL (.) (0a2b)
0a4f: 0e 20                      ; CLITERAL 32
0a51: 19                         ; EMIT
0a52: 0c                         ; RET
;
0a53: 18 cd f4 00 00             ; DICTP .2 (f4cd)
0a58: 0b 9c 09 00 00             ; CALL <# (099c)
0a5d: 0b ce 09 00 00             ; CALL # (09ce)
0a62: 0b ce 09 00 00             ; CALL # (09ce)
0a67: 0b 02 0a 00 00             ; CALL #> (0a02)
0a6c: 0b 1a 0a 00 00             ; CALL #P (0a1a)
0a71: 0c                         ; RET
;
0a72: 18 c0 f4 00 00             ; DICTP .3 (f4c0)
0a77: 0b 9c 09 00 00             ; CALL <# (099c)
0a7c: 0b ce 09 00 00             ; CALL # (09ce)
0a81: 0b ce 09 00 00             ; CALL # (09ce)
0a86: 0b ce 09 00 00             ; CALL # (09ce)
0a8b: 0b 02 0a 00 00             ; CALL #> (0a02)
0a90: 0b 1a 0a 00 00             ; CALL #P (0a1a)
0a95: 0c                         ; RET
;
0a96: 18 b3 f4 00 00             ; DICTP .4 (f4b3)
0a9b: 0b 9c 09 00 00             ; CALL <# (099c)
0aa0: 0b ce 09 00 00             ; CALL # (09ce)
0aa5: 0b ce 09 00 00             ; CALL # (09ce)
0aaa: 0b ce 09 00 00             ; CALL # (09ce)
0aaf: 0b ce 09 00 00             ; CALL # (09ce)
0ab4: 0b 02 0a 00 00             ; CALL #> (0a02)
0ab9: 0b 1a 0a 00 00             ; CALL #P (0a1a)
0abe: 0c                         ; RET
;
0abf: 18 a4 f4 00 00             ; DICTP HEX. (f4a4)
0ac4: 0b 5e 00 00 00             ; CALL BASE (005e)
0ac9: 02                         ; FETCH
0aca: 04                         ; SWAP
0acb: 0b b1 03 00 00             ; CALL HEX (03b1)
0ad0: 0b 2b 0a 00 00             ; CALL (.) (0a2b)
0ad5: 0b 5e 00 00 00             ; CALL BASE (005e)
0ada: 03                         ; STORE
0adb: 0c                         ; RET
;
0adc: 18 94 f4 00 00             ; DICTP HEX.2 (f494)
0ae1: 0b 5e 00 00 00             ; CALL BASE (005e)
0ae6: 02                         ; FETCH
0ae7: 04                         ; SWAP
0ae8: 0b b1 03 00 00             ; CALL HEX (03b1)
0aed: 0b 53 0a 00 00             ; CALL .2 (0a53)
0af2: 0b 5e 00 00 00             ; CALL BASE (005e)
0af7: 03                         ; STORE
0af8: 0c                         ; RET
;
0af9: 18 84 f4 00 00             ; DICTP HEX.4 (f484)
0afe: 0b 5e 00 00 00             ; CALL BASE (005e)
0b03: 02                         ; FETCH
0b04: 04                         ; SWAP
0b05: 0b b1 03 00 00             ; CALL HEX (03b1)
0b0a: 0b 96 0a 00 00             ; CALL .4 (0a96)
0b0f: 0b 5e 00 00 00             ; CALL BASE (005e)
0b14: 03                         ; STORE
0b15: 0c                         ; RET
;
0b16: 18 71 f4 00 00             ; DICTP DECIMAL. (f471)
0b1b: 0b 5e 00 00 00             ; CALL BASE (005e)
0b20: 02                         ; FETCH
0b21: 04                         ; SWAP
0b22: 0b bf 03 00 00             ; CALL DECIMAL (03bf)
0b27: 0b 2b 0a 00 00             ; CALL (.) (0a2b)
0b2c: 0b 5e 00 00 00             ; CALL BASE (005e)
0b31: 03                         ; STORE
0b32: 0c                         ; RET
;
0b33: 18 5d f4 00 00             ; DICTP DECIMAL.3 (f45d)
0b38: 0b 5e 00 00 00             ; CALL BASE (005e)
0b3d: 02                         ; FETCH
0b3e: 04                         ; SWAP
0b3f: 0b bf 03 00 00             ; CALL DECIMAL (03bf)
0b44: 0b 72 0a 00 00             ; CALL .3 (0a72)
0b49: 0b 5e 00 00 00             ; CALL BASE (005e)
0b4e: 03                         ; STORE
0b4f: 0c                         ; RET
;
0b50: 18 4b f4 00 00             ; DICTP BINARY. (f44b)
0b55: 0b 5e 00 00 00             ; CALL BASE (005e)
0b5a: 02                         ; FETCH
0b5b: 04                         ; SWAP
0b5c: 0b db 03 00 00             ; CALL BINARY (03db)
0b61: 0b 2b 0a 00 00             ; CALL (.) (0a2b)
0b66: 0b 5e 00 00 00             ; CALL BASE (005e)
0b6b: 03                         ; STORE
0b6c: 0c                         ; RET
;
0b6d: 18 3d f4 00 00             ; DICTP MIN (f43d)
0b72: 1a                         ; OVER
0b73: 1a                         ; OVER
0b74: 17                         ; GT
0b75: 5b 02                      ; BRANCHFZ 2 (0b78)
0b77: 04                         ; SWAP
0b78: 05                         ; DROP
0b79: 0c                         ; RET
;
0b7a: 18 2f f4 00 00             ; DICTP MAX (f42f)
0b7f: 1a                         ; OVER
0b80: 1a                         ; OVER
0b81: 15                         ; LT
0b82: 5b 02                      ; BRANCHFZ 2 (0b85)
0b84: 04                         ; SWAP
0b85: 05                         ; DROP
0b86: 0c                         ; RET
;
0b87: 18 22 f4 00 00             ; DICTP .S (f422)
0b8c: 0e 20                      ; CLITERAL 32
0b8e: 19                         ; EMIT
0b8f: 26                         ; DEPTH
0b90: 0e 00                      ; CLITERAL 0
0b92: 15                         ; LT
0b93: 5b 1f                      ; BRANCHFZ 31 (0bb3)
0b95: 07 10 53 74 61 63 6b 20 75 6e 64 65 72 66 6c 6f 77 21 00 ; SLITERAL (0b96) [Stack underflow!]
0ba8: 0b 1e 06 00 00             ; CALL COUNT (061e)
0bad: 0b 28 06 00 00             ; CALL TYPE (0628)
0bb2: fe                         ; RESET
0bb3: 26                         ; DEPTH
0bb4: 0e 00                      ; CLITERAL 0
0bb6: 16                         ; EQ
0bb7: 5b 0b                      ; BRANCHFZ 11 (0bc3)
0bb9: 0e 28                      ; CLITERAL 40
0bbb: 19                         ; EMIT
0bbc: 0e ed                      ; CLITERAL 237
0bbe: 19                         ; EMIT
0bbf: 0e 29                      ; CLITERAL 41
0bc1: 19                         ; EMIT
0bc2: 0c                         ; RET
0bc3: 0e 28                      ; CLITERAL 40
0bc5: 19                         ; EMIT
0bc6: 0e 20                      ; CLITERAL 32
0bc8: 19                         ; EMIT
0bc9: 26                         ; DEPTH
0bca: 2e                         ; DEC
0bcb: 21                         ; DTOR
0bcc: 2b                         ; RFETCH
0bcd: 25                         ; PICK
0bce: 0b 45 0a 00 00             ; CALL . (0a45)
0bd3: 2b                         ; RFETCH
0bd4: 5b 06                      ; BRANCHFZ 6 (0bdb)
0bd6: 22                         ; RTOD
0bd7: 2e                         ; DEC
0bd8: 21                         ; DTOR
0bd9: 5a 07                      ; BRANCHF 7 (0be1)
0bdb: 22                         ; RTOD
0bdc: 05                         ; DROP
0bdd: 0e 29                      ; CLITERAL 41
0bdf: 19                         ; EMIT
0be0: 0c                         ; RET
0be1: 5d 16                      ; BRANCHB 22 (0bcc)
0be3: 0c                         ; RET
;
0be4: 18 0e f4 00 00             ; DICTP .(MEM_SZ) (f40e)
0be9: 07 08 4d 65 6d 6f 72 79 3a 20 00 ; SLITERAL (0bea) [Memory: ]
0bf4: 0b 3e 06 00 00             ; CALL CT (063e)
0bf9: 0b ec 04 00 00             ; CALL MEM_SZ (04ec)
0bfe: 06                         ; DUP
0bff: 0b bf 0a 00 00             ; CALL HEX. (0abf)
0c04: 07 02 20 28 00             ; SLITERAL (0c05) [ (]
0c09: 0b 3e 06 00 00             ; CALL CT (063e)
0c0e: 0b 2b 0a 00 00             ; CALL (.) (0a2b)
0c13: 07 01 29 00                ; SLITERAL (0c14) [)]
0c17: 0b 3e 06 00 00             ; CALL CT (063e)
0c1c: 0c                         ; RET
;
0c1d: 18 fc f3 00 00             ; DICTP .(HERE) (f3fc)
0c22: 07 06 48 45 52 45 3a 20 00 ; SLITERAL (0c23) [HERE: ]
0c2b: 0b 3e 06 00 00             ; CALL CT (063e)
0c30: 0b fd 00 00 00             ; CALL HERE (00fd)
0c35: 06                         ; DUP
0c36: 0b bf 0a 00 00             ; CALL HEX. (0abf)
0c3b: 07 02 20 28 00             ; SLITERAL (0c3c) [ (]
0c40: 0b 3e 06 00 00             ; CALL CT (063e)
0c45: 0b 2b 0a 00 00             ; CALL (.) (0a2b)
0c4a: 07 01 29 00                ; SLITERAL (0c4b) [)]
0c4e: 0b 3e 06 00 00             ; CALL CT (063e)
0c53: 0c                         ; RET
;
0c54: 18 ea f3 00 00             ; DICTP .(LAST) (f3ea)
0c59: 07 06 4c 41 53 54 3a 20 00 ; SLITERAL (0c5a) [LAST: ]
0c62: 0b 3e 06 00 00             ; CALL CT (063e)
0c67: 0b 09 01 00 00             ; CALL LAST (0109)
0c6c: 06                         ; DUP
0c6d: 0b bf 0a 00 00             ; CALL HEX. (0abf)
0c72: 07 02 20 28 00             ; SLITERAL (0c73) [ (]
0c77: 0b 3e 06 00 00             ; CALL CT (063e)
0c7c: 0b 2b 0a 00 00             ; CALL (.) (0a2b)
0c81: 07 01 29 00                ; SLITERAL (0c82) [)]
0c85: 0b 3e 06 00 00             ; CALL CT (063e)
0c8a: 0c                         ; RET
;
0c8b: 18 d4 f3 00 00             ; DICTP .WORD-SHORT (f3d4)
0c90: 06                         ; DUP
0c91: 0b 9a 07 00 00             ; CALL DICT>NAME (079a)
0c96: 0b 3e 06 00 00             ; CALL CT (063e)
0c9b: 0e 20                      ; CLITERAL 32
0c9d: 19                         ; EMIT
0c9e: 02                         ; FETCH
0c9f: 0c                         ; RET
;
0ca0: 18 c4 f3 00 00             ; DICTP WORDS (f3c4)
0ca5: 0b 09 01 00 00             ; CALL LAST (0109)
0caa: 06                         ; DUP
0cab: 02                         ; FETCH
0cac: 2a                         ; NOT
0cad: 5b 09                      ; BRANCHFZ 9 (0cb7)
0caf: 05                         ; DROP
0cb0: 0e 0d                      ; CLITERAL 13
0cb2: 19                         ; EMIT
0cb3: 0e 0a                      ; CLITERAL 10
0cb5: 19                         ; EMIT
0cb6: 0c                         ; RET
0cb7: 0b 8b 0c 00 00             ; CALL .WORD-SHORT (0c8b)
0cbc: 5d 13                      ; BRANCHB 19 (0caa)
0cbe: 0c                         ; RET
;
0cbf: 18 af f3 00 00             ; DICTP .WORD-LONG (f3af)
0cc4: 06                         ; DUP
0cc5: 0b bf 0a 00 00             ; CALL HEX. (0abf)
0cca: 0e 3a                      ; CLITERAL 58
0ccc: 19                         ; EMIT
0ccd: 0e 20                      ; CLITERAL 32
0ccf: 19                         ; EMIT
0cd0: 06                         ; DUP
0cd1: 0b 9a 07 00 00             ; CALL DICT>NAME (079a)
0cd6: 0b 3e 06 00 00             ; CALL CT (063e)
0cdb: 0e 20                      ; CLITERAL 32
0cdd: 19                         ; EMIT
0cde: 06                         ; DUP
0cdf: 0b ce 07 00 00             ; CALL DICT.GetXT (07ce)
0ce4: 0e 28                      ; CLITERAL 40
0ce6: 19                         ; EMIT
0ce7: 0b f9 0a 00 00             ; CALL HEX.4 (0af9)
0cec: 0e 29                      ; CLITERAL 41
0cee: 19                         ; EMIT
0cef: 06                         ; DUP
0cf0: 0b 8e 07 00 00             ; CALL DICT>FLAGS (078e)
0cf5: 0f                         ; CFETCH
0cf6: 06                         ; DUP
0cf7: 07 09 2c 20 46 6c 61 67 73 3a 20 00 ; SLITERAL (0cf8) [, Flags: ]
0d03: 0b 3e 06 00 00             ; CALL CT (063e)
0d08: 0b dc 0a 00 00             ; CALL HEX.2 (0adc)
0d0d: 06                         ; DUP
0d0e: 0b 0f 08 00 00             ; CALL FLAGS.ISINLINE? (080f)
0d13: 5b 12                      ; BRANCHFZ 18 (0d26)
0d15: 07 09 20 28 49 4e 4c 49 4e 45 29 00 ; SLITERAL (0d16) [ (INLINE)]
0d21: 0b 3e 06 00 00             ; CALL CT (063e)
0d26: 0b 06 08 00 00             ; CALL FLAGS.ISIMMEDIATE? (0806)
0d2b: 5b 15                      ; BRANCHFZ 21 (0d41)
0d2d: 07 0c 20 28 49 4d 4d 45 44 49 41 54 45 29 00 ; SLITERAL (0d2e) [ (IMMEDIATE)]
0d3c: 0b 3e 06 00 00             ; CALL CT (063e)
0d41: 0e 0d                      ; CLITERAL 13
0d43: 19                         ; EMIT
0d44: 0e 0a                      ; CLITERAL 10
0d46: 19                         ; EMIT
0d47: 02                         ; FETCH
0d48: 0c                         ; RET
;
0d49: 18 9e f3 00 00             ; DICTP WORDSV (f39e)
0d4e: 0b 54 0c 00 00             ; CALL .(LAST) (0c54)
0d53: 0e 0d                      ; CLITERAL 13
0d55: 19                         ; EMIT
0d56: 0e 0a                      ; CLITERAL 10
0d58: 19                         ; EMIT
0d59: 0b 09 01 00 00             ; CALL LAST (0109)
0d5e: 06                         ; DUP
0d5f: 02                         ; FETCH
0d60: 2a                         ; NOT
0d61: 5b 09                      ; BRANCHFZ 9 (0d6b)
0d63: 05                         ; DROP
0d64: 0e 0d                      ; CLITERAL 13
0d66: 19                         ; EMIT
0d67: 0e 0a                      ; CLITERAL 10
0d69: 19                         ; EMIT
0d6a: 0c                         ; RET
0d6b: 0b bf 0c 00 00             ; CALL .WORD-LONG (0cbf)
0d70: 5d 13                      ; BRANCHB 19 (0d5e)
0d72: 0c                         ; RET
;
0d73: 18 8a f3 00 00             ; DICTP NUM-WORDS (f38a)
0d78: 0e 00                      ; CLITERAL 0
0d7a: 21                         ; DTOR
0d7b: 0b 09 01 00 00             ; CALL LAST (0109)
0d80: 06                         ; DUP
0d81: 02                         ; FETCH
0d82: 2a                         ; NOT
0d83: 5b 0a                      ; BRANCHFZ 10 (0d8e)
0d85: 05                         ; DROP
0d86: 22                         ; RTOD
0d87: 0e 0d                      ; CLITERAL 13
0d89: 19                         ; EMIT
0d8a: 0e 0a                      ; CLITERAL 10
0d8c: 19                         ; EMIT
0d8d: 0c                         ; RET
0d8e: 22                         ; RTOD
0d8f: 2c                         ; INC
0d90: 21                         ; DTOR
0d91: 02                         ; FETCH
0d92: 5d 13                      ; BRANCHB 19 (0d80)
0d94: 0c                         ; RET
;
0d95: 18 79 f3 00 00             ; DICTP .lastx (f379)
0d9a: 0e 0d                      ; CLITERAL 13
0d9c: 19                         ; EMIT
0d9d: 0e 0a                      ; CLITERAL 10
0d9f: 19                         ; EMIT
0da0: 0b 09 01 00 00             ; CALL LAST (0109)
0da5: 04                         ; SWAP
0da6: 04                         ; SWAP
0da7: 0b bf 0c 00 00             ; CALL .WORD-LONG (0cbf)
0dac: 04                         ; SWAP
0dad: 2e                         ; DEC
0dae: 06                         ; DUP
0daf: 5f 0a                      ; BRANCHBNZ 10 (0da6)
0db1: 05                         ; DROP
0db2: 05                         ; DROP
0db3: 0c                         ; RET
;
0db4: 18 67 f3 00 00             ; DICTP EXECUTE (f367)
0db9: 22                         ; RTOD
0dba: 05                         ; DROP
0dbb: 21                         ; DTOR
0dbc: 0c                         ; RET
;
0dbd: 18 54 f3 00 00             ; DICTP find.ret (f354)
0dc2: 06                         ; DUP
0dc3: 0f                         ; CFETCH
0dc4: 0e 0c                      ; CLITERAL 12
0dc6: 16                         ; EQ
0dc7: 5b 02                      ; BRANCHFZ 2 (0dca)
0dc9: 0c                         ; RET
0dca: 2c                         ; INC
0dcb: 5d 0a                      ; BRANCHB 10 (0dc2)
0dcd: 0c                         ; RET
;
0dce: 18 41 f3 00 00             ; DICTP (inline) (f341)
0dd3: 1a                         ; OVER
0dd4: 1a                         ; OVER
0dd5: 15                         ; LT
0dd6: 5b 02                      ; BRANCHFZ 2 (0dd9)
0dd8: 04                         ; SWAP
0dd9: 06                         ; DUP
0dda: 0f                         ; CFETCH
0ddb: 0b 15 01 00 00             ; CALL C, (0115)
0de0: 2c                         ; INC
0de1: 1a                         ; OVER
0de2: 1a                         ; OVER
0de3: 17                         ; GT
0de4: 5f 0c                      ; BRANCHBNZ 12 (0dd9)
0de6: 05                         ; DROP
0de7: 05                         ; DROP
0de8: 0c                         ; RET
;
0de9: 18 31 f3 00 00             ; DICTP DOES> (f331)
0dee: 22                         ; RTOD
0def: 06                         ; DUP
0df0: 0b bd 0d 00 00             ; CALL find.ret (0dbd)
0df5: 06                         ; DUP
0df6: 21                         ; DTOR
0df7: 2c                         ; INC
0df8: 0b ce 0d 00 00             ; CALL (inline) (0dce)
0dfd: 0c                         ; RET
;
0dfe: 18 1b f3 00 00             ; DICTP Copy.INLINE (f31b)
0e03: 06                         ; DUP
0e04: 0f                         ; CFETCH
0e05: 0e 18                      ; CLITERAL 24
0e07: 16                         ; EQ
0e08: 5b 05                      ; BRANCHFZ 5 (0e0e)
0e0a: 2c                         ; INC
0e0b: 0e 04                      ; CLITERAL 4
0e0d: 11                         ; ADD
0e0e: 06                         ; DUP
0e0f: 0b bd 0d 00 00             ; CALL find.ret (0dbd)
0e14: 0b ce 0d 00 00             ; CALL (inline) (0dce)
0e19: 0c                         ; RET
;
0e1a: 18 0a f3 00 00             ; DICTP strlen (f30a)
0e1f: 0e 00                      ; CLITERAL 0
0e21: 04                         ; SWAP
0e22: 04                         ; SWAP
0e23: 1a                         ; OVER
0e24: 0f                         ; CFETCH
0e25: 06                         ; DUP
0e26: 5b 07                      ; BRANCHFZ 7 (0e2e)
0e28: 05                         ; DROP
0e29: 2c                         ; INC
0e2a: 04                         ; SWAP
0e2b: 2c                         ; INC
0e2c: 0e 01                      ; CLITERAL 1
0e2e: 5f 0d                      ; BRANCHBNZ 13 (0e22)
0e30: 04                         ; SWAP
0e31: 05                         ; DROP
0e32: 0c                         ; RET
;
0e33: 18 fa f2 00 00             ; DICTP cstr, (f2fa)
0e38: 06                         ; DUP
0e39: 0f                         ; CFETCH
0e3a: 1a                         ; OVER
0e3b: 11                         ; ADD
0e3c: 2c                         ; INC
0e3d: 2c                         ; INC
0e3e: 0b ce 0d 00 00             ; CALL (inline) (0dce)
0e43: 0c                         ; RET
;
0e44: 18 e6 f2 00 00             ; DICTP [COMPILE] (f2e6)
0e49: 0b 0f 08 00 00             ; CALL FLAGS.ISINLINE? (080f)
0e4e: 5b 08                      ; BRANCHFZ 8 (0e57)
0e50: 0b fe 0d 00 00             ; CALL Copy.INLINE (0dfe)
0e55: 5a 0b                      ; BRANCHF 11 (0e61)
0e57: 0b c7 01 00 00             ; CALL CALL (01c7)
0e5c: 0b 2d 01 00 00             ; CALL , (012d)
0e61: 0c                         ; RET
;
0e62: 18 d0 f2 00 00             ; DICTP executeWord (f2d0)
0e67: 21                         ; DTOR
0e68: 2b                         ; RFETCH
0e69: 0b 38 08 00 00             ; CALL findInDict (0838)
0e6e: 5b 29                      ; BRANCHFZ 41 (0e98)
0e70: 22                         ; RTOD
0e71: 05                         ; DROP
0e72: 0b fd 03 00 00             ; CALL ?COMPILING (03fd)
0e77: 5b 18                      ; BRANCHFZ 24 (0e90)
0e79: 06                         ; DUP
0e7a: 0b 06 08 00 00             ; CALL FLAGS.ISIMMEDIATE? (0806)
0e7f: 5b 09                      ; BRANCHFZ 9 (0e89)
0e81: 05                         ; DROP
0e82: 0b b4 0d 00 00             ; CALL EXECUTE (0db4)
0e87: 5a 06                      ; BRANCHF 6 (0e8e)
0e89: 0b 44 0e 00 00             ; CALL [COMPILE] (0e44)
0e8e: 5a 07                      ; BRANCHF 7 (0e96)
0e90: 05                         ; DROP
0e91: 0b b4 0d 00 00             ; CALL EXECUTE (0db4)
0e96: 5a 46                      ; BRANCHF 70 (0edd)
0e98: 05                         ; DROP
0e99: 05                         ; DROP
0e9a: 2b                         ; RFETCH
0e9b: 0b e8 08 00 00             ; CALL isNumber? (08e8)
0ea0: 5b 2e                      ; BRANCHFZ 46 (0ecf)
0ea2: 0b fd 03 00 00             ; CALL ?COMPILING (03fd)
0ea7: 5b 25                      ; BRANCHFZ 37 (0ecd)
0ea9: 06                         ; DUP
0eaa: 0e 00                      ; CLITERAL 0
0eac: 0e ff                      ; CLITERAL 255
0eae: 0b c3 06 00 00             ; CALL BETWEEN (06c3)
0eb3: 5b 0f                      ; BRANCHFZ 15 (0ec3)
0eb5: 0e 0e                      ; CLITERAL 14
0eb7: 0b 15 01 00 00             ; CALL C, (0115)
0ebc: 0b 15 01 00 00             ; CALL C, (0115)
0ec1: 5a 0b                      ; BRANCHF 11 (0ecd)
0ec3: 0b 63 01 00 00             ; CALL LITERAL (0163)
0ec8: 0b 2d 01 00 00             ; CALL , (012d)
0ecd: 5a 0d                      ; BRANCHF 13 (0edb)
0ecf: 05                         ; DROP
0ed0: 07 02 3f 3f 00             ; SLITERAL (0ed1) [??]
0ed5: 0b 3e 06 00 00             ; CALL CT (063e)
0eda: fe                         ; RESET
0edb: 22                         ; RTOD
0edc: 05                         ; DROP
0edd: 0c                         ; RET
;
0ede: 18 b9 f2 00 00             ; DICTP executeInput (f2b9)
0ee3: 0b 8b 00 00 00             ; CALL >IN (008b)
0ee8: 02                         ; FETCH
0ee9: 0b d6 06 00 00             ; CALL skipWS (06d6)
0eee: 0b 8b 00 00 00             ; CALL >IN (008b)
0ef3: 03                         ; STORE
0ef4: 0b 8b 00 00 00             ; CALL >IN (008b)
0ef9: 02                         ; FETCH
0efa: 0f                         ; CFETCH
0efb: 5b 19                      ; BRANCHFZ 25 (0f15)
0efd: 0b 8b 00 00 00             ; CALL >IN (008b)
0f02: 02                         ; FETCH
0f03: 0b 59 07 00 00             ; CALL getOneWord (0759)
0f08: 0b 8b 00 00 00             ; CALL >IN (008b)
0f0d: 03                         ; STORE
0f0e: 0b 62 0e 00 00             ; CALL executeWord (0e62)
0f13: 5a 02                      ; BRANCHF 2 (0f16)
0f15: 0c                         ; RET
0f16: 5d 34                      ; BRANCHB 52 (0ee3)
0f18: 0c                         ; RET
;
0f19: 18 ab f2 00 00             ; DICTP Pad (f2ab)
0f1e: 0b 09 01 00 00             ; CALL LAST (0109)
0f23: 0e c8                      ; CLITERAL 200
0f25: 12                         ; SUB
0f26: 06                         ; DUP
0f27: 0b fd 00 00 00             ; CALL HERE (00fd)
0f2c: 15                         ; LT
0f2d: 5b 13                      ; BRANCHFZ 19 (0f41)
0f2f: 07 0e 4f 75 74 20 6f 66 20 4d 65 6d 6f 72 79 21 00 ; SLITERAL (0f30) [Out of Memory!]
0f40: fe                         ; RESET
0f41: 0c                         ; RET
;
0f42: 18 99 f2 00 00             ; DICTP getLine (f299)
0f47: 0e 00                      ; CLITERAL 0
0f49: 0b 19 0f 00 00             ; CALL Pad (0f19)
0f4e: 06                         ; DUP
0f4f: 2c                         ; INC
0f50: 0b 8b 00 00 00             ; CALL >IN (008b)
0f55: 03                         ; STORE
0f56: 10                         ; CSTORE
0f57: 0e 00                      ; CLITERAL 0
0f59: 0b 8b 00 00 00             ; CALL >IN (008b)
0f5e: 02                         ; FETCH
0f5f: 10                         ; CSTORE
0f60: 27                         ; GETCH
0f61: 06                         ; DUP
0f62: 0e 0d                      ; CLITERAL 13
0f64: 16                         ; EQ
0f65: 5b 0b                      ; BRANCHFZ 11 (0f71)
0f67: 05                         ; DROP
0f68: 0b 19 0f 00 00             ; CALL Pad (0f19)
0f6d: 0e 20                      ; CLITERAL 32
0f6f: 19                         ; EMIT
0f70: 0c                         ; RET
0f71: 06                         ; DUP
0f72: 0e 09                      ; CLITERAL 9
0f74: 16                         ; EQ
0f75: 5b 04                      ; BRANCHFZ 4 (0f7a)
0f77: 05                         ; DROP
0f78: 0e 20                      ; CLITERAL 32
0f7a: 06                         ; DUP
0f7b: 0e 03                      ; CLITERAL 3
0f7d: 16                         ; EQ
0f7e: 5b 02                      ; BRANCHFZ 2 (0f81)
0f80: ff                         ; BYE
0f81: 06                         ; DUP
0f82: 0e 08                      ; CLITERAL 8
0f84: 16                         ; EQ
0f85: 5b 2b                      ; BRANCHFZ 43 (0fb1)
0f87: 0b 19 0f 00 00             ; CALL Pad (0f19)
0f8c: 0f                         ; CFETCH
0f8d: 0e 00                      ; CLITERAL 0
0f8f: 17                         ; GT
0f90: 5b 1d                      ; BRANCHFZ 29 (0fae)
0f92: 0b 19 0f 00 00             ; CALL Pad (0f19)
0f97: 06                         ; DUP
0f98: 0f                         ; CFETCH
0f99: 2e                         ; DEC
0f9a: 04                         ; SWAP
0f9b: 10                         ; CSTORE
0f9c: 0b 8b 00 00 00             ; CALL >IN (008b)
0fa1: 06                         ; DUP
0fa2: 02                         ; FETCH
0fa3: 2e                         ; DEC
0fa4: 04                         ; SWAP
0fa5: 03                         ; STORE
0fa6: 06                         ; DUP
0fa7: 19                         ; EMIT
0fa8: 0e 20                      ; CLITERAL 32
0faa: 19                         ; EMIT
0fab: 19                         ; EMIT
0fac: 5a 02                      ; BRANCHF 2 (0faf)
0fae: 05                         ; DROP
0faf: 5a 2d                      ; BRANCHF 45 (0fdd)
0fb1: 06                         ; DUP
0fb2: 0e 20                      ; CLITERAL 32
0fb4: 0e 7f                      ; CLITERAL 127
0fb6: 0b c3 06 00 00             ; CALL BETWEEN (06c3)
0fbb: 5b 20                      ; BRANCHFZ 32 (0fdc)
0fbd: 06                         ; DUP
0fbe: 19                         ; EMIT
0fbf: 0b 8b 00 00 00             ; CALL >IN (008b)
0fc4: 02                         ; FETCH
0fc5: 10                         ; CSTORE
0fc6: 0b 8b 00 00 00             ; CALL >IN (008b)
0fcb: 06                         ; DUP
0fcc: 02                         ; FETCH
0fcd: 2c                         ; INC
0fce: 04                         ; SWAP
0fcf: 03                         ; STORE
0fd0: 0b 19 0f 00 00             ; CALL Pad (0f19)
0fd5: 06                         ; DUP
0fd6: 0f                         ; CFETCH
0fd7: 2c                         ; INC
0fd8: 04                         ; SWAP
0fd9: 10                         ; CSTORE
0fda: 5a 02                      ; BRANCHF 2 (0fdd)
0fdc: 05                         ; DROP
0fdd: 5d 87                      ; BRANCHB 135 (0f57)
0fdf: 0c                         ; RET
;
0fe0: 18 86 f2 00 00             ; DICTP strcpy2c (f286)
0fe5: 06                         ; DUP
0fe6: 21                         ; DTOR
0fe7: 0e 00                      ; CLITERAL 0
0fe9: 1a                         ; OVER
0fea: 10                         ; CSTORE
0feb: 2c                         ; INC
0fec: 04                         ; SWAP
0fed: 06                         ; DUP
0fee: 0f                         ; CFETCH
0fef: 06                         ; DUP
0ff0: 5b 11                      ; BRANCHFZ 17 (1002)
0ff2: 0e 02                      ; CLITERAL 2
0ff4: 25                         ; PICK
0ff5: 10                         ; CSTORE
0ff6: 04                         ; SWAP
0ff7: 2c                         ; INC
0ff8: 04                         ; SWAP
0ff9: 2c                         ; INC
0ffa: 2b                         ; RFETCH
0ffb: 06                         ; DUP
0ffc: 0f                         ; CFETCH
0ffd: 2c                         ; INC
0ffe: 04                         ; SWAP
0fff: 10                         ; CSTORE
1000: 5a 0a                      ; BRANCHF 10 (100b)
1002: 21                         ; DTOR
1003: 04                         ; SWAP
1004: 22                         ; RTOD
1005: 04                         ; SWAP
1006: 10                         ; CSTORE
1007: 05                         ; DROP
1008: 22                         ; RTOD
1009: 05                         ; DROP
100a: 0c                         ; RET
100b: 5d 1f                      ; BRANCHB 31 (0fed)
100d: 0c                         ; RET
;
100e: 18 70 f2 00 00             ; DICTP Define-Word (f270)
1013: 0b 09 01 00 00             ; CALL LAST (0109)
1018: 1a                         ; OVER
1019: 0b 1a 0e 00 00             ; CALL strlen (0e1a)
101e: 0e 02                      ; CLITERAL 2
1020: 0e 04                      ; CLITERAL 4
1022: 13                         ; MUL
1023: 0e 03                      ; CLITERAL 3
1025: 11                         ; ADD
1026: 11                         ; ADD
1027: 12                         ; SUB
1028: 06                         ; DUP
1029: 21                         ; DTOR
102a: 21                         ; DTOR
102b: 0b 09 01 00 00             ; CALL LAST (0109)
1030: 2b                         ; RFETCH
1031: 03                         ; STORE
1032: 22                         ; RTOD
1033: 0e 04                      ; CLITERAL 4
1035: 11                         ; ADD
1036: 21                         ; DTOR
1037: 0b fd 00 00 00             ; CALL HERE (00fd)
103c: 2b                         ; RFETCH
103d: 03                         ; STORE
103e: 22                         ; RTOD
103f: 0e 04                      ; CLITERAL 4
1041: 11                         ; ADD
1042: 21                         ; DTOR
1043: 0e 00                      ; CLITERAL 0
1045: 2b                         ; RFETCH
1046: 10                         ; CSTORE
1047: 22                         ; RTOD
1048: 2c                         ; INC
1049: 21                         ; DTOR
104a: 22                         ; RTOD
104b: 0b e0 0f 00 00             ; CALL strcpy2c (0fe0)
1050: 22                         ; RTOD
1051: 0b 4f 00 00 00             ; CALL (LAST) (004f)
1056: 03                         ; STORE
1057: 0c                         ; RET
;
1058: 18 5a f2 00 00             ; DICTP CREATE-NAME (f25a)
105d: 0b 8b 00 00 00             ; CALL >IN (008b)
1062: 02                         ; FETCH
1063: 0b d6 06 00 00             ; CALL skipWS (06d6)
1068: 0b 8b 00 00 00             ; CALL >IN (008b)
106d: 03                         ; STORE
106e: 0b 8b 00 00 00             ; CALL >IN (008b)
1073: 02                         ; FETCH
1074: 0f                         ; CFETCH
1075: 5b 30                      ; BRANCHFZ 48 (10a6)
1077: 0b 8b 00 00 00             ; CALL >IN (008b)
107c: 02                         ; FETCH
107d: 0b 59 07 00 00             ; CALL getOneWord (0759)
1082: 0b 8b 00 00 00             ; CALL >IN (008b)
1087: 03                         ; STORE
1088: 06                         ; DUP
1089: 0f                         ; CFETCH
108a: 5b 19                      ; BRANCHFZ 25 (10a4)
108c: 0b 0e 10 00 00             ; CALL Define-Word (100e)
1091: 0e 18                      ; CLITERAL 24
1093: 0b 15 01 00 00             ; CALL C, (0115)
1098: 0b 09 01 00 00             ; CALL LAST (0109)
109d: 0b 2d 01 00 00             ; CALL , (012d)
10a2: 5a 03                      ; BRANCHF 3 (10a6)
10a4: 05                         ; DROP
10a5: fe                         ; RESET
10a6: 0c                         ; RET
;
10a7: 18 4e f2 00 00             ; DICTP : (f24e)
10ac: 0b 58 10 00 00             ; CALL CREATE-NAME (1058)
10b1: 0b 6d 00 00 00             ; CALL STATE (006d)
10b6: 0b e9 03 00 00             ; CALL ON (03e9)
10bb: 0c                         ; RET
;
10bc: 18 3c f2 00 00             ; DICTP :NONAME (f23c)
10c1: 0b fd 00 00 00             ; CALL HERE (00fd)
10c6: 0b 6d 00 00 00             ; CALL STATE (006d)
10cb: 0b e9 03 00 00             ; CALL ON (03e9)
10d0: 0c                         ; RET
;
10d1: 18 30 f2 00 00             ; DICTP ; (f230)
10d6: 0b d4 01 00 00             ; CALL RET (01d4)
10db: 0b 6d 00 00 00             ; CALL STATE (006d)
10e0: 0b f3 03 00 00             ; CALL OFF (03f3)
10e5: 0c                         ; RET
;
10e6: 18 1b f2 00 00             ; DICTP ForgetLast (f21b)
10eb: 0b 09 01 00 00             ; CALL LAST (0109)
10f0: 0e 04                      ; CLITERAL 4
10f2: 11                         ; ADD
10f3: 02                         ; FETCH
10f4: 0b 40 00 00 00             ; CALL (HERE) (0040)
10f9: 03                         ; STORE
10fa: 0b 09 01 00 00             ; CALL LAST (0109)
10ff: 02                         ; FETCH
1100: 0b 4f 00 00 00             ; CALL (LAST) (004f)
1105: 03                         ; STORE
1106: 0c                         ; RET
;
1107: 18 05 f2 00 00             ; DICTP close-input (f205)
110c: 0b b8 00 00 00             ; CALL INPUT-FP (00b8)
1111: 02                         ; FETCH
1112: 20                         ; FCLOSE
1113: 0e 00                      ; CLITERAL 0
1115: 0b b8 00 00 00             ; CALL INPUT-FP (00b8)
111a: 03                         ; STORE
111b: 0c                         ; RET
;
111c: 18 f0 f1 00 00             ; DICTP resetState (f1f0)
1121: 0b fd 03 00 00             ; CALL ?COMPILING (03fd)
1126: 5b 06                      ; BRANCHFZ 6 (112d)
1128: 0b e6 10 00 00             ; CALL ForgetLast (10e6)
112d: 0b bf 03 00 00             ; CALL DECIMAL (03bf)
1132: 0b 6d 00 00 00             ; CALL STATE (006d)
1137: 0b f3 03 00 00             ; CALL OFF (03f3)
113c: 0b 07 11 00 00             ; CALL close-input (1107)
1141: 0c                         ; RET
;
1142: 18 e0 f1 00 00             ; DICTP ALLOT (f1e0)
1147: 0b fd 00 00 00             ; CALL HERE (00fd)
114c: 11                         ; ADD
114d: 0b 40 00 00 00             ; CALL (HERE) (0040)
1152: 03                         ; STORE
1153: 0c                         ; RET
;
1154: 18 d4 f1 00 00             ; DICTP ? (f1d4)
1159: 02                         ; FETCH
115a: 0b 45 0a 00 00             ; CALL . (0a45)
115f: 0c                         ; RET
;
1160: 18 c7 f1 00 00             ; DICTP C? (f1c7)
1165: 0f                         ; CFETCH
1166: 0b 45 0a 00 00             ; CALL . (0a45)
116b: 0c                         ; RET
;
116c: 18 b8 f1 00 00             ; DICTP FREE (f1b8)
1171: 0b 09 01 00 00             ; CALL LAST (0109)
1176: 0b fd 00 00 00             ; CALL HERE (00fd)
117b: 12                         ; SUB
117c: 0c                         ; RET
;
117d: 18 a8 f1 00 00             ; DICTP .FREE (f1a8)
1182: 0b 6c 11 00 00             ; CALL FREE (116c)
1187: 0b 2b 0a 00 00             ; CALL (.) (0a2b)
118c: 07 0c 20 62 79 74 65 73 20 66 72 65 65 2e 00 ; SLITERAL (118d) [ bytes free.]
119b: 0b 3e 06 00 00             ; CALL CT (063e)
11a0: 0c                         ; RET
;
11a1: 18 95 f1 00 00             ; DICTP sys-info (f195)
11a6: 0b e4 0b 00 00             ; CALL .(MEM_SZ) (0be4)
11ab: 0e 2c                      ; CLITERAL 44
11ad: 19                         ; EMIT
11ae: 0e 20                      ; CLITERAL 32
11b0: 19                         ; EMIT
11b1: 0b 1d 0c 00 00             ; CALL .(HERE) (0c1d)
11b6: 0e 2c                      ; CLITERAL 44
11b8: 19                         ; EMIT
11b9: 0e 20                      ; CLITERAL 32
11bb: 19                         ; EMIT
11bc: 0b 54 0c 00 00             ; CALL .(LAST) (0c54)
11c1: 0e 2c                      ; CLITERAL 44
11c3: 19                         ; EMIT
11c4: 0e 20                      ; CLITERAL 32
11c6: 19                         ; EMIT
11c7: 0b 7d 11 00 00             ; CALL .FREE (117d)
11cc: 0e 0d                      ; CLITERAL 13
11ce: 19                         ; EMIT
11cf: 0e 0a                      ; CLITERAL 10
11d1: 19                         ; EMIT
11d2: 0c                         ; RET
;
11d3: 18 82 f1 00 00             ; DICTP mainLoop (f182)
11d8: 0b 1c 11 00 00             ; CALL resetState (111c)
11dd: 0b fd 03 00 00             ; CALL ?COMPILING (03fd)
11e2: 2a                         ; NOT
11e3: 5b 11                      ; BRANCHFZ 17 (11f5)
11e5: 07 03 20 4f 4b 00          ; SLITERAL (11e6) [ OK]
11eb: 0b 3e 06 00 00             ; CALL CT (063e)
11f0: 0b 87 0b 00 00             ; CALL .S (0b87)
11f5: 0e 0d                      ; CLITERAL 13
11f7: 19                         ; EMIT
11f8: 0e 0a                      ; CLITERAL 10
11fa: 19                         ; EMIT
11fb: 0b 42 0f 00 00             ; CALL getLine (0f42)
1200: 2c                         ; INC
1201: 0b 8b 00 00 00             ; CALL >IN (008b)
1206: 03                         ; STORE
1207: 0b de 0e 00 00             ; CALL executeInput (0ede)
120c: 0e 20                      ; CLITERAL 32
120e: 19                         ; EMIT
120f: 5d 33                      ; BRANCHB 51 (11dd)
1211: 0c                         ; RET
;
1212: 18 73 f1 00 00             ; DICTP main (f173)
1217: 0b 6d 00 00 00             ; CALL STATE (006d)
121c: 02                         ; FETCH
121d: 0e 63                      ; CLITERAL 99
121f: 16                         ; EQ
1220: 5b 1e                      ; BRANCHFZ 30 (123f)
1222: 0b a1 11 00 00             ; CALL sys-info (11a1)
1227: 0b 6d 00 00 00             ; CALL STATE (006d)
122c: 0b f3 03 00 00             ; CALL OFF (03f3)
1231: 07 06 48 65 6c 6c 6f 2e 00 ; SLITERAL (1232) [Hello.]
123a: 0b 3e 06 00 00             ; CALL CT (063e)
123f: 0b d3 11 00 00             ; CALL mainLoop (11d3)
1244: 0c                         ; RET
;
1245: 18 5c f1 00 00             ; DICTP file-getLine (f15c)
124a: 0b 19 0f 00 00             ; CALL Pad (0f19)
124f: 04                         ; SWAP
1250: 0e c8                      ; CLITERAL 200
1252: 04                         ; SWAP
1253: 1e                         ; FREADLINE
1254: 0b 19 0f 00 00             ; CALL Pad (0f19)
1259: 04                         ; SWAP
125a: 0c                         ; RET
;
125b: 18 49 f1 00 00             ; DICTP load-sub (f149)
1260: 0b b8 00 00 00             ; CALL INPUT-FP (00b8)
1265: 02                         ; FETCH
1266: 0b 45 12 00 00             ; CALL file-getLine (1245)
126b: 5b 0f                      ; BRANCHFZ 15 (127b)
126d: 2c                         ; INC
126e: 0b 8b 00 00 00             ; CALL >IN (008b)
1273: 03                         ; STORE
1274: 0b de 0e 00 00             ; CALL executeInput (0ede)
1279: 5a 08                      ; BRANCHF 8 (1282)
127b: 05                         ; DROP
127c: 0b 07 11 00 00             ; CALL close-input (1107)
1281: 0c                         ; RET
1282: 5d 23                      ; BRANCHB 35 (1260)
1284: 0c                         ; RET
;
1285: 18 35 f1 00 00             ; DICTP load-file (f135)
128a: 0b 07 11 00 00             ; CALL close-input (1107)
128f: 0e 00                      ; CLITERAL 0
1291: 0e 00                      ; CLITERAL 0
1293: 1c                         ; FOPEN
1294: 2a                         ; NOT
1295: 5b 1c                      ; BRANCHFZ 28 (12b2)
1297: 07 11 43 61 6e 6e 6f 74 20 6f 70 65 6e 20 66 69 6c 65 2e 00 ; SLITERAL (1298) [Cannot open file.]
12ab: 0b 3e 06 00 00             ; CALL CT (063e)
12b0: 05                         ; DROP
12b1: 0c                         ; RET
12b2: 0b b8 00 00 00             ; CALL INPUT-FP (00b8)
12b7: 03                         ; STORE
12b8: 0b 5b 12 00 00             ; CALL load-sub (125b)
12bd: 0c                         ; RET
;
12be: 18 26 f1 00 00             ; DICTP LOAD (f126)
12c3: 0b b8 00 00 00             ; CALL INPUT-FP (00b8)
12c8: 02                         ; FETCH
12c9: 21                         ; DTOR
12ca: 33                         ; RESET
12cb: 5b 1a                      ; BRANCHFZ 26 (12e6)
12cd: 0b b8 00 00 00             ; CALL INPUT-FP (00b8)
12d2: 03                         ; STORE
12d3: 0b 5b 12 00 00             ; CALL load-sub (125b)
12d8: 0b 07 11 00 00             ; CALL close-input (1107)
12dd: 22                         ; RTOD
12de: 0b b8 00 00 00             ; CALL INPUT-FP (00b8)
12e3: 03                         ; STORE
12e4: 5a 28                      ; BRANCHF 40 (130d)
12e6: 07 17 43 61 6e 6e 6f 74 20 6f 70 65 6e 20 62 6c 6f 63 6b 20 66 69 6c 65 2e 00 ; SLITERAL (12e7) [Cannot open block file.]
1300: 0b 3e 06 00 00             ; CALL CT (063e)
1305: 05                         ; DROP
1306: 22                         ; RTOD
1307: 0b b8 00 00 00             ; CALL INPUT-FP (00b8)
130c: 03                         ; STORE
130d: 0c                         ; RET
;
130e: 18 17 f1 00 00             ; DICTP THRU (f117)
1313: 04                         ; SWAP
1314: 1a                         ; OVER
1315: 1a                         ; OVER
1316: 15                         ; LT
1317: 5b 04                      ; BRANCHFZ 4 (131c)
1319: 05                         ; DROP
131a: 05                         ; DROP
131b: 0c                         ; RET
131c: 06                         ; DUP
131d: 04                         ; SWAP
131e: 21                         ; DTOR
131f: 04                         ; SWAP
1320: 22                         ; RTOD
1321: 21                         ; DTOR
1322: 21                         ; DTOR
1323: 0b be 12 00 00             ; CALL LOAD (12be)
1328: 22                         ; RTOD
1329: 22                         ; RTOD
132a: 2c                         ; INC
132b: 5d 18                      ; BRANCHB 24 (1314)
132d: 0c                         ; RET
;
132e: 18 03 f1 00 00             ; DICTP STR.EMPTY (f103)
1333: 0e 00                      ; CLITERAL 0
1335: 1a                         ; OVER
1336: 03                         ; STORE
1337: 0c                         ; RET
;
1338: 18 f1 f0 00 00             ; DICTP STR.LEN (f0f1)
133d: 06                         ; DUP
133e: 0f                         ; CFETCH
133f: 0c                         ; RET
;
1340: 18 de f0 00 00             ; DICTP STR.CATC (f0de)
1345: 1a                         ; OVER
1346: 06                         ; DUP
1347: 06                         ; DUP
1348: 0f                         ; CFETCH
1349: 2c                         ; INC
134a: 04                         ; SWAP
134b: 10                         ; CSTORE
134c: 06                         ; DUP
134d: 0f                         ; CFETCH
134e: 11                         ; ADD
134f: 0e 00                      ; CLITERAL 0
1351: 1a                         ; OVER
1352: 2c                         ; INC
1353: 10                         ; CSTORE
1354: 10                         ; CSTORE
1355: 0c                         ; RET
;
1356: 18 c7 f0 00 00             ; DICTP STR.NULLTERM (f0c7)
135b: 06                         ; DUP
135c: 06                         ; DUP
135d: 0f                         ; CFETCH
135e: 11                         ; ADD
135f: 2c                         ; INC
1360: 0e 00                      ; CLITERAL 0
1362: 04                         ; SWAP
1363: 10                         ; CSTORE
1364: 0c                         ; RET
;
1365: 18 ba f0 00 00             ; DICTP I" (f0ba)
136a: 0b fd 00 00 00             ; CALL HERE (00fd)
136f: 0e 64                      ; CLITERAL 100
1371: 11                         ; ADD
1372: 0e 00                      ; CLITERAL 0
1374: 1a                         ; OVER
1375: 03                         ; STORE
1376: 0b 8b 00 00 00             ; CALL >IN (008b)
137b: 02                         ; FETCH
137c: 0f                         ; CFETCH
137d: 06                         ; DUP
137e: 2a                         ; NOT
137f: 5b 1d                      ; BRANCHFZ 29 (139d)
1381: 07 10 6d 69 73 73 69 6e 67 20 63 6c 6f 73 69 6e 67 20 00 ; SLITERAL (1382) [missing closing ]
1394: 0b 3e 06 00 00             ; CALL CT (063e)
1399: 0e 22                      ; CLITERAL 34
139b: 19                         ; EMIT
139c: fe                         ; RESET
139d: 0b 8b 00 00 00             ; CALL >IN (008b)
13a2: 06                         ; DUP
13a3: 02                         ; FETCH
13a4: 2c                         ; INC
13a5: 04                         ; SWAP
13a6: 03                         ; STORE
13a7: 06                         ; DUP
13a8: 0e 22                      ; CLITERAL 34
13aa: 16                         ; EQ
13ab: 5b 03                      ; BRANCHFZ 3 (13af)
13ad: 05                         ; DROP
13ae: 0c                         ; RET
13af: 0b 40 13 00 00             ; CALL STR.CATC (1340)
13b4: 5d 3f                      ; BRANCHB 63 (1376)
13b6: 0c                         ; RET
;
13b7: 18 ae f0 00 00             ; DICTP " (f0ae)
13bc: 0b fd 03 00 00             ; CALL ?COMPILING (03fd)
13c1: 2a                         ; NOT
13c2: 5b 07                      ; BRANCHFZ 7 (13ca)
13c4: 0b 65 13 00 00             ; CALL I" (1365)
13c9: 0c                         ; RET
13ca: 0b 93 01 00 00             ; CALL SLITERAL (0193)
13cf: 0b fd 00 00 00             ; CALL HERE (00fd)
13d4: 0e 00                      ; CLITERAL 0
13d6: 0b 15 01 00 00             ; CALL C, (0115)
13db: 0b 8b 00 00 00             ; CALL >IN (008b)
13e0: 02                         ; FETCH
13e1: 0f                         ; CFETCH
13e2: 06                         ; DUP
13e3: 2a                         ; NOT
13e4: 5b 29                      ; BRANCHFZ 41 (140e)
13e6: 05                         ; DROP
13e7: 2e                         ; DEC
13e8: 0b 40 00 00 00             ; CALL (HERE) (0040)
13ed: 03                         ; STORE
13ee: 07 11 6d 69 73 73 69 6e 67 20 63 6c 6f 73 69 6e 67 20 27 00 ; SLITERAL (13ef) [missing closing ']
1402: 0b 3e 06 00 00             ; CALL CT (063e)
1407: 0e 22                      ; CLITERAL 34
1409: 19                         ; EMIT
140a: 0e 27                      ; CLITERAL 39
140c: 19                         ; EMIT
140d: fe                         ; RESET
140e: 0b 8b 00 00 00             ; CALL >IN (008b)
1413: 06                         ; DUP
1414: 02                         ; FETCH
1415: 2c                         ; INC
1416: 04                         ; SWAP
1417: 03                         ; STORE
1418: 06                         ; DUP
1419: 0e 22                      ; CLITERAL 34
141b: 16                         ; EQ
141c: 5b 14                      ; BRANCHFZ 20 (1431)
141e: 05                         ; DROP
141f: 0b fd 00 00 00             ; CALL HERE (00fd)
1424: 0e 00                      ; CLITERAL 0
1426: 0b 15 01 00 00             ; CALL C, (0115)
142b: 1a                         ; OVER
142c: 12                         ; SUB
142d: 2e                         ; DEC
142e: 04                         ; SWAP
142f: 10                         ; CSTORE
1430: 0c                         ; RET
1431: 0b 15 01 00 00             ; CALL C, (0115)
1436: 5d 5c                      ; BRANCHB 92 (13db)
1438: 0c                         ; RET
;
1439: 18 9b f0 00 00             ; DICTP VARIABLE (f09b)
143e: 0b 58 10 00 00             ; CALL CREATE-NAME (1058)
1443: 0b fd 00 00 00             ; CALL HERE (00fd)
1448: 0e 02                      ; CLITERAL 2
144a: 11                         ; ADD
144b: 0e 04                      ; CLITERAL 4
144d: 11                         ; ADD
144e: 0b 63 01 00 00             ; CALL LITERAL (0163)
1453: 0b 2d 01 00 00             ; CALL , (012d)
1458: 0b d4 01 00 00             ; CALL RET (01d4)
145d: 0e 00                      ; CLITERAL 0
145f: 0b 2d 01 00 00             ; CALL , (012d)
1464: 0c                         ; RET
;
1465: 18 8e f0 00 00             ; DICTP oo (f08e)
146a: 33                         ; RESET
146b: 0c                         ; RET
;
; End of code, Dictionary:
;
f08e: 9b f0 00 00                ; oo - (next: f09b VARIABLE)
f092: 65 14 00 00 00             ; XT=1465, flags=00
f097: 02 6f 6f 00                ; 2, oo
;
f09b: ae f0 00 00                ; VARIABLE - (next: f0ae ")
f09f: 39 14 00 00 00             ; XT=1439, flags=00
f0a4: 08 56 41 52 49 41 42 4c 45 00 ; 8, VARIABLE
;
f0ae: ba f0 00 00                ; " - (next: f0ba I")
f0b2: b7 13 00 00 01             ; XT=13b7, flags=01
f0b7: 01 22 00                   ; 1, "
;
f0ba: c7 f0 00 00                ; I" - (next: f0c7 STR.NULLTERM)
f0be: 65 13 00 00 00             ; XT=1365, flags=00
f0c3: 02 49 22 00                ; 2, I"
;
f0c7: de f0 00 00                ; STR.NULLTERM - (next: f0de STR.CATC)
f0cb: 56 13 00 00 00             ; XT=1356, flags=00
f0d0: 0c 53 54 52 2e 4e 55 4c 4c 54 45 52 4d 00 ; 12, STR.NULLTERM
;
f0de: f1 f0 00 00                ; STR.CATC - (next: f0f1 STR.LEN)
f0e2: 40 13 00 00 00             ; XT=1340, flags=00
f0e7: 08 53 54 52 2e 43 41 54 43 00 ; 8, STR.CATC
;
f0f1: 03 f1 00 00                ; STR.LEN - (next: f103 STR.EMPTY)
f0f5: 38 13 00 00 02             ; XT=1338, flags=02
f0fa: 07 53 54 52 2e 4c 45 4e 00 ; 7, STR.LEN
;
f103: 17 f1 00 00                ; STR.EMPTY - (next: f117 THRU)
f107: 2e 13 00 00 02             ; XT=132e, flags=02
f10c: 09 53 54 52 2e 45 4d 50 54 59 00 ; 9, STR.EMPTY
;
f117: 26 f1 00 00                ; THRU - (next: f126 LOAD)
f11b: 0e 13 00 00 00             ; XT=130e, flags=00
f120: 04 54 48 52 55 00          ; 4, THRU
;
f126: 35 f1 00 00                ; LOAD - (next: f135 load-file)
f12a: be 12 00 00 00             ; XT=12be, flags=00
f12f: 04 4c 4f 41 44 00          ; 4, LOAD
;
f135: 49 f1 00 00                ; load-file - (next: f149 load-sub)
f139: 85 12 00 00 00             ; XT=1285, flags=00
f13e: 09 6c 6f 61 64 2d 66 69 6c 65 00 ; 9, load-file
;
f149: 5c f1 00 00                ; load-sub - (next: f15c file-getLine)
f14d: 5b 12 00 00 00             ; XT=125b, flags=00
f152: 08 6c 6f 61 64 2d 73 75 62 00 ; 8, load-sub
;
f15c: 73 f1 00 00                ; file-getLine - (next: f173 main)
f160: 45 12 00 00 00             ; XT=1245, flags=00
f165: 0c 66 69 6c 65 2d 67 65 74 4c 69 6e 65 00 ; 12, file-getLine
;
f173: 82 f1 00 00                ; main - (next: f182 mainLoop)
f177: 12 12 00 00 00             ; XT=1212, flags=00
f17c: 04 6d 61 69 6e 00          ; 4, main
;
f182: 95 f1 00 00                ; mainLoop - (next: f195 sys-info)
f186: d3 11 00 00 00             ; XT=11d3, flags=00
f18b: 08 6d 61 69 6e 4c 6f 6f 70 00 ; 8, mainLoop
;
f195: a8 f1 00 00                ; sys-info - (next: f1a8 .FREE)
f199: a1 11 00 00 00             ; XT=11a1, flags=00
f19e: 08 73 79 73 2d 69 6e 66 6f 00 ; 8, sys-info
;
f1a8: b8 f1 00 00                ; .FREE - (next: f1b8 FREE)
f1ac: 7d 11 00 00 00             ; XT=117d, flags=00
f1b1: 05 2e 46 52 45 45 00       ; 5, .FREE
;
f1b8: c7 f1 00 00                ; FREE - (next: f1c7 C?)
f1bc: 6c 11 00 00 00             ; XT=116c, flags=00
f1c1: 04 46 52 45 45 00          ; 4, FREE
;
f1c7: d4 f1 00 00                ; C? - (next: f1d4 ?)
f1cb: 60 11 00 00 00             ; XT=1160, flags=00
f1d0: 02 43 3f 00                ; 2, C?
;
f1d4: e0 f1 00 00                ; ? - (next: f1e0 ALLOT)
f1d8: 54 11 00 00 00             ; XT=1154, flags=00
f1dd: 01 3f 00                   ; 1, ?
;
f1e0: f0 f1 00 00                ; ALLOT - (next: f1f0 resetState)
f1e4: 42 11 00 00 00             ; XT=1142, flags=00
f1e9: 05 41 4c 4c 4f 54 00       ; 5, ALLOT
;
f1f0: 05 f2 00 00                ; resetState - (next: f205 close-input)
f1f4: 1c 11 00 00 00             ; XT=111c, flags=00
f1f9: 0a 72 65 73 65 74 53 74 61 74 65 00 ; 10, resetState
;
f205: 1b f2 00 00                ; close-input - (next: f21b ForgetLast)
f209: 07 11 00 00 00             ; XT=1107, flags=00
f20e: 0b 63 6c 6f 73 65 2d 69 6e 70 75 74 00 ; 11, close-input
;
f21b: 30 f2 00 00                ; ForgetLast - (next: f230 ;)
f21f: e6 10 00 00 00             ; XT=10e6, flags=00
f224: 0a 46 6f 72 67 65 74 4c 61 73 74 00 ; 10, ForgetLast
;
f230: 3c f2 00 00                ; ; - (next: f23c :NONAME)
f234: d1 10 00 00 01             ; XT=10d1, flags=01
f239: 01 3b 00                   ; 1, ;
;
f23c: 4e f2 00 00                ; :NONAME - (next: f24e :)
f240: bc 10 00 00 00             ; XT=10bc, flags=00
f245: 07 3a 4e 4f 4e 41 4d 45 00 ; 7, :NONAME
;
f24e: 5a f2 00 00                ; : - (next: f25a CREATE-NAME)
f252: a7 10 00 00 00             ; XT=10a7, flags=00
f257: 01 3a 00                   ; 1, :
;
f25a: 70 f2 00 00                ; CREATE-NAME - (next: f270 Define-Word)
f25e: 58 10 00 00 00             ; XT=1058, flags=00
f263: 0b 43 52 45 41 54 45 2d 4e 41 4d 45 00 ; 11, CREATE-NAME
;
f270: 86 f2 00 00                ; Define-Word - (next: f286 strcpy2c)
f274: 0e 10 00 00 00             ; XT=100e, flags=00
f279: 0b 44 65 66 69 6e 65 2d 57 6f 72 64 00 ; 11, Define-Word
;
f286: 99 f2 00 00                ; strcpy2c - (next: f299 getLine)
f28a: e0 0f 00 00 00             ; XT=0fe0, flags=00
f28f: 08 73 74 72 63 70 79 32 63 00 ; 8, strcpy2c
;
f299: ab f2 00 00                ; getLine - (next: f2ab Pad)
f29d: 42 0f 00 00 00             ; XT=0f42, flags=00
f2a2: 07 67 65 74 4c 69 6e 65 00 ; 7, getLine
;
f2ab: b9 f2 00 00                ; Pad - (next: f2b9 executeInput)
f2af: 19 0f 00 00 00             ; XT=0f19, flags=00
f2b4: 03 50 61 64 00             ; 3, Pad
;
f2b9: d0 f2 00 00                ; executeInput - (next: f2d0 executeWord)
f2bd: de 0e 00 00 00             ; XT=0ede, flags=00
f2c2: 0c 65 78 65 63 75 74 65 49 6e 70 75 74 00 ; 12, executeInput
;
f2d0: e6 f2 00 00                ; executeWord - (next: f2e6 [COMPILE])
f2d4: 62 0e 00 00 00             ; XT=0e62, flags=00
f2d9: 0b 65 78 65 63 75 74 65 57 6f 72 64 00 ; 11, executeWord
;
f2e6: fa f2 00 00                ; [COMPILE] - (next: f2fa cstr,)
f2ea: 44 0e 00 00 00             ; XT=0e44, flags=00
f2ef: 09 5b 43 4f 4d 50 49 4c 45 5d 00 ; 9, [COMPILE]
;
f2fa: 0a f3 00 00                ; cstr, - (next: f30a strlen)
f2fe: 33 0e 00 00 00             ; XT=0e33, flags=00
f303: 05 63 73 74 72 2c 00       ; 5, cstr,
;
f30a: 1b f3 00 00                ; strlen - (next: f31b Copy.INLINE)
f30e: 1a 0e 00 00 00             ; XT=0e1a, flags=00
f313: 06 73 74 72 6c 65 6e 00    ; 6, strlen
;
f31b: 31 f3 00 00                ; Copy.INLINE - (next: f331 DOES>)
f31f: fe 0d 00 00 00             ; XT=0dfe, flags=00
f324: 0b 43 6f 70 79 2e 49 4e 4c 49 4e 45 00 ; 11, Copy.INLINE
;
f331: 41 f3 00 00                ; DOES> - (next: f341 (inline))
f335: e9 0d 00 00 00             ; XT=0de9, flags=00
f33a: 05 44 4f 45 53 3e 00       ; 5, DOES>
;
f341: 54 f3 00 00                ; (inline) - (next: f354 find.ret)
f345: ce 0d 00 00 00             ; XT=0dce, flags=00
f34a: 08 28 69 6e 6c 69 6e 65 29 00 ; 8, (inline)
;
f354: 67 f3 00 00                ; find.ret - (next: f367 EXECUTE)
f358: bd 0d 00 00 00             ; XT=0dbd, flags=00
f35d: 08 66 69 6e 64 2e 72 65 74 00 ; 8, find.ret
;
f367: 79 f3 00 00                ; EXECUTE - (next: f379 .lastx)
f36b: b4 0d 00 00 00             ; XT=0db4, flags=00
f370: 07 45 58 45 43 55 54 45 00 ; 7, EXECUTE
;
f379: 8a f3 00 00                ; .lastx - (next: f38a NUM-WORDS)
f37d: 95 0d 00 00 00             ; XT=0d95, flags=00
f382: 06 2e 6c 61 73 74 78 00    ; 6, .lastx
;
f38a: 9e f3 00 00                ; NUM-WORDS - (next: f39e WORDSV)
f38e: 73 0d 00 00 00             ; XT=0d73, flags=00
f393: 09 4e 55 4d 2d 57 4f 52 44 53 00 ; 9, NUM-WORDS
;
f39e: af f3 00 00                ; WORDSV - (next: f3af .WORD-LONG)
f3a2: 49 0d 00 00 00             ; XT=0d49, flags=00
f3a7: 06 57 4f 52 44 53 56 00    ; 6, WORDSV
;
f3af: c4 f3 00 00                ; .WORD-LONG - (next: f3c4 WORDS)
f3b3: bf 0c 00 00 00             ; XT=0cbf, flags=00
f3b8: 0a 2e 57 4f 52 44 2d 4c 4f 4e 47 00 ; 10, .WORD-LONG
;
f3c4: d4 f3 00 00                ; WORDS - (next: f3d4 .WORD-SHORT)
f3c8: a0 0c 00 00 00             ; XT=0ca0, flags=00
f3cd: 05 57 4f 52 44 53 00       ; 5, WORDS
;
f3d4: ea f3 00 00                ; .WORD-SHORT - (next: f3ea .(LAST))
f3d8: 8b 0c 00 00 00             ; XT=0c8b, flags=00
f3dd: 0b 2e 57 4f 52 44 2d 53 48 4f 52 54 00 ; 11, .WORD-SHORT
;
f3ea: fc f3 00 00                ; .(LAST) - (next: f3fc .(HERE))
f3ee: 54 0c 00 00 00             ; XT=0c54, flags=00
f3f3: 07 2e 28 4c 41 53 54 29 00 ; 7, .(LAST)
;
f3fc: 0e f4 00 00                ; .(HERE) - (next: f40e .(MEM_SZ))
f400: 1d 0c 00 00 00             ; XT=0c1d, flags=00
f405: 07 2e 28 48 45 52 45 29 00 ; 7, .(HERE)
;
f40e: 22 f4 00 00                ; .(MEM_SZ) - (next: f422 .S)
f412: e4 0b 00 00 00             ; XT=0be4, flags=00
f417: 09 2e 28 4d 45 4d 5f 53 5a 29 00 ; 9, .(MEM_SZ)
;
f422: 2f f4 00 00                ; .S - (next: f42f MAX)
f426: 87 0b 00 00 00             ; XT=0b87, flags=00
f42b: 02 2e 53 00                ; 2, .S
;
f42f: 3d f4 00 00                ; MAX - (next: f43d MIN)
f433: 7a 0b 00 00 00             ; XT=0b7a, flags=00
f438: 03 4d 41 58 00             ; 3, MAX
;
f43d: 4b f4 00 00                ; MIN - (next: f44b BINARY.)
f441: 6d 0b 00 00 00             ; XT=0b6d, flags=00
f446: 03 4d 49 4e 00             ; 3, MIN
;
f44b: 5d f4 00 00                ; BINARY. - (next: f45d DECIMAL.3)
f44f: 50 0b 00 00 00             ; XT=0b50, flags=00
f454: 07 42 49 4e 41 52 59 2e 00 ; 7, BINARY.
;
f45d: 71 f4 00 00                ; DECIMAL.3 - (next: f471 DECIMAL.)
f461: 33 0b 00 00 00             ; XT=0b33, flags=00
f466: 09 44 45 43 49 4d 41 4c 2e 33 00 ; 9, DECIMAL.3
;
f471: 84 f4 00 00                ; DECIMAL. - (next: f484 HEX.4)
f475: 16 0b 00 00 00             ; XT=0b16, flags=00
f47a: 08 44 45 43 49 4d 41 4c 2e 00 ; 8, DECIMAL.
;
f484: 94 f4 00 00                ; HEX.4 - (next: f494 HEX.2)
f488: f9 0a 00 00 00             ; XT=0af9, flags=00
f48d: 05 48 45 58 2e 34 00       ; 5, HEX.4
;
f494: a4 f4 00 00                ; HEX.2 - (next: f4a4 HEX.)
f498: dc 0a 00 00 00             ; XT=0adc, flags=00
f49d: 05 48 45 58 2e 32 00       ; 5, HEX.2
;
f4a4: b3 f4 00 00                ; HEX. - (next: f4b3 .4)
f4a8: bf 0a 00 00 00             ; XT=0abf, flags=00
f4ad: 04 48 45 58 2e 00          ; 4, HEX.
;
f4b3: c0 f4 00 00                ; .4 - (next: f4c0 .3)
f4b7: 96 0a 00 00 00             ; XT=0a96, flags=00
f4bc: 02 2e 34 00                ; 2, .4
;
f4c0: cd f4 00 00                ; .3 - (next: f4cd .2)
f4c4: 72 0a 00 00 00             ; XT=0a72, flags=00
f4c9: 02 2e 33 00                ; 2, .3
;
f4cd: da f4 00 00                ; .2 - (next: f4da .)
f4d1: 53 0a 00 00 00             ; XT=0a53, flags=00
f4d6: 02 2e 32 00                ; 2, .2
;
f4da: e6 f4 00 00                ; . - (next: f4e6 (.))
f4de: 45 0a 00 00 00             ; XT=0a45, flags=00
f4e3: 01 2e 00                   ; 1, .
;
f4e6: f4 f4 00 00                ; (.) - (next: f4f4 #P)
f4ea: 2b 0a 00 00 00             ; XT=0a2b, flags=00
f4ef: 03 28 2e 29 00             ; 3, (.)
;
f4f4: 01 f5 00 00                ; #P - (next: f501 #P-)
f4f8: 1a 0a 00 00 00             ; XT=0a1a, flags=00
f4fd: 02 23 50 00                ; 2, #P
;
f501: 0f f5 00 00                ; #P- - (next: f50f #>)
f505: 08 0a 00 00 00             ; XT=0a08, flags=00
f50a: 03 23 50 2d 00             ; 3, #P-
;
f50f: 1c f5 00 00                ; #> - (next: f51c #S)
f513: 02 0a 00 00 00             ; XT=0a02, flags=00
f518: 02 23 3e 00                ; 2, #>
;
f51c: 29 f5 00 00                ; #S - (next: f529 #)
f520: f3 09 00 00 00             ; XT=09f3, flags=00
f525: 02 23 53 00                ; 2, #S
;
f529: 35 f5 00 00                ; # - (next: f535 <#)
f52d: ce 09 00 00 00             ; XT=09ce, flags=00
f532: 01 23 00                   ; 1, #
;
f535: 42 f5 00 00                ; <# - (next: f542 isNumber?)
f539: 9c 09 00 00 00             ; XT=099c, flags=00
f53e: 02 3c 23 00                ; 2, <#
;
f542: 56 f5 00 00                ; isNumber? - (next: f556 parse-char)
f546: e8 08 00 00 00             ; XT=08e8, flags=00
f54b: 09 69 73 4e 75 6d 62 65 72 3f 00 ; 9, isNumber?
;
f556: 6b f5 00 00                ; parse-char - (next: f56b ABS)
f55a: c8 08 00 00 00             ; XT=08c8, flags=00
f55f: 0a 70 61 72 73 65 2d 63 68 61 72 00 ; 10, parse-char
;
f56b: 79 f5 00 00                ; ABS - (next: f579 NEGATE)
f56f: b7 08 00 00 00             ; XT=08b7, flags=00
f574: 03 41 42 53 00             ; 3, ABS
;
f579: 8a f5 00 00                ; NEGATE - (next: f58a is-num-char?)
f57d: ad 08 00 00 00             ; XT=08ad, flags=00
f582: 06 4e 45 47 41 54 45 00    ; 6, NEGATE
;
f58a: a1 f5 00 00                ; is-num-char? - (next: f5a1 findInDict)
f58e: 71 08 00 00 00             ; XT=0871, flags=00
f593: 0c 69 73 2d 6e 75 6d 2d 63 68 61 72 3f 00 ; 12, is-num-char?
;
f5a1: b6 f5 00 00                ; findInDict - (next: f5b6 DICT.GetINLINE)
f5a5: 38 08 00 00 00             ; XT=0838, flags=00
f5aa: 0a 66 69 6e 64 49 6e 44 69 63 74 00 ; 10, findInDict
;
f5b6: cf f5 00 00                ; DICT.GetINLINE - (next: f5cf DICT.GetIMMEDIATE)
f5ba: 28 08 00 00 00             ; XT=0828, flags=00
f5bf: 0e 44 49 43 54 2e 47 65 74 49 4e 4c 49 4e 45 00 ; 14, DICT.GetINLINE
;
f5cf: eb f5 00 00                ; DICT.GetIMMEDIATE - (next: f5eb FLAGS.ISINLINE?)
f5d3: 18 08 00 00 00             ; XT=0818, flags=00
f5d8: 11 44 49 43 54 2e 47 65 74 49 4d 4d 45 44 49 41 54 45 00 ; 17, DICT.GetIMMEDIATE
;
f5eb: 05 f6 00 00                ; FLAGS.ISINLINE? - (next: f605 FLAGS.ISIMMEDIATE?)
f5ef: 0f 08 00 00 00             ; XT=080f, flags=00
f5f4: 0f 46 4c 41 47 53 2e 49 53 49 4e 4c 49 4e 45 3f 00 ; 15, FLAGS.ISINLINE?
;
f605: 22 f6 00 00                ; FLAGS.ISIMMEDIATE? - (next: f622 XT.GetDICTP)
f609: 06 08 00 00 00             ; XT=0806, flags=00
f60e: 12 46 4c 41 47 53 2e 49 53 49 4d 4d 45 44 49 41 54 45 3f 00 ; 18, FLAGS.ISIMMEDIATE?
;
f622: 38 f6 00 00                ; XT.GetDICTP - (next: f638 DICTP>NAME)
f626: f3 07 00 00 00             ; XT=07f3, flags=00
f62b: 0b 58 54 2e 47 65 74 44 49 43 54 50 00 ; 11, XT.GetDICTP
;
f638: 4d f6 00 00                ; DICTP>NAME - (next: f64d DICT.GetFLAGS)
f63c: e6 07 00 00 00             ; XT=07e6, flags=00
f641: 0a 44 49 43 54 50 3e 4e 41 4d 45 00 ; 10, DICTP>NAME
;
f64d: 65 f6 00 00                ; DICT.GetFLAGS - (next: f665 DICT.GetXT)
f651: da 07 00 00 00             ; XT=07da, flags=00
f656: 0d 44 49 43 54 2e 47 65 74 46 4c 41 47 53 00 ; 13, DICT.GetFLAGS
;
f665: 7a f6 00 00                ; DICT.GetXT - (next: f67a NAME>DICT)
f669: ce 07 00 00 00             ; XT=07ce, flags=00
f66e: 0a 44 49 43 54 2e 47 65 74 58 54 00 ; 10, DICT.GetXT
;
f67a: 8e f6 00 00                ; NAME>DICT - (next: f68e FLAGS>DICT)
f67e: c1 07 00 00 00             ; XT=07c1, flags=00
f683: 09 4e 41 4d 45 3e 44 49 43 54 00 ; 9, NAME>DICT
;
f68e: a3 f6 00 00                ; FLAGS>DICT - (next: f6a3 XT>DICT)
f692: b5 07 00 00 00             ; XT=07b5, flags=00
f697: 0a 46 4c 41 47 53 3e 44 49 43 54 00 ; 10, FLAGS>DICT
;
f6a3: b5 f6 00 00                ; XT>DICT - (next: f6b5 NEXT>DICT)
f6a7: ac 07 00 00 00             ; XT=07ac, flags=00
f6ac: 07 58 54 3e 44 49 43 54 00 ; 7, XT>DICT
;
f6b5: c9 f6 00 00                ; NEXT>DICT - (next: f6c9 DICT>NAME)
f6b9: a6 07 00 00 00             ; XT=07a6, flags=00
f6be: 09 4e 45 58 54 3e 44 49 43 54 00 ; 9, NEXT>DICT
;
f6c9: dd f6 00 00                ; DICT>NAME - (next: f6dd DICT>FLAGS)
f6cd: 9a 07 00 00 00             ; XT=079a, flags=00
f6d2: 09 44 49 43 54 3e 4e 41 4d 45 00 ; 9, DICT>NAME
;
f6dd: f2 f6 00 00                ; DICT>FLAGS - (next: f6f2 DICT>XT)
f6e1: 8e 07 00 00 00             ; XT=078e, flags=00
f6e6: 0a 44 49 43 54 3e 46 4c 41 47 53 00 ; 10, DICT>FLAGS
;
f6f2: 04 f7 00 00                ; DICT>XT - (next: f704 DICT>NEXT)
f6f6: 85 07 00 00 00             ; XT=0785, flags=00
f6fb: 07 44 49 43 54 3e 58 54 00 ; 7, DICT>XT
;
f704: 18 f7 00 00                ; DICT>NEXT - (next: f718 getOneWord)
f708: 7f 07 00 00 00             ; XT=077f, flags=00
f70d: 09 44 49 43 54 3e 4e 45 58 54 00 ; 9, DICT>NEXT
;
f718: 2d f7 00 00                ; getOneWord - (next: f72d char-find)
f71c: 59 07 00 00 00             ; XT=0759, flags=00
f721: 0a 67 65 74 4f 6e 65 57 6f 72 64 00 ; 10, getOneWord
;
f72d: 41 f7 00 00                ; char-find - (next: f741 to-lower)
f731: 1e 07 00 00 00             ; XT=071e, flags=00
f736: 09 63 68 61 72 2d 66 69 6e 64 00 ; 9, char-find
;
f741: 54 f7 00 00                ; to-lower - (next: f754 to-upper)
f745: 07 07 00 00 00             ; XT=0707, flags=00
f74a: 08 74 6f 2d 6c 6f 77 65 72 00 ; 8, to-lower
;
f754: 67 f7 00 00                ; to-upper - (next: f767 skipWS)
f758: f0 06 00 00 00             ; XT=06f0, flags=00
f75d: 08 74 6f 2d 75 70 70 65 72 00 ; 8, to-upper
;
f767: 78 f7 00 00                ; skipWS - (next: f778 BETWEEN)
f76b: d6 06 00 00 00             ; XT=06d6, flags=00
f770: 06 73 6b 69 70 57 53 00    ; 6, skipWS
;
f778: 8a f7 00 00                ; BETWEEN - (next: f78a CR)
f77c: c3 06 00 00 00             ; XT=06c3, flags=00
f781: 07 42 45 54 57 45 45 4e 00 ; 7, BETWEEN
;
f78a: 97 f7 00 00                ; CR - (next: f797 CRLF)
f78e: b7 06 00 00 02             ; XT=06b7, flags=02
f793: 02 43 52 00                ; 2, CR
;
f797: a6 f7 00 00                ; CRLF - (next: f7a6 BL)
f79b: ab 06 00 00 02             ; XT=06ab, flags=02
f7a0: 04 43 52 4c 46 00          ; 4, CRLF
;
f7a6: b3 f7 00 00                ; BL - (next: f7b3 SPACE)
f7aa: a2 06 00 00 02             ; XT=06a2, flags=02
f7af: 02 42 4c 00                ; 2, BL
;
f7b3: c3 f7 00 00                ; SPACE - (next: f7c3 ()
f7b7: 99 06 00 00 02             ; XT=0699, flags=02
f7bc: 05 53 50 41 43 45 00       ; 5, SPACE
;
f7c3: cf f7 00 00                ; ( - (next: f7cf \)
f7c7: 5d 06 00 00 01             ; XT=065d, flags=01
f7cc: 01 28 00                   ; 1, (
;
f7cf: db f7 00 00                ; \ - (next: f7db CT)
f7d3: 4e 06 00 00 01             ; XT=064e, flags=01
f7d8: 01 5c 00                   ; 1, \
;
f7db: e8 f7 00 00                ; CT - (next: f7e8 TYPE)
f7df: 3e 06 00 00 00             ; XT=063e, flags=00
f7e4: 02 43 54 00                ; 2, CT
;
f7e8: f7 f7 00 00                ; TYPE - (next: f7f7 COUNT)
f7ec: 28 06 00 00 00             ; XT=0628, flags=00
f7f1: 04 54 59 50 45 00          ; 4, TYPE
;
f7f7: 07 f8 00 00                ; COUNT - (next: f807 FALSE)
f7fb: 1e 06 00 00 00             ; XT=061e, flags=00
f800: 05 43 4f 55 4e 54 00       ; 5, COUNT
;
f807: 17 f8 00 00                ; FALSE - (next: f817 TRUE)
f80b: 16 06 00 00 02             ; XT=0616, flags=02
f810: 05 46 41 4c 53 45 00       ; 5, FALSE
;
f817: 26 f8 00 00                ; TRUE - (next: f826 >=)
f81b: 0b 06 00 00 02             ; XT=060b, flags=02
f820: 04 54 52 55 45 00          ; 4, TRUE
;
f826: 33 f8 00 00                ; >= - (next: f833 <=)
f82a: 03 06 00 00 02             ; XT=0603, flags=02
f82f: 02 3e 3d 00                ; 2, >=
;
f833: 40 f8 00 00                ; <= - (next: f840 <>)
f837: fb 05 00 00 02             ; XT=05fb, flags=02
f83c: 02 3c 3d 00                ; 2, <=
;
f840: 4d f8 00 00                ; <> - (next: f84d 0=)
f844: f3 05 00 00 02             ; XT=05f3, flags=02
f849: 02 3c 3e 00                ; 2, <>
;
f84d: 5a f8 00 00                ; 0= - (next: f85a C--)
f851: ec 05 00 00 02             ; XT=05ec, flags=02
f856: 02 30 3d 00                ; 2, 0=
;
f85a: 68 f8 00 00                ; C-- - (next: f868 C++)
f85e: e1 05 00 00 02             ; XT=05e1, flags=02
f863: 03 43 2d 2d 00             ; 3, C--
;
f868: 76 f8 00 00                ; C++ - (next: f876 --)
f86c: d6 05 00 00 02             ; XT=05d6, flags=02
f871: 03 43 2b 2b 00             ; 3, C++
;
f876: 83 f8 00 00                ; -- - (next: f883 ++)
f87a: cb 05 00 00 02             ; XT=05cb, flags=02
f87f: 02 2d 2d 00                ; 2, --
;
f883: 90 f8 00 00                ; ++ - (next: f890 -!)
f887: c0 05 00 00 02             ; XT=05c0, flags=02
f88c: 02 2b 2b 00                ; 2, ++
;
f890: 9d f8 00 00                ; -! - (next: f89d -=)
f894: b3 05 00 00 00             ; XT=05b3, flags=00
f899: 02 2d 21 00                ; 2, -!
;
f89d: aa f8 00 00                ; -= - (next: f8aa +=)
f8a1: a7 05 00 00 02             ; XT=05a7, flags=02
f8a6: 02 2d 3d 00                ; 2, -=
;
f8aa: b7 f8 00 00                ; += - (next: f8b7 2/)
f8ae: 9c 05 00 00 02             ; XT=059c, flags=02
f8b3: 02 2b 3d 00                ; 2, +=
;
f8b7: c4 f8 00 00                ; 2/ - (next: f8c4 2*)
f8bb: 91 05 00 00 02             ; XT=0591, flags=02
f8c0: 02 32 2f 00                ; 2, 2/
;
f8c4: d1 f8 00 00                ; 2* - (next: f8d1 1-)
f8c8: 88 05 00 00 02             ; XT=0588, flags=02
f8cd: 02 32 2a 00                ; 2, 2*
;
f8d1: de f8 00 00                ; 1- - (next: f8de 1+)
f8d5: 81 05 00 00 02             ; XT=0581, flags=02
f8da: 02 31 2d 00                ; 2, 1-
;
f8de: eb f8 00 00                ; 1+ - (next: f8eb MOD)
f8e2: 7a 05 00 00 02             ; XT=057a, flags=02
f8e7: 02 31 2b 00                ; 2, 1+
;
f8eb: f9 f8 00 00                ; MOD - (next: f8f9 /)
f8ef: 72 05 00 00 02             ; XT=0572, flags=02
f8f4: 03 4d 4f 44 00             ; 3, MOD
;
f8f9: 05 f9 00 00                ; / - (next: f905 -ROT)
f8fd: 69 05 00 00 02             ; XT=0569, flags=02
f902: 01 2f 00                   ; 1, /
;
f905: 14 f9 00 00                ; -ROT - (next: f914 ROT)
f909: 5f 05 00 00 02             ; XT=055f, flags=02
f90e: 04 2d 52 4f 54 00          ; 4, -ROT
;
f914: 22 f9 00 00                ; ROT - (next: f922 NIP)
f918: 55 05 00 00 02             ; XT=0555, flags=02
f91d: 03 52 4f 54 00             ; 3, ROT
;
f922: 30 f9 00 00                ; NIP - (next: f930 TUCK)
f926: 4d 05 00 00 02             ; XT=054d, flags=02
f92b: 03 4e 49 50 00             ; 3, NIP
;
f930: 3f f9 00 00                ; TUCK - (next: f93f 2DROP)
f934: 45 05 00 00 02             ; XT=0545, flags=02
f939: 04 54 55 43 4b 00          ; 4, TUCK
;
f93f: 4f f9 00 00                ; 2DROP - (next: f94f 2DUP)
f943: 3d 05 00 00 02             ; XT=053d, flags=02
f948: 05 32 44 52 4f 50 00       ; 5, 2DROP
;
f94f: 5e f9 00 00                ; 2DUP - (next: f95e ?DUP)
f953: 35 05 00 00 02             ; XT=0535, flags=02
f958: 04 32 44 55 50 00          ; 4, 2DUP
;
f95e: 6d f9 00 00                ; ?DUP - (next: f96d RDROP)
f962: 2b 05 00 00 00             ; XT=052b, flags=00
f967: 04 3f 44 55 50 00          ; 4, ?DUP
;
f96d: 7d f9 00 00                ; RDROP - (next: f97d R@)
f971: 23 05 00 00 02             ; XT=0523, flags=02
f976: 05 52 44 52 4f 50 00       ; 5, RDROP
;
f97d: 8a f9 00 00                ; R@ - (next: f98a DEBUG-OFF)
f981: 1c 05 00 00 02             ; XT=051c, flags=02
f986: 02 52 40 00                ; 2, R@
;
f98a: 9e f9 00 00                ; DEBUG-OFF - (next: f99e DEBUG-ON)
f98e: 13 05 00 00 02             ; XT=0513, flags=02
f993: 09 44 45 42 55 47 2d 4f 46 46 00 ; 9, DEBUG-OFF
;
f99e: b1 f9 00 00                ; DEBUG-ON - (next: f9b1 TRACE-OFF)
f9a2: 0a 05 00 00 02             ; XT=050a, flags=02
f9a7: 08 44 45 42 55 47 2d 4f 4e 00 ; 8, DEBUG-ON
;
f9b1: c5 f9 00 00                ; TRACE-OFF - (next: f9c5 TRACE-ON)
f9b5: 01 05 00 00 02             ; XT=0501, flags=02
f9ba: 09 54 52 41 43 45 2d 4f 46 46 00 ; 9, TRACE-OFF
;
f9c5: d8 f9 00 00                ; TRACE-ON - (next: f9d8 MEM_SZ)
f9c9: f8 04 00 00 02             ; XT=04f8, flags=02
f9ce: 08 54 52 41 43 45 2d 4f 4e 00 ; 8, TRACE-ON
;
f9d8: e9 f9 00 00                ; MEM_SZ - (next: f9e9 LEAVE)
f9dc: ec 04 00 00 00             ; XT=04ec, flags=00
f9e1: 06 4d 45 4d 5f 53 5a 00    ; 6, MEM_SZ
;
f9e9: f9 f9 00 00                ; LEAVE - (next: f9f9 UNTIL)
f9ed: da 04 00 00 01             ; XT=04da, flags=01
f9f2: 05 4c 45 41 56 45 00       ; 5, LEAVE
;
f9f9: 09 fa 00 00                ; UNTIL - (next: fa09 WHILE)
f9fd: bc 04 00 00 01             ; XT=04bc, flags=01
fa02: 05 55 4e 54 49 4c 00       ; 5, UNTIL
;
fa09: 19 fa 00 00                ; WHILE - (next: fa19 AGAIN)
fa0d: 9e 04 00 00 01             ; XT=049e, flags=01
fa12: 05 57 48 49 4c 45 00       ; 5, WHILE
;
fa19: 29 fa 00 00                ; AGAIN - (next: fa29 BEGIN)
fa1d: 80 04 00 00 01             ; XT=0480, flags=01
fa22: 05 41 47 41 49 4e 00       ; 5, AGAIN
;
fa29: 39 fa 00 00                ; BEGIN - (next: fa39 THEN)
fa2d: 6e 04 00 00 01             ; XT=046e, flags=01
fa32: 05 42 45 47 49 4e 00       ; 5, BEGIN
;
fa39: 48 fa 00 00                ; THEN - (next: fa48 ELSE)
fa3d: 55 04 00 00 01             ; XT=0455, flags=01
fa42: 04 54 48 45 4e 00          ; 4, THEN
;
fa48: 57 fa 00 00                ; ELSE - (next: fa57 IF)
fa4c: 2a 04 00 00 01             ; XT=042a, flags=01
fa51: 04 45 4c 53 45 00          ; 4, ELSE
;
fa57: 64 fa 00 00                ; IF - (next: fa64 ?COMPILING)
fa5b: 09 04 00 00 01             ; XT=0409, flags=01
fa60: 02 49 46 00                ; 2, IF
;
fa64: 79 fa 00 00                ; ?COMPILING - (next: fa79 OFF)
fa68: fd 03 00 00 00             ; XT=03fd, flags=00
fa6d: 0a 3f 43 4f 4d 50 49 4c 49 4e 47 00 ; 10, ?COMPILING
;
fa79: 87 fa 00 00                ; OFF - (next: fa87 ON)
fa7d: f3 03 00 00 00             ; XT=03f3, flags=00
fa82: 03 4f 46 46 00             ; 3, OFF
;
fa87: 94 fa 00 00                ; ON - (next: fa94 BINARY)
fa8b: e9 03 00 00 00             ; XT=03e9, flags=00
fa90: 02 4f 4e 00                ; 2, ON
;
fa94: a5 fa 00 00                ; BINARY - (next: faa5 OCTAL)
fa98: db 03 00 00 00             ; XT=03db, flags=00
fa9d: 06 42 49 4e 41 52 59 00    ; 6, BINARY
;
faa5: b5 fa 00 00                ; OCTAL - (next: fab5 DECIMAL)
faa9: cd 03 00 00 00             ; XT=03cd, flags=00
faae: 05 4f 43 54 41 4c 00       ; 5, OCTAL
;
fab5: c7 fa 00 00                ; DECIMAL - (next: fac7 HEX)
fab9: bf 03 00 00 00             ; XT=03bf, flags=00
fabe: 07 44 45 43 49 4d 41 4c 00 ; 7, DECIMAL
;
fac7: d5 fa 00 00                ; HEX - (next: fad5 FLAG_INLINE)
facb: b1 03 00 00 00             ; XT=03b1, flags=00
fad0: 03 48 45 58 00             ; 3, HEX
;
fad5: eb fa 00 00                ; FLAG_INLINE - (next: faeb FLAG_IMMEDIATE)
fad9: a9 03 00 00 02             ; XT=03a9, flags=02
fade: 0b 46 4c 41 47 5f 49 4e 4c 49 4e 45 00 ; 11, FLAG_INLINE
;
faeb: 04 fb 00 00                ; FLAG_IMMEDIATE - (next: fb04 CELLS)
faef: a1 03 00 00 02             ; XT=03a1, flags=02
faf4: 0e 46 4c 41 47 5f 49 4d 4d 45 44 49 41 54 45 00 ; 14, FLAG_IMMEDIATE
;
fb04: 14 fb 00 00                ; CELLS - (next: fb14 IMMEDIATE)
fb08: 98 03 00 00 02             ; XT=0398, flags=02
fb0d: 05 43 45 4c 4c 53 00       ; 5, CELLS
;
fb14: 28 fb 00 00                ; IMMEDIATE - (next: fb28 INLINE)
fb18: 80 03 00 00 00             ; XT=0380, flags=00
fb1d: 09 49 4d 4d 45 44 49 41 54 45 00 ; 9, IMMEDIATE
;
fb28: 39 fb 00 00                ; INLINE - (next: fb39 BYE)
fb2c: 68 03 00 00 00             ; XT=0368, flags=00
fb31: 06 49 4e 4c 49 4e 45 00    ; 6, INLINE
;
fb39: 47 fb 00 00                ; BYE - (next: fb47 RESET)
fb3d: 61 03 00 00 02             ; XT=0361, flags=02
fb42: 03 42 59 45 00             ; 3, BYE
;
fb47: 57 fb 00 00                ; RESET - (next: fb57 BREAK)
fb4b: 5a 03 00 00 02             ; XT=035a, flags=02
fb50: 05 52 45 53 45 54 00       ; 5, RESET
;
fb57: 67 fb 00 00                ; BREAK - (next: fb67 NOP)
fb5b: 53 03 00 00 02             ; XT=0353, flags=02
fb60: 05 42 52 45 41 4b 00       ; 5, BREAK
;
fb67: 75 fb 00 00                ; NOP - (next: fb75 BRANCHBNZ)
fb6b: 4c 03 00 00 02             ; XT=034c, flags=02
fb70: 03 4e 4f 50 00             ; 3, NOP
;
fb75: 89 fb 00 00                ; BRANCHBNZ - (next: fb89 BRANCHBZ)
fb79: 3f 03 00 00 00             ; XT=033f, flags=00
fb7e: 09 42 52 41 4e 43 48 42 4e 5a 00 ; 9, BRANCHBNZ
;
fb89: 9c fb 00 00                ; BRANCHBZ - (next: fb9c BRANCHB)
fb8d: 32 03 00 00 00             ; XT=0332, flags=00
fb92: 08 42 52 41 4e 43 48 42 5a 00 ; 8, BRANCHBZ
;
fb9c: ae fb 00 00                ; BRANCHB - (next: fbae BRANCHFNZ)
fba0: 25 03 00 00 00             ; XT=0325, flags=00
fba5: 07 42 52 41 4e 43 48 42 00 ; 7, BRANCHB
;
fbae: c2 fb 00 00                ; BRANCHFNZ - (next: fbc2 BRANCHFZ)
fbb2: 18 03 00 00 00             ; XT=0318, flags=00
fbb7: 09 42 52 41 4e 43 48 46 4e 5a 00 ; 9, BRANCHFNZ
;
fbc2: d5 fb 00 00                ; BRANCHFZ - (next: fbd5 BRANCHF)
fbc6: 0b 03 00 00 00             ; XT=030b, flags=00
fbcb: 08 42 52 41 4e 43 48 46 5a 00 ; 8, BRANCHFZ
;
fbd5: e7 fb 00 00                ; BRANCHF - (next: fbe7 OPEN-BLOCK)
fbd9: fe 02 00 00 00             ; XT=02fe, flags=00
fbde: 07 42 52 41 4e 43 48 46 00 ; 7, BRANCHF
;
fbe7: fc fb 00 00                ; OPEN-BLOCK - (next: fbfc +!)
fbeb: f7 02 00 00 02             ; XT=02f7, flags=02
fbf0: 0a 4f 50 45 4e 2d 42 4c 4f 43 4b 00 ; 10, OPEN-BLOCK
;
fbfc: 09 fc 00 00                ; +! - (next: fc09 >>)
fc00: f0 02 00 00 02             ; XT=02f0, flags=02
fc05: 02 2b 21 00                ; 2, +!
;
fc09: 16 fc 00 00                ; >> - (next: fc16 <<)
fc0d: e9 02 00 00 02             ; XT=02e9, flags=02
fc12: 02 3e 3e 00                ; 2, >>
;
fc16: 23 fc 00 00                ; << - (next: fc23 GETTICK)
fc1a: e2 02 00 00 02             ; XT=02e2, flags=02
fc1f: 02 3c 3c 00                ; 2, <<
;
fc23: 35 fc 00 00                ; GETTICK - (next: fc35 DEC)
fc27: db 02 00 00 02             ; XT=02db, flags=02
fc2c: 07 47 45 54 54 49 43 4b 00 ; 7, GETTICK
;
fc35: 43 fc 00 00                ; DEC - (next: fc43 RDEPTH)
fc39: d4 02 00 00 02             ; XT=02d4, flags=02
fc3e: 03 44 45 43 00             ; 3, DEC
;
fc43: 54 fc 00 00                ; RDEPTH - (next: fc54 INC)
fc47: cd 02 00 00 02             ; XT=02cd, flags=02
fc4c: 06 52 44 45 50 54 48 00    ; 6, RDEPTH
;
fc54: 62 fc 00 00                ; INC - (next: fc62 RFETCH)
fc58: c6 02 00 00 02             ; XT=02c6, flags=02
fc5d: 03 49 4e 43 00             ; 3, INC
;
fc62: 73 fc 00 00                ; RFETCH - (next: fc73 NOT)
fc66: bf 02 00 00 02             ; XT=02bf, flags=02
fc6b: 06 52 46 45 54 43 48 00    ; 6, RFETCH
;
fc73: 81 fc 00 00                ; NOT - (next: fc81 /MOD)
fc77: b8 02 00 00 02             ; XT=02b8, flags=02
fc7c: 03 4e 4f 54 00             ; 3, NOT
;
fc81: 90 fc 00 00                ; /MOD - (next: fc90 COMPAREI)
fc85: b1 02 00 00 02             ; XT=02b1, flags=02
fc8a: 04 2f 4d 4f 44 00          ; 4, /MOD
;
fc90: a3 fc 00 00                ; COMPAREI - (next: fca3 GETCH)
fc94: aa 02 00 00 02             ; XT=02aa, flags=02
fc99: 08 43 4f 4d 50 41 52 45 49 00 ; 8, COMPAREI
;
fca3: b3 fc 00 00                ; GETCH - (next: fcb3 DEPTH)
fca7: a3 02 00 00 02             ; XT=02a3, flags=02
fcac: 05 47 45 54 43 48 00       ; 5, GETCH
;
fcb3: c3 fc 00 00                ; DEPTH - (next: fcc3 PICK)
fcb7: 9c 02 00 00 02             ; XT=029c, flags=02
fcbc: 05 44 45 50 54 48 00       ; 5, DEPTH
;
fcc3: d2 fc 00 00                ; PICK - (next: fcd2 AND)
fcc7: 95 02 00 00 02             ; XT=0295, flags=02
fccc: 04 50 49 43 4b 00          ; 4, PICK
;
fcd2: e0 fc 00 00                ; AND - (next: fce0 LOGLEVEL)
fcd6: 8e 02 00 00 02             ; XT=028e, flags=02
fcdb: 03 41 4e 44 00             ; 3, AND
;
fce0: f3 fc 00 00                ; LOGLEVEL - (next: fcf3 R>)
fce4: 87 02 00 00 02             ; XT=0287, flags=02
fce9: 08 4c 4f 47 4c 45 56 45 4c 00 ; 8, LOGLEVEL
;
fcf3: 00 fd 00 00                ; R> - (next: fd00 >R)
fcf7: 80 02 00 00 02             ; XT=0280, flags=02
fcfc: 02 52 3e 00                ; 2, R>
;
fd00: 0d fd 00 00                ; >R - (next: fd0d FCLOSE)
fd04: 79 02 00 00 02             ; XT=0279, flags=02
fd09: 02 3e 52 00                ; 2, >R
;
fd0d: 1e fd 00 00                ; FCLOSE - (next: fd1e FWRITE)
fd11: 72 02 00 00 02             ; XT=0272, flags=02
fd16: 06 46 43 4c 4f 53 45 00    ; 6, FCLOSE
;
fd1e: 2f fd 00 00                ; FWRITE - (next: fd2f FREADLINE)
fd22: 6b 02 00 00 02             ; XT=026b, flags=02
fd27: 06 46 57 52 49 54 45 00    ; 6, FWRITE
;
fd2f: 43 fd 00 00                ; FREADLINE - (next: fd43 FREAD)
fd33: 64 02 00 00 02             ; XT=0264, flags=02
fd38: 09 46 52 45 41 44 4c 49 4e 45 00 ; 9, FREADLINE
;
fd43: 53 fd 00 00                ; FREAD - (next: fd53 FOPEN)
fd47: 5d 02 00 00 02             ; XT=025d, flags=02
fd4c: 05 46 52 45 41 44 00       ; 5, FREAD
;
fd53: 63 fd 00 00                ; FOPEN - (next: fd63 COMPARE)
fd57: 56 02 00 00 02             ; XT=0256, flags=02
fd5c: 05 46 4f 50 45 4e 00       ; 5, FOPEN
;
fd63: 75 fd 00 00                ; COMPARE - (next: fd75 OVER)
fd67: 4f 02 00 00 02             ; XT=024f, flags=02
fd6c: 07 43 4f 4d 50 41 52 45 00 ; 7, COMPARE
;
fd75: 84 fd 00 00                ; OVER - (next: fd84 EMIT)
fd79: 48 02 00 00 02             ; XT=0248, flags=02
fd7e: 04 4f 56 45 52 00          ; 4, OVER
;
fd84: 93 fd 00 00                ; EMIT - (next: fd93 DICTP)
fd88: 41 02 00 00 02             ; XT=0241, flags=02
fd8d: 04 45 4d 49 54 00          ; 4, EMIT
;
fd93: a3 fd 00 00                ; DICTP - (next: fda3 >)
fd97: 34 02 00 00 02             ; XT=0234, flags=02
fd9c: 05 44 49 43 54 50 00       ; 5, DICTP
;
fda3: af fd 00 00                ; > - (next: fdaf =)
fda7: 2d 02 00 00 02             ; XT=022d, flags=02
fdac: 01 3e 00                   ; 1, >
;
fdaf: bb fd 00 00                ; = - (next: fdbb <)
fdb3: 26 02 00 00 02             ; XT=0226, flags=02
fdb8: 01 3d 00                   ; 1, =
;
fdbb: c7 fd 00 00                ; < - (next: fdc7 /)
fdbf: 1f 02 00 00 02             ; XT=021f, flags=02
fdc4: 01 3c 00                   ; 1, <
;
fdc7: d3 fd 00 00                ; / - (next: fdd3 *)
fdcb: 18 02 00 00 02             ; XT=0218, flags=02
fdd0: 01 2f 00                   ; 1, /
;
fdd3: df fd 00 00                ; * - (next: fddf -)
fdd7: 11 02 00 00 02             ; XT=0211, flags=02
fddc: 01 2a 00                   ; 1, *
;
fddf: eb fd 00 00                ; - - (next: fdeb +)
fde3: 0a 02 00 00 02             ; XT=020a, flags=02
fde8: 01 2d 00                   ; 1, -
;
fdeb: f7 fd 00 00                ; + - (next: fdf7 C!)
fdef: 03 02 00 00 02             ; XT=0203, flags=02
fdf4: 01 2b 00                   ; 1, +
;
fdf7: 04 fe 00 00                ; C! - (next: fe04 C@)
fdfb: fc 01 00 00 02             ; XT=01fc, flags=02
fe00: 02 43 21 00                ; 2, C!
;
fe04: 11 fe 00 00                ; C@ - (next: fe11 CLITERAL)
fe08: f5 01 00 00 02             ; XT=01f5, flags=02
fe0d: 02 43 40 00                ; 2, C@
;
fe11: 24 fe 00 00                ; CLITERAL - (next: fe24 OR)
fe15: e8 01 00 00 02             ; XT=01e8, flags=02
fe1a: 08 43 4c 49 54 45 52 41 4c 00 ; 8, CLITERAL
;
fe24: 31 fe 00 00                ; OR - (next: fe31 RET)
fe28: e1 01 00 00 02             ; XT=01e1, flags=02
fe2d: 02 4f 52 00                ; 2, OR
;
fe31: 3f fe 00 00                ; RET - (next: fe3f CALL)
fe35: d4 01 00 00 00             ; XT=01d4, flags=00
fe3a: 03 52 45 54 00             ; 3, RET
;
fe3f: 4e fe 00 00                ; CALL - (next: fe4e JMPNZ)
fe43: c7 01 00 00 00             ; XT=01c7, flags=00
fe48: 04 43 41 4c 4c 00          ; 4, CALL
;
fe4e: 5e fe 00 00                ; JMPNZ - (next: fe5e JMPZ)
fe52: ba 01 00 00 00             ; XT=01ba, flags=00
fe57: 05 4a 4d 50 4e 5a 00       ; 5, JMPNZ
;
fe5e: 6d fe 00 00                ; JMPZ - (next: fe6d JMP)
fe62: ad 01 00 00 00             ; XT=01ad, flags=00
fe67: 04 4a 4d 50 5a 00          ; 4, JMPZ
;
fe6d: 7b fe 00 00                ; JMP - (next: fe7b SLITERAL)
fe71: a0 01 00 00 00             ; XT=01a0, flags=00
fe76: 03 4a 4d 50 00             ; 3, JMP
;
fe7b: 8e fe 00 00                ; SLITERAL - (next: fe8e DUP)
fe7f: 93 01 00 00 00             ; XT=0193, flags=00
fe84: 08 53 4c 49 54 45 52 41 4c 00 ; 8, SLITERAL
;
fe8e: 9c fe 00 00                ; DUP - (next: fe9c DROP)
fe92: 8c 01 00 00 02             ; XT=018c, flags=02
fe97: 03 44 55 50 00             ; 3, DUP
;
fe9c: ab fe 00 00                ; DROP - (next: feab SWAP)
fea0: 85 01 00 00 02             ; XT=0185, flags=02
fea5: 04 44 52 4f 50 00          ; 4, DROP
;
feab: ba fe 00 00                ; SWAP - (next: feba !)
feaf: 7e 01 00 00 02             ; XT=017e, flags=02
feb4: 04 53 57 41 50 00          ; 4, SWAP
;
feba: c6 fe 00 00                ; ! - (next: fec6 @)
febe: 77 01 00 00 02             ; XT=0177, flags=02
fec3: 01 21 00                   ; 1, !
;
fec6: d2 fe 00 00                ; @ - (next: fed2 LITERAL)
feca: 70 01 00 00 02             ; XT=0170, flags=02
fecf: 01 40 00                   ; 1, @
;
fed2: e4 fe 00 00                ; LITERAL - (next: fee4 ])
fed6: 63 01 00 00 00             ; XT=0163, flags=00
fedb: 07 4c 49 54 45 52 41 4c 00 ; 7, LITERAL
;
fee4: f0 fe 00 00                ; ] - (next: fef0 [)
fee8: 55 01 00 00 01             ; XT=0155, flags=01
feed: 01 5d 00                   ; 1, ]
;
fef0: fc fe 00 00                ; [ - (next: fefc ,)
fef4: 47 01 00 00 01             ; XT=0147, flags=01
fef9: 01 5b 00                   ; 1, [
;
fefc: 08 ff 00 00                ; , - (next: ff08 C,)
ff00: 2d 01 00 00 00             ; XT=012d, flags=00
ff05: 01 2c 00                   ; 1, ,
;
ff08: 15 ff 00 00                ; C, - (next: ff15 LAST)
ff0c: 15 01 00 00 00             ; XT=0115, flags=00
ff11: 02 43 2c 00                ; 2, C,
;
ff15: 24 ff 00 00                ; LAST - (next: ff24 HERE)
ff19: 09 01 00 00 00             ; XT=0109, flags=00
ff1e: 04 4c 41 53 54 00          ; 4, LAST
;
ff24: 33 ff 00 00                ; HERE - (next: ff33 CELL)
ff28: fd 00 00 00 00             ; XT=00fd, flags=00
ff2d: 04 48 45 52 45 00          ; 4, HERE
;
ff33: 42 ff 00 00                ; CELL - (next: ff42 T3)
ff37: f5 00 00 00 02             ; XT=00f5, flags=02
ff3c: 04 43 45 4c 4c 00          ; 4, CELL
;
ff42: 4f ff 00 00                ; T3 - (next: ff4f T2)
ff46: e5 00 00 00 00             ; XT=00e5, flags=00
ff4b: 02 54 33 00                ; 2, T3
;
ff4f: 5c ff 00 00                ; T2 - (next: ff5c T1)
ff53: d6 00 00 00 00             ; XT=00d6, flags=00
ff58: 02 54 32 00                ; 2, T2
;
ff5c: 69 ff 00 00                ; T1 - (next: ff69 INPUT-FP)
ff60: c7 00 00 00 00             ; XT=00c7, flags=00
ff65: 02 54 31 00                ; 2, T1
;
ff69: 7c ff 00 00                ; INPUT-FP - (next: ff7c #LEN)
ff6d: b8 00 00 00 00             ; XT=00b8, flags=00
ff72: 08 49 4e 50 55 54 2d 46 50 00 ; 8, INPUT-FP
;
ff7c: 8b ff 00 00                ; #LEN - (next: ff8b #NEG)
ff80: a9 00 00 00 00             ; XT=00a9, flags=00
ff85: 04 23 4c 45 4e 00          ; 4, #LEN
;
ff8b: 9a ff 00 00                ; #NEG - (next: ff9a >IN)
ff8f: 9a 00 00 00 00             ; XT=009a, flags=00
ff94: 04 23 4e 45 47 00          ; 4, #NEG
;
ff9a: a8 ff 00 00                ; >IN - (next: ffa8 (MEM_SZ))
ff9e: 8b 00 00 00 00             ; XT=008b, flags=00
ffa3: 03 3e 49 4e 00             ; 3, >IN
;
ffa8: bb ff 00 00                ; (MEM_SZ) - (next: ffbb STATE)
ffac: 7c 00 00 00 00             ; XT=007c, flags=00
ffb1: 08 28 4d 45 4d 5f 53 5a 29 00 ; 8, (MEM_SZ)
;
ffbb: cb ff 00 00                ; STATE - (next: ffcb BASE)
ffbf: 6d 00 00 00 00             ; XT=006d, flags=00
ffc4: 05 53 54 41 54 45 00       ; 5, STATE
;
ffcb: da ff 00 00                ; BASE - (next: ffda (LAST))
ffcf: 5e 00 00 00 00             ; XT=005e, flags=00
ffd4: 04 42 41 53 45 00          ; 4, BASE
;
ffda: eb ff 00 00                ; (LAST) - (next: ffeb (HERE))
ffde: 4f 00 00 00 00             ; XT=004f, flags=00
ffe3: 06 28 4c 41 53 54 29 00    ; 6, (LAST)
;
ffeb: fc ff 00 00                ; (HERE) - (next: fffc <end>)
ffef: 40 00 00 00 00             ; XT=0040, flags=00
fff4: 06 28 48 45 52 45 29 00    ; 6, (HERE)
;
fffc: 00 00 00 00                ; End.
