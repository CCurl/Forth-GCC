; memory-size: 65536 bytes, (10000 hex)
; data-stack: fe00, grows up
; return-stack: fffc, grows down
;
0000: 08 fa 10 00 00             ; JMP main (10fa)
;
0005: 00 0a 04
0008: 00000000 00000000
0010: 00001353 0000efba 00000000 00000000
0020: 00000063 00010000 00000000 00000000
0030: 00000000 00000000 00000000 00000000
;
0040: 18 ed fd 00 00             ; DICTP BASE (fded)
0045: 0e 06                      ; CLITERAL 6
0047: 0c                         ; RET
;
0048: 18 de fd 00 00             ; DICTP CELL (fdde)
004d: 0e 04                      ; CLITERAL 4
004f: 0c                         ; RET
;
0050: 18 cd fd 00 00             ; DICTP (HERE) (fdcd)
0055: 0e 10                      ; CLITERAL 16
0057: 0c                         ; RET
;
0058: 18 bc fd 00 00             ; DICTP (LAST) (fdbc)
005d: 0e 14                      ; CLITERAL 20
005f: 0c                         ; RET
;
0060: 18 a9 fd 00 00             ; DICTP INPUT-FP (fda9)
0065: 0e 1c                      ; CLITERAL 28
0067: 0c                         ; RET
;
0068: 18 99 fd 00 00             ; DICTP STATE (fd99)
006d: 0e 20                      ; CLITERAL 32
006f: 0c                         ; RET
;
0070: 18 8c fd 00 00             ; DICTP C, (fd8c)
0075: 0e 10                      ; CLITERAL 16
0077: 02                         ; FETCH
0078: 10                         ; CSTORE
0079: 0e 10                      ; CLITERAL 16
007b: 02                         ; FETCH
007c: 2c                         ; INC
007d: 0e 10                      ; CLITERAL 16
007f: 03                         ; STORE
0080: 0c                         ; RET
;
0081: 18 80 fd 00 00             ; DICTP , (fd80)
0086: 0e 10                      ; CLITERAL 16
0088: 02                         ; FETCH
0089: 03                         ; STORE
008a: 0e 10                      ; CLITERAL 16
008c: 02                         ; FETCH
008d: 0e 04                      ; CLITERAL 4
008f: 11                         ; ADD
0090: 0e 10                      ; CLITERAL 16
0092: 03                         ; STORE
0093: 0c                         ; RET
;
0094: 18 74 fd 00 00             ; DICTP [ (fd74)
0099: 0e 00                      ; CLITERAL 0
009b: 0e 20                      ; CLITERAL 32
009d: 03                         ; STORE
009e: 0c                         ; RET
;
009f: 18 68 fd 00 00             ; DICTP ] (fd68)
00a4: 0e 01                      ; CLITERAL 1
00a6: 0e 20                      ; CLITERAL 32
00a8: 03                         ; STORE
00a9: 0c                         ; RET
;
00aa: 18 56 fd 00 00             ; DICTP LITERAL (fd56)
00af: 0e 01                      ; CLITERAL 1
00b1: 0b 70 00 00 00             ; CALL C, (0070)
00b6: 0c                         ; RET
;
00b7: 18 4a fd 00 00             ; DICTP @ (fd4a)
00bc: 02                         ; FETCH
00bd: 0c                         ; RET
;
00be: 18 3e fd 00 00             ; DICTP ! (fd3e)
00c3: 03                         ; STORE
00c4: 0c                         ; RET
;
00c5: 18 2f fd 00 00             ; DICTP SWAP (fd2f)
00ca: 04                         ; SWAP
00cb: 0c                         ; RET
;
00cc: 18 20 fd 00 00             ; DICTP DROP (fd20)
00d1: 05                         ; DROP
00d2: 0c                         ; RET
;
00d3: 18 12 fd 00 00             ; DICTP DUP (fd12)
00d8: 06                         ; DUP
00d9: 0c                         ; RET
;
00da: 18 ff fc 00 00             ; DICTP SLITERAL (fcff)
00df: 0e 07                      ; CLITERAL 7
00e1: 0b 70 00 00 00             ; CALL C, (0070)
00e6: 0c                         ; RET
;
00e7: 18 f1 fc 00 00             ; DICTP JMP (fcf1)
00ec: 0e 08                      ; CLITERAL 8
00ee: 0b 70 00 00 00             ; CALL C, (0070)
00f3: 0c                         ; RET
;
00f4: 18 e2 fc 00 00             ; DICTP JMPZ (fce2)
00f9: 0e 09                      ; CLITERAL 9
00fb: 0b 70 00 00 00             ; CALL C, (0070)
0100: 0c                         ; RET
;
0101: 18 d2 fc 00 00             ; DICTP JMPNZ (fcd2)
0106: 0e 0a                      ; CLITERAL 10
0108: 0b 70 00 00 00             ; CALL C, (0070)
010d: 0c                         ; RET
;
010e: 18 c3 fc 00 00             ; DICTP CALL (fcc3)
0113: 0e 0b                      ; CLITERAL 11
0115: 0b 70 00 00 00             ; CALL C, (0070)
011a: 0c                         ; RET
;
011b: 18 b5 fc 00 00             ; DICTP RET (fcb5)
0120: 0e 0c                      ; CLITERAL 12
0122: 0b 70 00 00 00             ; CALL C, (0070)
0127: 0c                         ; RET
;
0128: 18 a8 fc 00 00             ; DICTP OR (fca8)
012d: 0d                         ; OR
012e: 0c                         ; RET
;
012f: 18 95 fc 00 00             ; DICTP CLITERAL (fc95)
0134: 0e 0e                      ; CLITERAL 14
0136: 0b 70 00 00 00             ; CALL C, (0070)
013b: 0c                         ; RET
;
013c: 18 88 fc 00 00             ; DICTP C@ (fc88)
0141: 0f                         ; CFETCH
0142: 0c                         ; RET
;
0143: 18 7b fc 00 00             ; DICTP C! (fc7b)
0148: 10                         ; CSTORE
0149: 0c                         ; RET
;
014a: 18 6f fc 00 00             ; DICTP + (fc6f)
014f: 11                         ; ADD
0150: 0c                         ; RET
;
0151: 18 63 fc 00 00             ; DICTP - (fc63)
0156: 12                         ; SUB
0157: 0c                         ; RET
;
0158: 18 57 fc 00 00             ; DICTP * (fc57)
015d: 13                         ; MUL
015e: 0c                         ; RET
;
015f: 18 4b fc 00 00             ; DICTP / (fc4b)
0164: 14                         ; DIV
0165: 0c                         ; RET
;
0166: 18 3f fc 00 00             ; DICTP < (fc3f)
016b: 15                         ; LT
016c: 0c                         ; RET
;
016d: 18 33 fc 00 00             ; DICTP = (fc33)
0172: 16                         ; EQ
0173: 0c                         ; RET
;
0174: 18 27 fc 00 00             ; DICTP > (fc27)
0179: 17                         ; GT
017a: 0c                         ; RET
;
017b: 18 17 fc 00 00             ; DICTP DICTP (fc17)
0180: 0e 18                      ; CLITERAL 24
0182: 0b 70 00 00 00             ; CALL C, (0070)
0187: 0c                         ; RET
;
0188: 18 08 fc 00 00             ; DICTP EMIT (fc08)
018d: 19                         ; EMIT
018e: 0c                         ; RET
;
018f: 18 f9 fb 00 00             ; DICTP OVER (fbf9)
0194: 1a                         ; OVER
0195: 0c                         ; RET
;
0196: 18 e7 fb 00 00             ; DICTP COMPARE (fbe7)
019b: 1b                         ; COMPARE
019c: 0c                         ; RET
;
019d: 18 d7 fb 00 00             ; DICTP FOPEN (fbd7)
01a2: 1c                         ; FOPEN
01a3: 0c                         ; RET
;
01a4: 18 c7 fb 00 00             ; DICTP FREAD (fbc7)
01a9: 1d                         ; FREAD
01aa: 0c                         ; RET
;
01ab: 18 b3 fb 00 00             ; DICTP FREADLINE (fbb3)
01b0: 1e                         ; FREADLINE
01b1: 0c                         ; RET
;
01b2: 18 a2 fb 00 00             ; DICTP FWRITE (fba2)
01b7: 1f                         ; FWRITE
01b8: 0c                         ; RET
;
01b9: 18 91 fb 00 00             ; DICTP FCLOSE (fb91)
01be: 20                         ; FCLOSE
01bf: 0c                         ; RET
;
01c0: 18 84 fb 00 00             ; DICTP >R (fb84)
01c5: 21                         ; DTOR
01c6: 0c                         ; RET
;
01c7: 18 77 fb 00 00             ; DICTP R> (fb77)
01cc: 22                         ; RTOD
01cd: 0c                         ; RET
;
01ce: 18 64 fb 00 00             ; DICTP LOGLEVEL (fb64)
01d3: 23                         ; LOGLEVEL
01d4: 0c                         ; RET
;
01d5: 18 56 fb 00 00             ; DICTP AND (fb56)
01da: 24                         ; AND
01db: 0c                         ; RET
;
01dc: 18 47 fb 00 00             ; DICTP PICK (fb47)
01e1: 25                         ; PICK
01e2: 0c                         ; RET
;
01e3: 18 37 fb 00 00             ; DICTP DEPTH (fb37)
01e8: 26                         ; DEPTH
01e9: 0c                         ; RET
;
01ea: 18 27 fb 00 00             ; DICTP GETCH (fb27)
01ef: 27                         ; GETCH
01f0: 0c                         ; RET
;
01f1: 18 14 fb 00 00             ; DICTP COMPAREI (fb14)
01f6: 28                         ; COMPAREI
01f7: 0c                         ; RET
;
01f8: 18 03 fb 00 00             ; DICTP USINIT (fb03)
01fd: 29                         ; USTACKINIT
01fe: 0c                         ; RET
;
01ff: 18 f2 fa 00 00             ; DICTP USPUSH (faf2)
0204: 2a                         ; UPUSH
0205: 0c                         ; RET
;
0206: 18 e2 fa 00 00             ; DICTP USPOP (fae2)
020b: 2b                         ; UPOP
020c: 0c                         ; RET
;
020d: 18 d4 fa 00 00             ; DICTP INC (fad4)
0212: 2c                         ; INC
0213: 0c                         ; RET
;
0214: 18 c3 fa 00 00             ; DICTP RDEPTH (fac3)
0219: 2d                         ; RDEPTH
021a: 0c                         ; RET
;
021b: 18 b5 fa 00 00             ; DICTP DEC (fab5)
0220: 2e                         ; RESET
0221: 0c                         ; RET
;
0222: 18 a5 fa 00 00             ; DICTP BREAK (faa5)
0227: fd                         ; BREAK
0228: 0c                         ; RET
;
0229: 18 95 fa 00 00             ; DICTP RESET (fa95)
022e: fe                         ; RESET
022f: 0c                         ; RET
;
0230: 18 87 fa 00 00             ; DICTP BYE (fa87)
0235: ff                         ; BYE
0236: 0c                         ; RET
;
0237: 18 76 fa 00 00             ; DICTP INLINE (fa76)
023c: 0e 14                      ; CLITERAL 20
023e: 02                         ; FETCH
023f: 0e 02                      ; CLITERAL 2
0241: 0e 04                      ; CLITERAL 4
0243: 13                         ; MUL
0244: 11                         ; ADD
0245: 06                         ; DUP
0246: 0f                         ; CFETCH
0247: 0e 02                      ; CLITERAL 2
0249: 0d                         ; OR
024a: 04                         ; SWAP
024b: 10                         ; CSTORE
024c: 0c                         ; RET
;
024d: 18 62 fa 00 00             ; DICTP IMMEDIATE (fa62)
0252: 0e 14                      ; CLITERAL 20
0254: 02                         ; FETCH
0255: 0e 02                      ; CLITERAL 2
0257: 0e 04                      ; CLITERAL 4
0259: 13                         ; MUL
025a: 11                         ; ADD
025b: 06                         ; DUP
025c: 0f                         ; CFETCH
025d: 0e 01                      ; CLITERAL 1
025f: 0d                         ; OR
0260: 04                         ; SWAP
0261: 10                         ; CSTORE
0262: 0c                         ; RET
;
0263: 18 52 fa 00 00             ; DICTP CELLS (fa52)
0268: 0e 04                      ; CLITERAL 4
026a: 13                         ; MUL
026b: 0c                         ; RET
;
026c: 18 39 fa 00 00             ; DICTP FLAG_IMMEDIATE (fa39)
0271: 0e 01                      ; CLITERAL 1
0273: 0c                         ; RET
;
0274: 18 23 fa 00 00             ; DICTP FLAG_INLINE (fa23)
0279: 0e 02                      ; CLITERAL 2
027b: 0c                         ; RET
;
027c: 18 14 fa 00 00             ; DICTP LAST (fa14)
0281: 0e 14                      ; CLITERAL 20
0283: 02                         ; FETCH
0284: 0c                         ; RET
;
0285: 18 05 fa 00 00             ; DICTP HERE (fa05)
028a: 0e 10                      ; CLITERAL 16
028c: 02                         ; FETCH
028d: 0c                         ; RET
;
028e: 18 f9 f9 00 00             ; DICTP , (f9f9)
0293: 0e 10                      ; CLITERAL 16
0295: 02                         ; FETCH
0296: 03                         ; STORE
0297: 0e 10                      ; CLITERAL 16
0299: 02                         ; FETCH
029a: 0e 04                      ; CLITERAL 4
029c: 11                         ; ADD
029d: 0e 10                      ; CLITERAL 16
029f: 03                         ; STORE
02a0: 0c                         ; RET
;
02a1: 18 ec f9 00 00             ; DICTP C, (f9ec)
02a6: 0e 10                      ; CLITERAL 16
02a8: 02                         ; FETCH
02a9: 10                         ; CSTORE
02aa: 0e 10                      ; CLITERAL 16
02ac: 02                         ; FETCH
02ad: 0e 01                      ; CLITERAL 1
02af: 11                         ; ADD
02b0: 0e 10                      ; CLITERAL 16
02b2: 03                         ; STORE
02b3: 0c                         ; RET
;
02b4: 18 de f9 00 00             ; DICTP HEX (f9de)
02b9: 0e 10                      ; CLITERAL 16
02bb: 0e 06                      ; CLITERAL 6
02bd: 10                         ; CSTORE
02be: 0c                         ; RET
;
02bf: 18 cc f9 00 00             ; DICTP DECIMAL (f9cc)
02c4: 0e 0a                      ; CLITERAL 10
02c6: 0e 06                      ; CLITERAL 6
02c8: 10                         ; CSTORE
02c9: 0c                         ; RET
;
02ca: 18 bc f9 00 00             ; DICTP OCTAL (f9bc)
02cf: 0e 08                      ; CLITERAL 8
02d1: 0e 06                      ; CLITERAL 6
02d3: 10                         ; CSTORE
02d4: 0c                         ; RET
;
02d5: 18 ab f9 00 00             ; DICTP BINARY (f9ab)
02da: 0e 02                      ; CLITERAL 2
02dc: 0e 06                      ; CLITERAL 6
02de: 10                         ; CSTORE
02df: 0c                         ; RET
;
02e0: 18 9e f9 00 00             ; DICTP ON (f99e)
02e5: 0e 01                      ; CLITERAL 1
02e7: 04                         ; SWAP
02e8: 03                         ; STORE
02e9: 0c                         ; RET
;
02ea: 18 90 f9 00 00             ; DICTP OFF (f990)
02ef: 0e 00                      ; CLITERAL 0
02f1: 04                         ; SWAP
02f2: 03                         ; STORE
02f3: 0c                         ; RET
;
02f4: 18 7b f9 00 00             ; DICTP ?COMPILING (f97b)
02f9: 0e 20                      ; CLITERAL 32
02fb: 02                         ; FETCH
02fc: 0c                         ; RET
;
02fd: 18 6e f9 00 00             ; DICTP IF (f96e)
0302: 0b f4 02 00 00             ; CALL ?COMPILING (02f4)
0307: 09 1b 03 00 00             ; JMPZ 031b
030c: 0b f4 00 00 00             ; CALL JMPZ (00f4)
0311: 0e 10                      ; CLITERAL 16
0313: 02                         ; FETCH
0314: 0e 00                      ; CLITERAL 0
0316: 0b 8e 02 00 00             ; CALL , (028e)
031b: 0c                         ; RET
;
031c: 18 5f f9 00 00             ; DICTP ELSE (f95f)
0321: 0b f4 02 00 00             ; CALL ?COMPILING (02f4)
0326: 09 40 03 00 00             ; JMPZ 0340
032b: 0b e7 00 00 00             ; CALL JMP (00e7)
0330: 0e 10                      ; CLITERAL 16
0332: 02                         ; FETCH
0333: 04                         ; SWAP
0334: 0e 00                      ; CLITERAL 0
0336: 0b 8e 02 00 00             ; CALL , (028e)
033b: 0e 10                      ; CLITERAL 16
033d: 02                         ; FETCH
033e: 04                         ; SWAP
033f: 03                         ; STORE
0340: 0c                         ; RET
;
0341: 18 50 f9 00 00             ; DICTP THEN (f950)
0346: 0b f4 02 00 00             ; CALL ?COMPILING (02f4)
034b: 09 55 03 00 00             ; JMPZ 0355
0350: 0e 10                      ; CLITERAL 16
0352: 02                         ; FETCH
0353: 04                         ; SWAP
0354: 03                         ; STORE
0355: 0c                         ; RET
;
0356: 18 40 f9 00 00             ; DICTP BEGIN (f940)
035b: 0b f4 02 00 00             ; CALL ?COMPILING (02f4)
0360: 09 68 03 00 00             ; JMPZ 0368
0365: 0e 10                      ; CLITERAL 16
0367: 02                         ; FETCH
0368: 0c                         ; RET
;
0369: 18 30 f9 00 00             ; DICTP AGAIN (f930)
036e: 0b f4 02 00 00             ; CALL ?COMPILING (02f4)
0373: 09 82 03 00 00             ; JMPZ 0382
0378: 0b e7 00 00 00             ; CALL JMP (00e7)
037d: 0b 8e 02 00 00             ; CALL , (028e)
0382: 0c                         ; RET
;
0383: 18 20 f9 00 00             ; DICTP WHILE (f920)
0388: 0b f4 02 00 00             ; CALL ?COMPILING (02f4)
038d: 09 9c 03 00 00             ; JMPZ 039c
0392: 0b 01 01 00 00             ; CALL JMPNZ (0101)
0397: 0b 8e 02 00 00             ; CALL , (028e)
039c: 0c                         ; RET
;
039d: 18 10 f9 00 00             ; DICTP UNTIL (f910)
03a2: 0b f4 02 00 00             ; CALL ?COMPILING (02f4)
03a7: 09 b6 03 00 00             ; JMPZ 03b6
03ac: 0b f4 00 00 00             ; CALL JMPZ (00f4)
03b1: 0b 8e 02 00 00             ; CALL , (028e)
03b6: 0c                         ; RET
;
03b7: 18 00 f9 00 00             ; DICTP LEAVE (f900)
03bc: 0b f4 02 00 00             ; CALL ?COMPILING (02f4)
03c1: 09 cb 03 00 00             ; JMPZ 03cb
03c6: 0b 1b 01 00 00             ; CALL RET (011b)
03cb: 0c                         ; RET
;
03cc: 18 f2 f8 00 00             ; DICTP >IN (f8f2)
03d1: 01 d7 03 00 00             ; LITERAL 983 (3d7)
03d6: 0c                         ; RET
03d7: 00                         ; RESET
03d8: 00                         ; RESET
03d9: 00                         ; RESET
03da: 00                         ; RESET
03db: 0c                         ; RET
;
03dc: 18 e2 f8 00 00             ; DICTP isNeg (f8e2)
03e1: 01 e7 03 00 00             ; LITERAL 999 (3e7)
03e6: 0c                         ; RET
03e7: 00                         ; RESET
03e8: 00                         ; RESET
03e9: 00                         ; RESET
03ea: 00                         ; RESET
03eb: 0c                         ; RET
;
03ec: 18 d1 f8 00 00             ; DICTP MEM_SZ (f8d1)
03f1: 0e 24                      ; CLITERAL 36
03f3: 02                         ; FETCH
03f4: 0c                         ; RET
;
03f5: 18 be f8 00 00             ; DICTP TRACE-ON (f8be)
03fa: 0e 02                      ; CLITERAL 2
03fc: 23                         ; LOGLEVEL
03fd: 0c                         ; RET
;
03fe: 18 aa f8 00 00             ; DICTP TRACE-OFF (f8aa)
0403: 0e 00                      ; CLITERAL 0
0405: 23                         ; LOGLEVEL
0406: 0c                         ; RET
;
0407: 18 97 f8 00 00             ; DICTP DEBUG-ON (f897)
040c: 0e 01                      ; CLITERAL 1
040e: 23                         ; LOGLEVEL
040f: 0c                         ; RET
;
0410: 18 83 f8 00 00             ; DICTP DEBUG-OFF (f883)
0415: 0e 00                      ; CLITERAL 0
0417: 23                         ; LOGLEVEL
0418: 0c                         ; RET
;
0419: 18 76 f8 00 00             ; DICTP R@ (f876)
041e: 22                         ; RTOD
041f: 06                         ; DUP
0420: 21                         ; DTOR
0421: 0c                         ; RET
;
0422: 18 66 f8 00 00             ; DICTP RDROP (f866)
0427: 22                         ; RTOD
0428: 05                         ; DROP
0429: 0c                         ; RET
;
042a: 18 57 f8 00 00             ; DICTP 2DUP (f857)
042f: 1a                         ; OVER
0430: 1a                         ; OVER
0431: 0c                         ; RET
;
0432: 18 47 f8 00 00             ; DICTP 2DROP (f847)
0437: 05                         ; DROP
0438: 05                         ; DROP
0439: 0c                         ; RET
;
043a: 18 38 f8 00 00             ; DICTP TUCK (f838)
043f: 04                         ; SWAP
0440: 1a                         ; OVER
0441: 0c                         ; RET
;
0442: 18 2a f8 00 00             ; DICTP NIP (f82a)
0447: 04                         ; SWAP
0448: 05                         ; DROP
0449: 0c                         ; RET
;
044a: 18 1c f8 00 00             ; DICTP ROT (f81c)
044f: 21                         ; DTOR
0450: 04                         ; SWAP
0451: 22                         ; RTOD
0452: 04                         ; SWAP
0453: 0c                         ; RET
;
0454: 18 0d f8 00 00             ; DICTP -ROT (f80d)
0459: 04                         ; SWAP
045a: 21                         ; DTOR
045b: 04                         ; SWAP
045c: 22                         ; RTOD
045d: 0c                         ; RET
;
045e: 18 00 f8 00 00             ; DICTP 1+ (f800)
0463: 2c                         ; INC
0464: 0c                         ; RET
;
0465: 18 f3 f7 00 00             ; DICTP 1- (f7f3)
046a: 2e                         ; RESET
046b: 0c                         ; RET
;
046c: 18 e6 f7 00 00             ; DICTP 2* (f7e6)
0471: 0e 02                      ; CLITERAL 2
0473: 13                         ; MUL
0474: 0c                         ; RET
;
0475: 18 d9 f7 00 00             ; DICTP 2/ (f7d9)
047a: 0e 02                      ; CLITERAL 2
047c: 14                         ; DIV
047d: 0c                         ; RET
;
047e: 18 cc f7 00 00             ; DICTP += (f7cc)
0483: 1a                         ; OVER
0484: 02                         ; FETCH
0485: 11                         ; ADD
0486: 04                         ; SWAP
0487: 03                         ; STORE
0488: 0c                         ; RET
;
0489: 18 bf f7 00 00             ; DICTP -= (f7bf)
048e: 1a                         ; OVER
048f: 02                         ; FETCH
0490: 04                         ; SWAP
0491: 12                         ; SUB
0492: 04                         ; SWAP
0493: 03                         ; STORE
0494: 0c                         ; RET
;
0495: 18 b2 f7 00 00             ; DICTP ++ (f7b2)
049a: 0e 01                      ; CLITERAL 1
049c: 0b 7e 04 00 00             ; CALL += (047e)
04a1: 0c                         ; RET
;
04a2: 18 a5 f7 00 00             ; DICTP -- (f7a5)
04a7: 0e 01                      ; CLITERAL 1
04a9: 0b 89 04 00 00             ; CALL -= (0489)
04ae: 0c                         ; RET
;
04af: 18 97 f7 00 00             ; DICTP C++ (f797)
04b4: 06                         ; DUP
04b5: 0f                         ; CFETCH
04b6: 2c                         ; INC
04b7: 04                         ; SWAP
04b8: 10                         ; CSTORE
04b9: 0c                         ; RET
;
04ba: 18 89 f7 00 00             ; DICTP C-- (f789)
04bf: 06                         ; DUP
04c0: 0f                         ; CFETCH
04c1: 2e                         ; RESET
04c2: 04                         ; SWAP
04c3: 10                         ; CSTORE
04c4: 0c                         ; RET
;
04c5: 18 7c f7 00 00             ; DICTP +! (f77c)
04ca: 04                         ; SWAP
04cb: 1a                         ; OVER
04cc: 02                         ; FETCH
04cd: 11                         ; ADD
04ce: 04                         ; SWAP
04cf: 03                         ; STORE
04d0: 0c                         ; RET
;
04d1: 18 6e f7 00 00             ; DICTP C+! (f76e)
04d6: 04                         ; SWAP
04d7: 1a                         ; OVER
04d8: 0f                         ; CFETCH
04d9: 11                         ; ADD
04da: 04                         ; SWAP
04db: 10                         ; CSTORE
04dc: 0c                         ; RET
;
04dd: 18 61 f7 00 00             ; DICTP 0= (f761)
04e2: 0e 00                      ; CLITERAL 0
04e4: 16                         ; EQ
04e5: 0c                         ; RET
;
04e6: 18 54 f7 00 00             ; DICTP <> (f754)
04eb: 16                         ; EQ
04ec: 0e 00                      ; CLITERAL 0
04ee: 16                         ; EQ
04ef: 0c                         ; RET
;
04f0: 18 47 f7 00 00             ; DICTP <= (f747)
04f5: 17                         ; GT
04f6: 0e 00                      ; CLITERAL 0
04f8: 16                         ; EQ
04f9: 0c                         ; RET
;
04fa: 18 3a f7 00 00             ; DICTP >= (f73a)
04ff: 15                         ; LT
0500: 0e 00                      ; CLITERAL 0
0502: 16                         ; EQ
0503: 0c                         ; RET
;
0504: 18 2b f7 00 00             ; DICTP TRUE (f72b)
0509: 0e 01                      ; CLITERAL 1
050b: 0c                         ; RET
;
050c: 18 1b f7 00 00             ; DICTP FALSE (f71b)
0511: 0e 00                      ; CLITERAL 0
0513: 0c                         ; RET
;
0514: 18 0d f7 00 00             ; DICTP NOT (f70d)
0519: 0e 00                      ; CLITERAL 0
051b: 16                         ; EQ
051c: 0c                         ; RET
;
051d: 18 fd f6 00 00             ; DICTP COUNT (f6fd)
0522: 06                         ; DUP
0523: 2c                         ; INC
0524: 04                         ; SWAP
0525: 0f                         ; CFETCH
0526: 0c                         ; RET
;
0527: 18 ee f6 00 00             ; DICTP TYPE (f6ee)
052c: 1a                         ; OVER
052d: 11                         ; ADD
052e: 04                         ; SWAP
052f: 1a                         ; OVER
0530: 1a                         ; OVER
0531: 17                         ; GT
0532: 0e 00                      ; CLITERAL 0
0534: 16                         ; EQ
0535: 09 3d 05 00 00             ; JMPZ 053d
053a: 05                         ; DROP
053b: 05                         ; DROP
053c: 0c                         ; RET
053d: 06                         ; DUP
053e: 0f                         ; CFETCH
053f: 19                         ; EMIT
0540: 2c                         ; INC
0541: 08 2f 05 00 00             ; JMP 052f
0546: 0c                         ; RET
;
0547: 18 e1 f6 00 00             ; DICTP CT (f6e1)
054c: 0b 1d 05 00 00             ; CALL COUNT (051d)
0551: 0b 27 05 00 00             ; CALL TYPE (0527)
0556: 0c                         ; RET
;
0557: 18 d5 f6 00 00             ; DICTP \ (f6d5)
055c: 0e 00                      ; CLITERAL 0
055e: 0b cc 03 00 00             ; CALL >IN (03cc)
0563: 02                         ; FETCH
0564: 10                         ; CSTORE
0565: 0c                         ; RET
;
0566: 18 c9 f6 00 00             ; DICTP ( (f6c9)
056b: 0b cc 03 00 00             ; CALL >IN (03cc)
0570: 02                         ; FETCH
0571: 0f                         ; CFETCH
0572: 06                         ; DUP
0573: 0e 00                      ; CLITERAL 0
0575: 16                         ; EQ
0576: 09 97 05 00 00             ; JMPZ 0597
057b: 07 13 6d 69 73 73 69 6e 67 20 63 6c 6f 73 69 6e 67 20 27 29 27 00 ; SLITERAL (057c) [missing closing ')']
0591: 0b 47 05 00 00             ; CALL CT (0547)
0596: fe                         ; RESET
0597: 0b cc 03 00 00             ; CALL >IN (03cc)
059c: 0b 95 04 00 00             ; CALL ++ (0495)
05a1: 0e 29                      ; CLITERAL 41
05a3: 16                         ; EQ
05a4: 09 aa 05 00 00             ; JMPZ 05aa
05a9: 0c                         ; RET
05aa: 08 6b 05 00 00             ; JMP 056b
05af: 0c                         ; RET
;
05b0: 18 bc f6 00 00             ; DICTP BL (f6bc)
05b5: 0e 20                      ; CLITERAL 32
05b7: 19                         ; EMIT
05b8: 0c                         ; RET
;
05b9: 18 ad f6 00 00             ; DICTP CRLF (f6ad)
05be: 0e 0d                      ; CLITERAL 13
05c0: 19                         ; EMIT
05c1: 0e 0a                      ; CLITERAL 10
05c3: 19                         ; EMIT
05c4: 0c                         ; RET
;
05c5: 18 a0 f6 00 00             ; DICTP CR (f6a0)
05ca: 0e 0d                      ; CLITERAL 13
05cc: 19                         ; EMIT
05cd: 0e 0a                      ; CLITERAL 10
05cf: 19                         ; EMIT
05d0: 0c                         ; RET
;
05d1: 18 8e f6 00 00             ; DICTP BETWEEN (f68e)
05d6: 0e 02                      ; CLITERAL 2
05d8: 25                         ; PICK
05d9: 15                         ; LT
05da: 09 e4 05 00 00             ; JMPZ 05e4
05df: 05                         ; DROP
05e0: 05                         ; DROP
05e1: 0e 00                      ; CLITERAL 0
05e3: 0c                         ; RET
05e4: 15                         ; LT
05e5: 0e 00                      ; CLITERAL 0
05e7: 16                         ; EQ
05e8: 0c                         ; RET
;
05e9: 18 7e f6 00 00             ; DICTP (tmp) (f67e)
05ee: 01 f4 05 00 00             ; LITERAL 1524 (5f4)
05f3: 0c                         ; RET
05f4: 00                         ; RESET
05f5: 00                         ; RESET
05f6: 00                         ; RESET
05f7: 00                         ; RESET
05f8: 0c                         ; RET
;
05f9: 18 6b f6 00 00             ; DICTP tmp-init (f66b)
05fe: 0e 14                      ; CLITERAL 20
0600: 02                         ; FETCH
0601: 0b e9 05 00 00             ; CALL (tmp) (05e9)
0606: 03                         ; STORE
0607: 0c                         ; RET
;
0608: 18 59 f6 00 00             ; DICTP tmp-cur (f659)
060d: 0b e9 05 00 00             ; CALL (tmp) (05e9)
0612: 02                         ; FETCH
0613: 0c                         ; RET
;
0614: 18 45 f6 00 00             ; DICTP tmp-alloc (f645)
0619: 0b e9 05 00 00             ; CALL (tmp) (05e9)
061e: 04                         ; SWAP
061f: 1a                         ; OVER
0620: 02                         ; FETCH
0621: 04                         ; SWAP
0622: 12                         ; SUB
0623: 04                         ; SWAP
0624: 03                         ; STORE
0625: 0b 08 06 00 00             ; CALL tmp-cur (0608)
062a: 0c                         ; RET
;
062b: 18 37 f6 00 00             ; DICTP PAD (f637)
0630: 0b f9 05 00 00             ; CALL tmp-init (05f9)
0635: 0e c8                      ; CLITERAL 200
0637: 0b 14 06 00 00             ; CALL tmp-alloc (0614)
063c: 0c                         ; RET
;
063d: 18 24 f6 00 00             ; DICTP getInput (f624)
0642: 0b 2b 06 00 00             ; CALL PAD (062b)
0647: 0e 80                      ; CLITERAL 128
0649: 0e 00                      ; CLITERAL 0
064b: 1e                         ; FREADLINE
064c: 05                         ; DROP
064d: 0b 2b 06 00 00             ; CALL PAD (062b)
0652: 0c                         ; RET
;
0653: 18 13 f6 00 00             ; DICTP skipWS (f613)
0658: 06                         ; DUP
0659: 0f                         ; CFETCH
065a: 06                         ; DUP
065b: 09 74 06 00 00             ; JMPZ 0674
0660: 0e 20                      ; CLITERAL 32
0662: 17                         ; GT
0663: 09 6e 06 00 00             ; JMPZ 066e
0668: 0c                         ; RET
0669: 08 6f 06 00 00             ; JMP 066f
066e: 2c                         ; INC
066f: 08 76 06 00 00             ; JMP 0676
0674: 05                         ; DROP
0675: 0c                         ; RET
0676: 08 58 06 00 00             ; JMP 0658
067b: 0c                         ; RET
;
067c: 18 fe f5 00 00             ; DICTP getOneWord (f5fe)
0681: 06                         ; DUP
0682: 21                         ; DTOR
0683: 21                         ; DTOR
0684: 22                         ; RTOD
0685: 06                         ; DUP
0686: 21                         ; DTOR
0687: 0f                         ; CFETCH
0688: 0e 20                      ; CLITERAL 32
068a: 17                         ; GT
068b: 09 98 06 00 00             ; JMPZ 0698
0690: 22                         ; RTOD
0691: 2c                         ; INC
0692: 21                         ; DTOR
0693: 08 ae 06 00 00             ; JMP 06ae
0698: 22                         ; RTOD
0699: 06                         ; DUP
069a: 21                         ; DTOR
069b: 0f                         ; CFETCH
069c: 09 aa 06 00 00             ; JMPZ 06aa
06a1: 0e 00                      ; CLITERAL 0
06a3: 22                         ; RTOD
06a4: 06                         ; DUP
06a5: 21                         ; DTOR
06a6: 10                         ; CSTORE
06a7: 22                         ; RTOD
06a8: 2c                         ; INC
06a9: 21                         ; DTOR
06aa: 22                         ; RTOD
06ab: 22                         ; RTOD
06ac: 04                         ; SWAP
06ad: 0c                         ; RET
06ae: 08 84 06 00 00             ; JMP 0684
06b3: 0c                         ; RET
;
06b4: 18 ea f5 00 00             ; DICTP DICT>NEXT (f5ea)
06b9: 0c                         ; RET
;
06ba: 18 d8 f5 00 00             ; DICTP DICT>XT (f5d8)
06bf: 0e 04                      ; CLITERAL 4
06c1: 11                         ; ADD
06c2: 0c                         ; RET
;
06c3: 18 c3 f5 00 00             ; DICTP DICT>FLAGS (f5c3)
06c8: 0e 02                      ; CLITERAL 2
06ca: 0e 04                      ; CLITERAL 4
06cc: 13                         ; MUL
06cd: 11                         ; ADD
06ce: 0c                         ; RET
;
06cf: 18 af f5 00 00             ; DICTP DICT>NAME (f5af)
06d4: 0b c3 06 00 00             ; CALL DICT>FLAGS (06c3)
06d9: 2c                         ; INC
06da: 0c                         ; RET
;
06db: 18 9b f5 00 00             ; DICTP NEXT>DICT (f59b)
06e0: 0c                         ; RET
;
06e1: 18 89 f5 00 00             ; DICTP XT>DICT (f589)
06e6: 0e 04                      ; CLITERAL 4
06e8: 12                         ; SUB
06e9: 0c                         ; RET
;
06ea: 18 74 f5 00 00             ; DICTP FLAGS>DICT (f574)
06ef: 0e 02                      ; CLITERAL 2
06f1: 0e 04                      ; CLITERAL 4
06f3: 13                         ; MUL
06f4: 12                         ; SUB
06f5: 0c                         ; RET
;
06f6: 18 60 f5 00 00             ; DICTP NAME>DICT (f560)
06fb: 2e                         ; RESET
06fc: 0e 02                      ; CLITERAL 2
06fe: 0e 04                      ; CLITERAL 4
0700: 13                         ; MUL
0701: 12                         ; SUB
0702: 0c                         ; RET
;
0703: 18 4b f5 00 00             ; DICTP DICT.GetXT (f54b)
0708: 0b ba 06 00 00             ; CALL DICT>XT (06ba)
070d: 02                         ; FETCH
070e: 0c                         ; RET
;
070f: 18 33 f5 00 00             ; DICTP DICT.GetFLAGS (f533)
0714: 0b c3 06 00 00             ; CALL DICT>FLAGS (06c3)
0719: 0f                         ; CFETCH
071a: 0c                         ; RET
;
071b: 18 1e f5 00 00             ; DICTP DICTP>NAME (f51e)
0720: 2c                         ; INC
0721: 02                         ; FETCH
0722: 0b cf 06 00 00             ; CALL DICT>NAME (06cf)
0727: 0c                         ; RET
;
0728: 18 08 f5 00 00             ; DICTP XT.GetDICTP (f508)
072d: 06                         ; DUP
072e: 0f                         ; CFETCH
072f: 0e 18                      ; CLITERAL 24
0731: 16                         ; EQ
0732: 09 3e 07 00 00             ; JMPZ 073e
0737: 2c                         ; INC
0738: 02                         ; FETCH
0739: 08 40 07 00 00             ; JMP 0740
073e: 05                         ; DROP
073f: fe                         ; RESET
0740: 0c                         ; RET
;
0741: 18 eb f4 00 00             ; DICTP FLAGS.ISIMMEDIATE? (f4eb)
0746: 0e 01                      ; CLITERAL 1
0748: 24                         ; AND
0749: 0c                         ; RET
;
074a: 18 d1 f4 00 00             ; DICTP FLAGS.ISINLINE? (f4d1)
074f: 0e 02                      ; CLITERAL 2
0751: 24                         ; AND
0752: 0c                         ; RET
;
0753: 18 b5 f4 00 00             ; DICTP DICT.GetIMMEDIATE (f4b5)
0758: 0b 0f 07 00 00             ; CALL DICT.GetFLAGS (070f)
075d: 0b 41 07 00 00             ; CALL FLAGS.ISIMMEDIATE? (0741)
0762: 0c                         ; RET
;
0763: 18 9c f4 00 00             ; DICTP DICT.GetINLINE (f49c)
0768: 0b 0f 07 00 00             ; CALL DICT.GetFLAGS (070f)
076d: 0b 4a 07 00 00             ; CALL FLAGS.ISINLINE? (074a)
0772: 0c                         ; RET
;
0773: 18 87 f4 00 00             ; DICTP findInDict (f487)
0778: 0e 14                      ; CLITERAL 20
077a: 02                         ; FETCH
077b: 21                         ; DTOR
077c: 22                         ; RTOD
077d: 06                         ; DUP
077e: 21                         ; DTOR
077f: 06                         ; DUP
0780: 09 a9 07 00 00             ; JMPZ 07a9
0785: 0b cf 06 00 00             ; CALL DICT>NAME (06cf)
078a: 2c                         ; INC
078b: 1a                         ; OVER
078c: 28                         ; COMPAREI
078d: 09 a4 07 00 00             ; JMPZ 07a4
0792: 05                         ; DROP
0793: 22                         ; RTOD
0794: 06                         ; DUP
0795: 21                         ; DTOR
0796: 0b 03 07 00 00             ; CALL DICT.GetXT (0703)
079b: 22                         ; RTOD
079c: 0b 0f 07 00 00             ; CALL DICT.GetFLAGS (070f)
07a1: 0e 01                      ; CLITERAL 1
07a3: 0c                         ; RET
07a4: 08 b1 07 00 00             ; JMP 07b1
07a9: 05                         ; DROP
07aa: 05                         ; DROP
07ab: 22                         ; RTOD
07ac: 0e 00                      ; CLITERAL 0
07ae: 0e 00                      ; CLITERAL 0
07b0: 0c                         ; RET
07b1: 22                         ; RTOD
07b2: 02                         ; FETCH
07b3: 21                         ; DTOR
07b4: 08 7c 07 00 00             ; JMP 077c
07b9: 0c                         ; RET
;
07ba: 18 76 f4 00 00             ; DICTP isHEX? (f476)
07bf: 0e 06                      ; CLITERAL 6
07c1: 0f                         ; CFETCH
07c2: 0e 10                      ; CLITERAL 16
07c4: 16                         ; EQ
07c5: 0c                         ; RET
;
07c6: 18 61 f4 00 00             ; DICTP isNumChar? (f461)
07cb: 06                         ; DUP
07cc: 0e 30                      ; CLITERAL 48
07ce: 0e 39                      ; CLITERAL 57
07d0: 0b d1 05 00 00             ; CALL BETWEEN (05d1)
07d5: 09 e0 07 00 00             ; JMPZ 07e0
07da: 0e 30                      ; CLITERAL 48
07dc: 12                         ; SUB
07dd: 0e 01                      ; CLITERAL 1
07df: 0c                         ; RET
07e0: 0b ba 07 00 00             ; CALL isHEX? (07ba)
07e5: 09 14 08 00 00             ; JMPZ 0814
07ea: 06                         ; DUP
07eb: 0e 41                      ; CLITERAL 65
07ed: 0e 46                      ; CLITERAL 70
07ef: 0b d1 05 00 00             ; CALL BETWEEN (05d1)
07f4: 09 ff 07 00 00             ; JMPZ 07ff
07f9: 0e 37                      ; CLITERAL 55
07fb: 12                         ; SUB
07fc: 0e 01                      ; CLITERAL 1
07fe: 0c                         ; RET
07ff: 06                         ; DUP
0800: 0e 61                      ; CLITERAL 97
0802: 0e 66                      ; CLITERAL 102
0804: 0b d1 05 00 00             ; CALL BETWEEN (05d1)
0809: 09 14 08 00 00             ; JMPZ 0814
080e: 0e 57                      ; CLITERAL 87
0810: 12                         ; SUB
0811: 0e 01                      ; CLITERAL 1
0813: 0c                         ; RET
0814: 0e 00                      ; CLITERAL 0
0816: 0c                         ; RET
;
0817: 18 50 f4 00 00             ; DICTP NEGATE (f450)
081c: 0e 00                      ; CLITERAL 0
081e: 04                         ; SWAP
081f: 12                         ; SUB
0820: 0c                         ; RET
;
0821: 18 42 f4 00 00             ; DICTP ABS (f442)
0826: 06                         ; DUP
0827: 0e 00                      ; CLITERAL 0
0829: 15                         ; LT
082a: 09 34 08 00 00             ; JMPZ 0834
082f: 0b 17 08 00 00             ; CALL NEGATE (0817)
0834: 0c                         ; RET
;
0835: 18 2e f4 00 00             ; DICTP isNumber? (f42e)
083a: 06                         ; DUP
083b: 0f                         ; CFETCH
083c: 0e 2d                      ; CLITERAL 45
083e: 16                         ; EQ
083f: 06                         ; DUP
0840: 0b dc 03 00 00             ; CALL isNeg (03dc)
0845: 10                         ; CSTORE
0846: 09 4c 08 00 00             ; JMPZ 084c
084b: 2c                         ; INC
084c: 0e 00                      ; CLITERAL 0
084e: 21                         ; DTOR
084f: 06                         ; DUP
0850: 0f                         ; CFETCH
0851: 06                         ; DUP
0852: 0e 00                      ; CLITERAL 0
0854: 16                         ; EQ
0855: 09 70 08 00 00             ; JMPZ 0870
085a: 05                         ; DROP
085b: 05                         ; DROP
085c: 22                         ; RTOD
085d: 0b dc 03 00 00             ; CALL isNeg (03dc)
0862: 0f                         ; CFETCH
0863: 09 6d 08 00 00             ; JMPZ 086d
0868: 0b 17 08 00 00             ; CALL NEGATE (0817)
086d: 0e 01                      ; CLITERAL 1
086f: 0c                         ; RET
0870: 0b c6 07 00 00             ; CALL isNumChar? (07c6)
0875: 09 87 08 00 00             ; JMPZ 0887
087a: 22                         ; RTOD
087b: 0e 06                      ; CLITERAL 6
087d: 0f                         ; CFETCH
087e: 13                         ; MUL
087f: 11                         ; ADD
0880: 21                         ; DTOR
0881: 2c                         ; INC
0882: 08 8c 08 00 00             ; JMP 088c
0887: 05                         ; DROP
0888: 22                         ; RTOD
0889: 0e 00                      ; CLITERAL 0
088b: 0c                         ; RET
088c: 08 4f 08 00 00             ; JMP 084f
0891: 0c                         ; RET
;
0892: 18 20 f4 00 00             ; DICTP MOD (f420)
0897: 1a                         ; OVER
0898: 1a                         ; OVER
0899: 14                         ; DIV
089a: 13                         ; MUL
089b: 12                         ; SUB
089c: 0c                         ; RET
;
089d: 18 11 f4 00 00             ; DICTP /MOD (f411)
08a2: 1a                         ; OVER
08a3: 1a                         ; OVER
08a4: 14                         ; DIV
08a5: 06                         ; DUP
08a6: 21                         ; DTOR
08a7: 13                         ; MUL
08a8: 12                         ; SUB
08a9: 22                         ; RTOD
08aa: 0c                         ; RET
;
08ab: 18 01 f4 00 00             ; DICTP SPACE (f401)
08b0: 0e 20                      ; CLITERAL 32
08b2: 19                         ; EMIT
08b3: 0c                         ; RET
;
08b4: 18 f1 f3 00 00             ; DICTP isNeg (f3f1)
08b9: 01 bf 08 00 00             ; LITERAL 2239 (8bf)
08be: 0c                         ; RET
08bf: 00                         ; RESET
08c0: 00                         ; RESET
08c1: 00                         ; RESET
08c2: 00                         ; RESET
08c3: 0c                         ; RET
;
08c4: 18 e0 f3 00 00             ; DICTP .isNeg (f3e0)
08c9: 0b b4 08 00 00             ; CALL isNeg (08b4)
08ce: 02                         ; FETCH
08cf: 09 d7 08 00 00             ; JMPZ 08d7
08d4: 0e 2d                      ; CLITERAL 45
08d6: 19                         ; EMIT
08d7: 0c                         ; RET
;
08d8: 18 d3 f3 00 00             ; DICTP <# (f3d3)
08dd: 0e 00                      ; CLITERAL 0
08df: 04                         ; SWAP
08e0: 06                         ; DUP
08e1: 0e 00                      ; CLITERAL 0
08e3: 15                         ; LT
08e4: 09 f5 08 00 00             ; JMPZ 08f5
08e9: 0b 17 08 00 00             ; CALL NEGATE (0817)
08ee: 0e 01                      ; CLITERAL 1
08f0: 08 f7 08 00 00             ; JMP 08f7
08f5: 0e 00                      ; CLITERAL 0
08f7: 0b b4 08 00 00             ; CALL isNeg (08b4)
08fc: 03                         ; STORE
08fd: 0c                         ; RET
;
08fe: 18 c7 f3 00 00             ; DICTP # (f3c7)
0903: 0e 06                      ; CLITERAL 6
0905: 0f                         ; CFETCH
0906: 0b 9d 08 00 00             ; CALL /MOD (089d)
090b: 04                         ; SWAP
090c: 0e 30                      ; CLITERAL 48
090e: 11                         ; ADD
090f: 06                         ; DUP
0910: 0e 39                      ; CLITERAL 57
0912: 17                         ; GT
0913: 09 1b 09 00 00             ; JMPZ 091b
0918: 0e 07                      ; CLITERAL 7
091a: 11                         ; ADD
091b: 04                         ; SWAP
091c: 0c                         ; RET
;
091d: 18 ba f3 00 00             ; DICTP #S (f3ba)
0922: 0b fe 08 00 00             ; CALL # (08fe)
0927: 06                         ; DUP
0928: 0e 00                      ; CLITERAL 0
092a: 16                         ; EQ
092b: 09 22 09 00 00             ; JMPZ 0922
0930: 0c                         ; RET
;
0931: 18 ad f3 00 00             ; DICTP #> (f3ad)
0936: 0c                         ; RET
;
0937: 18 9f f3 00 00             ; DICTP (.) (f39f)
093c: 0b d8 08 00 00             ; CALL <# (08d8)
0941: 0b 1d 09 00 00             ; CALL #S (091d)
0946: 0b 31 09 00 00             ; CALL #> (0931)
094b: 05                         ; DROP
094c: 0b c4 08 00 00             ; CALL .isNeg (08c4)
0951: 19                         ; EMIT
0952: 06                         ; DUP
0953: 0e 00                      ; CLITERAL 0
0955: 16                         ; EQ
0956: 09 51 09 00 00             ; JMPZ 0951
095b: 05                         ; DROP
095c: 0c                         ; RET
;
095d: 18 93 f3 00 00             ; DICTP . (f393)
0962: 0b 37 09 00 00             ; CALL (.) (0937)
0967: 0b ab 08 00 00             ; CALL SPACE (08ab)
096c: 0c                         ; RET
;
096d: 18 84 f3 00 00             ; DICTP HEX. (f384)
0972: 0e 06                      ; CLITERAL 6
0974: 0f                         ; CFETCH
0975: 04                         ; SWAP
0976: 0b b4 02 00 00             ; CALL HEX (02b4)
097b: 06                         ; DUP
097c: 0e 10                      ; CLITERAL 16
097e: 15                         ; LT
097f: 09 87 09 00 00             ; JMPZ 0987
0984: 0e 30                      ; CLITERAL 48
0986: 19                         ; EMIT
0987: 0b 37 09 00 00             ; CALL (.) (0937)
098c: 0e 06                      ; CLITERAL 6
098e: 10                         ; CSTORE
098f: 0c                         ; RET
;
0990: 18 71 f3 00 00             ; DICTP DECIMAL. (f371)
0995: 0e 06                      ; CLITERAL 6
0997: 0f                         ; CFETCH
0998: 04                         ; SWAP
0999: 0b bf 02 00 00             ; CALL DECIMAL (02bf)
099e: 0b 37 09 00 00             ; CALL (.) (0937)
09a3: 0e 06                      ; CLITERAL 6
09a5: 10                         ; CSTORE
09a6: 0c                         ; RET
;
09a7: 18 5f f3 00 00             ; DICTP BINARY. (f35f)
09ac: 0e 06                      ; CLITERAL 6
09ae: 0f                         ; CFETCH
09af: 04                         ; SWAP
09b0: 0b d5 02 00 00             ; CALL BINARY (02d5)
09b5: 0b 37 09 00 00             ; CALL (.) (0937)
09ba: 0e 06                      ; CLITERAL 6
09bc: 10                         ; CSTORE
09bd: 0c                         ; RET
;
09be: 18 51 f3 00 00             ; DICTP MIN (f351)
09c3: 1a                         ; OVER
09c4: 1a                         ; OVER
09c5: 17                         ; GT
09c6: 09 cc 09 00 00             ; JMPZ 09cc
09cb: 04                         ; SWAP
09cc: 05                         ; DROP
09cd: 0c                         ; RET
;
09ce: 18 43 f3 00 00             ; DICTP MAX (f343)
09d3: 1a                         ; OVER
09d4: 1a                         ; OVER
09d5: 15                         ; LT
09d6: 09 dc 09 00 00             ; JMPZ 09dc
09db: 04                         ; SWAP
09dc: 05                         ; DROP
09dd: 0c                         ; RET
;
09de: 18 36 f3 00 00             ; DICTP .S (f336)
09e3: 0e 20                      ; CLITERAL 32
09e5: 19                         ; EMIT
09e6: 26                         ; DEPTH
09e7: 0e 00                      ; CLITERAL 0
09e9: 15                         ; LT
09ea: 09 0d 0a 00 00             ; JMPZ 0a0d
09ef: 07 10 53 74 61 63 6b 20 75 6e 64 65 72 66 6c 6f 77 21 00 ; SLITERAL (09f0) [Stack underflow!]
0a02: 0b 1d 05 00 00             ; CALL COUNT (051d)
0a07: 0b 27 05 00 00             ; CALL TYPE (0527)
0a0c: fe                         ; RESET
0a0d: 26                         ; DEPTH
0a0e: 0e 00                      ; CLITERAL 0
0a10: 16                         ; EQ
0a11: 09 20 0a 00 00             ; JMPZ 0a20
0a16: 0e 28                      ; CLITERAL 40
0a18: 19                         ; EMIT
0a19: 0e ed                      ; CLITERAL 237
0a1b: 19                         ; EMIT
0a1c: 0e 29                      ; CLITERAL 41
0a1e: 19                         ; EMIT
0a1f: 0c                         ; RET
0a20: 0e 28                      ; CLITERAL 40
0a22: 19                         ; EMIT
0a23: 0b ab 08 00 00             ; CALL SPACE (08ab)
0a28: 26                         ; DEPTH
0a29: 2e                         ; RESET
0a2a: 21                         ; DTOR
0a2b: 22                         ; RTOD
0a2c: 06                         ; DUP
0a2d: 21                         ; DTOR
0a2e: 25                         ; PICK
0a2f: 0b 5d 09 00 00             ; CALL . (095d)
0a34: 22                         ; RTOD
0a35: 06                         ; DUP
0a36: 21                         ; DTOR
0a37: 09 44 0a 00 00             ; JMPZ 0a44
0a3c: 22                         ; RTOD
0a3d: 2e                         ; RESET
0a3e: 21                         ; DTOR
0a3f: 08 4a 0a 00 00             ; JMP 0a4a
0a44: 22                         ; RTOD
0a45: 05                         ; DROP
0a46: 0e 29                      ; CLITERAL 41
0a48: 19                         ; EMIT
0a49: 0c                         ; RET
0a4a: 08 2b 0a 00 00             ; JMP 0a2b
0a4f: 0c                         ; RET
;
0a50: 18 22 f3 00 00             ; DICTP .(MEM_SZ) (f322)
0a55: 07 08 4d 65 6d 6f 72 79 3a 20 00 ; SLITERAL (0a56) [Memory: ]
0a60: 0b 47 05 00 00             ; CALL CT (0547)
0a65: 0b ec 03 00 00             ; CALL MEM_SZ (03ec)
0a6a: 06                         ; DUP
0a6b: 0b 6d 09 00 00             ; CALL HEX. (096d)
0a70: 07 02 20 28 00             ; SLITERAL (0a71) [ (]
0a75: 0b 47 05 00 00             ; CALL CT (0547)
0a7a: 0b 37 09 00 00             ; CALL (.) (0937)
0a7f: 07 01 29 00                ; SLITERAL (0a80) [)]
0a83: 0b 47 05 00 00             ; CALL CT (0547)
0a88: 0c                         ; RET
;
0a89: 18 10 f3 00 00             ; DICTP .(HERE) (f310)
0a8e: 07 06 48 45 52 45 3a 20 00 ; SLITERAL (0a8f) [HERE: ]
0a97: 0b 47 05 00 00             ; CALL CT (0547)
0a9c: 0e 10                      ; CLITERAL 16
0a9e: 02                         ; FETCH
0a9f: 06                         ; DUP
0aa0: 0b 6d 09 00 00             ; CALL HEX. (096d)
0aa5: 07 02 20 28 00             ; SLITERAL (0aa6) [ (]
0aaa: 0b 47 05 00 00             ; CALL CT (0547)
0aaf: 0b 37 09 00 00             ; CALL (.) (0937)
0ab4: 07 01 29 00                ; SLITERAL (0ab5) [)]
0ab8: 0b 47 05 00 00             ; CALL CT (0547)
0abd: 0c                         ; RET
;
0abe: 18 fe f2 00 00             ; DICTP .(LAST) (f2fe)
0ac3: 07 06 4c 41 53 54 3a 20 00 ; SLITERAL (0ac4) [LAST: ]
0acc: 0b 47 05 00 00             ; CALL CT (0547)
0ad1: 0e 14                      ; CLITERAL 20
0ad3: 02                         ; FETCH
0ad4: 06                         ; DUP
0ad5: 0b 6d 09 00 00             ; CALL HEX. (096d)
0ada: 07 02 20 28 00             ; SLITERAL (0adb) [ (]
0adf: 0b 47 05 00 00             ; CALL CT (0547)
0ae4: 0b 37 09 00 00             ; CALL (.) (0937)
0ae9: 07 01 29 00                ; SLITERAL (0aea) [)]
0aed: 0b 47 05 00 00             ; CALL CT (0547)
0af2: 0c                         ; RET
;
0af3: 18 e8 f2 00 00             ; DICTP .WORD-SHORT (f2e8)
0af8: 06                         ; DUP
0af9: 0b cf 06 00 00             ; CALL DICT>NAME (06cf)
0afe: 0b 47 05 00 00             ; CALL CT (0547)
0b03: 0e 20                      ; CLITERAL 32
0b05: 19                         ; EMIT
0b06: 02                         ; FETCH
0b07: 0c                         ; RET
;
0b08: 18 d8 f2 00 00             ; DICTP WORDS (f2d8)
0b0d: 0e 14                      ; CLITERAL 20
0b0f: 02                         ; FETCH
0b10: 06                         ; DUP
0b11: 02                         ; FETCH
0b12: 0e 00                      ; CLITERAL 0
0b14: 16                         ; EQ
0b15: 09 22 0b 00 00             ; JMPZ 0b22
0b1a: 05                         ; DROP
0b1b: 0e 0d                      ; CLITERAL 13
0b1d: 19                         ; EMIT
0b1e: 0e 0a                      ; CLITERAL 10
0b20: 19                         ; EMIT
0b21: 0c                         ; RET
0b22: 0b f3 0a 00 00             ; CALL .WORD-SHORT (0af3)
0b27: 08 10 0b 00 00             ; JMP 0b10
0b2c: 0c                         ; RET
;
0b2d: 18 c3 f2 00 00             ; DICTP .WORD-LONG (f2c3)
0b32: 06                         ; DUP
0b33: 0b 6d 09 00 00             ; CALL HEX. (096d)
0b38: 0e 3a                      ; CLITERAL 58
0b3a: 19                         ; EMIT
0b3b: 0e 20                      ; CLITERAL 32
0b3d: 19                         ; EMIT
0b3e: 06                         ; DUP
0b3f: 0b cf 06 00 00             ; CALL DICT>NAME (06cf)
0b44: 0b 47 05 00 00             ; CALL CT (0547)
0b49: 0e 20                      ; CLITERAL 32
0b4b: 19                         ; EMIT
0b4c: 06                         ; DUP
0b4d: 0b 03 07 00 00             ; CALL DICT.GetXT (0703)
0b52: 0e 28                      ; CLITERAL 40
0b54: 19                         ; EMIT
0b55: 0b 6d 09 00 00             ; CALL HEX. (096d)
0b5a: 0e 29                      ; CLITERAL 41
0b5c: 19                         ; EMIT
0b5d: 06                         ; DUP
0b5e: 0b c3 06 00 00             ; CALL DICT>FLAGS (06c3)
0b63: 0f                         ; CFETCH
0b64: 06                         ; DUP
0b65: 07 09 2c 20 46 6c 61 67 73 3a 20 00 ; SLITERAL (0b66) [, Flags: ]
0b71: 0b 47 05 00 00             ; CALL CT (0547)
0b76: 0b 6d 09 00 00             ; CALL HEX. (096d)
0b7b: 06                         ; DUP
0b7c: 0b 4a 07 00 00             ; CALL FLAGS.ISINLINE? (074a)
0b81: 09 97 0b 00 00             ; JMPZ 0b97
0b86: 07 09 20 28 49 4e 4c 49 4e 45 29 00 ; SLITERAL (0b87) [ (INLINE)]
0b92: 0b 47 05 00 00             ; CALL CT (0547)
0b97: 0b 41 07 00 00             ; CALL FLAGS.ISIMMEDIATE? (0741)
0b9c: 09 b5 0b 00 00             ; JMPZ 0bb5
0ba1: 07 0c 20 28 49 4d 4d 45 44 49 41 54 45 29 00 ; SLITERAL (0ba2) [ (IMMEDIATE)]
0bb0: 0b 47 05 00 00             ; CALL CT (0547)
0bb5: 0e 0d                      ; CLITERAL 13
0bb7: 19                         ; EMIT
0bb8: 0e 0a                      ; CLITERAL 10
0bba: 19                         ; EMIT
0bbb: 02                         ; FETCH
0bbc: 0c                         ; RET
;
0bbd: 18 b2 f2 00 00             ; DICTP WORDSV (f2b2)
0bc2: 0b be 0a 00 00             ; CALL .(LAST) (0abe)
0bc7: 0e 0d                      ; CLITERAL 13
0bc9: 19                         ; EMIT
0bca: 0e 0a                      ; CLITERAL 10
0bcc: 19                         ; EMIT
0bcd: 0e 14                      ; CLITERAL 20
0bcf: 02                         ; FETCH
0bd0: 06                         ; DUP
0bd1: 02                         ; FETCH
0bd2: 0e 00                      ; CLITERAL 0
0bd4: 16                         ; EQ
0bd5: 09 e2 0b 00 00             ; JMPZ 0be2
0bda: 05                         ; DROP
0bdb: 0e 0d                      ; CLITERAL 13
0bdd: 19                         ; EMIT
0bde: 0e 0a                      ; CLITERAL 10
0be0: 19                         ; EMIT
0be1: 0c                         ; RET
0be2: 0b 2d 0b 00 00             ; CALL .WORD-LONG (0b2d)
0be7: 08 d0 0b 00 00             ; JMP 0bd0
0bec: 0c                         ; RET
;
0bed: 18 9e f2 00 00             ; DICTP NUM-WORDS (f29e)
0bf2: 0e 00                      ; CLITERAL 0
0bf4: 21                         ; DTOR
0bf5: 0e 14                      ; CLITERAL 20
0bf7: 02                         ; FETCH
0bf8: 06                         ; DUP
0bf9: 02                         ; FETCH
0bfa: 0e 00                      ; CLITERAL 0
0bfc: 16                         ; EQ
0bfd: 09 0b 0c 00 00             ; JMPZ 0c0b
0c02: 05                         ; DROP
0c03: 22                         ; RTOD
0c04: 0e 0d                      ; CLITERAL 13
0c06: 19                         ; EMIT
0c07: 0e 0a                      ; CLITERAL 10
0c09: 19                         ; EMIT
0c0a: 0c                         ; RET
0c0b: 22                         ; RTOD
0c0c: 2c                         ; INC
0c0d: 21                         ; DTOR
0c0e: 02                         ; FETCH
0c0f: 08 f8 0b 00 00             ; JMP 0bf8
0c14: 0c                         ; RET
;
0c15: 18 8d f2 00 00             ; DICTP .lastx (f28d)
0c1a: 0e 0d                      ; CLITERAL 13
0c1c: 19                         ; EMIT
0c1d: 0e 0a                      ; CLITERAL 10
0c1f: 19                         ; EMIT
0c20: 0e 14                      ; CLITERAL 20
0c22: 02                         ; FETCH
0c23: 04                         ; SWAP
0c24: 0e 00                      ; CLITERAL 0
0c26: 1a                         ; OVER
0c27: 1a                         ; OVER
0c28: 17                         ; GT
0c29: 09 41 0c 00 00             ; JMPZ 0c41
0c2e: 21                         ; DTOR
0c2f: 04                         ; SWAP
0c30: 22                         ; RTOD
0c31: 04                         ; SWAP
0c32: 0b 2d 0b 00 00             ; CALL .WORD-LONG (0b2d)
0c37: 04                         ; SWAP
0c38: 21                         ; DTOR
0c39: 04                         ; SWAP
0c3a: 22                         ; RTOD
0c3b: 2c                         ; INC
0c3c: 08 45 0c 00 00             ; JMP 0c45
0c41: 05                         ; DROP
0c42: 05                         ; DROP
0c43: 05                         ; DROP
0c44: 0c                         ; RET
0c45: 08 26 0c 00 00             ; JMP 0c26
0c4a: 0c                         ; RET
;
0c4b: 18 7b f2 00 00             ; DICTP EXECUTE (f27b)
0c50: 22                         ; RTOD
0c51: 05                         ; DROP
0c52: 21                         ; DTOR
0c53: 0c                         ; RET
;
0c54: 18 68 f2 00 00             ; DICTP find.ret (f268)
0c59: 06                         ; DUP
0c5a: 0f                         ; CFETCH
0c5b: 0e 0c                      ; CLITERAL 12
0c5d: 16                         ; EQ
0c5e: 09 64 0c 00 00             ; JMPZ 0c64
0c63: 0c                         ; RET
0c64: 2c                         ; INC
0c65: 08 59 0c 00 00             ; JMP 0c59
0c6a: 0c                         ; RET
;
0c6b: 18 55 f2 00 00             ; DICTP (inline) (f255)
0c70: 1a                         ; OVER
0c71: 1a                         ; OVER
0c72: 15                         ; LT
0c73: 09 79 0c 00 00             ; JMPZ 0c79
0c78: 04                         ; SWAP
0c79: 06                         ; DUP
0c7a: 0f                         ; CFETCH
0c7b: 0b a1 02 00 00             ; CALL C, (02a1)
0c80: 2c                         ; INC
0c81: 1a                         ; OVER
0c82: 1a                         ; OVER
0c83: 17                         ; GT
0c84: 0a 79 0c 00 00             ; JMPNZ 0c79
0c89: 05                         ; DROP
0c8a: 05                         ; DROP
0c8b: 0c                         ; RET
;
0c8c: 18 45 f2 00 00             ; DICTP DOES> (f245)
0c91: 22                         ; RTOD
0c92: 06                         ; DUP
0c93: 0b 54 0c 00 00             ; CALL find.ret (0c54)
0c98: 06                         ; DUP
0c99: 21                         ; DTOR
0c9a: 2c                         ; INC
0c9b: 0b 6b 0c 00 00             ; CALL (inline) (0c6b)
0ca0: 0c                         ; RET
;
0ca1: 18 2f f2 00 00             ; DICTP Copy.INLINE (f22f)
0ca6: 06                         ; DUP
0ca7: 0f                         ; CFETCH
0ca8: 0e 18                      ; CLITERAL 24
0caa: 16                         ; EQ
0cab: 09 b4 0c 00 00             ; JMPZ 0cb4
0cb0: 2c                         ; INC
0cb1: 0e 04                      ; CLITERAL 4
0cb3: 11                         ; ADD
0cb4: 06                         ; DUP
0cb5: 0b 54 0c 00 00             ; CALL find.ret (0c54)
0cba: 0b 6b 0c 00 00             ; CALL (inline) (0c6b)
0cbf: 0c                         ; RET
;
0cc0: 18 1e f2 00 00             ; DICTP strlen (f21e)
0cc5: 0e 00                      ; CLITERAL 0
0cc7: 04                         ; SWAP
0cc8: 04                         ; SWAP
0cc9: 1a                         ; OVER
0cca: 0f                         ; CFETCH
0ccb: 06                         ; DUP
0ccc: 09 d7 0c 00 00             ; JMPZ 0cd7
0cd1: 05                         ; DROP
0cd2: 2c                         ; INC
0cd3: 04                         ; SWAP
0cd4: 2c                         ; INC
0cd5: 0e 01                      ; CLITERAL 1
0cd7: 0a c8 0c 00 00             ; JMPNZ 0cc8
0cdc: 04                         ; SWAP
0cdd: 05                         ; DROP
0cde: 0c                         ; RET
;
0cdf: 18 0e f2 00 00             ; DICTP cstr, (f20e)
0ce4: 06                         ; DUP
0ce5: 0f                         ; CFETCH
0ce6: 1a                         ; OVER
0ce7: 11                         ; ADD
0ce8: 2c                         ; INC
0ce9: 2c                         ; INC
0cea: 0b 6b 0c 00 00             ; CALL (inline) (0c6b)
0cef: 0c                         ; RET
;
0cf0: 18 fa f1 00 00             ; DICTP [COMPILE] (f1fa)
0cf5: 0b 4a 07 00 00             ; CALL FLAGS.ISINLINE? (074a)
0cfa: 09 09 0d 00 00             ; JMPZ 0d09
0cff: 0b a1 0c 00 00             ; CALL Copy.INLINE (0ca1)
0d04: 08 13 0d 00 00             ; JMP 0d13
0d09: 0b 0e 01 00 00             ; CALL CALL (010e)
0d0e: 0b 8e 02 00 00             ; CALL , (028e)
0d13: 0c                         ; RET
;
0d14: 18 e4 f1 00 00             ; DICTP executeWord (f1e4)
0d19: 21                         ; DTOR
0d1a: 22                         ; RTOD
0d1b: 06                         ; DUP
0d1c: 21                         ; DTOR
0d1d: 0b 73 07 00 00             ; CALL findInDict (0773)
0d22: 09 5e 0d 00 00             ; JMPZ 0d5e
0d27: 22                         ; RTOD
0d28: 05                         ; DROP
0d29: 0b f4 02 00 00             ; CALL ?COMPILING (02f4)
0d2e: 09 53 0d 00 00             ; JMPZ 0d53
0d33: 06                         ; DUP
0d34: 0b 41 07 00 00             ; CALL FLAGS.ISIMMEDIATE? (0741)
0d39: 09 49 0d 00 00             ; JMPZ 0d49
0d3e: 05                         ; DROP
0d3f: 0b 4b 0c 00 00             ; CALL EXECUTE (0c4b)
0d44: 08 4e 0d 00 00             ; JMP 0d4e
0d49: 0b f0 0c 00 00             ; CALL [COMPILE] (0cf0)
0d4e: 08 59 0d 00 00             ; JMP 0d59
0d53: 05                         ; DROP
0d54: 0b 4b 0c 00 00             ; CALL EXECUTE (0c4b)
0d59: 08 b4 0d 00 00             ; JMP 0db4
0d5e: 05                         ; DROP
0d5f: 05                         ; DROP
0d60: 22                         ; RTOD
0d61: 06                         ; DUP
0d62: 21                         ; DTOR
0d63: 0b 35 08 00 00             ; CALL isNumber? (0835)
0d68: 09 a6 0d 00 00             ; JMPZ 0da6
0d6d: 0b f4 02 00 00             ; CALL ?COMPILING (02f4)
0d72: 09 a1 0d 00 00             ; JMPZ 0da1
0d77: 06                         ; DUP
0d78: 0e 00                      ; CLITERAL 0
0d7a: 0e ff                      ; CLITERAL 255
0d7c: 0b d1 05 00 00             ; CALL BETWEEN (05d1)
0d81: 09 97 0d 00 00             ; JMPZ 0d97
0d86: 0e 0e                      ; CLITERAL 14
0d88: 0b 70 00 00 00             ; CALL C, (0070)
0d8d: 0b a1 02 00 00             ; CALL C, (02a1)
0d92: 08 a1 0d 00 00             ; JMP 0da1
0d97: 0b aa 00 00 00             ; CALL LITERAL (00aa)
0d9c: 0b 8e 02 00 00             ; CALL , (028e)
0da1: 08 b2 0d 00 00             ; JMP 0db2
0da6: 05                         ; DROP
0da7: 07 02 3f 3f 00             ; SLITERAL (0da8) [??]
0dac: 0b 47 05 00 00             ; CALL CT (0547)
0db1: fe                         ; RESET
0db2: 22                         ; RTOD
0db3: 05                         ; DROP
0db4: 0c                         ; RET
;
0db5: 18 cd f1 00 00             ; DICTP executeInput (f1cd)
0dba: 0b cc 03 00 00             ; CALL >IN (03cc)
0dbf: 02                         ; FETCH
0dc0: 0b 53 06 00 00             ; CALL skipWS (0653)
0dc5: 0b cc 03 00 00             ; CALL >IN (03cc)
0dca: 03                         ; STORE
0dcb: 0b cc 03 00 00             ; CALL >IN (03cc)
0dd0: 02                         ; FETCH
0dd1: 0f                         ; CFETCH
0dd2: 09 f2 0d 00 00             ; JMPZ 0df2
0dd7: 0b cc 03 00 00             ; CALL >IN (03cc)
0ddc: 02                         ; FETCH
0ddd: 0b 7c 06 00 00             ; CALL getOneWord (067c)
0de2: 0b cc 03 00 00             ; CALL >IN (03cc)
0de7: 03                         ; STORE
0de8: 0b 14 0d 00 00             ; CALL executeWord (0d14)
0ded: 08 f3 0d 00 00             ; JMP 0df3
0df2: 0c                         ; RET
0df3: 08 ba 0d 00 00             ; JMP 0dba
0df8: 0c                         ; RET
;
0df9: 18 bf f1 00 00             ; DICTP Pad (f1bf)
0dfe: 0e 14                      ; CLITERAL 20
0e00: 02                         ; FETCH
0e01: 0e c8                      ; CLITERAL 200
0e03: 12                         ; SUB
0e04: 06                         ; DUP
0e05: 0e 10                      ; CLITERAL 16
0e07: 02                         ; FETCH
0e08: 15                         ; LT
0e09: 09 20 0e 00 00             ; JMPZ 0e20
0e0e: 07 0e 4f 75 74 20 6f 66 20 4d 65 6d 6f 72 79 21 00 ; SLITERAL (0e0f) [Out of Memory!]
0e1f: fe                         ; RESET
0e20: 0c                         ; RET
;
0e21: 18 a4 f1 00 00             ; DICTP LoadingFromFile? (f1a4)
0e26: 0e 1c                      ; CLITERAL 28
0e28: 02                         ; FETCH
0e29: 0c                         ; RET
;
0e2a: 18 8a f1 00 00             ; DICTP getLineFromFile (f18a)
0e2f: 0e c8                      ; CLITERAL 200
0e31: 0e 1c                      ; CLITERAL 28
0e33: 02                         ; FETCH
0e34: 1e                         ; FREADLINE
0e35: 0e 00                      ; CLITERAL 0
0e37: 16                         ; EQ
0e38: 09 44 0e 00 00             ; JMPZ 0e44
0e3d: 0e 1c                      ; CLITERAL 28
0e3f: 0b ea 02 00 00             ; CALL OFF (02ea)
0e44: 0c                         ; RET
;
0e45: 18 78 f1 00 00             ; DICTP getLine (f178)
0e4a: 0e 00                      ; CLITERAL 0
0e4c: 0b f9 0d 00 00             ; CALL Pad (0df9)
0e51: 06                         ; DUP
0e52: 2c                         ; INC
0e53: 0b cc 03 00 00             ; CALL >IN (03cc)
0e58: 03                         ; STORE
0e59: 10                         ; CSTORE
0e5a: 0b 21 0e 00 00             ; CALL LoadingFromFile? (0e21)
0e5f: 09 6f 0e 00 00             ; JMPZ 0e6f
0e64: 0b f9 0d 00 00             ; CALL Pad (0df9)
0e69: 0b 2a 0e 00 00             ; CALL getLineFromFile (0e2a)
0e6e: 0c                         ; RET
0e6f: 0e 00                      ; CLITERAL 0
0e71: 0b cc 03 00 00             ; CALL >IN (03cc)
0e76: 02                         ; FETCH
0e77: 10                         ; CSTORE
0e78: 27                         ; GETCH
0e79: 06                         ; DUP
0e7a: 0e 0d                      ; CLITERAL 13
0e7c: 16                         ; EQ
0e7d: 09 8c 0e 00 00             ; JMPZ 0e8c
0e82: 05                         ; DROP
0e83: 0b f9 0d 00 00             ; CALL Pad (0df9)
0e88: 0e 20                      ; CLITERAL 32
0e8a: 19                         ; EMIT
0e8b: 0c                         ; RET
0e8c: 06                         ; DUP
0e8d: 0e 09                      ; CLITERAL 9
0e8f: 16                         ; EQ
0e90: 09 98 0e 00 00             ; JMPZ 0e98
0e95: 05                         ; DROP
0e96: 0e 20                      ; CLITERAL 32
0e98: 06                         ; DUP
0e99: 0e 03                      ; CLITERAL 3
0e9b: 16                         ; EQ
0e9c: 09 a2 0e 00 00             ; JMPZ 0ea2
0ea1: ff                         ; BYE
0ea2: 06                         ; DUP
0ea3: 0e 08                      ; CLITERAL 8
0ea5: 16                         ; EQ
0ea6: 09 de 0e 00 00             ; JMPZ 0ede
0eab: 0b f9 0d 00 00             ; CALL Pad (0df9)
0eb0: 0f                         ; CFETCH
0eb1: 0e 00                      ; CLITERAL 0
0eb3: 17                         ; GT
0eb4: 09 d8 0e 00 00             ; JMPZ 0ed8
0eb9: 0b f9 0d 00 00             ; CALL Pad (0df9)
0ebe: 0b ba 04 00 00             ; CALL C-- (04ba)
0ec3: 0b cc 03 00 00             ; CALL >IN (03cc)
0ec8: 0b a2 04 00 00             ; CALL -- (04a2)
0ecd: 06                         ; DUP
0ece: 19                         ; EMIT
0ecf: 0e 20                      ; CLITERAL 32
0ed1: 19                         ; EMIT
0ed2: 19                         ; EMIT
0ed3: 08 d9 0e 00 00             ; JMP 0ed9
0ed8: 05                         ; DROP
0ed9: 08 10 0f 00 00             ; JMP 0f10
0ede: 06                         ; DUP
0edf: 0e 20                      ; CLITERAL 32
0ee1: 0e 7f                      ; CLITERAL 127
0ee3: 0b d1 05 00 00             ; CALL BETWEEN (05d1)
0ee8: 09 0f 0f 00 00             ; JMPZ 0f0f
0eed: 06                         ; DUP
0eee: 19                         ; EMIT
0eef: 0b cc 03 00 00             ; CALL >IN (03cc)
0ef4: 02                         ; FETCH
0ef5: 10                         ; CSTORE
0ef6: 0b cc 03 00 00             ; CALL >IN (03cc)
0efb: 0b 95 04 00 00             ; CALL ++ (0495)
0f00: 0b f9 0d 00 00             ; CALL Pad (0df9)
0f05: 0b af 04 00 00             ; CALL C++ (04af)
0f0a: 08 10 0f 00 00             ; JMP 0f10
0f0f: 05                         ; DROP
0f10: 08 6f 0e 00 00             ; JMP 0e6f
0f15: 0c                         ; RET
;
0f16: 18 65 f1 00 00             ; DICTP strcpy2c (f165)
0f1b: 06                         ; DUP
0f1c: 21                         ; DTOR
0f1d: 0e 00                      ; CLITERAL 0
0f1f: 1a                         ; OVER
0f20: 10                         ; CSTORE
0f21: 2c                         ; INC
0f22: 04                         ; SWAP
0f23: 06                         ; DUP
0f24: 0f                         ; CFETCH
0f25: 06                         ; DUP
0f26: 09 40 0f 00 00             ; JMPZ 0f40
0f2b: 0e 02                      ; CLITERAL 2
0f2d: 25                         ; PICK
0f2e: 10                         ; CSTORE
0f2f: 04                         ; SWAP
0f30: 2c                         ; INC
0f31: 04                         ; SWAP
0f32: 2c                         ; INC
0f33: 22                         ; RTOD
0f34: 06                         ; DUP
0f35: 21                         ; DTOR
0f36: 0b af 04 00 00             ; CALL C++ (04af)
0f3b: 08 49 0f 00 00             ; JMP 0f49
0f40: 21                         ; DTOR
0f41: 04                         ; SWAP
0f42: 22                         ; RTOD
0f43: 04                         ; SWAP
0f44: 10                         ; CSTORE
0f45: 05                         ; DROP
0f46: 22                         ; RTOD
0f47: 05                         ; DROP
0f48: 0c                         ; RET
0f49: 08 23 0f 00 00             ; JMP 0f23
0f4e: 0c                         ; RET
;
0f4f: 18 4f f1 00 00             ; DICTP Define-Word (f14f)
0f54: 0e 14                      ; CLITERAL 20
0f56: 02                         ; FETCH
0f57: 1a                         ; OVER
0f58: 0b c0 0c 00 00             ; CALL strlen (0cc0)
0f5d: 0e 02                      ; CLITERAL 2
0f5f: 0e 04                      ; CLITERAL 4
0f61: 13                         ; MUL
0f62: 0e 03                      ; CLITERAL 3
0f64: 11                         ; ADD
0f65: 11                         ; ADD
0f66: 12                         ; SUB
0f67: 06                         ; DUP
0f68: 21                         ; DTOR
0f69: 21                         ; DTOR
0f6a: 0e 14                      ; CLITERAL 20
0f6c: 02                         ; FETCH
0f6d: 22                         ; RTOD
0f6e: 06                         ; DUP
0f6f: 21                         ; DTOR
0f70: 03                         ; STORE
0f71: 22                         ; RTOD
0f72: 0e 04                      ; CLITERAL 4
0f74: 11                         ; ADD
0f75: 21                         ; DTOR
0f76: 0e 10                      ; CLITERAL 16
0f78: 02                         ; FETCH
0f79: 22                         ; RTOD
0f7a: 06                         ; DUP
0f7b: 21                         ; DTOR
0f7c: 03                         ; STORE
0f7d: 22                         ; RTOD
0f7e: 0e 04                      ; CLITERAL 4
0f80: 11                         ; ADD
0f81: 21                         ; DTOR
0f82: 0e 00                      ; CLITERAL 0
0f84: 22                         ; RTOD
0f85: 06                         ; DUP
0f86: 21                         ; DTOR
0f87: 10                         ; CSTORE
0f88: 22                         ; RTOD
0f89: 2c                         ; INC
0f8a: 21                         ; DTOR
0f8b: 22                         ; RTOD
0f8c: 0b 16 0f 00 00             ; CALL strcpy2c (0f16)
0f91: 22                         ; RTOD
0f92: 0e 14                      ; CLITERAL 20
0f94: 03                         ; STORE
0f95: 0c                         ; RET
;
0f96: 18 39 f1 00 00             ; DICTP CREATE-NAME (f139)
0f9b: 0b cc 03 00 00             ; CALL >IN (03cc)
0fa0: 02                         ; FETCH
0fa1: 0b 53 06 00 00             ; CALL skipWS (0653)
0fa6: 0b cc 03 00 00             ; CALL >IN (03cc)
0fab: 03                         ; STORE
0fac: 0b cc 03 00 00             ; CALL >IN (03cc)
0fb1: 02                         ; FETCH
0fb2: 0f                         ; CFETCH
0fb3: 09 eb 0f 00 00             ; JMPZ 0feb
0fb8: 0b cc 03 00 00             ; CALL >IN (03cc)
0fbd: 02                         ; FETCH
0fbe: 0b 7c 06 00 00             ; CALL getOneWord (067c)
0fc3: 0b cc 03 00 00             ; CALL >IN (03cc)
0fc8: 03                         ; STORE
0fc9: 06                         ; DUP
0fca: 0f                         ; CFETCH
0fcb: 09 e9 0f 00 00             ; JMPZ 0fe9
0fd0: 0b 4f 0f 00 00             ; CALL Define-Word (0f4f)
0fd5: 0e 18                      ; CLITERAL 24
0fd7: 0b 70 00 00 00             ; CALL C, (0070)
0fdc: 0e 14                      ; CLITERAL 20
0fde: 02                         ; FETCH
0fdf: 0b 8e 02 00 00             ; CALL , (028e)
0fe4: 08 eb 0f 00 00             ; JMP 0feb
0fe9: 05                         ; DROP
0fea: fe                         ; RESET
0feb: 0c                         ; RET
;
0fec: 18 2d f1 00 00             ; DICTP : (f12d)
0ff1: 0b 96 0f 00 00             ; CALL CREATE-NAME (0f96)
0ff6: 0e 20                      ; CLITERAL 32
0ff8: 0b e0 02 00 00             ; CALL ON (02e0)
0ffd: 0c                         ; RET
;
0ffe: 18 1b f1 00 00             ; DICTP :NONAME (f11b)
1003: 0e 10                      ; CLITERAL 16
1005: 02                         ; FETCH
1006: 0e 20                      ; CLITERAL 32
1008: 0b e0 02 00 00             ; CALL ON (02e0)
100d: 0c                         ; RET
;
100e: 18 0f f1 00 00             ; DICTP ; (f10f)
1013: 0b 1b 01 00 00             ; CALL RET (011b)
1018: 0e 20                      ; CLITERAL 32
101a: 0b ea 02 00 00             ; CALL OFF (02ea)
101f: 0c                         ; RET
;
1020: 18 fa f0 00 00             ; DICTP ForgetLast (f0fa)
1025: 0e 14                      ; CLITERAL 20
1027: 02                         ; FETCH
1028: 0e 04                      ; CLITERAL 4
102a: 11                         ; ADD
102b: 02                         ; FETCH
102c: 0e 10                      ; CLITERAL 16
102e: 03                         ; STORE
102f: 0e 14                      ; CLITERAL 20
1031: 02                         ; FETCH
1032: 02                         ; FETCH
1033: 0e 14                      ; CLITERAL 20
1035: 03                         ; STORE
1036: 0c                         ; RET
;
1037: 18 e5 f0 00 00             ; DICTP resetState (f0e5)
103c: 0b f4 02 00 00             ; CALL ?COMPILING (02f4)
1041: 09 4b 10 00 00             ; JMPZ 104b
1046: 0b 20 10 00 00             ; CALL ForgetLast (1020)
104b: 0e 20                      ; CLITERAL 32
104d: 0b ea 02 00 00             ; CALL OFF (02ea)
1052: 0b bf 02 00 00             ; CALL DECIMAL (02bf)
1057: 0c                         ; RET
;
1058: 18 d5 f0 00 00             ; DICTP ALLOT (f0d5)
105d: 0e 10                      ; CLITERAL 16
105f: 02                         ; FETCH
1060: 11                         ; ADD
1061: 0e 10                      ; CLITERAL 16
1063: 03                         ; STORE
1064: 0c                         ; RET
;
1065: 18 c9 f0 00 00             ; DICTP ? (f0c9)
106a: 02                         ; FETCH
106b: 0b 5d 09 00 00             ; CALL . (095d)
1070: 0c                         ; RET
;
1071: 18 bc f0 00 00             ; DICTP C? (f0bc)
1076: 0f                         ; CFETCH
1077: 0b 5d 09 00 00             ; CALL . (095d)
107c: 0c                         ; RET
;
107d: 18 ad f0 00 00             ; DICTP FREE (f0ad)
1082: 0e 14                      ; CLITERAL 20
1084: 02                         ; FETCH
1085: 0e 10                      ; CLITERAL 16
1087: 02                         ; FETCH
1088: 12                         ; SUB
1089: 0c                         ; RET
;
108a: 18 9d f0 00 00             ; DICTP .FREE (f09d)
108f: 0b 7d 10 00 00             ; CALL FREE (107d)
1094: 0b 37 09 00 00             ; CALL (.) (0937)
1099: 07 0c 20 62 79 74 65 73 20 66 72 65 65 2e 00 ; SLITERAL (109a) [ bytes free.]
10a8: 0b 47 05 00 00             ; CALL CT (0547)
10ad: 0c                         ; RET
;
10ae: 18 8a f0 00 00             ; DICTP mainLoop (f08a)
10b3: 0b 37 10 00 00             ; CALL resetState (1037)
10b8: 0b f9 05 00 00             ; CALL tmp-init (05f9)
10bd: 0b f4 02 00 00             ; CALL ?COMPILING (02f4)
10c2: 0e 00                      ; CLITERAL 0
10c4: 16                         ; EQ
10c5: 09 da 10 00 00             ; JMPZ 10da
10ca: 07 03 20 4f 4b 00          ; SLITERAL (10cb) [ OK]
10d0: 0b 47 05 00 00             ; CALL CT (0547)
10d5: 0b de 09 00 00             ; CALL .S (09de)
10da: 0e 0d                      ; CLITERAL 13
10dc: 19                         ; EMIT
10dd: 0e 0a                      ; CLITERAL 10
10df: 19                         ; EMIT
10e0: 0b 45 0e 00 00             ; CALL getLine (0e45)
10e5: 2c                         ; INC
10e6: 0b cc 03 00 00             ; CALL >IN (03cc)
10eb: 03                         ; STORE
10ec: 0b b5 0d 00 00             ; CALL executeInput (0db5)
10f1: 0e 20                      ; CLITERAL 32
10f3: 19                         ; EMIT
10f4: 08 b8 10 00 00             ; JMP 10b8
10f9: 0c                         ; RET
;
10fa: 18 7b f0 00 00             ; DICTP main (f07b)
10ff: 0e 20                      ; CLITERAL 32
1101: 02                         ; FETCH
1102: 0e 63                      ; CLITERAL 99
1104: 16                         ; EQ
1105: 09 1f 11 00 00             ; JMPZ 111f
110a: 0e 20                      ; CLITERAL 32
110c: 0b ea 02 00 00             ; CALL OFF (02ea)
1111: 07 06 48 65 6c 6c 6f 2e 00 ; SLITERAL (1112) [Hello.]
111a: 0b 47 05 00 00             ; CALL CT (0547)
111f: 0b ae 10 00 00             ; CALL mainLoop (10ae)
1124: 0c                         ; RET
;
1125: 18 64 f0 00 00             ; DICTP file-getLine (f064)
112a: 0b f9 0d 00 00             ; CALL Pad (0df9)
112f: 04                         ; SWAP
1130: 0e c8                      ; CLITERAL 200
1132: 04                         ; SWAP
1133: 1e                         ; FREADLINE
1134: 0b f9 0d 00 00             ; CALL Pad (0df9)
1139: 04                         ; SWAP
113a: 0c                         ; RET
;
113b: 18 55 f0 00 00             ; DICTP load (f055)
1140: 0e 00                      ; CLITERAL 0
1142: 0e 00                      ; CLITERAL 0
1144: 1c                         ; FOPEN
1145: 0e 00                      ; CLITERAL 0
1147: 16                         ; EQ
1148: 09 67 11 00 00             ; JMPZ 1167
114d: 07 11 43 61 6e 6e 6f 74 20 6f 70 65 6e 20 66 69 6c 65 2e 00 ; SLITERAL (114e) [Cannot open file.]
1161: 0b 47 05 00 00             ; CALL CT (0547)
1166: 0c                         ; RET
1167: 0e 1c                      ; CLITERAL 28
1169: 03                         ; STORE
116a: 0e 1c                      ; CLITERAL 28
116c: 02                         ; FETCH
116d: 0b 25 11 00 00             ; CALL file-getLine (1125)
1172: 09 88 11 00 00             ; JMPZ 1188
1177: 2c                         ; INC
1178: 0b cc 03 00 00             ; CALL >IN (03cc)
117d: 03                         ; STORE
117e: 0b b5 0d 00 00             ; CALL executeInput (0db5)
1183: 08 95 11 00 00             ; JMP 1195
1188: 05                         ; DROP
1189: 0e 1c                      ; CLITERAL 28
118b: 02                         ; FETCH
118c: 20                         ; FCLOSE
118d: 0e 1c                      ; CLITERAL 28
118f: 0b ea 02 00 00             ; CALL OFF (02ea)
1194: 0c                         ; RET
1195: 08 6a 11 00 00             ; JMP 116a
119a: 0c                         ; RET
;
119b: 18 41 f0 00 00             ; DICTP STR.EMPTY (f041)
11a0: 0e 00                      ; CLITERAL 0
11a2: 1a                         ; OVER
11a3: 03                         ; STORE
11a4: 0c                         ; RET
;
11a5: 18 2f f0 00 00             ; DICTP STR.LEN (f02f)
11aa: 06                         ; DUP
11ab: 0f                         ; CFETCH
11ac: 0c                         ; RET
;
11ad: 18 1c f0 00 00             ; DICTP STR.CATC (f01c)
11b2: 1a                         ; OVER
11b3: 06                         ; DUP
11b4: 0b af 04 00 00             ; CALL C++ (04af)
11b9: 06                         ; DUP
11ba: 0f                         ; CFETCH
11bb: 11                         ; ADD
11bc: 0e 00                      ; CLITERAL 0
11be: 1a                         ; OVER
11bf: 2c                         ; INC
11c0: 10                         ; CSTORE
11c1: 10                         ; CSTORE
11c2: 0c                         ; RET
;
11c3: 18 05 f0 00 00             ; DICTP STR.NULLTERM (f005)
11c8: 06                         ; DUP
11c9: 06                         ; DUP
11ca: 0f                         ; CFETCH
11cb: 11                         ; ADD
11cc: 2c                         ; INC
11cd: 0e 00                      ; CLITERAL 0
11cf: 04                         ; SWAP
11d0: 10                         ; CSTORE
11d1: 0c                         ; RET
;
11d2: 18 f8 ef 00 00             ; DICTP I" (eff8)
11d7: 0e 10                      ; CLITERAL 16
11d9: 02                         ; FETCH
11da: 0e 64                      ; CLITERAL 100
11dc: 11                         ; ADD
11dd: 0e 00                      ; CLITERAL 0
11df: 1a                         ; OVER
11e0: 03                         ; STORE
11e1: 0b cc 03 00 00             ; CALL >IN (03cc)
11e6: 02                         ; FETCH
11e7: 0f                         ; CFETCH
11e8: 06                         ; DUP
11e9: 0e 00                      ; CLITERAL 0
11eb: 16                         ; EQ
11ec: 09 0d 12 00 00             ; JMPZ 120d
11f1: 07 10 6d 69 73 73 69 6e 67 20 63 6c 6f 73 69 6e 67 20 00 ; SLITERAL (11f2) [missing closing ]
1204: 0b 47 05 00 00             ; CALL CT (0547)
1209: 0e 22                      ; CLITERAL 34
120b: 19                         ; EMIT
120c: fe                         ; RESET
120d: 0b cc 03 00 00             ; CALL >IN (03cc)
1212: 0b 95 04 00 00             ; CALL ++ (0495)
1217: 06                         ; DUP
1218: 0e 22                      ; CLITERAL 34
121a: 16                         ; EQ
121b: 09 22 12 00 00             ; JMPZ 1222
1220: 05                         ; DROP
1221: 0c                         ; RET
1222: 0b ad 11 00 00             ; CALL STR.CATC (11ad)
1227: 08 e1 11 00 00             ; JMP 11e1
122c: 0c                         ; RET
;
122d: 18 ec ef 00 00             ; DICTP " (efec)
1232: 0b f4 02 00 00             ; CALL ?COMPILING (02f4)
1237: 0e 00                      ; CLITERAL 0
1239: 16                         ; EQ
123a: 09 45 12 00 00             ; JMPZ 1245
123f: 0b d2 11 00 00             ; CALL I" (11d2)
1244: 0c                         ; RET
1245: 0b da 00 00 00             ; CALL SLITERAL (00da)
124a: 0e 10                      ; CLITERAL 16
124c: 02                         ; FETCH
124d: 0e 00                      ; CLITERAL 0
124f: 0b a1 02 00 00             ; CALL C, (02a1)
1254: 0b cc 03 00 00             ; CALL >IN (03cc)
1259: 02                         ; FETCH
125a: 0f                         ; CFETCH
125b: 06                         ; DUP
125c: 0e 00                      ; CLITERAL 0
125e: 16                         ; EQ
125f: 09 89 12 00 00             ; JMPZ 1289
1264: 05                         ; DROP
1265: 2e                         ; RESET
1266: 0e 10                      ; CLITERAL 16
1268: 03                         ; STORE
1269: 07 11 6d 69 73 73 69 6e 67 20 63 6c 6f 73 69 6e 67 20 27 00 ; SLITERAL (126a) [missing closing ']
127d: 0b 47 05 00 00             ; CALL CT (0547)
1282: 0e 22                      ; CLITERAL 34
1284: 19                         ; EMIT
1285: 0e 27                      ; CLITERAL 39
1287: 19                         ; EMIT
1288: fe                         ; RESET
1289: 0b cc 03 00 00             ; CALL >IN (03cc)
128e: 0b 95 04 00 00             ; CALL ++ (0495)
1293: 06                         ; DUP
1294: 0e 22                      ; CLITERAL 34
1296: 16                         ; EQ
1297: 09 ad 12 00 00             ; JMPZ 12ad
129c: 05                         ; DROP
129d: 0e 10                      ; CLITERAL 16
129f: 02                         ; FETCH
12a0: 0e 00                      ; CLITERAL 0
12a2: 0b a1 02 00 00             ; CALL C, (02a1)
12a7: 1a                         ; OVER
12a8: 12                         ; SUB
12a9: 2e                         ; RESET
12aa: 04                         ; SWAP
12ab: 10                         ; CSTORE
12ac: 0c                         ; RET
12ad: 0b a1 02 00 00             ; CALL C, (02a1)
12b2: 08 54 12 00 00             ; JMP 1254
12b7: 0c                         ; RET
;
12b8: 18 df ef 00 00             ; DICTP ll (efdf)
12bd: 07 09 6c 6f 61 64 73 2e 34 74 68 00 ; SLITERAL (12be) [loads.4th]
12c9: 0b 3b 11 00 00             ; CALL load (113b)
12ce: 0c                         ; RET
;
12cf: 18 cc ef 00 00             ; DICTP sys-info (efcc)
12d4: 0b 50 0a 00 00             ; CALL .(MEM_SZ) (0a50)
12d9: 0e 2c                      ; CLITERAL 44
12db: 19                         ; EMIT
12dc: 0e 20                      ; CLITERAL 32
12de: 19                         ; EMIT
12df: 0b 89 0a 00 00             ; CALL .(HERE) (0a89)
12e4: 0e 2c                      ; CLITERAL 44
12e6: 19                         ; EMIT
12e7: 0e 20                      ; CLITERAL 32
12e9: 19                         ; EMIT
12ea: 0b be 0a 00 00             ; CALL .(LAST) (0abe)
12ef: 0e 2c                      ; CLITERAL 44
12f1: 19                         ; EMIT
12f2: 0e 20                      ; CLITERAL 32
12f4: 19                         ; EMIT
12f5: 0b 8a 10 00 00             ; CALL .FREE (108a)
12fa: 0e 0d                      ; CLITERAL 13
12fc: 19                         ; EMIT
12fd: 0e 0a                      ; CLITERAL 10
12ff: 19                         ; EMIT
1300: 0c                         ; RET
;
1301: 18 ba ef 00 00             ; DICTP countTo (efba)
1306: 07 0b 63 6f 75 6e 74 69 6e 67 20 74 6f 00 ; SLITERAL (1307) [counting to]
1314: 0b 47 05 00 00             ; CALL CT (0547)
1319: 06                         ; DUP
131a: 0b 5d 09 00 00             ; CALL . (095d)
131f: 07 04 20 2e 2e 2e 00       ; SLITERAL (1320) [ ...]
1326: 0b 47 05 00 00             ; CALL CT (0547)
132b: 0e 01                      ; CLITERAL 1
132d: 1a                         ; OVER
132e: 1a                         ; OVER
132f: 15                         ; LT
1330: 09 4c 13 00 00             ; JMPZ 134c
1335: 07 06 20 64 6f 6e 65 2e 00 ; SLITERAL (1336) [ done.]
133e: 0b 47 05 00 00             ; CALL CT (0547)
1343: 0e 0d                      ; CLITERAL 13
1345: 19                         ; EMIT
1346: 0e 0a                      ; CLITERAL 10
1348: 19                         ; EMIT
1349: 05                         ; DROP
134a: 05                         ; DROP
134b: 0c                         ; RET
134c: 2c                         ; INC
134d: 08 2d 13 00 00             ; JMP 132d
1352: 0c                         ; RET
;
; End of code, Dictionary:
;
efba: cc ef 00 00                ; countTo - (next: efcc sys-info)
efbe: 01 13 00 00 00             ; XT=1301, flags=00
efc3: 07 63 6f 75 6e 74 54 6f 00 ; 7, countTo
;
efcc: df ef 00 00                ; sys-info - (next: efdf ll)
efd0: cf 12 00 00 00             ; XT=12cf, flags=00
efd5: 08 73 79 73 2d 69 6e 66 6f 00 ; 8, sys-info
;
efdf: ec ef 00 00                ; ll - (next: efec ")
efe3: b8 12 00 00 00             ; XT=12b8, flags=00
efe8: 02 6c 6c 00                ; 2, ll
;
efec: f8 ef 00 00                ; " - (next: eff8 I")
eff0: 2d 12 00 00 01             ; XT=122d, flags=01
eff5: 01 22 00                   ; 1, "
;
eff8: 05 f0 00 00                ; I" - (next: f005 STR.NULLTERM)
effc: d2 11 00 00 00             ; XT=11d2, flags=00
f001: 02 49 22 00                ; 2, I"
;
f005: 1c f0 00 00                ; STR.NULLTERM - (next: f01c STR.CATC)
f009: c3 11 00 00 00             ; XT=11c3, flags=00
f00e: 0c 53 54 52 2e 4e 55 4c 4c 54 45 52 4d 00 ; 12, STR.NULLTERM
;
f01c: 2f f0 00 00                ; STR.CATC - (next: f02f STR.LEN)
f020: ad 11 00 00 00             ; XT=11ad, flags=00
f025: 08 53 54 52 2e 43 41 54 43 00 ; 8, STR.CATC
;
f02f: 41 f0 00 00                ; STR.LEN - (next: f041 STR.EMPTY)
f033: a5 11 00 00 02             ; XT=11a5, flags=02
f038: 07 53 54 52 2e 4c 45 4e 00 ; 7, STR.LEN
;
f041: 55 f0 00 00                ; STR.EMPTY - (next: f055 load)
f045: 9b 11 00 00 02             ; XT=119b, flags=02
f04a: 09 53 54 52 2e 45 4d 50 54 59 00 ; 9, STR.EMPTY
;
f055: 64 f0 00 00                ; load - (next: f064 file-getLine)
f059: 3b 11 00 00 00             ; XT=113b, flags=00
f05e: 04 6c 6f 61 64 00          ; 4, load
;
f064: 7b f0 00 00                ; file-getLine - (next: f07b main)
f068: 25 11 00 00 00             ; XT=1125, flags=00
f06d: 0c 66 69 6c 65 2d 67 65 74 4c 69 6e 65 00 ; 12, file-getLine
;
f07b: 8a f0 00 00                ; main - (next: f08a mainLoop)
f07f: fa 10 00 00 00             ; XT=10fa, flags=00
f084: 04 6d 61 69 6e 00          ; 4, main
;
f08a: 9d f0 00 00                ; mainLoop - (next: f09d .FREE)
f08e: ae 10 00 00 00             ; XT=10ae, flags=00
f093: 08 6d 61 69 6e 4c 6f 6f 70 00 ; 8, mainLoop
;
f09d: ad f0 00 00                ; .FREE - (next: f0ad FREE)
f0a1: 8a 10 00 00 00             ; XT=108a, flags=00
f0a6: 05 2e 46 52 45 45 00       ; 5, .FREE
;
f0ad: bc f0 00 00                ; FREE - (next: f0bc C?)
f0b1: 7d 10 00 00 00             ; XT=107d, flags=00
f0b6: 04 46 52 45 45 00          ; 4, FREE
;
f0bc: c9 f0 00 00                ; C? - (next: f0c9 ?)
f0c0: 71 10 00 00 00             ; XT=1071, flags=00
f0c5: 02 43 3f 00                ; 2, C?
;
f0c9: d5 f0 00 00                ; ? - (next: f0d5 ALLOT)
f0cd: 65 10 00 00 00             ; XT=1065, flags=00
f0d2: 01 3f 00                   ; 1, ?
;
f0d5: e5 f0 00 00                ; ALLOT - (next: f0e5 resetState)
f0d9: 58 10 00 00 00             ; XT=1058, flags=00
f0de: 05 41 4c 4c 4f 54 00       ; 5, ALLOT
;
f0e5: fa f0 00 00                ; resetState - (next: f0fa ForgetLast)
f0e9: 37 10 00 00 00             ; XT=1037, flags=00
f0ee: 0a 72 65 73 65 74 53 74 61 74 65 00 ; 10, resetState
;
f0fa: 0f f1 00 00                ; ForgetLast - (next: f10f ;)
f0fe: 20 10 00 00 00             ; XT=1020, flags=00
f103: 0a 46 6f 72 67 65 74 4c 61 73 74 00 ; 10, ForgetLast
;
f10f: 1b f1 00 00                ; ; - (next: f11b :NONAME)
f113: 0e 10 00 00 01             ; XT=100e, flags=01
f118: 01 3b 00                   ; 1, ;
;
f11b: 2d f1 00 00                ; :NONAME - (next: f12d :)
f11f: fe 0f 00 00 00             ; XT=0ffe, flags=00
f124: 07 3a 4e 4f 4e 41 4d 45 00 ; 7, :NONAME
;
f12d: 39 f1 00 00                ; : - (next: f139 CREATE-NAME)
f131: ec 0f 00 00 00             ; XT=0fec, flags=00
f136: 01 3a 00                   ; 1, :
;
f139: 4f f1 00 00                ; CREATE-NAME - (next: f14f Define-Word)
f13d: 96 0f 00 00 00             ; XT=0f96, flags=00
f142: 0b 43 52 45 41 54 45 2d 4e 41 4d 45 00 ; 11, CREATE-NAME
;
f14f: 65 f1 00 00                ; Define-Word - (next: f165 strcpy2c)
f153: 4f 0f 00 00 00             ; XT=0f4f, flags=00
f158: 0b 44 65 66 69 6e 65 2d 57 6f 72 64 00 ; 11, Define-Word
;
f165: 78 f1 00 00                ; strcpy2c - (next: f178 getLine)
f169: 16 0f 00 00 00             ; XT=0f16, flags=00
f16e: 08 73 74 72 63 70 79 32 63 00 ; 8, strcpy2c
;
f178: 8a f1 00 00                ; getLine - (next: f18a getLineFromFile)
f17c: 45 0e 00 00 00             ; XT=0e45, flags=00
f181: 07 67 65 74 4c 69 6e 65 00 ; 7, getLine
;
f18a: a4 f1 00 00                ; getLineFromFile - (next: f1a4 LoadingFromFile?)
f18e: 2a 0e 00 00 00             ; XT=0e2a, flags=00
f193: 0f 67 65 74 4c 69 6e 65 46 72 6f 6d 46 69 6c 65 00 ; 15, getLineFromFile
;
f1a4: bf f1 00 00                ; LoadingFromFile? - (next: f1bf Pad)
f1a8: 21 0e 00 00 00             ; XT=0e21, flags=00
f1ad: 10 4c 6f 61 64 69 6e 67 46 72 6f 6d 46 69 6c 65 3f 00 ; 16, LoadingFromFile?
;
f1bf: cd f1 00 00                ; Pad - (next: f1cd executeInput)
f1c3: f9 0d 00 00 00             ; XT=0df9, flags=00
f1c8: 03 50 61 64 00             ; 3, Pad
;
f1cd: e4 f1 00 00                ; executeInput - (next: f1e4 executeWord)
f1d1: b5 0d 00 00 00             ; XT=0db5, flags=00
f1d6: 0c 65 78 65 63 75 74 65 49 6e 70 75 74 00 ; 12, executeInput
;
f1e4: fa f1 00 00                ; executeWord - (next: f1fa [COMPILE])
f1e8: 14 0d 00 00 00             ; XT=0d14, flags=00
f1ed: 0b 65 78 65 63 75 74 65 57 6f 72 64 00 ; 11, executeWord
;
f1fa: 0e f2 00 00                ; [COMPILE] - (next: f20e cstr,)
f1fe: f0 0c 00 00 00             ; XT=0cf0, flags=00
f203: 09 5b 43 4f 4d 50 49 4c 45 5d 00 ; 9, [COMPILE]
;
f20e: 1e f2 00 00                ; cstr, - (next: f21e strlen)
f212: df 0c 00 00 00             ; XT=0cdf, flags=00
f217: 05 63 73 74 72 2c 00       ; 5, cstr,
;
f21e: 2f f2 00 00                ; strlen - (next: f22f Copy.INLINE)
f222: c0 0c 00 00 00             ; XT=0cc0, flags=00
f227: 06 73 74 72 6c 65 6e 00    ; 6, strlen
;
f22f: 45 f2 00 00                ; Copy.INLINE - (next: f245 DOES>)
f233: a1 0c 00 00 00             ; XT=0ca1, flags=00
f238: 0b 43 6f 70 79 2e 49 4e 4c 49 4e 45 00 ; 11, Copy.INLINE
;
f245: 55 f2 00 00                ; DOES> - (next: f255 (inline))
f249: 8c 0c 00 00 00             ; XT=0c8c, flags=00
f24e: 05 44 4f 45 53 3e 00       ; 5, DOES>
;
f255: 68 f2 00 00                ; (inline) - (next: f268 find.ret)
f259: 6b 0c 00 00 00             ; XT=0c6b, flags=00
f25e: 08 28 69 6e 6c 69 6e 65 29 00 ; 8, (inline)
;
f268: 7b f2 00 00                ; find.ret - (next: f27b EXECUTE)
f26c: 54 0c 00 00 00             ; XT=0c54, flags=00
f271: 08 66 69 6e 64 2e 72 65 74 00 ; 8, find.ret
;
f27b: 8d f2 00 00                ; EXECUTE - (next: f28d .lastx)
f27f: 4b 0c 00 00 00             ; XT=0c4b, flags=00
f284: 07 45 58 45 43 55 54 45 00 ; 7, EXECUTE
;
f28d: 9e f2 00 00                ; .lastx - (next: f29e NUM-WORDS)
f291: 15 0c 00 00 00             ; XT=0c15, flags=00
f296: 06 2e 6c 61 73 74 78 00    ; 6, .lastx
;
f29e: b2 f2 00 00                ; NUM-WORDS - (next: f2b2 WORDSV)
f2a2: ed 0b 00 00 00             ; XT=0bed, flags=00
f2a7: 09 4e 55 4d 2d 57 4f 52 44 53 00 ; 9, NUM-WORDS
;
f2b2: c3 f2 00 00                ; WORDSV - (next: f2c3 .WORD-LONG)
f2b6: bd 0b 00 00 00             ; XT=0bbd, flags=00
f2bb: 06 57 4f 52 44 53 56 00    ; 6, WORDSV
;
f2c3: d8 f2 00 00                ; .WORD-LONG - (next: f2d8 WORDS)
f2c7: 2d 0b 00 00 00             ; XT=0b2d, flags=00
f2cc: 0a 2e 57 4f 52 44 2d 4c 4f 4e 47 00 ; 10, .WORD-LONG
;
f2d8: e8 f2 00 00                ; WORDS - (next: f2e8 .WORD-SHORT)
f2dc: 08 0b 00 00 00             ; XT=0b08, flags=00
f2e1: 05 57 4f 52 44 53 00       ; 5, WORDS
;
f2e8: fe f2 00 00                ; .WORD-SHORT - (next: f2fe .(LAST))
f2ec: f3 0a 00 00 00             ; XT=0af3, flags=00
f2f1: 0b 2e 57 4f 52 44 2d 53 48 4f 52 54 00 ; 11, .WORD-SHORT
;
f2fe: 10 f3 00 00                ; .(LAST) - (next: f310 .(HERE))
f302: be 0a 00 00 00             ; XT=0abe, flags=00
f307: 07 2e 28 4c 41 53 54 29 00 ; 7, .(LAST)
;
f310: 22 f3 00 00                ; .(HERE) - (next: f322 .(MEM_SZ))
f314: 89 0a 00 00 00             ; XT=0a89, flags=00
f319: 07 2e 28 48 45 52 45 29 00 ; 7, .(HERE)
;
f322: 36 f3 00 00                ; .(MEM_SZ) - (next: f336 .S)
f326: 50 0a 00 00 00             ; XT=0a50, flags=00
f32b: 09 2e 28 4d 45 4d 5f 53 5a 29 00 ; 9, .(MEM_SZ)
;
f336: 43 f3 00 00                ; .S - (next: f343 MAX)
f33a: de 09 00 00 00             ; XT=09de, flags=00
f33f: 02 2e 53 00                ; 2, .S
;
f343: 51 f3 00 00                ; MAX - (next: f351 MIN)
f347: ce 09 00 00 00             ; XT=09ce, flags=00
f34c: 03 4d 41 58 00             ; 3, MAX
;
f351: 5f f3 00 00                ; MIN - (next: f35f BINARY.)
f355: be 09 00 00 00             ; XT=09be, flags=00
f35a: 03 4d 49 4e 00             ; 3, MIN
;
f35f: 71 f3 00 00                ; BINARY. - (next: f371 DECIMAL.)
f363: a7 09 00 00 00             ; XT=09a7, flags=00
f368: 07 42 49 4e 41 52 59 2e 00 ; 7, BINARY.
;
f371: 84 f3 00 00                ; DECIMAL. - (next: f384 HEX.)
f375: 90 09 00 00 00             ; XT=0990, flags=00
f37a: 08 44 45 43 49 4d 41 4c 2e 00 ; 8, DECIMAL.
;
f384: 93 f3 00 00                ; HEX. - (next: f393 .)
f388: 6d 09 00 00 00             ; XT=096d, flags=00
f38d: 04 48 45 58 2e 00          ; 4, HEX.
;
f393: 9f f3 00 00                ; . - (next: f39f (.))
f397: 5d 09 00 00 00             ; XT=095d, flags=00
f39c: 01 2e 00                   ; 1, .
;
f39f: ad f3 00 00                ; (.) - (next: f3ad #>)
f3a3: 37 09 00 00 00             ; XT=0937, flags=00
f3a8: 03 28 2e 29 00             ; 3, (.)
;
f3ad: ba f3 00 00                ; #> - (next: f3ba #S)
f3b1: 31 09 00 00 00             ; XT=0931, flags=00
f3b6: 02 23 3e 00                ; 2, #>
;
f3ba: c7 f3 00 00                ; #S - (next: f3c7 #)
f3be: 1d 09 00 00 00             ; XT=091d, flags=00
f3c3: 02 23 53 00                ; 2, #S
;
f3c7: d3 f3 00 00                ; # - (next: f3d3 <#)
f3cb: fe 08 00 00 00             ; XT=08fe, flags=00
f3d0: 01 23 00                   ; 1, #
;
f3d3: e0 f3 00 00                ; <# - (next: f3e0 .isNeg)
f3d7: d8 08 00 00 00             ; XT=08d8, flags=00
f3dc: 02 3c 23 00                ; 2, <#
;
f3e0: f1 f3 00 00                ; .isNeg - (next: f3f1 isNeg)
f3e4: c4 08 00 00 00             ; XT=08c4, flags=00
f3e9: 06 2e 69 73 4e 65 67 00    ; 6, .isNeg
;
f3f1: 01 f4 00 00                ; isNeg - (next: f401 SPACE)
f3f5: b4 08 00 00 00             ; XT=08b4, flags=00
f3fa: 05 69 73 4e 65 67 00       ; 5, isNeg
;
f401: 11 f4 00 00                ; SPACE - (next: f411 /MOD)
f405: ab 08 00 00 00             ; XT=08ab, flags=00
f40a: 05 53 50 41 43 45 00       ; 5, SPACE
;
f411: 20 f4 00 00                ; /MOD - (next: f420 MOD)
f415: 9d 08 00 00 00             ; XT=089d, flags=00
f41a: 04 2f 4d 4f 44 00          ; 4, /MOD
;
f420: 2e f4 00 00                ; MOD - (next: f42e isNumber?)
f424: 92 08 00 00 00             ; XT=0892, flags=00
f429: 03 4d 4f 44 00             ; 3, MOD
;
f42e: 42 f4 00 00                ; isNumber? - (next: f442 ABS)
f432: 35 08 00 00 00             ; XT=0835, flags=00
f437: 09 69 73 4e 75 6d 62 65 72 3f 00 ; 9, isNumber?
;
f442: 50 f4 00 00                ; ABS - (next: f450 NEGATE)
f446: 21 08 00 00 00             ; XT=0821, flags=00
f44b: 03 41 42 53 00             ; 3, ABS
;
f450: 61 f4 00 00                ; NEGATE - (next: f461 isNumChar?)
f454: 17 08 00 00 00             ; XT=0817, flags=00
f459: 06 4e 45 47 41 54 45 00    ; 6, NEGATE
;
f461: 76 f4 00 00                ; isNumChar? - (next: f476 isHEX?)
f465: c6 07 00 00 00             ; XT=07c6, flags=00
f46a: 0a 69 73 4e 75 6d 43 68 61 72 3f 00 ; 10, isNumChar?
;
f476: 87 f4 00 00                ; isHEX? - (next: f487 findInDict)
f47a: ba 07 00 00 00             ; XT=07ba, flags=00
f47f: 06 69 73 48 45 58 3f 00    ; 6, isHEX?
;
f487: 9c f4 00 00                ; findInDict - (next: f49c DICT.GetINLINE)
f48b: 73 07 00 00 00             ; XT=0773, flags=00
f490: 0a 66 69 6e 64 49 6e 44 69 63 74 00 ; 10, findInDict
;
f49c: b5 f4 00 00                ; DICT.GetINLINE - (next: f4b5 DICT.GetIMMEDIATE)
f4a0: 63 07 00 00 00             ; XT=0763, flags=00
f4a5: 0e 44 49 43 54 2e 47 65 74 49 4e 4c 49 4e 45 00 ; 14, DICT.GetINLINE
;
f4b5: d1 f4 00 00                ; DICT.GetIMMEDIATE - (next: f4d1 FLAGS.ISINLINE?)
f4b9: 53 07 00 00 00             ; XT=0753, flags=00
f4be: 11 44 49 43 54 2e 47 65 74 49 4d 4d 45 44 49 41 54 45 00 ; 17, DICT.GetIMMEDIATE
;
f4d1: eb f4 00 00                ; FLAGS.ISINLINE? - (next: f4eb FLAGS.ISIMMEDIATE?)
f4d5: 4a 07 00 00 00             ; XT=074a, flags=00
f4da: 0f 46 4c 41 47 53 2e 49 53 49 4e 4c 49 4e 45 3f 00 ; 15, FLAGS.ISINLINE?
;
f4eb: 08 f5 00 00                ; FLAGS.ISIMMEDIATE? - (next: f508 XT.GetDICTP)
f4ef: 41 07 00 00 00             ; XT=0741, flags=00
f4f4: 12 46 4c 41 47 53 2e 49 53 49 4d 4d 45 44 49 41 54 45 3f 00 ; 18, FLAGS.ISIMMEDIATE?
;
f508: 1e f5 00 00                ; XT.GetDICTP - (next: f51e DICTP>NAME)
f50c: 28 07 00 00 00             ; XT=0728, flags=00
f511: 0b 58 54 2e 47 65 74 44 49 43 54 50 00 ; 11, XT.GetDICTP
;
f51e: 33 f5 00 00                ; DICTP>NAME - (next: f533 DICT.GetFLAGS)
f522: 1b 07 00 00 00             ; XT=071b, flags=00
f527: 0a 44 49 43 54 50 3e 4e 41 4d 45 00 ; 10, DICTP>NAME
;
f533: 4b f5 00 00                ; DICT.GetFLAGS - (next: f54b DICT.GetXT)
f537: 0f 07 00 00 00             ; XT=070f, flags=00
f53c: 0d 44 49 43 54 2e 47 65 74 46 4c 41 47 53 00 ; 13, DICT.GetFLAGS
;
f54b: 60 f5 00 00                ; DICT.GetXT - (next: f560 NAME>DICT)
f54f: 03 07 00 00 00             ; XT=0703, flags=00
f554: 0a 44 49 43 54 2e 47 65 74 58 54 00 ; 10, DICT.GetXT
;
f560: 74 f5 00 00                ; NAME>DICT - (next: f574 FLAGS>DICT)
f564: f6 06 00 00 00             ; XT=06f6, flags=00
f569: 09 4e 41 4d 45 3e 44 49 43 54 00 ; 9, NAME>DICT
;
f574: 89 f5 00 00                ; FLAGS>DICT - (next: f589 XT>DICT)
f578: ea 06 00 00 00             ; XT=06ea, flags=00
f57d: 0a 46 4c 41 47 53 3e 44 49 43 54 00 ; 10, FLAGS>DICT
;
f589: 9b f5 00 00                ; XT>DICT - (next: f59b NEXT>DICT)
f58d: e1 06 00 00 00             ; XT=06e1, flags=00
f592: 07 58 54 3e 44 49 43 54 00 ; 7, XT>DICT
;
f59b: af f5 00 00                ; NEXT>DICT - (next: f5af DICT>NAME)
f59f: db 06 00 00 00             ; XT=06db, flags=00
f5a4: 09 4e 45 58 54 3e 44 49 43 54 00 ; 9, NEXT>DICT
;
f5af: c3 f5 00 00                ; DICT>NAME - (next: f5c3 DICT>FLAGS)
f5b3: cf 06 00 00 00             ; XT=06cf, flags=00
f5b8: 09 44 49 43 54 3e 4e 41 4d 45 00 ; 9, DICT>NAME
;
f5c3: d8 f5 00 00                ; DICT>FLAGS - (next: f5d8 DICT>XT)
f5c7: c3 06 00 00 00             ; XT=06c3, flags=00
f5cc: 0a 44 49 43 54 3e 46 4c 41 47 53 00 ; 10, DICT>FLAGS
;
f5d8: ea f5 00 00                ; DICT>XT - (next: f5ea DICT>NEXT)
f5dc: ba 06 00 00 00             ; XT=06ba, flags=00
f5e1: 07 44 49 43 54 3e 58 54 00 ; 7, DICT>XT
;
f5ea: fe f5 00 00                ; DICT>NEXT - (next: f5fe getOneWord)
f5ee: b4 06 00 00 00             ; XT=06b4, flags=00
f5f3: 09 44 49 43 54 3e 4e 45 58 54 00 ; 9, DICT>NEXT
;
f5fe: 13 f6 00 00                ; getOneWord - (next: f613 skipWS)
f602: 7c 06 00 00 00             ; XT=067c, flags=00
f607: 0a 67 65 74 4f 6e 65 57 6f 72 64 00 ; 10, getOneWord
;
f613: 24 f6 00 00                ; skipWS - (next: f624 getInput)
f617: 53 06 00 00 00             ; XT=0653, flags=00
f61c: 06 73 6b 69 70 57 53 00    ; 6, skipWS
;
f624: 37 f6 00 00                ; getInput - (next: f637 PAD)
f628: 3d 06 00 00 00             ; XT=063d, flags=00
f62d: 08 67 65 74 49 6e 70 75 74 00 ; 8, getInput
;
f637: 45 f6 00 00                ; PAD - (next: f645 tmp-alloc)
f63b: 2b 06 00 00 00             ; XT=062b, flags=00
f640: 03 50 41 44 00             ; 3, PAD
;
f645: 59 f6 00 00                ; tmp-alloc - (next: f659 tmp-cur)
f649: 14 06 00 00 00             ; XT=0614, flags=00
f64e: 09 74 6d 70 2d 61 6c 6c 6f 63 00 ; 9, tmp-alloc
;
f659: 6b f6 00 00                ; tmp-cur - (next: f66b tmp-init)
f65d: 08 06 00 00 00             ; XT=0608, flags=00
f662: 07 74 6d 70 2d 63 75 72 00 ; 7, tmp-cur
;
f66b: 7e f6 00 00                ; tmp-init - (next: f67e (tmp))
f66f: f9 05 00 00 00             ; XT=05f9, flags=00
f674: 08 74 6d 70 2d 69 6e 69 74 00 ; 8, tmp-init
;
f67e: 8e f6 00 00                ; (tmp) - (next: f68e BETWEEN)
f682: e9 05 00 00 00             ; XT=05e9, flags=00
f687: 05 28 74 6d 70 29 00       ; 5, (tmp)
;
f68e: a0 f6 00 00                ; BETWEEN - (next: f6a0 CR)
f692: d1 05 00 00 00             ; XT=05d1, flags=00
f697: 07 42 45 54 57 45 45 4e 00 ; 7, BETWEEN
;
f6a0: ad f6 00 00                ; CR - (next: f6ad CRLF)
f6a4: c5 05 00 00 02             ; XT=05c5, flags=02
f6a9: 02 43 52 00                ; 2, CR
;
f6ad: bc f6 00 00                ; CRLF - (next: f6bc BL)
f6b1: b9 05 00 00 02             ; XT=05b9, flags=02
f6b6: 04 43 52 4c 46 00          ; 4, CRLF
;
f6bc: c9 f6 00 00                ; BL - (next: f6c9 ()
f6c0: b0 05 00 00 02             ; XT=05b0, flags=02
f6c5: 02 42 4c 00                ; 2, BL
;
f6c9: d5 f6 00 00                ; ( - (next: f6d5 \)
f6cd: 66 05 00 00 01             ; XT=0566, flags=01
f6d2: 01 28 00                   ; 1, (
;
f6d5: e1 f6 00 00                ; \ - (next: f6e1 CT)
f6d9: 57 05 00 00 01             ; XT=0557, flags=01
f6de: 01 5c 00                   ; 1, \
;
f6e1: ee f6 00 00                ; CT - (next: f6ee TYPE)
f6e5: 47 05 00 00 00             ; XT=0547, flags=00
f6ea: 02 43 54 00                ; 2, CT
;
f6ee: fd f6 00 00                ; TYPE - (next: f6fd COUNT)
f6f2: 27 05 00 00 00             ; XT=0527, flags=00
f6f7: 04 54 59 50 45 00          ; 4, TYPE
;
f6fd: 0d f7 00 00                ; COUNT - (next: f70d NOT)
f701: 1d 05 00 00 00             ; XT=051d, flags=00
f706: 05 43 4f 55 4e 54 00       ; 5, COUNT
;
f70d: 1b f7 00 00                ; NOT - (next: f71b FALSE)
f711: 14 05 00 00 02             ; XT=0514, flags=02
f716: 03 4e 4f 54 00             ; 3, NOT
;
f71b: 2b f7 00 00                ; FALSE - (next: f72b TRUE)
f71f: 0c 05 00 00 02             ; XT=050c, flags=02
f724: 05 46 41 4c 53 45 00       ; 5, FALSE
;
f72b: 3a f7 00 00                ; TRUE - (next: f73a >=)
f72f: 04 05 00 00 02             ; XT=0504, flags=02
f734: 04 54 52 55 45 00          ; 4, TRUE
;
f73a: 47 f7 00 00                ; >= - (next: f747 <=)
f73e: fa 04 00 00 02             ; XT=04fa, flags=02
f743: 02 3e 3d 00                ; 2, >=
;
f747: 54 f7 00 00                ; <= - (next: f754 <>)
f74b: f0 04 00 00 02             ; XT=04f0, flags=02
f750: 02 3c 3d 00                ; 2, <=
;
f754: 61 f7 00 00                ; <> - (next: f761 0=)
f758: e6 04 00 00 02             ; XT=04e6, flags=02
f75d: 02 3c 3e 00                ; 2, <>
;
f761: 6e f7 00 00                ; 0= - (next: f76e C+!)
f765: dd 04 00 00 02             ; XT=04dd, flags=02
f76a: 02 30 3d 00                ; 2, 0=
;
f76e: 7c f7 00 00                ; C+! - (next: f77c +!)
f772: d1 04 00 00 00             ; XT=04d1, flags=00
f777: 03 43 2b 21 00             ; 3, C+!
;
f77c: 89 f7 00 00                ; +! - (next: f789 C--)
f780: c5 04 00 00 00             ; XT=04c5, flags=00
f785: 02 2b 21 00                ; 2, +!
;
f789: 97 f7 00 00                ; C-- - (next: f797 C++)
f78d: ba 04 00 00 00             ; XT=04ba, flags=00
f792: 03 43 2d 2d 00             ; 3, C--
;
f797: a5 f7 00 00                ; C++ - (next: f7a5 --)
f79b: af 04 00 00 00             ; XT=04af, flags=00
f7a0: 03 43 2b 2b 00             ; 3, C++
;
f7a5: b2 f7 00 00                ; -- - (next: f7b2 ++)
f7a9: a2 04 00 00 00             ; XT=04a2, flags=00
f7ae: 02 2d 2d 00                ; 2, --
;
f7b2: bf f7 00 00                ; ++ - (next: f7bf -=)
f7b6: 95 04 00 00 00             ; XT=0495, flags=00
f7bb: 02 2b 2b 00                ; 2, ++
;
f7bf: cc f7 00 00                ; -= - (next: f7cc +=)
f7c3: 89 04 00 00 00             ; XT=0489, flags=00
f7c8: 02 2d 3d 00                ; 2, -=
;
f7cc: d9 f7 00 00                ; += - (next: f7d9 2/)
f7d0: 7e 04 00 00 00             ; XT=047e, flags=00
f7d5: 02 2b 3d 00                ; 2, +=
;
f7d9: e6 f7 00 00                ; 2/ - (next: f7e6 2*)
f7dd: 75 04 00 00 02             ; XT=0475, flags=02
f7e2: 02 32 2f 00                ; 2, 2/
;
f7e6: f3 f7 00 00                ; 2* - (next: f7f3 1-)
f7ea: 6c 04 00 00 02             ; XT=046c, flags=02
f7ef: 02 32 2a 00                ; 2, 2*
;
f7f3: 00 f8 00 00                ; 1- - (next: f800 1+)
f7f7: 65 04 00 00 02             ; XT=0465, flags=02
f7fc: 02 31 2d 00                ; 2, 1-
;
f800: 0d f8 00 00                ; 1+ - (next: f80d -ROT)
f804: 5e 04 00 00 02             ; XT=045e, flags=02
f809: 02 31 2b 00                ; 2, 1+
;
f80d: 1c f8 00 00                ; -ROT - (next: f81c ROT)
f811: 54 04 00 00 02             ; XT=0454, flags=02
f816: 04 2d 52 4f 54 00          ; 4, -ROT
;
f81c: 2a f8 00 00                ; ROT - (next: f82a NIP)
f820: 4a 04 00 00 02             ; XT=044a, flags=02
f825: 03 52 4f 54 00             ; 3, ROT
;
f82a: 38 f8 00 00                ; NIP - (next: f838 TUCK)
f82e: 42 04 00 00 02             ; XT=0442, flags=02
f833: 03 4e 49 50 00             ; 3, NIP
;
f838: 47 f8 00 00                ; TUCK - (next: f847 2DROP)
f83c: 3a 04 00 00 02             ; XT=043a, flags=02
f841: 04 54 55 43 4b 00          ; 4, TUCK
;
f847: 57 f8 00 00                ; 2DROP - (next: f857 2DUP)
f84b: 32 04 00 00 02             ; XT=0432, flags=02
f850: 05 32 44 52 4f 50 00       ; 5, 2DROP
;
f857: 66 f8 00 00                ; 2DUP - (next: f866 RDROP)
f85b: 2a 04 00 00 02             ; XT=042a, flags=02
f860: 04 32 44 55 50 00          ; 4, 2DUP
;
f866: 76 f8 00 00                ; RDROP - (next: f876 R@)
f86a: 22 04 00 00 02             ; XT=0422, flags=02
f86f: 05 52 44 52 4f 50 00       ; 5, RDROP
;
f876: 83 f8 00 00                ; R@ - (next: f883 DEBUG-OFF)
f87a: 19 04 00 00 02             ; XT=0419, flags=02
f87f: 02 52 40 00                ; 2, R@
;
f883: 97 f8 00 00                ; DEBUG-OFF - (next: f897 DEBUG-ON)
f887: 10 04 00 00 02             ; XT=0410, flags=02
f88c: 09 44 45 42 55 47 2d 4f 46 46 00 ; 9, DEBUG-OFF
;
f897: aa f8 00 00                ; DEBUG-ON - (next: f8aa TRACE-OFF)
f89b: 07 04 00 00 02             ; XT=0407, flags=02
f8a0: 08 44 45 42 55 47 2d 4f 4e 00 ; 8, DEBUG-ON
;
f8aa: be f8 00 00                ; TRACE-OFF - (next: f8be TRACE-ON)
f8ae: fe 03 00 00 02             ; XT=03fe, flags=02
f8b3: 09 54 52 41 43 45 2d 4f 46 46 00 ; 9, TRACE-OFF
;
f8be: d1 f8 00 00                ; TRACE-ON - (next: f8d1 MEM_SZ)
f8c2: f5 03 00 00 02             ; XT=03f5, flags=02
f8c7: 08 54 52 41 43 45 2d 4f 4e 00 ; 8, TRACE-ON
;
f8d1: e2 f8 00 00                ; MEM_SZ - (next: f8e2 isNeg)
f8d5: ec 03 00 00 00             ; XT=03ec, flags=00
f8da: 06 4d 45 4d 5f 53 5a 00    ; 6, MEM_SZ
;
f8e2: f2 f8 00 00                ; isNeg - (next: f8f2 >IN)
f8e6: dc 03 00 00 00             ; XT=03dc, flags=00
f8eb: 05 69 73 4e 65 67 00       ; 5, isNeg
;
f8f2: 00 f9 00 00                ; >IN - (next: f900 LEAVE)
f8f6: cc 03 00 00 00             ; XT=03cc, flags=00
f8fb: 03 3e 49 4e 00             ; 3, >IN
;
f900: 10 f9 00 00                ; LEAVE - (next: f910 UNTIL)
f904: b7 03 00 00 01             ; XT=03b7, flags=01
f909: 05 4c 45 41 56 45 00       ; 5, LEAVE
;
f910: 20 f9 00 00                ; UNTIL - (next: f920 WHILE)
f914: 9d 03 00 00 01             ; XT=039d, flags=01
f919: 05 55 4e 54 49 4c 00       ; 5, UNTIL
;
f920: 30 f9 00 00                ; WHILE - (next: f930 AGAIN)
f924: 83 03 00 00 01             ; XT=0383, flags=01
f929: 05 57 48 49 4c 45 00       ; 5, WHILE
;
f930: 40 f9 00 00                ; AGAIN - (next: f940 BEGIN)
f934: 69 03 00 00 01             ; XT=0369, flags=01
f939: 05 41 47 41 49 4e 00       ; 5, AGAIN
;
f940: 50 f9 00 00                ; BEGIN - (next: f950 THEN)
f944: 56 03 00 00 01             ; XT=0356, flags=01
f949: 05 42 45 47 49 4e 00       ; 5, BEGIN
;
f950: 5f f9 00 00                ; THEN - (next: f95f ELSE)
f954: 41 03 00 00 01             ; XT=0341, flags=01
f959: 04 54 48 45 4e 00          ; 4, THEN
;
f95f: 6e f9 00 00                ; ELSE - (next: f96e IF)
f963: 1c 03 00 00 01             ; XT=031c, flags=01
f968: 04 45 4c 53 45 00          ; 4, ELSE
;
f96e: 7b f9 00 00                ; IF - (next: f97b ?COMPILING)
f972: fd 02 00 00 01             ; XT=02fd, flags=01
f977: 02 49 46 00                ; 2, IF
;
f97b: 90 f9 00 00                ; ?COMPILING - (next: f990 OFF)
f97f: f4 02 00 00 00             ; XT=02f4, flags=00
f984: 0a 3f 43 4f 4d 50 49 4c 49 4e 47 00 ; 10, ?COMPILING
;
f990: 9e f9 00 00                ; OFF - (next: f99e ON)
f994: ea 02 00 00 00             ; XT=02ea, flags=00
f999: 03 4f 46 46 00             ; 3, OFF
;
f99e: ab f9 00 00                ; ON - (next: f9ab BINARY)
f9a2: e0 02 00 00 00             ; XT=02e0, flags=00
f9a7: 02 4f 4e 00                ; 2, ON
;
f9ab: bc f9 00 00                ; BINARY - (next: f9bc OCTAL)
f9af: d5 02 00 00 00             ; XT=02d5, flags=00
f9b4: 06 42 49 4e 41 52 59 00    ; 6, BINARY
;
f9bc: cc f9 00 00                ; OCTAL - (next: f9cc DECIMAL)
f9c0: ca 02 00 00 00             ; XT=02ca, flags=00
f9c5: 05 4f 43 54 41 4c 00       ; 5, OCTAL
;
f9cc: de f9 00 00                ; DECIMAL - (next: f9de HEX)
f9d0: bf 02 00 00 00             ; XT=02bf, flags=00
f9d5: 07 44 45 43 49 4d 41 4c 00 ; 7, DECIMAL
;
f9de: ec f9 00 00                ; HEX - (next: f9ec C,)
f9e2: b4 02 00 00 00             ; XT=02b4, flags=00
f9e7: 03 48 45 58 00             ; 3, HEX
;
f9ec: f9 f9 00 00                ; C, - (next: f9f9 ,)
f9f0: a1 02 00 00 00             ; XT=02a1, flags=00
f9f5: 02 43 2c 00                ; 2, C,
;
f9f9: 05 fa 00 00                ; , - (next: fa05 HERE)
f9fd: 8e 02 00 00 00             ; XT=028e, flags=00
fa02: 01 2c 00                   ; 1, ,
;
fa05: 14 fa 00 00                ; HERE - (next: fa14 LAST)
fa09: 85 02 00 00 02             ; XT=0285, flags=02
fa0e: 04 48 45 52 45 00          ; 4, HERE
;
fa14: 23 fa 00 00                ; LAST - (next: fa23 FLAG_INLINE)
fa18: 7c 02 00 00 02             ; XT=027c, flags=02
fa1d: 04 4c 41 53 54 00          ; 4, LAST
;
fa23: 39 fa 00 00                ; FLAG_INLINE - (next: fa39 FLAG_IMMEDIATE)
fa27: 74 02 00 00 02             ; XT=0274, flags=02
fa2c: 0b 46 4c 41 47 5f 49 4e 4c 49 4e 45 00 ; 11, FLAG_INLINE
;
fa39: 52 fa 00 00                ; FLAG_IMMEDIATE - (next: fa52 CELLS)
fa3d: 6c 02 00 00 02             ; XT=026c, flags=02
fa42: 0e 46 4c 41 47 5f 49 4d 4d 45 44 49 41 54 45 00 ; 14, FLAG_IMMEDIATE
;
fa52: 62 fa 00 00                ; CELLS - (next: fa62 IMMEDIATE)
fa56: 63 02 00 00 02             ; XT=0263, flags=02
fa5b: 05 43 45 4c 4c 53 00       ; 5, CELLS
;
fa62: 76 fa 00 00                ; IMMEDIATE - (next: fa76 INLINE)
fa66: 4d 02 00 00 00             ; XT=024d, flags=00
fa6b: 09 49 4d 4d 45 44 49 41 54 45 00 ; 9, IMMEDIATE
;
fa76: 87 fa 00 00                ; INLINE - (next: fa87 BYE)
fa7a: 37 02 00 00 00             ; XT=0237, flags=00
fa7f: 06 49 4e 4c 49 4e 45 00    ; 6, INLINE
;
fa87: 95 fa 00 00                ; BYE - (next: fa95 RESET)
fa8b: 30 02 00 00 02             ; XT=0230, flags=02
fa90: 03 42 59 45 00             ; 3, BYE
;
fa95: a5 fa 00 00                ; RESET - (next: faa5 BREAK)
fa99: 29 02 00 00 02             ; XT=0229, flags=02
fa9e: 05 52 45 53 45 54 00       ; 5, RESET
;
faa5: b5 fa 00 00                ; BREAK - (next: fab5 DEC)
faa9: 22 02 00 00 02             ; XT=0222, flags=02
faae: 05 42 52 45 41 4b 00       ; 5, BREAK
;
fab5: c3 fa 00 00                ; DEC - (next: fac3 RDEPTH)
fab9: 1b 02 00 00 02             ; XT=021b, flags=02
fabe: 03 44 45 43 00             ; 3, DEC
;
fac3: d4 fa 00 00                ; RDEPTH - (next: fad4 INC)
fac7: 14 02 00 00 02             ; XT=0214, flags=02
facc: 06 52 44 45 50 54 48 00    ; 6, RDEPTH
;
fad4: e2 fa 00 00                ; INC - (next: fae2 USPOP)
fad8: 0d 02 00 00 02             ; XT=020d, flags=02
fadd: 03 49 4e 43 00             ; 3, INC
;
fae2: f2 fa 00 00                ; USPOP - (next: faf2 USPUSH)
fae6: 06 02 00 00 02             ; XT=0206, flags=02
faeb: 05 55 53 50 4f 50 00       ; 5, USPOP
;
faf2: 03 fb 00 00                ; USPUSH - (next: fb03 USINIT)
faf6: ff 01 00 00 02             ; XT=01ff, flags=02
fafb: 06 55 53 50 55 53 48 00    ; 6, USPUSH
;
fb03: 14 fb 00 00                ; USINIT - (next: fb14 COMPAREI)
fb07: f8 01 00 00 02             ; XT=01f8, flags=02
fb0c: 06 55 53 49 4e 49 54 00    ; 6, USINIT
;
fb14: 27 fb 00 00                ; COMPAREI - (next: fb27 GETCH)
fb18: f1 01 00 00 02             ; XT=01f1, flags=02
fb1d: 08 43 4f 4d 50 41 52 45 49 00 ; 8, COMPAREI
;
fb27: 37 fb 00 00                ; GETCH - (next: fb37 DEPTH)
fb2b: ea 01 00 00 02             ; XT=01ea, flags=02
fb30: 05 47 45 54 43 48 00       ; 5, GETCH
;
fb37: 47 fb 00 00                ; DEPTH - (next: fb47 PICK)
fb3b: e3 01 00 00 02             ; XT=01e3, flags=02
fb40: 05 44 45 50 54 48 00       ; 5, DEPTH
;
fb47: 56 fb 00 00                ; PICK - (next: fb56 AND)
fb4b: dc 01 00 00 02             ; XT=01dc, flags=02
fb50: 04 50 49 43 4b 00          ; 4, PICK
;
fb56: 64 fb 00 00                ; AND - (next: fb64 LOGLEVEL)
fb5a: d5 01 00 00 02             ; XT=01d5, flags=02
fb5f: 03 41 4e 44 00             ; 3, AND
;
fb64: 77 fb 00 00                ; LOGLEVEL - (next: fb77 R>)
fb68: ce 01 00 00 02             ; XT=01ce, flags=02
fb6d: 08 4c 4f 47 4c 45 56 45 4c 00 ; 8, LOGLEVEL
;
fb77: 84 fb 00 00                ; R> - (next: fb84 >R)
fb7b: c7 01 00 00 02             ; XT=01c7, flags=02
fb80: 02 52 3e 00                ; 2, R>
;
fb84: 91 fb 00 00                ; >R - (next: fb91 FCLOSE)
fb88: c0 01 00 00 02             ; XT=01c0, flags=02
fb8d: 02 3e 52 00                ; 2, >R
;
fb91: a2 fb 00 00                ; FCLOSE - (next: fba2 FWRITE)
fb95: b9 01 00 00 02             ; XT=01b9, flags=02
fb9a: 06 46 43 4c 4f 53 45 00    ; 6, FCLOSE
;
fba2: b3 fb 00 00                ; FWRITE - (next: fbb3 FREADLINE)
fba6: b2 01 00 00 02             ; XT=01b2, flags=02
fbab: 06 46 57 52 49 54 45 00    ; 6, FWRITE
;
fbb3: c7 fb 00 00                ; FREADLINE - (next: fbc7 FREAD)
fbb7: ab 01 00 00 02             ; XT=01ab, flags=02
fbbc: 09 46 52 45 41 44 4c 49 4e 45 00 ; 9, FREADLINE
;
fbc7: d7 fb 00 00                ; FREAD - (next: fbd7 FOPEN)
fbcb: a4 01 00 00 02             ; XT=01a4, flags=02
fbd0: 05 46 52 45 41 44 00       ; 5, FREAD
;
fbd7: e7 fb 00 00                ; FOPEN - (next: fbe7 COMPARE)
fbdb: 9d 01 00 00 02             ; XT=019d, flags=02
fbe0: 05 46 4f 50 45 4e 00       ; 5, FOPEN
;
fbe7: f9 fb 00 00                ; COMPARE - (next: fbf9 OVER)
fbeb: 96 01 00 00 02             ; XT=0196, flags=02
fbf0: 07 43 4f 4d 50 41 52 45 00 ; 7, COMPARE
;
fbf9: 08 fc 00 00                ; OVER - (next: fc08 EMIT)
fbfd: 8f 01 00 00 02             ; XT=018f, flags=02
fc02: 04 4f 56 45 52 00          ; 4, OVER
;
fc08: 17 fc 00 00                ; EMIT - (next: fc17 DICTP)
fc0c: 88 01 00 00 02             ; XT=0188, flags=02
fc11: 04 45 4d 49 54 00          ; 4, EMIT
;
fc17: 27 fc 00 00                ; DICTP - (next: fc27 >)
fc1b: 7b 01 00 00 02             ; XT=017b, flags=02
fc20: 05 44 49 43 54 50 00       ; 5, DICTP
;
fc27: 33 fc 00 00                ; > - (next: fc33 =)
fc2b: 74 01 00 00 02             ; XT=0174, flags=02
fc30: 01 3e 00                   ; 1, >
;
fc33: 3f fc 00 00                ; = - (next: fc3f <)
fc37: 6d 01 00 00 02             ; XT=016d, flags=02
fc3c: 01 3d 00                   ; 1, =
;
fc3f: 4b fc 00 00                ; < - (next: fc4b /)
fc43: 66 01 00 00 02             ; XT=0166, flags=02
fc48: 01 3c 00                   ; 1, <
;
fc4b: 57 fc 00 00                ; / - (next: fc57 *)
fc4f: 5f 01 00 00 02             ; XT=015f, flags=02
fc54: 01 2f 00                   ; 1, /
;
fc57: 63 fc 00 00                ; * - (next: fc63 -)
fc5b: 58 01 00 00 02             ; XT=0158, flags=02
fc60: 01 2a 00                   ; 1, *
;
fc63: 6f fc 00 00                ; - - (next: fc6f +)
fc67: 51 01 00 00 02             ; XT=0151, flags=02
fc6c: 01 2d 00                   ; 1, -
;
fc6f: 7b fc 00 00                ; + - (next: fc7b C!)
fc73: 4a 01 00 00 02             ; XT=014a, flags=02
fc78: 01 2b 00                   ; 1, +
;
fc7b: 88 fc 00 00                ; C! - (next: fc88 C@)
fc7f: 43 01 00 00 02             ; XT=0143, flags=02
fc84: 02 43 21 00                ; 2, C!
;
fc88: 95 fc 00 00                ; C@ - (next: fc95 CLITERAL)
fc8c: 3c 01 00 00 02             ; XT=013c, flags=02
fc91: 02 43 40 00                ; 2, C@
;
fc95: a8 fc 00 00                ; CLITERAL - (next: fca8 OR)
fc99: 2f 01 00 00 02             ; XT=012f, flags=02
fc9e: 08 43 4c 49 54 45 52 41 4c 00 ; 8, CLITERAL
;
fca8: b5 fc 00 00                ; OR - (next: fcb5 RET)
fcac: 28 01 00 00 02             ; XT=0128, flags=02
fcb1: 02 4f 52 00                ; 2, OR
;
fcb5: c3 fc 00 00                ; RET - (next: fcc3 CALL)
fcb9: 1b 01 00 00 00             ; XT=011b, flags=00
fcbe: 03 52 45 54 00             ; 3, RET
;
fcc3: d2 fc 00 00                ; CALL - (next: fcd2 JMPNZ)
fcc7: 0e 01 00 00 00             ; XT=010e, flags=00
fccc: 04 43 41 4c 4c 00          ; 4, CALL
;
fcd2: e2 fc 00 00                ; JMPNZ - (next: fce2 JMPZ)
fcd6: 01 01 00 00 00             ; XT=0101, flags=00
fcdb: 05 4a 4d 50 4e 5a 00       ; 5, JMPNZ
;
fce2: f1 fc 00 00                ; JMPZ - (next: fcf1 JMP)
fce6: f4 00 00 00 00             ; XT=00f4, flags=00
fceb: 04 4a 4d 50 5a 00          ; 4, JMPZ
;
fcf1: ff fc 00 00                ; JMP - (next: fcff SLITERAL)
fcf5: e7 00 00 00 00             ; XT=00e7, flags=00
fcfa: 03 4a 4d 50 00             ; 3, JMP
;
fcff: 12 fd 00 00                ; SLITERAL - (next: fd12 DUP)
fd03: da 00 00 00 00             ; XT=00da, flags=00
fd08: 08 53 4c 49 54 45 52 41 4c 00 ; 8, SLITERAL
;
fd12: 20 fd 00 00                ; DUP - (next: fd20 DROP)
fd16: d3 00 00 00 02             ; XT=00d3, flags=02
fd1b: 03 44 55 50 00             ; 3, DUP
;
fd20: 2f fd 00 00                ; DROP - (next: fd2f SWAP)
fd24: cc 00 00 00 02             ; XT=00cc, flags=02
fd29: 04 44 52 4f 50 00          ; 4, DROP
;
fd2f: 3e fd 00 00                ; SWAP - (next: fd3e !)
fd33: c5 00 00 00 02             ; XT=00c5, flags=02
fd38: 04 53 57 41 50 00          ; 4, SWAP
;
fd3e: 4a fd 00 00                ; ! - (next: fd4a @)
fd42: be 00 00 00 02             ; XT=00be, flags=02
fd47: 01 21 00                   ; 1, !
;
fd4a: 56 fd 00 00                ; @ - (next: fd56 LITERAL)
fd4e: b7 00 00 00 02             ; XT=00b7, flags=02
fd53: 01 40 00                   ; 1, @
;
fd56: 68 fd 00 00                ; LITERAL - (next: fd68 ])
fd5a: aa 00 00 00 00             ; XT=00aa, flags=00
fd5f: 07 4c 49 54 45 52 41 4c 00 ; 7, LITERAL
;
fd68: 74 fd 00 00                ; ] - (next: fd74 [)
fd6c: 9f 00 00 00 01             ; XT=009f, flags=01
fd71: 01 5d 00                   ; 1, ]
;
fd74: 80 fd 00 00                ; [ - (next: fd80 ,)
fd78: 94 00 00 00 01             ; XT=0094, flags=01
fd7d: 01 5b 00                   ; 1, [
;
fd80: 8c fd 00 00                ; , - (next: fd8c C,)
fd84: 81 00 00 00 00             ; XT=0081, flags=00
fd89: 01 2c 00                   ; 1, ,
;
fd8c: 99 fd 00 00                ; C, - (next: fd99 STATE)
fd90: 70 00 00 00 00             ; XT=0070, flags=00
fd95: 02 43 2c 00                ; 2, C,
;
fd99: a9 fd 00 00                ; STATE - (next: fda9 INPUT-FP)
fd9d: 68 00 00 00 02             ; XT=0068, flags=02
fda2: 05 53 54 41 54 45 00       ; 5, STATE
;
fda9: bc fd 00 00                ; INPUT-FP - (next: fdbc (LAST))
fdad: 60 00 00 00 02             ; XT=0060, flags=02
fdb2: 08 49 4e 50 55 54 2d 46 50 00 ; 8, INPUT-FP
;
fdbc: cd fd 00 00                ; (LAST) - (next: fdcd (HERE))
fdc0: 58 00 00 00 02             ; XT=0058, flags=02
fdc5: 06 28 4c 41 53 54 29 00    ; 6, (LAST)
;
fdcd: de fd 00 00                ; (HERE) - (next: fdde CELL)
fdd1: 50 00 00 00 02             ; XT=0050, flags=02
fdd6: 06 28 48 45 52 45 29 00    ; 6, (HERE)
;
fdde: ed fd 00 00                ; CELL - (next: fded BASE)
fde2: 48 00 00 00 02             ; XT=0048, flags=02
fde7: 04 43 45 4c 4c 00          ; 4, CELL
;
fded: fc fd 00 00                ; BASE - (next: fdfc <end>)
fdf1: 40 00 00 00 02             ; XT=0040, flags=02
fdf6: 04 42 41 53 45 00          ; 4, BASE
;
fdfc: 00 00 00 00                ; End.
