; memory-size: 65536 bytes, (10000 hex)
; data-stack: fe00, grows up
; return-stack: fffc, grows down
;
0000: 08 35 11 00 00             ; JMP main (1135)
;
0005: 00 00 00
0008: 00000004 00000000
0010: 0000138e 0000ef90 0000000a 00000000
0020: 00000063 00010000 00000000 00000000
0030: 00000000 00000000 00000000 00000000
;
0040: 18 ed fd 00 00             ; DICTP BASE (fded)
0045: 0e 18                      ; CLITERAL 24
0047: 0c                         ; RET
;
0048: 18 de fd 00 00             ; DICTP CELL (fdde)
004d: 0e 04                      ; CLITERAL 4
004f: 0c                         ; RET
;
0050: 18 cd fd 00 00             ; DICTP (HERE) (fdcd)
0055: 0e 10                      ; CLITERAL 16
0057: 0c                         ; RET
;
0058: 18 bc fd 00 00             ; DICTP (LAST) (fdbc)
005d: 0e 14                      ; CLITERAL 20
005f: 0c                         ; RET
;
0060: 18 a9 fd 00 00             ; DICTP INPUT-FP (fda9)
0065: 0e 1c                      ; CLITERAL 28
0067: 0c                         ; RET
;
0068: 18 99 fd 00 00             ; DICTP STATE (fd99)
006d: 0e 20                      ; CLITERAL 32
006f: 0c                         ; RET
;
0070: 18 8c fd 00 00             ; DICTP C, (fd8c)
0075: 0e 10                      ; CLITERAL 16
0077: 02                         ; FETCH
0078: 10                         ; CSTORE
0079: 0e 10                      ; CLITERAL 16
007b: 02                         ; FETCH
007c: 2c                         ; INC
007d: 0e 10                      ; CLITERAL 16
007f: 03                         ; STORE
0080: 0c                         ; RET
;
0081: 18 80 fd 00 00             ; DICTP , (fd80)
0086: 0e 10                      ; CLITERAL 16
0088: 02                         ; FETCH
0089: 03                         ; STORE
008a: 0e 10                      ; CLITERAL 16
008c: 02                         ; FETCH
008d: 0e 04                      ; CLITERAL 4
008f: 11                         ; ADD
0090: 0e 10                      ; CLITERAL 16
0092: 03                         ; STORE
0093: 0c                         ; RET
;
0094: 18 74 fd 00 00             ; DICTP [ (fd74)
0099: 0e 00                      ; CLITERAL 0
009b: 0e 20                      ; CLITERAL 32
009d: 03                         ; STORE
009e: 0c                         ; RET
;
009f: 18 68 fd 00 00             ; DICTP ] (fd68)
00a4: 0e 01                      ; CLITERAL 1
00a6: 0e 20                      ; CLITERAL 32
00a8: 03                         ; STORE
00a9: 0c                         ; RET
;
00aa: 18 56 fd 00 00             ; DICTP LITERAL (fd56)
00af: 0e 01                      ; CLITERAL 1
00b1: 0b 70 00 00 00             ; CALL C, (0070)
00b6: 0c                         ; RET
;
00b7: 18 4a fd 00 00             ; DICTP @ (fd4a)
00bc: 02                         ; FETCH
00bd: 0c                         ; RET
;
00be: 18 3e fd 00 00             ; DICTP ! (fd3e)
00c3: 03                         ; STORE
00c4: 0c                         ; RET
;
00c5: 18 2f fd 00 00             ; DICTP SWAP (fd2f)
00ca: 04                         ; SWAP
00cb: 0c                         ; RET
;
00cc: 18 20 fd 00 00             ; DICTP DROP (fd20)
00d1: 05                         ; DROP
00d2: 0c                         ; RET
;
00d3: 18 12 fd 00 00             ; DICTP DUP (fd12)
00d8: 06                         ; DUP
00d9: 0c                         ; RET
;
00da: 18 ff fc 00 00             ; DICTP SLITERAL (fcff)
00df: 0e 07                      ; CLITERAL 7
00e1: 0b 70 00 00 00             ; CALL C, (0070)
00e6: 0c                         ; RET
;
00e7: 18 f1 fc 00 00             ; DICTP JMP (fcf1)
00ec: 0e 08                      ; CLITERAL 8
00ee: 0b 70 00 00 00             ; CALL C, (0070)
00f3: 0c                         ; RET
;
00f4: 18 e2 fc 00 00             ; DICTP JMPZ (fce2)
00f9: 0e 09                      ; CLITERAL 9
00fb: 0b 70 00 00 00             ; CALL C, (0070)
0100: 0c                         ; RET
;
0101: 18 d2 fc 00 00             ; DICTP JMPNZ (fcd2)
0106: 0e 0a                      ; CLITERAL 10
0108: 0b 70 00 00 00             ; CALL C, (0070)
010d: 0c                         ; RET
;
010e: 18 c3 fc 00 00             ; DICTP CALL (fcc3)
0113: 0e 0b                      ; CLITERAL 11
0115: 0b 70 00 00 00             ; CALL C, (0070)
011a: 0c                         ; RET
;
011b: 18 b5 fc 00 00             ; DICTP RET (fcb5)
0120: 0e 0c                      ; CLITERAL 12
0122: 0b 70 00 00 00             ; CALL C, (0070)
0127: 0c                         ; RET
;
0128: 18 a8 fc 00 00             ; DICTP OR (fca8)
012d: 0d                         ; OR
012e: 0c                         ; RET
;
012f: 18 95 fc 00 00             ; DICTP CLITERAL (fc95)
0134: 0e 0e                      ; CLITERAL 14
0136: 0b 70 00 00 00             ; CALL C, (0070)
013b: 0c                         ; RET
;
013c: 18 88 fc 00 00             ; DICTP C@ (fc88)
0141: 0f                         ; CFETCH
0142: 0c                         ; RET
;
0143: 18 7b fc 00 00             ; DICTP C! (fc7b)
0148: 10                         ; CSTORE
0149: 0c                         ; RET
;
014a: 18 6f fc 00 00             ; DICTP + (fc6f)
014f: 11                         ; ADD
0150: 0c                         ; RET
;
0151: 18 63 fc 00 00             ; DICTP - (fc63)
0156: 12                         ; SUB
0157: 0c                         ; RET
;
0158: 18 57 fc 00 00             ; DICTP * (fc57)
015d: 13                         ; MUL
015e: 0c                         ; RET
;
015f: 18 4b fc 00 00             ; DICTP / (fc4b)
0164: 14                         ; DIV
0165: 0c                         ; RET
;
0166: 18 3f fc 00 00             ; DICTP < (fc3f)
016b: 15                         ; LT
016c: 0c                         ; RET
;
016d: 18 33 fc 00 00             ; DICTP = (fc33)
0172: 16                         ; EQ
0173: 0c                         ; RET
;
0174: 18 27 fc 00 00             ; DICTP > (fc27)
0179: 17                         ; GT
017a: 0c                         ; RET
;
017b: 18 17 fc 00 00             ; DICTP DICTP (fc17)
0180: 0e 18                      ; CLITERAL 24
0182: 0b 70 00 00 00             ; CALL C, (0070)
0187: 0c                         ; RET
;
0188: 18 08 fc 00 00             ; DICTP EMIT (fc08)
018d: 19                         ; EMIT
018e: 0c                         ; RET
;
018f: 18 f9 fb 00 00             ; DICTP OVER (fbf9)
0194: 1a                         ; OVER
0195: 0c                         ; RET
;
0196: 18 e7 fb 00 00             ; DICTP COMPARE (fbe7)
019b: 1b                         ; COMPARE
019c: 0c                         ; RET
;
019d: 18 d7 fb 00 00             ; DICTP FOPEN (fbd7)
01a2: 1c                         ; FOPEN
01a3: 0c                         ; RET
;
01a4: 18 c7 fb 00 00             ; DICTP FREAD (fbc7)
01a9: 1d                         ; FREAD
01aa: 0c                         ; RET
;
01ab: 18 b3 fb 00 00             ; DICTP FREADLINE (fbb3)
01b0: 1e                         ; FREADLINE
01b1: 0c                         ; RET
;
01b2: 18 a2 fb 00 00             ; DICTP FWRITE (fba2)
01b7: 1f                         ; FWRITE
01b8: 0c                         ; RET
;
01b9: 18 91 fb 00 00             ; DICTP FCLOSE (fb91)
01be: 20                         ; FCLOSE
01bf: 0c                         ; RET
;
01c0: 18 84 fb 00 00             ; DICTP >R (fb84)
01c5: 21                         ; DTOR
01c6: 0c                         ; RET
;
01c7: 18 77 fb 00 00             ; DICTP R> (fb77)
01cc: 22                         ; RTOD
01cd: 0c                         ; RET
;
01ce: 18 64 fb 00 00             ; DICTP LOGLEVEL (fb64)
01d3: 23                         ; LOGLEVEL
01d4: 0c                         ; RET
;
01d5: 18 56 fb 00 00             ; DICTP AND (fb56)
01da: 24                         ; AND
01db: 0c                         ; RET
;
01dc: 18 47 fb 00 00             ; DICTP PICK (fb47)
01e1: 25                         ; PICK
01e2: 0c                         ; RET
;
01e3: 18 37 fb 00 00             ; DICTP DEPTH (fb37)
01e8: 26                         ; DEPTH
01e9: 0c                         ; RET
;
01ea: 18 27 fb 00 00             ; DICTP GETCH (fb27)
01ef: 27                         ; GETCH
01f0: 0c                         ; RET
;
01f1: 18 14 fb 00 00             ; DICTP COMPAREI (fb14)
01f6: 28                         ; COMPAREI
01f7: 0c                         ; RET
;
01f8: 18 03 fb 00 00             ; DICTP USINIT (fb03)
01fd: 29                         ; USTACKINIT
01fe: 0c                         ; RET
;
01ff: 18 f2 fa 00 00             ; DICTP USPUSH (faf2)
0204: 2a                         ; UPUSH
0205: 0c                         ; RET
;
0206: 18 e2 fa 00 00             ; DICTP USPOP (fae2)
020b: 2b                         ; UPOP
020c: 0c                         ; RET
;
020d: 18 d4 fa 00 00             ; DICTP INC (fad4)
0212: 2c                         ; INC
0213: 0c                         ; RET
;
0214: 18 c3 fa 00 00             ; DICTP RDEPTH (fac3)
0219: 2d                         ; RDEPTH
021a: 0c                         ; RET
;
021b: 18 b5 fa 00 00             ; DICTP DEC (fab5)
0220: 2e                         ; DEC
0221: 0c                         ; RET
;
0222: 18 a3 fa 00 00             ; DICTP GETTICK (faa3)
0227: 2f                         ; GETTICK
0228: 0c                         ; RET
;
0229: 18 93 fa 00 00             ; DICTP BREAK (fa93)
022e: fd                         ; BREAK
022f: 0c                         ; RET
;
0230: 18 83 fa 00 00             ; DICTP RESET (fa83)
0235: fe                         ; RESET
0236: 0c                         ; RET
;
0237: 18 75 fa 00 00             ; DICTP BYE (fa75)
023c: ff                         ; BYE
023d: 0c                         ; RET
;
023e: 18 64 fa 00 00             ; DICTP INLINE (fa64)
0243: 0e 14                      ; CLITERAL 20
0245: 02                         ; FETCH
0246: 0e 02                      ; CLITERAL 2
0248: 0e 04                      ; CLITERAL 4
024a: 13                         ; MUL
024b: 11                         ; ADD
024c: 06                         ; DUP
024d: 0f                         ; CFETCH
024e: 0e 02                      ; CLITERAL 2
0250: 0d                         ; OR
0251: 04                         ; SWAP
0252: 10                         ; CSTORE
0253: 0c                         ; RET
;
0254: 18 50 fa 00 00             ; DICTP IMMEDIATE (fa50)
0259: 0e 14                      ; CLITERAL 20
025b: 02                         ; FETCH
025c: 0e 02                      ; CLITERAL 2
025e: 0e 04                      ; CLITERAL 4
0260: 13                         ; MUL
0261: 11                         ; ADD
0262: 06                         ; DUP
0263: 0f                         ; CFETCH
0264: 0e 01                      ; CLITERAL 1
0266: 0d                         ; OR
0267: 04                         ; SWAP
0268: 10                         ; CSTORE
0269: 0c                         ; RET
;
026a: 18 40 fa 00 00             ; DICTP CELLS (fa40)
026f: 0e 04                      ; CLITERAL 4
0271: 13                         ; MUL
0272: 0c                         ; RET
;
0273: 18 27 fa 00 00             ; DICTP FLAG_IMMEDIATE (fa27)
0278: 0e 01                      ; CLITERAL 1
027a: 0c                         ; RET
;
027b: 18 11 fa 00 00             ; DICTP FLAG_INLINE (fa11)
0280: 0e 02                      ; CLITERAL 2
0282: 0c                         ; RET
;
0283: 18 02 fa 00 00             ; DICTP LAST (fa02)
0288: 0e 14                      ; CLITERAL 20
028a: 02                         ; FETCH
028b: 0c                         ; RET
;
028c: 18 f3 f9 00 00             ; DICTP HERE (f9f3)
0291: 0e 10                      ; CLITERAL 16
0293: 02                         ; FETCH
0294: 0c                         ; RET
;
0295: 18 e7 f9 00 00             ; DICTP , (f9e7)
029a: 0e 10                      ; CLITERAL 16
029c: 02                         ; FETCH
029d: 03                         ; STORE
029e: 0e 10                      ; CLITERAL 16
02a0: 02                         ; FETCH
02a1: 0e 04                      ; CLITERAL 4
02a3: 11                         ; ADD
02a4: 0e 10                      ; CLITERAL 16
02a6: 03                         ; STORE
02a7: 0c                         ; RET
;
02a8: 18 da f9 00 00             ; DICTP C, (f9da)
02ad: 0e 10                      ; CLITERAL 16
02af: 02                         ; FETCH
02b0: 10                         ; CSTORE
02b1: 0e 10                      ; CLITERAL 16
02b3: 02                         ; FETCH
02b4: 0e 01                      ; CLITERAL 1
02b6: 11                         ; ADD
02b7: 0e 10                      ; CLITERAL 16
02b9: 03                         ; STORE
02ba: 0c                         ; RET
;
02bb: 18 cc f9 00 00             ; DICTP HEX (f9cc)
02c0: 0e 10                      ; CLITERAL 16
02c2: 0e 18                      ; CLITERAL 24
02c4: 03                         ; STORE
02c5: 0c                         ; RET
;
02c6: 18 ba f9 00 00             ; DICTP DECIMAL (f9ba)
02cb: 0e 0a                      ; CLITERAL 10
02cd: 0e 18                      ; CLITERAL 24
02cf: 03                         ; STORE
02d0: 0c                         ; RET
;
02d1: 18 aa f9 00 00             ; DICTP OCTAL (f9aa)
02d6: 0e 08                      ; CLITERAL 8
02d8: 0e 18                      ; CLITERAL 24
02da: 03                         ; STORE
02db: 0c                         ; RET
;
02dc: 18 99 f9 00 00             ; DICTP BINARY (f999)
02e1: 0e 02                      ; CLITERAL 2
02e3: 0e 18                      ; CLITERAL 24
02e5: 03                         ; STORE
02e6: 0c                         ; RET
;
02e7: 18 8c f9 00 00             ; DICTP ON (f98c)
02ec: 0e 01                      ; CLITERAL 1
02ee: 04                         ; SWAP
02ef: 03                         ; STORE
02f0: 0c                         ; RET
;
02f1: 18 7e f9 00 00             ; DICTP OFF (f97e)
02f6: 0e 00                      ; CLITERAL 0
02f8: 04                         ; SWAP
02f9: 03                         ; STORE
02fa: 0c                         ; RET
;
02fb: 18 69 f9 00 00             ; DICTP ?COMPILING (f969)
0300: 0e 20                      ; CLITERAL 32
0302: 02                         ; FETCH
0303: 0c                         ; RET
;
0304: 18 5c f9 00 00             ; DICTP IF (f95c)
0309: 0b fb 02 00 00             ; CALL ?COMPILING (02fb)
030e: 09 22 03 00 00             ; JMPZ 0322
0313: 0b f4 00 00 00             ; CALL JMPZ (00f4)
0318: 0e 10                      ; CLITERAL 16
031a: 02                         ; FETCH
031b: 0e 00                      ; CLITERAL 0
031d: 0b 95 02 00 00             ; CALL , (0295)
0322: 0c                         ; RET
;
0323: 18 4d f9 00 00             ; DICTP ELSE (f94d)
0328: 0b fb 02 00 00             ; CALL ?COMPILING (02fb)
032d: 09 47 03 00 00             ; JMPZ 0347
0332: 0b e7 00 00 00             ; CALL JMP (00e7)
0337: 0e 10                      ; CLITERAL 16
0339: 02                         ; FETCH
033a: 04                         ; SWAP
033b: 0e 00                      ; CLITERAL 0
033d: 0b 95 02 00 00             ; CALL , (0295)
0342: 0e 10                      ; CLITERAL 16
0344: 02                         ; FETCH
0345: 04                         ; SWAP
0346: 03                         ; STORE
0347: 0c                         ; RET
;
0348: 18 3e f9 00 00             ; DICTP THEN (f93e)
034d: 0b fb 02 00 00             ; CALL ?COMPILING (02fb)
0352: 09 5c 03 00 00             ; JMPZ 035c
0357: 0e 10                      ; CLITERAL 16
0359: 02                         ; FETCH
035a: 04                         ; SWAP
035b: 03                         ; STORE
035c: 0c                         ; RET
;
035d: 18 2e f9 00 00             ; DICTP BEGIN (f92e)
0362: 0b fb 02 00 00             ; CALL ?COMPILING (02fb)
0367: 09 6f 03 00 00             ; JMPZ 036f
036c: 0e 10                      ; CLITERAL 16
036e: 02                         ; FETCH
036f: 0c                         ; RET
;
0370: 18 1e f9 00 00             ; DICTP AGAIN (f91e)
0375: 0b fb 02 00 00             ; CALL ?COMPILING (02fb)
037a: 09 89 03 00 00             ; JMPZ 0389
037f: 0b e7 00 00 00             ; CALL JMP (00e7)
0384: 0b 95 02 00 00             ; CALL , (0295)
0389: 0c                         ; RET
;
038a: 18 0e f9 00 00             ; DICTP WHILE (f90e)
038f: 0b fb 02 00 00             ; CALL ?COMPILING (02fb)
0394: 09 a3 03 00 00             ; JMPZ 03a3
0399: 0b 01 01 00 00             ; CALL JMPNZ (0101)
039e: 0b 95 02 00 00             ; CALL , (0295)
03a3: 0c                         ; RET
;
03a4: 18 fe f8 00 00             ; DICTP UNTIL (f8fe)
03a9: 0b fb 02 00 00             ; CALL ?COMPILING (02fb)
03ae: 09 bd 03 00 00             ; JMPZ 03bd
03b3: 0b f4 00 00 00             ; CALL JMPZ (00f4)
03b8: 0b 95 02 00 00             ; CALL , (0295)
03bd: 0c                         ; RET
;
03be: 18 ee f8 00 00             ; DICTP LEAVE (f8ee)
03c3: 0b fb 02 00 00             ; CALL ?COMPILING (02fb)
03c8: 09 d2 03 00 00             ; JMPZ 03d2
03cd: 0b 1b 01 00 00             ; CALL RET (011b)
03d2: 0c                         ; RET
;
03d3: 18 e0 f8 00 00             ; DICTP >IN (f8e0)
03d8: 01 de 03 00 00             ; LITERAL 990 (3de)
03dd: 0c                         ; RET
03de: 00                         ; RESET
03df: 00                         ; RESET
03e0: 00                         ; RESET
03e1: 00                         ; RESET
03e2: 0c                         ; RET
;
03e3: 18 d0 f8 00 00             ; DICTP isNeg (f8d0)
03e8: 01 ee 03 00 00             ; LITERAL 1006 (3ee)
03ed: 0c                         ; RET
03ee: 00                         ; RESET
03ef: 00                         ; RESET
03f0: 00                         ; RESET
03f1: 00                         ; RESET
03f2: 0c                         ; RET
;
03f3: 18 bf f8 00 00             ; DICTP MEM_SZ (f8bf)
03f8: 0e 24                      ; CLITERAL 36
03fa: 02                         ; FETCH
03fb: 0c                         ; RET
;
03fc: 18 ac f8 00 00             ; DICTP TRACE-ON (f8ac)
0401: 0e 02                      ; CLITERAL 2
0403: 23                         ; LOGLEVEL
0404: 0c                         ; RET
;
0405: 18 98 f8 00 00             ; DICTP TRACE-OFF (f898)
040a: 0e 00                      ; CLITERAL 0
040c: 23                         ; LOGLEVEL
040d: 0c                         ; RET
;
040e: 18 85 f8 00 00             ; DICTP DEBUG-ON (f885)
0413: 0e 01                      ; CLITERAL 1
0415: 23                         ; LOGLEVEL
0416: 0c                         ; RET
;
0417: 18 71 f8 00 00             ; DICTP DEBUG-OFF (f871)
041c: 0e 00                      ; CLITERAL 0
041e: 23                         ; LOGLEVEL
041f: 0c                         ; RET
;
0420: 18 64 f8 00 00             ; DICTP R@ (f864)
0425: 22                         ; RTOD
0426: 06                         ; DUP
0427: 21                         ; DTOR
0428: 0c                         ; RET
;
0429: 18 54 f8 00 00             ; DICTP RDROP (f854)
042e: 22                         ; RTOD
042f: 05                         ; DROP
0430: 0c                         ; RET
;
0431: 18 45 f8 00 00             ; DICTP 2DUP (f845)
0436: 1a                         ; OVER
0437: 1a                         ; OVER
0438: 0c                         ; RET
;
0439: 18 35 f8 00 00             ; DICTP 2DROP (f835)
043e: 05                         ; DROP
043f: 05                         ; DROP
0440: 0c                         ; RET
;
0441: 18 26 f8 00 00             ; DICTP TUCK (f826)
0446: 04                         ; SWAP
0447: 1a                         ; OVER
0448: 0c                         ; RET
;
0449: 18 18 f8 00 00             ; DICTP NIP (f818)
044e: 04                         ; SWAP
044f: 05                         ; DROP
0450: 0c                         ; RET
;
0451: 18 0a f8 00 00             ; DICTP ROT (f80a)
0456: 21                         ; DTOR
0457: 04                         ; SWAP
0458: 22                         ; RTOD
0459: 04                         ; SWAP
045a: 0c                         ; RET
;
045b: 18 fb f7 00 00             ; DICTP -ROT (f7fb)
0460: 04                         ; SWAP
0461: 21                         ; DTOR
0462: 04                         ; SWAP
0463: 22                         ; RTOD
0464: 0c                         ; RET
;
0465: 18 ee f7 00 00             ; DICTP 1+ (f7ee)
046a: 2c                         ; INC
046b: 0c                         ; RET
;
046c: 18 e1 f7 00 00             ; DICTP 1- (f7e1)
0471: 2e                         ; DEC
0472: 0c                         ; RET
;
0473: 18 d4 f7 00 00             ; DICTP 2* (f7d4)
0478: 0e 02                      ; CLITERAL 2
047a: 13                         ; MUL
047b: 0c                         ; RET
;
047c: 18 c7 f7 00 00             ; DICTP 2/ (f7c7)
0481: 0e 02                      ; CLITERAL 2
0483: 14                         ; DIV
0484: 0c                         ; RET
;
0485: 18 ba f7 00 00             ; DICTP += (f7ba)
048a: 1a                         ; OVER
048b: 02                         ; FETCH
048c: 11                         ; ADD
048d: 04                         ; SWAP
048e: 03                         ; STORE
048f: 0c                         ; RET
;
0490: 18 ad f7 00 00             ; DICTP -= (f7ad)
0495: 1a                         ; OVER
0496: 02                         ; FETCH
0497: 04                         ; SWAP
0498: 12                         ; SUB
0499: 04                         ; SWAP
049a: 03                         ; STORE
049b: 0c                         ; RET
;
049c: 18 a0 f7 00 00             ; DICTP ++ (f7a0)
04a1: 0e 01                      ; CLITERAL 1
04a3: 0b 85 04 00 00             ; CALL += (0485)
04a8: 0c                         ; RET
;
04a9: 18 93 f7 00 00             ; DICTP -- (f793)
04ae: 0e 01                      ; CLITERAL 1
04b0: 0b 90 04 00 00             ; CALL -= (0490)
04b5: 0c                         ; RET
;
04b6: 18 85 f7 00 00             ; DICTP C++ (f785)
04bb: 06                         ; DUP
04bc: 0f                         ; CFETCH
04bd: 2c                         ; INC
04be: 04                         ; SWAP
04bf: 10                         ; CSTORE
04c0: 0c                         ; RET
;
04c1: 18 77 f7 00 00             ; DICTP C-- (f777)
04c6: 06                         ; DUP
04c7: 0f                         ; CFETCH
04c8: 2e                         ; DEC
04c9: 04                         ; SWAP
04ca: 10                         ; CSTORE
04cb: 0c                         ; RET
;
04cc: 18 6a f7 00 00             ; DICTP +! (f76a)
04d1: 04                         ; SWAP
04d2: 1a                         ; OVER
04d3: 02                         ; FETCH
04d4: 11                         ; ADD
04d5: 04                         ; SWAP
04d6: 03                         ; STORE
04d7: 0c                         ; RET
;
04d8: 18 5c f7 00 00             ; DICTP C+! (f75c)
04dd: 04                         ; SWAP
04de: 1a                         ; OVER
04df: 0f                         ; CFETCH
04e0: 11                         ; ADD
04e1: 04                         ; SWAP
04e2: 10                         ; CSTORE
04e3: 0c                         ; RET
;
04e4: 18 4f f7 00 00             ; DICTP 0= (f74f)
04e9: 0e 00                      ; CLITERAL 0
04eb: 16                         ; EQ
04ec: 0c                         ; RET
;
04ed: 18 42 f7 00 00             ; DICTP <> (f742)
04f2: 16                         ; EQ
04f3: 0e 00                      ; CLITERAL 0
04f5: 16                         ; EQ
04f6: 0c                         ; RET
;
04f7: 18 35 f7 00 00             ; DICTP <= (f735)
04fc: 17                         ; GT
04fd: 0e 00                      ; CLITERAL 0
04ff: 16                         ; EQ
0500: 0c                         ; RET
;
0501: 18 28 f7 00 00             ; DICTP >= (f728)
0506: 15                         ; LT
0507: 0e 00                      ; CLITERAL 0
0509: 16                         ; EQ
050a: 0c                         ; RET
;
050b: 18 19 f7 00 00             ; DICTP TRUE (f719)
0510: 0e 01                      ; CLITERAL 1
0512: 0c                         ; RET
;
0513: 18 09 f7 00 00             ; DICTP FALSE (f709)
0518: 0e 00                      ; CLITERAL 0
051a: 0c                         ; RET
;
051b: 18 fb f6 00 00             ; DICTP NOT (f6fb)
0520: 0e 00                      ; CLITERAL 0
0522: 16                         ; EQ
0523: 0c                         ; RET
;
0524: 18 eb f6 00 00             ; DICTP COUNT (f6eb)
0529: 06                         ; DUP
052a: 2c                         ; INC
052b: 04                         ; SWAP
052c: 0f                         ; CFETCH
052d: 0c                         ; RET
;
052e: 18 dc f6 00 00             ; DICTP TYPE (f6dc)
0533: 1a                         ; OVER
0534: 11                         ; ADD
0535: 04                         ; SWAP
0536: 1a                         ; OVER
0537: 1a                         ; OVER
0538: 17                         ; GT
0539: 0e 00                      ; CLITERAL 0
053b: 16                         ; EQ
053c: 09 44 05 00 00             ; JMPZ 0544
0541: 05                         ; DROP
0542: 05                         ; DROP
0543: 0c                         ; RET
0544: 06                         ; DUP
0545: 0f                         ; CFETCH
0546: 19                         ; EMIT
0547: 2c                         ; INC
0548: 08 36 05 00 00             ; JMP 0536
054d: 0c                         ; RET
;
054e: 18 cf f6 00 00             ; DICTP CT (f6cf)
0553: 0b 24 05 00 00             ; CALL COUNT (0524)
0558: 0b 2e 05 00 00             ; CALL TYPE (052e)
055d: 0c                         ; RET
;
055e: 18 c3 f6 00 00             ; DICTP \ (f6c3)
0563: 0e 00                      ; CLITERAL 0
0565: 0b d3 03 00 00             ; CALL >IN (03d3)
056a: 02                         ; FETCH
056b: 10                         ; CSTORE
056c: 0c                         ; RET
;
056d: 18 b7 f6 00 00             ; DICTP ( (f6b7)
0572: 0b d3 03 00 00             ; CALL >IN (03d3)
0577: 02                         ; FETCH
0578: 0f                         ; CFETCH
0579: 06                         ; DUP
057a: 0e 00                      ; CLITERAL 0
057c: 16                         ; EQ
057d: 09 9e 05 00 00             ; JMPZ 059e
0582: 07 13 6d 69 73 73 69 6e 67 20 63 6c 6f 73 69 6e 67 20 27 29 27 00 ; SLITERAL (0583) [missing closing ')']
0598: 0b 4e 05 00 00             ; CALL CT (054e)
059d: fe                         ; RESET
059e: 0b d3 03 00 00             ; CALL >IN (03d3)
05a3: 0b 9c 04 00 00             ; CALL ++ (049c)
05a8: 0e 29                      ; CLITERAL 41
05aa: 16                         ; EQ
05ab: 09 b1 05 00 00             ; JMPZ 05b1
05b0: 0c                         ; RET
05b1: 08 72 05 00 00             ; JMP 0572
05b6: 0c                         ; RET
;
05b7: 18 aa f6 00 00             ; DICTP BL (f6aa)
05bc: 0e 20                      ; CLITERAL 32
05be: 19                         ; EMIT
05bf: 0c                         ; RET
;
05c0: 18 9b f6 00 00             ; DICTP CRLF (f69b)
05c5: 0e 0d                      ; CLITERAL 13
05c7: 19                         ; EMIT
05c8: 0e 0a                      ; CLITERAL 10
05ca: 19                         ; EMIT
05cb: 0c                         ; RET
;
05cc: 18 8e f6 00 00             ; DICTP CR (f68e)
05d1: 0e 0d                      ; CLITERAL 13
05d3: 19                         ; EMIT
05d4: 0e 0a                      ; CLITERAL 10
05d6: 19                         ; EMIT
05d7: 0c                         ; RET
;
05d8: 18 7c f6 00 00             ; DICTP BETWEEN (f67c)
05dd: 0e 02                      ; CLITERAL 2
05df: 25                         ; PICK
05e0: 15                         ; LT
05e1: 09 eb 05 00 00             ; JMPZ 05eb
05e6: 05                         ; DROP
05e7: 05                         ; DROP
05e8: 0e 00                      ; CLITERAL 0
05ea: 0c                         ; RET
05eb: 15                         ; LT
05ec: 0e 00                      ; CLITERAL 0
05ee: 16                         ; EQ
05ef: 0c                         ; RET
;
05f0: 18 6c f6 00 00             ; DICTP (tmp) (f66c)
05f5: 01 fb 05 00 00             ; LITERAL 1531 (5fb)
05fa: 0c                         ; RET
05fb: 00                         ; RESET
05fc: 00                         ; RESET
05fd: 00                         ; RESET
05fe: 00                         ; RESET
05ff: 0c                         ; RET
;
0600: 18 59 f6 00 00             ; DICTP tmp-init (f659)
0605: 0e 14                      ; CLITERAL 20
0607: 02                         ; FETCH
0608: 0b f0 05 00 00             ; CALL (tmp) (05f0)
060d: 03                         ; STORE
060e: 0c                         ; RET
;
060f: 18 47 f6 00 00             ; DICTP tmp-cur (f647)
0614: 0b f0 05 00 00             ; CALL (tmp) (05f0)
0619: 02                         ; FETCH
061a: 0c                         ; RET
;
061b: 18 33 f6 00 00             ; DICTP tmp-alloc (f633)
0620: 0b f0 05 00 00             ; CALL (tmp) (05f0)
0625: 04                         ; SWAP
0626: 1a                         ; OVER
0627: 02                         ; FETCH
0628: 04                         ; SWAP
0629: 12                         ; SUB
062a: 04                         ; SWAP
062b: 03                         ; STORE
062c: 0b 0f 06 00 00             ; CALL tmp-cur (060f)
0631: 0c                         ; RET
;
0632: 18 25 f6 00 00             ; DICTP PAD (f625)
0637: 0b 00 06 00 00             ; CALL tmp-init (0600)
063c: 0e c8                      ; CLITERAL 200
063e: 0b 1b 06 00 00             ; CALL tmp-alloc (061b)
0643: 0c                         ; RET
;
0644: 18 12 f6 00 00             ; DICTP getInput (f612)
0649: 0b 32 06 00 00             ; CALL PAD (0632)
064e: 0e 80                      ; CLITERAL 128
0650: 0e 00                      ; CLITERAL 0
0652: 1e                         ; FREADLINE
0653: 05                         ; DROP
0654: 0b 32 06 00 00             ; CALL PAD (0632)
0659: 0c                         ; RET
;
065a: 18 01 f6 00 00             ; DICTP skipWS (f601)
065f: 06                         ; DUP
0660: 0f                         ; CFETCH
0661: 06                         ; DUP
0662: 09 7b 06 00 00             ; JMPZ 067b
0667: 0e 20                      ; CLITERAL 32
0669: 17                         ; GT
066a: 09 75 06 00 00             ; JMPZ 0675
066f: 0c                         ; RET
0670: 08 76 06 00 00             ; JMP 0676
0675: 2c                         ; INC
0676: 08 7d 06 00 00             ; JMP 067d
067b: 05                         ; DROP
067c: 0c                         ; RET
067d: 08 5f 06 00 00             ; JMP 065f
0682: 0c                         ; RET
;
0683: 18 ec f5 00 00             ; DICTP getOneWord (f5ec)
0688: 06                         ; DUP
0689: 21                         ; DTOR
068a: 21                         ; DTOR
068b: 22                         ; RTOD
068c: 06                         ; DUP
068d: 21                         ; DTOR
068e: 0f                         ; CFETCH
068f: 0e 20                      ; CLITERAL 32
0691: 17                         ; GT
0692: 09 9f 06 00 00             ; JMPZ 069f
0697: 22                         ; RTOD
0698: 2c                         ; INC
0699: 21                         ; DTOR
069a: 08 b5 06 00 00             ; JMP 06b5
069f: 22                         ; RTOD
06a0: 06                         ; DUP
06a1: 21                         ; DTOR
06a2: 0f                         ; CFETCH
06a3: 09 b1 06 00 00             ; JMPZ 06b1
06a8: 0e 00                      ; CLITERAL 0
06aa: 22                         ; RTOD
06ab: 06                         ; DUP
06ac: 21                         ; DTOR
06ad: 10                         ; CSTORE
06ae: 22                         ; RTOD
06af: 2c                         ; INC
06b0: 21                         ; DTOR
06b1: 22                         ; RTOD
06b2: 22                         ; RTOD
06b3: 04                         ; SWAP
06b4: 0c                         ; RET
06b5: 08 8b 06 00 00             ; JMP 068b
06ba: 0c                         ; RET
;
06bb: 18 d8 f5 00 00             ; DICTP DICT>NEXT (f5d8)
06c0: 0c                         ; RET
;
06c1: 18 c6 f5 00 00             ; DICTP DICT>XT (f5c6)
06c6: 0e 04                      ; CLITERAL 4
06c8: 11                         ; ADD
06c9: 0c                         ; RET
;
06ca: 18 b1 f5 00 00             ; DICTP DICT>FLAGS (f5b1)
06cf: 0e 02                      ; CLITERAL 2
06d1: 0e 04                      ; CLITERAL 4
06d3: 13                         ; MUL
06d4: 11                         ; ADD
06d5: 0c                         ; RET
;
06d6: 18 9d f5 00 00             ; DICTP DICT>NAME (f59d)
06db: 0b ca 06 00 00             ; CALL DICT>FLAGS (06ca)
06e0: 2c                         ; INC
06e1: 0c                         ; RET
;
06e2: 18 89 f5 00 00             ; DICTP NEXT>DICT (f589)
06e7: 0c                         ; RET
;
06e8: 18 77 f5 00 00             ; DICTP XT>DICT (f577)
06ed: 0e 04                      ; CLITERAL 4
06ef: 12                         ; SUB
06f0: 0c                         ; RET
;
06f1: 18 62 f5 00 00             ; DICTP FLAGS>DICT (f562)
06f6: 0e 02                      ; CLITERAL 2
06f8: 0e 04                      ; CLITERAL 4
06fa: 13                         ; MUL
06fb: 12                         ; SUB
06fc: 0c                         ; RET
;
06fd: 18 4e f5 00 00             ; DICTP NAME>DICT (f54e)
0702: 2e                         ; DEC
0703: 0e 02                      ; CLITERAL 2
0705: 0e 04                      ; CLITERAL 4
0707: 13                         ; MUL
0708: 12                         ; SUB
0709: 0c                         ; RET
;
070a: 18 39 f5 00 00             ; DICTP DICT.GetXT (f539)
070f: 0b c1 06 00 00             ; CALL DICT>XT (06c1)
0714: 02                         ; FETCH
0715: 0c                         ; RET
;
0716: 18 21 f5 00 00             ; DICTP DICT.GetFLAGS (f521)
071b: 0b ca 06 00 00             ; CALL DICT>FLAGS (06ca)
0720: 0f                         ; CFETCH
0721: 0c                         ; RET
;
0722: 18 0c f5 00 00             ; DICTP DICTP>NAME (f50c)
0727: 2c                         ; INC
0728: 02                         ; FETCH
0729: 0b d6 06 00 00             ; CALL DICT>NAME (06d6)
072e: 0c                         ; RET
;
072f: 18 f6 f4 00 00             ; DICTP XT.GetDICTP (f4f6)
0734: 06                         ; DUP
0735: 0f                         ; CFETCH
0736: 0e 18                      ; CLITERAL 24
0738: 16                         ; EQ
0739: 09 45 07 00 00             ; JMPZ 0745
073e: 2c                         ; INC
073f: 02                         ; FETCH
0740: 08 47 07 00 00             ; JMP 0747
0745: 05                         ; DROP
0746: fe                         ; RESET
0747: 0c                         ; RET
;
0748: 18 d9 f4 00 00             ; DICTP FLAGS.ISIMMEDIATE? (f4d9)
074d: 0e 01                      ; CLITERAL 1
074f: 24                         ; AND
0750: 0c                         ; RET
;
0751: 18 bf f4 00 00             ; DICTP FLAGS.ISINLINE? (f4bf)
0756: 0e 02                      ; CLITERAL 2
0758: 24                         ; AND
0759: 0c                         ; RET
;
075a: 18 a3 f4 00 00             ; DICTP DICT.GetIMMEDIATE (f4a3)
075f: 0b 16 07 00 00             ; CALL DICT.GetFLAGS (0716)
0764: 0b 48 07 00 00             ; CALL FLAGS.ISIMMEDIATE? (0748)
0769: 0c                         ; RET
;
076a: 18 8a f4 00 00             ; DICTP DICT.GetINLINE (f48a)
076f: 0b 16 07 00 00             ; CALL DICT.GetFLAGS (0716)
0774: 0b 51 07 00 00             ; CALL FLAGS.ISINLINE? (0751)
0779: 0c                         ; RET
;
077a: 18 75 f4 00 00             ; DICTP findInDict (f475)
077f: 0e 14                      ; CLITERAL 20
0781: 02                         ; FETCH
0782: 21                         ; DTOR
0783: 22                         ; RTOD
0784: 06                         ; DUP
0785: 21                         ; DTOR
0786: 06                         ; DUP
0787: 09 b0 07 00 00             ; JMPZ 07b0
078c: 0b d6 06 00 00             ; CALL DICT>NAME (06d6)
0791: 2c                         ; INC
0792: 1a                         ; OVER
0793: 28                         ; COMPAREI
0794: 09 ab 07 00 00             ; JMPZ 07ab
0799: 05                         ; DROP
079a: 22                         ; RTOD
079b: 06                         ; DUP
079c: 21                         ; DTOR
079d: 0b 0a 07 00 00             ; CALL DICT.GetXT (070a)
07a2: 22                         ; RTOD
07a3: 0b 16 07 00 00             ; CALL DICT.GetFLAGS (0716)
07a8: 0e 01                      ; CLITERAL 1
07aa: 0c                         ; RET
07ab: 08 b8 07 00 00             ; JMP 07b8
07b0: 05                         ; DROP
07b1: 05                         ; DROP
07b2: 22                         ; RTOD
07b3: 0e 00                      ; CLITERAL 0
07b5: 0e 00                      ; CLITERAL 0
07b7: 0c                         ; RET
07b8: 22                         ; RTOD
07b9: 02                         ; FETCH
07ba: 21                         ; DTOR
07bb: 08 83 07 00 00             ; JMP 0783
07c0: 0c                         ; RET
;
07c1: 18 64 f4 00 00             ; DICTP isHEX? (f464)
07c6: 0e 18                      ; CLITERAL 24
07c8: 02                         ; FETCH
07c9: 0e 10                      ; CLITERAL 16
07cb: 16                         ; EQ
07cc: 0c                         ; RET
;
07cd: 18 4f f4 00 00             ; DICTP isNumChar? (f44f)
07d2: 06                         ; DUP
07d3: 0e 30                      ; CLITERAL 48
07d5: 0e 39                      ; CLITERAL 57
07d7: 0b d8 05 00 00             ; CALL BETWEEN (05d8)
07dc: 09 e7 07 00 00             ; JMPZ 07e7
07e1: 0e 30                      ; CLITERAL 48
07e3: 12                         ; SUB
07e4: 0e 01                      ; CLITERAL 1
07e6: 0c                         ; RET
07e7: 0b c1 07 00 00             ; CALL isHEX? (07c1)
07ec: 09 1b 08 00 00             ; JMPZ 081b
07f1: 06                         ; DUP
07f2: 0e 41                      ; CLITERAL 65
07f4: 0e 46                      ; CLITERAL 70
07f6: 0b d8 05 00 00             ; CALL BETWEEN (05d8)
07fb: 09 06 08 00 00             ; JMPZ 0806
0800: 0e 37                      ; CLITERAL 55
0802: 12                         ; SUB
0803: 0e 01                      ; CLITERAL 1
0805: 0c                         ; RET
0806: 06                         ; DUP
0807: 0e 61                      ; CLITERAL 97
0809: 0e 66                      ; CLITERAL 102
080b: 0b d8 05 00 00             ; CALL BETWEEN (05d8)
0810: 09 1b 08 00 00             ; JMPZ 081b
0815: 0e 57                      ; CLITERAL 87
0817: 12                         ; SUB
0818: 0e 01                      ; CLITERAL 1
081a: 0c                         ; RET
081b: 0e 00                      ; CLITERAL 0
081d: 0c                         ; RET
;
081e: 18 3e f4 00 00             ; DICTP NEGATE (f43e)
0823: 0e 00                      ; CLITERAL 0
0825: 04                         ; SWAP
0826: 12                         ; SUB
0827: 0c                         ; RET
;
0828: 18 30 f4 00 00             ; DICTP ABS (f430)
082d: 06                         ; DUP
082e: 0e 00                      ; CLITERAL 0
0830: 15                         ; LT
0831: 09 3b 08 00 00             ; JMPZ 083b
0836: 0b 1e 08 00 00             ; CALL NEGATE (081e)
083b: 0c                         ; RET
;
083c: 18 1c f4 00 00             ; DICTP isNumber? (f41c)
0841: 06                         ; DUP
0842: 0f                         ; CFETCH
0843: 0e 2d                      ; CLITERAL 45
0845: 16                         ; EQ
0846: 06                         ; DUP
0847: 0b e3 03 00 00             ; CALL isNeg (03e3)
084c: 10                         ; CSTORE
084d: 09 53 08 00 00             ; JMPZ 0853
0852: 2c                         ; INC
0853: 0e 00                      ; CLITERAL 0
0855: 21                         ; DTOR
0856: 06                         ; DUP
0857: 0f                         ; CFETCH
0858: 06                         ; DUP
0859: 0e 00                      ; CLITERAL 0
085b: 16                         ; EQ
085c: 09 77 08 00 00             ; JMPZ 0877
0861: 05                         ; DROP
0862: 05                         ; DROP
0863: 22                         ; RTOD
0864: 0b e3 03 00 00             ; CALL isNeg (03e3)
0869: 0f                         ; CFETCH
086a: 09 74 08 00 00             ; JMPZ 0874
086f: 0b 1e 08 00 00             ; CALL NEGATE (081e)
0874: 0e 01                      ; CLITERAL 1
0876: 0c                         ; RET
0877: 0b cd 07 00 00             ; CALL isNumChar? (07cd)
087c: 09 8e 08 00 00             ; JMPZ 088e
0881: 22                         ; RTOD
0882: 0e 18                      ; CLITERAL 24
0884: 02                         ; FETCH
0885: 13                         ; MUL
0886: 11                         ; ADD
0887: 21                         ; DTOR
0888: 2c                         ; INC
0889: 08 93 08 00 00             ; JMP 0893
088e: 05                         ; DROP
088f: 22                         ; RTOD
0890: 0e 00                      ; CLITERAL 0
0892: 0c                         ; RET
0893: 08 56 08 00 00             ; JMP 0856
0898: 0c                         ; RET
;
0899: 18 0e f4 00 00             ; DICTP MOD (f40e)
089e: 1a                         ; OVER
089f: 1a                         ; OVER
08a0: 14                         ; DIV
08a1: 13                         ; MUL
08a2: 12                         ; SUB
08a3: 0c                         ; RET
;
08a4: 18 ff f3 00 00             ; DICTP /MOD (f3ff)
08a9: 1a                         ; OVER
08aa: 1a                         ; OVER
08ab: 14                         ; DIV
08ac: 06                         ; DUP
08ad: 21                         ; DTOR
08ae: 13                         ; MUL
08af: 12                         ; SUB
08b0: 22                         ; RTOD
08b1: 0c                         ; RET
;
08b2: 18 ef f3 00 00             ; DICTP SPACE (f3ef)
08b7: 0e 20                      ; CLITERAL 32
08b9: 19                         ; EMIT
08ba: 0c                         ; RET
;
08bb: 18 e0 f3 00 00             ; DICTP #NEG (f3e0)
08c0: 01 c6 08 00 00             ; LITERAL 2246 (8c6)
08c5: 0c                         ; RET
08c6: 00                         ; RESET
08c7: 00                         ; RESET
08c8: 00                         ; RESET
08c9: 00                         ; RESET
08ca: 0c                         ; RET
;
08cb: 18 d1 f3 00 00             ; DICTP #LEN (f3d1)
08d0: 01 d6 08 00 00             ; LITERAL 2262 (8d6)
08d5: 0c                         ; RET
08d6: 05                         ; DROP
08d7: 00                         ; RESET
08d8: 00                         ; RESET
08d9: 00                         ; RESET
08da: 0c                         ; RET
;
08db: 18 c4 f3 00 00             ; DICTP <# (f3c4)
08e0: 0b bb 08 00 00             ; CALL #NEG (08bb)
08e5: 0b f1 02 00 00             ; CALL OFF (02f1)
08ea: 0b cb 08 00 00             ; CALL #LEN (08cb)
08ef: 0b f1 02 00 00             ; CALL OFF (02f1)
08f4: 06                         ; DUP
08f5: 0e 00                      ; CLITERAL 0
08f7: 15                         ; LT
08f8: 09 0c 09 00 00             ; JMPZ 090c
08fd: 0b 1e 08 00 00             ; CALL NEGATE (081e)
0902: 0b bb 08 00 00             ; CALL #NEG (08bb)
0907: 0b e7 02 00 00             ; CALL ON (02e7)
090c: 0e 00                      ; CLITERAL 0
090e: 04                         ; SWAP
090f: 0c                         ; RET
;
0910: 18 b8 f3 00 00             ; DICTP # (f3b8)
0915: 0e 18                      ; CLITERAL 24
0917: 02                         ; FETCH
0918: 0b a4 08 00 00             ; CALL /MOD (08a4)
091d: 04                         ; SWAP
091e: 0e 30                      ; CLITERAL 48
0920: 11                         ; ADD
0921: 06                         ; DUP
0922: 0e 39                      ; CLITERAL 57
0924: 17                         ; GT
0925: 09 2d 09 00 00             ; JMPZ 092d
092a: 0e 07                      ; CLITERAL 7
092c: 11                         ; ADD
092d: 0b cb 08 00 00             ; CALL #LEN (08cb)
0932: 0b 9c 04 00 00             ; CALL ++ (049c)
0937: 04                         ; SWAP
0938: 0c                         ; RET
;
0939: 18 ab f3 00 00             ; DICTP #S (f3ab)
093e: 0b 10 09 00 00             ; CALL # (0910)
0943: 06                         ; DUP
0944: 0e 00                      ; CLITERAL 0
0946: 16                         ; EQ
0947: 09 3e 09 00 00             ; JMPZ 093e
094c: 0c                         ; RET
;
094d: 18 9e f3 00 00             ; DICTP #> (f39e)
0952: 0c                         ; RET
;
0953: 18 90 f3 00 00             ; DICTP #P- (f390)
0958: 05                         ; DROP
0959: 0b bb 08 00 00             ; CALL #NEG (08bb)
095e: 02                         ; FETCH
095f: 09 67 09 00 00             ; JMPZ 0967
0964: 0e 2d                      ; CLITERAL 45
0966: 19                         ; EMIT
0967: 0c                         ; RET
;
0968: 18 83 f3 00 00             ; DICTP #P (f383)
096d: 0b 53 09 00 00             ; CALL #P- (0953)
0972: 19                         ; EMIT
0973: 06                         ; DUP
0974: 0e 00                      ; CLITERAL 0
0976: 16                         ; EQ
0977: 09 72 09 00 00             ; JMPZ 0972
097c: 05                         ; DROP
097d: 0c                         ; RET
;
097e: 18 75 f3 00 00             ; DICTP (.) (f375)
0983: 0b db 08 00 00             ; CALL <# (08db)
0988: 0b 39 09 00 00             ; CALL #S (0939)
098d: 0b 4d 09 00 00             ; CALL #> (094d)
0992: 0b 68 09 00 00             ; CALL #P (0968)
0997: 0c                         ; RET
;
0998: 18 69 f3 00 00             ; DICTP . (f369)
099d: 0b 7e 09 00 00             ; CALL (.) (097e)
09a2: 0b b2 08 00 00             ; CALL SPACE (08b2)
09a7: 0c                         ; RET
;
09a8: 18 5a f3 00 00             ; DICTP HEX. (f35a)
09ad: 0e 18                      ; CLITERAL 24
09af: 02                         ; FETCH
09b0: 04                         ; SWAP
09b1: 0b bb 02 00 00             ; CALL HEX (02bb)
09b6: 06                         ; DUP
09b7: 0e 10                      ; CLITERAL 16
09b9: 15                         ; LT
09ba: 09 c2 09 00 00             ; JMPZ 09c2
09bf: 0e 30                      ; CLITERAL 48
09c1: 19                         ; EMIT
09c2: 0b 7e 09 00 00             ; CALL (.) (097e)
09c7: 0e 18                      ; CLITERAL 24
09c9: 03                         ; STORE
09ca: 0c                         ; RET
;
09cb: 18 47 f3 00 00             ; DICTP DECIMAL. (f347)
09d0: 0e 18                      ; CLITERAL 24
09d2: 02                         ; FETCH
09d3: 04                         ; SWAP
09d4: 0b c6 02 00 00             ; CALL DECIMAL (02c6)
09d9: 0b 7e 09 00 00             ; CALL (.) (097e)
09de: 0e 18                      ; CLITERAL 24
09e0: 03                         ; STORE
09e1: 0c                         ; RET
;
09e2: 18 35 f3 00 00             ; DICTP BINARY. (f335)
09e7: 0e 18                      ; CLITERAL 24
09e9: 02                         ; FETCH
09ea: 04                         ; SWAP
09eb: 0b dc 02 00 00             ; CALL BINARY (02dc)
09f0: 0b 7e 09 00 00             ; CALL (.) (097e)
09f5: 0e 18                      ; CLITERAL 24
09f7: 03                         ; STORE
09f8: 0c                         ; RET
;
09f9: 18 27 f3 00 00             ; DICTP MIN (f327)
09fe: 1a                         ; OVER
09ff: 1a                         ; OVER
0a00: 17                         ; GT
0a01: 09 07 0a 00 00             ; JMPZ 0a07
0a06: 04                         ; SWAP
0a07: 05                         ; DROP
0a08: 0c                         ; RET
;
0a09: 18 19 f3 00 00             ; DICTP MAX (f319)
0a0e: 1a                         ; OVER
0a0f: 1a                         ; OVER
0a10: 15                         ; LT
0a11: 09 17 0a 00 00             ; JMPZ 0a17
0a16: 04                         ; SWAP
0a17: 05                         ; DROP
0a18: 0c                         ; RET
;
0a19: 18 0c f3 00 00             ; DICTP .S (f30c)
0a1e: 0e 20                      ; CLITERAL 32
0a20: 19                         ; EMIT
0a21: 26                         ; DEPTH
0a22: 0e 00                      ; CLITERAL 0
0a24: 15                         ; LT
0a25: 09 48 0a 00 00             ; JMPZ 0a48
0a2a: 07 10 53 74 61 63 6b 20 75 6e 64 65 72 66 6c 6f 77 21 00 ; SLITERAL (0a2b) [Stack underflow!]
0a3d: 0b 24 05 00 00             ; CALL COUNT (0524)
0a42: 0b 2e 05 00 00             ; CALL TYPE (052e)
0a47: fe                         ; RESET
0a48: 26                         ; DEPTH
0a49: 0e 00                      ; CLITERAL 0
0a4b: 16                         ; EQ
0a4c: 09 5b 0a 00 00             ; JMPZ 0a5b
0a51: 0e 28                      ; CLITERAL 40
0a53: 19                         ; EMIT
0a54: 0e ed                      ; CLITERAL 237
0a56: 19                         ; EMIT
0a57: 0e 29                      ; CLITERAL 41
0a59: 19                         ; EMIT
0a5a: 0c                         ; RET
0a5b: 0e 28                      ; CLITERAL 40
0a5d: 19                         ; EMIT
0a5e: 0b b2 08 00 00             ; CALL SPACE (08b2)
0a63: 26                         ; DEPTH
0a64: 2e                         ; DEC
0a65: 21                         ; DTOR
0a66: 22                         ; RTOD
0a67: 06                         ; DUP
0a68: 21                         ; DTOR
0a69: 25                         ; PICK
0a6a: 0b 98 09 00 00             ; CALL . (0998)
0a6f: 22                         ; RTOD
0a70: 06                         ; DUP
0a71: 21                         ; DTOR
0a72: 09 7f 0a 00 00             ; JMPZ 0a7f
0a77: 22                         ; RTOD
0a78: 2e                         ; DEC
0a79: 21                         ; DTOR
0a7a: 08 85 0a 00 00             ; JMP 0a85
0a7f: 22                         ; RTOD
0a80: 05                         ; DROP
0a81: 0e 29                      ; CLITERAL 41
0a83: 19                         ; EMIT
0a84: 0c                         ; RET
0a85: 08 66 0a 00 00             ; JMP 0a66
0a8a: 0c                         ; RET
;
0a8b: 18 f8 f2 00 00             ; DICTP .(MEM_SZ) (f2f8)
0a90: 07 08 4d 65 6d 6f 72 79 3a 20 00 ; SLITERAL (0a91) [Memory: ]
0a9b: 0b 4e 05 00 00             ; CALL CT (054e)
0aa0: 0b f3 03 00 00             ; CALL MEM_SZ (03f3)
0aa5: 06                         ; DUP
0aa6: 0b a8 09 00 00             ; CALL HEX. (09a8)
0aab: 07 02 20 28 00             ; SLITERAL (0aac) [ (]
0ab0: 0b 4e 05 00 00             ; CALL CT (054e)
0ab5: 0b 7e 09 00 00             ; CALL (.) (097e)
0aba: 07 01 29 00                ; SLITERAL (0abb) [)]
0abe: 0b 4e 05 00 00             ; CALL CT (054e)
0ac3: 0c                         ; RET
;
0ac4: 18 e6 f2 00 00             ; DICTP .(HERE) (f2e6)
0ac9: 07 06 48 45 52 45 3a 20 00 ; SLITERAL (0aca) [HERE: ]
0ad2: 0b 4e 05 00 00             ; CALL CT (054e)
0ad7: 0e 10                      ; CLITERAL 16
0ad9: 02                         ; FETCH
0ada: 06                         ; DUP
0adb: 0b a8 09 00 00             ; CALL HEX. (09a8)
0ae0: 07 02 20 28 00             ; SLITERAL (0ae1) [ (]
0ae5: 0b 4e 05 00 00             ; CALL CT (054e)
0aea: 0b 7e 09 00 00             ; CALL (.) (097e)
0aef: 07 01 29 00                ; SLITERAL (0af0) [)]
0af3: 0b 4e 05 00 00             ; CALL CT (054e)
0af8: 0c                         ; RET
;
0af9: 18 d4 f2 00 00             ; DICTP .(LAST) (f2d4)
0afe: 07 06 4c 41 53 54 3a 20 00 ; SLITERAL (0aff) [LAST: ]
0b07: 0b 4e 05 00 00             ; CALL CT (054e)
0b0c: 0e 14                      ; CLITERAL 20
0b0e: 02                         ; FETCH
0b0f: 06                         ; DUP
0b10: 0b a8 09 00 00             ; CALL HEX. (09a8)
0b15: 07 02 20 28 00             ; SLITERAL (0b16) [ (]
0b1a: 0b 4e 05 00 00             ; CALL CT (054e)
0b1f: 0b 7e 09 00 00             ; CALL (.) (097e)
0b24: 07 01 29 00                ; SLITERAL (0b25) [)]
0b28: 0b 4e 05 00 00             ; CALL CT (054e)
0b2d: 0c                         ; RET
;
0b2e: 18 be f2 00 00             ; DICTP .WORD-SHORT (f2be)
0b33: 06                         ; DUP
0b34: 0b d6 06 00 00             ; CALL DICT>NAME (06d6)
0b39: 0b 4e 05 00 00             ; CALL CT (054e)
0b3e: 0e 20                      ; CLITERAL 32
0b40: 19                         ; EMIT
0b41: 02                         ; FETCH
0b42: 0c                         ; RET
;
0b43: 18 ae f2 00 00             ; DICTP WORDS (f2ae)
0b48: 0e 14                      ; CLITERAL 20
0b4a: 02                         ; FETCH
0b4b: 06                         ; DUP
0b4c: 02                         ; FETCH
0b4d: 0e 00                      ; CLITERAL 0
0b4f: 16                         ; EQ
0b50: 09 5d 0b 00 00             ; JMPZ 0b5d
0b55: 05                         ; DROP
0b56: 0e 0d                      ; CLITERAL 13
0b58: 19                         ; EMIT
0b59: 0e 0a                      ; CLITERAL 10
0b5b: 19                         ; EMIT
0b5c: 0c                         ; RET
0b5d: 0b 2e 0b 00 00             ; CALL .WORD-SHORT (0b2e)
0b62: 08 4b 0b 00 00             ; JMP 0b4b
0b67: 0c                         ; RET
;
0b68: 18 99 f2 00 00             ; DICTP .WORD-LONG (f299)
0b6d: 06                         ; DUP
0b6e: 0b a8 09 00 00             ; CALL HEX. (09a8)
0b73: 0e 3a                      ; CLITERAL 58
0b75: 19                         ; EMIT
0b76: 0e 20                      ; CLITERAL 32
0b78: 19                         ; EMIT
0b79: 06                         ; DUP
0b7a: 0b d6 06 00 00             ; CALL DICT>NAME (06d6)
0b7f: 0b 4e 05 00 00             ; CALL CT (054e)
0b84: 0e 20                      ; CLITERAL 32
0b86: 19                         ; EMIT
0b87: 06                         ; DUP
0b88: 0b 0a 07 00 00             ; CALL DICT.GetXT (070a)
0b8d: 0e 28                      ; CLITERAL 40
0b8f: 19                         ; EMIT
0b90: 0b a8 09 00 00             ; CALL HEX. (09a8)
0b95: 0e 29                      ; CLITERAL 41
0b97: 19                         ; EMIT
0b98: 06                         ; DUP
0b99: 0b ca 06 00 00             ; CALL DICT>FLAGS (06ca)
0b9e: 0f                         ; CFETCH
0b9f: 06                         ; DUP
0ba0: 07 09 2c 20 46 6c 61 67 73 3a 20 00 ; SLITERAL (0ba1) [, Flags: ]
0bac: 0b 4e 05 00 00             ; CALL CT (054e)
0bb1: 0b a8 09 00 00             ; CALL HEX. (09a8)
0bb6: 06                         ; DUP
0bb7: 0b 51 07 00 00             ; CALL FLAGS.ISINLINE? (0751)
0bbc: 09 d2 0b 00 00             ; JMPZ 0bd2
0bc1: 07 09 20 28 49 4e 4c 49 4e 45 29 00 ; SLITERAL (0bc2) [ (INLINE)]
0bcd: 0b 4e 05 00 00             ; CALL CT (054e)
0bd2: 0b 48 07 00 00             ; CALL FLAGS.ISIMMEDIATE? (0748)
0bd7: 09 f0 0b 00 00             ; JMPZ 0bf0
0bdc: 07 0c 20 28 49 4d 4d 45 44 49 41 54 45 29 00 ; SLITERAL (0bdd) [ (IMMEDIATE)]
0beb: 0b 4e 05 00 00             ; CALL CT (054e)
0bf0: 0e 0d                      ; CLITERAL 13
0bf2: 19                         ; EMIT
0bf3: 0e 0a                      ; CLITERAL 10
0bf5: 19                         ; EMIT
0bf6: 02                         ; FETCH
0bf7: 0c                         ; RET
;
0bf8: 18 88 f2 00 00             ; DICTP WORDSV (f288)
0bfd: 0b f9 0a 00 00             ; CALL .(LAST) (0af9)
0c02: 0e 0d                      ; CLITERAL 13
0c04: 19                         ; EMIT
0c05: 0e 0a                      ; CLITERAL 10
0c07: 19                         ; EMIT
0c08: 0e 14                      ; CLITERAL 20
0c0a: 02                         ; FETCH
0c0b: 06                         ; DUP
0c0c: 02                         ; FETCH
0c0d: 0e 00                      ; CLITERAL 0
0c0f: 16                         ; EQ
0c10: 09 1d 0c 00 00             ; JMPZ 0c1d
0c15: 05                         ; DROP
0c16: 0e 0d                      ; CLITERAL 13
0c18: 19                         ; EMIT
0c19: 0e 0a                      ; CLITERAL 10
0c1b: 19                         ; EMIT
0c1c: 0c                         ; RET
0c1d: 0b 68 0b 00 00             ; CALL .WORD-LONG (0b68)
0c22: 08 0b 0c 00 00             ; JMP 0c0b
0c27: 0c                         ; RET
;
0c28: 18 74 f2 00 00             ; DICTP NUM-WORDS (f274)
0c2d: 0e 00                      ; CLITERAL 0
0c2f: 21                         ; DTOR
0c30: 0e 14                      ; CLITERAL 20
0c32: 02                         ; FETCH
0c33: 06                         ; DUP
0c34: 02                         ; FETCH
0c35: 0e 00                      ; CLITERAL 0
0c37: 16                         ; EQ
0c38: 09 46 0c 00 00             ; JMPZ 0c46
0c3d: 05                         ; DROP
0c3e: 22                         ; RTOD
0c3f: 0e 0d                      ; CLITERAL 13
0c41: 19                         ; EMIT
0c42: 0e 0a                      ; CLITERAL 10
0c44: 19                         ; EMIT
0c45: 0c                         ; RET
0c46: 22                         ; RTOD
0c47: 2c                         ; INC
0c48: 21                         ; DTOR
0c49: 02                         ; FETCH
0c4a: 08 33 0c 00 00             ; JMP 0c33
0c4f: 0c                         ; RET
;
0c50: 18 63 f2 00 00             ; DICTP .lastx (f263)
0c55: 0e 0d                      ; CLITERAL 13
0c57: 19                         ; EMIT
0c58: 0e 0a                      ; CLITERAL 10
0c5a: 19                         ; EMIT
0c5b: 0e 14                      ; CLITERAL 20
0c5d: 02                         ; FETCH
0c5e: 04                         ; SWAP
0c5f: 0e 00                      ; CLITERAL 0
0c61: 1a                         ; OVER
0c62: 1a                         ; OVER
0c63: 17                         ; GT
0c64: 09 7c 0c 00 00             ; JMPZ 0c7c
0c69: 21                         ; DTOR
0c6a: 04                         ; SWAP
0c6b: 22                         ; RTOD
0c6c: 04                         ; SWAP
0c6d: 0b 68 0b 00 00             ; CALL .WORD-LONG (0b68)
0c72: 04                         ; SWAP
0c73: 21                         ; DTOR
0c74: 04                         ; SWAP
0c75: 22                         ; RTOD
0c76: 2c                         ; INC
0c77: 08 80 0c 00 00             ; JMP 0c80
0c7c: 05                         ; DROP
0c7d: 05                         ; DROP
0c7e: 05                         ; DROP
0c7f: 0c                         ; RET
0c80: 08 61 0c 00 00             ; JMP 0c61
0c85: 0c                         ; RET
;
0c86: 18 51 f2 00 00             ; DICTP EXECUTE (f251)
0c8b: 22                         ; RTOD
0c8c: 05                         ; DROP
0c8d: 21                         ; DTOR
0c8e: 0c                         ; RET
;
0c8f: 18 3e f2 00 00             ; DICTP find.ret (f23e)
0c94: 06                         ; DUP
0c95: 0f                         ; CFETCH
0c96: 0e 0c                      ; CLITERAL 12
0c98: 16                         ; EQ
0c99: 09 9f 0c 00 00             ; JMPZ 0c9f
0c9e: 0c                         ; RET
0c9f: 2c                         ; INC
0ca0: 08 94 0c 00 00             ; JMP 0c94
0ca5: 0c                         ; RET
;
0ca6: 18 2b f2 00 00             ; DICTP (inline) (f22b)
0cab: 1a                         ; OVER
0cac: 1a                         ; OVER
0cad: 15                         ; LT
0cae: 09 b4 0c 00 00             ; JMPZ 0cb4
0cb3: 04                         ; SWAP
0cb4: 06                         ; DUP
0cb5: 0f                         ; CFETCH
0cb6: 0b a8 02 00 00             ; CALL C, (02a8)
0cbb: 2c                         ; INC
0cbc: 1a                         ; OVER
0cbd: 1a                         ; OVER
0cbe: 17                         ; GT
0cbf: 0a b4 0c 00 00             ; JMPNZ 0cb4
0cc4: 05                         ; DROP
0cc5: 05                         ; DROP
0cc6: 0c                         ; RET
;
0cc7: 18 1b f2 00 00             ; DICTP DOES> (f21b)
0ccc: 22                         ; RTOD
0ccd: 06                         ; DUP
0cce: 0b 8f 0c 00 00             ; CALL find.ret (0c8f)
0cd3: 06                         ; DUP
0cd4: 21                         ; DTOR
0cd5: 2c                         ; INC
0cd6: 0b a6 0c 00 00             ; CALL (inline) (0ca6)
0cdb: 0c                         ; RET
;
0cdc: 18 05 f2 00 00             ; DICTP Copy.INLINE (f205)
0ce1: 06                         ; DUP
0ce2: 0f                         ; CFETCH
0ce3: 0e 18                      ; CLITERAL 24
0ce5: 16                         ; EQ
0ce6: 09 ef 0c 00 00             ; JMPZ 0cef
0ceb: 2c                         ; INC
0cec: 0e 04                      ; CLITERAL 4
0cee: 11                         ; ADD
0cef: 06                         ; DUP
0cf0: 0b 8f 0c 00 00             ; CALL find.ret (0c8f)
0cf5: 0b a6 0c 00 00             ; CALL (inline) (0ca6)
0cfa: 0c                         ; RET
;
0cfb: 18 f4 f1 00 00             ; DICTP strlen (f1f4)
0d00: 0e 00                      ; CLITERAL 0
0d02: 04                         ; SWAP
0d03: 04                         ; SWAP
0d04: 1a                         ; OVER
0d05: 0f                         ; CFETCH
0d06: 06                         ; DUP
0d07: 09 12 0d 00 00             ; JMPZ 0d12
0d0c: 05                         ; DROP
0d0d: 2c                         ; INC
0d0e: 04                         ; SWAP
0d0f: 2c                         ; INC
0d10: 0e 01                      ; CLITERAL 1
0d12: 0a 03 0d 00 00             ; JMPNZ 0d03
0d17: 04                         ; SWAP
0d18: 05                         ; DROP
0d19: 0c                         ; RET
;
0d1a: 18 e4 f1 00 00             ; DICTP cstr, (f1e4)
0d1f: 06                         ; DUP
0d20: 0f                         ; CFETCH
0d21: 1a                         ; OVER
0d22: 11                         ; ADD
0d23: 2c                         ; INC
0d24: 2c                         ; INC
0d25: 0b a6 0c 00 00             ; CALL (inline) (0ca6)
0d2a: 0c                         ; RET
;
0d2b: 18 d0 f1 00 00             ; DICTP [COMPILE] (f1d0)
0d30: 0b 51 07 00 00             ; CALL FLAGS.ISINLINE? (0751)
0d35: 09 44 0d 00 00             ; JMPZ 0d44
0d3a: 0b dc 0c 00 00             ; CALL Copy.INLINE (0cdc)
0d3f: 08 4e 0d 00 00             ; JMP 0d4e
0d44: 0b 0e 01 00 00             ; CALL CALL (010e)
0d49: 0b 95 02 00 00             ; CALL , (0295)
0d4e: 0c                         ; RET
;
0d4f: 18 ba f1 00 00             ; DICTP executeWord (f1ba)
0d54: 21                         ; DTOR
0d55: 22                         ; RTOD
0d56: 06                         ; DUP
0d57: 21                         ; DTOR
0d58: 0b 7a 07 00 00             ; CALL findInDict (077a)
0d5d: 09 99 0d 00 00             ; JMPZ 0d99
0d62: 22                         ; RTOD
0d63: 05                         ; DROP
0d64: 0b fb 02 00 00             ; CALL ?COMPILING (02fb)
0d69: 09 8e 0d 00 00             ; JMPZ 0d8e
0d6e: 06                         ; DUP
0d6f: 0b 48 07 00 00             ; CALL FLAGS.ISIMMEDIATE? (0748)
0d74: 09 84 0d 00 00             ; JMPZ 0d84
0d79: 05                         ; DROP
0d7a: 0b 86 0c 00 00             ; CALL EXECUTE (0c86)
0d7f: 08 89 0d 00 00             ; JMP 0d89
0d84: 0b 2b 0d 00 00             ; CALL [COMPILE] (0d2b)
0d89: 08 94 0d 00 00             ; JMP 0d94
0d8e: 05                         ; DROP
0d8f: 0b 86 0c 00 00             ; CALL EXECUTE (0c86)
0d94: 08 ef 0d 00 00             ; JMP 0def
0d99: 05                         ; DROP
0d9a: 05                         ; DROP
0d9b: 22                         ; RTOD
0d9c: 06                         ; DUP
0d9d: 21                         ; DTOR
0d9e: 0b 3c 08 00 00             ; CALL isNumber? (083c)
0da3: 09 e1 0d 00 00             ; JMPZ 0de1
0da8: 0b fb 02 00 00             ; CALL ?COMPILING (02fb)
0dad: 09 dc 0d 00 00             ; JMPZ 0ddc
0db2: 06                         ; DUP
0db3: 0e 00                      ; CLITERAL 0
0db5: 0e ff                      ; CLITERAL 255
0db7: 0b d8 05 00 00             ; CALL BETWEEN (05d8)
0dbc: 09 d2 0d 00 00             ; JMPZ 0dd2
0dc1: 0e 0e                      ; CLITERAL 14
0dc3: 0b 70 00 00 00             ; CALL C, (0070)
0dc8: 0b a8 02 00 00             ; CALL C, (02a8)
0dcd: 08 dc 0d 00 00             ; JMP 0ddc
0dd2: 0b aa 00 00 00             ; CALL LITERAL (00aa)
0dd7: 0b 95 02 00 00             ; CALL , (0295)
0ddc: 08 ed 0d 00 00             ; JMP 0ded
0de1: 05                         ; DROP
0de2: 07 02 3f 3f 00             ; SLITERAL (0de3) [??]
0de7: 0b 4e 05 00 00             ; CALL CT (054e)
0dec: fe                         ; RESET
0ded: 22                         ; RTOD
0dee: 05                         ; DROP
0def: 0c                         ; RET
;
0df0: 18 a3 f1 00 00             ; DICTP executeInput (f1a3)
0df5: 0b d3 03 00 00             ; CALL >IN (03d3)
0dfa: 02                         ; FETCH
0dfb: 0b 5a 06 00 00             ; CALL skipWS (065a)
0e00: 0b d3 03 00 00             ; CALL >IN (03d3)
0e05: 03                         ; STORE
0e06: 0b d3 03 00 00             ; CALL >IN (03d3)
0e0b: 02                         ; FETCH
0e0c: 0f                         ; CFETCH
0e0d: 09 2d 0e 00 00             ; JMPZ 0e2d
0e12: 0b d3 03 00 00             ; CALL >IN (03d3)
0e17: 02                         ; FETCH
0e18: 0b 83 06 00 00             ; CALL getOneWord (0683)
0e1d: 0b d3 03 00 00             ; CALL >IN (03d3)
0e22: 03                         ; STORE
0e23: 0b 4f 0d 00 00             ; CALL executeWord (0d4f)
0e28: 08 2e 0e 00 00             ; JMP 0e2e
0e2d: 0c                         ; RET
0e2e: 08 f5 0d 00 00             ; JMP 0df5
0e33: 0c                         ; RET
;
0e34: 18 95 f1 00 00             ; DICTP Pad (f195)
0e39: 0e 14                      ; CLITERAL 20
0e3b: 02                         ; FETCH
0e3c: 0e c8                      ; CLITERAL 200
0e3e: 12                         ; SUB
0e3f: 06                         ; DUP
0e40: 0e 10                      ; CLITERAL 16
0e42: 02                         ; FETCH
0e43: 15                         ; LT
0e44: 09 5b 0e 00 00             ; JMPZ 0e5b
0e49: 07 0e 4f 75 74 20 6f 66 20 4d 65 6d 6f 72 79 21 00 ; SLITERAL (0e4a) [Out of Memory!]
0e5a: fe                         ; RESET
0e5b: 0c                         ; RET
;
0e5c: 18 7a f1 00 00             ; DICTP LoadingFromFile? (f17a)
0e61: 0e 1c                      ; CLITERAL 28
0e63: 02                         ; FETCH
0e64: 0c                         ; RET
;
0e65: 18 60 f1 00 00             ; DICTP getLineFromFile (f160)
0e6a: 0e c8                      ; CLITERAL 200
0e6c: 0e 1c                      ; CLITERAL 28
0e6e: 02                         ; FETCH
0e6f: 1e                         ; FREADLINE
0e70: 0e 00                      ; CLITERAL 0
0e72: 16                         ; EQ
0e73: 09 7f 0e 00 00             ; JMPZ 0e7f
0e78: 0e 1c                      ; CLITERAL 28
0e7a: 0b f1 02 00 00             ; CALL OFF (02f1)
0e7f: 0c                         ; RET
;
0e80: 18 4e f1 00 00             ; DICTP getLine (f14e)
0e85: 0e 00                      ; CLITERAL 0
0e87: 0b 34 0e 00 00             ; CALL Pad (0e34)
0e8c: 06                         ; DUP
0e8d: 2c                         ; INC
0e8e: 0b d3 03 00 00             ; CALL >IN (03d3)
0e93: 03                         ; STORE
0e94: 10                         ; CSTORE
0e95: 0b 5c 0e 00 00             ; CALL LoadingFromFile? (0e5c)
0e9a: 09 aa 0e 00 00             ; JMPZ 0eaa
0e9f: 0b 34 0e 00 00             ; CALL Pad (0e34)
0ea4: 0b 65 0e 00 00             ; CALL getLineFromFile (0e65)
0ea9: 0c                         ; RET
0eaa: 0e 00                      ; CLITERAL 0
0eac: 0b d3 03 00 00             ; CALL >IN (03d3)
0eb1: 02                         ; FETCH
0eb2: 10                         ; CSTORE
0eb3: 27                         ; GETCH
0eb4: 06                         ; DUP
0eb5: 0e 0d                      ; CLITERAL 13
0eb7: 16                         ; EQ
0eb8: 09 c7 0e 00 00             ; JMPZ 0ec7
0ebd: 05                         ; DROP
0ebe: 0b 34 0e 00 00             ; CALL Pad (0e34)
0ec3: 0e 20                      ; CLITERAL 32
0ec5: 19                         ; EMIT
0ec6: 0c                         ; RET
0ec7: 06                         ; DUP
0ec8: 0e 09                      ; CLITERAL 9
0eca: 16                         ; EQ
0ecb: 09 d3 0e 00 00             ; JMPZ 0ed3
0ed0: 05                         ; DROP
0ed1: 0e 20                      ; CLITERAL 32
0ed3: 06                         ; DUP
0ed4: 0e 03                      ; CLITERAL 3
0ed6: 16                         ; EQ
0ed7: 09 dd 0e 00 00             ; JMPZ 0edd
0edc: ff                         ; BYE
0edd: 06                         ; DUP
0ede: 0e 08                      ; CLITERAL 8
0ee0: 16                         ; EQ
0ee1: 09 19 0f 00 00             ; JMPZ 0f19
0ee6: 0b 34 0e 00 00             ; CALL Pad (0e34)
0eeb: 0f                         ; CFETCH
0eec: 0e 00                      ; CLITERAL 0
0eee: 17                         ; GT
0eef: 09 13 0f 00 00             ; JMPZ 0f13
0ef4: 0b 34 0e 00 00             ; CALL Pad (0e34)
0ef9: 0b c1 04 00 00             ; CALL C-- (04c1)
0efe: 0b d3 03 00 00             ; CALL >IN (03d3)
0f03: 0b a9 04 00 00             ; CALL -- (04a9)
0f08: 06                         ; DUP
0f09: 19                         ; EMIT
0f0a: 0e 20                      ; CLITERAL 32
0f0c: 19                         ; EMIT
0f0d: 19                         ; EMIT
0f0e: 08 14 0f 00 00             ; JMP 0f14
0f13: 05                         ; DROP
0f14: 08 4b 0f 00 00             ; JMP 0f4b
0f19: 06                         ; DUP
0f1a: 0e 20                      ; CLITERAL 32
0f1c: 0e 7f                      ; CLITERAL 127
0f1e: 0b d8 05 00 00             ; CALL BETWEEN (05d8)
0f23: 09 4a 0f 00 00             ; JMPZ 0f4a
0f28: 06                         ; DUP
0f29: 19                         ; EMIT
0f2a: 0b d3 03 00 00             ; CALL >IN (03d3)
0f2f: 02                         ; FETCH
0f30: 10                         ; CSTORE
0f31: 0b d3 03 00 00             ; CALL >IN (03d3)
0f36: 0b 9c 04 00 00             ; CALL ++ (049c)
0f3b: 0b 34 0e 00 00             ; CALL Pad (0e34)
0f40: 0b b6 04 00 00             ; CALL C++ (04b6)
0f45: 08 4b 0f 00 00             ; JMP 0f4b
0f4a: 05                         ; DROP
0f4b: 08 aa 0e 00 00             ; JMP 0eaa
0f50: 0c                         ; RET
;
0f51: 18 3b f1 00 00             ; DICTP strcpy2c (f13b)
0f56: 06                         ; DUP
0f57: 21                         ; DTOR
0f58: 0e 00                      ; CLITERAL 0
0f5a: 1a                         ; OVER
0f5b: 10                         ; CSTORE
0f5c: 2c                         ; INC
0f5d: 04                         ; SWAP
0f5e: 06                         ; DUP
0f5f: 0f                         ; CFETCH
0f60: 06                         ; DUP
0f61: 09 7b 0f 00 00             ; JMPZ 0f7b
0f66: 0e 02                      ; CLITERAL 2
0f68: 25                         ; PICK
0f69: 10                         ; CSTORE
0f6a: 04                         ; SWAP
0f6b: 2c                         ; INC
0f6c: 04                         ; SWAP
0f6d: 2c                         ; INC
0f6e: 22                         ; RTOD
0f6f: 06                         ; DUP
0f70: 21                         ; DTOR
0f71: 0b b6 04 00 00             ; CALL C++ (04b6)
0f76: 08 84 0f 00 00             ; JMP 0f84
0f7b: 21                         ; DTOR
0f7c: 04                         ; SWAP
0f7d: 22                         ; RTOD
0f7e: 04                         ; SWAP
0f7f: 10                         ; CSTORE
0f80: 05                         ; DROP
0f81: 22                         ; RTOD
0f82: 05                         ; DROP
0f83: 0c                         ; RET
0f84: 08 5e 0f 00 00             ; JMP 0f5e
0f89: 0c                         ; RET
;
0f8a: 18 25 f1 00 00             ; DICTP Define-Word (f125)
0f8f: 0e 14                      ; CLITERAL 20
0f91: 02                         ; FETCH
0f92: 1a                         ; OVER
0f93: 0b fb 0c 00 00             ; CALL strlen (0cfb)
0f98: 0e 02                      ; CLITERAL 2
0f9a: 0e 04                      ; CLITERAL 4
0f9c: 13                         ; MUL
0f9d: 0e 03                      ; CLITERAL 3
0f9f: 11                         ; ADD
0fa0: 11                         ; ADD
0fa1: 12                         ; SUB
0fa2: 06                         ; DUP
0fa3: 21                         ; DTOR
0fa4: 21                         ; DTOR
0fa5: 0e 14                      ; CLITERAL 20
0fa7: 02                         ; FETCH
0fa8: 22                         ; RTOD
0fa9: 06                         ; DUP
0faa: 21                         ; DTOR
0fab: 03                         ; STORE
0fac: 22                         ; RTOD
0fad: 0e 04                      ; CLITERAL 4
0faf: 11                         ; ADD
0fb0: 21                         ; DTOR
0fb1: 0e 10                      ; CLITERAL 16
0fb3: 02                         ; FETCH
0fb4: 22                         ; RTOD
0fb5: 06                         ; DUP
0fb6: 21                         ; DTOR
0fb7: 03                         ; STORE
0fb8: 22                         ; RTOD
0fb9: 0e 04                      ; CLITERAL 4
0fbb: 11                         ; ADD
0fbc: 21                         ; DTOR
0fbd: 0e 00                      ; CLITERAL 0
0fbf: 22                         ; RTOD
0fc0: 06                         ; DUP
0fc1: 21                         ; DTOR
0fc2: 10                         ; CSTORE
0fc3: 22                         ; RTOD
0fc4: 2c                         ; INC
0fc5: 21                         ; DTOR
0fc6: 22                         ; RTOD
0fc7: 0b 51 0f 00 00             ; CALL strcpy2c (0f51)
0fcc: 22                         ; RTOD
0fcd: 0e 14                      ; CLITERAL 20
0fcf: 03                         ; STORE
0fd0: 0c                         ; RET
;
0fd1: 18 0f f1 00 00             ; DICTP CREATE-NAME (f10f)
0fd6: 0b d3 03 00 00             ; CALL >IN (03d3)
0fdb: 02                         ; FETCH
0fdc: 0b 5a 06 00 00             ; CALL skipWS (065a)
0fe1: 0b d3 03 00 00             ; CALL >IN (03d3)
0fe6: 03                         ; STORE
0fe7: 0b d3 03 00 00             ; CALL >IN (03d3)
0fec: 02                         ; FETCH
0fed: 0f                         ; CFETCH
0fee: 09 26 10 00 00             ; JMPZ 1026
0ff3: 0b d3 03 00 00             ; CALL >IN (03d3)
0ff8: 02                         ; FETCH
0ff9: 0b 83 06 00 00             ; CALL getOneWord (0683)
0ffe: 0b d3 03 00 00             ; CALL >IN (03d3)
1003: 03                         ; STORE
1004: 06                         ; DUP
1005: 0f                         ; CFETCH
1006: 09 24 10 00 00             ; JMPZ 1024
100b: 0b 8a 0f 00 00             ; CALL Define-Word (0f8a)
1010: 0e 18                      ; CLITERAL 24
1012: 0b 70 00 00 00             ; CALL C, (0070)
1017: 0e 14                      ; CLITERAL 20
1019: 02                         ; FETCH
101a: 0b 95 02 00 00             ; CALL , (0295)
101f: 08 26 10 00 00             ; JMP 1026
1024: 05                         ; DROP
1025: fe                         ; RESET
1026: 0c                         ; RET
;
1027: 18 03 f1 00 00             ; DICTP : (f103)
102c: 0b d1 0f 00 00             ; CALL CREATE-NAME (0fd1)
1031: 0e 20                      ; CLITERAL 32
1033: 0b e7 02 00 00             ; CALL ON (02e7)
1038: 0c                         ; RET
;
1039: 18 f1 f0 00 00             ; DICTP :NONAME (f0f1)
103e: 0e 10                      ; CLITERAL 16
1040: 02                         ; FETCH
1041: 0e 20                      ; CLITERAL 32
1043: 0b e7 02 00 00             ; CALL ON (02e7)
1048: 0c                         ; RET
;
1049: 18 e5 f0 00 00             ; DICTP ; (f0e5)
104e: 0b 1b 01 00 00             ; CALL RET (011b)
1053: 0e 20                      ; CLITERAL 32
1055: 0b f1 02 00 00             ; CALL OFF (02f1)
105a: 0c                         ; RET
;
105b: 18 d0 f0 00 00             ; DICTP ForgetLast (f0d0)
1060: 0e 14                      ; CLITERAL 20
1062: 02                         ; FETCH
1063: 0e 04                      ; CLITERAL 4
1065: 11                         ; ADD
1066: 02                         ; FETCH
1067: 0e 10                      ; CLITERAL 16
1069: 03                         ; STORE
106a: 0e 14                      ; CLITERAL 20
106c: 02                         ; FETCH
106d: 02                         ; FETCH
106e: 0e 14                      ; CLITERAL 20
1070: 03                         ; STORE
1071: 0c                         ; RET
;
1072: 18 bb f0 00 00             ; DICTP resetState (f0bb)
1077: 0b fb 02 00 00             ; CALL ?COMPILING (02fb)
107c: 09 86 10 00 00             ; JMPZ 1086
1081: 0b 5b 10 00 00             ; CALL ForgetLast (105b)
1086: 0e 20                      ; CLITERAL 32
1088: 0b f1 02 00 00             ; CALL OFF (02f1)
108d: 0b c6 02 00 00             ; CALL DECIMAL (02c6)
1092: 0c                         ; RET
;
1093: 18 ab f0 00 00             ; DICTP ALLOT (f0ab)
1098: 0e 10                      ; CLITERAL 16
109a: 02                         ; FETCH
109b: 11                         ; ADD
109c: 0e 10                      ; CLITERAL 16
109e: 03                         ; STORE
109f: 0c                         ; RET
;
10a0: 18 9f f0 00 00             ; DICTP ? (f09f)
10a5: 02                         ; FETCH
10a6: 0b 98 09 00 00             ; CALL . (0998)
10ab: 0c                         ; RET
;
10ac: 18 92 f0 00 00             ; DICTP C? (f092)
10b1: 0f                         ; CFETCH
10b2: 0b 98 09 00 00             ; CALL . (0998)
10b7: 0c                         ; RET
;
10b8: 18 83 f0 00 00             ; DICTP FREE (f083)
10bd: 0e 14                      ; CLITERAL 20
10bf: 02                         ; FETCH
10c0: 0e 10                      ; CLITERAL 16
10c2: 02                         ; FETCH
10c3: 12                         ; SUB
10c4: 0c                         ; RET
;
10c5: 18 73 f0 00 00             ; DICTP .FREE (f073)
10ca: 0b b8 10 00 00             ; CALL FREE (10b8)
10cf: 0b 7e 09 00 00             ; CALL (.) (097e)
10d4: 07 0c 20 62 79 74 65 73 20 66 72 65 65 2e 00 ; SLITERAL (10d5) [ bytes free.]
10e3: 0b 4e 05 00 00             ; CALL CT (054e)
10e8: 0c                         ; RET
;
10e9: 18 60 f0 00 00             ; DICTP mainLoop (f060)
10ee: 0b 72 10 00 00             ; CALL resetState (1072)
10f3: 0b 00 06 00 00             ; CALL tmp-init (0600)
10f8: 0b fb 02 00 00             ; CALL ?COMPILING (02fb)
10fd: 0e 00                      ; CLITERAL 0
10ff: 16                         ; EQ
1100: 09 15 11 00 00             ; JMPZ 1115
1105: 07 03 20 4f 4b 00          ; SLITERAL (1106) [ OK]
110b: 0b 4e 05 00 00             ; CALL CT (054e)
1110: 0b 19 0a 00 00             ; CALL .S (0a19)
1115: 0e 0d                      ; CLITERAL 13
1117: 19                         ; EMIT
1118: 0e 0a                      ; CLITERAL 10
111a: 19                         ; EMIT
111b: 0b 80 0e 00 00             ; CALL getLine (0e80)
1120: 2c                         ; INC
1121: 0b d3 03 00 00             ; CALL >IN (03d3)
1126: 03                         ; STORE
1127: 0b f0 0d 00 00             ; CALL executeInput (0df0)
112c: 0e 20                      ; CLITERAL 32
112e: 19                         ; EMIT
112f: 08 f3 10 00 00             ; JMP 10f3
1134: 0c                         ; RET
;
1135: 18 51 f0 00 00             ; DICTP main (f051)
113a: 0e 20                      ; CLITERAL 32
113c: 02                         ; FETCH
113d: 0e 63                      ; CLITERAL 99
113f: 16                         ; EQ
1140: 09 5a 11 00 00             ; JMPZ 115a
1145: 0e 20                      ; CLITERAL 32
1147: 0b f1 02 00 00             ; CALL OFF (02f1)
114c: 07 06 48 65 6c 6c 6f 2e 00 ; SLITERAL (114d) [Hello.]
1155: 0b 4e 05 00 00             ; CALL CT (054e)
115a: 0b e9 10 00 00             ; CALL mainLoop (10e9)
115f: 0c                         ; RET
;
1160: 18 3a f0 00 00             ; DICTP file-getLine (f03a)
1165: 0b 34 0e 00 00             ; CALL Pad (0e34)
116a: 04                         ; SWAP
116b: 0e c8                      ; CLITERAL 200
116d: 04                         ; SWAP
116e: 1e                         ; FREADLINE
116f: 0b 34 0e 00 00             ; CALL Pad (0e34)
1174: 04                         ; SWAP
1175: 0c                         ; RET
;
1176: 18 2b f0 00 00             ; DICTP load (f02b)
117b: 0e 00                      ; CLITERAL 0
117d: 0e 00                      ; CLITERAL 0
117f: 1c                         ; FOPEN
1180: 0e 00                      ; CLITERAL 0
1182: 16                         ; EQ
1183: 09 a2 11 00 00             ; JMPZ 11a2
1188: 07 11 43 61 6e 6e 6f 74 20 6f 70 65 6e 20 66 69 6c 65 2e 00 ; SLITERAL (1189) [Cannot open file.]
119c: 0b 4e 05 00 00             ; CALL CT (054e)
11a1: 0c                         ; RET
11a2: 0e 1c                      ; CLITERAL 28
11a4: 03                         ; STORE
11a5: 0e 1c                      ; CLITERAL 28
11a7: 02                         ; FETCH
11a8: 0b 60 11 00 00             ; CALL file-getLine (1160)
11ad: 09 c3 11 00 00             ; JMPZ 11c3
11b2: 2c                         ; INC
11b3: 0b d3 03 00 00             ; CALL >IN (03d3)
11b8: 03                         ; STORE
11b9: 0b f0 0d 00 00             ; CALL executeInput (0df0)
11be: 08 d0 11 00 00             ; JMP 11d0
11c3: 05                         ; DROP
11c4: 0e 1c                      ; CLITERAL 28
11c6: 02                         ; FETCH
11c7: 20                         ; FCLOSE
11c8: 0e 1c                      ; CLITERAL 28
11ca: 0b f1 02 00 00             ; CALL OFF (02f1)
11cf: 0c                         ; RET
11d0: 08 a5 11 00 00             ; JMP 11a5
11d5: 0c                         ; RET
;
11d6: 18 17 f0 00 00             ; DICTP STR.EMPTY (f017)
11db: 0e 00                      ; CLITERAL 0
11dd: 1a                         ; OVER
11de: 03                         ; STORE
11df: 0c                         ; RET
;
11e0: 18 05 f0 00 00             ; DICTP STR.LEN (f005)
11e5: 06                         ; DUP
11e6: 0f                         ; CFETCH
11e7: 0c                         ; RET
;
11e8: 18 f2 ef 00 00             ; DICTP STR.CATC (eff2)
11ed: 1a                         ; OVER
11ee: 06                         ; DUP
11ef: 0b b6 04 00 00             ; CALL C++ (04b6)
11f4: 06                         ; DUP
11f5: 0f                         ; CFETCH
11f6: 11                         ; ADD
11f7: 0e 00                      ; CLITERAL 0
11f9: 1a                         ; OVER
11fa: 2c                         ; INC
11fb: 10                         ; CSTORE
11fc: 10                         ; CSTORE
11fd: 0c                         ; RET
;
11fe: 18 db ef 00 00             ; DICTP STR.NULLTERM (efdb)
1203: 06                         ; DUP
1204: 06                         ; DUP
1205: 0f                         ; CFETCH
1206: 11                         ; ADD
1207: 2c                         ; INC
1208: 0e 00                      ; CLITERAL 0
120a: 04                         ; SWAP
120b: 10                         ; CSTORE
120c: 0c                         ; RET
;
120d: 18 ce ef 00 00             ; DICTP I" (efce)
1212: 0e 10                      ; CLITERAL 16
1214: 02                         ; FETCH
1215: 0e 64                      ; CLITERAL 100
1217: 11                         ; ADD
1218: 0e 00                      ; CLITERAL 0
121a: 1a                         ; OVER
121b: 03                         ; STORE
121c: 0b d3 03 00 00             ; CALL >IN (03d3)
1221: 02                         ; FETCH
1222: 0f                         ; CFETCH
1223: 06                         ; DUP
1224: 0e 00                      ; CLITERAL 0
1226: 16                         ; EQ
1227: 09 48 12 00 00             ; JMPZ 1248
122c: 07 10 6d 69 73 73 69 6e 67 20 63 6c 6f 73 69 6e 67 20 00 ; SLITERAL (122d) [missing closing ]
123f: 0b 4e 05 00 00             ; CALL CT (054e)
1244: 0e 22                      ; CLITERAL 34
1246: 19                         ; EMIT
1247: fe                         ; RESET
1248: 0b d3 03 00 00             ; CALL >IN (03d3)
124d: 0b 9c 04 00 00             ; CALL ++ (049c)
1252: 06                         ; DUP
1253: 0e 22                      ; CLITERAL 34
1255: 16                         ; EQ
1256: 09 5d 12 00 00             ; JMPZ 125d
125b: 05                         ; DROP
125c: 0c                         ; RET
125d: 0b e8 11 00 00             ; CALL STR.CATC (11e8)
1262: 08 1c 12 00 00             ; JMP 121c
1267: 0c                         ; RET
;
1268: 18 c2 ef 00 00             ; DICTP " (efc2)
126d: 0b fb 02 00 00             ; CALL ?COMPILING (02fb)
1272: 0e 00                      ; CLITERAL 0
1274: 16                         ; EQ
1275: 09 80 12 00 00             ; JMPZ 1280
127a: 0b 0d 12 00 00             ; CALL I" (120d)
127f: 0c                         ; RET
1280: 0b da 00 00 00             ; CALL SLITERAL (00da)
1285: 0e 10                      ; CLITERAL 16
1287: 02                         ; FETCH
1288: 0e 00                      ; CLITERAL 0
128a: 0b a8 02 00 00             ; CALL C, (02a8)
128f: 0b d3 03 00 00             ; CALL >IN (03d3)
1294: 02                         ; FETCH
1295: 0f                         ; CFETCH
1296: 06                         ; DUP
1297: 0e 00                      ; CLITERAL 0
1299: 16                         ; EQ
129a: 09 c4 12 00 00             ; JMPZ 12c4
129f: 05                         ; DROP
12a0: 2e                         ; DEC
12a1: 0e 10                      ; CLITERAL 16
12a3: 03                         ; STORE
12a4: 07 11 6d 69 73 73 69 6e 67 20 63 6c 6f 73 69 6e 67 20 27 00 ; SLITERAL (12a5) [missing closing ']
12b8: 0b 4e 05 00 00             ; CALL CT (054e)
12bd: 0e 22                      ; CLITERAL 34
12bf: 19                         ; EMIT
12c0: 0e 27                      ; CLITERAL 39
12c2: 19                         ; EMIT
12c3: fe                         ; RESET
12c4: 0b d3 03 00 00             ; CALL >IN (03d3)
12c9: 0b 9c 04 00 00             ; CALL ++ (049c)
12ce: 06                         ; DUP
12cf: 0e 22                      ; CLITERAL 34
12d1: 16                         ; EQ
12d2: 09 e8 12 00 00             ; JMPZ 12e8
12d7: 05                         ; DROP
12d8: 0e 10                      ; CLITERAL 16
12da: 02                         ; FETCH
12db: 0e 00                      ; CLITERAL 0
12dd: 0b a8 02 00 00             ; CALL C, (02a8)
12e2: 1a                         ; OVER
12e3: 12                         ; SUB
12e4: 2e                         ; DEC
12e5: 04                         ; SWAP
12e6: 10                         ; CSTORE
12e7: 0c                         ; RET
12e8: 0b a8 02 00 00             ; CALL C, (02a8)
12ed: 08 8f 12 00 00             ; JMP 128f
12f2: 0c                         ; RET
;
12f3: 18 b5 ef 00 00             ; DICTP ll (efb5)
12f8: 07 09 6c 6f 61 64 73 2e 34 74 68 00 ; SLITERAL (12f9) [loads.4th]
1304: 0b 76 11 00 00             ; CALL load (1176)
1309: 0c                         ; RET
;
130a: 18 a2 ef 00 00             ; DICTP sys-info (efa2)
130f: 0b 8b 0a 00 00             ; CALL .(MEM_SZ) (0a8b)
1314: 0e 2c                      ; CLITERAL 44
1316: 19                         ; EMIT
1317: 0e 20                      ; CLITERAL 32
1319: 19                         ; EMIT
131a: 0b c4 0a 00 00             ; CALL .(HERE) (0ac4)
131f: 0e 2c                      ; CLITERAL 44
1321: 19                         ; EMIT
1322: 0e 20                      ; CLITERAL 32
1324: 19                         ; EMIT
1325: 0b f9 0a 00 00             ; CALL .(LAST) (0af9)
132a: 0e 2c                      ; CLITERAL 44
132c: 19                         ; EMIT
132d: 0e 20                      ; CLITERAL 32
132f: 19                         ; EMIT
1330: 0b c5 10 00 00             ; CALL .FREE (10c5)
1335: 0e 0d                      ; CLITERAL 13
1337: 19                         ; EMIT
1338: 0e 0a                      ; CLITERAL 10
133a: 19                         ; EMIT
133b: 0c                         ; RET
;
133c: 18 90 ef 00 00             ; DICTP countTo (ef90)
1341: 07 0b 63 6f 75 6e 74 69 6e 67 20 74 6f 00 ; SLITERAL (1342) [counting to]
134f: 0b 4e 05 00 00             ; CALL CT (054e)
1354: 06                         ; DUP
1355: 0b 98 09 00 00             ; CALL . (0998)
135a: 07 04 20 2e 2e 2e 00       ; SLITERAL (135b) [ ...]
1361: 0b 4e 05 00 00             ; CALL CT (054e)
1366: 0e 01                      ; CLITERAL 1
1368: 1a                         ; OVER
1369: 1a                         ; OVER
136a: 15                         ; LT
136b: 09 87 13 00 00             ; JMPZ 1387
1370: 07 06 20 64 6f 6e 65 2e 00 ; SLITERAL (1371) [ done.]
1379: 0b 4e 05 00 00             ; CALL CT (054e)
137e: 0e 0d                      ; CLITERAL 13
1380: 19                         ; EMIT
1381: 0e 0a                      ; CLITERAL 10
1383: 19                         ; EMIT
1384: 05                         ; DROP
1385: 05                         ; DROP
1386: 0c                         ; RET
1387: 2c                         ; INC
1388: 08 68 13 00 00             ; JMP 1368
138d: 0c                         ; RET
;
; End of code, Dictionary:
;
ef90: a2 ef 00 00                ; countTo - (next: efa2 sys-info)
ef94: 3c 13 00 00 00             ; XT=133c, flags=00
ef99: 07 63 6f 75 6e 74 54 6f 00 ; 7, countTo
;
efa2: b5 ef 00 00                ; sys-info - (next: efb5 ll)
efa6: 0a 13 00 00 00             ; XT=130a, flags=00
efab: 08 73 79 73 2d 69 6e 66 6f 00 ; 8, sys-info
;
efb5: c2 ef 00 00                ; ll - (next: efc2 ")
efb9: f3 12 00 00 00             ; XT=12f3, flags=00
efbe: 02 6c 6c 00                ; 2, ll
;
efc2: ce ef 00 00                ; " - (next: efce I")
efc6: 68 12 00 00 01             ; XT=1268, flags=01
efcb: 01 22 00                   ; 1, "
;
efce: db ef 00 00                ; I" - (next: efdb STR.NULLTERM)
efd2: 0d 12 00 00 00             ; XT=120d, flags=00
efd7: 02 49 22 00                ; 2, I"
;
efdb: f2 ef 00 00                ; STR.NULLTERM - (next: eff2 STR.CATC)
efdf: fe 11 00 00 00             ; XT=11fe, flags=00
efe4: 0c 53 54 52 2e 4e 55 4c 4c 54 45 52 4d 00 ; 12, STR.NULLTERM
;
eff2: 05 f0 00 00                ; STR.CATC - (next: f005 STR.LEN)
eff6: e8 11 00 00 00             ; XT=11e8, flags=00
effb: 08 53 54 52 2e 43 41 54 43 00 ; 8, STR.CATC
;
f005: 17 f0 00 00                ; STR.LEN - (next: f017 STR.EMPTY)
f009: e0 11 00 00 02             ; XT=11e0, flags=02
f00e: 07 53 54 52 2e 4c 45 4e 00 ; 7, STR.LEN
;
f017: 2b f0 00 00                ; STR.EMPTY - (next: f02b load)
f01b: d6 11 00 00 02             ; XT=11d6, flags=02
f020: 09 53 54 52 2e 45 4d 50 54 59 00 ; 9, STR.EMPTY
;
f02b: 3a f0 00 00                ; load - (next: f03a file-getLine)
f02f: 76 11 00 00 00             ; XT=1176, flags=00
f034: 04 6c 6f 61 64 00          ; 4, load
;
f03a: 51 f0 00 00                ; file-getLine - (next: f051 main)
f03e: 60 11 00 00 00             ; XT=1160, flags=00
f043: 0c 66 69 6c 65 2d 67 65 74 4c 69 6e 65 00 ; 12, file-getLine
;
f051: 60 f0 00 00                ; main - (next: f060 mainLoop)
f055: 35 11 00 00 00             ; XT=1135, flags=00
f05a: 04 6d 61 69 6e 00          ; 4, main
;
f060: 73 f0 00 00                ; mainLoop - (next: f073 .FREE)
f064: e9 10 00 00 00             ; XT=10e9, flags=00
f069: 08 6d 61 69 6e 4c 6f 6f 70 00 ; 8, mainLoop
;
f073: 83 f0 00 00                ; .FREE - (next: f083 FREE)
f077: c5 10 00 00 00             ; XT=10c5, flags=00
f07c: 05 2e 46 52 45 45 00       ; 5, .FREE
;
f083: 92 f0 00 00                ; FREE - (next: f092 C?)
f087: b8 10 00 00 00             ; XT=10b8, flags=00
f08c: 04 46 52 45 45 00          ; 4, FREE
;
f092: 9f f0 00 00                ; C? - (next: f09f ?)
f096: ac 10 00 00 00             ; XT=10ac, flags=00
f09b: 02 43 3f 00                ; 2, C?
;
f09f: ab f0 00 00                ; ? - (next: f0ab ALLOT)
f0a3: a0 10 00 00 00             ; XT=10a0, flags=00
f0a8: 01 3f 00                   ; 1, ?
;
f0ab: bb f0 00 00                ; ALLOT - (next: f0bb resetState)
f0af: 93 10 00 00 00             ; XT=1093, flags=00
f0b4: 05 41 4c 4c 4f 54 00       ; 5, ALLOT
;
f0bb: d0 f0 00 00                ; resetState - (next: f0d0 ForgetLast)
f0bf: 72 10 00 00 00             ; XT=1072, flags=00
f0c4: 0a 72 65 73 65 74 53 74 61 74 65 00 ; 10, resetState
;
f0d0: e5 f0 00 00                ; ForgetLast - (next: f0e5 ;)
f0d4: 5b 10 00 00 00             ; XT=105b, flags=00
f0d9: 0a 46 6f 72 67 65 74 4c 61 73 74 00 ; 10, ForgetLast
;
f0e5: f1 f0 00 00                ; ; - (next: f0f1 :NONAME)
f0e9: 49 10 00 00 01             ; XT=1049, flags=01
f0ee: 01 3b 00                   ; 1, ;
;
f0f1: 03 f1 00 00                ; :NONAME - (next: f103 :)
f0f5: 39 10 00 00 00             ; XT=1039, flags=00
f0fa: 07 3a 4e 4f 4e 41 4d 45 00 ; 7, :NONAME
;
f103: 0f f1 00 00                ; : - (next: f10f CREATE-NAME)
f107: 27 10 00 00 00             ; XT=1027, flags=00
f10c: 01 3a 00                   ; 1, :
;
f10f: 25 f1 00 00                ; CREATE-NAME - (next: f125 Define-Word)
f113: d1 0f 00 00 00             ; XT=0fd1, flags=00
f118: 0b 43 52 45 41 54 45 2d 4e 41 4d 45 00 ; 11, CREATE-NAME
;
f125: 3b f1 00 00                ; Define-Word - (next: f13b strcpy2c)
f129: 8a 0f 00 00 00             ; XT=0f8a, flags=00
f12e: 0b 44 65 66 69 6e 65 2d 57 6f 72 64 00 ; 11, Define-Word
;
f13b: 4e f1 00 00                ; strcpy2c - (next: f14e getLine)
f13f: 51 0f 00 00 00             ; XT=0f51, flags=00
f144: 08 73 74 72 63 70 79 32 63 00 ; 8, strcpy2c
;
f14e: 60 f1 00 00                ; getLine - (next: f160 getLineFromFile)
f152: 80 0e 00 00 00             ; XT=0e80, flags=00
f157: 07 67 65 74 4c 69 6e 65 00 ; 7, getLine
;
f160: 7a f1 00 00                ; getLineFromFile - (next: f17a LoadingFromFile?)
f164: 65 0e 00 00 00             ; XT=0e65, flags=00
f169: 0f 67 65 74 4c 69 6e 65 46 72 6f 6d 46 69 6c 65 00 ; 15, getLineFromFile
;
f17a: 95 f1 00 00                ; LoadingFromFile? - (next: f195 Pad)
f17e: 5c 0e 00 00 00             ; XT=0e5c, flags=00
f183: 10 4c 6f 61 64 69 6e 67 46 72 6f 6d 46 69 6c 65 3f 00 ; 16, LoadingFromFile?
;
f195: a3 f1 00 00                ; Pad - (next: f1a3 executeInput)
f199: 34 0e 00 00 00             ; XT=0e34, flags=00
f19e: 03 50 61 64 00             ; 3, Pad
;
f1a3: ba f1 00 00                ; executeInput - (next: f1ba executeWord)
f1a7: f0 0d 00 00 00             ; XT=0df0, flags=00
f1ac: 0c 65 78 65 63 75 74 65 49 6e 70 75 74 00 ; 12, executeInput
;
f1ba: d0 f1 00 00                ; executeWord - (next: f1d0 [COMPILE])
f1be: 4f 0d 00 00 00             ; XT=0d4f, flags=00
f1c3: 0b 65 78 65 63 75 74 65 57 6f 72 64 00 ; 11, executeWord
;
f1d0: e4 f1 00 00                ; [COMPILE] - (next: f1e4 cstr,)
f1d4: 2b 0d 00 00 00             ; XT=0d2b, flags=00
f1d9: 09 5b 43 4f 4d 50 49 4c 45 5d 00 ; 9, [COMPILE]
;
f1e4: f4 f1 00 00                ; cstr, - (next: f1f4 strlen)
f1e8: 1a 0d 00 00 00             ; XT=0d1a, flags=00
f1ed: 05 63 73 74 72 2c 00       ; 5, cstr,
;
f1f4: 05 f2 00 00                ; strlen - (next: f205 Copy.INLINE)
f1f8: fb 0c 00 00 00             ; XT=0cfb, flags=00
f1fd: 06 73 74 72 6c 65 6e 00    ; 6, strlen
;
f205: 1b f2 00 00                ; Copy.INLINE - (next: f21b DOES>)
f209: dc 0c 00 00 00             ; XT=0cdc, flags=00
f20e: 0b 43 6f 70 79 2e 49 4e 4c 49 4e 45 00 ; 11, Copy.INLINE
;
f21b: 2b f2 00 00                ; DOES> - (next: f22b (inline))
f21f: c7 0c 00 00 00             ; XT=0cc7, flags=00
f224: 05 44 4f 45 53 3e 00       ; 5, DOES>
;
f22b: 3e f2 00 00                ; (inline) - (next: f23e find.ret)
f22f: a6 0c 00 00 00             ; XT=0ca6, flags=00
f234: 08 28 69 6e 6c 69 6e 65 29 00 ; 8, (inline)
;
f23e: 51 f2 00 00                ; find.ret - (next: f251 EXECUTE)
f242: 8f 0c 00 00 00             ; XT=0c8f, flags=00
f247: 08 66 69 6e 64 2e 72 65 74 00 ; 8, find.ret
;
f251: 63 f2 00 00                ; EXECUTE - (next: f263 .lastx)
f255: 86 0c 00 00 00             ; XT=0c86, flags=00
f25a: 07 45 58 45 43 55 54 45 00 ; 7, EXECUTE
;
f263: 74 f2 00 00                ; .lastx - (next: f274 NUM-WORDS)
f267: 50 0c 00 00 00             ; XT=0c50, flags=00
f26c: 06 2e 6c 61 73 74 78 00    ; 6, .lastx
;
f274: 88 f2 00 00                ; NUM-WORDS - (next: f288 WORDSV)
f278: 28 0c 00 00 00             ; XT=0c28, flags=00
f27d: 09 4e 55 4d 2d 57 4f 52 44 53 00 ; 9, NUM-WORDS
;
f288: 99 f2 00 00                ; WORDSV - (next: f299 .WORD-LONG)
f28c: f8 0b 00 00 00             ; XT=0bf8, flags=00
f291: 06 57 4f 52 44 53 56 00    ; 6, WORDSV
;
f299: ae f2 00 00                ; .WORD-LONG - (next: f2ae WORDS)
f29d: 68 0b 00 00 00             ; XT=0b68, flags=00
f2a2: 0a 2e 57 4f 52 44 2d 4c 4f 4e 47 00 ; 10, .WORD-LONG
;
f2ae: be f2 00 00                ; WORDS - (next: f2be .WORD-SHORT)
f2b2: 43 0b 00 00 00             ; XT=0b43, flags=00
f2b7: 05 57 4f 52 44 53 00       ; 5, WORDS
;
f2be: d4 f2 00 00                ; .WORD-SHORT - (next: f2d4 .(LAST))
f2c2: 2e 0b 00 00 00             ; XT=0b2e, flags=00
f2c7: 0b 2e 57 4f 52 44 2d 53 48 4f 52 54 00 ; 11, .WORD-SHORT
;
f2d4: e6 f2 00 00                ; .(LAST) - (next: f2e6 .(HERE))
f2d8: f9 0a 00 00 00             ; XT=0af9, flags=00
f2dd: 07 2e 28 4c 41 53 54 29 00 ; 7, .(LAST)
;
f2e6: f8 f2 00 00                ; .(HERE) - (next: f2f8 .(MEM_SZ))
f2ea: c4 0a 00 00 00             ; XT=0ac4, flags=00
f2ef: 07 2e 28 48 45 52 45 29 00 ; 7, .(HERE)
;
f2f8: 0c f3 00 00                ; .(MEM_SZ) - (next: f30c .S)
f2fc: 8b 0a 00 00 00             ; XT=0a8b, flags=00
f301: 09 2e 28 4d 45 4d 5f 53 5a 29 00 ; 9, .(MEM_SZ)
;
f30c: 19 f3 00 00                ; .S - (next: f319 MAX)
f310: 19 0a 00 00 00             ; XT=0a19, flags=00
f315: 02 2e 53 00                ; 2, .S
;
f319: 27 f3 00 00                ; MAX - (next: f327 MIN)
f31d: 09 0a 00 00 00             ; XT=0a09, flags=00
f322: 03 4d 41 58 00             ; 3, MAX
;
f327: 35 f3 00 00                ; MIN - (next: f335 BINARY.)
f32b: f9 09 00 00 00             ; XT=09f9, flags=00
f330: 03 4d 49 4e 00             ; 3, MIN
;
f335: 47 f3 00 00                ; BINARY. - (next: f347 DECIMAL.)
f339: e2 09 00 00 00             ; XT=09e2, flags=00
f33e: 07 42 49 4e 41 52 59 2e 00 ; 7, BINARY.
;
f347: 5a f3 00 00                ; DECIMAL. - (next: f35a HEX.)
f34b: cb 09 00 00 00             ; XT=09cb, flags=00
f350: 08 44 45 43 49 4d 41 4c 2e 00 ; 8, DECIMAL.
;
f35a: 69 f3 00 00                ; HEX. - (next: f369 .)
f35e: a8 09 00 00 00             ; XT=09a8, flags=00
f363: 04 48 45 58 2e 00          ; 4, HEX.
;
f369: 75 f3 00 00                ; . - (next: f375 (.))
f36d: 98 09 00 00 00             ; XT=0998, flags=00
f372: 01 2e 00                   ; 1, .
;
f375: 83 f3 00 00                ; (.) - (next: f383 #P)
f379: 7e 09 00 00 00             ; XT=097e, flags=00
f37e: 03 28 2e 29 00             ; 3, (.)
;
f383: 90 f3 00 00                ; #P - (next: f390 #P-)
f387: 68 09 00 00 00             ; XT=0968, flags=00
f38c: 02 23 50 00                ; 2, #P
;
f390: 9e f3 00 00                ; #P- - (next: f39e #>)
f394: 53 09 00 00 00             ; XT=0953, flags=00
f399: 03 23 50 2d 00             ; 3, #P-
;
f39e: ab f3 00 00                ; #> - (next: f3ab #S)
f3a2: 4d 09 00 00 00             ; XT=094d, flags=00
f3a7: 02 23 3e 00                ; 2, #>
;
f3ab: b8 f3 00 00                ; #S - (next: f3b8 #)
f3af: 39 09 00 00 00             ; XT=0939, flags=00
f3b4: 02 23 53 00                ; 2, #S
;
f3b8: c4 f3 00 00                ; # - (next: f3c4 <#)
f3bc: 10 09 00 00 00             ; XT=0910, flags=00
f3c1: 01 23 00                   ; 1, #
;
f3c4: d1 f3 00 00                ; <# - (next: f3d1 #LEN)
f3c8: db 08 00 00 00             ; XT=08db, flags=00
f3cd: 02 3c 23 00                ; 2, <#
;
f3d1: e0 f3 00 00                ; #LEN - (next: f3e0 #NEG)
f3d5: cb 08 00 00 00             ; XT=08cb, flags=00
f3da: 04 23 4c 45 4e 00          ; 4, #LEN
;
f3e0: ef f3 00 00                ; #NEG - (next: f3ef SPACE)
f3e4: bb 08 00 00 00             ; XT=08bb, flags=00
f3e9: 04 23 4e 45 47 00          ; 4, #NEG
;
f3ef: ff f3 00 00                ; SPACE - (next: f3ff /MOD)
f3f3: b2 08 00 00 00             ; XT=08b2, flags=00
f3f8: 05 53 50 41 43 45 00       ; 5, SPACE
;
f3ff: 0e f4 00 00                ; /MOD - (next: f40e MOD)
f403: a4 08 00 00 00             ; XT=08a4, flags=00
f408: 04 2f 4d 4f 44 00          ; 4, /MOD
;
f40e: 1c f4 00 00                ; MOD - (next: f41c isNumber?)
f412: 99 08 00 00 00             ; XT=0899, flags=00
f417: 03 4d 4f 44 00             ; 3, MOD
;
f41c: 30 f4 00 00                ; isNumber? - (next: f430 ABS)
f420: 3c 08 00 00 00             ; XT=083c, flags=00
f425: 09 69 73 4e 75 6d 62 65 72 3f 00 ; 9, isNumber?
;
f430: 3e f4 00 00                ; ABS - (next: f43e NEGATE)
f434: 28 08 00 00 00             ; XT=0828, flags=00
f439: 03 41 42 53 00             ; 3, ABS
;
f43e: 4f f4 00 00                ; NEGATE - (next: f44f isNumChar?)
f442: 1e 08 00 00 00             ; XT=081e, flags=00
f447: 06 4e 45 47 41 54 45 00    ; 6, NEGATE
;
f44f: 64 f4 00 00                ; isNumChar? - (next: f464 isHEX?)
f453: cd 07 00 00 00             ; XT=07cd, flags=00
f458: 0a 69 73 4e 75 6d 43 68 61 72 3f 00 ; 10, isNumChar?
;
f464: 75 f4 00 00                ; isHEX? - (next: f475 findInDict)
f468: c1 07 00 00 00             ; XT=07c1, flags=00
f46d: 06 69 73 48 45 58 3f 00    ; 6, isHEX?
;
f475: 8a f4 00 00                ; findInDict - (next: f48a DICT.GetINLINE)
f479: 7a 07 00 00 00             ; XT=077a, flags=00
f47e: 0a 66 69 6e 64 49 6e 44 69 63 74 00 ; 10, findInDict
;
f48a: a3 f4 00 00                ; DICT.GetINLINE - (next: f4a3 DICT.GetIMMEDIATE)
f48e: 6a 07 00 00 00             ; XT=076a, flags=00
f493: 0e 44 49 43 54 2e 47 65 74 49 4e 4c 49 4e 45 00 ; 14, DICT.GetINLINE
;
f4a3: bf f4 00 00                ; DICT.GetIMMEDIATE - (next: f4bf FLAGS.ISINLINE?)
f4a7: 5a 07 00 00 00             ; XT=075a, flags=00
f4ac: 11 44 49 43 54 2e 47 65 74 49 4d 4d 45 44 49 41 54 45 00 ; 17, DICT.GetIMMEDIATE
;
f4bf: d9 f4 00 00                ; FLAGS.ISINLINE? - (next: f4d9 FLAGS.ISIMMEDIATE?)
f4c3: 51 07 00 00 00             ; XT=0751, flags=00
f4c8: 0f 46 4c 41 47 53 2e 49 53 49 4e 4c 49 4e 45 3f 00 ; 15, FLAGS.ISINLINE?
;
f4d9: f6 f4 00 00                ; FLAGS.ISIMMEDIATE? - (next: f4f6 XT.GetDICTP)
f4dd: 48 07 00 00 00             ; XT=0748, flags=00
f4e2: 12 46 4c 41 47 53 2e 49 53 49 4d 4d 45 44 49 41 54 45 3f 00 ; 18, FLAGS.ISIMMEDIATE?
;
f4f6: 0c f5 00 00                ; XT.GetDICTP - (next: f50c DICTP>NAME)
f4fa: 2f 07 00 00 00             ; XT=072f, flags=00
f4ff: 0b 58 54 2e 47 65 74 44 49 43 54 50 00 ; 11, XT.GetDICTP
;
f50c: 21 f5 00 00                ; DICTP>NAME - (next: f521 DICT.GetFLAGS)
f510: 22 07 00 00 00             ; XT=0722, flags=00
f515: 0a 44 49 43 54 50 3e 4e 41 4d 45 00 ; 10, DICTP>NAME
;
f521: 39 f5 00 00                ; DICT.GetFLAGS - (next: f539 DICT.GetXT)
f525: 16 07 00 00 00             ; XT=0716, flags=00
f52a: 0d 44 49 43 54 2e 47 65 74 46 4c 41 47 53 00 ; 13, DICT.GetFLAGS
;
f539: 4e f5 00 00                ; DICT.GetXT - (next: f54e NAME>DICT)
f53d: 0a 07 00 00 00             ; XT=070a, flags=00
f542: 0a 44 49 43 54 2e 47 65 74 58 54 00 ; 10, DICT.GetXT
;
f54e: 62 f5 00 00                ; NAME>DICT - (next: f562 FLAGS>DICT)
f552: fd 06 00 00 00             ; XT=06fd, flags=00
f557: 09 4e 41 4d 45 3e 44 49 43 54 00 ; 9, NAME>DICT
;
f562: 77 f5 00 00                ; FLAGS>DICT - (next: f577 XT>DICT)
f566: f1 06 00 00 00             ; XT=06f1, flags=00
f56b: 0a 46 4c 41 47 53 3e 44 49 43 54 00 ; 10, FLAGS>DICT
;
f577: 89 f5 00 00                ; XT>DICT - (next: f589 NEXT>DICT)
f57b: e8 06 00 00 00             ; XT=06e8, flags=00
f580: 07 58 54 3e 44 49 43 54 00 ; 7, XT>DICT
;
f589: 9d f5 00 00                ; NEXT>DICT - (next: f59d DICT>NAME)
f58d: e2 06 00 00 00             ; XT=06e2, flags=00
f592: 09 4e 45 58 54 3e 44 49 43 54 00 ; 9, NEXT>DICT
;
f59d: b1 f5 00 00                ; DICT>NAME - (next: f5b1 DICT>FLAGS)
f5a1: d6 06 00 00 00             ; XT=06d6, flags=00
f5a6: 09 44 49 43 54 3e 4e 41 4d 45 00 ; 9, DICT>NAME
;
f5b1: c6 f5 00 00                ; DICT>FLAGS - (next: f5c6 DICT>XT)
f5b5: ca 06 00 00 00             ; XT=06ca, flags=00
f5ba: 0a 44 49 43 54 3e 46 4c 41 47 53 00 ; 10, DICT>FLAGS
;
f5c6: d8 f5 00 00                ; DICT>XT - (next: f5d8 DICT>NEXT)
f5ca: c1 06 00 00 00             ; XT=06c1, flags=00
f5cf: 07 44 49 43 54 3e 58 54 00 ; 7, DICT>XT
;
f5d8: ec f5 00 00                ; DICT>NEXT - (next: f5ec getOneWord)
f5dc: bb 06 00 00 00             ; XT=06bb, flags=00
f5e1: 09 44 49 43 54 3e 4e 45 58 54 00 ; 9, DICT>NEXT
;
f5ec: 01 f6 00 00                ; getOneWord - (next: f601 skipWS)
f5f0: 83 06 00 00 00             ; XT=0683, flags=00
f5f5: 0a 67 65 74 4f 6e 65 57 6f 72 64 00 ; 10, getOneWord
;
f601: 12 f6 00 00                ; skipWS - (next: f612 getInput)
f605: 5a 06 00 00 00             ; XT=065a, flags=00
f60a: 06 73 6b 69 70 57 53 00    ; 6, skipWS
;
f612: 25 f6 00 00                ; getInput - (next: f625 PAD)
f616: 44 06 00 00 00             ; XT=0644, flags=00
f61b: 08 67 65 74 49 6e 70 75 74 00 ; 8, getInput
;
f625: 33 f6 00 00                ; PAD - (next: f633 tmp-alloc)
f629: 32 06 00 00 00             ; XT=0632, flags=00
f62e: 03 50 41 44 00             ; 3, PAD
;
f633: 47 f6 00 00                ; tmp-alloc - (next: f647 tmp-cur)
f637: 1b 06 00 00 00             ; XT=061b, flags=00
f63c: 09 74 6d 70 2d 61 6c 6c 6f 63 00 ; 9, tmp-alloc
;
f647: 59 f6 00 00                ; tmp-cur - (next: f659 tmp-init)
f64b: 0f 06 00 00 00             ; XT=060f, flags=00
f650: 07 74 6d 70 2d 63 75 72 00 ; 7, tmp-cur
;
f659: 6c f6 00 00                ; tmp-init - (next: f66c (tmp))
f65d: 00 06 00 00 00             ; XT=0600, flags=00
f662: 08 74 6d 70 2d 69 6e 69 74 00 ; 8, tmp-init
;
f66c: 7c f6 00 00                ; (tmp) - (next: f67c BETWEEN)
f670: f0 05 00 00 00             ; XT=05f0, flags=00
f675: 05 28 74 6d 70 29 00       ; 5, (tmp)
;
f67c: 8e f6 00 00                ; BETWEEN - (next: f68e CR)
f680: d8 05 00 00 00             ; XT=05d8, flags=00
f685: 07 42 45 54 57 45 45 4e 00 ; 7, BETWEEN
;
f68e: 9b f6 00 00                ; CR - (next: f69b CRLF)
f692: cc 05 00 00 02             ; XT=05cc, flags=02
f697: 02 43 52 00                ; 2, CR
;
f69b: aa f6 00 00                ; CRLF - (next: f6aa BL)
f69f: c0 05 00 00 02             ; XT=05c0, flags=02
f6a4: 04 43 52 4c 46 00          ; 4, CRLF
;
f6aa: b7 f6 00 00                ; BL - (next: f6b7 ()
f6ae: b7 05 00 00 02             ; XT=05b7, flags=02
f6b3: 02 42 4c 00                ; 2, BL
;
f6b7: c3 f6 00 00                ; ( - (next: f6c3 \)
f6bb: 6d 05 00 00 01             ; XT=056d, flags=01
f6c0: 01 28 00                   ; 1, (
;
f6c3: cf f6 00 00                ; \ - (next: f6cf CT)
f6c7: 5e 05 00 00 01             ; XT=055e, flags=01
f6cc: 01 5c 00                   ; 1, \
;
f6cf: dc f6 00 00                ; CT - (next: f6dc TYPE)
f6d3: 4e 05 00 00 00             ; XT=054e, flags=00
f6d8: 02 43 54 00                ; 2, CT
;
f6dc: eb f6 00 00                ; TYPE - (next: f6eb COUNT)
f6e0: 2e 05 00 00 00             ; XT=052e, flags=00
f6e5: 04 54 59 50 45 00          ; 4, TYPE
;
f6eb: fb f6 00 00                ; COUNT - (next: f6fb NOT)
f6ef: 24 05 00 00 00             ; XT=0524, flags=00
f6f4: 05 43 4f 55 4e 54 00       ; 5, COUNT
;
f6fb: 09 f7 00 00                ; NOT - (next: f709 FALSE)
f6ff: 1b 05 00 00 02             ; XT=051b, flags=02
f704: 03 4e 4f 54 00             ; 3, NOT
;
f709: 19 f7 00 00                ; FALSE - (next: f719 TRUE)
f70d: 13 05 00 00 02             ; XT=0513, flags=02
f712: 05 46 41 4c 53 45 00       ; 5, FALSE
;
f719: 28 f7 00 00                ; TRUE - (next: f728 >=)
f71d: 0b 05 00 00 02             ; XT=050b, flags=02
f722: 04 54 52 55 45 00          ; 4, TRUE
;
f728: 35 f7 00 00                ; >= - (next: f735 <=)
f72c: 01 05 00 00 02             ; XT=0501, flags=02
f731: 02 3e 3d 00                ; 2, >=
;
f735: 42 f7 00 00                ; <= - (next: f742 <>)
f739: f7 04 00 00 02             ; XT=04f7, flags=02
f73e: 02 3c 3d 00                ; 2, <=
;
f742: 4f f7 00 00                ; <> - (next: f74f 0=)
f746: ed 04 00 00 02             ; XT=04ed, flags=02
f74b: 02 3c 3e 00                ; 2, <>
;
f74f: 5c f7 00 00                ; 0= - (next: f75c C+!)
f753: e4 04 00 00 02             ; XT=04e4, flags=02
f758: 02 30 3d 00                ; 2, 0=
;
f75c: 6a f7 00 00                ; C+! - (next: f76a +!)
f760: d8 04 00 00 00             ; XT=04d8, flags=00
f765: 03 43 2b 21 00             ; 3, C+!
;
f76a: 77 f7 00 00                ; +! - (next: f777 C--)
f76e: cc 04 00 00 00             ; XT=04cc, flags=00
f773: 02 2b 21 00                ; 2, +!
;
f777: 85 f7 00 00                ; C-- - (next: f785 C++)
f77b: c1 04 00 00 00             ; XT=04c1, flags=00
f780: 03 43 2d 2d 00             ; 3, C--
;
f785: 93 f7 00 00                ; C++ - (next: f793 --)
f789: b6 04 00 00 00             ; XT=04b6, flags=00
f78e: 03 43 2b 2b 00             ; 3, C++
;
f793: a0 f7 00 00                ; -- - (next: f7a0 ++)
f797: a9 04 00 00 00             ; XT=04a9, flags=00
f79c: 02 2d 2d 00                ; 2, --
;
f7a0: ad f7 00 00                ; ++ - (next: f7ad -=)
f7a4: 9c 04 00 00 00             ; XT=049c, flags=00
f7a9: 02 2b 2b 00                ; 2, ++
;
f7ad: ba f7 00 00                ; -= - (next: f7ba +=)
f7b1: 90 04 00 00 00             ; XT=0490, flags=00
f7b6: 02 2d 3d 00                ; 2, -=
;
f7ba: c7 f7 00 00                ; += - (next: f7c7 2/)
f7be: 85 04 00 00 00             ; XT=0485, flags=00
f7c3: 02 2b 3d 00                ; 2, +=
;
f7c7: d4 f7 00 00                ; 2/ - (next: f7d4 2*)
f7cb: 7c 04 00 00 02             ; XT=047c, flags=02
f7d0: 02 32 2f 00                ; 2, 2/
;
f7d4: e1 f7 00 00                ; 2* - (next: f7e1 1-)
f7d8: 73 04 00 00 02             ; XT=0473, flags=02
f7dd: 02 32 2a 00                ; 2, 2*
;
f7e1: ee f7 00 00                ; 1- - (next: f7ee 1+)
f7e5: 6c 04 00 00 02             ; XT=046c, flags=02
f7ea: 02 31 2d 00                ; 2, 1-
;
f7ee: fb f7 00 00                ; 1+ - (next: f7fb -ROT)
f7f2: 65 04 00 00 02             ; XT=0465, flags=02
f7f7: 02 31 2b 00                ; 2, 1+
;
f7fb: 0a f8 00 00                ; -ROT - (next: f80a ROT)
f7ff: 5b 04 00 00 02             ; XT=045b, flags=02
f804: 04 2d 52 4f 54 00          ; 4, -ROT
;
f80a: 18 f8 00 00                ; ROT - (next: f818 NIP)
f80e: 51 04 00 00 02             ; XT=0451, flags=02
f813: 03 52 4f 54 00             ; 3, ROT
;
f818: 26 f8 00 00                ; NIP - (next: f826 TUCK)
f81c: 49 04 00 00 02             ; XT=0449, flags=02
f821: 03 4e 49 50 00             ; 3, NIP
;
f826: 35 f8 00 00                ; TUCK - (next: f835 2DROP)
f82a: 41 04 00 00 02             ; XT=0441, flags=02
f82f: 04 54 55 43 4b 00          ; 4, TUCK
;
f835: 45 f8 00 00                ; 2DROP - (next: f845 2DUP)
f839: 39 04 00 00 02             ; XT=0439, flags=02
f83e: 05 32 44 52 4f 50 00       ; 5, 2DROP
;
f845: 54 f8 00 00                ; 2DUP - (next: f854 RDROP)
f849: 31 04 00 00 02             ; XT=0431, flags=02
f84e: 04 32 44 55 50 00          ; 4, 2DUP
;
f854: 64 f8 00 00                ; RDROP - (next: f864 R@)
f858: 29 04 00 00 02             ; XT=0429, flags=02
f85d: 05 52 44 52 4f 50 00       ; 5, RDROP
;
f864: 71 f8 00 00                ; R@ - (next: f871 DEBUG-OFF)
f868: 20 04 00 00 02             ; XT=0420, flags=02
f86d: 02 52 40 00                ; 2, R@
;
f871: 85 f8 00 00                ; DEBUG-OFF - (next: f885 DEBUG-ON)
f875: 17 04 00 00 02             ; XT=0417, flags=02
f87a: 09 44 45 42 55 47 2d 4f 46 46 00 ; 9, DEBUG-OFF
;
f885: 98 f8 00 00                ; DEBUG-ON - (next: f898 TRACE-OFF)
f889: 0e 04 00 00 02             ; XT=040e, flags=02
f88e: 08 44 45 42 55 47 2d 4f 4e 00 ; 8, DEBUG-ON
;
f898: ac f8 00 00                ; TRACE-OFF - (next: f8ac TRACE-ON)
f89c: 05 04 00 00 02             ; XT=0405, flags=02
f8a1: 09 54 52 41 43 45 2d 4f 46 46 00 ; 9, TRACE-OFF
;
f8ac: bf f8 00 00                ; TRACE-ON - (next: f8bf MEM_SZ)
f8b0: fc 03 00 00 02             ; XT=03fc, flags=02
f8b5: 08 54 52 41 43 45 2d 4f 4e 00 ; 8, TRACE-ON
;
f8bf: d0 f8 00 00                ; MEM_SZ - (next: f8d0 isNeg)
f8c3: f3 03 00 00 00             ; XT=03f3, flags=00
f8c8: 06 4d 45 4d 5f 53 5a 00    ; 6, MEM_SZ
;
f8d0: e0 f8 00 00                ; isNeg - (next: f8e0 >IN)
f8d4: e3 03 00 00 00             ; XT=03e3, flags=00
f8d9: 05 69 73 4e 65 67 00       ; 5, isNeg
;
f8e0: ee f8 00 00                ; >IN - (next: f8ee LEAVE)
f8e4: d3 03 00 00 00             ; XT=03d3, flags=00
f8e9: 03 3e 49 4e 00             ; 3, >IN
;
f8ee: fe f8 00 00                ; LEAVE - (next: f8fe UNTIL)
f8f2: be 03 00 00 01             ; XT=03be, flags=01
f8f7: 05 4c 45 41 56 45 00       ; 5, LEAVE
;
f8fe: 0e f9 00 00                ; UNTIL - (next: f90e WHILE)
f902: a4 03 00 00 01             ; XT=03a4, flags=01
f907: 05 55 4e 54 49 4c 00       ; 5, UNTIL
;
f90e: 1e f9 00 00                ; WHILE - (next: f91e AGAIN)
f912: 8a 03 00 00 01             ; XT=038a, flags=01
f917: 05 57 48 49 4c 45 00       ; 5, WHILE
;
f91e: 2e f9 00 00                ; AGAIN - (next: f92e BEGIN)
f922: 70 03 00 00 01             ; XT=0370, flags=01
f927: 05 41 47 41 49 4e 00       ; 5, AGAIN
;
f92e: 3e f9 00 00                ; BEGIN - (next: f93e THEN)
f932: 5d 03 00 00 01             ; XT=035d, flags=01
f937: 05 42 45 47 49 4e 00       ; 5, BEGIN
;
f93e: 4d f9 00 00                ; THEN - (next: f94d ELSE)
f942: 48 03 00 00 01             ; XT=0348, flags=01
f947: 04 54 48 45 4e 00          ; 4, THEN
;
f94d: 5c f9 00 00                ; ELSE - (next: f95c IF)
f951: 23 03 00 00 01             ; XT=0323, flags=01
f956: 04 45 4c 53 45 00          ; 4, ELSE
;
f95c: 69 f9 00 00                ; IF - (next: f969 ?COMPILING)
f960: 04 03 00 00 01             ; XT=0304, flags=01
f965: 02 49 46 00                ; 2, IF
;
f969: 7e f9 00 00                ; ?COMPILING - (next: f97e OFF)
f96d: fb 02 00 00 00             ; XT=02fb, flags=00
f972: 0a 3f 43 4f 4d 50 49 4c 49 4e 47 00 ; 10, ?COMPILING
;
f97e: 8c f9 00 00                ; OFF - (next: f98c ON)
f982: f1 02 00 00 00             ; XT=02f1, flags=00
f987: 03 4f 46 46 00             ; 3, OFF
;
f98c: 99 f9 00 00                ; ON - (next: f999 BINARY)
f990: e7 02 00 00 00             ; XT=02e7, flags=00
f995: 02 4f 4e 00                ; 2, ON
;
f999: aa f9 00 00                ; BINARY - (next: f9aa OCTAL)
f99d: dc 02 00 00 00             ; XT=02dc, flags=00
f9a2: 06 42 49 4e 41 52 59 00    ; 6, BINARY
;
f9aa: ba f9 00 00                ; OCTAL - (next: f9ba DECIMAL)
f9ae: d1 02 00 00 00             ; XT=02d1, flags=00
f9b3: 05 4f 43 54 41 4c 00       ; 5, OCTAL
;
f9ba: cc f9 00 00                ; DECIMAL - (next: f9cc HEX)
f9be: c6 02 00 00 00             ; XT=02c6, flags=00
f9c3: 07 44 45 43 49 4d 41 4c 00 ; 7, DECIMAL
;
f9cc: da f9 00 00                ; HEX - (next: f9da C,)
f9d0: bb 02 00 00 00             ; XT=02bb, flags=00
f9d5: 03 48 45 58 00             ; 3, HEX
;
f9da: e7 f9 00 00                ; C, - (next: f9e7 ,)
f9de: a8 02 00 00 00             ; XT=02a8, flags=00
f9e3: 02 43 2c 00                ; 2, C,
;
f9e7: f3 f9 00 00                ; , - (next: f9f3 HERE)
f9eb: 95 02 00 00 00             ; XT=0295, flags=00
f9f0: 01 2c 00                   ; 1, ,
;
f9f3: 02 fa 00 00                ; HERE - (next: fa02 LAST)
f9f7: 8c 02 00 00 02             ; XT=028c, flags=02
f9fc: 04 48 45 52 45 00          ; 4, HERE
;
fa02: 11 fa 00 00                ; LAST - (next: fa11 FLAG_INLINE)
fa06: 83 02 00 00 02             ; XT=0283, flags=02
fa0b: 04 4c 41 53 54 00          ; 4, LAST
;
fa11: 27 fa 00 00                ; FLAG_INLINE - (next: fa27 FLAG_IMMEDIATE)
fa15: 7b 02 00 00 02             ; XT=027b, flags=02
fa1a: 0b 46 4c 41 47 5f 49 4e 4c 49 4e 45 00 ; 11, FLAG_INLINE
;
fa27: 40 fa 00 00                ; FLAG_IMMEDIATE - (next: fa40 CELLS)
fa2b: 73 02 00 00 02             ; XT=0273, flags=02
fa30: 0e 46 4c 41 47 5f 49 4d 4d 45 44 49 41 54 45 00 ; 14, FLAG_IMMEDIATE
;
fa40: 50 fa 00 00                ; CELLS - (next: fa50 IMMEDIATE)
fa44: 6a 02 00 00 02             ; XT=026a, flags=02
fa49: 05 43 45 4c 4c 53 00       ; 5, CELLS
;
fa50: 64 fa 00 00                ; IMMEDIATE - (next: fa64 INLINE)
fa54: 54 02 00 00 00             ; XT=0254, flags=00
fa59: 09 49 4d 4d 45 44 49 41 54 45 00 ; 9, IMMEDIATE
;
fa64: 75 fa 00 00                ; INLINE - (next: fa75 BYE)
fa68: 3e 02 00 00 00             ; XT=023e, flags=00
fa6d: 06 49 4e 4c 49 4e 45 00    ; 6, INLINE
;
fa75: 83 fa 00 00                ; BYE - (next: fa83 RESET)
fa79: 37 02 00 00 02             ; XT=0237, flags=02
fa7e: 03 42 59 45 00             ; 3, BYE
;
fa83: 93 fa 00 00                ; RESET - (next: fa93 BREAK)
fa87: 30 02 00 00 02             ; XT=0230, flags=02
fa8c: 05 52 45 53 45 54 00       ; 5, RESET
;
fa93: a3 fa 00 00                ; BREAK - (next: faa3 GETTICK)
fa97: 29 02 00 00 02             ; XT=0229, flags=02
fa9c: 05 42 52 45 41 4b 00       ; 5, BREAK
;
faa3: b5 fa 00 00                ; GETTICK - (next: fab5 DEC)
faa7: 22 02 00 00 02             ; XT=0222, flags=02
faac: 07 47 45 54 54 49 43 4b 00 ; 7, GETTICK
;
fab5: c3 fa 00 00                ; DEC - (next: fac3 RDEPTH)
fab9: 1b 02 00 00 02             ; XT=021b, flags=02
fabe: 03 44 45 43 00             ; 3, DEC
;
fac3: d4 fa 00 00                ; RDEPTH - (next: fad4 INC)
fac7: 14 02 00 00 02             ; XT=0214, flags=02
facc: 06 52 44 45 50 54 48 00    ; 6, RDEPTH
;
fad4: e2 fa 00 00                ; INC - (next: fae2 USPOP)
fad8: 0d 02 00 00 02             ; XT=020d, flags=02
fadd: 03 49 4e 43 00             ; 3, INC
;
fae2: f2 fa 00 00                ; USPOP - (next: faf2 USPUSH)
fae6: 06 02 00 00 02             ; XT=0206, flags=02
faeb: 05 55 53 50 4f 50 00       ; 5, USPOP
;
faf2: 03 fb 00 00                ; USPUSH - (next: fb03 USINIT)
faf6: ff 01 00 00 02             ; XT=01ff, flags=02
fafb: 06 55 53 50 55 53 48 00    ; 6, USPUSH
;
fb03: 14 fb 00 00                ; USINIT - (next: fb14 COMPAREI)
fb07: f8 01 00 00 02             ; XT=01f8, flags=02
fb0c: 06 55 53 49 4e 49 54 00    ; 6, USINIT
;
fb14: 27 fb 00 00                ; COMPAREI - (next: fb27 GETCH)
fb18: f1 01 00 00 02             ; XT=01f1, flags=02
fb1d: 08 43 4f 4d 50 41 52 45 49 00 ; 8, COMPAREI
;
fb27: 37 fb 00 00                ; GETCH - (next: fb37 DEPTH)
fb2b: ea 01 00 00 02             ; XT=01ea, flags=02
fb30: 05 47 45 54 43 48 00       ; 5, GETCH
;
fb37: 47 fb 00 00                ; DEPTH - (next: fb47 PICK)
fb3b: e3 01 00 00 02             ; XT=01e3, flags=02
fb40: 05 44 45 50 54 48 00       ; 5, DEPTH
;
fb47: 56 fb 00 00                ; PICK - (next: fb56 AND)
fb4b: dc 01 00 00 02             ; XT=01dc, flags=02
fb50: 04 50 49 43 4b 00          ; 4, PICK
;
fb56: 64 fb 00 00                ; AND - (next: fb64 LOGLEVEL)
fb5a: d5 01 00 00 02             ; XT=01d5, flags=02
fb5f: 03 41 4e 44 00             ; 3, AND
;
fb64: 77 fb 00 00                ; LOGLEVEL - (next: fb77 R>)
fb68: ce 01 00 00 02             ; XT=01ce, flags=02
fb6d: 08 4c 4f 47 4c 45 56 45 4c 00 ; 8, LOGLEVEL
;
fb77: 84 fb 00 00                ; R> - (next: fb84 >R)
fb7b: c7 01 00 00 02             ; XT=01c7, flags=02
fb80: 02 52 3e 00                ; 2, R>
;
fb84: 91 fb 00 00                ; >R - (next: fb91 FCLOSE)
fb88: c0 01 00 00 02             ; XT=01c0, flags=02
fb8d: 02 3e 52 00                ; 2, >R
;
fb91: a2 fb 00 00                ; FCLOSE - (next: fba2 FWRITE)
fb95: b9 01 00 00 02             ; XT=01b9, flags=02
fb9a: 06 46 43 4c 4f 53 45 00    ; 6, FCLOSE
;
fba2: b3 fb 00 00                ; FWRITE - (next: fbb3 FREADLINE)
fba6: b2 01 00 00 02             ; XT=01b2, flags=02
fbab: 06 46 57 52 49 54 45 00    ; 6, FWRITE
;
fbb3: c7 fb 00 00                ; FREADLINE - (next: fbc7 FREAD)
fbb7: ab 01 00 00 02             ; XT=01ab, flags=02
fbbc: 09 46 52 45 41 44 4c 49 4e 45 00 ; 9, FREADLINE
;
fbc7: d7 fb 00 00                ; FREAD - (next: fbd7 FOPEN)
fbcb: a4 01 00 00 02             ; XT=01a4, flags=02
fbd0: 05 46 52 45 41 44 00       ; 5, FREAD
;
fbd7: e7 fb 00 00                ; FOPEN - (next: fbe7 COMPARE)
fbdb: 9d 01 00 00 02             ; XT=019d, flags=02
fbe0: 05 46 4f 50 45 4e 00       ; 5, FOPEN
;
fbe7: f9 fb 00 00                ; COMPARE - (next: fbf9 OVER)
fbeb: 96 01 00 00 02             ; XT=0196, flags=02
fbf0: 07 43 4f 4d 50 41 52 45 00 ; 7, COMPARE
;
fbf9: 08 fc 00 00                ; OVER - (next: fc08 EMIT)
fbfd: 8f 01 00 00 02             ; XT=018f, flags=02
fc02: 04 4f 56 45 52 00          ; 4, OVER
;
fc08: 17 fc 00 00                ; EMIT - (next: fc17 DICTP)
fc0c: 88 01 00 00 02             ; XT=0188, flags=02
fc11: 04 45 4d 49 54 00          ; 4, EMIT
;
fc17: 27 fc 00 00                ; DICTP - (next: fc27 >)
fc1b: 7b 01 00 00 02             ; XT=017b, flags=02
fc20: 05 44 49 43 54 50 00       ; 5, DICTP
;
fc27: 33 fc 00 00                ; > - (next: fc33 =)
fc2b: 74 01 00 00 02             ; XT=0174, flags=02
fc30: 01 3e 00                   ; 1, >
;
fc33: 3f fc 00 00                ; = - (next: fc3f <)
fc37: 6d 01 00 00 02             ; XT=016d, flags=02
fc3c: 01 3d 00                   ; 1, =
;
fc3f: 4b fc 00 00                ; < - (next: fc4b /)
fc43: 66 01 00 00 02             ; XT=0166, flags=02
fc48: 01 3c 00                   ; 1, <
;
fc4b: 57 fc 00 00                ; / - (next: fc57 *)
fc4f: 5f 01 00 00 02             ; XT=015f, flags=02
fc54: 01 2f 00                   ; 1, /
;
fc57: 63 fc 00 00                ; * - (next: fc63 -)
fc5b: 58 01 00 00 02             ; XT=0158, flags=02
fc60: 01 2a 00                   ; 1, *
;
fc63: 6f fc 00 00                ; - - (next: fc6f +)
fc67: 51 01 00 00 02             ; XT=0151, flags=02
fc6c: 01 2d 00                   ; 1, -
;
fc6f: 7b fc 00 00                ; + - (next: fc7b C!)
fc73: 4a 01 00 00 02             ; XT=014a, flags=02
fc78: 01 2b 00                   ; 1, +
;
fc7b: 88 fc 00 00                ; C! - (next: fc88 C@)
fc7f: 43 01 00 00 02             ; XT=0143, flags=02
fc84: 02 43 21 00                ; 2, C!
;
fc88: 95 fc 00 00                ; C@ - (next: fc95 CLITERAL)
fc8c: 3c 01 00 00 02             ; XT=013c, flags=02
fc91: 02 43 40 00                ; 2, C@
;
fc95: a8 fc 00 00                ; CLITERAL - (next: fca8 OR)
fc99: 2f 01 00 00 02             ; XT=012f, flags=02
fc9e: 08 43 4c 49 54 45 52 41 4c 00 ; 8, CLITERAL
;
fca8: b5 fc 00 00                ; OR - (next: fcb5 RET)
fcac: 28 01 00 00 02             ; XT=0128, flags=02
fcb1: 02 4f 52 00                ; 2, OR
;
fcb5: c3 fc 00 00                ; RET - (next: fcc3 CALL)
fcb9: 1b 01 00 00 00             ; XT=011b, flags=00
fcbe: 03 52 45 54 00             ; 3, RET
;
fcc3: d2 fc 00 00                ; CALL - (next: fcd2 JMPNZ)
fcc7: 0e 01 00 00 00             ; XT=010e, flags=00
fccc: 04 43 41 4c 4c 00          ; 4, CALL
;
fcd2: e2 fc 00 00                ; JMPNZ - (next: fce2 JMPZ)
fcd6: 01 01 00 00 00             ; XT=0101, flags=00
fcdb: 05 4a 4d 50 4e 5a 00       ; 5, JMPNZ
;
fce2: f1 fc 00 00                ; JMPZ - (next: fcf1 JMP)
fce6: f4 00 00 00 00             ; XT=00f4, flags=00
fceb: 04 4a 4d 50 5a 00          ; 4, JMPZ
;
fcf1: ff fc 00 00                ; JMP - (next: fcff SLITERAL)
fcf5: e7 00 00 00 00             ; XT=00e7, flags=00
fcfa: 03 4a 4d 50 00             ; 3, JMP
;
fcff: 12 fd 00 00                ; SLITERAL - (next: fd12 DUP)
fd03: da 00 00 00 00             ; XT=00da, flags=00
fd08: 08 53 4c 49 54 45 52 41 4c 00 ; 8, SLITERAL
;
fd12: 20 fd 00 00                ; DUP - (next: fd20 DROP)
fd16: d3 00 00 00 02             ; XT=00d3, flags=02
fd1b: 03 44 55 50 00             ; 3, DUP
;
fd20: 2f fd 00 00                ; DROP - (next: fd2f SWAP)
fd24: cc 00 00 00 02             ; XT=00cc, flags=02
fd29: 04 44 52 4f 50 00          ; 4, DROP
;
fd2f: 3e fd 00 00                ; SWAP - (next: fd3e !)
fd33: c5 00 00 00 02             ; XT=00c5, flags=02
fd38: 04 53 57 41 50 00          ; 4, SWAP
;
fd3e: 4a fd 00 00                ; ! - (next: fd4a @)
fd42: be 00 00 00 02             ; XT=00be, flags=02
fd47: 01 21 00                   ; 1, !
;
fd4a: 56 fd 00 00                ; @ - (next: fd56 LITERAL)
fd4e: b7 00 00 00 02             ; XT=00b7, flags=02
fd53: 01 40 00                   ; 1, @
;
fd56: 68 fd 00 00                ; LITERAL - (next: fd68 ])
fd5a: aa 00 00 00 00             ; XT=00aa, flags=00
fd5f: 07 4c 49 54 45 52 41 4c 00 ; 7, LITERAL
;
fd68: 74 fd 00 00                ; ] - (next: fd74 [)
fd6c: 9f 00 00 00 01             ; XT=009f, flags=01
fd71: 01 5d 00                   ; 1, ]
;
fd74: 80 fd 00 00                ; [ - (next: fd80 ,)
fd78: 94 00 00 00 01             ; XT=0094, flags=01
fd7d: 01 5b 00                   ; 1, [
;
fd80: 8c fd 00 00                ; , - (next: fd8c C,)
fd84: 81 00 00 00 00             ; XT=0081, flags=00
fd89: 01 2c 00                   ; 1, ,
;
fd8c: 99 fd 00 00                ; C, - (next: fd99 STATE)
fd90: 70 00 00 00 00             ; XT=0070, flags=00
fd95: 02 43 2c 00                ; 2, C,
;
fd99: a9 fd 00 00                ; STATE - (next: fda9 INPUT-FP)
fd9d: 68 00 00 00 02             ; XT=0068, flags=02
fda2: 05 53 54 41 54 45 00       ; 5, STATE
;
fda9: bc fd 00 00                ; INPUT-FP - (next: fdbc (LAST))
fdad: 60 00 00 00 02             ; XT=0060, flags=02
fdb2: 08 49 4e 50 55 54 2d 46 50 00 ; 8, INPUT-FP
;
fdbc: cd fd 00 00                ; (LAST) - (next: fdcd (HERE))
fdc0: 58 00 00 00 02             ; XT=0058, flags=02
fdc5: 06 28 4c 41 53 54 29 00    ; 6, (LAST)
;
fdcd: de fd 00 00                ; (HERE) - (next: fdde CELL)
fdd1: 50 00 00 00 02             ; XT=0050, flags=02
fdd6: 06 28 48 45 52 45 29 00    ; 6, (HERE)
;
fdde: ed fd 00 00                ; CELL - (next: fded BASE)
fde2: 48 00 00 00 02             ; XT=0048, flags=02
fde7: 04 43 45 4c 4c 00          ; 4, CELL
;
fded: fc fd 00 00                ; BASE - (next: fdfc <end>)
fdf1: 40 00 00 00 02             ; XT=0040, flags=02
fdf6: 04 42 41 53 45 00          ; 4, BASE
;
fdfc: 00 00 00 00                ; End.
