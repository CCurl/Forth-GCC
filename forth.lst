; memory-size: 65536 bytes, (10000 hex)
; data-stack: fe00, grows up
; return-stack: fffc, grows down
;
0000: 08 56 12 00 00             ; JMP main (1256)
;
0005: 00 00 00
0008: 00000004 00000000
0010: 0000149c 0000ef2b 0000000a 00000000
0020: 00000000 00010000 00000000 00000000
0030: 00000000 00000000 00000000 00000000
;
0040: 18 eb fd 00 00             ; DICTP (HERE) (fdeb)
0045: 01 4b 00 00 00             ; LITERAL 75 (0x004b)
004a: 0c                         ; RET
004b: 9c 14 00 00                ; dw 0x149c
;
004f: 18 da fd 00 00             ; DICTP (LAST) (fdda)
0054: 01 5a 00 00 00             ; LITERAL 90 (0x005a)
0059: 0c                         ; RET
005a: 2b ef 00 00                ; dw 0xef2b
;
005e: 18 cb fd 00 00             ; DICTP BASE (fdcb)
0063: 01 69 00 00 00             ; LITERAL 105 (0x0069)
0068: 0c                         ; RET
0069: 0a 00 00 00                ; dw 0x000a
;
006d: 18 bb fd 00 00             ; DICTP STATE (fdbb)
0072: 01 78 00 00 00             ; LITERAL 120 (0x0078)
0077: 0c                         ; RET
0078: 63 00 00 00                ; dw 0x0063
;
007c: 18 a8 fd 00 00             ; DICTP (MEM_SZ) (fda8)
0081: 01 87 00 00 00             ; LITERAL 135 (0x0087)
0086: 0c                         ; RET
0087: 00 00 01 00                ; dw 0x10000
;
008b: 18 9a fd 00 00             ; DICTP >IN (fd9a)
0090: 01 96 00 00 00             ; LITERAL 150 (0x0096)
0095: 0c                         ; RET
0096: 00 00 00 00                ; dw 0x0000
;
009a: 18 8a fd 00 00             ; DICTP (tmp) (fd8a)
009f: 01 a5 00 00 00             ; LITERAL 165 (0x00a5)
00a4: 0c                         ; RET
00a5: 00 00 00 00                ; dw 0x0000
;
00a9: 18 7b fd 00 00             ; DICTP #NEG (fd7b)
00ae: 01 b4 00 00 00             ; LITERAL 180 (0x00b4)
00b3: 0c                         ; RET
00b4: 00 00 00 00                ; dw 0x0000
;
00b8: 18 6c fd 00 00             ; DICTP #LEN (fd6c)
00bd: 01 c3 00 00 00             ; LITERAL 195 (0x00c3)
00c2: 0c                         ; RET
00c3: 05 00 00 00                ; dw 0x0005
;
00c7: 18 59 fd 00 00             ; DICTP INPUT-FP (fd59)
00cc: 01 d2 00 00 00             ; LITERAL 210 (0x00d2)
00d1: 0c                         ; RET
00d2: 00 00 00 00                ; dw 0x0000
;
00d6: 18 4c fd 00 00             ; DICTP T1 (fd4c)
00db: 01 e1 00 00 00             ; LITERAL 225 (0x00e1)
00e0: 0c                         ; RET
00e1: 00 00 00 00                ; dw 0x0000
;
00e5: 18 3f fd 00 00             ; DICTP T2 (fd3f)
00ea: 01 f0 00 00 00             ; LITERAL 240 (0x00f0)
00ef: 0c                         ; RET
00f0: 00 00 00 00                ; dw 0x0000
;
00f4: 18 32 fd 00 00             ; DICTP T3 (fd32)
00f9: 01 ff 00 00 00             ; LITERAL 255 (0x00ff)
00fe: 0c                         ; RET
00ff: 00 00 00 00                ; dw 0x0000
;
0103: fc                         ; NOP
0104: 18 23 fd 00 00             ; DICTP CELL (fd23)
0109: 0e 04                      ; CLITERAL 4
010b: 0c                         ; RET
;
010c: 18 14 fd 00 00             ; DICTP HERE (fd14)
0111: 0b 40 00 00 00             ; CALL (HERE) (0040)
0116: 02                         ; FETCH
0117: 0c                         ; RET
;
0118: 18 05 fd 00 00             ; DICTP LAST (fd05)
011d: 0b 4f 00 00 00             ; CALL (LAST) (004f)
0122: 02                         ; FETCH
0123: 0c                         ; RET
;
0124: 18 f8 fc 00 00             ; DICTP C, (fcf8)
0129: 0b 0c 01 00 00             ; CALL HERE (010c)
012e: 10                         ; CSTORE
012f: 0b 0c 01 00 00             ; CALL HERE (010c)
0134: 2c                         ; INC
0135: 0b 40 00 00 00             ; CALL (HERE) (0040)
013a: 03                         ; STORE
013b: 0c                         ; RET
;
013c: 18 ec fc 00 00             ; DICTP , (fcec)
0141: 0b 0c 01 00 00             ; CALL HERE (010c)
0146: 03                         ; STORE
0147: 0b 0c 01 00 00             ; CALL HERE (010c)
014c: 0e 04                      ; CLITERAL 4
014e: 11                         ; ADD
014f: 0b 40 00 00 00             ; CALL (HERE) (0040)
0154: 03                         ; STORE
0155: 0c                         ; RET
;
0156: 18 e0 fc 00 00             ; DICTP [ (fce0)
015b: 0e 00                      ; CLITERAL 0
015d: 0b 6d 00 00 00             ; CALL STATE (006d)
0162: 03                         ; STORE
0163: 0c                         ; RET
;
0164: 18 d4 fc 00 00             ; DICTP ] (fcd4)
0169: 0e 01                      ; CLITERAL 1
016b: 0b 6d 00 00 00             ; CALL STATE (006d)
0170: 03                         ; STORE
0171: 0c                         ; RET
;
0172: 18 c2 fc 00 00             ; DICTP LITERAL (fcc2)
0177: 0e 01                      ; CLITERAL 1
0179: 0b 24 01 00 00             ; CALL C, (0124)
017e: 0c                         ; RET
;
017f: 18 b6 fc 00 00             ; DICTP @ (fcb6)
0184: 02                         ; FETCH
0185: 0c                         ; RET
;
0186: 18 aa fc 00 00             ; DICTP ! (fcaa)
018b: 03                         ; STORE
018c: 0c                         ; RET
;
018d: 18 9b fc 00 00             ; DICTP SWAP (fc9b)
0192: 04                         ; SWAP
0193: 0c                         ; RET
;
0194: 18 8c fc 00 00             ; DICTP DROP (fc8c)
0199: 05                         ; DROP
019a: 0c                         ; RET
;
019b: 18 7e fc 00 00             ; DICTP DUP (fc7e)
01a0: 06                         ; DUP
01a1: 0c                         ; RET
;
01a2: 18 6b fc 00 00             ; DICTP SLITERAL (fc6b)
01a7: 0e 07                      ; CLITERAL 7
01a9: 0b 24 01 00 00             ; CALL C, (0124)
01ae: 0c                         ; RET
;
01af: 18 5d fc 00 00             ; DICTP JMP (fc5d)
01b4: 0e 08                      ; CLITERAL 8
01b6: 0b 24 01 00 00             ; CALL C, (0124)
01bb: 0c                         ; RET
;
01bc: 18 4e fc 00 00             ; DICTP JMPZ (fc4e)
01c1: 0e 09                      ; CLITERAL 9
01c3: 0b 24 01 00 00             ; CALL C, (0124)
01c8: 0c                         ; RET
;
01c9: 18 3e fc 00 00             ; DICTP JMPNZ (fc3e)
01ce: 0e 0a                      ; CLITERAL 10
01d0: 0b 24 01 00 00             ; CALL C, (0124)
01d5: 0c                         ; RET
;
01d6: 18 2f fc 00 00             ; DICTP CALL (fc2f)
01db: 0e 0b                      ; CLITERAL 11
01dd: 0b 24 01 00 00             ; CALL C, (0124)
01e2: 0c                         ; RET
;
01e3: 18 21 fc 00 00             ; DICTP RET (fc21)
01e8: 0e 0c                      ; CLITERAL 12
01ea: 0b 24 01 00 00             ; CALL C, (0124)
01ef: 0c                         ; RET
;
01f0: 18 14 fc 00 00             ; DICTP OR (fc14)
01f5: 0d                         ; OR
01f6: 0c                         ; RET
;
01f7: 18 01 fc 00 00             ; DICTP CLITERAL (fc01)
01fc: 0e 0e                      ; CLITERAL 14
01fe: 0b 24 01 00 00             ; CALL C, (0124)
0203: 0c                         ; RET
;
0204: 18 f4 fb 00 00             ; DICTP C@ (fbf4)
0209: 0f                         ; CFETCH
020a: 0c                         ; RET
;
020b: 18 e7 fb 00 00             ; DICTP C! (fbe7)
0210: 10                         ; CSTORE
0211: 0c                         ; RET
;
0212: 18 db fb 00 00             ; DICTP + (fbdb)
0217: 11                         ; ADD
0218: 0c                         ; RET
;
0219: 18 cf fb 00 00             ; DICTP - (fbcf)
021e: 12                         ; SUB
021f: 0c                         ; RET
;
0220: 18 c3 fb 00 00             ; DICTP * (fbc3)
0225: 13                         ; MUL
0226: 0c                         ; RET
;
0227: 18 b7 fb 00 00             ; DICTP / (fbb7)
022c: 14                         ; DIV
022d: 0c                         ; RET
;
022e: 18 ab fb 00 00             ; DICTP < (fbab)
0233: 15                         ; LT
0234: 0c                         ; RET
;
0235: 18 9f fb 00 00             ; DICTP = (fb9f)
023a: 16                         ; EQ
023b: 0c                         ; RET
;
023c: 18 93 fb 00 00             ; DICTP > (fb93)
0241: 17                         ; GT
0242: 0c                         ; RET
;
0243: 18 83 fb 00 00             ; DICTP DICTP (fb83)
0248: 0e 18                      ; CLITERAL 24
024a: 0b 24 01 00 00             ; CALL C, (0124)
024f: 0c                         ; RET
;
0250: 18 74 fb 00 00             ; DICTP EMIT (fb74)
0255: 19                         ; EMIT
0256: 0c                         ; RET
;
0257: 18 65 fb 00 00             ; DICTP OVER (fb65)
025c: 1a                         ; OVER
025d: 0c                         ; RET
;
025e: 18 53 fb 00 00             ; DICTP COMPARE (fb53)
0263: 1b                         ; COMPARE
0264: 0c                         ; RET
;
0265: 18 43 fb 00 00             ; DICTP FOPEN (fb43)
026a: 1c                         ; FOPEN
026b: 0c                         ; RET
;
026c: 18 33 fb 00 00             ; DICTP FREAD (fb33)
0271: 1d                         ; FREAD
0272: 0c                         ; RET
;
0273: 18 1f fb 00 00             ; DICTP FREADLINE (fb1f)
0278: 1e                         ; FREADLINE
0279: 0c                         ; RET
;
027a: 18 0e fb 00 00             ; DICTP FWRITE (fb0e)
027f: 1f                         ; FWRITE
0280: 0c                         ; RET
;
0281: 18 fd fa 00 00             ; DICTP FCLOSE (fafd)
0286: 20                         ; FCLOSE
0287: 0c                         ; RET
;
0288: 18 f0 fa 00 00             ; DICTP >R (faf0)
028d: 21                         ; DTOR
028e: 0c                         ; RET
;
028f: 18 e3 fa 00 00             ; DICTP R> (fae3)
0294: 22                         ; RTOD
0295: 0c                         ; RET
;
0296: 18 d0 fa 00 00             ; DICTP LOGLEVEL (fad0)
029b: 23                         ; LOGLEVEL
029c: 0c                         ; RET
;
029d: 18 c2 fa 00 00             ; DICTP AND (fac2)
02a2: 24                         ; AND
02a3: 0c                         ; RET
;
02a4: 18 b3 fa 00 00             ; DICTP PICK (fab3)
02a9: 25                         ; PICK
02aa: 0c                         ; RET
;
02ab: 18 a3 fa 00 00             ; DICTP DEPTH (faa3)
02b0: 26                         ; DEPTH
02b1: 0c                         ; RET
;
02b2: 18 93 fa 00 00             ; DICTP GETCH (fa93)
02b7: 27                         ; GETCH
02b8: 0c                         ; RET
;
02b9: 18 80 fa 00 00             ; DICTP COMPAREI (fa80)
02be: 28                         ; COMPAREI
02bf: 0c                         ; RET
;
02c0: 18 71 fa 00 00             ; DICTP /MOD (fa71)
02c5: 29                         ; RESET
02c6: 0c                         ; RET
;
02c7: 18 63 fa 00 00             ; DICTP NOT (fa63)
02cc: 2a                         ; NOT
02cd: 0c                         ; RET
;
02ce: 18 52 fa 00 00             ; DICTP RFETCH (fa52)
02d3: 2b                         ; RFETCH
02d4: 0c                         ; RET
;
02d5: 18 44 fa 00 00             ; DICTP INC (fa44)
02da: 2c                         ; INC
02db: 0c                         ; RET
;
02dc: 18 33 fa 00 00             ; DICTP RDEPTH (fa33)
02e1: 2d                         ; RDEPTH
02e2: 0c                         ; RET
;
02e3: 18 25 fa 00 00             ; DICTP DEC (fa25)
02e8: 2e                         ; DEC
02e9: 0c                         ; RET
;
02ea: 18 13 fa 00 00             ; DICTP GETTICK (fa13)
02ef: 2f                         ; GETTICK
02f0: 0c                         ; RET
;
02f1: 18 05 fa 00 00             ; DICTP NOP (fa05)
02f6: fc                         ; NOP
02f7: 0c                         ; RET
;
02f8: 18 f5 f9 00 00             ; DICTP BREAK (f9f5)
02fd: fd                         ; BREAK
02fe: 0c                         ; RET
;
02ff: 18 e5 f9 00 00             ; DICTP RESET (f9e5)
0304: fe                         ; RESET
0305: 0c                         ; RET
;
0306: 18 d7 f9 00 00             ; DICTP BYE (f9d7)
030b: ff                         ; BYE
030c: 0c                         ; RET
;
030d: 18 c6 f9 00 00             ; DICTP INLINE (f9c6)
0312: 0b 18 01 00 00             ; CALL LAST (0118)
0317: 0e 02                      ; CLITERAL 2
0319: 0e 04                      ; CLITERAL 4
031b: 13                         ; MUL
031c: 11                         ; ADD
031d: 06                         ; DUP
031e: 0f                         ; CFETCH
031f: 0e 02                      ; CLITERAL 2
0321: 0d                         ; OR
0322: 04                         ; SWAP
0323: 10                         ; CSTORE
0324: 0c                         ; RET
;
0325: 18 b2 f9 00 00             ; DICTP IMMEDIATE (f9b2)
032a: 0b 18 01 00 00             ; CALL LAST (0118)
032f: 0e 02                      ; CLITERAL 2
0331: 0e 04                      ; CLITERAL 4
0333: 13                         ; MUL
0334: 11                         ; ADD
0335: 06                         ; DUP
0336: 0f                         ; CFETCH
0337: 0e 01                      ; CLITERAL 1
0339: 0d                         ; OR
033a: 04                         ; SWAP
033b: 10                         ; CSTORE
033c: 0c                         ; RET
;
033d: 18 a2 f9 00 00             ; DICTP CELLS (f9a2)
0342: 0e 04                      ; CLITERAL 4
0344: 13                         ; MUL
0345: 0c                         ; RET
;
0346: 18 89 f9 00 00             ; DICTP FLAG_IMMEDIATE (f989)
034b: 0e 01                      ; CLITERAL 1
034d: 0c                         ; RET
;
034e: 18 73 f9 00 00             ; DICTP FLAG_INLINE (f973)
0353: 0e 02                      ; CLITERAL 2
0355: 0c                         ; RET
;
0356: 18 65 f9 00 00             ; DICTP HEX (f965)
035b: 0e 10                      ; CLITERAL 16
035d: 0b 5e 00 00 00             ; CALL BASE (005e)
0362: 03                         ; STORE
0363: 0c                         ; RET
;
0364: 18 53 f9 00 00             ; DICTP DECIMAL (f953)
0369: 0e 0a                      ; CLITERAL 10
036b: 0b 5e 00 00 00             ; CALL BASE (005e)
0370: 03                         ; STORE
0371: 0c                         ; RET
;
0372: 18 43 f9 00 00             ; DICTP OCTAL (f943)
0377: 0e 08                      ; CLITERAL 8
0379: 0b 5e 00 00 00             ; CALL BASE (005e)
037e: 03                         ; STORE
037f: 0c                         ; RET
;
0380: 18 32 f9 00 00             ; DICTP BINARY (f932)
0385: 0e 02                      ; CLITERAL 2
0387: 0b 5e 00 00 00             ; CALL BASE (005e)
038c: 03                         ; STORE
038d: 0c                         ; RET
;
038e: 18 25 f9 00 00             ; DICTP ON (f925)
0393: 0e 01                      ; CLITERAL 1
0395: 04                         ; SWAP
0396: 03                         ; STORE
0397: 0c                         ; RET
;
0398: 18 17 f9 00 00             ; DICTP OFF (f917)
039d: 0e 00                      ; CLITERAL 0
039f: 04                         ; SWAP
03a0: 03                         ; STORE
03a1: 0c                         ; RET
;
03a2: 18 02 f9 00 00             ; DICTP ?COMPILING (f902)
03a7: 0b 6d 00 00 00             ; CALL STATE (006d)
03ac: 02                         ; FETCH
03ad: 0c                         ; RET
;
03ae: 18 f5 f8 00 00             ; DICTP IF (f8f5)
03b3: 0b a2 03 00 00             ; CALL ?COMPILING (03a2)
03b8: 09 ce 03 00 00             ; JMPZ 03ce
03bd: 0b bc 01 00 00             ; CALL JMPZ (01bc)
03c2: 0b 0c 01 00 00             ; CALL HERE (010c)
03c7: 0e 00                      ; CLITERAL 0
03c9: 0b 3c 01 00 00             ; CALL , (013c)
03ce: 0c                         ; RET
;
03cf: 18 e6 f8 00 00             ; DICTP ELSE (f8e6)
03d4: 0b a2 03 00 00             ; CALL ?COMPILING (03a2)
03d9: 09 f7 03 00 00             ; JMPZ 03f7
03de: 0b af 01 00 00             ; CALL JMP (01af)
03e3: 0b 0c 01 00 00             ; CALL HERE (010c)
03e8: 04                         ; SWAP
03e9: 0e 00                      ; CLITERAL 0
03eb: 0b 3c 01 00 00             ; CALL , (013c)
03f0: 0b 0c 01 00 00             ; CALL HERE (010c)
03f5: 04                         ; SWAP
03f6: 03                         ; STORE
03f7: 0c                         ; RET
;
03f8: 18 d7 f8 00 00             ; DICTP THEN (f8d7)
03fd: 0b a2 03 00 00             ; CALL ?COMPILING (03a2)
0402: 09 0e 04 00 00             ; JMPZ 040e
0407: 0b 0c 01 00 00             ; CALL HERE (010c)
040c: 04                         ; SWAP
040d: 03                         ; STORE
040e: 0c                         ; RET
;
040f: 18 c7 f8 00 00             ; DICTP BEGIN (f8c7)
0414: 0b a2 03 00 00             ; CALL ?COMPILING (03a2)
0419: 09 23 04 00 00             ; JMPZ 0423
041e: 0b 0c 01 00 00             ; CALL HERE (010c)
0423: 0c                         ; RET
;
0424: 18 b7 f8 00 00             ; DICTP AGAIN (f8b7)
0429: 0b a2 03 00 00             ; CALL ?COMPILING (03a2)
042e: 09 3d 04 00 00             ; JMPZ 043d
0433: 0b af 01 00 00             ; CALL JMP (01af)
0438: 0b 3c 01 00 00             ; CALL , (013c)
043d: 0c                         ; RET
;
043e: 18 a7 f8 00 00             ; DICTP WHILE (f8a7)
0443: 0b a2 03 00 00             ; CALL ?COMPILING (03a2)
0448: 09 57 04 00 00             ; JMPZ 0457
044d: 0b c9 01 00 00             ; CALL JMPNZ (01c9)
0452: 0b 3c 01 00 00             ; CALL , (013c)
0457: 0c                         ; RET
;
0458: 18 97 f8 00 00             ; DICTP UNTIL (f897)
045d: 0b a2 03 00 00             ; CALL ?COMPILING (03a2)
0462: 09 71 04 00 00             ; JMPZ 0471
0467: 0b bc 01 00 00             ; CALL JMPZ (01bc)
046c: 0b 3c 01 00 00             ; CALL , (013c)
0471: 0c                         ; RET
;
0472: 18 87 f8 00 00             ; DICTP LEAVE (f887)
0477: 0b a2 03 00 00             ; CALL ?COMPILING (03a2)
047c: 09 86 04 00 00             ; JMPZ 0486
0481: 0b e3 01 00 00             ; CALL RET (01e3)
0486: 0c                         ; RET
;
0487: 18 76 f8 00 00             ; DICTP MEM_SZ (f876)
048c: 0b 7c 00 00 00             ; CALL (MEM_SZ) (007c)
0491: 02                         ; FETCH
0492: 0c                         ; RET
;
0493: 18 63 f8 00 00             ; DICTP TRACE-ON (f863)
0498: 0e 02                      ; CLITERAL 2
049a: 23                         ; LOGLEVEL
049b: 0c                         ; RET
;
049c: 18 4f f8 00 00             ; DICTP TRACE-OFF (f84f)
04a1: 0e 00                      ; CLITERAL 0
04a3: 23                         ; LOGLEVEL
04a4: 0c                         ; RET
;
04a5: 18 3c f8 00 00             ; DICTP DEBUG-ON (f83c)
04aa: 0e 01                      ; CLITERAL 1
04ac: 23                         ; LOGLEVEL
04ad: 0c                         ; RET
;
04ae: 18 28 f8 00 00             ; DICTP DEBUG-OFF (f828)
04b3: 0e 00                      ; CLITERAL 0
04b5: 23                         ; LOGLEVEL
04b6: 0c                         ; RET
;
04b7: 18 1b f8 00 00             ; DICTP R@ (f81b)
04bc: 2b                         ; RFETCH
04bd: 0c                         ; RET
;
04be: 18 0b f8 00 00             ; DICTP RDROP (f80b)
04c3: 22                         ; RTOD
04c4: 05                         ; DROP
04c5: 0c                         ; RET
;
04c6: 18 fc f7 00 00             ; DICTP 2DUP (f7fc)
04cb: 1a                         ; OVER
04cc: 1a                         ; OVER
04cd: 0c                         ; RET
;
04ce: 18 ec f7 00 00             ; DICTP 2DROP (f7ec)
04d3: 05                         ; DROP
04d4: 05                         ; DROP
04d5: 0c                         ; RET
;
04d6: 18 dd f7 00 00             ; DICTP TUCK (f7dd)
04db: 04                         ; SWAP
04dc: 1a                         ; OVER
04dd: 0c                         ; RET
;
04de: 18 cf f7 00 00             ; DICTP NIP (f7cf)
04e3: 04                         ; SWAP
04e4: 05                         ; DROP
04e5: 0c                         ; RET
;
04e6: 18 c1 f7 00 00             ; DICTP ROT (f7c1)
04eb: 21                         ; DTOR
04ec: 04                         ; SWAP
04ed: 22                         ; RTOD
04ee: 04                         ; SWAP
04ef: 0c                         ; RET
;
04f0: 18 b2 f7 00 00             ; DICTP -ROT (f7b2)
04f5: 04                         ; SWAP
04f6: 21                         ; DTOR
04f7: 04                         ; SWAP
04f8: 22                         ; RTOD
04f9: 0c                         ; RET
;
04fa: 18 a6 f7 00 00             ; DICTP / (f7a6)
04ff: 29                         ; RESET
0500: 04                         ; SWAP
0501: 05                         ; DROP
0502: 0c                         ; RET
;
0503: 18 98 f7 00 00             ; DICTP MOD (f798)
0508: 29                         ; RESET
0509: 05                         ; DROP
050a: 0c                         ; RET
;
050b: 18 8b f7 00 00             ; DICTP 1+ (f78b)
0510: 2c                         ; INC
0511: 0c                         ; RET
;
0512: 18 7e f7 00 00             ; DICTP 1- (f77e)
0517: 2e                         ; DEC
0518: 0c                         ; RET
;
0519: 18 71 f7 00 00             ; DICTP 2* (f771)
051e: 0e 02                      ; CLITERAL 2
0520: 13                         ; MUL
0521: 0c                         ; RET
;
0522: 18 64 f7 00 00             ; DICTP 2/ (f764)
0527: 0e 02                      ; CLITERAL 2
0529: 29                         ; RESET
052a: 04                         ; SWAP
052b: 05                         ; DROP
052c: 0c                         ; RET
;
052d: 18 57 f7 00 00             ; DICTP += (f757)
0532: 1a                         ; OVER
0533: 02                         ; FETCH
0534: 11                         ; ADD
0535: 04                         ; SWAP
0536: 03                         ; STORE
0537: 0c                         ; RET
;
0538: 18 4a f7 00 00             ; DICTP -= (f74a)
053d: 1a                         ; OVER
053e: 02                         ; FETCH
053f: 04                         ; SWAP
0540: 12                         ; SUB
0541: 04                         ; SWAP
0542: 03                         ; STORE
0543: 0c                         ; RET
;
0544: 18 3d f7 00 00             ; DICTP +! (f73d)
0549: 04                         ; SWAP
054a: 1a                         ; OVER
054b: 02                         ; FETCH
054c: 11                         ; ADD
054d: 04                         ; SWAP
054e: 03                         ; STORE
054f: 0c                         ; RET
;
0550: 18 30 f7 00 00             ; DICTP -! (f730)
0555: 04                         ; SWAP
0556: 1a                         ; OVER
0557: 02                         ; FETCH
0558: 04                         ; SWAP
0559: 12                         ; SUB
055a: 04                         ; SWAP
055b: 03                         ; STORE
055c: 0c                         ; RET
;
055d: 18 23 f7 00 00             ; DICTP ++ (f723)
0562: 06                         ; DUP
0563: 02                         ; FETCH
0564: 2c                         ; INC
0565: 04                         ; SWAP
0566: 03                         ; STORE
0567: 0c                         ; RET
;
0568: 18 16 f7 00 00             ; DICTP -- (f716)
056d: 06                         ; DUP
056e: 02                         ; FETCH
056f: 2e                         ; DEC
0570: 04                         ; SWAP
0571: 03                         ; STORE
0572: 0c                         ; RET
;
0573: 18 08 f7 00 00             ; DICTP C++ (f708)
0578: 06                         ; DUP
0579: 0f                         ; CFETCH
057a: 2c                         ; INC
057b: 04                         ; SWAP
057c: 10                         ; CSTORE
057d: 0c                         ; RET
;
057e: 18 fa f6 00 00             ; DICTP C-- (f6fa)
0583: 06                         ; DUP
0584: 0f                         ; CFETCH
0585: 2e                         ; DEC
0586: 04                         ; SWAP
0587: 10                         ; CSTORE
0588: 0c                         ; RET
;
0589: 18 ed f6 00 00             ; DICTP 0= (f6ed)
058e: 2a                         ; NOT
058f: 0c                         ; RET
;
0590: 18 e0 f6 00 00             ; DICTP <> (f6e0)
0595: 16                         ; EQ
0596: 2a                         ; NOT
0597: 0c                         ; RET
;
0598: 18 d3 f6 00 00             ; DICTP <= (f6d3)
059d: 17                         ; GT
059e: 2a                         ; NOT
059f: 0c                         ; RET
;
05a0: 18 c6 f6 00 00             ; DICTP >= (f6c6)
05a5: 15                         ; LT
05a6: 2a                         ; NOT
05a7: 0c                         ; RET
;
05a8: 18 b7 f6 00 00             ; DICTP TRUE (f6b7)
05ad: 01 ff ff ff ff             ; LITERAL -1 (ffffffff)
05b2: 0c                         ; RET
;
05b3: 18 a7 f6 00 00             ; DICTP FALSE (f6a7)
05b8: 0e 00                      ; CLITERAL 0
05ba: 0c                         ; RET
;
05bb: 18 97 f6 00 00             ; DICTP COUNT (f697)
05c0: 06                         ; DUP
05c1: 2c                         ; INC
05c2: 04                         ; SWAP
05c3: 0f                         ; CFETCH
05c4: 0c                         ; RET
;
05c5: 18 88 f6 00 00             ; DICTP TYPE (f688)
05ca: 06                         ; DUP
05cb: 2a                         ; NOT
05cc: 09 d4 05 00 00             ; JMPZ 05d4
05d1: 05                         ; DROP
05d2: 05                         ; DROP
05d3: 0c                         ; RET
05d4: 04                         ; SWAP
05d5: 06                         ; DUP
05d6: 0f                         ; CFETCH
05d7: 19                         ; EMIT
05d8: 2c                         ; INC
05d9: 04                         ; SWAP
05da: 2e                         ; DEC
05db: 08 ca 05 00 00             ; JMP 05ca
05e0: 0c                         ; RET
;
05e1: 18 7b f6 00 00             ; DICTP CT (f67b)
05e6: 0b bb 05 00 00             ; CALL COUNT (05bb)
05eb: 0b c5 05 00 00             ; CALL TYPE (05c5)
05f0: 0c                         ; RET
;
05f1: 18 6f f6 00 00             ; DICTP \ (f66f)
05f6: 0e 00                      ; CLITERAL 0
05f8: 0b 8b 00 00 00             ; CALL >IN (008b)
05fd: 02                         ; FETCH
05fe: 10                         ; CSTORE
05ff: 0c                         ; RET
;
0600: 18 63 f6 00 00             ; DICTP ( (f663)
0605: 0b 8b 00 00 00             ; CALL >IN (008b)
060a: 02                         ; FETCH
060b: 0f                         ; CFETCH
060c: 06                         ; DUP
060d: 2a                         ; NOT
060e: 09 2f 06 00 00             ; JMPZ 062f
0613: 07 13 6d 69 73 73 69 6e 67 20 63 6c 6f 73 69 6e 67 20 27 29 27 00 ; SLITERAL (0614) [missing closing ')']
0629: 0b e1 05 00 00             ; CALL CT (05e1)
062e: fe                         ; RESET
062f: 0b 8b 00 00 00             ; CALL >IN (008b)
0634: 06                         ; DUP
0635: 02                         ; FETCH
0636: 2c                         ; INC
0637: 04                         ; SWAP
0638: 03                         ; STORE
0639: 0e 29                      ; CLITERAL 41
063b: 16                         ; EQ
063c: 09 42 06 00 00             ; JMPZ 0642
0641: 0c                         ; RET
0642: 08 05 06 00 00             ; JMP 0605
0647: 0c                         ; RET
;
0648: 18 56 f6 00 00             ; DICTP BL (f656)
064d: 0e 20                      ; CLITERAL 32
064f: 19                         ; EMIT
0650: 0c                         ; RET
;
0651: 18 47 f6 00 00             ; DICTP CRLF (f647)
0656: 0e 0d                      ; CLITERAL 13
0658: 19                         ; EMIT
0659: 0e 0a                      ; CLITERAL 10
065b: 19                         ; EMIT
065c: 0c                         ; RET
;
065d: 18 3a f6 00 00             ; DICTP CR (f63a)
0662: 0e 0d                      ; CLITERAL 13
0664: 19                         ; EMIT
0665: 0e 0a                      ; CLITERAL 10
0667: 19                         ; EMIT
0668: 0c                         ; RET
;
0669: 18 28 f6 00 00             ; DICTP BETWEEN (f628)
066e: 0e 02                      ; CLITERAL 2
0670: 25                         ; PICK
0671: 15                         ; LT
0672: 09 7c 06 00 00             ; JMPZ 067c
0677: 05                         ; DROP
0678: 05                         ; DROP
0679: 0e 00                      ; CLITERAL 0
067b: 0c                         ; RET
067c: 15                         ; LT
067d: 2a                         ; NOT
067e: 0c                         ; RET
;
067f: 18 15 f6 00 00             ; DICTP tmp-init (f615)
0684: 0b 18 01 00 00             ; CALL LAST (0118)
0689: 0b 9a 00 00 00             ; CALL (tmp) (009a)
068e: 03                         ; STORE
068f: 0c                         ; RET
;
0690: 18 03 f6 00 00             ; DICTP tmp-cur (f603)
0695: 0b 9a 00 00 00             ; CALL (tmp) (009a)
069a: 02                         ; FETCH
069b: 0c                         ; RET
;
069c: 18 ef f5 00 00             ; DICTP tmp-alloc (f5ef)
06a1: 0b 9a 00 00 00             ; CALL (tmp) (009a)
06a6: 04                         ; SWAP
06a7: 1a                         ; OVER
06a8: 02                         ; FETCH
06a9: 04                         ; SWAP
06aa: 12                         ; SUB
06ab: 04                         ; SWAP
06ac: 03                         ; STORE
06ad: 0b 90 06 00 00             ; CALL tmp-cur (0690)
06b2: 0c                         ; RET
;
06b3: 18 e1 f5 00 00             ; DICTP PAD (f5e1)
06b8: 0b 7f 06 00 00             ; CALL tmp-init (067f)
06bd: 0e c8                      ; CLITERAL 200
06bf: 0b 9c 06 00 00             ; CALL tmp-alloc (069c)
06c4: 0c                         ; RET
;
06c5: 18 ce f5 00 00             ; DICTP getInput (f5ce)
06ca: 0b b3 06 00 00             ; CALL PAD (06b3)
06cf: 0e 80                      ; CLITERAL 128
06d1: 0e 00                      ; CLITERAL 0
06d3: 1e                         ; FREADLINE
06d4: 05                         ; DROP
06d5: 0b b3 06 00 00             ; CALL PAD (06b3)
06da: 0c                         ; RET
;
06db: 18 bd f5 00 00             ; DICTP skipWS (f5bd)
06e0: 06                         ; DUP
06e1: 0f                         ; CFETCH
06e2: 06                         ; DUP
06e3: 09 fc 06 00 00             ; JMPZ 06fc
06e8: 0e 20                      ; CLITERAL 32
06ea: 17                         ; GT
06eb: 09 f6 06 00 00             ; JMPZ 06f6
06f0: 0c                         ; RET
06f1: 08 f7 06 00 00             ; JMP 06f7
06f6: 2c                         ; INC
06f7: 08 fe 06 00 00             ; JMP 06fe
06fc: 05                         ; DROP
06fd: 0c                         ; RET
06fe: 08 e0 06 00 00             ; JMP 06e0
0703: 0c                         ; RET
;
0704: 18 a8 f5 00 00             ; DICTP getOneWord (f5a8)
0709: 06                         ; DUP
070a: 21                         ; DTOR
070b: 21                         ; DTOR
070c: 2b                         ; RFETCH
070d: 0f                         ; CFETCH
070e: 0e 20                      ; CLITERAL 32
0710: 17                         ; GT
0711: 09 1e 07 00 00             ; JMPZ 071e
0716: 22                         ; RTOD
0717: 2c                         ; INC
0718: 21                         ; DTOR
0719: 08 30 07 00 00             ; JMP 0730
071e: 2b                         ; RFETCH
071f: 0f                         ; CFETCH
0720: 09 2c 07 00 00             ; JMPZ 072c
0725: 0e 00                      ; CLITERAL 0
0727: 2b                         ; RFETCH
0728: 10                         ; CSTORE
0729: 22                         ; RTOD
072a: 2c                         ; INC
072b: 21                         ; DTOR
072c: 22                         ; RTOD
072d: 22                         ; RTOD
072e: 04                         ; SWAP
072f: 0c                         ; RET
0730: 08 0c 07 00 00             ; JMP 070c
0735: 0c                         ; RET
;
0736: 18 94 f5 00 00             ; DICTP DICT>NEXT (f594)
073b: 0c                         ; RET
;
073c: 18 82 f5 00 00             ; DICTP DICT>XT (f582)
0741: 0e 04                      ; CLITERAL 4
0743: 11                         ; ADD
0744: 0c                         ; RET
;
0745: 18 6d f5 00 00             ; DICTP DICT>FLAGS (f56d)
074a: 0e 02                      ; CLITERAL 2
074c: 0e 04                      ; CLITERAL 4
074e: 13                         ; MUL
074f: 11                         ; ADD
0750: 0c                         ; RET
;
0751: 18 59 f5 00 00             ; DICTP DICT>NAME (f559)
0756: 0b 45 07 00 00             ; CALL DICT>FLAGS (0745)
075b: 2c                         ; INC
075c: 0c                         ; RET
;
075d: 18 45 f5 00 00             ; DICTP NEXT>DICT (f545)
0762: 0c                         ; RET
;
0763: 18 33 f5 00 00             ; DICTP XT>DICT (f533)
0768: 0e 04                      ; CLITERAL 4
076a: 12                         ; SUB
076b: 0c                         ; RET
;
076c: 18 1e f5 00 00             ; DICTP FLAGS>DICT (f51e)
0771: 0e 02                      ; CLITERAL 2
0773: 0e 04                      ; CLITERAL 4
0775: 13                         ; MUL
0776: 12                         ; SUB
0777: 0c                         ; RET
;
0778: 18 0a f5 00 00             ; DICTP NAME>DICT (f50a)
077d: 2e                         ; DEC
077e: 0e 02                      ; CLITERAL 2
0780: 0e 04                      ; CLITERAL 4
0782: 13                         ; MUL
0783: 12                         ; SUB
0784: 0c                         ; RET
;
0785: 18 f5 f4 00 00             ; DICTP DICT.GetXT (f4f5)
078a: 0b 3c 07 00 00             ; CALL DICT>XT (073c)
078f: 02                         ; FETCH
0790: 0c                         ; RET
;
0791: 18 dd f4 00 00             ; DICTP DICT.GetFLAGS (f4dd)
0796: 0b 45 07 00 00             ; CALL DICT>FLAGS (0745)
079b: 0f                         ; CFETCH
079c: 0c                         ; RET
;
079d: 18 c8 f4 00 00             ; DICTP DICTP>NAME (f4c8)
07a2: 2c                         ; INC
07a3: 02                         ; FETCH
07a4: 0b 51 07 00 00             ; CALL DICT>NAME (0751)
07a9: 0c                         ; RET
;
07aa: 18 b2 f4 00 00             ; DICTP XT.GetDICTP (f4b2)
07af: 06                         ; DUP
07b0: 0f                         ; CFETCH
07b1: 0e 18                      ; CLITERAL 24
07b3: 16                         ; EQ
07b4: 09 c0 07 00 00             ; JMPZ 07c0
07b9: 2c                         ; INC
07ba: 02                         ; FETCH
07bb: 08 c2 07 00 00             ; JMP 07c2
07c0: 05                         ; DROP
07c1: fe                         ; RESET
07c2: 0c                         ; RET
;
07c3: 18 95 f4 00 00             ; DICTP FLAGS.ISIMMEDIATE? (f495)
07c8: 0e 01                      ; CLITERAL 1
07ca: 24                         ; AND
07cb: 0c                         ; RET
;
07cc: 18 7b f4 00 00             ; DICTP FLAGS.ISINLINE? (f47b)
07d1: 0e 02                      ; CLITERAL 2
07d3: 24                         ; AND
07d4: 0c                         ; RET
;
07d5: 18 5f f4 00 00             ; DICTP DICT.GetIMMEDIATE (f45f)
07da: 0b 91 07 00 00             ; CALL DICT.GetFLAGS (0791)
07df: 0b c3 07 00 00             ; CALL FLAGS.ISIMMEDIATE? (07c3)
07e4: 0c                         ; RET
;
07e5: 18 46 f4 00 00             ; DICTP DICT.GetINLINE (f446)
07ea: 0b 91 07 00 00             ; CALL DICT.GetFLAGS (0791)
07ef: 0b cc 07 00 00             ; CALL FLAGS.ISINLINE? (07cc)
07f4: 0c                         ; RET
;
07f5: 18 31 f4 00 00             ; DICTP findInDict (f431)
07fa: 0b 18 01 00 00             ; CALL LAST (0118)
07ff: 21                         ; DTOR
0800: 2b                         ; RFETCH
0801: 06                         ; DUP
0802: 09 29 08 00 00             ; JMPZ 0829
0807: 0b 51 07 00 00             ; CALL DICT>NAME (0751)
080c: 2c                         ; INC
080d: 1a                         ; OVER
080e: 28                         ; COMPAREI
080f: 09 24 08 00 00             ; JMPZ 0824
0814: 05                         ; DROP
0815: 2b                         ; RFETCH
0816: 0b 85 07 00 00             ; CALL DICT.GetXT (0785)
081b: 22                         ; RTOD
081c: 0b 91 07 00 00             ; CALL DICT.GetFLAGS (0791)
0821: 0e 01                      ; CLITERAL 1
0823: 0c                         ; RET
0824: 08 31 08 00 00             ; JMP 0831
0829: 05                         ; DROP
082a: 05                         ; DROP
082b: 22                         ; RTOD
082c: 0e 00                      ; CLITERAL 0
082e: 0e 00                      ; CLITERAL 0
0830: 0c                         ; RET
0831: 22                         ; RTOD
0832: 02                         ; FETCH
0833: 21                         ; DTOR
0834: 08 00 08 00 00             ; JMP 0800
0839: 0c                         ; RET
;
083a: 18 20 f4 00 00             ; DICTP isHEX? (f420)
083f: 0b 5e 00 00 00             ; CALL BASE (005e)
0844: 02                         ; FETCH
0845: 0e 10                      ; CLITERAL 16
0847: 16                         ; EQ
0848: 0c                         ; RET
;
0849: 18 0b f4 00 00             ; DICTP isNumChar? (f40b)
084e: 06                         ; DUP
084f: 0e 30                      ; CLITERAL 48
0851: 0e 39                      ; CLITERAL 57
0853: 0b 69 06 00 00             ; CALL BETWEEN (0669)
0858: 09 63 08 00 00             ; JMPZ 0863
085d: 0e 30                      ; CLITERAL 48
085f: 12                         ; SUB
0860: 0e 01                      ; CLITERAL 1
0862: 0c                         ; RET
0863: 0b 3a 08 00 00             ; CALL isHEX? (083a)
0868: 09 97 08 00 00             ; JMPZ 0897
086d: 06                         ; DUP
086e: 0e 41                      ; CLITERAL 65
0870: 0e 46                      ; CLITERAL 70
0872: 0b 69 06 00 00             ; CALL BETWEEN (0669)
0877: 09 82 08 00 00             ; JMPZ 0882
087c: 0e 37                      ; CLITERAL 55
087e: 12                         ; SUB
087f: 0e 01                      ; CLITERAL 1
0881: 0c                         ; RET
0882: 06                         ; DUP
0883: 0e 61                      ; CLITERAL 97
0885: 0e 66                      ; CLITERAL 102
0887: 0b 69 06 00 00             ; CALL BETWEEN (0669)
088c: 09 97 08 00 00             ; JMPZ 0897
0891: 0e 57                      ; CLITERAL 87
0893: 12                         ; SUB
0894: 0e 01                      ; CLITERAL 1
0896: 0c                         ; RET
0897: 0e 00                      ; CLITERAL 0
0899: 0c                         ; RET
;
089a: 18 fa f3 00 00             ; DICTP NEGATE (f3fa)
089f: 0e 00                      ; CLITERAL 0
08a1: 04                         ; SWAP
08a2: 12                         ; SUB
08a3: 0c                         ; RET
;
08a4: 18 ec f3 00 00             ; DICTP ABS (f3ec)
08a9: 06                         ; DUP
08aa: 0e 00                      ; CLITERAL 0
08ac: 15                         ; LT
08ad: 09 b7 08 00 00             ; JMPZ 08b7
08b2: 0b 9a 08 00 00             ; CALL NEGATE (089a)
08b7: 0c                         ; RET
;
08b8: 18 d8 f3 00 00             ; DICTP isNumber? (f3d8)
08bd: 06                         ; DUP
08be: 0f                         ; CFETCH
08bf: 0e 2d                      ; CLITERAL 45
08c1: 16                         ; EQ
08c2: 06                         ; DUP
08c3: 0b a9 00 00 00             ; CALL #NEG (00a9)
08c8: 03                         ; STORE
08c9: 09 cf 08 00 00             ; JMPZ 08cf
08ce: 2c                         ; INC
08cf: 0e 00                      ; CLITERAL 0
08d1: 21                         ; DTOR
08d2: 06                         ; DUP
08d3: 0f                         ; CFETCH
08d4: 06                         ; DUP
08d5: 0e 00                      ; CLITERAL 0
08d7: 16                         ; EQ
08d8: 09 f3 08 00 00             ; JMPZ 08f3
08dd: 05                         ; DROP
08de: 05                         ; DROP
08df: 22                         ; RTOD
08e0: 0b a9 00 00 00             ; CALL #NEG (00a9)
08e5: 02                         ; FETCH
08e6: 09 f0 08 00 00             ; JMPZ 08f0
08eb: 0b 9a 08 00 00             ; CALL NEGATE (089a)
08f0: 0e 01                      ; CLITERAL 1
08f2: 0c                         ; RET
08f3: 0b 49 08 00 00             ; CALL isNumChar? (0849)
08f8: 09 0d 09 00 00             ; JMPZ 090d
08fd: 22                         ; RTOD
08fe: 0b 5e 00 00 00             ; CALL BASE (005e)
0903: 02                         ; FETCH
0904: 13                         ; MUL
0905: 11                         ; ADD
0906: 21                         ; DTOR
0907: 2c                         ; INC
0908: 08 12 09 00 00             ; JMP 0912
090d: 05                         ; DROP
090e: 22                         ; RTOD
090f: 0e 00                      ; CLITERAL 0
0911: 0c                         ; RET
0912: 08 d2 08 00 00             ; JMP 08d2
0917: 0c                         ; RET
;
0918: 18 c8 f3 00 00             ; DICTP SPACE (f3c8)
091d: 0e 20                      ; CLITERAL 32
091f: 19                         ; EMIT
0920: 0c                         ; RET
;
0921: 18 bb f3 00 00             ; DICTP <# (f3bb)
0926: 0b a9 00 00 00             ; CALL #NEG (00a9)
092b: 0b 98 03 00 00             ; CALL OFF (0398)
0930: 0b b8 00 00 00             ; CALL #LEN (00b8)
0935: 0b 98 03 00 00             ; CALL OFF (0398)
093a: 06                         ; DUP
093b: 0e 00                      ; CLITERAL 0
093d: 15                         ; LT
093e: 09 52 09 00 00             ; JMPZ 0952
0943: 0b 9a 08 00 00             ; CALL NEGATE (089a)
0948: 0b a9 00 00 00             ; CALL #NEG (00a9)
094d: 0b 8e 03 00 00             ; CALL ON (038e)
0952: 0e 00                      ; CLITERAL 0
0954: 04                         ; SWAP
0955: 0c                         ; RET
;
0956: 18 af f3 00 00             ; DICTP # (f3af)
095b: 0b 5e 00 00 00             ; CALL BASE (005e)
0960: 02                         ; FETCH
0961: 29                         ; RESET
0962: 04                         ; SWAP
0963: 0e 30                      ; CLITERAL 48
0965: 11                         ; ADD
0966: 06                         ; DUP
0967: 0e 39                      ; CLITERAL 57
0969: 17                         ; GT
096a: 09 72 09 00 00             ; JMPZ 0972
096f: 0e 07                      ; CLITERAL 7
0971: 11                         ; ADD
0972: 0b b8 00 00 00             ; CALL #LEN (00b8)
0977: 06                         ; DUP
0978: 02                         ; FETCH
0979: 2c                         ; INC
097a: 04                         ; SWAP
097b: 03                         ; STORE
097c: 04                         ; SWAP
097d: 0c                         ; RET
;
097e: 18 a2 f3 00 00             ; DICTP #S (f3a2)
0983: 0b 56 09 00 00             ; CALL # (0956)
0988: 06                         ; DUP
0989: 2a                         ; NOT
098a: 09 83 09 00 00             ; JMPZ 0983
098f: 0c                         ; RET
;
0990: 18 95 f3 00 00             ; DICTP #> (f395)
0995: 0c                         ; RET
;
0996: 18 87 f3 00 00             ; DICTP #P- (f387)
099b: 05                         ; DROP
099c: 0b a9 00 00 00             ; CALL #NEG (00a9)
09a1: 02                         ; FETCH
09a2: 09 aa 09 00 00             ; JMPZ 09aa
09a7: 0e 2d                      ; CLITERAL 45
09a9: 19                         ; EMIT
09aa: 0c                         ; RET
;
09ab: 18 7a f3 00 00             ; DICTP #P (f37a)
09b0: 0b 96 09 00 00             ; CALL #P- (0996)
09b5: 19                         ; EMIT
09b6: 06                         ; DUP
09b7: 2a                         ; NOT
09b8: 09 b5 09 00 00             ; JMPZ 09b5
09bd: 05                         ; DROP
09be: 0c                         ; RET
;
09bf: 18 6c f3 00 00             ; DICTP (.) (f36c)
09c4: 0b 21 09 00 00             ; CALL <# (0921)
09c9: 0b 7e 09 00 00             ; CALL #S (097e)
09ce: 0b 90 09 00 00             ; CALL #> (0990)
09d3: 0b ab 09 00 00             ; CALL #P (09ab)
09d8: 0c                         ; RET
;
09d9: 18 60 f3 00 00             ; DICTP . (f360)
09de: 0b bf 09 00 00             ; CALL (.) (09bf)
09e3: 0b 18 09 00 00             ; CALL SPACE (0918)
09e8: 0c                         ; RET
;
09e9: 18 53 f3 00 00             ; DICTP .2 (f353)
09ee: 0b 21 09 00 00             ; CALL <# (0921)
09f3: 0b 56 09 00 00             ; CALL # (0956)
09f8: 0b 56 09 00 00             ; CALL # (0956)
09fd: 0b 90 09 00 00             ; CALL #> (0990)
0a02: 0b ab 09 00 00             ; CALL #P (09ab)
0a07: 0c                         ; RET
;
0a08: 18 46 f3 00 00             ; DICTP .3 (f346)
0a0d: 0b 21 09 00 00             ; CALL <# (0921)
0a12: 0b 56 09 00 00             ; CALL # (0956)
0a17: 0b 56 09 00 00             ; CALL # (0956)
0a1c: 0b 56 09 00 00             ; CALL # (0956)
0a21: 0b 90 09 00 00             ; CALL #> (0990)
0a26: 0b ab 09 00 00             ; CALL #P (09ab)
0a2b: 0c                         ; RET
;
0a2c: 18 39 f3 00 00             ; DICTP .4 (f339)
0a31: 0b 21 09 00 00             ; CALL <# (0921)
0a36: 0b 56 09 00 00             ; CALL # (0956)
0a3b: 0b 56 09 00 00             ; CALL # (0956)
0a40: 0b 56 09 00 00             ; CALL # (0956)
0a45: 0b 56 09 00 00             ; CALL # (0956)
0a4a: 0b 90 09 00 00             ; CALL #> (0990)
0a4f: 0b ab 09 00 00             ; CALL #P (09ab)
0a54: 0c                         ; RET
;
0a55: 18 2a f3 00 00             ; DICTP HEX. (f32a)
0a5a: 0b 5e 00 00 00             ; CALL BASE (005e)
0a5f: 02                         ; FETCH
0a60: 04                         ; SWAP
0a61: 0b 56 03 00 00             ; CALL HEX (0356)
0a66: 0b bf 09 00 00             ; CALL (.) (09bf)
0a6b: 0b 5e 00 00 00             ; CALL BASE (005e)
0a70: 03                         ; STORE
0a71: 0c                         ; RET
;
0a72: 18 1a f3 00 00             ; DICTP HEX.2 (f31a)
0a77: 0b 5e 00 00 00             ; CALL BASE (005e)
0a7c: 02                         ; FETCH
0a7d: 04                         ; SWAP
0a7e: 0b 56 03 00 00             ; CALL HEX (0356)
0a83: 0b e9 09 00 00             ; CALL .2 (09e9)
0a88: 0b 5e 00 00 00             ; CALL BASE (005e)
0a8d: 03                         ; STORE
0a8e: 0c                         ; RET
;
0a8f: 18 0a f3 00 00             ; DICTP HEX.4 (f30a)
0a94: 0b 5e 00 00 00             ; CALL BASE (005e)
0a99: 02                         ; FETCH
0a9a: 04                         ; SWAP
0a9b: 0b 56 03 00 00             ; CALL HEX (0356)
0aa0: 0b 2c 0a 00 00             ; CALL .4 (0a2c)
0aa5: 0b 5e 00 00 00             ; CALL BASE (005e)
0aaa: 03                         ; STORE
0aab: 0c                         ; RET
;
0aac: 18 f7 f2 00 00             ; DICTP DECIMAL. (f2f7)
0ab1: 0b 5e 00 00 00             ; CALL BASE (005e)
0ab6: 02                         ; FETCH
0ab7: 04                         ; SWAP
0ab8: 0b 64 03 00 00             ; CALL DECIMAL (0364)
0abd: 0b bf 09 00 00             ; CALL (.) (09bf)
0ac2: 0b 5e 00 00 00             ; CALL BASE (005e)
0ac7: 03                         ; STORE
0ac8: 0c                         ; RET
;
0ac9: 18 e3 f2 00 00             ; DICTP DECIMAL.3 (f2e3)
0ace: 0b 5e 00 00 00             ; CALL BASE (005e)
0ad3: 02                         ; FETCH
0ad4: 04                         ; SWAP
0ad5: 0b 64 03 00 00             ; CALL DECIMAL (0364)
0ada: 0b 08 0a 00 00             ; CALL .3 (0a08)
0adf: 0b 5e 00 00 00             ; CALL BASE (005e)
0ae4: 03                         ; STORE
0ae5: 0c                         ; RET
;
0ae6: 18 d1 f2 00 00             ; DICTP BINARY. (f2d1)
0aeb: 0b 5e 00 00 00             ; CALL BASE (005e)
0af0: 02                         ; FETCH
0af1: 04                         ; SWAP
0af2: 0b 80 03 00 00             ; CALL BINARY (0380)
0af7: 0b bf 09 00 00             ; CALL (.) (09bf)
0afc: 0b 5e 00 00 00             ; CALL BASE (005e)
0b01: 03                         ; STORE
0b02: 0c                         ; RET
;
0b03: 18 c3 f2 00 00             ; DICTP MIN (f2c3)
0b08: 1a                         ; OVER
0b09: 1a                         ; OVER
0b0a: 17                         ; GT
0b0b: 09 11 0b 00 00             ; JMPZ 0b11
0b10: 04                         ; SWAP
0b11: 05                         ; DROP
0b12: 0c                         ; RET
;
0b13: 18 b5 f2 00 00             ; DICTP MAX (f2b5)
0b18: 1a                         ; OVER
0b19: 1a                         ; OVER
0b1a: 15                         ; LT
0b1b: 09 21 0b 00 00             ; JMPZ 0b21
0b20: 04                         ; SWAP
0b21: 05                         ; DROP
0b22: 0c                         ; RET
;
0b23: 18 a8 f2 00 00             ; DICTP .S (f2a8)
0b28: 0e 20                      ; CLITERAL 32
0b2a: 19                         ; EMIT
0b2b: 26                         ; DEPTH
0b2c: 0e 00                      ; CLITERAL 0
0b2e: 15                         ; LT
0b2f: 09 52 0b 00 00             ; JMPZ 0b52
0b34: 07 10 53 74 61 63 6b 20 75 6e 64 65 72 66 6c 6f 77 21 00 ; SLITERAL (0b35) [Stack underflow!]
0b47: 0b bb 05 00 00             ; CALL COUNT (05bb)
0b4c: 0b c5 05 00 00             ; CALL TYPE (05c5)
0b51: fe                         ; RESET
0b52: 26                         ; DEPTH
0b53: 0e 00                      ; CLITERAL 0
0b55: 16                         ; EQ
0b56: 09 65 0b 00 00             ; JMPZ 0b65
0b5b: 0e 28                      ; CLITERAL 40
0b5d: 19                         ; EMIT
0b5e: 0e ed                      ; CLITERAL 237
0b60: 19                         ; EMIT
0b61: 0e 29                      ; CLITERAL 41
0b63: 19                         ; EMIT
0b64: 0c                         ; RET
0b65: 0e 28                      ; CLITERAL 40
0b67: 19                         ; EMIT
0b68: 0b 18 09 00 00             ; CALL SPACE (0918)
0b6d: 26                         ; DEPTH
0b6e: 2e                         ; DEC
0b6f: 21                         ; DTOR
0b70: 2b                         ; RFETCH
0b71: 25                         ; PICK
0b72: 0b d9 09 00 00             ; CALL . (09d9)
0b77: 2b                         ; RFETCH
0b78: 09 85 0b 00 00             ; JMPZ 0b85
0b7d: 22                         ; RTOD
0b7e: 2e                         ; DEC
0b7f: 21                         ; DTOR
0b80: 08 8b 0b 00 00             ; JMP 0b8b
0b85: 22                         ; RTOD
0b86: 05                         ; DROP
0b87: 0e 29                      ; CLITERAL 41
0b89: 19                         ; EMIT
0b8a: 0c                         ; RET
0b8b: 08 70 0b 00 00             ; JMP 0b70
0b90: 0c                         ; RET
;
0b91: 18 94 f2 00 00             ; DICTP .(MEM_SZ) (f294)
0b96: 07 08 4d 65 6d 6f 72 79 3a 20 00 ; SLITERAL (0b97) [Memory: ]
0ba1: 0b e1 05 00 00             ; CALL CT (05e1)
0ba6: 0b 87 04 00 00             ; CALL MEM_SZ (0487)
0bab: 06                         ; DUP
0bac: 0b 55 0a 00 00             ; CALL HEX. (0a55)
0bb1: 07 02 20 28 00             ; SLITERAL (0bb2) [ (]
0bb6: 0b e1 05 00 00             ; CALL CT (05e1)
0bbb: 0b bf 09 00 00             ; CALL (.) (09bf)
0bc0: 07 01 29 00                ; SLITERAL (0bc1) [)]
0bc4: 0b e1 05 00 00             ; CALL CT (05e1)
0bc9: 0c                         ; RET
;
0bca: 18 82 f2 00 00             ; DICTP .(HERE) (f282)
0bcf: 07 06 48 45 52 45 3a 20 00 ; SLITERAL (0bd0) [HERE: ]
0bd8: 0b e1 05 00 00             ; CALL CT (05e1)
0bdd: 0b 0c 01 00 00             ; CALL HERE (010c)
0be2: 06                         ; DUP
0be3: 0b 55 0a 00 00             ; CALL HEX. (0a55)
0be8: 07 02 20 28 00             ; SLITERAL (0be9) [ (]
0bed: 0b e1 05 00 00             ; CALL CT (05e1)
0bf2: 0b bf 09 00 00             ; CALL (.) (09bf)
0bf7: 07 01 29 00                ; SLITERAL (0bf8) [)]
0bfb: 0b e1 05 00 00             ; CALL CT (05e1)
0c00: 0c                         ; RET
;
0c01: 18 70 f2 00 00             ; DICTP .(LAST) (f270)
0c06: 07 06 4c 41 53 54 3a 20 00 ; SLITERAL (0c07) [LAST: ]
0c0f: 0b e1 05 00 00             ; CALL CT (05e1)
0c14: 0b 18 01 00 00             ; CALL LAST (0118)
0c19: 06                         ; DUP
0c1a: 0b 55 0a 00 00             ; CALL HEX. (0a55)
0c1f: 07 02 20 28 00             ; SLITERAL (0c20) [ (]
0c24: 0b e1 05 00 00             ; CALL CT (05e1)
0c29: 0b bf 09 00 00             ; CALL (.) (09bf)
0c2e: 07 01 29 00                ; SLITERAL (0c2f) [)]
0c32: 0b e1 05 00 00             ; CALL CT (05e1)
0c37: 0c                         ; RET
;
0c38: 18 5a f2 00 00             ; DICTP .WORD-SHORT (f25a)
0c3d: 06                         ; DUP
0c3e: 0b 51 07 00 00             ; CALL DICT>NAME (0751)
0c43: 0b e1 05 00 00             ; CALL CT (05e1)
0c48: 0e 20                      ; CLITERAL 32
0c4a: 19                         ; EMIT
0c4b: 02                         ; FETCH
0c4c: 0c                         ; RET
;
0c4d: 18 4a f2 00 00             ; DICTP WORDS (f24a)
0c52: 0b 18 01 00 00             ; CALL LAST (0118)
0c57: 06                         ; DUP
0c58: 02                         ; FETCH
0c59: 2a                         ; NOT
0c5a: 09 67 0c 00 00             ; JMPZ 0c67
0c5f: 05                         ; DROP
0c60: 0e 0d                      ; CLITERAL 13
0c62: 19                         ; EMIT
0c63: 0e 0a                      ; CLITERAL 10
0c65: 19                         ; EMIT
0c66: 0c                         ; RET
0c67: 0b 38 0c 00 00             ; CALL .WORD-SHORT (0c38)
0c6c: 08 57 0c 00 00             ; JMP 0c57
0c71: 0c                         ; RET
;
0c72: 18 35 f2 00 00             ; DICTP .WORD-LONG (f235)
0c77: 06                         ; DUP
0c78: 0b 55 0a 00 00             ; CALL HEX. (0a55)
0c7d: 0e 3a                      ; CLITERAL 58
0c7f: 19                         ; EMIT
0c80: 0e 20                      ; CLITERAL 32
0c82: 19                         ; EMIT
0c83: 06                         ; DUP
0c84: 0b 51 07 00 00             ; CALL DICT>NAME (0751)
0c89: 0b e1 05 00 00             ; CALL CT (05e1)
0c8e: 0e 20                      ; CLITERAL 32
0c90: 19                         ; EMIT
0c91: 06                         ; DUP
0c92: 0b 85 07 00 00             ; CALL DICT.GetXT (0785)
0c97: 0e 28                      ; CLITERAL 40
0c99: 19                         ; EMIT
0c9a: 0b 8f 0a 00 00             ; CALL HEX.4 (0a8f)
0c9f: 0e 29                      ; CLITERAL 41
0ca1: 19                         ; EMIT
0ca2: 06                         ; DUP
0ca3: 0b 45 07 00 00             ; CALL DICT>FLAGS (0745)
0ca8: 0f                         ; CFETCH
0ca9: 06                         ; DUP
0caa: 07 09 2c 20 46 6c 61 67 73 3a 20 00 ; SLITERAL (0cab) [, Flags: ]
0cb6: 0b e1 05 00 00             ; CALL CT (05e1)
0cbb: 0b 72 0a 00 00             ; CALL HEX.2 (0a72)
0cc0: 06                         ; DUP
0cc1: 0b cc 07 00 00             ; CALL FLAGS.ISINLINE? (07cc)
0cc6: 09 dc 0c 00 00             ; JMPZ 0cdc
0ccb: 07 09 20 28 49 4e 4c 49 4e 45 29 00 ; SLITERAL (0ccc) [ (INLINE)]
0cd7: 0b e1 05 00 00             ; CALL CT (05e1)
0cdc: 0b c3 07 00 00             ; CALL FLAGS.ISIMMEDIATE? (07c3)
0ce1: 09 fa 0c 00 00             ; JMPZ 0cfa
0ce6: 07 0c 20 28 49 4d 4d 45 44 49 41 54 45 29 00 ; SLITERAL (0ce7) [ (IMMEDIATE)]
0cf5: 0b e1 05 00 00             ; CALL CT (05e1)
0cfa: 0e 0d                      ; CLITERAL 13
0cfc: 19                         ; EMIT
0cfd: 0e 0a                      ; CLITERAL 10
0cff: 19                         ; EMIT
0d00: 02                         ; FETCH
0d01: 0c                         ; RET
;
0d02: 18 24 f2 00 00             ; DICTP WORDSV (f224)
0d07: 0b 01 0c 00 00             ; CALL .(LAST) (0c01)
0d0c: 0e 0d                      ; CLITERAL 13
0d0e: 19                         ; EMIT
0d0f: 0e 0a                      ; CLITERAL 10
0d11: 19                         ; EMIT
0d12: 0b 18 01 00 00             ; CALL LAST (0118)
0d17: 06                         ; DUP
0d18: 02                         ; FETCH
0d19: 2a                         ; NOT
0d1a: 09 27 0d 00 00             ; JMPZ 0d27
0d1f: 05                         ; DROP
0d20: 0e 0d                      ; CLITERAL 13
0d22: 19                         ; EMIT
0d23: 0e 0a                      ; CLITERAL 10
0d25: 19                         ; EMIT
0d26: 0c                         ; RET
0d27: 0b 72 0c 00 00             ; CALL .WORD-LONG (0c72)
0d2c: 08 17 0d 00 00             ; JMP 0d17
0d31: 0c                         ; RET
;
0d32: 18 10 f2 00 00             ; DICTP NUM-WORDS (f210)
0d37: 0e 00                      ; CLITERAL 0
0d39: 21                         ; DTOR
0d3a: 0b 18 01 00 00             ; CALL LAST (0118)
0d3f: 06                         ; DUP
0d40: 02                         ; FETCH
0d41: 2a                         ; NOT
0d42: 09 50 0d 00 00             ; JMPZ 0d50
0d47: 05                         ; DROP
0d48: 22                         ; RTOD
0d49: 0e 0d                      ; CLITERAL 13
0d4b: 19                         ; EMIT
0d4c: 0e 0a                      ; CLITERAL 10
0d4e: 19                         ; EMIT
0d4f: 0c                         ; RET
0d50: 22                         ; RTOD
0d51: 2c                         ; INC
0d52: 21                         ; DTOR
0d53: 02                         ; FETCH
0d54: 08 3f 0d 00 00             ; JMP 0d3f
0d59: 0c                         ; RET
;
0d5a: 18 ff f1 00 00             ; DICTP .lastx (f1ff)
0d5f: 0e 0d                      ; CLITERAL 13
0d61: 19                         ; EMIT
0d62: 0e 0a                      ; CLITERAL 10
0d64: 19                         ; EMIT
0d65: 0b 18 01 00 00             ; CALL LAST (0118)
0d6a: 04                         ; SWAP
0d6b: 04                         ; SWAP
0d6c: 0b 72 0c 00 00             ; CALL .WORD-LONG (0c72)
0d71: 04                         ; SWAP
0d72: 2e                         ; DEC
0d73: 06                         ; DUP
0d74: 0a 6b 0d 00 00             ; JMPNZ 0d6b
0d79: 05                         ; DROP
0d7a: 05                         ; DROP
0d7b: 0c                         ; RET
;
0d7c: 18 ed f1 00 00             ; DICTP EXECUTE (f1ed)
0d81: 22                         ; RTOD
0d82: 05                         ; DROP
0d83: 21                         ; DTOR
0d84: 0c                         ; RET
;
0d85: 18 da f1 00 00             ; DICTP find.ret (f1da)
0d8a: 06                         ; DUP
0d8b: 0f                         ; CFETCH
0d8c: 0e 0c                      ; CLITERAL 12
0d8e: 16                         ; EQ
0d8f: 09 95 0d 00 00             ; JMPZ 0d95
0d94: 0c                         ; RET
0d95: 2c                         ; INC
0d96: 08 8a 0d 00 00             ; JMP 0d8a
0d9b: 0c                         ; RET
;
0d9c: 18 c7 f1 00 00             ; DICTP (inline) (f1c7)
0da1: 1a                         ; OVER
0da2: 1a                         ; OVER
0da3: 15                         ; LT
0da4: 09 aa 0d 00 00             ; JMPZ 0daa
0da9: 04                         ; SWAP
0daa: 06                         ; DUP
0dab: 0f                         ; CFETCH
0dac: 0b 24 01 00 00             ; CALL C, (0124)
0db1: 2c                         ; INC
0db2: 1a                         ; OVER
0db3: 1a                         ; OVER
0db4: 17                         ; GT
0db5: 0a aa 0d 00 00             ; JMPNZ 0daa
0dba: 05                         ; DROP
0dbb: 05                         ; DROP
0dbc: 0c                         ; RET
;
0dbd: 18 b7 f1 00 00             ; DICTP DOES> (f1b7)
0dc2: 22                         ; RTOD
0dc3: 06                         ; DUP
0dc4: 0b 85 0d 00 00             ; CALL find.ret (0d85)
0dc9: 06                         ; DUP
0dca: 21                         ; DTOR
0dcb: 2c                         ; INC
0dcc: 0b 9c 0d 00 00             ; CALL (inline) (0d9c)
0dd1: 0c                         ; RET
;
0dd2: 18 a1 f1 00 00             ; DICTP Copy.INLINE (f1a1)
0dd7: 06                         ; DUP
0dd8: 0f                         ; CFETCH
0dd9: 0e 18                      ; CLITERAL 24
0ddb: 16                         ; EQ
0ddc: 09 e5 0d 00 00             ; JMPZ 0de5
0de1: 2c                         ; INC
0de2: 0e 04                      ; CLITERAL 4
0de4: 11                         ; ADD
0de5: 06                         ; DUP
0de6: 0b 85 0d 00 00             ; CALL find.ret (0d85)
0deb: 0b 9c 0d 00 00             ; CALL (inline) (0d9c)
0df0: 0c                         ; RET
;
0df1: 18 90 f1 00 00             ; DICTP strlen (f190)
0df6: 0e 00                      ; CLITERAL 0
0df8: 04                         ; SWAP
0df9: 04                         ; SWAP
0dfa: 1a                         ; OVER
0dfb: 0f                         ; CFETCH
0dfc: 06                         ; DUP
0dfd: 09 08 0e 00 00             ; JMPZ 0e08
0e02: 05                         ; DROP
0e03: 2c                         ; INC
0e04: 04                         ; SWAP
0e05: 2c                         ; INC
0e06: 0e 01                      ; CLITERAL 1
0e08: 0a f9 0d 00 00             ; JMPNZ 0df9
0e0d: 04                         ; SWAP
0e0e: 05                         ; DROP
0e0f: 0c                         ; RET
;
0e10: 18 80 f1 00 00             ; DICTP cstr, (f180)
0e15: 06                         ; DUP
0e16: 0f                         ; CFETCH
0e17: 1a                         ; OVER
0e18: 11                         ; ADD
0e19: 2c                         ; INC
0e1a: 2c                         ; INC
0e1b: 0b 9c 0d 00 00             ; CALL (inline) (0d9c)
0e20: 0c                         ; RET
;
0e21: 18 6c f1 00 00             ; DICTP [COMPILE] (f16c)
0e26: 0b cc 07 00 00             ; CALL FLAGS.ISINLINE? (07cc)
0e2b: 09 3a 0e 00 00             ; JMPZ 0e3a
0e30: 0b d2 0d 00 00             ; CALL Copy.INLINE (0dd2)
0e35: 08 44 0e 00 00             ; JMP 0e44
0e3a: 0b d6 01 00 00             ; CALL CALL (01d6)
0e3f: 0b 3c 01 00 00             ; CALL , (013c)
0e44: 0c                         ; RET
;
0e45: 18 56 f1 00 00             ; DICTP executeWord (f156)
0e4a: 21                         ; DTOR
0e4b: 2b                         ; RFETCH
0e4c: 0b f5 07 00 00             ; CALL findInDict (07f5)
0e51: 09 8d 0e 00 00             ; JMPZ 0e8d
0e56: 22                         ; RTOD
0e57: 05                         ; DROP
0e58: 0b a2 03 00 00             ; CALL ?COMPILING (03a2)
0e5d: 09 82 0e 00 00             ; JMPZ 0e82
0e62: 06                         ; DUP
0e63: 0b c3 07 00 00             ; CALL FLAGS.ISIMMEDIATE? (07c3)
0e68: 09 78 0e 00 00             ; JMPZ 0e78
0e6d: 05                         ; DROP
0e6e: 0b 7c 0d 00 00             ; CALL EXECUTE (0d7c)
0e73: 08 7d 0e 00 00             ; JMP 0e7d
0e78: 0b 21 0e 00 00             ; CALL [COMPILE] (0e21)
0e7d: 08 88 0e 00 00             ; JMP 0e88
0e82: 05                         ; DROP
0e83: 0b 7c 0d 00 00             ; CALL EXECUTE (0d7c)
0e88: 08 e1 0e 00 00             ; JMP 0ee1
0e8d: 05                         ; DROP
0e8e: 05                         ; DROP
0e8f: 2b                         ; RFETCH
0e90: 0b b8 08 00 00             ; CALL isNumber? (08b8)
0e95: 09 d3 0e 00 00             ; JMPZ 0ed3
0e9a: 0b a2 03 00 00             ; CALL ?COMPILING (03a2)
0e9f: 09 ce 0e 00 00             ; JMPZ 0ece
0ea4: 06                         ; DUP
0ea5: 0e 00                      ; CLITERAL 0
0ea7: 0e ff                      ; CLITERAL 255
0ea9: 0b 69 06 00 00             ; CALL BETWEEN (0669)
0eae: 09 c4 0e 00 00             ; JMPZ 0ec4
0eb3: 0e 0e                      ; CLITERAL 14
0eb5: 0b 24 01 00 00             ; CALL C, (0124)
0eba: 0b 24 01 00 00             ; CALL C, (0124)
0ebf: 08 ce 0e 00 00             ; JMP 0ece
0ec4: 0b 72 01 00 00             ; CALL LITERAL (0172)
0ec9: 0b 3c 01 00 00             ; CALL , (013c)
0ece: 08 df 0e 00 00             ; JMP 0edf
0ed3: 05                         ; DROP
0ed4: 07 02 3f 3f 00             ; SLITERAL (0ed5) [??]
0ed9: 0b e1 05 00 00             ; CALL CT (05e1)
0ede: fe                         ; RESET
0edf: 22                         ; RTOD
0ee0: 05                         ; DROP
0ee1: 0c                         ; RET
;
0ee2: 18 3f f1 00 00             ; DICTP executeInput (f13f)
0ee7: 0b 8b 00 00 00             ; CALL >IN (008b)
0eec: 02                         ; FETCH
0eed: 0b db 06 00 00             ; CALL skipWS (06db)
0ef2: 0b 8b 00 00 00             ; CALL >IN (008b)
0ef7: 03                         ; STORE
0ef8: 0b 8b 00 00 00             ; CALL >IN (008b)
0efd: 02                         ; FETCH
0efe: 0f                         ; CFETCH
0eff: 09 1f 0f 00 00             ; JMPZ 0f1f
0f04: 0b 8b 00 00 00             ; CALL >IN (008b)
0f09: 02                         ; FETCH
0f0a: 0b 04 07 00 00             ; CALL getOneWord (0704)
0f0f: 0b 8b 00 00 00             ; CALL >IN (008b)
0f14: 03                         ; STORE
0f15: 0b 45 0e 00 00             ; CALL executeWord (0e45)
0f1a: 08 20 0f 00 00             ; JMP 0f20
0f1f: 0c                         ; RET
0f20: 08 e7 0e 00 00             ; JMP 0ee7
0f25: 0c                         ; RET
;
0f26: 18 31 f1 00 00             ; DICTP Pad (f131)
0f2b: 0b 18 01 00 00             ; CALL LAST (0118)
0f30: 0e c8                      ; CLITERAL 200
0f32: 12                         ; SUB
0f33: 06                         ; DUP
0f34: 0b 0c 01 00 00             ; CALL HERE (010c)
0f39: 15                         ; LT
0f3a: 09 51 0f 00 00             ; JMPZ 0f51
0f3f: 07 0e 4f 75 74 20 6f 66 20 4d 65 6d 6f 72 79 21 00 ; SLITERAL (0f40) [Out of Memory!]
0f50: fe                         ; RESET
0f51: 0c                         ; RET
;
0f52: 18 16 f1 00 00             ; DICTP LoadingFromFile? (f116)
0f57: 0b c7 00 00 00             ; CALL INPUT-FP (00c7)
0f5c: 02                         ; FETCH
0f5d: 0c                         ; RET
;
0f5e: 18 fc f0 00 00             ; DICTP getLineFromFile (f0fc)
0f63: 0e c8                      ; CLITERAL 200
0f65: 0b c7 00 00 00             ; CALL INPUT-FP (00c7)
0f6a: 02                         ; FETCH
0f6b: 1e                         ; FREADLINE
0f6c: 0e 00                      ; CLITERAL 0
0f6e: 16                         ; EQ
0f6f: 09 7e 0f 00 00             ; JMPZ 0f7e
0f74: 0b c7 00 00 00             ; CALL INPUT-FP (00c7)
0f79: 0b 98 03 00 00             ; CALL OFF (0398)
0f7e: 0c                         ; RET
;
0f7f: 18 ea f0 00 00             ; DICTP getLine (f0ea)
0f84: 0e 00                      ; CLITERAL 0
0f86: 0b 26 0f 00 00             ; CALL Pad (0f26)
0f8b: 06                         ; DUP
0f8c: 2c                         ; INC
0f8d: 0b 8b 00 00 00             ; CALL >IN (008b)
0f92: 03                         ; STORE
0f93: 10                         ; CSTORE
0f94: 0b 52 0f 00 00             ; CALL LoadingFromFile? (0f52)
0f99: 09 a9 0f 00 00             ; JMPZ 0fa9
0f9e: 0b 26 0f 00 00             ; CALL Pad (0f26)
0fa3: 0b 5e 0f 00 00             ; CALL getLineFromFile (0f5e)
0fa8: 0c                         ; RET
0fa9: 0e 00                      ; CLITERAL 0
0fab: 0b 8b 00 00 00             ; CALL >IN (008b)
0fb0: 02                         ; FETCH
0fb1: 10                         ; CSTORE
0fb2: 27                         ; GETCH
0fb3: 06                         ; DUP
0fb4: 0e 0d                      ; CLITERAL 13
0fb6: 16                         ; EQ
0fb7: 09 c6 0f 00 00             ; JMPZ 0fc6
0fbc: 05                         ; DROP
0fbd: 0b 26 0f 00 00             ; CALL Pad (0f26)
0fc2: 0e 20                      ; CLITERAL 32
0fc4: 19                         ; EMIT
0fc5: 0c                         ; RET
0fc6: 06                         ; DUP
0fc7: 0e 09                      ; CLITERAL 9
0fc9: 16                         ; EQ
0fca: 09 d2 0f 00 00             ; JMPZ 0fd2
0fcf: 05                         ; DROP
0fd0: 0e 20                      ; CLITERAL 32
0fd2: 06                         ; DUP
0fd3: 0e 03                      ; CLITERAL 3
0fd5: 16                         ; EQ
0fd6: 09 dc 0f 00 00             ; JMPZ 0fdc
0fdb: ff                         ; BYE
0fdc: 06                         ; DUP
0fdd: 0e 08                      ; CLITERAL 8
0fdf: 16                         ; EQ
0fe0: 09 18 10 00 00             ; JMPZ 1018
0fe5: 0b 26 0f 00 00             ; CALL Pad (0f26)
0fea: 0f                         ; CFETCH
0feb: 0e 00                      ; CLITERAL 0
0fed: 17                         ; GT
0fee: 09 12 10 00 00             ; JMPZ 1012
0ff3: 0b 26 0f 00 00             ; CALL Pad (0f26)
0ff8: 06                         ; DUP
0ff9: 0f                         ; CFETCH
0ffa: 2e                         ; DEC
0ffb: 04                         ; SWAP
0ffc: 10                         ; CSTORE
0ffd: 0b 8b 00 00 00             ; CALL >IN (008b)
1002: 06                         ; DUP
1003: 02                         ; FETCH
1004: 2e                         ; DEC
1005: 04                         ; SWAP
1006: 03                         ; STORE
1007: 06                         ; DUP
1008: 19                         ; EMIT
1009: 0e 20                      ; CLITERAL 32
100b: 19                         ; EMIT
100c: 19                         ; EMIT
100d: 08 13 10 00 00             ; JMP 1013
1012: 05                         ; DROP
1013: 08 4a 10 00 00             ; JMP 104a
1018: 06                         ; DUP
1019: 0e 20                      ; CLITERAL 32
101b: 0e 7f                      ; CLITERAL 127
101d: 0b 69 06 00 00             ; CALL BETWEEN (0669)
1022: 09 49 10 00 00             ; JMPZ 1049
1027: 06                         ; DUP
1028: 19                         ; EMIT
1029: 0b 8b 00 00 00             ; CALL >IN (008b)
102e: 02                         ; FETCH
102f: 10                         ; CSTORE
1030: 0b 8b 00 00 00             ; CALL >IN (008b)
1035: 06                         ; DUP
1036: 02                         ; FETCH
1037: 2c                         ; INC
1038: 04                         ; SWAP
1039: 03                         ; STORE
103a: 0b 26 0f 00 00             ; CALL Pad (0f26)
103f: 06                         ; DUP
1040: 0f                         ; CFETCH
1041: 2c                         ; INC
1042: 04                         ; SWAP
1043: 10                         ; CSTORE
1044: 08 4a 10 00 00             ; JMP 104a
1049: 05                         ; DROP
104a: 08 a9 0f 00 00             ; JMP 0fa9
104f: 0c                         ; RET
;
1050: 18 d7 f0 00 00             ; DICTP strcpy2c (f0d7)
1055: 06                         ; DUP
1056: 21                         ; DTOR
1057: 0e 00                      ; CLITERAL 0
1059: 1a                         ; OVER
105a: 10                         ; CSTORE
105b: 2c                         ; INC
105c: 04                         ; SWAP
105d: 06                         ; DUP
105e: 0f                         ; CFETCH
105f: 06                         ; DUP
1060: 09 78 10 00 00             ; JMPZ 1078
1065: 0e 02                      ; CLITERAL 2
1067: 25                         ; PICK
1068: 10                         ; CSTORE
1069: 04                         ; SWAP
106a: 2c                         ; INC
106b: 04                         ; SWAP
106c: 2c                         ; INC
106d: 2b                         ; RFETCH
106e: 06                         ; DUP
106f: 0f                         ; CFETCH
1070: 2c                         ; INC
1071: 04                         ; SWAP
1072: 10                         ; CSTORE
1073: 08 81 10 00 00             ; JMP 1081
1078: 21                         ; DTOR
1079: 04                         ; SWAP
107a: 22                         ; RTOD
107b: 04                         ; SWAP
107c: 10                         ; CSTORE
107d: 05                         ; DROP
107e: 22                         ; RTOD
107f: 05                         ; DROP
1080: 0c                         ; RET
1081: 08 5d 10 00 00             ; JMP 105d
1086: 0c                         ; RET
;
1087: 18 c1 f0 00 00             ; DICTP Define-Word (f0c1)
108c: 0b 18 01 00 00             ; CALL LAST (0118)
1091: 1a                         ; OVER
1092: 0b f1 0d 00 00             ; CALL strlen (0df1)
1097: 0e 02                      ; CLITERAL 2
1099: 0e 04                      ; CLITERAL 4
109b: 13                         ; MUL
109c: 0e 03                      ; CLITERAL 3
109e: 11                         ; ADD
109f: 11                         ; ADD
10a0: 12                         ; SUB
10a1: 06                         ; DUP
10a2: 21                         ; DTOR
10a3: 21                         ; DTOR
10a4: 0b 18 01 00 00             ; CALL LAST (0118)
10a9: 2b                         ; RFETCH
10aa: 03                         ; STORE
10ab: 22                         ; RTOD
10ac: 0e 04                      ; CLITERAL 4
10ae: 11                         ; ADD
10af: 21                         ; DTOR
10b0: 0b 0c 01 00 00             ; CALL HERE (010c)
10b5: 2b                         ; RFETCH
10b6: 03                         ; STORE
10b7: 22                         ; RTOD
10b8: 0e 04                      ; CLITERAL 4
10ba: 11                         ; ADD
10bb: 21                         ; DTOR
10bc: 0e 00                      ; CLITERAL 0
10be: 2b                         ; RFETCH
10bf: 10                         ; CSTORE
10c0: 22                         ; RTOD
10c1: 2c                         ; INC
10c2: 21                         ; DTOR
10c3: 22                         ; RTOD
10c4: 0b 50 10 00 00             ; CALL strcpy2c (1050)
10c9: 22                         ; RTOD
10ca: 0b 4f 00 00 00             ; CALL (LAST) (004f)
10cf: 03                         ; STORE
10d0: 0c                         ; RET
;
10d1: 18 ab f0 00 00             ; DICTP CREATE-NAME (f0ab)
10d6: 0b 8b 00 00 00             ; CALL >IN (008b)
10db: 02                         ; FETCH
10dc: 0b db 06 00 00             ; CALL skipWS (06db)
10e1: 0b 8b 00 00 00             ; CALL >IN (008b)
10e6: 03                         ; STORE
10e7: 0b 8b 00 00 00             ; CALL >IN (008b)
10ec: 02                         ; FETCH
10ed: 0f                         ; CFETCH
10ee: 09 28 11 00 00             ; JMPZ 1128
10f3: 0b 8b 00 00 00             ; CALL >IN (008b)
10f8: 02                         ; FETCH
10f9: 0b 04 07 00 00             ; CALL getOneWord (0704)
10fe: 0b 8b 00 00 00             ; CALL >IN (008b)
1103: 03                         ; STORE
1104: 06                         ; DUP
1105: 0f                         ; CFETCH
1106: 09 26 11 00 00             ; JMPZ 1126
110b: 0b 87 10 00 00             ; CALL Define-Word (1087)
1110: 0e 18                      ; CLITERAL 24
1112: 0b 24 01 00 00             ; CALL C, (0124)
1117: 0b 18 01 00 00             ; CALL LAST (0118)
111c: 0b 3c 01 00 00             ; CALL , (013c)
1121: 08 28 11 00 00             ; JMP 1128
1126: 05                         ; DROP
1127: fe                         ; RESET
1128: 0c                         ; RET
;
1129: 18 9f f0 00 00             ; DICTP : (f09f)
112e: 0b d1 10 00 00             ; CALL CREATE-NAME (10d1)
1133: 0b 6d 00 00 00             ; CALL STATE (006d)
1138: 0b 8e 03 00 00             ; CALL ON (038e)
113d: 0c                         ; RET
;
113e: 18 8d f0 00 00             ; DICTP :NONAME (f08d)
1143: 0b 0c 01 00 00             ; CALL HERE (010c)
1148: 0b 6d 00 00 00             ; CALL STATE (006d)
114d: 0b 8e 03 00 00             ; CALL ON (038e)
1152: 0c                         ; RET
;
1153: 18 81 f0 00 00             ; DICTP ; (f081)
1158: 0b e3 01 00 00             ; CALL RET (01e3)
115d: 0b 6d 00 00 00             ; CALL STATE (006d)
1162: 0b 98 03 00 00             ; CALL OFF (0398)
1167: 0c                         ; RET
;
1168: 18 6c f0 00 00             ; DICTP ForgetLast (f06c)
116d: 0b 18 01 00 00             ; CALL LAST (0118)
1172: 0e 04                      ; CLITERAL 4
1174: 11                         ; ADD
1175: 02                         ; FETCH
1176: 0b 40 00 00 00             ; CALL (HERE) (0040)
117b: 03                         ; STORE
117c: 0b 18 01 00 00             ; CALL LAST (0118)
1181: 02                         ; FETCH
1182: 0b 4f 00 00 00             ; CALL (LAST) (004f)
1187: 03                         ; STORE
1188: 0c                         ; RET
;
1189: 18 57 f0 00 00             ; DICTP resetState (f057)
118e: 0b a2 03 00 00             ; CALL ?COMPILING (03a2)
1193: 09 9d 11 00 00             ; JMPZ 119d
1198: 0b 68 11 00 00             ; CALL ForgetLast (1168)
119d: 0b 6d 00 00 00             ; CALL STATE (006d)
11a2: 0b 98 03 00 00             ; CALL OFF (0398)
11a7: 0b 64 03 00 00             ; CALL DECIMAL (0364)
11ac: 0c                         ; RET
;
11ad: 18 47 f0 00 00             ; DICTP ALLOT (f047)
11b2: 0b 0c 01 00 00             ; CALL HERE (010c)
11b7: 11                         ; ADD
11b8: 0b 40 00 00 00             ; CALL (HERE) (0040)
11bd: 03                         ; STORE
11be: 0c                         ; RET
;
11bf: 18 3b f0 00 00             ; DICTP ? (f03b)
11c4: 02                         ; FETCH
11c5: 0b d9 09 00 00             ; CALL . (09d9)
11ca: 0c                         ; RET
;
11cb: 18 2e f0 00 00             ; DICTP C? (f02e)
11d0: 0f                         ; CFETCH
11d1: 0b d9 09 00 00             ; CALL . (09d9)
11d6: 0c                         ; RET
;
11d7: 18 1f f0 00 00             ; DICTP FREE (f01f)
11dc: 0b 18 01 00 00             ; CALL LAST (0118)
11e1: 0b 0c 01 00 00             ; CALL HERE (010c)
11e6: 12                         ; SUB
11e7: 0c                         ; RET
;
11e8: 18 0f f0 00 00             ; DICTP .FREE (f00f)
11ed: 0b d7 11 00 00             ; CALL FREE (11d7)
11f2: 0b bf 09 00 00             ; CALL (.) (09bf)
11f7: 07 0c 20 62 79 74 65 73 20 66 72 65 65 2e 00 ; SLITERAL (11f8) [ bytes free.]
1206: 0b e1 05 00 00             ; CALL CT (05e1)
120b: 0c                         ; RET
;
120c: 18 fc ef 00 00             ; DICTP mainLoop (effc)
1211: 0b 89 11 00 00             ; CALL resetState (1189)
1216: 0b 7f 06 00 00             ; CALL tmp-init (067f)
121b: 0b a2 03 00 00             ; CALL ?COMPILING (03a2)
1220: 2a                         ; NOT
1221: 09 36 12 00 00             ; JMPZ 1236
1226: 07 03 20 4f 4b 00          ; SLITERAL (1227) [ OK]
122c: 0b e1 05 00 00             ; CALL CT (05e1)
1231: 0b 23 0b 00 00             ; CALL .S (0b23)
1236: 0e 0d                      ; CLITERAL 13
1238: 19                         ; EMIT
1239: 0e 0a                      ; CLITERAL 10
123b: 19                         ; EMIT
123c: 0b 7f 0f 00 00             ; CALL getLine (0f7f)
1241: 2c                         ; INC
1242: 0b 8b 00 00 00             ; CALL >IN (008b)
1247: 03                         ; STORE
1248: 0b e2 0e 00 00             ; CALL executeInput (0ee2)
124d: 0e 20                      ; CLITERAL 32
124f: 19                         ; EMIT
1250: 08 16 12 00 00             ; JMP 1216
1255: 0c                         ; RET
;
1256: 18 ed ef 00 00             ; DICTP main (efed)
125b: 0b 6d 00 00 00             ; CALL STATE (006d)
1260: 02                         ; FETCH
1261: 0e 63                      ; CLITERAL 99
1263: 16                         ; EQ
1264: 09 81 12 00 00             ; JMPZ 1281
1269: 0b 6d 00 00 00             ; CALL STATE (006d)
126e: 0b 98 03 00 00             ; CALL OFF (0398)
1273: 07 06 48 65 6c 6c 6f 2e 00 ; SLITERAL (1274) [Hello.]
127c: 0b e1 05 00 00             ; CALL CT (05e1)
1281: 0b 0c 12 00 00             ; CALL mainLoop (120c)
1286: 0c                         ; RET
;
1287: 18 d6 ef 00 00             ; DICTP file-getLine (efd6)
128c: 0b 26 0f 00 00             ; CALL Pad (0f26)
1291: 04                         ; SWAP
1292: 0e c8                      ; CLITERAL 200
1294: 04                         ; SWAP
1295: 1e                         ; FREADLINE
1296: 0b 26 0f 00 00             ; CALL Pad (0f26)
129b: 04                         ; SWAP
129c: 0c                         ; RET
;
129d: 18 c7 ef 00 00             ; DICTP load (efc7)
12a2: 0e 00                      ; CLITERAL 0
12a4: 0e 00                      ; CLITERAL 0
12a6: 1c                         ; FOPEN
12a7: 2a                         ; NOT
12a8: 09 c7 12 00 00             ; JMPZ 12c7
12ad: 07 11 43 61 6e 6e 6f 74 20 6f 70 65 6e 20 66 69 6c 65 2e 00 ; SLITERAL (12ae) [Cannot open file.]
12c1: 0b e1 05 00 00             ; CALL CT (05e1)
12c6: 0c                         ; RET
12c7: 0b c7 00 00 00             ; CALL INPUT-FP (00c7)
12cc: 03                         ; STORE
12cd: 0b c7 00 00 00             ; CALL INPUT-FP (00c7)
12d2: 02                         ; FETCH
12d3: 0b 87 12 00 00             ; CALL file-getLine (1287)
12d8: 09 ee 12 00 00             ; JMPZ 12ee
12dd: 2c                         ; INC
12de: 0b 8b 00 00 00             ; CALL >IN (008b)
12e3: 03                         ; STORE
12e4: 0b e2 0e 00 00             ; CALL executeInput (0ee2)
12e9: 08 01 13 00 00             ; JMP 1301
12ee: 05                         ; DROP
12ef: 0b c7 00 00 00             ; CALL INPUT-FP (00c7)
12f4: 02                         ; FETCH
12f5: 20                         ; FCLOSE
12f6: 0b c7 00 00 00             ; CALL INPUT-FP (00c7)
12fb: 0b 98 03 00 00             ; CALL OFF (0398)
1300: 0c                         ; RET
1301: 08 cd 12 00 00             ; JMP 12cd
1306: 0c                         ; RET
;
1307: 18 b3 ef 00 00             ; DICTP STR.EMPTY (efb3)
130c: 0e 00                      ; CLITERAL 0
130e: 1a                         ; OVER
130f: 03                         ; STORE
1310: 0c                         ; RET
;
1311: 18 a1 ef 00 00             ; DICTP STR.LEN (efa1)
1316: 06                         ; DUP
1317: 0f                         ; CFETCH
1318: 0c                         ; RET
;
1319: 18 8e ef 00 00             ; DICTP STR.CATC (ef8e)
131e: 1a                         ; OVER
131f: 06                         ; DUP
1320: 06                         ; DUP
1321: 0f                         ; CFETCH
1322: 2c                         ; INC
1323: 04                         ; SWAP
1324: 10                         ; CSTORE
1325: 06                         ; DUP
1326: 0f                         ; CFETCH
1327: 11                         ; ADD
1328: 0e 00                      ; CLITERAL 0
132a: 1a                         ; OVER
132b: 2c                         ; INC
132c: 10                         ; CSTORE
132d: 10                         ; CSTORE
132e: 0c                         ; RET
;
132f: 18 77 ef 00 00             ; DICTP STR.NULLTERM (ef77)
1334: 06                         ; DUP
1335: 06                         ; DUP
1336: 0f                         ; CFETCH
1337: 11                         ; ADD
1338: 2c                         ; INC
1339: 0e 00                      ; CLITERAL 0
133b: 04                         ; SWAP
133c: 10                         ; CSTORE
133d: 0c                         ; RET
;
133e: 18 6a ef 00 00             ; DICTP I" (ef6a)
1343: 0b 0c 01 00 00             ; CALL HERE (010c)
1348: 0e 64                      ; CLITERAL 100
134a: 11                         ; ADD
134b: 0e 00                      ; CLITERAL 0
134d: 1a                         ; OVER
134e: 03                         ; STORE
134f: 0b 8b 00 00 00             ; CALL >IN (008b)
1354: 02                         ; FETCH
1355: 0f                         ; CFETCH
1356: 06                         ; DUP
1357: 2a                         ; NOT
1358: 09 79 13 00 00             ; JMPZ 1379
135d: 07 10 6d 69 73 73 69 6e 67 20 63 6c 6f 73 69 6e 67 20 00 ; SLITERAL (135e) [missing closing ]
1370: 0b e1 05 00 00             ; CALL CT (05e1)
1375: 0e 22                      ; CLITERAL 34
1377: 19                         ; EMIT
1378: fe                         ; RESET
1379: 0b 8b 00 00 00             ; CALL >IN (008b)
137e: 06                         ; DUP
137f: 02                         ; FETCH
1380: 2c                         ; INC
1381: 04                         ; SWAP
1382: 03                         ; STORE
1383: 06                         ; DUP
1384: 0e 22                      ; CLITERAL 34
1386: 16                         ; EQ
1387: 09 8e 13 00 00             ; JMPZ 138e
138c: 05                         ; DROP
138d: 0c                         ; RET
138e: 0b 19 13 00 00             ; CALL STR.CATC (1319)
1393: 08 4f 13 00 00             ; JMP 134f
1398: 0c                         ; RET
;
1399: 18 5e ef 00 00             ; DICTP " (ef5e)
139e: 0b a2 03 00 00             ; CALL ?COMPILING (03a2)
13a3: 2a                         ; NOT
13a4: 09 af 13 00 00             ; JMPZ 13af
13a9: 0b 3e 13 00 00             ; CALL I" (133e)
13ae: 0c                         ; RET
13af: 0b a2 01 00 00             ; CALL SLITERAL (01a2)
13b4: 0b 0c 01 00 00             ; CALL HERE (010c)
13b9: 0e 00                      ; CLITERAL 0
13bb: 0b 24 01 00 00             ; CALL C, (0124)
13c0: 0b 8b 00 00 00             ; CALL >IN (008b)
13c5: 02                         ; FETCH
13c6: 0f                         ; CFETCH
13c7: 06                         ; DUP
13c8: 2a                         ; NOT
13c9: 09 f6 13 00 00             ; JMPZ 13f6
13ce: 05                         ; DROP
13cf: 2e                         ; DEC
13d0: 0b 40 00 00 00             ; CALL (HERE) (0040)
13d5: 03                         ; STORE
13d6: 07 11 6d 69 73 73 69 6e 67 20 63 6c 6f 73 69 6e 67 20 27 00 ; SLITERAL (13d7) [missing closing ']
13ea: 0b e1 05 00 00             ; CALL CT (05e1)
13ef: 0e 22                      ; CLITERAL 34
13f1: 19                         ; EMIT
13f2: 0e 27                      ; CLITERAL 39
13f4: 19                         ; EMIT
13f5: fe                         ; RESET
13f6: 0b 8b 00 00 00             ; CALL >IN (008b)
13fb: 06                         ; DUP
13fc: 02                         ; FETCH
13fd: 2c                         ; INC
13fe: 04                         ; SWAP
13ff: 03                         ; STORE
1400: 06                         ; DUP
1401: 0e 22                      ; CLITERAL 34
1403: 16                         ; EQ
1404: 09 1c 14 00 00             ; JMPZ 141c
1409: 05                         ; DROP
140a: 0b 0c 01 00 00             ; CALL HERE (010c)
140f: 0e 00                      ; CLITERAL 0
1411: 0b 24 01 00 00             ; CALL C, (0124)
1416: 1a                         ; OVER
1417: 12                         ; SUB
1418: 2e                         ; DEC
1419: 04                         ; SWAP
141a: 10                         ; CSTORE
141b: 0c                         ; RET
141c: 0b 24 01 00 00             ; CALL C, (0124)
1421: 08 c0 13 00 00             ; JMP 13c0
1426: 0c                         ; RET
;
1427: 18 51 ef 00 00             ; DICTP ll (ef51)
142c: 07 09 6c 6f 61 64 73 2e 34 74 68 00 ; SLITERAL (142d) [loads.4th]
1438: 0b 9d 12 00 00             ; CALL load (129d)
143d: 0c                         ; RET
;
143e: 18 3e ef 00 00             ; DICTP sys-info (ef3e)
1443: 0b 91 0b 00 00             ; CALL .(MEM_SZ) (0b91)
1448: 0e 2c                      ; CLITERAL 44
144a: 19                         ; EMIT
144b: 0e 20                      ; CLITERAL 32
144d: 19                         ; EMIT
144e: 0b ca 0b 00 00             ; CALL .(HERE) (0bca)
1453: 0e 2c                      ; CLITERAL 44
1455: 19                         ; EMIT
1456: 0e 20                      ; CLITERAL 32
1458: 19                         ; EMIT
1459: 0b 01 0c 00 00             ; CALL .(LAST) (0c01)
145e: 0e 2c                      ; CLITERAL 44
1460: 19                         ; EMIT
1461: 0e 20                      ; CLITERAL 32
1463: 19                         ; EMIT
1464: 0b e8 11 00 00             ; CALL .FREE (11e8)
1469: 0e 0d                      ; CLITERAL 13
146b: 19                         ; EMIT
146c: 0e 0a                      ; CLITERAL 10
146e: 19                         ; EMIT
146f: 0c                         ; RET
;
1470: 18 2b ef 00 00             ; DICTP VARIABLE (ef2b)
1475: 0b d1 10 00 00             ; CALL CREATE-NAME (10d1)
147a: 0b 0c 01 00 00             ; CALL HERE (010c)
147f: 0e 02                      ; CLITERAL 2
1481: 11                         ; ADD
1482: 0e 04                      ; CLITERAL 4
1484: 11                         ; ADD
1485: 0b 72 01 00 00             ; CALL LITERAL (0172)
148a: 0b 3c 01 00 00             ; CALL , (013c)
148f: 0b e3 01 00 00             ; CALL RET (01e3)
1494: 0e 00                      ; CLITERAL 0
1496: 0b 3c 01 00 00             ; CALL , (013c)
149b: 0c                         ; RET
;
; End of code, Dictionary:
;
ef2b: 3e ef 00 00                ; VARIABLE - (next: ef3e sys-info)
ef2f: 70 14 00 00 00             ; XT=1470, flags=00
ef34: 08 56 41 52 49 41 42 4c 45 00 ; 8, VARIABLE
;
ef3e: 51 ef 00 00                ; sys-info - (next: ef51 ll)
ef42: 3e 14 00 00 00             ; XT=143e, flags=00
ef47: 08 73 79 73 2d 69 6e 66 6f 00 ; 8, sys-info
;
ef51: 5e ef 00 00                ; ll - (next: ef5e ")
ef55: 27 14 00 00 00             ; XT=1427, flags=00
ef5a: 02 6c 6c 00                ; 2, ll
;
ef5e: 6a ef 00 00                ; " - (next: ef6a I")
ef62: 99 13 00 00 01             ; XT=1399, flags=01
ef67: 01 22 00                   ; 1, "
;
ef6a: 77 ef 00 00                ; I" - (next: ef77 STR.NULLTERM)
ef6e: 3e 13 00 00 00             ; XT=133e, flags=00
ef73: 02 49 22 00                ; 2, I"
;
ef77: 8e ef 00 00                ; STR.NULLTERM - (next: ef8e STR.CATC)
ef7b: 2f 13 00 00 00             ; XT=132f, flags=00
ef80: 0c 53 54 52 2e 4e 55 4c 4c 54 45 52 4d 00 ; 12, STR.NULLTERM
;
ef8e: a1 ef 00 00                ; STR.CATC - (next: efa1 STR.LEN)
ef92: 19 13 00 00 00             ; XT=1319, flags=00
ef97: 08 53 54 52 2e 43 41 54 43 00 ; 8, STR.CATC
;
efa1: b3 ef 00 00                ; STR.LEN - (next: efb3 STR.EMPTY)
efa5: 11 13 00 00 02             ; XT=1311, flags=02
efaa: 07 53 54 52 2e 4c 45 4e 00 ; 7, STR.LEN
;
efb3: c7 ef 00 00                ; STR.EMPTY - (next: efc7 load)
efb7: 07 13 00 00 02             ; XT=1307, flags=02
efbc: 09 53 54 52 2e 45 4d 50 54 59 00 ; 9, STR.EMPTY
;
efc7: d6 ef 00 00                ; load - (next: efd6 file-getLine)
efcb: 9d 12 00 00 00             ; XT=129d, flags=00
efd0: 04 6c 6f 61 64 00          ; 4, load
;
efd6: ed ef 00 00                ; file-getLine - (next: efed main)
efda: 87 12 00 00 00             ; XT=1287, flags=00
efdf: 0c 66 69 6c 65 2d 67 65 74 4c 69 6e 65 00 ; 12, file-getLine
;
efed: fc ef 00 00                ; main - (next: effc mainLoop)
eff1: 56 12 00 00 00             ; XT=1256, flags=00
eff6: 04 6d 61 69 6e 00          ; 4, main
;
effc: 0f f0 00 00                ; mainLoop - (next: f00f .FREE)
f000: 0c 12 00 00 00             ; XT=120c, flags=00
f005: 08 6d 61 69 6e 4c 6f 6f 70 00 ; 8, mainLoop
;
f00f: 1f f0 00 00                ; .FREE - (next: f01f FREE)
f013: e8 11 00 00 00             ; XT=11e8, flags=00
f018: 05 2e 46 52 45 45 00       ; 5, .FREE
;
f01f: 2e f0 00 00                ; FREE - (next: f02e C?)
f023: d7 11 00 00 00             ; XT=11d7, flags=00
f028: 04 46 52 45 45 00          ; 4, FREE
;
f02e: 3b f0 00 00                ; C? - (next: f03b ?)
f032: cb 11 00 00 00             ; XT=11cb, flags=00
f037: 02 43 3f 00                ; 2, C?
;
f03b: 47 f0 00 00                ; ? - (next: f047 ALLOT)
f03f: bf 11 00 00 00             ; XT=11bf, flags=00
f044: 01 3f 00                   ; 1, ?
;
f047: 57 f0 00 00                ; ALLOT - (next: f057 resetState)
f04b: ad 11 00 00 00             ; XT=11ad, flags=00
f050: 05 41 4c 4c 4f 54 00       ; 5, ALLOT
;
f057: 6c f0 00 00                ; resetState - (next: f06c ForgetLast)
f05b: 89 11 00 00 00             ; XT=1189, flags=00
f060: 0a 72 65 73 65 74 53 74 61 74 65 00 ; 10, resetState
;
f06c: 81 f0 00 00                ; ForgetLast - (next: f081 ;)
f070: 68 11 00 00 00             ; XT=1168, flags=00
f075: 0a 46 6f 72 67 65 74 4c 61 73 74 00 ; 10, ForgetLast
;
f081: 8d f0 00 00                ; ; - (next: f08d :NONAME)
f085: 53 11 00 00 01             ; XT=1153, flags=01
f08a: 01 3b 00                   ; 1, ;
;
f08d: 9f f0 00 00                ; :NONAME - (next: f09f :)
f091: 3e 11 00 00 00             ; XT=113e, flags=00
f096: 07 3a 4e 4f 4e 41 4d 45 00 ; 7, :NONAME
;
f09f: ab f0 00 00                ; : - (next: f0ab CREATE-NAME)
f0a3: 29 11 00 00 00             ; XT=1129, flags=00
f0a8: 01 3a 00                   ; 1, :
;
f0ab: c1 f0 00 00                ; CREATE-NAME - (next: f0c1 Define-Word)
f0af: d1 10 00 00 00             ; XT=10d1, flags=00
f0b4: 0b 43 52 45 41 54 45 2d 4e 41 4d 45 00 ; 11, CREATE-NAME
;
f0c1: d7 f0 00 00                ; Define-Word - (next: f0d7 strcpy2c)
f0c5: 87 10 00 00 00             ; XT=1087, flags=00
f0ca: 0b 44 65 66 69 6e 65 2d 57 6f 72 64 00 ; 11, Define-Word
;
f0d7: ea f0 00 00                ; strcpy2c - (next: f0ea getLine)
f0db: 50 10 00 00 00             ; XT=1050, flags=00
f0e0: 08 73 74 72 63 70 79 32 63 00 ; 8, strcpy2c
;
f0ea: fc f0 00 00                ; getLine - (next: f0fc getLineFromFile)
f0ee: 7f 0f 00 00 00             ; XT=0f7f, flags=00
f0f3: 07 67 65 74 4c 69 6e 65 00 ; 7, getLine
;
f0fc: 16 f1 00 00                ; getLineFromFile - (next: f116 LoadingFromFile?)
f100: 5e 0f 00 00 00             ; XT=0f5e, flags=00
f105: 0f 67 65 74 4c 69 6e 65 46 72 6f 6d 46 69 6c 65 00 ; 15, getLineFromFile
;
f116: 31 f1 00 00                ; LoadingFromFile? - (next: f131 Pad)
f11a: 52 0f 00 00 00             ; XT=0f52, flags=00
f11f: 10 4c 6f 61 64 69 6e 67 46 72 6f 6d 46 69 6c 65 3f 00 ; 16, LoadingFromFile?
;
f131: 3f f1 00 00                ; Pad - (next: f13f executeInput)
f135: 26 0f 00 00 00             ; XT=0f26, flags=00
f13a: 03 50 61 64 00             ; 3, Pad
;
f13f: 56 f1 00 00                ; executeInput - (next: f156 executeWord)
f143: e2 0e 00 00 00             ; XT=0ee2, flags=00
f148: 0c 65 78 65 63 75 74 65 49 6e 70 75 74 00 ; 12, executeInput
;
f156: 6c f1 00 00                ; executeWord - (next: f16c [COMPILE])
f15a: 45 0e 00 00 00             ; XT=0e45, flags=00
f15f: 0b 65 78 65 63 75 74 65 57 6f 72 64 00 ; 11, executeWord
;
f16c: 80 f1 00 00                ; [COMPILE] - (next: f180 cstr,)
f170: 21 0e 00 00 00             ; XT=0e21, flags=00
f175: 09 5b 43 4f 4d 50 49 4c 45 5d 00 ; 9, [COMPILE]
;
f180: 90 f1 00 00                ; cstr, - (next: f190 strlen)
f184: 10 0e 00 00 00             ; XT=0e10, flags=00
f189: 05 63 73 74 72 2c 00       ; 5, cstr,
;
f190: a1 f1 00 00                ; strlen - (next: f1a1 Copy.INLINE)
f194: f1 0d 00 00 00             ; XT=0df1, flags=00
f199: 06 73 74 72 6c 65 6e 00    ; 6, strlen
;
f1a1: b7 f1 00 00                ; Copy.INLINE - (next: f1b7 DOES>)
f1a5: d2 0d 00 00 00             ; XT=0dd2, flags=00
f1aa: 0b 43 6f 70 79 2e 49 4e 4c 49 4e 45 00 ; 11, Copy.INLINE
;
f1b7: c7 f1 00 00                ; DOES> - (next: f1c7 (inline))
f1bb: bd 0d 00 00 00             ; XT=0dbd, flags=00
f1c0: 05 44 4f 45 53 3e 00       ; 5, DOES>
;
f1c7: da f1 00 00                ; (inline) - (next: f1da find.ret)
f1cb: 9c 0d 00 00 00             ; XT=0d9c, flags=00
f1d0: 08 28 69 6e 6c 69 6e 65 29 00 ; 8, (inline)
;
f1da: ed f1 00 00                ; find.ret - (next: f1ed EXECUTE)
f1de: 85 0d 00 00 00             ; XT=0d85, flags=00
f1e3: 08 66 69 6e 64 2e 72 65 74 00 ; 8, find.ret
;
f1ed: ff f1 00 00                ; EXECUTE - (next: f1ff .lastx)
f1f1: 7c 0d 00 00 00             ; XT=0d7c, flags=00
f1f6: 07 45 58 45 43 55 54 45 00 ; 7, EXECUTE
;
f1ff: 10 f2 00 00                ; .lastx - (next: f210 NUM-WORDS)
f203: 5a 0d 00 00 00             ; XT=0d5a, flags=00
f208: 06 2e 6c 61 73 74 78 00    ; 6, .lastx
;
f210: 24 f2 00 00                ; NUM-WORDS - (next: f224 WORDSV)
f214: 32 0d 00 00 00             ; XT=0d32, flags=00
f219: 09 4e 55 4d 2d 57 4f 52 44 53 00 ; 9, NUM-WORDS
;
f224: 35 f2 00 00                ; WORDSV - (next: f235 .WORD-LONG)
f228: 02 0d 00 00 00             ; XT=0d02, flags=00
f22d: 06 57 4f 52 44 53 56 00    ; 6, WORDSV
;
f235: 4a f2 00 00                ; .WORD-LONG - (next: f24a WORDS)
f239: 72 0c 00 00 00             ; XT=0c72, flags=00
f23e: 0a 2e 57 4f 52 44 2d 4c 4f 4e 47 00 ; 10, .WORD-LONG
;
f24a: 5a f2 00 00                ; WORDS - (next: f25a .WORD-SHORT)
f24e: 4d 0c 00 00 00             ; XT=0c4d, flags=00
f253: 05 57 4f 52 44 53 00       ; 5, WORDS
;
f25a: 70 f2 00 00                ; .WORD-SHORT - (next: f270 .(LAST))
f25e: 38 0c 00 00 00             ; XT=0c38, flags=00
f263: 0b 2e 57 4f 52 44 2d 53 48 4f 52 54 00 ; 11, .WORD-SHORT
;
f270: 82 f2 00 00                ; .(LAST) - (next: f282 .(HERE))
f274: 01 0c 00 00 00             ; XT=0c01, flags=00
f279: 07 2e 28 4c 41 53 54 29 00 ; 7, .(LAST)
;
f282: 94 f2 00 00                ; .(HERE) - (next: f294 .(MEM_SZ))
f286: ca 0b 00 00 00             ; XT=0bca, flags=00
f28b: 07 2e 28 48 45 52 45 29 00 ; 7, .(HERE)
;
f294: a8 f2 00 00                ; .(MEM_SZ) - (next: f2a8 .S)
f298: 91 0b 00 00 00             ; XT=0b91, flags=00
f29d: 09 2e 28 4d 45 4d 5f 53 5a 29 00 ; 9, .(MEM_SZ)
;
f2a8: b5 f2 00 00                ; .S - (next: f2b5 MAX)
f2ac: 23 0b 00 00 00             ; XT=0b23, flags=00
f2b1: 02 2e 53 00                ; 2, .S
;
f2b5: c3 f2 00 00                ; MAX - (next: f2c3 MIN)
f2b9: 13 0b 00 00 00             ; XT=0b13, flags=00
f2be: 03 4d 41 58 00             ; 3, MAX
;
f2c3: d1 f2 00 00                ; MIN - (next: f2d1 BINARY.)
f2c7: 03 0b 00 00 00             ; XT=0b03, flags=00
f2cc: 03 4d 49 4e 00             ; 3, MIN
;
f2d1: e3 f2 00 00                ; BINARY. - (next: f2e3 DECIMAL.3)
f2d5: e6 0a 00 00 00             ; XT=0ae6, flags=00
f2da: 07 42 49 4e 41 52 59 2e 00 ; 7, BINARY.
;
f2e3: f7 f2 00 00                ; DECIMAL.3 - (next: f2f7 DECIMAL.)
f2e7: c9 0a 00 00 00             ; XT=0ac9, flags=00
f2ec: 09 44 45 43 49 4d 41 4c 2e 33 00 ; 9, DECIMAL.3
;
f2f7: 0a f3 00 00                ; DECIMAL. - (next: f30a HEX.4)
f2fb: ac 0a 00 00 00             ; XT=0aac, flags=00
f300: 08 44 45 43 49 4d 41 4c 2e 00 ; 8, DECIMAL.
;
f30a: 1a f3 00 00                ; HEX.4 - (next: f31a HEX.2)
f30e: 8f 0a 00 00 00             ; XT=0a8f, flags=00
f313: 05 48 45 58 2e 34 00       ; 5, HEX.4
;
f31a: 2a f3 00 00                ; HEX.2 - (next: f32a HEX.)
f31e: 72 0a 00 00 00             ; XT=0a72, flags=00
f323: 05 48 45 58 2e 32 00       ; 5, HEX.2
;
f32a: 39 f3 00 00                ; HEX. - (next: f339 .4)
f32e: 55 0a 00 00 00             ; XT=0a55, flags=00
f333: 04 48 45 58 2e 00          ; 4, HEX.
;
f339: 46 f3 00 00                ; .4 - (next: f346 .3)
f33d: 2c 0a 00 00 00             ; XT=0a2c, flags=00
f342: 02 2e 34 00                ; 2, .4
;
f346: 53 f3 00 00                ; .3 - (next: f353 .2)
f34a: 08 0a 00 00 00             ; XT=0a08, flags=00
f34f: 02 2e 33 00                ; 2, .3
;
f353: 60 f3 00 00                ; .2 - (next: f360 .)
f357: e9 09 00 00 00             ; XT=09e9, flags=00
f35c: 02 2e 32 00                ; 2, .2
;
f360: 6c f3 00 00                ; . - (next: f36c (.))
f364: d9 09 00 00 00             ; XT=09d9, flags=00
f369: 01 2e 00                   ; 1, .
;
f36c: 7a f3 00 00                ; (.) - (next: f37a #P)
f370: bf 09 00 00 00             ; XT=09bf, flags=00
f375: 03 28 2e 29 00             ; 3, (.)
;
f37a: 87 f3 00 00                ; #P - (next: f387 #P-)
f37e: ab 09 00 00 00             ; XT=09ab, flags=00
f383: 02 23 50 00                ; 2, #P
;
f387: 95 f3 00 00                ; #P- - (next: f395 #>)
f38b: 96 09 00 00 00             ; XT=0996, flags=00
f390: 03 23 50 2d 00             ; 3, #P-
;
f395: a2 f3 00 00                ; #> - (next: f3a2 #S)
f399: 90 09 00 00 00             ; XT=0990, flags=00
f39e: 02 23 3e 00                ; 2, #>
;
f3a2: af f3 00 00                ; #S - (next: f3af #)
f3a6: 7e 09 00 00 00             ; XT=097e, flags=00
f3ab: 02 23 53 00                ; 2, #S
;
f3af: bb f3 00 00                ; # - (next: f3bb <#)
f3b3: 56 09 00 00 00             ; XT=0956, flags=00
f3b8: 01 23 00                   ; 1, #
;
f3bb: c8 f3 00 00                ; <# - (next: f3c8 SPACE)
f3bf: 21 09 00 00 00             ; XT=0921, flags=00
f3c4: 02 3c 23 00                ; 2, <#
;
f3c8: d8 f3 00 00                ; SPACE - (next: f3d8 isNumber?)
f3cc: 18 09 00 00 00             ; XT=0918, flags=00
f3d1: 05 53 50 41 43 45 00       ; 5, SPACE
;
f3d8: ec f3 00 00                ; isNumber? - (next: f3ec ABS)
f3dc: b8 08 00 00 00             ; XT=08b8, flags=00
f3e1: 09 69 73 4e 75 6d 62 65 72 3f 00 ; 9, isNumber?
;
f3ec: fa f3 00 00                ; ABS - (next: f3fa NEGATE)
f3f0: a4 08 00 00 00             ; XT=08a4, flags=00
f3f5: 03 41 42 53 00             ; 3, ABS
;
f3fa: 0b f4 00 00                ; NEGATE - (next: f40b isNumChar?)
f3fe: 9a 08 00 00 00             ; XT=089a, flags=00
f403: 06 4e 45 47 41 54 45 00    ; 6, NEGATE
;
f40b: 20 f4 00 00                ; isNumChar? - (next: f420 isHEX?)
f40f: 49 08 00 00 00             ; XT=0849, flags=00
f414: 0a 69 73 4e 75 6d 43 68 61 72 3f 00 ; 10, isNumChar?
;
f420: 31 f4 00 00                ; isHEX? - (next: f431 findInDict)
f424: 3a 08 00 00 00             ; XT=083a, flags=00
f429: 06 69 73 48 45 58 3f 00    ; 6, isHEX?
;
f431: 46 f4 00 00                ; findInDict - (next: f446 DICT.GetINLINE)
f435: f5 07 00 00 00             ; XT=07f5, flags=00
f43a: 0a 66 69 6e 64 49 6e 44 69 63 74 00 ; 10, findInDict
;
f446: 5f f4 00 00                ; DICT.GetINLINE - (next: f45f DICT.GetIMMEDIATE)
f44a: e5 07 00 00 00             ; XT=07e5, flags=00
f44f: 0e 44 49 43 54 2e 47 65 74 49 4e 4c 49 4e 45 00 ; 14, DICT.GetINLINE
;
f45f: 7b f4 00 00                ; DICT.GetIMMEDIATE - (next: f47b FLAGS.ISINLINE?)
f463: d5 07 00 00 00             ; XT=07d5, flags=00
f468: 11 44 49 43 54 2e 47 65 74 49 4d 4d 45 44 49 41 54 45 00 ; 17, DICT.GetIMMEDIATE
;
f47b: 95 f4 00 00                ; FLAGS.ISINLINE? - (next: f495 FLAGS.ISIMMEDIATE?)
f47f: cc 07 00 00 00             ; XT=07cc, flags=00
f484: 0f 46 4c 41 47 53 2e 49 53 49 4e 4c 49 4e 45 3f 00 ; 15, FLAGS.ISINLINE?
;
f495: b2 f4 00 00                ; FLAGS.ISIMMEDIATE? - (next: f4b2 XT.GetDICTP)
f499: c3 07 00 00 00             ; XT=07c3, flags=00
f49e: 12 46 4c 41 47 53 2e 49 53 49 4d 4d 45 44 49 41 54 45 3f 00 ; 18, FLAGS.ISIMMEDIATE?
;
f4b2: c8 f4 00 00                ; XT.GetDICTP - (next: f4c8 DICTP>NAME)
f4b6: aa 07 00 00 00             ; XT=07aa, flags=00
f4bb: 0b 58 54 2e 47 65 74 44 49 43 54 50 00 ; 11, XT.GetDICTP
;
f4c8: dd f4 00 00                ; DICTP>NAME - (next: f4dd DICT.GetFLAGS)
f4cc: 9d 07 00 00 00             ; XT=079d, flags=00
f4d1: 0a 44 49 43 54 50 3e 4e 41 4d 45 00 ; 10, DICTP>NAME
;
f4dd: f5 f4 00 00                ; DICT.GetFLAGS - (next: f4f5 DICT.GetXT)
f4e1: 91 07 00 00 00             ; XT=0791, flags=00
f4e6: 0d 44 49 43 54 2e 47 65 74 46 4c 41 47 53 00 ; 13, DICT.GetFLAGS
;
f4f5: 0a f5 00 00                ; DICT.GetXT - (next: f50a NAME>DICT)
f4f9: 85 07 00 00 00             ; XT=0785, flags=00
f4fe: 0a 44 49 43 54 2e 47 65 74 58 54 00 ; 10, DICT.GetXT
;
f50a: 1e f5 00 00                ; NAME>DICT - (next: f51e FLAGS>DICT)
f50e: 78 07 00 00 00             ; XT=0778, flags=00
f513: 09 4e 41 4d 45 3e 44 49 43 54 00 ; 9, NAME>DICT
;
f51e: 33 f5 00 00                ; FLAGS>DICT - (next: f533 XT>DICT)
f522: 6c 07 00 00 00             ; XT=076c, flags=00
f527: 0a 46 4c 41 47 53 3e 44 49 43 54 00 ; 10, FLAGS>DICT
;
f533: 45 f5 00 00                ; XT>DICT - (next: f545 NEXT>DICT)
f537: 63 07 00 00 00             ; XT=0763, flags=00
f53c: 07 58 54 3e 44 49 43 54 00 ; 7, XT>DICT
;
f545: 59 f5 00 00                ; NEXT>DICT - (next: f559 DICT>NAME)
f549: 5d 07 00 00 00             ; XT=075d, flags=00
f54e: 09 4e 45 58 54 3e 44 49 43 54 00 ; 9, NEXT>DICT
;
f559: 6d f5 00 00                ; DICT>NAME - (next: f56d DICT>FLAGS)
f55d: 51 07 00 00 00             ; XT=0751, flags=00
f562: 09 44 49 43 54 3e 4e 41 4d 45 00 ; 9, DICT>NAME
;
f56d: 82 f5 00 00                ; DICT>FLAGS - (next: f582 DICT>XT)
f571: 45 07 00 00 00             ; XT=0745, flags=00
f576: 0a 44 49 43 54 3e 46 4c 41 47 53 00 ; 10, DICT>FLAGS
;
f582: 94 f5 00 00                ; DICT>XT - (next: f594 DICT>NEXT)
f586: 3c 07 00 00 00             ; XT=073c, flags=00
f58b: 07 44 49 43 54 3e 58 54 00 ; 7, DICT>XT
;
f594: a8 f5 00 00                ; DICT>NEXT - (next: f5a8 getOneWord)
f598: 36 07 00 00 00             ; XT=0736, flags=00
f59d: 09 44 49 43 54 3e 4e 45 58 54 00 ; 9, DICT>NEXT
;
f5a8: bd f5 00 00                ; getOneWord - (next: f5bd skipWS)
f5ac: 04 07 00 00 00             ; XT=0704, flags=00
f5b1: 0a 67 65 74 4f 6e 65 57 6f 72 64 00 ; 10, getOneWord
;
f5bd: ce f5 00 00                ; skipWS - (next: f5ce getInput)
f5c1: db 06 00 00 00             ; XT=06db, flags=00
f5c6: 06 73 6b 69 70 57 53 00    ; 6, skipWS
;
f5ce: e1 f5 00 00                ; getInput - (next: f5e1 PAD)
f5d2: c5 06 00 00 00             ; XT=06c5, flags=00
f5d7: 08 67 65 74 49 6e 70 75 74 00 ; 8, getInput
;
f5e1: ef f5 00 00                ; PAD - (next: f5ef tmp-alloc)
f5e5: b3 06 00 00 00             ; XT=06b3, flags=00
f5ea: 03 50 41 44 00             ; 3, PAD
;
f5ef: 03 f6 00 00                ; tmp-alloc - (next: f603 tmp-cur)
f5f3: 9c 06 00 00 00             ; XT=069c, flags=00
f5f8: 09 74 6d 70 2d 61 6c 6c 6f 63 00 ; 9, tmp-alloc
;
f603: 15 f6 00 00                ; tmp-cur - (next: f615 tmp-init)
f607: 90 06 00 00 00             ; XT=0690, flags=00
f60c: 07 74 6d 70 2d 63 75 72 00 ; 7, tmp-cur
;
f615: 28 f6 00 00                ; tmp-init - (next: f628 BETWEEN)
f619: 7f 06 00 00 00             ; XT=067f, flags=00
f61e: 08 74 6d 70 2d 69 6e 69 74 00 ; 8, tmp-init
;
f628: 3a f6 00 00                ; BETWEEN - (next: f63a CR)
f62c: 69 06 00 00 00             ; XT=0669, flags=00
f631: 07 42 45 54 57 45 45 4e 00 ; 7, BETWEEN
;
f63a: 47 f6 00 00                ; CR - (next: f647 CRLF)
f63e: 5d 06 00 00 02             ; XT=065d, flags=02
f643: 02 43 52 00                ; 2, CR
;
f647: 56 f6 00 00                ; CRLF - (next: f656 BL)
f64b: 51 06 00 00 02             ; XT=0651, flags=02
f650: 04 43 52 4c 46 00          ; 4, CRLF
;
f656: 63 f6 00 00                ; BL - (next: f663 ()
f65a: 48 06 00 00 02             ; XT=0648, flags=02
f65f: 02 42 4c 00                ; 2, BL
;
f663: 6f f6 00 00                ; ( - (next: f66f \)
f667: 00 06 00 00 01             ; XT=0600, flags=01
f66c: 01 28 00                   ; 1, (
;
f66f: 7b f6 00 00                ; \ - (next: f67b CT)
f673: f1 05 00 00 01             ; XT=05f1, flags=01
f678: 01 5c 00                   ; 1, \
;
f67b: 88 f6 00 00                ; CT - (next: f688 TYPE)
f67f: e1 05 00 00 00             ; XT=05e1, flags=00
f684: 02 43 54 00                ; 2, CT
;
f688: 97 f6 00 00                ; TYPE - (next: f697 COUNT)
f68c: c5 05 00 00 00             ; XT=05c5, flags=00
f691: 04 54 59 50 45 00          ; 4, TYPE
;
f697: a7 f6 00 00                ; COUNT - (next: f6a7 FALSE)
f69b: bb 05 00 00 00             ; XT=05bb, flags=00
f6a0: 05 43 4f 55 4e 54 00       ; 5, COUNT
;
f6a7: b7 f6 00 00                ; FALSE - (next: f6b7 TRUE)
f6ab: b3 05 00 00 02             ; XT=05b3, flags=02
f6b0: 05 46 41 4c 53 45 00       ; 5, FALSE
;
f6b7: c6 f6 00 00                ; TRUE - (next: f6c6 >=)
f6bb: a8 05 00 00 02             ; XT=05a8, flags=02
f6c0: 04 54 52 55 45 00          ; 4, TRUE
;
f6c6: d3 f6 00 00                ; >= - (next: f6d3 <=)
f6ca: a0 05 00 00 02             ; XT=05a0, flags=02
f6cf: 02 3e 3d 00                ; 2, >=
;
f6d3: e0 f6 00 00                ; <= - (next: f6e0 <>)
f6d7: 98 05 00 00 02             ; XT=0598, flags=02
f6dc: 02 3c 3d 00                ; 2, <=
;
f6e0: ed f6 00 00                ; <> - (next: f6ed 0=)
f6e4: 90 05 00 00 02             ; XT=0590, flags=02
f6e9: 02 3c 3e 00                ; 2, <>
;
f6ed: fa f6 00 00                ; 0= - (next: f6fa C--)
f6f1: 89 05 00 00 02             ; XT=0589, flags=02
f6f6: 02 30 3d 00                ; 2, 0=
;
f6fa: 08 f7 00 00                ; C-- - (next: f708 C++)
f6fe: 7e 05 00 00 02             ; XT=057e, flags=02
f703: 03 43 2d 2d 00             ; 3, C--
;
f708: 16 f7 00 00                ; C++ - (next: f716 --)
f70c: 73 05 00 00 02             ; XT=0573, flags=02
f711: 03 43 2b 2b 00             ; 3, C++
;
f716: 23 f7 00 00                ; -- - (next: f723 ++)
f71a: 68 05 00 00 02             ; XT=0568, flags=02
f71f: 02 2d 2d 00                ; 2, --
;
f723: 30 f7 00 00                ; ++ - (next: f730 -!)
f727: 5d 05 00 00 02             ; XT=055d, flags=02
f72c: 02 2b 2b 00                ; 2, ++
;
f730: 3d f7 00 00                ; -! - (next: f73d +!)
f734: 50 05 00 00 00             ; XT=0550, flags=00
f739: 02 2d 21 00                ; 2, -!
;
f73d: 4a f7 00 00                ; +! - (next: f74a -=)
f741: 44 05 00 00 00             ; XT=0544, flags=00
f746: 02 2b 21 00                ; 2, +!
;
f74a: 57 f7 00 00                ; -= - (next: f757 +=)
f74e: 38 05 00 00 02             ; XT=0538, flags=02
f753: 02 2d 3d 00                ; 2, -=
;
f757: 64 f7 00 00                ; += - (next: f764 2/)
f75b: 2d 05 00 00 02             ; XT=052d, flags=02
f760: 02 2b 3d 00                ; 2, +=
;
f764: 71 f7 00 00                ; 2/ - (next: f771 2*)
f768: 22 05 00 00 02             ; XT=0522, flags=02
f76d: 02 32 2f 00                ; 2, 2/
;
f771: 7e f7 00 00                ; 2* - (next: f77e 1-)
f775: 19 05 00 00 02             ; XT=0519, flags=02
f77a: 02 32 2a 00                ; 2, 2*
;
f77e: 8b f7 00 00                ; 1- - (next: f78b 1+)
f782: 12 05 00 00 02             ; XT=0512, flags=02
f787: 02 31 2d 00                ; 2, 1-
;
f78b: 98 f7 00 00                ; 1+ - (next: f798 MOD)
f78f: 0b 05 00 00 02             ; XT=050b, flags=02
f794: 02 31 2b 00                ; 2, 1+
;
f798: a6 f7 00 00                ; MOD - (next: f7a6 /)
f79c: 03 05 00 00 02             ; XT=0503, flags=02
f7a1: 03 4d 4f 44 00             ; 3, MOD
;
f7a6: b2 f7 00 00                ; / - (next: f7b2 -ROT)
f7aa: fa 04 00 00 02             ; XT=04fa, flags=02
f7af: 01 2f 00                   ; 1, /
;
f7b2: c1 f7 00 00                ; -ROT - (next: f7c1 ROT)
f7b6: f0 04 00 00 02             ; XT=04f0, flags=02
f7bb: 04 2d 52 4f 54 00          ; 4, -ROT
;
f7c1: cf f7 00 00                ; ROT - (next: f7cf NIP)
f7c5: e6 04 00 00 02             ; XT=04e6, flags=02
f7ca: 03 52 4f 54 00             ; 3, ROT
;
f7cf: dd f7 00 00                ; NIP - (next: f7dd TUCK)
f7d3: de 04 00 00 02             ; XT=04de, flags=02
f7d8: 03 4e 49 50 00             ; 3, NIP
;
f7dd: ec f7 00 00                ; TUCK - (next: f7ec 2DROP)
f7e1: d6 04 00 00 02             ; XT=04d6, flags=02
f7e6: 04 54 55 43 4b 00          ; 4, TUCK
;
f7ec: fc f7 00 00                ; 2DROP - (next: f7fc 2DUP)
f7f0: ce 04 00 00 02             ; XT=04ce, flags=02
f7f5: 05 32 44 52 4f 50 00       ; 5, 2DROP
;
f7fc: 0b f8 00 00                ; 2DUP - (next: f80b RDROP)
f800: c6 04 00 00 02             ; XT=04c6, flags=02
f805: 04 32 44 55 50 00          ; 4, 2DUP
;
f80b: 1b f8 00 00                ; RDROP - (next: f81b R@)
f80f: be 04 00 00 02             ; XT=04be, flags=02
f814: 05 52 44 52 4f 50 00       ; 5, RDROP
;
f81b: 28 f8 00 00                ; R@ - (next: f828 DEBUG-OFF)
f81f: b7 04 00 00 02             ; XT=04b7, flags=02
f824: 02 52 40 00                ; 2, R@
;
f828: 3c f8 00 00                ; DEBUG-OFF - (next: f83c DEBUG-ON)
f82c: ae 04 00 00 02             ; XT=04ae, flags=02
f831: 09 44 45 42 55 47 2d 4f 46 46 00 ; 9, DEBUG-OFF
;
f83c: 4f f8 00 00                ; DEBUG-ON - (next: f84f TRACE-OFF)
f840: a5 04 00 00 02             ; XT=04a5, flags=02
f845: 08 44 45 42 55 47 2d 4f 4e 00 ; 8, DEBUG-ON
;
f84f: 63 f8 00 00                ; TRACE-OFF - (next: f863 TRACE-ON)
f853: 9c 04 00 00 02             ; XT=049c, flags=02
f858: 09 54 52 41 43 45 2d 4f 46 46 00 ; 9, TRACE-OFF
;
f863: 76 f8 00 00                ; TRACE-ON - (next: f876 MEM_SZ)
f867: 93 04 00 00 02             ; XT=0493, flags=02
f86c: 08 54 52 41 43 45 2d 4f 4e 00 ; 8, TRACE-ON
;
f876: 87 f8 00 00                ; MEM_SZ - (next: f887 LEAVE)
f87a: 87 04 00 00 00             ; XT=0487, flags=00
f87f: 06 4d 45 4d 5f 53 5a 00    ; 6, MEM_SZ
;
f887: 97 f8 00 00                ; LEAVE - (next: f897 UNTIL)
f88b: 72 04 00 00 01             ; XT=0472, flags=01
f890: 05 4c 45 41 56 45 00       ; 5, LEAVE
;
f897: a7 f8 00 00                ; UNTIL - (next: f8a7 WHILE)
f89b: 58 04 00 00 01             ; XT=0458, flags=01
f8a0: 05 55 4e 54 49 4c 00       ; 5, UNTIL
;
f8a7: b7 f8 00 00                ; WHILE - (next: f8b7 AGAIN)
f8ab: 3e 04 00 00 01             ; XT=043e, flags=01
f8b0: 05 57 48 49 4c 45 00       ; 5, WHILE
;
f8b7: c7 f8 00 00                ; AGAIN - (next: f8c7 BEGIN)
f8bb: 24 04 00 00 01             ; XT=0424, flags=01
f8c0: 05 41 47 41 49 4e 00       ; 5, AGAIN
;
f8c7: d7 f8 00 00                ; BEGIN - (next: f8d7 THEN)
f8cb: 0f 04 00 00 01             ; XT=040f, flags=01
f8d0: 05 42 45 47 49 4e 00       ; 5, BEGIN
;
f8d7: e6 f8 00 00                ; THEN - (next: f8e6 ELSE)
f8db: f8 03 00 00 01             ; XT=03f8, flags=01
f8e0: 04 54 48 45 4e 00          ; 4, THEN
;
f8e6: f5 f8 00 00                ; ELSE - (next: f8f5 IF)
f8ea: cf 03 00 00 01             ; XT=03cf, flags=01
f8ef: 04 45 4c 53 45 00          ; 4, ELSE
;
f8f5: 02 f9 00 00                ; IF - (next: f902 ?COMPILING)
f8f9: ae 03 00 00 01             ; XT=03ae, flags=01
f8fe: 02 49 46 00                ; 2, IF
;
f902: 17 f9 00 00                ; ?COMPILING - (next: f917 OFF)
f906: a2 03 00 00 00             ; XT=03a2, flags=00
f90b: 0a 3f 43 4f 4d 50 49 4c 49 4e 47 00 ; 10, ?COMPILING
;
f917: 25 f9 00 00                ; OFF - (next: f925 ON)
f91b: 98 03 00 00 00             ; XT=0398, flags=00
f920: 03 4f 46 46 00             ; 3, OFF
;
f925: 32 f9 00 00                ; ON - (next: f932 BINARY)
f929: 8e 03 00 00 00             ; XT=038e, flags=00
f92e: 02 4f 4e 00                ; 2, ON
;
f932: 43 f9 00 00                ; BINARY - (next: f943 OCTAL)
f936: 80 03 00 00 00             ; XT=0380, flags=00
f93b: 06 42 49 4e 41 52 59 00    ; 6, BINARY
;
f943: 53 f9 00 00                ; OCTAL - (next: f953 DECIMAL)
f947: 72 03 00 00 00             ; XT=0372, flags=00
f94c: 05 4f 43 54 41 4c 00       ; 5, OCTAL
;
f953: 65 f9 00 00                ; DECIMAL - (next: f965 HEX)
f957: 64 03 00 00 00             ; XT=0364, flags=00
f95c: 07 44 45 43 49 4d 41 4c 00 ; 7, DECIMAL
;
f965: 73 f9 00 00                ; HEX - (next: f973 FLAG_INLINE)
f969: 56 03 00 00 00             ; XT=0356, flags=00
f96e: 03 48 45 58 00             ; 3, HEX
;
f973: 89 f9 00 00                ; FLAG_INLINE - (next: f989 FLAG_IMMEDIATE)
f977: 4e 03 00 00 02             ; XT=034e, flags=02
f97c: 0b 46 4c 41 47 5f 49 4e 4c 49 4e 45 00 ; 11, FLAG_INLINE
;
f989: a2 f9 00 00                ; FLAG_IMMEDIATE - (next: f9a2 CELLS)
f98d: 46 03 00 00 02             ; XT=0346, flags=02
f992: 0e 46 4c 41 47 5f 49 4d 4d 45 44 49 41 54 45 00 ; 14, FLAG_IMMEDIATE
;
f9a2: b2 f9 00 00                ; CELLS - (next: f9b2 IMMEDIATE)
f9a6: 3d 03 00 00 02             ; XT=033d, flags=02
f9ab: 05 43 45 4c 4c 53 00       ; 5, CELLS
;
f9b2: c6 f9 00 00                ; IMMEDIATE - (next: f9c6 INLINE)
f9b6: 25 03 00 00 00             ; XT=0325, flags=00
f9bb: 09 49 4d 4d 45 44 49 41 54 45 00 ; 9, IMMEDIATE
;
f9c6: d7 f9 00 00                ; INLINE - (next: f9d7 BYE)
f9ca: 0d 03 00 00 00             ; XT=030d, flags=00
f9cf: 06 49 4e 4c 49 4e 45 00    ; 6, INLINE
;
f9d7: e5 f9 00 00                ; BYE - (next: f9e5 RESET)
f9db: 06 03 00 00 02             ; XT=0306, flags=02
f9e0: 03 42 59 45 00             ; 3, BYE
;
f9e5: f5 f9 00 00                ; RESET - (next: f9f5 BREAK)
f9e9: ff 02 00 00 02             ; XT=02ff, flags=02
f9ee: 05 52 45 53 45 54 00       ; 5, RESET
;
f9f5: 05 fa 00 00                ; BREAK - (next: fa05 NOP)
f9f9: f8 02 00 00 02             ; XT=02f8, flags=02
f9fe: 05 42 52 45 41 4b 00       ; 5, BREAK
;
fa05: 13 fa 00 00                ; NOP - (next: fa13 GETTICK)
fa09: f1 02 00 00 02             ; XT=02f1, flags=02
fa0e: 03 4e 4f 50 00             ; 3, NOP
;
fa13: 25 fa 00 00                ; GETTICK - (next: fa25 DEC)
fa17: ea 02 00 00 02             ; XT=02ea, flags=02
fa1c: 07 47 45 54 54 49 43 4b 00 ; 7, GETTICK
;
fa25: 33 fa 00 00                ; DEC - (next: fa33 RDEPTH)
fa29: e3 02 00 00 02             ; XT=02e3, flags=02
fa2e: 03 44 45 43 00             ; 3, DEC
;
fa33: 44 fa 00 00                ; RDEPTH - (next: fa44 INC)
fa37: dc 02 00 00 02             ; XT=02dc, flags=02
fa3c: 06 52 44 45 50 54 48 00    ; 6, RDEPTH
;
fa44: 52 fa 00 00                ; INC - (next: fa52 RFETCH)
fa48: d5 02 00 00 02             ; XT=02d5, flags=02
fa4d: 03 49 4e 43 00             ; 3, INC
;
fa52: 63 fa 00 00                ; RFETCH - (next: fa63 NOT)
fa56: ce 02 00 00 02             ; XT=02ce, flags=02
fa5b: 06 52 46 45 54 43 48 00    ; 6, RFETCH
;
fa63: 71 fa 00 00                ; NOT - (next: fa71 /MOD)
fa67: c7 02 00 00 02             ; XT=02c7, flags=02
fa6c: 03 4e 4f 54 00             ; 3, NOT
;
fa71: 80 fa 00 00                ; /MOD - (next: fa80 COMPAREI)
fa75: c0 02 00 00 02             ; XT=02c0, flags=02
fa7a: 04 2f 4d 4f 44 00          ; 4, /MOD
;
fa80: 93 fa 00 00                ; COMPAREI - (next: fa93 GETCH)
fa84: b9 02 00 00 02             ; XT=02b9, flags=02
fa89: 08 43 4f 4d 50 41 52 45 49 00 ; 8, COMPAREI
;
fa93: a3 fa 00 00                ; GETCH - (next: faa3 DEPTH)
fa97: b2 02 00 00 02             ; XT=02b2, flags=02
fa9c: 05 47 45 54 43 48 00       ; 5, GETCH
;
faa3: b3 fa 00 00                ; DEPTH - (next: fab3 PICK)
faa7: ab 02 00 00 02             ; XT=02ab, flags=02
faac: 05 44 45 50 54 48 00       ; 5, DEPTH
;
fab3: c2 fa 00 00                ; PICK - (next: fac2 AND)
fab7: a4 02 00 00 02             ; XT=02a4, flags=02
fabc: 04 50 49 43 4b 00          ; 4, PICK
;
fac2: d0 fa 00 00                ; AND - (next: fad0 LOGLEVEL)
fac6: 9d 02 00 00 02             ; XT=029d, flags=02
facb: 03 41 4e 44 00             ; 3, AND
;
fad0: e3 fa 00 00                ; LOGLEVEL - (next: fae3 R>)
fad4: 96 02 00 00 02             ; XT=0296, flags=02
fad9: 08 4c 4f 47 4c 45 56 45 4c 00 ; 8, LOGLEVEL
;
fae3: f0 fa 00 00                ; R> - (next: faf0 >R)
fae7: 8f 02 00 00 02             ; XT=028f, flags=02
faec: 02 52 3e 00                ; 2, R>
;
faf0: fd fa 00 00                ; >R - (next: fafd FCLOSE)
faf4: 88 02 00 00 02             ; XT=0288, flags=02
faf9: 02 3e 52 00                ; 2, >R
;
fafd: 0e fb 00 00                ; FCLOSE - (next: fb0e FWRITE)
fb01: 81 02 00 00 02             ; XT=0281, flags=02
fb06: 06 46 43 4c 4f 53 45 00    ; 6, FCLOSE
;
fb0e: 1f fb 00 00                ; FWRITE - (next: fb1f FREADLINE)
fb12: 7a 02 00 00 02             ; XT=027a, flags=02
fb17: 06 46 57 52 49 54 45 00    ; 6, FWRITE
;
fb1f: 33 fb 00 00                ; FREADLINE - (next: fb33 FREAD)
fb23: 73 02 00 00 02             ; XT=0273, flags=02
fb28: 09 46 52 45 41 44 4c 49 4e 45 00 ; 9, FREADLINE
;
fb33: 43 fb 00 00                ; FREAD - (next: fb43 FOPEN)
fb37: 6c 02 00 00 02             ; XT=026c, flags=02
fb3c: 05 46 52 45 41 44 00       ; 5, FREAD
;
fb43: 53 fb 00 00                ; FOPEN - (next: fb53 COMPARE)
fb47: 65 02 00 00 02             ; XT=0265, flags=02
fb4c: 05 46 4f 50 45 4e 00       ; 5, FOPEN
;
fb53: 65 fb 00 00                ; COMPARE - (next: fb65 OVER)
fb57: 5e 02 00 00 02             ; XT=025e, flags=02
fb5c: 07 43 4f 4d 50 41 52 45 00 ; 7, COMPARE
;
fb65: 74 fb 00 00                ; OVER - (next: fb74 EMIT)
fb69: 57 02 00 00 02             ; XT=0257, flags=02
fb6e: 04 4f 56 45 52 00          ; 4, OVER
;
fb74: 83 fb 00 00                ; EMIT - (next: fb83 DICTP)
fb78: 50 02 00 00 02             ; XT=0250, flags=02
fb7d: 04 45 4d 49 54 00          ; 4, EMIT
;
fb83: 93 fb 00 00                ; DICTP - (next: fb93 >)
fb87: 43 02 00 00 02             ; XT=0243, flags=02
fb8c: 05 44 49 43 54 50 00       ; 5, DICTP
;
fb93: 9f fb 00 00                ; > - (next: fb9f =)
fb97: 3c 02 00 00 02             ; XT=023c, flags=02
fb9c: 01 3e 00                   ; 1, >
;
fb9f: ab fb 00 00                ; = - (next: fbab <)
fba3: 35 02 00 00 02             ; XT=0235, flags=02
fba8: 01 3d 00                   ; 1, =
;
fbab: b7 fb 00 00                ; < - (next: fbb7 /)
fbaf: 2e 02 00 00 02             ; XT=022e, flags=02
fbb4: 01 3c 00                   ; 1, <
;
fbb7: c3 fb 00 00                ; / - (next: fbc3 *)
fbbb: 27 02 00 00 02             ; XT=0227, flags=02
fbc0: 01 2f 00                   ; 1, /
;
fbc3: cf fb 00 00                ; * - (next: fbcf -)
fbc7: 20 02 00 00 02             ; XT=0220, flags=02
fbcc: 01 2a 00                   ; 1, *
;
fbcf: db fb 00 00                ; - - (next: fbdb +)
fbd3: 19 02 00 00 02             ; XT=0219, flags=02
fbd8: 01 2d 00                   ; 1, -
;
fbdb: e7 fb 00 00                ; + - (next: fbe7 C!)
fbdf: 12 02 00 00 02             ; XT=0212, flags=02
fbe4: 01 2b 00                   ; 1, +
;
fbe7: f4 fb 00 00                ; C! - (next: fbf4 C@)
fbeb: 0b 02 00 00 02             ; XT=020b, flags=02
fbf0: 02 43 21 00                ; 2, C!
;
fbf4: 01 fc 00 00                ; C@ - (next: fc01 CLITERAL)
fbf8: 04 02 00 00 02             ; XT=0204, flags=02
fbfd: 02 43 40 00                ; 2, C@
;
fc01: 14 fc 00 00                ; CLITERAL - (next: fc14 OR)
fc05: f7 01 00 00 02             ; XT=01f7, flags=02
fc0a: 08 43 4c 49 54 45 52 41 4c 00 ; 8, CLITERAL
;
fc14: 21 fc 00 00                ; OR - (next: fc21 RET)
fc18: f0 01 00 00 02             ; XT=01f0, flags=02
fc1d: 02 4f 52 00                ; 2, OR
;
fc21: 2f fc 00 00                ; RET - (next: fc2f CALL)
fc25: e3 01 00 00 00             ; XT=01e3, flags=00
fc2a: 03 52 45 54 00             ; 3, RET
;
fc2f: 3e fc 00 00                ; CALL - (next: fc3e JMPNZ)
fc33: d6 01 00 00 00             ; XT=01d6, flags=00
fc38: 04 43 41 4c 4c 00          ; 4, CALL
;
fc3e: 4e fc 00 00                ; JMPNZ - (next: fc4e JMPZ)
fc42: c9 01 00 00 00             ; XT=01c9, flags=00
fc47: 05 4a 4d 50 4e 5a 00       ; 5, JMPNZ
;
fc4e: 5d fc 00 00                ; JMPZ - (next: fc5d JMP)
fc52: bc 01 00 00 00             ; XT=01bc, flags=00
fc57: 04 4a 4d 50 5a 00          ; 4, JMPZ
;
fc5d: 6b fc 00 00                ; JMP - (next: fc6b SLITERAL)
fc61: af 01 00 00 00             ; XT=01af, flags=00
fc66: 03 4a 4d 50 00             ; 3, JMP
;
fc6b: 7e fc 00 00                ; SLITERAL - (next: fc7e DUP)
fc6f: a2 01 00 00 00             ; XT=01a2, flags=00
fc74: 08 53 4c 49 54 45 52 41 4c 00 ; 8, SLITERAL
;
fc7e: 8c fc 00 00                ; DUP - (next: fc8c DROP)
fc82: 9b 01 00 00 02             ; XT=019b, flags=02
fc87: 03 44 55 50 00             ; 3, DUP
;
fc8c: 9b fc 00 00                ; DROP - (next: fc9b SWAP)
fc90: 94 01 00 00 02             ; XT=0194, flags=02
fc95: 04 44 52 4f 50 00          ; 4, DROP
;
fc9b: aa fc 00 00                ; SWAP - (next: fcaa !)
fc9f: 8d 01 00 00 02             ; XT=018d, flags=02
fca4: 04 53 57 41 50 00          ; 4, SWAP
;
fcaa: b6 fc 00 00                ; ! - (next: fcb6 @)
fcae: 86 01 00 00 02             ; XT=0186, flags=02
fcb3: 01 21 00                   ; 1, !
;
fcb6: c2 fc 00 00                ; @ - (next: fcc2 LITERAL)
fcba: 7f 01 00 00 02             ; XT=017f, flags=02
fcbf: 01 40 00                   ; 1, @
;
fcc2: d4 fc 00 00                ; LITERAL - (next: fcd4 ])
fcc6: 72 01 00 00 00             ; XT=0172, flags=00
fccb: 07 4c 49 54 45 52 41 4c 00 ; 7, LITERAL
;
fcd4: e0 fc 00 00                ; ] - (next: fce0 [)
fcd8: 64 01 00 00 01             ; XT=0164, flags=01
fcdd: 01 5d 00                   ; 1, ]
;
fce0: ec fc 00 00                ; [ - (next: fcec ,)
fce4: 56 01 00 00 01             ; XT=0156, flags=01
fce9: 01 5b 00                   ; 1, [
;
fcec: f8 fc 00 00                ; , - (next: fcf8 C,)
fcf0: 3c 01 00 00 00             ; XT=013c, flags=00
fcf5: 01 2c 00                   ; 1, ,
;
fcf8: 05 fd 00 00                ; C, - (next: fd05 LAST)
fcfc: 24 01 00 00 00             ; XT=0124, flags=00
fd01: 02 43 2c 00                ; 2, C,
;
fd05: 14 fd 00 00                ; LAST - (next: fd14 HERE)
fd09: 18 01 00 00 00             ; XT=0118, flags=00
fd0e: 04 4c 41 53 54 00          ; 4, LAST
;
fd14: 23 fd 00 00                ; HERE - (next: fd23 CELL)
fd18: 0c 01 00 00 00             ; XT=010c, flags=00
fd1d: 04 48 45 52 45 00          ; 4, HERE
;
fd23: 32 fd 00 00                ; CELL - (next: fd32 T3)
fd27: 04 01 00 00 02             ; XT=0104, flags=02
fd2c: 04 43 45 4c 4c 00          ; 4, CELL
;
fd32: 3f fd 00 00                ; T3 - (next: fd3f T2)
fd36: f4 00 00 00 00             ; XT=00f4, flags=00
fd3b: 02 54 33 00                ; 2, T3
;
fd3f: 4c fd 00 00                ; T2 - (next: fd4c T1)
fd43: e5 00 00 00 00             ; XT=00e5, flags=00
fd48: 02 54 32 00                ; 2, T2
;
fd4c: 59 fd 00 00                ; T1 - (next: fd59 INPUT-FP)
fd50: d6 00 00 00 00             ; XT=00d6, flags=00
fd55: 02 54 31 00                ; 2, T1
;
fd59: 6c fd 00 00                ; INPUT-FP - (next: fd6c #LEN)
fd5d: c7 00 00 00 00             ; XT=00c7, flags=00
fd62: 08 49 4e 50 55 54 2d 46 50 00 ; 8, INPUT-FP
;
fd6c: 7b fd 00 00                ; #LEN - (next: fd7b #NEG)
fd70: b8 00 00 00 00             ; XT=00b8, flags=00
fd75: 04 23 4c 45 4e 00          ; 4, #LEN
;
fd7b: 8a fd 00 00                ; #NEG - (next: fd8a (tmp))
fd7f: a9 00 00 00 00             ; XT=00a9, flags=00
fd84: 04 23 4e 45 47 00          ; 4, #NEG
;
fd8a: 9a fd 00 00                ; (tmp) - (next: fd9a >IN)
fd8e: 9a 00 00 00 00             ; XT=009a, flags=00
fd93: 05 28 74 6d 70 29 00       ; 5, (tmp)
;
fd9a: a8 fd 00 00                ; >IN - (next: fda8 (MEM_SZ))
fd9e: 8b 00 00 00 00             ; XT=008b, flags=00
fda3: 03 3e 49 4e 00             ; 3, >IN
;
fda8: bb fd 00 00                ; (MEM_SZ) - (next: fdbb STATE)
fdac: 7c 00 00 00 00             ; XT=007c, flags=00
fdb1: 08 28 4d 45 4d 5f 53 5a 29 00 ; 8, (MEM_SZ)
;
fdbb: cb fd 00 00                ; STATE - (next: fdcb BASE)
fdbf: 6d 00 00 00 00             ; XT=006d, flags=00
fdc4: 05 53 54 41 54 45 00       ; 5, STATE
;
fdcb: da fd 00 00                ; BASE - (next: fdda (LAST))
fdcf: 5e 00 00 00 00             ; XT=005e, flags=00
fdd4: 04 42 41 53 45 00          ; 4, BASE
;
fdda: eb fd 00 00                ; (LAST) - (next: fdeb (HERE))
fdde: 4f 00 00 00 00             ; XT=004f, flags=00
fde3: 06 28 4c 41 53 54 29 00    ; 6, (LAST)
;
fdeb: fc fd 00 00                ; (HERE) - (next: fdfc <end>)
fdef: 40 00 00 00 00             ; XT=0040, flags=00
fdf4: 06 28 48 45 52 45 29 00    ; 6, (HERE)
;
fdfc: 00 00 00 00                ; End.
