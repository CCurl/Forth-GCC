; memory-size: 262144 bytes, (40000 hex)
; data-stack: 3fe00, grows up
; return-stack: 3fffc, grows down
;
0000: 08 99 12 00 00             ; JMP main (1299)
;
0005: 00 0a 04
0008: 00000000 00000000
0010: 000014ac 0003ee3a 00000000 00000000
0020: 00000063 00000000 00000000 00000000
0030: 00000000 00000000 00000000 00000000
;
0040: 18 ed fd 03 00             ; DICTP BASE (3fded)
0045: 0e 06                      ; CLITERAL 6
0047: 0c                         ; RET
;
0048: 18 de fd 03 00             ; DICTP CELL (3fdde)
004d: 0e 04                      ; CLITERAL 4
004f: 0c                         ; RET
;
0050: 18 d1 fd 03 00             ; DICTP DP (3fdd1)
0055: 0e 10                      ; CLITERAL 16
0057: 0c                         ; RET
;
0058: 18 c0 fd 03 00             ; DICTP (LAST) (3fdc0)
005d: 0e 14                      ; CLITERAL 20
005f: 0c                         ; RET
;
0060: 18 ad fd 03 00             ; DICTP INPUT-FP (3fdad)
0065: 0e 1c                      ; CLITERAL 28
0067: 0c                         ; RET
;
0068: 18 9d fd 03 00             ; DICTP STATE (3fd9d)
006d: 0e 20                      ; CLITERAL 32
006f: 0c                         ; RET
;
0070: 18 90 fd 03 00             ; DICTP C, (3fd90)
0075: 0e 10                      ; CLITERAL 16
0077: 02                         ; FETCH
0078: 10                         ; CSTORE
0079: 0e 10                      ; CLITERAL 16
007b: 02                         ; FETCH
007c: 0e 01                      ; CLITERAL 1
007e: 11                         ; ADD
007f: 0e 10                      ; CLITERAL 16
0081: 03                         ; STORE
0082: 0c                         ; RET
;
0083: 18 7f fd 03 00             ; DICTP a.PUSH (3fd7f)
0088: 0e 01                      ; CLITERAL 1
008a: 0b 70 00 00 00             ; CALL C, (0070)
008f: 0c                         ; RET
;
0090: 18 6d fd 03 00             ; DICTP a.CPUSH (3fd6d)
0095: 0e 0e                      ; CLITERAL 14
0097: 0b 70 00 00 00             ; CALL C, (0070)
009c: 0c                         ; RET
;
009d: 18 5b fd 03 00             ; DICTP a.FETCH (3fd5b)
00a2: 0e 02                      ; CLITERAL 2
00a4: 0b 70 00 00 00             ; CALL C, (0070)
00a9: 0c                         ; RET
;
00aa: 18 49 fd 03 00             ; DICTP a.STORE (3fd49)
00af: 0e 03                      ; CLITERAL 3
00b1: 0b 70 00 00 00             ; CALL C, (0070)
00b6: 0c                         ; RET
;
00b7: 18 36 fd 03 00             ; DICTP a.CFETCH (3fd36)
00bc: 0e 0f                      ; CLITERAL 15
00be: 0b 70 00 00 00             ; CALL C, (0070)
00c3: 0c                         ; RET
;
00c4: 18 23 fd 03 00             ; DICTP a.CSTORE (3fd23)
00c9: 0e 10                      ; CLITERAL 16
00cb: 0b 70 00 00 00             ; CALL C, (0070)
00d0: 0c                         ; RET
;
00d1: 18 12 fd 03 00             ; DICTP a.SWAP (3fd12)
00d6: 0e 04                      ; CLITERAL 4
00d8: 0b 70 00 00 00             ; CALL C, (0070)
00dd: 0c                         ; RET
;
00de: 18 01 fd 03 00             ; DICTP a.DROP (3fd01)
00e3: 0e 05                      ; CLITERAL 5
00e5: 0b 70 00 00 00             ; CALL C, (0070)
00ea: 0c                         ; RET
;
00eb: 18 f1 fc 03 00             ; DICTP a.DUP (3fcf1)
00f0: 0e 06                      ; CLITERAL 6
00f2: 0b 70 00 00 00             ; CALL C, (0070)
00f7: 0c                         ; RET
;
00f8: 18 e0 fc 03 00             ; DICTP a.OVER (3fce0)
00fd: 0e 1a                      ; CLITERAL 26
00ff: 0b 70 00 00 00             ; CALL C, (0070)
0104: 0c                         ; RET
;
0105: 18 d0 fc 03 00             ; DICTP a.JMP (3fcd0)
010a: 0e 08                      ; CLITERAL 8
010c: 0b 70 00 00 00             ; CALL C, (0070)
0111: 0c                         ; RET
;
0112: 18 bf fc 03 00             ; DICTP a.JMPZ (3fcbf)
0117: 0e 09                      ; CLITERAL 9
0119: 0b 70 00 00 00             ; CALL C, (0070)
011e: 0c                         ; RET
;
011f: 18 ad fc 03 00             ; DICTP a.JMPNZ (3fcad)
0124: 0e 0a                      ; CLITERAL 10
0126: 0b 70 00 00 00             ; CALL C, (0070)
012b: 0c                         ; RET
;
012c: 18 9c fc 03 00             ; DICTP a.CALL (3fc9c)
0131: 0e 0b                      ; CLITERAL 11
0133: 0b 70 00 00 00             ; CALL C, (0070)
0138: 0c                         ; RET
;
0139: 18 8c fc 03 00             ; DICTP a.RET (3fc8c)
013e: 0e 0c                      ; CLITERAL 12
0140: 0b 70 00 00 00             ; CALL C, (0070)
0145: 0c                         ; RET
;
0146: 18 78 fc 03 00             ; DICTP a.COMPARE (3fc78)
014b: 0e 1b                      ; CLITERAL 27
014d: 0b 70 00 00 00             ; CALL C, (0070)
0152: 0c                         ; RET
;
0153: 18 63 fc 03 00             ; DICTP a.COMPAREI (3fc63)
0158: 0e 28                      ; CLITERAL 40
015a: 0b 70 00 00 00             ; CALL C, (0070)
015f: 0c                         ; RET
;
0160: 18 53 fc 03 00             ; DICTP a.ADD (3fc53)
0165: 0e 11                      ; CLITERAL 17
0167: 0b 70 00 00 00             ; CALL C, (0070)
016c: 0c                         ; RET
;
016d: 18 43 fc 03 00             ; DICTP a.SUB (3fc43)
0172: 0e 12                      ; CLITERAL 18
0174: 0b 70 00 00 00             ; CALL C, (0070)
0179: 0c                         ; RET
;
017a: 18 33 fc 03 00             ; DICTP a.MUL (3fc33)
017f: 0e 13                      ; CLITERAL 19
0181: 0b 70 00 00 00             ; CALL C, (0070)
0186: 0c                         ; RET
;
0187: 18 23 fc 03 00             ; DICTP a.DIV (3fc23)
018c: 0e 14                      ; CLITERAL 20
018e: 0b 70 00 00 00             ; CALL C, (0070)
0193: 0c                         ; RET
;
0194: 18 14 fc 03 00             ; DICTP a.LT (3fc14)
0199: 0e 15                      ; CLITERAL 21
019b: 0b 70 00 00 00             ; CALL C, (0070)
01a0: 0c                         ; RET
;
01a1: 18 05 fc 03 00             ; DICTP a.EQ (3fc05)
01a6: 0e 16                      ; CLITERAL 22
01a8: 0b 70 00 00 00             ; CALL C, (0070)
01ad: 0c                         ; RET
;
01ae: 18 f6 fb 03 00             ; DICTP a.GT (3fbf6)
01b3: 0e 17                      ; CLITERAL 23
01b5: 0b 70 00 00 00             ; CALL C, (0070)
01ba: 0c                         ; RET
;
01bb: 18 e4 fb 03 00             ; DICTP a.DICTP (3fbe4)
01c0: 0e 18                      ; CLITERAL 24
01c2: 0b 70 00 00 00             ; CALL C, (0070)
01c7: 0c                         ; RET
;
01c8: 18 d3 fb 03 00             ; DICTP a.EMIT (3fbd3)
01cd: 0e 19                      ; CLITERAL 25
01cf: 0b 70 00 00 00             ; CALL C, (0070)
01d4: 0c                         ; RET
;
01d5: 18 c1 fb 03 00             ; DICTP a.FOPEN (3fbc1)
01da: 0e 1c                      ; CLITERAL 28
01dc: 0b 70 00 00 00             ; CALL C, (0070)
01e1: 0c                         ; RET
;
01e2: 18 af fb 03 00             ; DICTP a.FREAD (3fbaf)
01e7: 0e 1d                      ; CLITERAL 29
01e9: 0b 70 00 00 00             ; CALL C, (0070)
01ee: 0c                         ; RET
;
01ef: 18 99 fb 03 00             ; DICTP a.FREADLINE (3fb99)
01f4: 0e 1e                      ; CLITERAL 30
01f6: 0b 70 00 00 00             ; CALL C, (0070)
01fb: 0c                         ; RET
;
01fc: 18 86 fb 03 00             ; DICTP a.FWRITE (3fb86)
0201: 0e 1f                      ; CLITERAL 31
0203: 0b 70 00 00 00             ; CALL C, (0070)
0208: 0c                         ; RET
;
0209: 18 73 fb 03 00             ; DICTP a.FCLOSE (3fb73)
020e: 0e 20                      ; CLITERAL 32
0210: 0b 70 00 00 00             ; CALL C, (0070)
0215: 0c                         ; RET
;
0216: 18 5e fb 03 00             ; DICTP a.SLITERAL (3fb5e)
021b: 0e 07                      ; CLITERAL 7
021d: 0b 70 00 00 00             ; CALL C, (0070)
0222: 0c                         ; RET
;
0223: 18 4d fb 03 00             ; DICTP a.DTOR (3fb4d)
0228: 0e 21                      ; CLITERAL 33
022a: 0b 70 00 00 00             ; CALL C, (0070)
022f: 0c                         ; RET
;
0230: 18 3c fb 03 00             ; DICTP a.RTOD (3fb3c)
0235: 0e 22                      ; CLITERAL 34
0237: 0b 70 00 00 00             ; CALL C, (0070)
023c: 0c                         ; RET
;
023d: 18 2b fb 03 00             ; DICTP a.PICK (3fb2b)
0242: 0e 25                      ; CLITERAL 37
0244: 0b 70 00 00 00             ; CALL C, (0070)
0249: 0c                         ; RET
;
024a: 18 16 fb 03 00             ; DICTP a.LOGLEVEL (3fb16)
024f: 0e 23                      ; CLITERAL 35
0251: 0b 70 00 00 00             ; CALL C, (0070)
0256: 0c                         ; RET
;
0257: 18 04 fb 03 00             ; DICTP a.DEPTH (3fb04)
025c: 0e 26                      ; CLITERAL 38
025e: 0b 70 00 00 00             ; CALL C, (0070)
0263: 0c                         ; RET
;
0264: 18 f4 fa 03 00             ; DICTP a.AND (3faf4)
0269: 0e 24                      ; CLITERAL 36
026b: 0b 70 00 00 00             ; CALL C, (0070)
0270: 0c                         ; RET
;
0271: 18 e5 fa 03 00             ; DICTP a.OR (3fae5)
0276: 0e 0d                      ; CLITERAL 13
0278: 0b 70 00 00 00             ; CALL C, (0070)
027d: 0c                         ; RET
;
027e: 18 d3 fa 03 00             ; DICTP a.GETCH (3fad3)
0283: 0e 27                      ; CLITERAL 39
0285: 0b 70 00 00 00             ; CALL C, (0070)
028a: 0c                         ; RET
;
028b: 18 c1 fa 03 00             ; DICTP a.BREAK (3fac1)
0290: 0e fd                      ; CLITERAL 253
0292: 0b 70 00 00 00             ; CALL C, (0070)
0297: 0c                         ; RET
;
0298: 18 af fa 03 00             ; DICTP a.RESET (3faaf)
029d: 0e fe                      ; CLITERAL 254
029f: 0b 70 00 00 00             ; CALL C, (0070)
02a4: 0c                         ; RET
;
02a5: 18 9f fa 03 00             ; DICTP a.BYE (3fa9f)
02aa: 0e ff                      ; CLITERAL 255
02ac: 0b 70 00 00 00             ; CALL C, (0070)
02b1: 0c                         ; RET
;
02b2: 18 93 fa 03 00             ; DICTP @ (3fa93)
02b7: 02                         ; FETCH
02b8: 0c                         ; RET
;
02b9: 18 87 fa 03 00             ; DICTP ! (3fa87)
02be: 03                         ; STORE
02bf: 0c                         ; RET
;
02c0: 18 7a fa 03 00             ; DICTP C@ (3fa7a)
02c5: 0f                         ; CFETCH
02c6: 0c                         ; RET
;
02c7: 18 6d fa 03 00             ; DICTP C! (3fa6d)
02cc: 10                         ; CSTORE
02cd: 0c                         ; RET
;
02ce: 18 5e fa 03 00             ; DICTP SWAP (3fa5e)
02d3: 04                         ; SWAP
02d4: 0c                         ; RET
;
02d5: 18 4f fa 03 00             ; DICTP DROP (3fa4f)
02da: 05                         ; DROP
02db: 0c                         ; RET
;
02dc: 18 41 fa 03 00             ; DICTP DUP (3fa41)
02e1: 06                         ; DUP
02e2: 0c                         ; RET
;
02e3: 18 32 fa 03 00             ; DICTP OVER (3fa32)
02e8: 1a                         ; OVER
02e9: 0c                         ; RET
;
02ea: 18 20 fa 03 00             ; DICTP COMPARE (3fa20)
02ef: 1b                         ; COMPARE
02f0: 0c                         ; RET
;
02f1: 18 0d fa 03 00             ; DICTP COMPAREI (3fa0d)
02f6: 28                         ; COMPAREI
02f7: 0c                         ; RET
;
02f8: 18 01 fa 03 00             ; DICTP + (3fa01)
02fd: 11                         ; ADD
02fe: 0c                         ; RET
;
02ff: 18 f5 f9 03 00             ; DICTP - (3f9f5)
0304: 12                         ; SUB
0305: 0c                         ; RET
;
0306: 18 e9 f9 03 00             ; DICTP * (3f9e9)
030b: 13                         ; MUL
030c: 0c                         ; RET
;
030d: 18 dd f9 03 00             ; DICTP / (3f9dd)
0312: 14                         ; DIV
0313: 0c                         ; RET
;
0314: 18 d1 f9 03 00             ; DICTP < (3f9d1)
0319: 15                         ; LT
031a: 0c                         ; RET
;
031b: 18 c5 f9 03 00             ; DICTP = (3f9c5)
0320: 16                         ; EQ
0321: 0c                         ; RET
;
0322: 18 b9 f9 03 00             ; DICTP > (3f9b9)
0327: 17                         ; GT
0328: 0c                         ; RET
;
0329: 18 aa f9 03 00             ; DICTP EMIT (3f9aa)
032e: 19                         ; EMIT
032f: 0c                         ; RET
;
0330: 18 9a f9 03 00             ; DICTP FOPEN (3f99a)
0335: 1c                         ; FOPEN
0336: 0c                         ; RET
;
0337: 18 8a f9 03 00             ; DICTP FREAD (3f98a)
033c: 1d                         ; FREAD
033d: 0c                         ; RET
;
033e: 18 76 f9 03 00             ; DICTP FREADLINE (3f976)
0343: 1e                         ; FREADLINE
0344: 0c                         ; RET
;
0345: 18 65 f9 03 00             ; DICTP FWRITE (3f965)
034a: 1f                         ; FWRITE
034b: 0c                         ; RET
;
034c: 18 54 f9 03 00             ; DICTP FCLOSE (3f954)
0351: 20                         ; FCLOSE
0352: 0c                         ; RET
;
0353: 18 47 f9 03 00             ; DICTP >R (3f947)
0358: 21                         ; DTOR
0359: 0c                         ; RET
;
035a: 18 3a f9 03 00             ; DICTP R> (3f93a)
035f: 22                         ; RTOD
0360: 0c                         ; RET
;
0361: 18 2b f9 03 00             ; DICTP PICK (3f92b)
0366: 25                         ; PICK
0367: 0c                         ; RET
;
0368: 18 1b f9 03 00             ; DICTP DEPTH (3f91b)
036d: 26                         ; DEPTH
036e: 0c                         ; RET
;
036f: 18 0d f9 03 00             ; DICTP AND (3f90d)
0374: 24                         ; AND
0375: 0c                         ; RET
;
0376: 18 00 f9 03 00             ; DICTP OR (3f900)
037b: 0d                         ; OR
037c: 0c                         ; RET
;
037d: 18 f0 f8 03 00             ; DICTP GETCH (3f8f0)
0382: 27                         ; GETCH
0383: 0c                         ; RET
;
0384: 18 e0 f8 03 00             ; DICTP BREAK (3f8e0)
0389: fd                         ; BREAK
038a: 0c                         ; RET
;
038b: 18 d0 f8 03 00             ; DICTP RESET (3f8d0)
0390: fe                         ; RESET
0391: 0c                         ; RET
;
0392: 18 c2 f8 03 00             ; DICTP BYE (3f8c2)
0397: ff                         ; BYE
0398: 0c                         ; RET
;
0399: 18 b1 f8 03 00             ; DICTP INLINE (3f8b1)
039e: 0e 14                      ; CLITERAL 20
03a0: 02                         ; FETCH
03a1: 0e 02                      ; CLITERAL 2
03a3: 0e 04                      ; CLITERAL 4
03a5: 13                         ; MUL
03a6: 11                         ; ADD
03a7: 06                         ; DUP
03a8: 0f                         ; CFETCH
03a9: 0e 02                      ; CLITERAL 2
03ab: 0d                         ; OR
03ac: 04                         ; SWAP
03ad: 10                         ; CSTORE
03ae: 0c                         ; RET
;
03af: 18 a1 f8 03 00             ; DICTP CELLS (3f8a1)
03b4: 0e 04                      ; CLITERAL 4
03b6: 13                         ; MUL
03b7: 0c                         ; RET
;
03b8: 18 88 f8 03 00             ; DICTP FLAG_IMMEDIATE (3f888)
03bd: 0e 01                      ; CLITERAL 1
03bf: 0c                         ; RET
;
03c0: 18 72 f8 03 00             ; DICTP FLAG_INLINE (3f872)
03c5: 0e 02                      ; CLITERAL 2
03c7: 0c                         ; RET
;
03c8: 18 5e f8 03 00             ; DICTP IMMEDIATE (3f85e)
03cd: 0e 14                      ; CLITERAL 20
03cf: 02                         ; FETCH
03d0: 0e 02                      ; CLITERAL 2
03d2: 0e 04                      ; CLITERAL 4
03d4: 13                         ; MUL
03d5: 11                         ; ADD
03d6: 06                         ; DUP
03d7: 0f                         ; CFETCH
03d8: 0e 01                      ; CLITERAL 1
03da: 0d                         ; OR
03db: 04                         ; SWAP
03dc: 10                         ; CSTORE
03dd: 0c                         ; RET
;
03de: 18 4f f8 03 00             ; DICTP LAST (3f84f)
03e3: 0e 14                      ; CLITERAL 20
03e5: 02                         ; FETCH
03e6: 0c                         ; RET
;
03e7: 18 40 f8 03 00             ; DICTP HERE (3f840)
03ec: 0e 10                      ; CLITERAL 16
03ee: 02                         ; FETCH
03ef: 0c                         ; RET
;
03f0: 18 34 f8 03 00             ; DICTP , (3f834)
03f5: 0e 10                      ; CLITERAL 16
03f7: 02                         ; FETCH
03f8: 03                         ; STORE
03f9: 0e 10                      ; CLITERAL 16
03fb: 02                         ; FETCH
03fc: 0e 04                      ; CLITERAL 4
03fe: 11                         ; ADD
03ff: 0e 10                      ; CLITERAL 16
0401: 03                         ; STORE
0402: 0c                         ; RET
;
0403: 18 21 f8 03 00             ; DICTP LOGLEVEL (3f821)
0408: 23                         ; LOGLEVEL
0409: 0c                         ; RET
;
040a: 18 0e f8 03 00             ; DICTP TRACE-ON (3f80e)
040f: 0e 02                      ; CLITERAL 2
0411: 23                         ; LOGLEVEL
0412: 0c                         ; RET
;
0413: 18 fa f7 03 00             ; DICTP TRACE-OFF (3f7fa)
0418: 0e 00                      ; CLITERAL 0
041a: 23                         ; LOGLEVEL
041b: 0c                         ; RET
;
041c: 18 e7 f7 03 00             ; DICTP DEBUG-ON (3f7e7)
0421: 0e 01                      ; CLITERAL 1
0423: 23                         ; LOGLEVEL
0424: 0c                         ; RET
;
0425: 18 d3 f7 03 00             ; DICTP DEBUG-OFF (3f7d3)
042a: 0e 00                      ; CLITERAL 0
042c: 23                         ; LOGLEVEL
042d: 0c                         ; RET
;
042e: 18 c5 f7 03 00             ; DICTP HEX (3f7c5)
0433: 0e 10                      ; CLITERAL 16
0435: 0e 06                      ; CLITERAL 6
0437: 10                         ; CSTORE
0438: 0c                         ; RET
;
0439: 18 b3 f7 03 00             ; DICTP DECIMAL (3f7b3)
043e: 0e 0a                      ; CLITERAL 10
0440: 0e 06                      ; CLITERAL 6
0442: 10                         ; CSTORE
0443: 0c                         ; RET
;
0444: 18 a3 f7 03 00             ; DICTP OCTAL (3f7a3)
0449: 0e 08                      ; CLITERAL 8
044b: 0e 06                      ; CLITERAL 6
044d: 10                         ; CSTORE
044e: 0c                         ; RET
;
044f: 18 92 f7 03 00             ; DICTP BINARY (3f792)
0454: 0e 02                      ; CLITERAL 2
0456: 0e 06                      ; CLITERAL 6
0458: 10                         ; CSTORE
0459: 0c                         ; RET
;
045a: 18 85 f7 03 00             ; DICTP ON (3f785)
045f: 0e 01                      ; CLITERAL 1
0461: 04                         ; SWAP
0462: 03                         ; STORE
0463: 0c                         ; RET
;
0464: 18 77 f7 03 00             ; DICTP OFF (3f777)
0469: 0e 00                      ; CLITERAL 0
046b: 04                         ; SWAP
046c: 03                         ; STORE
046d: 0c                         ; RET
;
046e: 18 6b f7 03 00             ; DICTP [ (3f76b)
0473: 0e 00                      ; CLITERAL 0
0475: 0e 20                      ; CLITERAL 32
0477: 03                         ; STORE
0478: 0c                         ; RET
;
0479: 18 5f f7 03 00             ; DICTP ] (3f75f)
047e: 0e 01                      ; CLITERAL 1
0480: 0e 20                      ; CLITERAL 32
0482: 03                         ; STORE
0483: 0c                         ; RET
;
0484: 18 4a f7 03 00             ; DICTP ?COMPILING (3f74a)
0489: 0e 20                      ; CLITERAL 32
048b: 02                         ; FETCH
048c: 0c                         ; RET
;
048d: 18 3b f7 03 00             ; DICTP THEN (3f73b)
0492: 0b 84 04 00 00             ; CALL ?COMPILING (0484)
0497: 09 a1 04 00 00             ; JMPZ 04a1
049c: 0e 10                      ; CLITERAL 16
049e: 02                         ; FETCH
049f: 04                         ; SWAP
04a0: 03                         ; STORE
04a1: 0c                         ; RET
;
04a2: 18 2e f7 03 00             ; DICTP IF (3f72e)
04a7: 0b 84 04 00 00             ; CALL ?COMPILING (0484)
04ac: 09 c2 04 00 00             ; JMPZ 04c2
04b1: 0e 09                      ; CLITERAL 9
04b3: 0b 70 00 00 00             ; CALL C, (0070)
04b8: 0e 10                      ; CLITERAL 16
04ba: 02                         ; FETCH
04bb: 0e 00                      ; CLITERAL 0
04bd: 0b f0 03 00 00             ; CALL , (03f0)
04c2: 0c                         ; RET
;
04c3: 18 1f f7 03 00             ; DICTP ELSE (3f71f)
04c8: 0b 84 04 00 00             ; CALL ?COMPILING (0484)
04cd: 09 e9 04 00 00             ; JMPZ 04e9
04d2: 0e 08                      ; CLITERAL 8
04d4: 0b 70 00 00 00             ; CALL C, (0070)
04d9: 0e 10                      ; CLITERAL 16
04db: 02                         ; FETCH
04dc: 04                         ; SWAP
04dd: 0e 00                      ; CLITERAL 0
04df: 0b f0 03 00 00             ; CALL , (03f0)
04e4: 0e 10                      ; CLITERAL 16
04e6: 02                         ; FETCH
04e7: 04                         ; SWAP
04e8: 03                         ; STORE
04e9: 0c                         ; RET
;
04ea: 18 11 f7 03 00             ; DICTP >IN (3f711)
04ef: 01 f5 04 00 00             ; LITERAL 1269 (4f5)
04f4: 0c                         ; RET
04f5: 00                         ; RESET
04f6: 00                         ; RESET
04f7: 00                         ; RESET
04f8: 00                         ; RESET
04f9: 0c                         ; RET
;
04fa: 18 01 f7 03 00             ; DICTP isNeg (3f701)
04ff: 01 05 05 00 00             ; LITERAL 1285 (505)
0504: 0c                         ; RET
0505: 00                         ; RESET
0506: 00                         ; RESET
0507: 00                         ; RESET
0508: 00                         ; RESET
0509: 0c                         ; RET
;
050a: 18 ef f6 03 00             ; DICTP (MEM_K) (3f6ef)
050f: 01 15 05 00 00             ; LITERAL 1301 (515)
0514: 0c                         ; RET
0515: 00                         ; RESET
0516: 01 00 00 0c 18             ; LITERAL 403439616 (180c0000)
051b: de                         ; RESET
051c: f6                         ; RESET
051d: 03                         ; STORE
051e: 00                         ; RESET
051f: 0b 0a 05 00 00             ; CALL (MEM_K) (050a)
0524: 02                         ; FETCH
0525: 01 00 04 00 00             ; LITERAL 1024 (400)
052a: 13                         ; MUL
052b: 0c                         ; RET
;
052c: 18 d1 f6 03 00             ; DICTP 1+ (3f6d1)
0531: 0e 01                      ; CLITERAL 1
0533: 11                         ; ADD
0534: 0c                         ; RET
;
0535: 18 c4 f6 03 00             ; DICTP 1- (3f6c4)
053a: 0e 01                      ; CLITERAL 1
053c: 12                         ; SUB
053d: 0c                         ; RET
;
053e: 18 b7 f6 03 00             ; DICTP 2* (3f6b7)
0543: 0e 02                      ; CLITERAL 2
0545: 13                         ; MUL
0546: 0c                         ; RET
;
0547: 18 aa f6 03 00             ; DICTP 2/ (3f6aa)
054c: 0e 02                      ; CLITERAL 2
054e: 14                         ; DIV
054f: 0c                         ; RET
;
0550: 18 9d f6 03 00             ; DICTP R@ (3f69d)
0555: 22                         ; RTOD
0556: 06                         ; DUP
0557: 21                         ; DTOR
0558: 0c                         ; RET
;
0559: 18 8d f6 03 00             ; DICTP RDROP (3f68d)
055e: 22                         ; RTOD
055f: 05                         ; DROP
0560: 0c                         ; RET
;
0561: 18 7e f6 03 00             ; DICTP TUCK (3f67e)
0566: 04                         ; SWAP
0567: 1a                         ; OVER
0568: 0c                         ; RET
;
0569: 18 70 f6 03 00             ; DICTP NIP (3f670)
056e: 04                         ; SWAP
056f: 05                         ; DROP
0570: 0c                         ; RET
;
0571: 18 62 f6 03 00             ; DICTP ROT (3f662)
0576: 21                         ; DTOR
0577: 04                         ; SWAP
0578: 22                         ; RTOD
0579: 04                         ; SWAP
057a: 0c                         ; RET
;
057b: 18 53 f6 03 00             ; DICTP -ROT (3f653)
0580: 04                         ; SWAP
0581: 21                         ; DTOR
0582: 04                         ; SWAP
0583: 22                         ; RTOD
0584: 0c                         ; RET
;
0585: 18 46 f6 03 00             ; DICTP += (3f646)
058a: 1a                         ; OVER
058b: 02                         ; FETCH
058c: 11                         ; ADD
058d: 04                         ; SWAP
058e: 03                         ; STORE
058f: 0c                         ; RET
;
0590: 18 39 f6 03 00             ; DICTP -= (3f639)
0595: 1a                         ; OVER
0596: 02                         ; FETCH
0597: 04                         ; SWAP
0598: 12                         ; SUB
0599: 04                         ; SWAP
059a: 03                         ; STORE
059b: 0c                         ; RET
;
059c: 18 2c f6 03 00             ; DICTP ++ (3f62c)
05a1: 0e 01                      ; CLITERAL 1
05a3: 0b 85 05 00 00             ; CALL += (0585)
05a8: 0c                         ; RET
;
05a9: 18 1f f6 03 00             ; DICTP -- (3f61f)
05ae: 0e 01                      ; CLITERAL 1
05b0: 0b 90 05 00 00             ; CALL -= (0590)
05b5: 0c                         ; RET
;
05b6: 18 11 f6 03 00             ; DICTP C++ (3f611)
05bb: 06                         ; DUP
05bc: 0f                         ; CFETCH
05bd: 0e 01                      ; CLITERAL 1
05bf: 11                         ; ADD
05c0: 04                         ; SWAP
05c1: 10                         ; CSTORE
05c2: 0c                         ; RET
;
05c3: 18 03 f6 03 00             ; DICTP C-- (3f603)
05c8: 06                         ; DUP
05c9: 0f                         ; CFETCH
05ca: 0e 01                      ; CLITERAL 1
05cc: 12                         ; SUB
05cd: 04                         ; SWAP
05ce: 10                         ; CSTORE
05cf: 0c                         ; RET
;
05d0: 18 f6 f5 03 00             ; DICTP +! (3f5f6)
05d5: 04                         ; SWAP
05d6: 1a                         ; OVER
05d7: 02                         ; FETCH
05d8: 11                         ; ADD
05d9: 04                         ; SWAP
05da: 03                         ; STORE
05db: 0c                         ; RET
;
05dc: 18 e8 f5 03 00             ; DICTP C+! (3f5e8)
05e1: 04                         ; SWAP
05e2: 1a                         ; OVER
05e3: 0f                         ; CFETCH
05e4: 11                         ; ADD
05e5: 04                         ; SWAP
05e6: 10                         ; CSTORE
05e7: 0c                         ; RET
;
05e8: 18 db f5 03 00             ; DICTP 0= (3f5db)
05ed: 0e 00                      ; CLITERAL 0
05ef: 16                         ; EQ
05f0: 0c                         ; RET
;
05f1: 18 ce f5 03 00             ; DICTP <> (3f5ce)
05f6: 16                         ; EQ
05f7: 0e 00                      ; CLITERAL 0
05f9: 16                         ; EQ
05fa: 0c                         ; RET
;
05fb: 18 c1 f5 03 00             ; DICTP <= (3f5c1)
0600: 17                         ; GT
0601: 0e 00                      ; CLITERAL 0
0603: 16                         ; EQ
0604: 0c                         ; RET
;
0605: 18 b4 f5 03 00             ; DICTP >= (3f5b4)
060a: 15                         ; LT
060b: 0e 00                      ; CLITERAL 0
060d: 16                         ; EQ
060e: 0c                         ; RET
;
060f: 18 a5 f5 03 00             ; DICTP TRUE (3f5a5)
0614: 0e 01                      ; CLITERAL 1
0616: 0c                         ; RET
;
0617: 18 95 f5 03 00             ; DICTP FALSE (3f595)
061c: 0e 00                      ; CLITERAL 0
061e: 0c                         ; RET
;
061f: 18 87 f5 03 00             ; DICTP NOT (3f587)
0624: 0e 00                      ; CLITERAL 0
0626: 16                         ; EQ
0627: 0c                         ; RET
;
0628: 18 78 f5 03 00             ; DICTP 2DUP (3f578)
062d: 1a                         ; OVER
062e: 1a                         ; OVER
062f: 0c                         ; RET
;
0630: 18 68 f5 03 00             ; DICTP 2DROP (3f568)
0635: 05                         ; DROP
0636: 05                         ; DROP
0637: 0c                         ; RET
;
0638: 18 58 f5 03 00             ; DICTP COUNT (3f558)
063d: 06                         ; DUP
063e: 0e 01                      ; CLITERAL 1
0640: 11                         ; ADD
0641: 04                         ; SWAP
0642: 0f                         ; CFETCH
0643: 0c                         ; RET
;
0644: 18 48 f5 03 00             ; DICTP LEAVE (3f548)
0649: 0b 84 04 00 00             ; CALL ?COMPILING (0484)
064e: 09 5a 06 00 00             ; JMPZ 065a
0653: 0e 0c                      ; CLITERAL 12
0655: 0b 70 00 00 00             ; CALL C, (0070)
065a: 0c                         ; RET
;
065b: 18 38 f5 03 00             ; DICTP BEGIN (3f538)
0660: 0b 84 04 00 00             ; CALL ?COMPILING (0484)
0665: 09 6d 06 00 00             ; JMPZ 066d
066a: 0e 10                      ; CLITERAL 16
066c: 02                         ; FETCH
066d: 0c                         ; RET
;
066e: 18 28 f5 03 00             ; DICTP AGAIN (3f528)
0673: 0b 84 04 00 00             ; CALL ?COMPILING (0484)
0678: 09 89 06 00 00             ; JMPZ 0689
067d: 0e 08                      ; CLITERAL 8
067f: 0b 70 00 00 00             ; CALL C, (0070)
0684: 0b f0 03 00 00             ; CALL , (03f0)
0689: 0c                         ; RET
;
068a: 18 18 f5 03 00             ; DICTP WHILE (3f518)
068f: 0b 84 04 00 00             ; CALL ?COMPILING (0484)
0694: 09 a5 06 00 00             ; JMPZ 06a5
0699: 0e 0a                      ; CLITERAL 10
069b: 0b 70 00 00 00             ; CALL C, (0070)
06a0: 0b f0 03 00 00             ; CALL , (03f0)
06a5: 0c                         ; RET
;
06a6: 18 08 f5 03 00             ; DICTP UNTIL (3f508)
06ab: 0b 84 04 00 00             ; CALL ?COMPILING (0484)
06b0: 09 c1 06 00 00             ; JMPZ 06c1
06b5: 0e 09                      ; CLITERAL 9
06b7: 0b 70 00 00 00             ; CALL C, (0070)
06bc: 0b f0 03 00 00             ; CALL , (03f0)
06c1: 0c                         ; RET
;
06c2: 18 f9 f4 03 00             ; DICTP TYPE (3f4f9)
06c7: 06                         ; DUP
06c8: 0e 00                      ; CLITERAL 0
06ca: 16                         ; EQ
06cb: 09 d3 06 00 00             ; JMPZ 06d3
06d0: 05                         ; DROP
06d1: 05                         ; DROP
06d2: 0c                         ; RET
06d3: 04                         ; SWAP
06d4: 06                         ; DUP
06d5: 0f                         ; CFETCH
06d6: 19                         ; EMIT
06d7: 0e 01                      ; CLITERAL 1
06d9: 11                         ; ADD
06da: 04                         ; SWAP
06db: 0e 01                      ; CLITERAL 1
06dd: 12                         ; SUB
06de: 08 c7 06 00 00             ; JMP 06c7
06e3: 0c                         ; RET
;
06e4: 18 ec f4 03 00             ; DICTP CT (3f4ec)
06e9: 0b 38 06 00 00             ; CALL COUNT (0638)
06ee: 0b c2 06 00 00             ; CALL TYPE (06c2)
06f3: 0c                         ; RET
;
06f4: 18 e0 f4 03 00             ; DICTP \ (3f4e0)
06f9: 0e 00                      ; CLITERAL 0
06fb: 0b ea 04 00 00             ; CALL >IN (04ea)
0700: 02                         ; FETCH
0701: 10                         ; CSTORE
0702: 0c                         ; RET
;
0703: 18 d4 f4 03 00             ; DICTP ( (3f4d4)
0708: 0b ea 04 00 00             ; CALL >IN (04ea)
070d: 02                         ; FETCH
070e: 0f                         ; CFETCH
070f: 06                         ; DUP
0710: 0e 00                      ; CLITERAL 0
0712: 16                         ; EQ
0713: 09 34 07 00 00             ; JMPZ 0734
0718: 07 13 6d 69 73 73 69 6e 67 20 63 6c 6f 73 69 6e 67 20 27 29 27 00 ; SLITERAL (0719) [missing closing ')']
072e: 0b e4 06 00 00             ; CALL CT (06e4)
0733: fe                         ; RESET
0734: 0b ea 04 00 00             ; CALL >IN (04ea)
0739: 0b 9c 05 00 00             ; CALL ++ (059c)
073e: 0e 29                      ; CLITERAL 41
0740: 16                         ; EQ
0741: 09 47 07 00 00             ; JMPZ 0747
0746: 0c                         ; RET
0747: 08 08 07 00 00             ; JMP 0708
074c: 0c                         ; RET
;
074d: 18 c7 f4 03 00             ; DICTP BL (3f4c7)
0752: 0e 20                      ; CLITERAL 32
0754: 19                         ; EMIT
0755: 0c                         ; RET
;
0756: 18 b8 f4 03 00             ; DICTP CRLF (3f4b8)
075b: 0e 0d                      ; CLITERAL 13
075d: 19                         ; EMIT
075e: 0e 0a                      ; CLITERAL 10
0760: 19                         ; EMIT
0761: 0c                         ; RET
;
0762: 18 ab f4 03 00             ; DICTP CR (3f4ab)
0767: 0e 0d                      ; CLITERAL 13
0769: 19                         ; EMIT
076a: 0e 0a                      ; CLITERAL 10
076c: 19                         ; EMIT
076d: 0c                         ; RET
;
076e: 18 99 f4 03 00             ; DICTP BETWEEN (3f499)
0773: 0e 02                      ; CLITERAL 2
0775: 25                         ; PICK
0776: 15                         ; LT
0777: 09 81 07 00 00             ; JMPZ 0781
077c: 05                         ; DROP
077d: 05                         ; DROP
077e: 0e 00                      ; CLITERAL 0
0780: 0c                         ; RET
0781: 15                         ; LT
0782: 0e 00                      ; CLITERAL 0
0784: 16                         ; EQ
0785: 0c                         ; RET
;
0786: 18 89 f4 03 00             ; DICTP (tmp) (3f489)
078b: 01 91 07 00 00             ; LITERAL 1937 (791)
0790: 0c                         ; RET
0791: 00                         ; RESET
0792: 00                         ; RESET
0793: 00                         ; RESET
0794: 00                         ; RESET
0795: 0c                         ; RET
;
0796: 18 76 f4 03 00             ; DICTP tmp-init (3f476)
079b: 0e 14                      ; CLITERAL 20
079d: 02                         ; FETCH
079e: 0b 86 07 00 00             ; CALL (tmp) (0786)
07a3: 03                         ; STORE
07a4: 0c                         ; RET
;
07a5: 18 64 f4 03 00             ; DICTP tmp-cur (3f464)
07aa: 0b 86 07 00 00             ; CALL (tmp) (0786)
07af: 02                         ; FETCH
07b0: 0c                         ; RET
;
07b1: 18 50 f4 03 00             ; DICTP tmp-alloc (3f450)
07b6: 0b 86 07 00 00             ; CALL (tmp) (0786)
07bb: 04                         ; SWAP
07bc: 1a                         ; OVER
07bd: 02                         ; FETCH
07be: 04                         ; SWAP
07bf: 12                         ; SUB
07c0: 04                         ; SWAP
07c1: 03                         ; STORE
07c2: 0b a5 07 00 00             ; CALL tmp-cur (07a5)
07c7: 0c                         ; RET
;
07c8: 18 42 f4 03 00             ; DICTP PAD (3f442)
07cd: 0b 96 07 00 00             ; CALL tmp-init (0796)
07d2: 0e c8                      ; CLITERAL 200
07d4: 0b b1 07 00 00             ; CALL tmp-alloc (07b1)
07d9: 0c                         ; RET
;
07da: 18 2f f4 03 00             ; DICTP getInput (3f42f)
07df: 0b c8 07 00 00             ; CALL PAD (07c8)
07e4: 0e 80                      ; CLITERAL 128
07e6: 0e 00                      ; CLITERAL 0
07e8: 1e                         ; FREADLINE
07e9: 05                         ; DROP
07ea: 0b c8 07 00 00             ; CALL PAD (07c8)
07ef: 0c                         ; RET
;
07f0: 18 1e f4 03 00             ; DICTP skipWS (3f41e)
07f5: 06                         ; DUP
07f6: 0f                         ; CFETCH
07f7: 06                         ; DUP
07f8: 09 13 08 00 00             ; JMPZ 0813
07fd: 0e 20                      ; CLITERAL 32
07ff: 17                         ; GT
0800: 09 0b 08 00 00             ; JMPZ 080b
0805: 0c                         ; RET
0806: 08 0e 08 00 00             ; JMP 080e
080b: 0e 01                      ; CLITERAL 1
080d: 11                         ; ADD
080e: 08 15 08 00 00             ; JMP 0815
0813: 05                         ; DROP
0814: 0c                         ; RET
0815: 08 f5 07 00 00             ; JMP 07f5
081a: 0c                         ; RET
;
081b: 18 09 f4 03 00             ; DICTP getOneWord (3f409)
0820: 06                         ; DUP
0821: 21                         ; DTOR
0822: 21                         ; DTOR
0823: 22                         ; RTOD
0824: 06                         ; DUP
0825: 21                         ; DTOR
0826: 0f                         ; CFETCH
0827: 0e 20                      ; CLITERAL 32
0829: 17                         ; GT
082a: 09 39 08 00 00             ; JMPZ 0839
082f: 22                         ; RTOD
0830: 0e 01                      ; CLITERAL 1
0832: 11                         ; ADD
0833: 21                         ; DTOR
0834: 08 51 08 00 00             ; JMP 0851
0839: 22                         ; RTOD
083a: 06                         ; DUP
083b: 21                         ; DTOR
083c: 0f                         ; CFETCH
083d: 09 4d 08 00 00             ; JMPZ 084d
0842: 0e 00                      ; CLITERAL 0
0844: 22                         ; RTOD
0845: 06                         ; DUP
0846: 21                         ; DTOR
0847: 10                         ; CSTORE
0848: 22                         ; RTOD
0849: 0e 01                      ; CLITERAL 1
084b: 11                         ; ADD
084c: 21                         ; DTOR
084d: 22                         ; RTOD
084e: 22                         ; RTOD
084f: 04                         ; SWAP
0850: 0c                         ; RET
0851: 08 23 08 00 00             ; JMP 0823
0856: 0c                         ; RET
;
0857: 18 f5 f3 03 00             ; DICTP DICT>NEXT (3f3f5)
085c: 0c                         ; RET
;
085d: 18 e3 f3 03 00             ; DICTP DICT>XT (3f3e3)
0862: 0e 04                      ; CLITERAL 4
0864: 11                         ; ADD
0865: 0c                         ; RET
;
0866: 18 ce f3 03 00             ; DICTP DICT>FLAGS (3f3ce)
086b: 0e 02                      ; CLITERAL 2
086d: 0e 04                      ; CLITERAL 4
086f: 13                         ; MUL
0870: 11                         ; ADD
0871: 0c                         ; RET
;
0872: 18 ba f3 03 00             ; DICTP DICT>NAME (3f3ba)
0877: 0b 66 08 00 00             ; CALL DICT>FLAGS (0866)
087c: 0e 01                      ; CLITERAL 1
087e: 11                         ; ADD
087f: 0c                         ; RET
;
0880: 18 a6 f3 03 00             ; DICTP NEXT>DICT (3f3a6)
0885: 0c                         ; RET
;
0886: 18 94 f3 03 00             ; DICTP XT>DICT (3f394)
088b: 0e 04                      ; CLITERAL 4
088d: 12                         ; SUB
088e: 0c                         ; RET
;
088f: 18 7f f3 03 00             ; DICTP FLAGS>DICT (3f37f)
0894: 0e 02                      ; CLITERAL 2
0896: 0e 04                      ; CLITERAL 4
0898: 13                         ; MUL
0899: 12                         ; SUB
089a: 0c                         ; RET
;
089b: 18 6b f3 03 00             ; DICTP NAME>DICT (3f36b)
08a0: 0e 01                      ; CLITERAL 1
08a2: 12                         ; SUB
08a3: 0e 02                      ; CLITERAL 2
08a5: 0e 04                      ; CLITERAL 4
08a7: 13                         ; MUL
08a8: 12                         ; SUB
08a9: 0c                         ; RET
;
08aa: 18 56 f3 03 00             ; DICTP DICT.GetXT (3f356)
08af: 0b 5d 08 00 00             ; CALL DICT>XT (085d)
08b4: 02                         ; FETCH
08b5: 0c                         ; RET
;
08b6: 18 3e f3 03 00             ; DICTP DICT.GetFLAGS (3f33e)
08bb: 0b 66 08 00 00             ; CALL DICT>FLAGS (0866)
08c0: 0f                         ; CFETCH
08c1: 0c                         ; RET
;
08c2: 18 29 f3 03 00             ; DICTP DICTP>NAME (3f329)
08c7: 0e 01                      ; CLITERAL 1
08c9: 11                         ; ADD
08ca: 02                         ; FETCH
08cb: 0b 72 08 00 00             ; CALL DICT>NAME (0872)
08d0: 0c                         ; RET
;
08d1: 18 13 f3 03 00             ; DICTP XT.GetDICTP (3f313)
08d6: 06                         ; DUP
08d7: 0f                         ; CFETCH
08d8: 0e 18                      ; CLITERAL 24
08da: 16                         ; EQ
08db: 09 e9 08 00 00             ; JMPZ 08e9
08e0: 0e 01                      ; CLITERAL 1
08e2: 11                         ; ADD
08e3: 02                         ; FETCH
08e4: 08 eb 08 00 00             ; JMP 08eb
08e9: 05                         ; DROP
08ea: fe                         ; RESET
08eb: 0c                         ; RET
;
08ec: 18 f6 f2 03 00             ; DICTP FLAGS.ISIMMEDIATE? (3f2f6)
08f1: 0e 01                      ; CLITERAL 1
08f3: 24                         ; AND
08f4: 0c                         ; RET
;
08f5: 18 dc f2 03 00             ; DICTP FLAGS.ISINLINE? (3f2dc)
08fa: 0e 02                      ; CLITERAL 2
08fc: 24                         ; AND
08fd: 0c                         ; RET
;
08fe: 18 c0 f2 03 00             ; DICTP DICT.GetIMMEDIATE (3f2c0)
0903: 0b b6 08 00 00             ; CALL DICT.GetFLAGS (08b6)
0908: 0b ec 08 00 00             ; CALL FLAGS.ISIMMEDIATE? (08ec)
090d: 0c                         ; RET
;
090e: 18 a7 f2 03 00             ; DICTP DICT.GetINLINE (3f2a7)
0913: 0b b6 08 00 00             ; CALL DICT.GetFLAGS (08b6)
0918: 0b f5 08 00 00             ; CALL FLAGS.ISINLINE? (08f5)
091d: 0c                         ; RET
;
091e: 18 92 f2 03 00             ; DICTP findInDict (3f292)
0923: 0e 14                      ; CLITERAL 20
0925: 02                         ; FETCH
0926: 21                         ; DTOR
0927: 22                         ; RTOD
0928: 06                         ; DUP
0929: 21                         ; DTOR
092a: 06                         ; DUP
092b: 09 56 09 00 00             ; JMPZ 0956
0930: 0b 72 08 00 00             ; CALL DICT>NAME (0872)
0935: 0e 01                      ; CLITERAL 1
0937: 11                         ; ADD
0938: 1a                         ; OVER
0939: 28                         ; COMPAREI
093a: 09 51 09 00 00             ; JMPZ 0951
093f: 05                         ; DROP
0940: 22                         ; RTOD
0941: 06                         ; DUP
0942: 21                         ; DTOR
0943: 0b aa 08 00 00             ; CALL DICT.GetXT (08aa)
0948: 22                         ; RTOD
0949: 0b b6 08 00 00             ; CALL DICT.GetFLAGS (08b6)
094e: 0e 01                      ; CLITERAL 1
0950: 0c                         ; RET
0951: 08 5e 09 00 00             ; JMP 095e
0956: 05                         ; DROP
0957: 05                         ; DROP
0958: 22                         ; RTOD
0959: 0e 00                      ; CLITERAL 0
095b: 0e 00                      ; CLITERAL 0
095d: 0c                         ; RET
095e: 22                         ; RTOD
095f: 02                         ; FETCH
0960: 21                         ; DTOR
0961: 08 27 09 00 00             ; JMP 0927
0966: 0c                         ; RET
;
0967: 18 81 f2 03 00             ; DICTP isHEX? (3f281)
096c: 0e 06                      ; CLITERAL 6
096e: 0f                         ; CFETCH
096f: 0e 10                      ; CLITERAL 16
0971: 16                         ; EQ
0972: 0c                         ; RET
;
0973: 18 6c f2 03 00             ; DICTP isNumChar? (3f26c)
0978: 06                         ; DUP
0979: 0e 30                      ; CLITERAL 48
097b: 0e 39                      ; CLITERAL 57
097d: 0b 6e 07 00 00             ; CALL BETWEEN (076e)
0982: 09 8d 09 00 00             ; JMPZ 098d
0987: 0e 30                      ; CLITERAL 48
0989: 12                         ; SUB
098a: 0e 01                      ; CLITERAL 1
098c: 0c                         ; RET
098d: 0b 67 09 00 00             ; CALL isHEX? (0967)
0992: 09 c1 09 00 00             ; JMPZ 09c1
0997: 06                         ; DUP
0998: 0e 41                      ; CLITERAL 65
099a: 0e 46                      ; CLITERAL 70
099c: 0b 6e 07 00 00             ; CALL BETWEEN (076e)
09a1: 09 ac 09 00 00             ; JMPZ 09ac
09a6: 0e 37                      ; CLITERAL 55
09a8: 12                         ; SUB
09a9: 0e 01                      ; CLITERAL 1
09ab: 0c                         ; RET
09ac: 06                         ; DUP
09ad: 0e 61                      ; CLITERAL 97
09af: 0e 66                      ; CLITERAL 102
09b1: 0b 6e 07 00 00             ; CALL BETWEEN (076e)
09b6: 09 c1 09 00 00             ; JMPZ 09c1
09bb: 0e 57                      ; CLITERAL 87
09bd: 12                         ; SUB
09be: 0e 01                      ; CLITERAL 1
09c0: 0c                         ; RET
09c1: 0e 00                      ; CLITERAL 0
09c3: 0c                         ; RET
;
09c4: 18 5b f2 03 00             ; DICTP NEGATE (3f25b)
09c9: 0e 00                      ; CLITERAL 0
09cb: 04                         ; SWAP
09cc: 12                         ; SUB
09cd: 0c                         ; RET
;
09ce: 18 4d f2 03 00             ; DICTP ABS (3f24d)
09d3: 06                         ; DUP
09d4: 0e 00                      ; CLITERAL 0
09d6: 15                         ; LT
09d7: 09 e1 09 00 00             ; JMPZ 09e1
09dc: 0b c4 09 00 00             ; CALL NEGATE (09c4)
09e1: 0c                         ; RET
;
09e2: 18 39 f2 03 00             ; DICTP isNumber? (3f239)
09e7: 06                         ; DUP
09e8: 0f                         ; CFETCH
09e9: 0e 2d                      ; CLITERAL 45
09eb: 16                         ; EQ
09ec: 06                         ; DUP
09ed: 0b fa 04 00 00             ; CALL isNeg (04fa)
09f2: 10                         ; CSTORE
09f3: 09 fb 09 00 00             ; JMPZ 09fb
09f8: 0e 01                      ; CLITERAL 1
09fa: 11                         ; ADD
09fb: 0e 00                      ; CLITERAL 0
09fd: 21                         ; DTOR
09fe: 06                         ; DUP
09ff: 0f                         ; CFETCH
0a00: 06                         ; DUP
0a01: 0e 00                      ; CLITERAL 0
0a03: 16                         ; EQ
0a04: 09 1f 0a 00 00             ; JMPZ 0a1f
0a09: 05                         ; DROP
0a0a: 05                         ; DROP
0a0b: 22                         ; RTOD
0a0c: 0b fa 04 00 00             ; CALL isNeg (04fa)
0a11: 0f                         ; CFETCH
0a12: 09 1c 0a 00 00             ; JMPZ 0a1c
0a17: 0b c4 09 00 00             ; CALL NEGATE (09c4)
0a1c: 0e 01                      ; CLITERAL 1
0a1e: 0c                         ; RET
0a1f: 0b 73 09 00 00             ; CALL isNumChar? (0973)
0a24: 09 38 0a 00 00             ; JMPZ 0a38
0a29: 22                         ; RTOD
0a2a: 0e 06                      ; CLITERAL 6
0a2c: 0f                         ; CFETCH
0a2d: 13                         ; MUL
0a2e: 11                         ; ADD
0a2f: 21                         ; DTOR
0a30: 0e 01                      ; CLITERAL 1
0a32: 11                         ; ADD
0a33: 08 3d 0a 00 00             ; JMP 0a3d
0a38: 05                         ; DROP
0a39: 22                         ; RTOD
0a3a: 0e 00                      ; CLITERAL 0
0a3c: 0c                         ; RET
0a3d: 08 fe 09 00 00             ; JMP 09fe
0a42: 0c                         ; RET
;
0a43: 18 2b f2 03 00             ; DICTP MOD (3f22b)
0a48: 1a                         ; OVER
0a49: 1a                         ; OVER
0a4a: 14                         ; DIV
0a4b: 13                         ; MUL
0a4c: 12                         ; SUB
0a4d: 0c                         ; RET
;
0a4e: 18 1c f2 03 00             ; DICTP /MOD (3f21c)
0a53: 1a                         ; OVER
0a54: 1a                         ; OVER
0a55: 14                         ; DIV
0a56: 21                         ; DTOR
0a57: 22                         ; RTOD
0a58: 06                         ; DUP
0a59: 21                         ; DTOR
0a5a: 13                         ; MUL
0a5b: 12                         ; SUB
0a5c: 22                         ; RTOD
0a5d: 04                         ; SWAP
0a5e: 0c                         ; RET
;
0a5f: 18 0e f2 03 00             ; DICTP (.) (3f20e)
0a64: 06                         ; DUP
0a65: 0e 00                      ; CLITERAL 0
0a67: 16                         ; EQ
0a68: 09 72 0a 00 00             ; JMPZ 0a72
0a6d: 05                         ; DROP
0a6e: 0e 30                      ; CLITERAL 48
0a70: 19                         ; EMIT
0a71: 0c                         ; RET
0a72: 06                         ; DUP
0a73: 0e 00                      ; CLITERAL 0
0a75: 15                         ; LT
0a76: 09 87 0a 00 00             ; JMPZ 0a87
0a7b: 0b c4 09 00 00             ; CALL NEGATE (09c4)
0a80: 0e 01                      ; CLITERAL 1
0a82: 08 89 0a 00 00             ; JMP 0a89
0a87: 0e 00                      ; CLITERAL 0
0a89: 21                         ; DTOR
0a8a: 0e 00                      ; CLITERAL 0
0a8c: 04                         ; SWAP
0a8d: 06                         ; DUP
0a8e: 09 b0 0a 00 00             ; JMPZ 0ab0
0a93: 0e 06                      ; CLITERAL 6
0a95: 0f                         ; CFETCH
0a96: 0b 4e 0a 00 00             ; CALL /MOD (0a4e)
0a9b: 0e 30                      ; CLITERAL 48
0a9d: 1a                         ; OVER
0a9e: 0e 09                      ; CLITERAL 9
0aa0: 17                         ; GT
0aa1: 09 a9 0a 00 00             ; JMPZ 0aa9
0aa6: 0e 07                      ; CLITERAL 7
0aa8: 11                         ; ADD
0aa9: 11                         ; ADD
0aaa: 04                         ; SWAP
0aab: 08 cd 0a 00 00             ; JMP 0acd
0ab0: 05                         ; DROP
0ab1: 22                         ; RTOD
0ab2: 09 ba 0a 00 00             ; JMPZ 0aba
0ab7: 0e 2d                      ; CLITERAL 45
0ab9: 19                         ; EMIT
0aba: 06                         ; DUP
0abb: 09 c6 0a 00 00             ; JMPZ 0ac6
0ac0: 19                         ; EMIT
0ac1: 08 c8 0a 00 00             ; JMP 0ac8
0ac6: 05                         ; DROP
0ac7: 0c                         ; RET
0ac8: 08 ba 0a 00 00             ; JMP 0aba
0acd: 08 8d 0a 00 00             ; JMP 0a8d
0ad2: 0c                         ; RET
;
0ad3: 18 02 f2 03 00             ; DICTP . (3f202)
0ad8: 0e 20                      ; CLITERAL 32
0ada: 19                         ; EMIT
0adb: 0b 5f 0a 00 00             ; CALL (.) (0a5f)
0ae0: 0c                         ; RET
;
0ae1: 18 f3 f1 03 00             ; DICTP HEX. (3f1f3)
0ae6: 0e 06                      ; CLITERAL 6
0ae8: 0f                         ; CFETCH
0ae9: 04                         ; SWAP
0aea: 0b 2e 04 00 00             ; CALL HEX (042e)
0aef: 06                         ; DUP
0af0: 0e 10                      ; CLITERAL 16
0af2: 15                         ; LT
0af3: 09 fb 0a 00 00             ; JMPZ 0afb
0af8: 0e 30                      ; CLITERAL 48
0afa: 19                         ; EMIT
0afb: 0b 5f 0a 00 00             ; CALL (.) (0a5f)
0b00: 0e 06                      ; CLITERAL 6
0b02: 10                         ; CSTORE
0b03: 0c                         ; RET
;
0b04: 18 e0 f1 03 00             ; DICTP DECIMAL. (3f1e0)
0b09: 0e 06                      ; CLITERAL 6
0b0b: 0f                         ; CFETCH
0b0c: 04                         ; SWAP
0b0d: 0b 39 04 00 00             ; CALL DECIMAL (0439)
0b12: 0b 5f 0a 00 00             ; CALL (.) (0a5f)
0b17: 0e 06                      ; CLITERAL 6
0b19: 10                         ; CSTORE
0b1a: 0c                         ; RET
;
0b1b: 18 ce f1 03 00             ; DICTP BINARY. (3f1ce)
0b20: 0e 06                      ; CLITERAL 6
0b22: 0f                         ; CFETCH
0b23: 04                         ; SWAP
0b24: 0b 4f 04 00 00             ; CALL BINARY (044f)
0b29: 0b 5f 0a 00 00             ; CALL (.) (0a5f)
0b2e: 0e 06                      ; CLITERAL 6
0b30: 10                         ; CSTORE
0b31: 0c                         ; RET
;
0b32: 18 c0 f1 03 00             ; DICTP MIN (3f1c0)
0b37: 1a                         ; OVER
0b38: 1a                         ; OVER
0b39: 17                         ; GT
0b3a: 09 40 0b 00 00             ; JMPZ 0b40
0b3f: 04                         ; SWAP
0b40: 05                         ; DROP
0b41: 0c                         ; RET
;
0b42: 18 b2 f1 03 00             ; DICTP MAX (3f1b2)
0b47: 1a                         ; OVER
0b48: 1a                         ; OVER
0b49: 15                         ; LT
0b4a: 09 50 0b 00 00             ; JMPZ 0b50
0b4f: 04                         ; SWAP
0b50: 05                         ; DROP
0b51: 0c                         ; RET
;
0b52: 18 a5 f1 03 00             ; DICTP .S (3f1a5)
0b57: 0e 20                      ; CLITERAL 32
0b59: 19                         ; EMIT
0b5a: 26                         ; DEPTH
0b5b: 0e 00                      ; CLITERAL 0
0b5d: 15                         ; LT
0b5e: 09 81 0b 00 00             ; JMPZ 0b81
0b63: 07 10 53 74 61 63 6b 20 75 6e 64 65 72 66 6c 6f 77 21 00 ; SLITERAL (0b64) [Stack underflow!]
0b76: 0b 38 06 00 00             ; CALL COUNT (0638)
0b7b: 0b c2 06 00 00             ; CALL TYPE (06c2)
0b80: fe                         ; RESET
0b81: 26                         ; DEPTH
0b82: 0e 00                      ; CLITERAL 0
0b84: 16                         ; EQ
0b85: 09 94 0b 00 00             ; JMPZ 0b94
0b8a: 0e 28                      ; CLITERAL 40
0b8c: 19                         ; EMIT
0b8d: 0e ed                      ; CLITERAL 237
0b8f: 19                         ; EMIT
0b90: 0e 29                      ; CLITERAL 41
0b92: 19                         ; EMIT
0b93: 0c                         ; RET
0b94: 0e 28                      ; CLITERAL 40
0b96: 19                         ; EMIT
0b97: 26                         ; DEPTH
0b98: 0e 01                      ; CLITERAL 1
0b9a: 12                         ; SUB
0b9b: 21                         ; DTOR
0b9c: 22                         ; RTOD
0b9d: 06                         ; DUP
0b9e: 21                         ; DTOR
0b9f: 25                         ; PICK
0ba0: 0b d3 0a 00 00             ; CALL . (0ad3)
0ba5: 22                         ; RTOD
0ba6: 06                         ; DUP
0ba7: 21                         ; DTOR
0ba8: 09 b7 0b 00 00             ; JMPZ 0bb7
0bad: 22                         ; RTOD
0bae: 0e 01                      ; CLITERAL 1
0bb0: 12                         ; SUB
0bb1: 21                         ; DTOR
0bb2: 08 c0 0b 00 00             ; JMP 0bc0
0bb7: 22                         ; RTOD
0bb8: 05                         ; DROP
0bb9: 0e 20                      ; CLITERAL 32
0bbb: 19                         ; EMIT
0bbc: 0e 29                      ; CLITERAL 41
0bbe: 19                         ; EMIT
0bbf: 0c                         ; RET
0bc0: 08 9c 0b 00 00             ; JMP 0b9c
0bc5: 0c                         ; RET
;
0bc6: 18 91 f1 03 00             ; DICTP .(MEM_SZ) (3f191)
0bcb: 07 08 4d 65 6d 6f 72 79 3a 20 00 ; SLITERAL (0bcc) [Memory: ]
0bd6: 0b e4 06 00 00             ; CALL CT (06e4)
0bdb: 0b 1a 05 00 00             ; CALL MEM_SZ (051a)
0be0: 06                         ; DUP
0be1: 0b e1 0a 00 00             ; CALL HEX. (0ae1)
0be6: 07 02 20 28 00             ; SLITERAL (0be7) [ (]
0beb: 0b e4 06 00 00             ; CALL CT (06e4)
0bf0: 0b 5f 0a 00 00             ; CALL (.) (0a5f)
0bf5: 07 01 29 00                ; SLITERAL (0bf6) [)]
0bf9: 0b e4 06 00 00             ; CALL CT (06e4)
0bfe: 0c                         ; RET
;
0bff: 18 7f f1 03 00             ; DICTP .(HERE) (3f17f)
0c04: 07 06 48 45 52 45 3a 20 00 ; SLITERAL (0c05) [HERE: ]
0c0d: 0b e4 06 00 00             ; CALL CT (06e4)
0c12: 0e 10                      ; CLITERAL 16
0c14: 02                         ; FETCH
0c15: 06                         ; DUP
0c16: 0b e1 0a 00 00             ; CALL HEX. (0ae1)
0c1b: 07 02 20 28 00             ; SLITERAL (0c1c) [ (]
0c20: 0b e4 06 00 00             ; CALL CT (06e4)
0c25: 0b 5f 0a 00 00             ; CALL (.) (0a5f)
0c2a: 07 01 29 00                ; SLITERAL (0c2b) [)]
0c2e: 0b e4 06 00 00             ; CALL CT (06e4)
0c33: 0c                         ; RET
;
0c34: 18 6d f1 03 00             ; DICTP .(LAST) (3f16d)
0c39: 07 06 4c 41 53 54 3a 20 00 ; SLITERAL (0c3a) [LAST: ]
0c42: 0b e4 06 00 00             ; CALL CT (06e4)
0c47: 0e 14                      ; CLITERAL 20
0c49: 02                         ; FETCH
0c4a: 06                         ; DUP
0c4b: 0b e1 0a 00 00             ; CALL HEX. (0ae1)
0c50: 07 02 20 28 00             ; SLITERAL (0c51) [ (]
0c55: 0b e4 06 00 00             ; CALL CT (06e4)
0c5a: 0b 5f 0a 00 00             ; CALL (.) (0a5f)
0c5f: 07 01 29 00                ; SLITERAL (0c60) [)]
0c63: 0b e4 06 00 00             ; CALL CT (06e4)
0c68: 0c                         ; RET
;
0c69: 18 57 f1 03 00             ; DICTP .WORD-SHORT (3f157)
0c6e: 06                         ; DUP
0c6f: 0b 72 08 00 00             ; CALL DICT>NAME (0872)
0c74: 0b e4 06 00 00             ; CALL CT (06e4)
0c79: 0e 20                      ; CLITERAL 32
0c7b: 19                         ; EMIT
0c7c: 02                         ; FETCH
0c7d: 0c                         ; RET
;
0c7e: 18 47 f1 03 00             ; DICTP WORDS (3f147)
0c83: 0e 14                      ; CLITERAL 20
0c85: 02                         ; FETCH
0c86: 06                         ; DUP
0c87: 02                         ; FETCH
0c88: 0e 00                      ; CLITERAL 0
0c8a: 16                         ; EQ
0c8b: 09 98 0c 00 00             ; JMPZ 0c98
0c90: 05                         ; DROP
0c91: 0e 0d                      ; CLITERAL 13
0c93: 19                         ; EMIT
0c94: 0e 0a                      ; CLITERAL 10
0c96: 19                         ; EMIT
0c97: 0c                         ; RET
0c98: 0b 69 0c 00 00             ; CALL .WORD-SHORT (0c69)
0c9d: 08 86 0c 00 00             ; JMP 0c86
0ca2: 0c                         ; RET
;
0ca3: 18 32 f1 03 00             ; DICTP .WORD-LONG (3f132)
0ca8: 06                         ; DUP
0ca9: 0b e1 0a 00 00             ; CALL HEX. (0ae1)
0cae: 0e 3a                      ; CLITERAL 58
0cb0: 19                         ; EMIT
0cb1: 0e 20                      ; CLITERAL 32
0cb3: 19                         ; EMIT
0cb4: 06                         ; DUP
0cb5: 0b 72 08 00 00             ; CALL DICT>NAME (0872)
0cba: 0b e4 06 00 00             ; CALL CT (06e4)
0cbf: 0e 20                      ; CLITERAL 32
0cc1: 19                         ; EMIT
0cc2: 06                         ; DUP
0cc3: 0b aa 08 00 00             ; CALL DICT.GetXT (08aa)
0cc8: 0e 28                      ; CLITERAL 40
0cca: 19                         ; EMIT
0ccb: 0b e1 0a 00 00             ; CALL HEX. (0ae1)
0cd0: 0e 29                      ; CLITERAL 41
0cd2: 19                         ; EMIT
0cd3: 06                         ; DUP
0cd4: 0b 66 08 00 00             ; CALL DICT>FLAGS (0866)
0cd9: 0f                         ; CFETCH
0cda: 06                         ; DUP
0cdb: 07 09 2c 20 46 6c 61 67 73 3a 20 00 ; SLITERAL (0cdc) [, Flags: ]
0ce7: 0b e4 06 00 00             ; CALL CT (06e4)
0cec: 0b e1 0a 00 00             ; CALL HEX. (0ae1)
0cf1: 06                         ; DUP
0cf2: 0b f5 08 00 00             ; CALL FLAGS.ISINLINE? (08f5)
0cf7: 09 0d 0d 00 00             ; JMPZ 0d0d
0cfc: 07 09 20 28 49 4e 4c 49 4e 45 29 00 ; SLITERAL (0cfd) [ (INLINE)]
0d08: 0b e4 06 00 00             ; CALL CT (06e4)
0d0d: 0b ec 08 00 00             ; CALL FLAGS.ISIMMEDIATE? (08ec)
0d12: 09 2b 0d 00 00             ; JMPZ 0d2b
0d17: 07 0c 20 28 49 4d 4d 45 44 49 41 54 45 29 00 ; SLITERAL (0d18) [ (IMMEDIATE)]
0d26: 0b e4 06 00 00             ; CALL CT (06e4)
0d2b: 0e 0d                      ; CLITERAL 13
0d2d: 19                         ; EMIT
0d2e: 0e 0a                      ; CLITERAL 10
0d30: 19                         ; EMIT
0d31: 02                         ; FETCH
0d32: 0c                         ; RET
;
0d33: 18 21 f1 03 00             ; DICTP WORDSV (3f121)
0d38: 0b 34 0c 00 00             ; CALL .(LAST) (0c34)
0d3d: 0e 0d                      ; CLITERAL 13
0d3f: 19                         ; EMIT
0d40: 0e 0a                      ; CLITERAL 10
0d42: 19                         ; EMIT
0d43: 0e 14                      ; CLITERAL 20
0d45: 02                         ; FETCH
0d46: 06                         ; DUP
0d47: 02                         ; FETCH
0d48: 0e 00                      ; CLITERAL 0
0d4a: 16                         ; EQ
0d4b: 09 58 0d 00 00             ; JMPZ 0d58
0d50: 05                         ; DROP
0d51: 0e 0d                      ; CLITERAL 13
0d53: 19                         ; EMIT
0d54: 0e 0a                      ; CLITERAL 10
0d56: 19                         ; EMIT
0d57: 0c                         ; RET
0d58: 0b a3 0c 00 00             ; CALL .WORD-LONG (0ca3)
0d5d: 08 46 0d 00 00             ; JMP 0d46
0d62: 0c                         ; RET
;
0d63: 18 0d f1 03 00             ; DICTP NUM-WORDS (3f10d)
0d68: 0e 00                      ; CLITERAL 0
0d6a: 21                         ; DTOR
0d6b: 0e 14                      ; CLITERAL 20
0d6d: 02                         ; FETCH
0d6e: 06                         ; DUP
0d6f: 02                         ; FETCH
0d70: 0e 00                      ; CLITERAL 0
0d72: 16                         ; EQ
0d73: 09 81 0d 00 00             ; JMPZ 0d81
0d78: 05                         ; DROP
0d79: 22                         ; RTOD
0d7a: 0e 0d                      ; CLITERAL 13
0d7c: 19                         ; EMIT
0d7d: 0e 0a                      ; CLITERAL 10
0d7f: 19                         ; EMIT
0d80: 0c                         ; RET
0d81: 22                         ; RTOD
0d82: 0e 01                      ; CLITERAL 1
0d84: 11                         ; ADD
0d85: 21                         ; DTOR
0d86: 02                         ; FETCH
0d87: 08 6e 0d 00 00             ; JMP 0d6e
0d8c: 0c                         ; RET
;
0d8d: 18 fc f0 03 00             ; DICTP .lastx (3f0fc)
0d92: 0e 0d                      ; CLITERAL 13
0d94: 19                         ; EMIT
0d95: 0e 0a                      ; CLITERAL 10
0d97: 19                         ; EMIT
0d98: 0e 14                      ; CLITERAL 20
0d9a: 02                         ; FETCH
0d9b: 04                         ; SWAP
0d9c: 0e 00                      ; CLITERAL 0
0d9e: 1a                         ; OVER
0d9f: 1a                         ; OVER
0da0: 17                         ; GT
0da1: 09 bd 0d 00 00             ; JMPZ 0dbd
0da6: 0b 71 05 00 00             ; CALL ROT (0571)
0dab: 0b a3 0c 00 00             ; CALL .WORD-LONG (0ca3)
0db0: 0b 7b 05 00 00             ; CALL -ROT (057b)
0db5: 0e 01                      ; CLITERAL 1
0db7: 11                         ; ADD
0db8: 08 c1 0d 00 00             ; JMP 0dc1
0dbd: 05                         ; DROP
0dbe: 05                         ; DROP
0dbf: 05                         ; DROP
0dc0: 0c                         ; RET
0dc1: 08 9e 0d 00 00             ; JMP 0d9e
0dc6: 0c                         ; RET
;
0dc7: 18 ea f0 03 00             ; DICTP EXECUTE (3f0ea)
0dcc: 22                         ; RTOD
0dcd: 05                         ; DROP
0dce: 21                         ; DTOR
0dcf: 0c                         ; RET
;
0dd0: 18 d7 f0 03 00             ; DICTP find.ret (3f0d7)
0dd5: 06                         ; DUP
0dd6: 0f                         ; CFETCH
0dd7: 0e 0c                      ; CLITERAL 12
0dd9: 16                         ; EQ
0dda: 09 e0 0d 00 00             ; JMPZ 0de0
0ddf: 0c                         ; RET
0de0: 0e 01                      ; CLITERAL 1
0de2: 11                         ; ADD
0de3: 08 d5 0d 00 00             ; JMP 0dd5
0de8: 0c                         ; RET
;
0de9: 18 c4 f0 03 00             ; DICTP (inline) (3f0c4)
0dee: 1a                         ; OVER
0def: 1a                         ; OVER
0df0: 15                         ; LT
0df1: 09 f7 0d 00 00             ; JMPZ 0df7
0df6: 04                         ; SWAP
0df7: 06                         ; DUP
0df8: 0f                         ; CFETCH
0df9: 0b 70 00 00 00             ; CALL C, (0070)
0dfe: 0e 01                      ; CLITERAL 1
0e00: 11                         ; ADD
0e01: 1a                         ; OVER
0e02: 1a                         ; OVER
0e03: 17                         ; GT
0e04: 0a f7 0d 00 00             ; JMPNZ 0df7
0e09: 05                         ; DROP
0e0a: 05                         ; DROP
0e0b: 0c                         ; RET
;
0e0c: 18 b4 f0 03 00             ; DICTP DOES> (3f0b4)
0e11: 22                         ; RTOD
0e12: 06                         ; DUP
0e13: 0b d0 0d 00 00             ; CALL find.ret (0dd0)
0e18: 06                         ; DUP
0e19: 21                         ; DTOR
0e1a: 0e 01                      ; CLITERAL 1
0e1c: 11                         ; ADD
0e1d: 0b e9 0d 00 00             ; CALL (inline) (0de9)
0e22: 0c                         ; RET
;
0e23: 18 9e f0 03 00             ; DICTP Copy.INLINE (3f09e)
0e28: 06                         ; DUP
0e29: 0f                         ; CFETCH
0e2a: 0e 18                      ; CLITERAL 24
0e2c: 16                         ; EQ
0e2d: 09 38 0e 00 00             ; JMPZ 0e38
0e32: 0e 01                      ; CLITERAL 1
0e34: 11                         ; ADD
0e35: 0e 04                      ; CLITERAL 4
0e37: 11                         ; ADD
0e38: 06                         ; DUP
0e39: 0b d0 0d 00 00             ; CALL find.ret (0dd0)
0e3e: 0b e9 0d 00 00             ; CALL (inline) (0de9)
0e43: 0c                         ; RET
;
0e44: 18 8d f0 03 00             ; DICTP strlen (3f08d)
0e49: 0e 00                      ; CLITERAL 0
0e4b: 04                         ; SWAP
0e4c: 04                         ; SWAP
0e4d: 1a                         ; OVER
0e4e: 0f                         ; CFETCH
0e4f: 06                         ; DUP
0e50: 09 5f 0e 00 00             ; JMPZ 0e5f
0e55: 05                         ; DROP
0e56: 0e 01                      ; CLITERAL 1
0e58: 11                         ; ADD
0e59: 04                         ; SWAP
0e5a: 0e 01                      ; CLITERAL 1
0e5c: 11                         ; ADD
0e5d: 0e 01                      ; CLITERAL 1
0e5f: 0a 4c 0e 00 00             ; JMPNZ 0e4c
0e64: 04                         ; SWAP
0e65: 05                         ; DROP
0e66: 0c                         ; RET
;
0e67: 18 7d f0 03 00             ; DICTP cstr, (3f07d)
0e6c: 06                         ; DUP
0e6d: 0f                         ; CFETCH
0e6e: 1a                         ; OVER
0e6f: 11                         ; ADD
0e70: 0e 01                      ; CLITERAL 1
0e72: 11                         ; ADD
0e73: 0e 01                      ; CLITERAL 1
0e75: 11                         ; ADD
0e76: 0b e9 0d 00 00             ; CALL (inline) (0de9)
0e7b: 0c                         ; RET
;
0e7c: 18 69 f0 03 00             ; DICTP [COMPILE] (3f069)
0e81: 0b f5 08 00 00             ; CALL FLAGS.ISINLINE? (08f5)
0e86: 09 95 0e 00 00             ; JMPZ 0e95
0e8b: 0b 23 0e 00 00             ; CALL Copy.INLINE (0e23)
0e90: 08 a1 0e 00 00             ; JMP 0ea1
0e95: 0e 0b                      ; CLITERAL 11
0e97: 0b 70 00 00 00             ; CALL C, (0070)
0e9c: 0b f0 03 00 00             ; CALL , (03f0)
0ea1: 0c                         ; RET
;
0ea2: 18 53 f0 03 00             ; DICTP executeWord (3f053)
0ea7: 21                         ; DTOR
0ea8: 22                         ; RTOD
0ea9: 06                         ; DUP
0eaa: 21                         ; DTOR
0eab: 0b 1e 09 00 00             ; CALL findInDict (091e)
0eb0: 09 ec 0e 00 00             ; JMPZ 0eec
0eb5: 22                         ; RTOD
0eb6: 05                         ; DROP
0eb7: 0b 84 04 00 00             ; CALL ?COMPILING (0484)
0ebc: 09 e1 0e 00 00             ; JMPZ 0ee1
0ec1: 06                         ; DUP
0ec2: 0b ec 08 00 00             ; CALL FLAGS.ISIMMEDIATE? (08ec)
0ec7: 09 d7 0e 00 00             ; JMPZ 0ed7
0ecc: 05                         ; DROP
0ecd: 0b c7 0d 00 00             ; CALL EXECUTE (0dc7)
0ed2: 08 dc 0e 00 00             ; JMP 0edc
0ed7: 0b 7c 0e 00 00             ; CALL [COMPILE] (0e7c)
0edc: 08 e7 0e 00 00             ; JMP 0ee7
0ee1: 05                         ; DROP
0ee2: 0b c7 0d 00 00             ; CALL EXECUTE (0dc7)
0ee7: 08 44 0f 00 00             ; JMP 0f44
0eec: 05                         ; DROP
0eed: 05                         ; DROP
0eee: 22                         ; RTOD
0eef: 06                         ; DUP
0ef0: 21                         ; DTOR
0ef1: 0b e2 09 00 00             ; CALL isNumber? (09e2)
0ef6: 09 36 0f 00 00             ; JMPZ 0f36
0efb: 0b 84 04 00 00             ; CALL ?COMPILING (0484)
0f00: 09 31 0f 00 00             ; JMPZ 0f31
0f05: 06                         ; DUP
0f06: 0e 00                      ; CLITERAL 0
0f08: 0e ff                      ; CLITERAL 255
0f0a: 0b 6e 07 00 00             ; CALL BETWEEN (076e)
0f0f: 09 25 0f 00 00             ; JMPZ 0f25
0f14: 0e 0e                      ; CLITERAL 14
0f16: 0b 70 00 00 00             ; CALL C, (0070)
0f1b: 0b 70 00 00 00             ; CALL C, (0070)
0f20: 08 31 0f 00 00             ; JMP 0f31
0f25: 0e 01                      ; CLITERAL 1
0f27: 0b 70 00 00 00             ; CALL C, (0070)
0f2c: 0b f0 03 00 00             ; CALL , (03f0)
0f31: 08 42 0f 00 00             ; JMP 0f42
0f36: 05                         ; DROP
0f37: 07 02 3f 3f 00             ; SLITERAL (0f38) [??]
0f3c: 0b e4 06 00 00             ; CALL CT (06e4)
0f41: fe                         ; RESET
0f42: 22                         ; RTOD
0f43: 05                         ; DROP
0f44: 0c                         ; RET
;
0f45: 18 3c f0 03 00             ; DICTP executeInput (3f03c)
0f4a: 0b ea 04 00 00             ; CALL >IN (04ea)
0f4f: 02                         ; FETCH
0f50: 0b f0 07 00 00             ; CALL skipWS (07f0)
0f55: 0b ea 04 00 00             ; CALL >IN (04ea)
0f5a: 03                         ; STORE
0f5b: 0b ea 04 00 00             ; CALL >IN (04ea)
0f60: 02                         ; FETCH
0f61: 0f                         ; CFETCH
0f62: 09 82 0f 00 00             ; JMPZ 0f82
0f67: 0b ea 04 00 00             ; CALL >IN (04ea)
0f6c: 02                         ; FETCH
0f6d: 0b 1b 08 00 00             ; CALL getOneWord (081b)
0f72: 0b ea 04 00 00             ; CALL >IN (04ea)
0f77: 03                         ; STORE
0f78: 0b a2 0e 00 00             ; CALL executeWord (0ea2)
0f7d: 08 83 0f 00 00             ; JMP 0f83
0f82: 0c                         ; RET
0f83: 08 4a 0f 00 00             ; JMP 0f4a
0f88: 0c                         ; RET
;
0f89: 18 2e f0 03 00             ; DICTP Pad (3f02e)
0f8e: 0e 14                      ; CLITERAL 20
0f90: 02                         ; FETCH
0f91: 0e c8                      ; CLITERAL 200
0f93: 12                         ; SUB
0f94: 06                         ; DUP
0f95: 0e 10                      ; CLITERAL 16
0f97: 02                         ; FETCH
0f98: 15                         ; LT
0f99: 09 b0 0f 00 00             ; JMPZ 0fb0
0f9e: 07 0e 4f 75 74 20 6f 66 20 4d 65 6d 6f 72 79 21 00 ; SLITERAL (0f9f) [Out of Memory!]
0faf: fe                         ; RESET
0fb0: 0c                         ; RET
;
0fb1: 18 13 f0 03 00             ; DICTP LoadingFromFile? (3f013)
0fb6: 0e 1c                      ; CLITERAL 28
0fb8: 02                         ; FETCH
0fb9: 0c                         ; RET
;
0fba: 18 f9 ef 03 00             ; DICTP getLineFromFile (3eff9)
0fbf: 0e c8                      ; CLITERAL 200
0fc1: 0e 1c                      ; CLITERAL 28
0fc3: 02                         ; FETCH
0fc4: 1e                         ; FREADLINE
0fc5: 0e 00                      ; CLITERAL 0
0fc7: 16                         ; EQ
0fc8: 09 d4 0f 00 00             ; JMPZ 0fd4
0fcd: 0e 1c                      ; CLITERAL 28
0fcf: 0b 64 04 00 00             ; CALL OFF (0464)
0fd4: 0c                         ; RET
;
0fd5: 18 e7 ef 03 00             ; DICTP getLine (3efe7)
0fda: 0e 00                      ; CLITERAL 0
0fdc: 0b 89 0f 00 00             ; CALL Pad (0f89)
0fe1: 06                         ; DUP
0fe2: 0e 01                      ; CLITERAL 1
0fe4: 11                         ; ADD
0fe5: 0b ea 04 00 00             ; CALL >IN (04ea)
0fea: 03                         ; STORE
0feb: 10                         ; CSTORE
0fec: 0b b1 0f 00 00             ; CALL LoadingFromFile? (0fb1)
0ff1: 09 01 10 00 00             ; JMPZ 1001
0ff6: 0b 89 0f 00 00             ; CALL Pad (0f89)
0ffb: 0b ba 0f 00 00             ; CALL getLineFromFile (0fba)
1000: 0c                         ; RET
1001: 0e 00                      ; CLITERAL 0
1003: 0b ea 04 00 00             ; CALL >IN (04ea)
1008: 02                         ; FETCH
1009: 10                         ; CSTORE
100a: 27                         ; GETCH
100b: 06                         ; DUP
100c: 0e 0d                      ; CLITERAL 13
100e: 16                         ; EQ
100f: 09 1e 10 00 00             ; JMPZ 101e
1014: 05                         ; DROP
1015: 0b 89 0f 00 00             ; CALL Pad (0f89)
101a: 0e 20                      ; CLITERAL 32
101c: 19                         ; EMIT
101d: 0c                         ; RET
101e: 06                         ; DUP
101f: 0e 09                      ; CLITERAL 9
1021: 16                         ; EQ
1022: 09 2a 10 00 00             ; JMPZ 102a
1027: 05                         ; DROP
1028: 0e 20                      ; CLITERAL 32
102a: 06                         ; DUP
102b: 0e 03                      ; CLITERAL 3
102d: 16                         ; EQ
102e: 09 34 10 00 00             ; JMPZ 1034
1033: ff                         ; BYE
1034: 06                         ; DUP
1035: 0e 08                      ; CLITERAL 8
1037: 16                         ; EQ
1038: 09 70 10 00 00             ; JMPZ 1070
103d: 0b 89 0f 00 00             ; CALL Pad (0f89)
1042: 0f                         ; CFETCH
1043: 0e 00                      ; CLITERAL 0
1045: 17                         ; GT
1046: 09 6a 10 00 00             ; JMPZ 106a
104b: 0b 89 0f 00 00             ; CALL Pad (0f89)
1050: 0b c3 05 00 00             ; CALL C-- (05c3)
1055: 0b ea 04 00 00             ; CALL >IN (04ea)
105a: 0b a9 05 00 00             ; CALL -- (05a9)
105f: 06                         ; DUP
1060: 19                         ; EMIT
1061: 0e 20                      ; CLITERAL 32
1063: 19                         ; EMIT
1064: 19                         ; EMIT
1065: 08 6b 10 00 00             ; JMP 106b
106a: 05                         ; DROP
106b: 08 a2 10 00 00             ; JMP 10a2
1070: 06                         ; DUP
1071: 0e 20                      ; CLITERAL 32
1073: 0e 7f                      ; CLITERAL 127
1075: 0b 6e 07 00 00             ; CALL BETWEEN (076e)
107a: 09 a1 10 00 00             ; JMPZ 10a1
107f: 06                         ; DUP
1080: 19                         ; EMIT
1081: 0b ea 04 00 00             ; CALL >IN (04ea)
1086: 02                         ; FETCH
1087: 10                         ; CSTORE
1088: 0b ea 04 00 00             ; CALL >IN (04ea)
108d: 0b 9c 05 00 00             ; CALL ++ (059c)
1092: 0b 89 0f 00 00             ; CALL Pad (0f89)
1097: 0b b6 05 00 00             ; CALL C++ (05b6)
109c: 08 a2 10 00 00             ; JMP 10a2
10a1: 05                         ; DROP
10a2: 08 01 10 00 00             ; JMP 1001
10a7: 0c                         ; RET
;
10a8: 18 d4 ef 03 00             ; DICTP strcpy2c (3efd4)
10ad: 06                         ; DUP
10ae: 21                         ; DTOR
10af: 0e 00                      ; CLITERAL 0
10b1: 1a                         ; OVER
10b2: 10                         ; CSTORE
10b3: 0e 01                      ; CLITERAL 1
10b5: 11                         ; ADD
10b6: 04                         ; SWAP
10b7: 06                         ; DUP
10b8: 0f                         ; CFETCH
10b9: 06                         ; DUP
10ba: 09 d8 10 00 00             ; JMPZ 10d8
10bf: 0e 02                      ; CLITERAL 2
10c1: 25                         ; PICK
10c2: 10                         ; CSTORE
10c3: 04                         ; SWAP
10c4: 0e 01                      ; CLITERAL 1
10c6: 11                         ; ADD
10c7: 04                         ; SWAP
10c8: 0e 01                      ; CLITERAL 1
10ca: 11                         ; ADD
10cb: 22                         ; RTOD
10cc: 06                         ; DUP
10cd: 21                         ; DTOR
10ce: 0b b6 05 00 00             ; CALL C++ (05b6)
10d3: 08 e2 10 00 00             ; JMP 10e2
10d8: 0b 71 05 00 00             ; CALL ROT (0571)
10dd: 10                         ; CSTORE
10de: 05                         ; DROP
10df: 22                         ; RTOD
10e0: 05                         ; DROP
10e1: 0c                         ; RET
10e2: 08 b7 10 00 00             ; JMP 10b7
10e7: 0c                         ; RET
;
10e8: 18 be ef 03 00             ; DICTP Define-Word (3efbe)
10ed: 0e 14                      ; CLITERAL 20
10ef: 02                         ; FETCH
10f0: 1a                         ; OVER
10f1: 0b 44 0e 00 00             ; CALL strlen (0e44)
10f6: 0e 02                      ; CLITERAL 2
10f8: 0e 04                      ; CLITERAL 4
10fa: 13                         ; MUL
10fb: 0e 03                      ; CLITERAL 3
10fd: 11                         ; ADD
10fe: 11                         ; ADD
10ff: 12                         ; SUB
1100: 06                         ; DUP
1101: 21                         ; DTOR
1102: 21                         ; DTOR
1103: 0e 14                      ; CLITERAL 20
1105: 02                         ; FETCH
1106: 22                         ; RTOD
1107: 06                         ; DUP
1108: 21                         ; DTOR
1109: 03                         ; STORE
110a: 22                         ; RTOD
110b: 0e 04                      ; CLITERAL 4
110d: 11                         ; ADD
110e: 21                         ; DTOR
110f: 0e 10                      ; CLITERAL 16
1111: 02                         ; FETCH
1112: 22                         ; RTOD
1113: 06                         ; DUP
1114: 21                         ; DTOR
1115: 03                         ; STORE
1116: 22                         ; RTOD
1117: 0e 04                      ; CLITERAL 4
1119: 11                         ; ADD
111a: 21                         ; DTOR
111b: 0e 00                      ; CLITERAL 0
111d: 22                         ; RTOD
111e: 06                         ; DUP
111f: 21                         ; DTOR
1120: 10                         ; CSTORE
1121: 22                         ; RTOD
1122: 0e 01                      ; CLITERAL 1
1124: 11                         ; ADD
1125: 21                         ; DTOR
1126: 22                         ; RTOD
1127: 0b a8 10 00 00             ; CALL strcpy2c (10a8)
112c: 22                         ; RTOD
112d: 0e 14                      ; CLITERAL 20
112f: 03                         ; STORE
1130: 0c                         ; RET
;
1131: 18 a8 ef 03 00             ; DICTP CREATE-NAME (3efa8)
1136: 0b ea 04 00 00             ; CALL >IN (04ea)
113b: 02                         ; FETCH
113c: 0b f0 07 00 00             ; CALL skipWS (07f0)
1141: 0b ea 04 00 00             ; CALL >IN (04ea)
1146: 03                         ; STORE
1147: 0b ea 04 00 00             ; CALL >IN (04ea)
114c: 02                         ; FETCH
114d: 0f                         ; CFETCH
114e: 09 86 11 00 00             ; JMPZ 1186
1153: 0b ea 04 00 00             ; CALL >IN (04ea)
1158: 02                         ; FETCH
1159: 0b 1b 08 00 00             ; CALL getOneWord (081b)
115e: 0b ea 04 00 00             ; CALL >IN (04ea)
1163: 03                         ; STORE
1164: 06                         ; DUP
1165: 0f                         ; CFETCH
1166: 09 84 11 00 00             ; JMPZ 1184
116b: 0b e8 10 00 00             ; CALL Define-Word (10e8)
1170: 0e 18                      ; CLITERAL 24
1172: 0b 70 00 00 00             ; CALL C, (0070)
1177: 0e 14                      ; CLITERAL 20
1179: 02                         ; FETCH
117a: 0b f0 03 00 00             ; CALL , (03f0)
117f: 08 86 11 00 00             ; JMP 1186
1184: 05                         ; DROP
1185: fe                         ; RESET
1186: 0c                         ; RET
;
1187: 18 9c ef 03 00             ; DICTP : (3ef9c)
118c: 0b 31 11 00 00             ; CALL CREATE-NAME (1131)
1191: 0e 20                      ; CLITERAL 32
1193: 0b 5a 04 00 00             ; CALL ON (045a)
1198: 0c                         ; RET
;
1199: 18 8a ef 03 00             ; DICTP :NONAME (3ef8a)
119e: 0e 10                      ; CLITERAL 16
11a0: 02                         ; FETCH
11a1: 0e 20                      ; CLITERAL 32
11a3: 0b 5a 04 00 00             ; CALL ON (045a)
11a8: 0c                         ; RET
;
11a9: 18 7e ef 03 00             ; DICTP ; (3ef7e)
11ae: 0e 0c                      ; CLITERAL 12
11b0: 0b 70 00 00 00             ; CALL C, (0070)
11b5: 0e 20                      ; CLITERAL 32
11b7: 0b 64 04 00 00             ; CALL OFF (0464)
11bc: 0c                         ; RET
;
11bd: 18 69 ef 03 00             ; DICTP ForgetLast (3ef69)
11c2: 0e 14                      ; CLITERAL 20
11c4: 02                         ; FETCH
11c5: 0e 04                      ; CLITERAL 4
11c7: 11                         ; ADD
11c8: 02                         ; FETCH
11c9: 0e 10                      ; CLITERAL 16
11cb: 03                         ; STORE
11cc: 0e 14                      ; CLITERAL 20
11ce: 02                         ; FETCH
11cf: 02                         ; FETCH
11d0: 0e 14                      ; CLITERAL 20
11d2: 03                         ; STORE
11d3: 0c                         ; RET
;
11d4: 18 54 ef 03 00             ; DICTP resetState (3ef54)
11d9: 0b 84 04 00 00             ; CALL ?COMPILING (0484)
11de: 09 e8 11 00 00             ; JMPZ 11e8
11e3: 0b bd 11 00 00             ; CALL ForgetLast (11bd)
11e8: 0e 20                      ; CLITERAL 32
11ea: 0b 64 04 00 00             ; CALL OFF (0464)
11ef: 0b 39 04 00 00             ; CALL DECIMAL (0439)
11f4: 0c                         ; RET
;
11f5: 18 44 ef 03 00             ; DICTP ALLOT (3ef44)
11fa: 0e 10                      ; CLITERAL 16
11fc: 02                         ; FETCH
11fd: 11                         ; ADD
11fe: 0e 10                      ; CLITERAL 16
1200: 03                         ; STORE
1201: 0c                         ; RET
;
1202: 18 38 ef 03 00             ; DICTP ? (3ef38)
1207: 02                         ; FETCH
1208: 0b d3 0a 00 00             ; CALL . (0ad3)
120d: 0c                         ; RET
;
120e: 18 2b ef 03 00             ; DICTP C? (3ef2b)
1213: 0f                         ; CFETCH
1214: 0b d3 0a 00 00             ; CALL . (0ad3)
1219: 0c                         ; RET
;
121a: 18 1c ef 03 00             ; DICTP FREE (3ef1c)
121f: 0e 14                      ; CLITERAL 20
1221: 02                         ; FETCH
1222: 0e 10                      ; CLITERAL 16
1224: 02                         ; FETCH
1225: 12                         ; SUB
1226: 0c                         ; RET
;
1227: 18 0c ef 03 00             ; DICTP FREE? (3ef0c)
122c: 0b 1a 12 00 00             ; CALL FREE (121a)
1231: 0b 5f 0a 00 00             ; CALL (.) (0a5f)
1236: 07 0c 20 62 79 74 65 73 20 66 72 65 65 2e 00 ; SLITERAL (1237) [ bytes free.]
1245: 0b e4 06 00 00             ; CALL CT (06e4)
124a: 0c                         ; RET
;
124b: 18 f9 ee 03 00             ; DICTP mainLoop (3eef9)
1250: 0b d4 11 00 00             ; CALL resetState (11d4)
1255: 0b 96 07 00 00             ; CALL tmp-init (0796)
125a: 0b 84 04 00 00             ; CALL ?COMPILING (0484)
125f: 0e 00                      ; CLITERAL 0
1261: 16                         ; EQ
1262: 09 77 12 00 00             ; JMPZ 1277
1267: 07 03 20 4f 4b 00          ; SLITERAL (1268) [ OK]
126d: 0b e4 06 00 00             ; CALL CT (06e4)
1272: 0b 52 0b 00 00             ; CALL .S (0b52)
1277: 0e 0d                      ; CLITERAL 13
1279: 19                         ; EMIT
127a: 0e 0a                      ; CLITERAL 10
127c: 19                         ; EMIT
127d: 0b d5 0f 00 00             ; CALL getLine (0fd5)
1282: 0e 01                      ; CLITERAL 1
1284: 11                         ; ADD
1285: 0b ea 04 00 00             ; CALL >IN (04ea)
128a: 03                         ; STORE
128b: 0b 45 0f 00 00             ; CALL executeInput (0f45)
1290: 0e 20                      ; CLITERAL 32
1292: 19                         ; EMIT
1293: 08 55 12 00 00             ; JMP 1255
1298: 0c                         ; RET
;
1299: 18 ea ee 03 00             ; DICTP main (3eeea)
129e: 0e 20                      ; CLITERAL 32
12a0: 02                         ; FETCH
12a1: 0e 63                      ; CLITERAL 99
12a3: 16                         ; EQ
12a4: 09 be 12 00 00             ; JMPZ 12be
12a9: 0e 20                      ; CLITERAL 32
12ab: 0b 64 04 00 00             ; CALL OFF (0464)
12b0: 07 06 48 65 6c 6c 6f 2e 00 ; SLITERAL (12b1) [Hello.]
12b9: 0b e4 06 00 00             ; CALL CT (06e4)
12be: 0b 4b 12 00 00             ; CALL mainLoop (124b)
12c3: 0c                         ; RET
;
12c4: 18 d3 ee 03 00             ; DICTP file-getLine (3eed3)
12c9: 0b 89 0f 00 00             ; CALL Pad (0f89)
12ce: 04                         ; SWAP
12cf: 0e c8                      ; CLITERAL 200
12d1: 04                         ; SWAP
12d2: 1e                         ; FREADLINE
12d3: 0b 89 0f 00 00             ; CALL Pad (0f89)
12d8: 04                         ; SWAP
12d9: 0c                         ; RET
;
12da: 18 c4 ee 03 00             ; DICTP load (3eec4)
12df: 0e 00                      ; CLITERAL 0
12e1: 0e 00                      ; CLITERAL 0
12e3: 1c                         ; FOPEN
12e4: 0e 00                      ; CLITERAL 0
12e6: 16                         ; EQ
12e7: 09 06 13 00 00             ; JMPZ 1306
12ec: 07 11 43 61 6e 6e 6f 74 20 6f 70 65 6e 20 66 69 6c 65 2e 00 ; SLITERAL (12ed) [Cannot open file.]
1300: 0b e4 06 00 00             ; CALL CT (06e4)
1305: 0c                         ; RET
1306: 0e 1c                      ; CLITERAL 28
1308: 03                         ; STORE
1309: 0e 1c                      ; CLITERAL 28
130b: 02                         ; FETCH
130c: 0b c4 12 00 00             ; CALL file-getLine (12c4)
1311: 09 29 13 00 00             ; JMPZ 1329
1316: 0e 01                      ; CLITERAL 1
1318: 11                         ; ADD
1319: 0b ea 04 00 00             ; CALL >IN (04ea)
131e: 03                         ; STORE
131f: 0b 45 0f 00 00             ; CALL executeInput (0f45)
1324: 08 36 13 00 00             ; JMP 1336
1329: 05                         ; DROP
132a: 0e 1c                      ; CLITERAL 28
132c: 02                         ; FETCH
132d: 20                         ; FCLOSE
132e: 0e 1c                      ; CLITERAL 28
1330: 0b 64 04 00 00             ; CALL OFF (0464)
1335: 0c                         ; RET
1336: 08 09 13 00 00             ; JMP 1309
133b: 0c                         ; RET
;
133c: 18 b0 ee 03 00             ; DICTP STR.EMPTY (3eeb0)
1341: 0e 00                      ; CLITERAL 0
1343: 1a                         ; OVER
1344: 03                         ; STORE
1345: 0c                         ; RET
;
1346: 18 9e ee 03 00             ; DICTP STR.LEN (3ee9e)
134b: 06                         ; DUP
134c: 0f                         ; CFETCH
134d: 0c                         ; RET
;
134e: 18 8b ee 03 00             ; DICTP STR.CATC (3ee8b)
1353: 1a                         ; OVER
1354: 06                         ; DUP
1355: 0b b6 05 00 00             ; CALL C++ (05b6)
135a: 06                         ; DUP
135b: 0f                         ; CFETCH
135c: 11                         ; ADD
135d: 0e 00                      ; CLITERAL 0
135f: 1a                         ; OVER
1360: 0e 01                      ; CLITERAL 1
1362: 11                         ; ADD
1363: 10                         ; CSTORE
1364: 10                         ; CSTORE
1365: 0c                         ; RET
;
1366: 18 74 ee 03 00             ; DICTP STR.NULLTERM (3ee74)
136b: 06                         ; DUP
136c: 06                         ; DUP
136d: 0f                         ; CFETCH
136e: 11                         ; ADD
136f: 0e 01                      ; CLITERAL 1
1371: 11                         ; ADD
1372: 0e 00                      ; CLITERAL 0
1374: 04                         ; SWAP
1375: 10                         ; CSTORE
1376: 0c                         ; RET
;
1377: 18 67 ee 03 00             ; DICTP I" (3ee67)
137c: 0e 10                      ; CLITERAL 16
137e: 02                         ; FETCH
137f: 0e 64                      ; CLITERAL 100
1381: 11                         ; ADD
1382: 0e 00                      ; CLITERAL 0
1384: 1a                         ; OVER
1385: 03                         ; STORE
1386: 0b ea 04 00 00             ; CALL >IN (04ea)
138b: 02                         ; FETCH
138c: 0f                         ; CFETCH
138d: 06                         ; DUP
138e: 0e 00                      ; CLITERAL 0
1390: 16                         ; EQ
1391: 09 b2 13 00 00             ; JMPZ 13b2
1396: 07 10 6d 69 73 73 69 6e 67 20 63 6c 6f 73 69 6e 67 20 00 ; SLITERAL (1397) [missing closing ]
13a9: 0b e4 06 00 00             ; CALL CT (06e4)
13ae: 0e 22                      ; CLITERAL 34
13b0: 19                         ; EMIT
13b1: fe                         ; RESET
13b2: 0b ea 04 00 00             ; CALL >IN (04ea)
13b7: 0b 9c 05 00 00             ; CALL ++ (059c)
13bc: 06                         ; DUP
13bd: 0e 22                      ; CLITERAL 34
13bf: 16                         ; EQ
13c0: 09 c7 13 00 00             ; JMPZ 13c7
13c5: 05                         ; DROP
13c6: 0c                         ; RET
13c7: 0b 4e 13 00 00             ; CALL STR.CATC (134e)
13cc: 08 86 13 00 00             ; JMP 1386
13d1: 0c                         ; RET
;
13d2: 18 5b ee 03 00             ; DICTP " (3ee5b)
13d7: 0b 84 04 00 00             ; CALL ?COMPILING (0484)
13dc: 0e 00                      ; CLITERAL 0
13de: 16                         ; EQ
13df: 09 ea 13 00 00             ; JMPZ 13ea
13e4: 0b 77 13 00 00             ; CALL I" (1377)
13e9: 0c                         ; RET
13ea: 0e 07                      ; CLITERAL 7
13ec: 0b 70 00 00 00             ; CALL C, (0070)
13f1: 0e 10                      ; CLITERAL 16
13f3: 02                         ; FETCH
13f4: 0e 00                      ; CLITERAL 0
13f6: 0b 70 00 00 00             ; CALL C, (0070)
13fb: 0b ea 04 00 00             ; CALL >IN (04ea)
1400: 02                         ; FETCH
1401: 0f                         ; CFETCH
1402: 06                         ; DUP
1403: 0e 00                      ; CLITERAL 0
1405: 16                         ; EQ
1406: 09 32 14 00 00             ; JMPZ 1432
140b: 05                         ; DROP
140c: 0e 01                      ; CLITERAL 1
140e: 12                         ; SUB
140f: 0e 10                      ; CLITERAL 16
1411: 03                         ; STORE
1412: 07 11 6d 69 73 73 69 6e 67 20 63 6c 6f 73 69 6e 67 20 27 00 ; SLITERAL (1413) [missing closing ']
1426: 0b e4 06 00 00             ; CALL CT (06e4)
142b: 0e 22                      ; CLITERAL 34
142d: 19                         ; EMIT
142e: 0e 27                      ; CLITERAL 39
1430: 19                         ; EMIT
1431: fe                         ; RESET
1432: 0b ea 04 00 00             ; CALL >IN (04ea)
1437: 0b 9c 05 00 00             ; CALL ++ (059c)
143c: 06                         ; DUP
143d: 0e 22                      ; CLITERAL 34
143f: 16                         ; EQ
1440: 09 58 14 00 00             ; JMPZ 1458
1445: 05                         ; DROP
1446: 0e 10                      ; CLITERAL 16
1448: 02                         ; FETCH
1449: 0e 00                      ; CLITERAL 0
144b: 0b 70 00 00 00             ; CALL C, (0070)
1450: 1a                         ; OVER
1451: 12                         ; SUB
1452: 0e 01                      ; CLITERAL 1
1454: 12                         ; SUB
1455: 04                         ; SWAP
1456: 10                         ; CSTORE
1457: 0c                         ; RET
1458: 0b 70 00 00 00             ; CALL C, (0070)
145d: 08 fb 13 00 00             ; JMP 13fb
1462: 0c                         ; RET
;
1463: 18 4e ee 03 00             ; DICTP ll (3ee4e)
1468: 07 09 6c 6f 61 64 73 2e 34 74 68 00 ; SLITERAL (1469) [loads.4th]
1474: 0b da 12 00 00             ; CALL load (12da)
1479: 0c                         ; RET
;
147a: 18 3a ee 03 00             ; DICTP sys-stats (3ee3a)
147f: 0b c6 0b 00 00             ; CALL .(MEM_SZ) (0bc6)
1484: 0e 2c                      ; CLITERAL 44
1486: 19                         ; EMIT
1487: 0e 20                      ; CLITERAL 32
1489: 19                         ; EMIT
148a: 0b ff 0b 00 00             ; CALL .(HERE) (0bff)
148f: 0e 2c                      ; CLITERAL 44
1491: 19                         ; EMIT
1492: 0e 20                      ; CLITERAL 32
1494: 19                         ; EMIT
1495: 0b 34 0c 00 00             ; CALL .(LAST) (0c34)
149a: 0e 2c                      ; CLITERAL 44
149c: 19                         ; EMIT
149d: 0e 20                      ; CLITERAL 32
149f: 19                         ; EMIT
14a0: 0b 27 12 00 00             ; CALL FREE? (1227)
14a5: 0e 0d                      ; CLITERAL 13
14a7: 19                         ; EMIT
14a8: 0e 0a                      ; CLITERAL 10
14aa: 19                         ; EMIT
14ab: 0c                         ; RET
;
; End of code, Dictionary:
;
3ee3a: 4e ee 03 00               ; sys-stats - (next: 3ee4e ll)
3ee3e: 7a 14 00 00 00            ; XT=147a, flags=00
3ee43: 09 73 79 73 2d 73 74 61 74 73 00 ; 9, sys-stats
;
3ee4e: 5b ee 03 00               ; ll - (next: 3ee5b ")
3ee52: 63 14 00 00 00            ; XT=1463, flags=00
3ee57: 02 6c 6c 00               ; 2, ll
;
3ee5b: 67 ee 03 00               ; " - (next: 3ee67 I")
3ee5f: d2 13 00 00 01            ; XT=13d2, flags=01
3ee64: 01 22 00                  ; 1, "
;
3ee67: 74 ee 03 00               ; I" - (next: 3ee74 STR.NULLTERM)
3ee6b: 77 13 00 00 00            ; XT=1377, flags=00
3ee70: 02 49 22 00               ; 2, I"
;
3ee74: 8b ee 03 00               ; STR.NULLTERM - (next: 3ee8b STR.CATC)
3ee78: 66 13 00 00 00            ; XT=1366, flags=00
3ee7d: 0c 53 54 52 2e 4e 55 4c 4c 54 45 52 4d 00 ; 12, STR.NULLTERM
;
3ee8b: 9e ee 03 00               ; STR.CATC - (next: 3ee9e STR.LEN)
3ee8f: 4e 13 00 00 00            ; XT=134e, flags=00
3ee94: 08 53 54 52 2e 43 41 54 43 00 ; 8, STR.CATC
;
3ee9e: b0 ee 03 00               ; STR.LEN - (next: 3eeb0 STR.EMPTY)
3eea2: 46 13 00 00 02            ; XT=1346, flags=02
3eea7: 07 53 54 52 2e 4c 45 4e 00 ; 7, STR.LEN
;
3eeb0: c4 ee 03 00               ; STR.EMPTY - (next: 3eec4 load)
3eeb4: 3c 13 00 00 02            ; XT=133c, flags=02
3eeb9: 09 53 54 52 2e 45 4d 50 54 59 00 ; 9, STR.EMPTY
;
3eec4: d3 ee 03 00               ; load - (next: 3eed3 file-getLine)
3eec8: da 12 00 00 00            ; XT=12da, flags=00
3eecd: 04 6c 6f 61 64 00         ; 4, load
;
3eed3: ea ee 03 00               ; file-getLine - (next: 3eeea main)
3eed7: c4 12 00 00 00            ; XT=12c4, flags=00
3eedc: 0c 66 69 6c 65 2d 67 65 74 4c 69 6e 65 00 ; 12, file-getLine
;
3eeea: f9 ee 03 00               ; main - (next: 3eef9 mainLoop)
3eeee: 99 12 00 00 00            ; XT=1299, flags=00
3eef3: 04 6d 61 69 6e 00         ; 4, main
;
3eef9: 0c ef 03 00               ; mainLoop - (next: 3ef0c FREE?)
3eefd: 4b 12 00 00 00            ; XT=124b, flags=00
3ef02: 08 6d 61 69 6e 4c 6f 6f 70 00 ; 8, mainLoop
;
3ef0c: 1c ef 03 00               ; FREE? - (next: 3ef1c FREE)
3ef10: 27 12 00 00 00            ; XT=1227, flags=00
3ef15: 05 46 52 45 45 3f 00      ; 5, FREE?
;
3ef1c: 2b ef 03 00               ; FREE - (next: 3ef2b C?)
3ef20: 1a 12 00 00 00            ; XT=121a, flags=00
3ef25: 04 46 52 45 45 00         ; 4, FREE
;
3ef2b: 38 ef 03 00               ; C? - (next: 3ef38 ?)
3ef2f: 0e 12 00 00 00            ; XT=120e, flags=00
3ef34: 02 43 3f 00               ; 2, C?
;
3ef38: 44 ef 03 00               ; ? - (next: 3ef44 ALLOT)
3ef3c: 02 12 00 00 00            ; XT=1202, flags=00
3ef41: 01 3f 00                  ; 1, ?
;
3ef44: 54 ef 03 00               ; ALLOT - (next: 3ef54 resetState)
3ef48: f5 11 00 00 00            ; XT=11f5, flags=00
3ef4d: 05 41 4c 4c 4f 54 00      ; 5, ALLOT
;
3ef54: 69 ef 03 00               ; resetState - (next: 3ef69 ForgetLast)
3ef58: d4 11 00 00 00            ; XT=11d4, flags=00
3ef5d: 0a 72 65 73 65 74 53 74 61 74 65 00 ; 10, resetState
;
3ef69: 7e ef 03 00               ; ForgetLast - (next: 3ef7e ;)
3ef6d: bd 11 00 00 00            ; XT=11bd, flags=00
3ef72: 0a 46 6f 72 67 65 74 4c 61 73 74 00 ; 10, ForgetLast
;
3ef7e: 8a ef 03 00               ; ; - (next: 3ef8a :NONAME)
3ef82: a9 11 00 00 01            ; XT=11a9, flags=01
3ef87: 01 3b 00                  ; 1, ;
;
3ef8a: 9c ef 03 00               ; :NONAME - (next: 3ef9c :)
3ef8e: 99 11 00 00 00            ; XT=1199, flags=00
3ef93: 07 3a 4e 4f 4e 41 4d 45 00 ; 7, :NONAME
;
3ef9c: a8 ef 03 00               ; : - (next: 3efa8 CREATE-NAME)
3efa0: 87 11 00 00 00            ; XT=1187, flags=00
3efa5: 01 3a 00                  ; 1, :
;
3efa8: be ef 03 00               ; CREATE-NAME - (next: 3efbe Define-Word)
3efac: 31 11 00 00 00            ; XT=1131, flags=00
3efb1: 0b 43 52 45 41 54 45 2d 4e 41 4d 45 00 ; 11, CREATE-NAME
;
3efbe: d4 ef 03 00               ; Define-Word - (next: 3efd4 strcpy2c)
3efc2: e8 10 00 00 00            ; XT=10e8, flags=00
3efc7: 0b 44 65 66 69 6e 65 2d 57 6f 72 64 00 ; 11, Define-Word
;
3efd4: e7 ef 03 00               ; strcpy2c - (next: 3efe7 getLine)
3efd8: a8 10 00 00 00            ; XT=10a8, flags=00
3efdd: 08 73 74 72 63 70 79 32 63 00 ; 8, strcpy2c
;
3efe7: f9 ef 03 00               ; getLine - (next: 3eff9 getLineFromFile)
3efeb: d5 0f 00 00 00            ; XT=0fd5, flags=00
3eff0: 07 67 65 74 4c 69 6e 65 00 ; 7, getLine
;
3eff9: 13 f0 03 00               ; getLineFromFile - (next: 3f013 LoadingFromFile?)
3effd: ba 0f 00 00 00            ; XT=0fba, flags=00
3f002: 0f 67 65 74 4c 69 6e 65 46 72 6f 6d 46 69 6c 65 00 ; 15, getLineFromFile
;
3f013: 2e f0 03 00               ; LoadingFromFile? - (next: 3f02e Pad)
3f017: b1 0f 00 00 00            ; XT=0fb1, flags=00
3f01c: 10 4c 6f 61 64 69 6e 67 46 72 6f 6d 46 69 6c 65 3f 00 ; 16, LoadingFromFile?
;
3f02e: 3c f0 03 00               ; Pad - (next: 3f03c executeInput)
3f032: 89 0f 00 00 00            ; XT=0f89, flags=00
3f037: 03 50 61 64 00            ; 3, Pad
;
3f03c: 53 f0 03 00               ; executeInput - (next: 3f053 executeWord)
3f040: 45 0f 00 00 00            ; XT=0f45, flags=00
3f045: 0c 65 78 65 63 75 74 65 49 6e 70 75 74 00 ; 12, executeInput
;
3f053: 69 f0 03 00               ; executeWord - (next: 3f069 [COMPILE])
3f057: a2 0e 00 00 00            ; XT=0ea2, flags=00
3f05c: 0b 65 78 65 63 75 74 65 57 6f 72 64 00 ; 11, executeWord
;
3f069: 7d f0 03 00               ; [COMPILE] - (next: 3f07d cstr,)
3f06d: 7c 0e 00 00 00            ; XT=0e7c, flags=00
3f072: 09 5b 43 4f 4d 50 49 4c 45 5d 00 ; 9, [COMPILE]
;
3f07d: 8d f0 03 00               ; cstr, - (next: 3f08d strlen)
3f081: 67 0e 00 00 00            ; XT=0e67, flags=00
3f086: 05 63 73 74 72 2c 00      ; 5, cstr,
;
3f08d: 9e f0 03 00               ; strlen - (next: 3f09e Copy.INLINE)
3f091: 44 0e 00 00 00            ; XT=0e44, flags=00
3f096: 06 73 74 72 6c 65 6e 00   ; 6, strlen
;
3f09e: b4 f0 03 00               ; Copy.INLINE - (next: 3f0b4 DOES>)
3f0a2: 23 0e 00 00 00            ; XT=0e23, flags=00
3f0a7: 0b 43 6f 70 79 2e 49 4e 4c 49 4e 45 00 ; 11, Copy.INLINE
;
3f0b4: c4 f0 03 00               ; DOES> - (next: 3f0c4 (inline))
3f0b8: 0c 0e 00 00 00            ; XT=0e0c, flags=00
3f0bd: 05 44 4f 45 53 3e 00      ; 5, DOES>
;
3f0c4: d7 f0 03 00               ; (inline) - (next: 3f0d7 find.ret)
3f0c8: e9 0d 00 00 00            ; XT=0de9, flags=00
3f0cd: 08 28 69 6e 6c 69 6e 65 29 00 ; 8, (inline)
;
3f0d7: ea f0 03 00               ; find.ret - (next: 3f0ea EXECUTE)
3f0db: d0 0d 00 00 00            ; XT=0dd0, flags=00
3f0e0: 08 66 69 6e 64 2e 72 65 74 00 ; 8, find.ret
;
3f0ea: fc f0 03 00               ; EXECUTE - (next: 3f0fc .lastx)
3f0ee: c7 0d 00 00 00            ; XT=0dc7, flags=00
3f0f3: 07 45 58 45 43 55 54 45 00 ; 7, EXECUTE
;
3f0fc: 0d f1 03 00               ; .lastx - (next: 3f10d NUM-WORDS)
3f100: 8d 0d 00 00 00            ; XT=0d8d, flags=00
3f105: 06 2e 6c 61 73 74 78 00   ; 6, .lastx
;
3f10d: 21 f1 03 00               ; NUM-WORDS - (next: 3f121 WORDSV)
3f111: 63 0d 00 00 00            ; XT=0d63, flags=00
3f116: 09 4e 55 4d 2d 57 4f 52 44 53 00 ; 9, NUM-WORDS
;
3f121: 32 f1 03 00               ; WORDSV - (next: 3f132 .WORD-LONG)
3f125: 33 0d 00 00 00            ; XT=0d33, flags=00
3f12a: 06 57 4f 52 44 53 56 00   ; 6, WORDSV
;
3f132: 47 f1 03 00               ; .WORD-LONG - (next: 3f147 WORDS)
3f136: a3 0c 00 00 00            ; XT=0ca3, flags=00
3f13b: 0a 2e 57 4f 52 44 2d 4c 4f 4e 47 00 ; 10, .WORD-LONG
;
3f147: 57 f1 03 00               ; WORDS - (next: 3f157 .WORD-SHORT)
3f14b: 7e 0c 00 00 00            ; XT=0c7e, flags=00
3f150: 05 57 4f 52 44 53 00      ; 5, WORDS
;
3f157: 6d f1 03 00               ; .WORD-SHORT - (next: 3f16d .(LAST))
3f15b: 69 0c 00 00 00            ; XT=0c69, flags=00
3f160: 0b 2e 57 4f 52 44 2d 53 48 4f 52 54 00 ; 11, .WORD-SHORT
;
3f16d: 7f f1 03 00               ; .(LAST) - (next: 3f17f .(HERE))
3f171: 34 0c 00 00 00            ; XT=0c34, flags=00
3f176: 07 2e 28 4c 41 53 54 29 00 ; 7, .(LAST)
;
3f17f: 91 f1 03 00               ; .(HERE) - (next: 3f191 .(MEM_SZ))
3f183: ff 0b 00 00 00            ; XT=0bff, flags=00
3f188: 07 2e 28 48 45 52 45 29 00 ; 7, .(HERE)
;
3f191: a5 f1 03 00               ; .(MEM_SZ) - (next: 3f1a5 .S)
3f195: c6 0b 00 00 00            ; XT=0bc6, flags=00
3f19a: 09 2e 28 4d 45 4d 5f 53 5a 29 00 ; 9, .(MEM_SZ)
;
3f1a5: b2 f1 03 00               ; .S - (next: 3f1b2 MAX)
3f1a9: 52 0b 00 00 00            ; XT=0b52, flags=00
3f1ae: 02 2e 53 00               ; 2, .S
;
3f1b2: c0 f1 03 00               ; MAX - (next: 3f1c0 MIN)
3f1b6: 42 0b 00 00 00            ; XT=0b42, flags=00
3f1bb: 03 4d 41 58 00            ; 3, MAX
;
3f1c0: ce f1 03 00               ; MIN - (next: 3f1ce BINARY.)
3f1c4: 32 0b 00 00 00            ; XT=0b32, flags=00
3f1c9: 03 4d 49 4e 00            ; 3, MIN
;
3f1ce: e0 f1 03 00               ; BINARY. - (next: 3f1e0 DECIMAL.)
3f1d2: 1b 0b 00 00 00            ; XT=0b1b, flags=00
3f1d7: 07 42 49 4e 41 52 59 2e 00 ; 7, BINARY.
;
3f1e0: f3 f1 03 00               ; DECIMAL. - (next: 3f1f3 HEX.)
3f1e4: 04 0b 00 00 00            ; XT=0b04, flags=00
3f1e9: 08 44 45 43 49 4d 41 4c 2e 00 ; 8, DECIMAL.
;
3f1f3: 02 f2 03 00               ; HEX. - (next: 3f202 .)
3f1f7: e1 0a 00 00 00            ; XT=0ae1, flags=00
3f1fc: 04 48 45 58 2e 00         ; 4, HEX.
;
3f202: 0e f2 03 00               ; . - (next: 3f20e (.))
3f206: d3 0a 00 00 00            ; XT=0ad3, flags=00
3f20b: 01 2e 00                  ; 1, .
;
3f20e: 1c f2 03 00               ; (.) - (next: 3f21c /MOD)
3f212: 5f 0a 00 00 00            ; XT=0a5f, flags=00
3f217: 03 28 2e 29 00            ; 3, (.)
;
3f21c: 2b f2 03 00               ; /MOD - (next: 3f22b MOD)
3f220: 4e 0a 00 00 00            ; XT=0a4e, flags=00
3f225: 04 2f 4d 4f 44 00         ; 4, /MOD
;
3f22b: 39 f2 03 00               ; MOD - (next: 3f239 isNumber?)
3f22f: 43 0a 00 00 00            ; XT=0a43, flags=00
3f234: 03 4d 4f 44 00            ; 3, MOD
;
3f239: 4d f2 03 00               ; isNumber? - (next: 3f24d ABS)
3f23d: e2 09 00 00 00            ; XT=09e2, flags=00
3f242: 09 69 73 4e 75 6d 62 65 72 3f 00 ; 9, isNumber?
;
3f24d: 5b f2 03 00               ; ABS - (next: 3f25b NEGATE)
3f251: ce 09 00 00 00            ; XT=09ce, flags=00
3f256: 03 41 42 53 00            ; 3, ABS
;
3f25b: 6c f2 03 00               ; NEGATE - (next: 3f26c isNumChar?)
3f25f: c4 09 00 00 00            ; XT=09c4, flags=00
3f264: 06 4e 45 47 41 54 45 00   ; 6, NEGATE
;
3f26c: 81 f2 03 00               ; isNumChar? - (next: 3f281 isHEX?)
3f270: 73 09 00 00 00            ; XT=0973, flags=00
3f275: 0a 69 73 4e 75 6d 43 68 61 72 3f 00 ; 10, isNumChar?
;
3f281: 92 f2 03 00               ; isHEX? - (next: 3f292 findInDict)
3f285: 67 09 00 00 00            ; XT=0967, flags=00
3f28a: 06 69 73 48 45 58 3f 00   ; 6, isHEX?
;
3f292: a7 f2 03 00               ; findInDict - (next: 3f2a7 DICT.GetINLINE)
3f296: 1e 09 00 00 00            ; XT=091e, flags=00
3f29b: 0a 66 69 6e 64 49 6e 44 69 63 74 00 ; 10, findInDict
;
3f2a7: c0 f2 03 00               ; DICT.GetINLINE - (next: 3f2c0 DICT.GetIMMEDIATE)
3f2ab: 0e 09 00 00 00            ; XT=090e, flags=00
3f2b0: 0e 44 49 43 54 2e 47 65 74 49 4e 4c 49 4e 45 00 ; 14, DICT.GetINLINE
;
3f2c0: dc f2 03 00               ; DICT.GetIMMEDIATE - (next: 3f2dc FLAGS.ISINLINE?)
3f2c4: fe 08 00 00 00            ; XT=08fe, flags=00
3f2c9: 11 44 49 43 54 2e 47 65 74 49 4d 4d 45 44 49 41 54 45 00 ; 17, DICT.GetIMMEDIATE
;
3f2dc: f6 f2 03 00               ; FLAGS.ISINLINE? - (next: 3f2f6 FLAGS.ISIMMEDIATE?)
3f2e0: f5 08 00 00 00            ; XT=08f5, flags=00
3f2e5: 0f 46 4c 41 47 53 2e 49 53 49 4e 4c 49 4e 45 3f 00 ; 15, FLAGS.ISINLINE?
;
3f2f6: 13 f3 03 00               ; FLAGS.ISIMMEDIATE? - (next: 3f313 XT.GetDICTP)
3f2fa: ec 08 00 00 00            ; XT=08ec, flags=00
3f2ff: 12 46 4c 41 47 53 2e 49 53 49 4d 4d 45 44 49 41 54 45 3f 00 ; 18, FLAGS.ISIMMEDIATE?
;
3f313: 29 f3 03 00               ; XT.GetDICTP - (next: 3f329 DICTP>NAME)
3f317: d1 08 00 00 00            ; XT=08d1, flags=00
3f31c: 0b 58 54 2e 47 65 74 44 49 43 54 50 00 ; 11, XT.GetDICTP
;
3f329: 3e f3 03 00               ; DICTP>NAME - (next: 3f33e DICT.GetFLAGS)
3f32d: c2 08 00 00 00            ; XT=08c2, flags=00
3f332: 0a 44 49 43 54 50 3e 4e 41 4d 45 00 ; 10, DICTP>NAME
;
3f33e: 56 f3 03 00               ; DICT.GetFLAGS - (next: 3f356 DICT.GetXT)
3f342: b6 08 00 00 00            ; XT=08b6, flags=00
3f347: 0d 44 49 43 54 2e 47 65 74 46 4c 41 47 53 00 ; 13, DICT.GetFLAGS
;
3f356: 6b f3 03 00               ; DICT.GetXT - (next: 3f36b NAME>DICT)
3f35a: aa 08 00 00 00            ; XT=08aa, flags=00
3f35f: 0a 44 49 43 54 2e 47 65 74 58 54 00 ; 10, DICT.GetXT
;
3f36b: 7f f3 03 00               ; NAME>DICT - (next: 3f37f FLAGS>DICT)
3f36f: 9b 08 00 00 00            ; XT=089b, flags=00
3f374: 09 4e 41 4d 45 3e 44 49 43 54 00 ; 9, NAME>DICT
;
3f37f: 94 f3 03 00               ; FLAGS>DICT - (next: 3f394 XT>DICT)
3f383: 8f 08 00 00 00            ; XT=088f, flags=00
3f388: 0a 46 4c 41 47 53 3e 44 49 43 54 00 ; 10, FLAGS>DICT
;
3f394: a6 f3 03 00               ; XT>DICT - (next: 3f3a6 NEXT>DICT)
3f398: 86 08 00 00 00            ; XT=0886, flags=00
3f39d: 07 58 54 3e 44 49 43 54 00 ; 7, XT>DICT
;
3f3a6: ba f3 03 00               ; NEXT>DICT - (next: 3f3ba DICT>NAME)
3f3aa: 80 08 00 00 00            ; XT=0880, flags=00
3f3af: 09 4e 45 58 54 3e 44 49 43 54 00 ; 9, NEXT>DICT
;
3f3ba: ce f3 03 00               ; DICT>NAME - (next: 3f3ce DICT>FLAGS)
3f3be: 72 08 00 00 00            ; XT=0872, flags=00
3f3c3: 09 44 49 43 54 3e 4e 41 4d 45 00 ; 9, DICT>NAME
;
3f3ce: e3 f3 03 00               ; DICT>FLAGS - (next: 3f3e3 DICT>XT)
3f3d2: 66 08 00 00 00            ; XT=0866, flags=00
3f3d7: 0a 44 49 43 54 3e 46 4c 41 47 53 00 ; 10, DICT>FLAGS
;
3f3e3: f5 f3 03 00               ; DICT>XT - (next: 3f3f5 DICT>NEXT)
3f3e7: 5d 08 00 00 00            ; XT=085d, flags=00
3f3ec: 07 44 49 43 54 3e 58 54 00 ; 7, DICT>XT
;
3f3f5: 09 f4 03 00               ; DICT>NEXT - (next: 3f409 getOneWord)
3f3f9: 57 08 00 00 00            ; XT=0857, flags=00
3f3fe: 09 44 49 43 54 3e 4e 45 58 54 00 ; 9, DICT>NEXT
;
3f409: 1e f4 03 00               ; getOneWord - (next: 3f41e skipWS)
3f40d: 1b 08 00 00 00            ; XT=081b, flags=00
3f412: 0a 67 65 74 4f 6e 65 57 6f 72 64 00 ; 10, getOneWord
;
3f41e: 2f f4 03 00               ; skipWS - (next: 3f42f getInput)
3f422: f0 07 00 00 00            ; XT=07f0, flags=00
3f427: 06 73 6b 69 70 57 53 00   ; 6, skipWS
;
3f42f: 42 f4 03 00               ; getInput - (next: 3f442 PAD)
3f433: da 07 00 00 00            ; XT=07da, flags=00
3f438: 08 67 65 74 49 6e 70 75 74 00 ; 8, getInput
;
3f442: 50 f4 03 00               ; PAD - (next: 3f450 tmp-alloc)
3f446: c8 07 00 00 00            ; XT=07c8, flags=00
3f44b: 03 50 41 44 00            ; 3, PAD
;
3f450: 64 f4 03 00               ; tmp-alloc - (next: 3f464 tmp-cur)
3f454: b1 07 00 00 00            ; XT=07b1, flags=00
3f459: 09 74 6d 70 2d 61 6c 6c 6f 63 00 ; 9, tmp-alloc
;
3f464: 76 f4 03 00               ; tmp-cur - (next: 3f476 tmp-init)
3f468: a5 07 00 00 00            ; XT=07a5, flags=00
3f46d: 07 74 6d 70 2d 63 75 72 00 ; 7, tmp-cur
;
3f476: 89 f4 03 00               ; tmp-init - (next: 3f489 (tmp))
3f47a: 96 07 00 00 00            ; XT=0796, flags=00
3f47f: 08 74 6d 70 2d 69 6e 69 74 00 ; 8, tmp-init
;
3f489: 99 f4 03 00               ; (tmp) - (next: 3f499 BETWEEN)
3f48d: 86 07 00 00 00            ; XT=0786, flags=00
3f492: 05 28 74 6d 70 29 00      ; 5, (tmp)
;
3f499: ab f4 03 00               ; BETWEEN - (next: 3f4ab CR)
3f49d: 6e 07 00 00 00            ; XT=076e, flags=00
3f4a2: 07 42 45 54 57 45 45 4e 00 ; 7, BETWEEN
;
3f4ab: b8 f4 03 00               ; CR - (next: 3f4b8 CRLF)
3f4af: 62 07 00 00 02            ; XT=0762, flags=02
3f4b4: 02 43 52 00               ; 2, CR
;
3f4b8: c7 f4 03 00               ; CRLF - (next: 3f4c7 BL)
3f4bc: 56 07 00 00 02            ; XT=0756, flags=02
3f4c1: 04 43 52 4c 46 00         ; 4, CRLF
;
3f4c7: d4 f4 03 00               ; BL - (next: 3f4d4 ()
3f4cb: 4d 07 00 00 02            ; XT=074d, flags=02
3f4d0: 02 42 4c 00               ; 2, BL
;
3f4d4: e0 f4 03 00               ; ( - (next: 3f4e0 \)
3f4d8: 03 07 00 00 01            ; XT=0703, flags=01
3f4dd: 01 28 00                  ; 1, (
;
3f4e0: ec f4 03 00               ; \ - (next: 3f4ec CT)
3f4e4: f4 06 00 00 01            ; XT=06f4, flags=01
3f4e9: 01 5c 00                  ; 1, \
;
3f4ec: f9 f4 03 00               ; CT - (next: 3f4f9 TYPE)
3f4f0: e4 06 00 00 00            ; XT=06e4, flags=00
3f4f5: 02 43 54 00               ; 2, CT
;
3f4f9: 08 f5 03 00               ; TYPE - (next: 3f508 UNTIL)
3f4fd: c2 06 00 00 00            ; XT=06c2, flags=00
3f502: 04 54 59 50 45 00         ; 4, TYPE
;
3f508: 18 f5 03 00               ; UNTIL - (next: 3f518 WHILE)
3f50c: a6 06 00 00 01            ; XT=06a6, flags=01
3f511: 05 55 4e 54 49 4c 00      ; 5, UNTIL
;
3f518: 28 f5 03 00               ; WHILE - (next: 3f528 AGAIN)
3f51c: 8a 06 00 00 01            ; XT=068a, flags=01
3f521: 05 57 48 49 4c 45 00      ; 5, WHILE
;
3f528: 38 f5 03 00               ; AGAIN - (next: 3f538 BEGIN)
3f52c: 6e 06 00 00 01            ; XT=066e, flags=01
3f531: 05 41 47 41 49 4e 00      ; 5, AGAIN
;
3f538: 48 f5 03 00               ; BEGIN - (next: 3f548 LEAVE)
3f53c: 5b 06 00 00 01            ; XT=065b, flags=01
3f541: 05 42 45 47 49 4e 00      ; 5, BEGIN
;
3f548: 58 f5 03 00               ; LEAVE - (next: 3f558 COUNT)
3f54c: 44 06 00 00 01            ; XT=0644, flags=01
3f551: 05 4c 45 41 56 45 00      ; 5, LEAVE
;
3f558: 68 f5 03 00               ; COUNT - (next: 3f568 2DROP)
3f55c: 38 06 00 00 00            ; XT=0638, flags=00
3f561: 05 43 4f 55 4e 54 00      ; 5, COUNT
;
3f568: 78 f5 03 00               ; 2DROP - (next: 3f578 2DUP)
3f56c: 30 06 00 00 02            ; XT=0630, flags=02
3f571: 05 32 44 52 4f 50 00      ; 5, 2DROP
;
3f578: 87 f5 03 00               ; 2DUP - (next: 3f587 NOT)
3f57c: 28 06 00 00 02            ; XT=0628, flags=02
3f581: 04 32 44 55 50 00         ; 4, 2DUP
;
3f587: 95 f5 03 00               ; NOT - (next: 3f595 FALSE)
3f58b: 1f 06 00 00 02            ; XT=061f, flags=02
3f590: 03 4e 4f 54 00            ; 3, NOT
;
3f595: a5 f5 03 00               ; FALSE - (next: 3f5a5 TRUE)
3f599: 17 06 00 00 02            ; XT=0617, flags=02
3f59e: 05 46 41 4c 53 45 00      ; 5, FALSE
;
3f5a5: b4 f5 03 00               ; TRUE - (next: 3f5b4 >=)
3f5a9: 0f 06 00 00 02            ; XT=060f, flags=02
3f5ae: 04 54 52 55 45 00         ; 4, TRUE
;
3f5b4: c1 f5 03 00               ; >= - (next: 3f5c1 <=)
3f5b8: 05 06 00 00 02            ; XT=0605, flags=02
3f5bd: 02 3e 3d 00               ; 2, >=
;
3f5c1: ce f5 03 00               ; <= - (next: 3f5ce <>)
3f5c5: fb 05 00 00 02            ; XT=05fb, flags=02
3f5ca: 02 3c 3d 00               ; 2, <=
;
3f5ce: db f5 03 00               ; <> - (next: 3f5db 0=)
3f5d2: f1 05 00 00 02            ; XT=05f1, flags=02
3f5d7: 02 3c 3e 00               ; 2, <>
;
3f5db: e8 f5 03 00               ; 0= - (next: 3f5e8 C+!)
3f5df: e8 05 00 00 02            ; XT=05e8, flags=02
3f5e4: 02 30 3d 00               ; 2, 0=
;
3f5e8: f6 f5 03 00               ; C+! - (next: 3f5f6 +!)
3f5ec: dc 05 00 00 00            ; XT=05dc, flags=00
3f5f1: 03 43 2b 21 00            ; 3, C+!
;
3f5f6: 03 f6 03 00               ; +! - (next: 3f603 C--)
3f5fa: d0 05 00 00 00            ; XT=05d0, flags=00
3f5ff: 02 2b 21 00               ; 2, +!
;
3f603: 11 f6 03 00               ; C-- - (next: 3f611 C++)
3f607: c3 05 00 00 00            ; XT=05c3, flags=00
3f60c: 03 43 2d 2d 00            ; 3, C--
;
3f611: 1f f6 03 00               ; C++ - (next: 3f61f --)
3f615: b6 05 00 00 00            ; XT=05b6, flags=00
3f61a: 03 43 2b 2b 00            ; 3, C++
;
3f61f: 2c f6 03 00               ; -- - (next: 3f62c ++)
3f623: a9 05 00 00 00            ; XT=05a9, flags=00
3f628: 02 2d 2d 00               ; 2, --
;
3f62c: 39 f6 03 00               ; ++ - (next: 3f639 -=)
3f630: 9c 05 00 00 00            ; XT=059c, flags=00
3f635: 02 2b 2b 00               ; 2, ++
;
3f639: 46 f6 03 00               ; -= - (next: 3f646 +=)
3f63d: 90 05 00 00 00            ; XT=0590, flags=00
3f642: 02 2d 3d 00               ; 2, -=
;
3f646: 53 f6 03 00               ; += - (next: 3f653 -ROT)
3f64a: 85 05 00 00 00            ; XT=0585, flags=00
3f64f: 02 2b 3d 00               ; 2, +=
;
3f653: 62 f6 03 00               ; -ROT - (next: 3f662 ROT)
3f657: 7b 05 00 00 00            ; XT=057b, flags=00
3f65c: 04 2d 52 4f 54 00         ; 4, -ROT
;
3f662: 70 f6 03 00               ; ROT - (next: 3f670 NIP)
3f666: 71 05 00 00 00            ; XT=0571, flags=00
3f66b: 03 52 4f 54 00            ; 3, ROT
;
3f670: 7e f6 03 00               ; NIP - (next: 3f67e TUCK)
3f674: 69 05 00 00 02            ; XT=0569, flags=02
3f679: 03 4e 49 50 00            ; 3, NIP
;
3f67e: 8d f6 03 00               ; TUCK - (next: 3f68d RDROP)
3f682: 61 05 00 00 02            ; XT=0561, flags=02
3f687: 04 54 55 43 4b 00         ; 4, TUCK
;
3f68d: 9d f6 03 00               ; RDROP - (next: 3f69d R@)
3f691: 59 05 00 00 02            ; XT=0559, flags=02
3f696: 05 52 44 52 4f 50 00      ; 5, RDROP
;
3f69d: aa f6 03 00               ; R@ - (next: 3f6aa 2/)
3f6a1: 50 05 00 00 02            ; XT=0550, flags=02
3f6a6: 02 52 40 00               ; 2, R@
;
3f6aa: b7 f6 03 00               ; 2/ - (next: 3f6b7 2*)
3f6ae: 47 05 00 00 02            ; XT=0547, flags=02
3f6b3: 02 32 2f 00               ; 2, 2/
;
3f6b7: c4 f6 03 00               ; 2* - (next: 3f6c4 1-)
3f6bb: 3e 05 00 00 02            ; XT=053e, flags=02
3f6c0: 02 32 2a 00               ; 2, 2*
;
3f6c4: d1 f6 03 00               ; 1- - (next: 3f6d1 1+)
3f6c8: 35 05 00 00 02            ; XT=0535, flags=02
3f6cd: 02 31 2d 00               ; 2, 1-
;
3f6d1: de f6 03 00               ; 1+ - (next: 3f6de MEM_SZ)
3f6d5: 2c 05 00 00 02            ; XT=052c, flags=02
3f6da: 02 31 2b 00               ; 2, 1+
;
3f6de: ef f6 03 00               ; MEM_SZ - (next: 3f6ef (MEM_K))
3f6e2: 1a 05 00 00 00            ; XT=051a, flags=00
3f6e7: 06 4d 45 4d 5f 53 5a 00   ; 6, MEM_SZ
;
3f6ef: 01 f7 03 00               ; (MEM_K) - (next: 3f701 isNeg)
3f6f3: 0a 05 00 00 00            ; XT=050a, flags=00
3f6f8: 07 28 4d 45 4d 5f 4b 29 00 ; 7, (MEM_K)
;
3f701: 11 f7 03 00               ; isNeg - (next: 3f711 >IN)
3f705: fa 04 00 00 00            ; XT=04fa, flags=00
3f70a: 05 69 73 4e 65 67 00      ; 5, isNeg
;
3f711: 1f f7 03 00               ; >IN - (next: 3f71f ELSE)
3f715: ea 04 00 00 00            ; XT=04ea, flags=00
3f71a: 03 3e 49 4e 00            ; 3, >IN
;
3f71f: 2e f7 03 00               ; ELSE - (next: 3f72e IF)
3f723: c3 04 00 00 01            ; XT=04c3, flags=01
3f728: 04 45 4c 53 45 00         ; 4, ELSE
;
3f72e: 3b f7 03 00               ; IF - (next: 3f73b THEN)
3f732: a2 04 00 00 01            ; XT=04a2, flags=01
3f737: 02 49 46 00               ; 2, IF
;
3f73b: 4a f7 03 00               ; THEN - (next: 3f74a ?COMPILING)
3f73f: 8d 04 00 00 01            ; XT=048d, flags=01
3f744: 04 54 48 45 4e 00         ; 4, THEN
;
3f74a: 5f f7 03 00               ; ?COMPILING - (next: 3f75f ])
3f74e: 84 04 00 00 00            ; XT=0484, flags=00
3f753: 0a 3f 43 4f 4d 50 49 4c 49 4e 47 00 ; 10, ?COMPILING
;
3f75f: 6b f7 03 00               ; ] - (next: 3f76b [)
3f763: 79 04 00 00 01            ; XT=0479, flags=01
3f768: 01 5d 00                  ; 1, ]
;
3f76b: 77 f7 03 00               ; [ - (next: 3f777 OFF)
3f76f: 6e 04 00 00 01            ; XT=046e, flags=01
3f774: 01 5b 00                  ; 1, [
;
3f777: 85 f7 03 00               ; OFF - (next: 3f785 ON)
3f77b: 64 04 00 00 00            ; XT=0464, flags=00
3f780: 03 4f 46 46 00            ; 3, OFF
;
3f785: 92 f7 03 00               ; ON - (next: 3f792 BINARY)
3f789: 5a 04 00 00 00            ; XT=045a, flags=00
3f78e: 02 4f 4e 00               ; 2, ON
;
3f792: a3 f7 03 00               ; BINARY - (next: 3f7a3 OCTAL)
3f796: 4f 04 00 00 00            ; XT=044f, flags=00
3f79b: 06 42 49 4e 41 52 59 00   ; 6, BINARY
;
3f7a3: b3 f7 03 00               ; OCTAL - (next: 3f7b3 DECIMAL)
3f7a7: 44 04 00 00 00            ; XT=0444, flags=00
3f7ac: 05 4f 43 54 41 4c 00      ; 5, OCTAL
;
3f7b3: c5 f7 03 00               ; DECIMAL - (next: 3f7c5 HEX)
3f7b7: 39 04 00 00 00            ; XT=0439, flags=00
3f7bc: 07 44 45 43 49 4d 41 4c 00 ; 7, DECIMAL
;
3f7c5: d3 f7 03 00               ; HEX - (next: 3f7d3 DEBUG-OFF)
3f7c9: 2e 04 00 00 00            ; XT=042e, flags=00
3f7ce: 03 48 45 58 00            ; 3, HEX
;
3f7d3: e7 f7 03 00               ; DEBUG-OFF - (next: 3f7e7 DEBUG-ON)
3f7d7: 25 04 00 00 00            ; XT=0425, flags=00
3f7dc: 09 44 45 42 55 47 2d 4f 46 46 00 ; 9, DEBUG-OFF
;
3f7e7: fa f7 03 00               ; DEBUG-ON - (next: 3f7fa TRACE-OFF)
3f7eb: 1c 04 00 00 00            ; XT=041c, flags=00
3f7f0: 08 44 45 42 55 47 2d 4f 4e 00 ; 8, DEBUG-ON
;
3f7fa: 0e f8 03 00               ; TRACE-OFF - (next: 3f80e TRACE-ON)
3f7fe: 13 04 00 00 00            ; XT=0413, flags=00
3f803: 09 54 52 41 43 45 2d 4f 46 46 00 ; 9, TRACE-OFF
;
3f80e: 21 f8 03 00               ; TRACE-ON - (next: 3f821 LOGLEVEL)
3f812: 0a 04 00 00 00            ; XT=040a, flags=00
3f817: 08 54 52 41 43 45 2d 4f 4e 00 ; 8, TRACE-ON
;
3f821: 34 f8 03 00               ; LOGLEVEL - (next: 3f834 ,)
3f825: 03 04 00 00 02            ; XT=0403, flags=02
3f82a: 08 4c 4f 47 4c 45 56 45 4c 00 ; 8, LOGLEVEL
;
3f834: 40 f8 03 00               ; , - (next: 3f840 HERE)
3f838: f0 03 00 00 00            ; XT=03f0, flags=00
3f83d: 01 2c 00                  ; 1, ,
;
3f840: 4f f8 03 00               ; HERE - (next: 3f84f LAST)
3f844: e7 03 00 00 02            ; XT=03e7, flags=02
3f849: 04 48 45 52 45 00         ; 4, HERE
;
3f84f: 5e f8 03 00               ; LAST - (next: 3f85e IMMEDIATE)
3f853: de 03 00 00 02            ; XT=03de, flags=02
3f858: 04 4c 41 53 54 00         ; 4, LAST
;
3f85e: 72 f8 03 00               ; IMMEDIATE - (next: 3f872 FLAG_INLINE)
3f862: c8 03 00 00 00            ; XT=03c8, flags=00
3f867: 09 49 4d 4d 45 44 49 41 54 45 00 ; 9, IMMEDIATE
;
3f872: 88 f8 03 00               ; FLAG_INLINE - (next: 3f888 FLAG_IMMEDIATE)
3f876: c0 03 00 00 02            ; XT=03c0, flags=02
3f87b: 0b 46 4c 41 47 5f 49 4e 4c 49 4e 45 00 ; 11, FLAG_INLINE
;
3f888: a1 f8 03 00               ; FLAG_IMMEDIATE - (next: 3f8a1 CELLS)
3f88c: b8 03 00 00 02            ; XT=03b8, flags=02
3f891: 0e 46 4c 41 47 5f 49 4d 4d 45 44 49 41 54 45 00 ; 14, FLAG_IMMEDIATE
;
3f8a1: b1 f8 03 00               ; CELLS - (next: 3f8b1 INLINE)
3f8a5: af 03 00 00 02            ; XT=03af, flags=02
3f8aa: 05 43 45 4c 4c 53 00      ; 5, CELLS
;
3f8b1: c2 f8 03 00               ; INLINE - (next: 3f8c2 BYE)
3f8b5: 99 03 00 00 00            ; XT=0399, flags=00
3f8ba: 06 49 4e 4c 49 4e 45 00   ; 6, INLINE
;
3f8c2: d0 f8 03 00               ; BYE - (next: 3f8d0 RESET)
3f8c6: 92 03 00 00 02            ; XT=0392, flags=02
3f8cb: 03 42 59 45 00            ; 3, BYE
;
3f8d0: e0 f8 03 00               ; RESET - (next: 3f8e0 BREAK)
3f8d4: 8b 03 00 00 02            ; XT=038b, flags=02
3f8d9: 05 52 45 53 45 54 00      ; 5, RESET
;
3f8e0: f0 f8 03 00               ; BREAK - (next: 3f8f0 GETCH)
3f8e4: 84 03 00 00 02            ; XT=0384, flags=02
3f8e9: 05 42 52 45 41 4b 00      ; 5, BREAK
;
3f8f0: 00 f9 03 00               ; GETCH - (next: 3f900 OR)
3f8f4: 7d 03 00 00 02            ; XT=037d, flags=02
3f8f9: 05 47 45 54 43 48 00      ; 5, GETCH
;
3f900: 0d f9 03 00               ; OR - (next: 3f90d AND)
3f904: 76 03 00 00 02            ; XT=0376, flags=02
3f909: 02 4f 52 00               ; 2, OR
;
3f90d: 1b f9 03 00               ; AND - (next: 3f91b DEPTH)
3f911: 6f 03 00 00 02            ; XT=036f, flags=02
3f916: 03 41 4e 44 00            ; 3, AND
;
3f91b: 2b f9 03 00               ; DEPTH - (next: 3f92b PICK)
3f91f: 68 03 00 00 02            ; XT=0368, flags=02
3f924: 05 44 45 50 54 48 00      ; 5, DEPTH
;
3f92b: 3a f9 03 00               ; PICK - (next: 3f93a R>)
3f92f: 61 03 00 00 02            ; XT=0361, flags=02
3f934: 04 50 49 43 4b 00         ; 4, PICK
;
3f93a: 47 f9 03 00               ; R> - (next: 3f947 >R)
3f93e: 5a 03 00 00 02            ; XT=035a, flags=02
3f943: 02 52 3e 00               ; 2, R>
;
3f947: 54 f9 03 00               ; >R - (next: 3f954 FCLOSE)
3f94b: 53 03 00 00 02            ; XT=0353, flags=02
3f950: 02 3e 52 00               ; 2, >R
;
3f954: 65 f9 03 00               ; FCLOSE - (next: 3f965 FWRITE)
3f958: 4c 03 00 00 02            ; XT=034c, flags=02
3f95d: 06 46 43 4c 4f 53 45 00   ; 6, FCLOSE
;
3f965: 76 f9 03 00               ; FWRITE - (next: 3f976 FREADLINE)
3f969: 45 03 00 00 02            ; XT=0345, flags=02
3f96e: 06 46 57 52 49 54 45 00   ; 6, FWRITE
;
3f976: 8a f9 03 00               ; FREADLINE - (next: 3f98a FREAD)
3f97a: 3e 03 00 00 02            ; XT=033e, flags=02
3f97f: 09 46 52 45 41 44 4c 49 4e 45 00 ; 9, FREADLINE
;
3f98a: 9a f9 03 00               ; FREAD - (next: 3f99a FOPEN)
3f98e: 37 03 00 00 02            ; XT=0337, flags=02
3f993: 05 46 52 45 41 44 00      ; 5, FREAD
;
3f99a: aa f9 03 00               ; FOPEN - (next: 3f9aa EMIT)
3f99e: 30 03 00 00 02            ; XT=0330, flags=02
3f9a3: 05 46 4f 50 45 4e 00      ; 5, FOPEN
;
3f9aa: b9 f9 03 00               ; EMIT - (next: 3f9b9 >)
3f9ae: 29 03 00 00 02            ; XT=0329, flags=02
3f9b3: 04 45 4d 49 54 00         ; 4, EMIT
;
3f9b9: c5 f9 03 00               ; > - (next: 3f9c5 =)
3f9bd: 22 03 00 00 02            ; XT=0322, flags=02
3f9c2: 01 3e 00                  ; 1, >
;
3f9c5: d1 f9 03 00               ; = - (next: 3f9d1 <)
3f9c9: 1b 03 00 00 02            ; XT=031b, flags=02
3f9ce: 01 3d 00                  ; 1, =
;
3f9d1: dd f9 03 00               ; < - (next: 3f9dd /)
3f9d5: 14 03 00 00 02            ; XT=0314, flags=02
3f9da: 01 3c 00                  ; 1, <
;
3f9dd: e9 f9 03 00               ; / - (next: 3f9e9 *)
3f9e1: 0d 03 00 00 02            ; XT=030d, flags=02
3f9e6: 01 2f 00                  ; 1, /
;
3f9e9: f5 f9 03 00               ; * - (next: 3f9f5 -)
3f9ed: 06 03 00 00 02            ; XT=0306, flags=02
3f9f2: 01 2a 00                  ; 1, *
;
3f9f5: 01 fa 03 00               ; - - (next: 3fa01 +)
3f9f9: ff 02 00 00 02            ; XT=02ff, flags=02
3f9fe: 01 2d 00                  ; 1, -
;
3fa01: 0d fa 03 00               ; + - (next: 3fa0d COMPAREI)
3fa05: f8 02 00 00 02            ; XT=02f8, flags=02
3fa0a: 01 2b 00                  ; 1, +
;
3fa0d: 20 fa 03 00               ; COMPAREI - (next: 3fa20 COMPARE)
3fa11: f1 02 00 00 02            ; XT=02f1, flags=02
3fa16: 08 43 4f 4d 50 41 52 45 49 00 ; 8, COMPAREI
;
3fa20: 32 fa 03 00               ; COMPARE - (next: 3fa32 OVER)
3fa24: ea 02 00 00 02            ; XT=02ea, flags=02
3fa29: 07 43 4f 4d 50 41 52 45 00 ; 7, COMPARE
;
3fa32: 41 fa 03 00               ; OVER - (next: 3fa41 DUP)
3fa36: e3 02 00 00 02            ; XT=02e3, flags=02
3fa3b: 04 4f 56 45 52 00         ; 4, OVER
;
3fa41: 4f fa 03 00               ; DUP - (next: 3fa4f DROP)
3fa45: dc 02 00 00 02            ; XT=02dc, flags=02
3fa4a: 03 44 55 50 00            ; 3, DUP
;
3fa4f: 5e fa 03 00               ; DROP - (next: 3fa5e SWAP)
3fa53: d5 02 00 00 02            ; XT=02d5, flags=02
3fa58: 04 44 52 4f 50 00         ; 4, DROP
;
3fa5e: 6d fa 03 00               ; SWAP - (next: 3fa6d C!)
3fa62: ce 02 00 00 02            ; XT=02ce, flags=02
3fa67: 04 53 57 41 50 00         ; 4, SWAP
;
3fa6d: 7a fa 03 00               ; C! - (next: 3fa7a C@)
3fa71: c7 02 00 00 02            ; XT=02c7, flags=02
3fa76: 02 43 21 00               ; 2, C!
;
3fa7a: 87 fa 03 00               ; C@ - (next: 3fa87 !)
3fa7e: c0 02 00 00 02            ; XT=02c0, flags=02
3fa83: 02 43 40 00               ; 2, C@
;
3fa87: 93 fa 03 00               ; ! - (next: 3fa93 @)
3fa8b: b9 02 00 00 02            ; XT=02b9, flags=02
3fa90: 01 21 00                  ; 1, !
;
3fa93: 9f fa 03 00               ; @ - (next: 3fa9f a.BYE)
3fa97: b2 02 00 00 02            ; XT=02b2, flags=02
3fa9c: 01 40 00                  ; 1, @
;
3fa9f: af fa 03 00               ; a.BYE - (next: 3faaf a.RESET)
3faa3: a5 02 00 00 01            ; XT=02a5, flags=01
3faa8: 05 61 2e 42 59 45 00      ; 5, a.BYE
;
3faaf: c1 fa 03 00               ; a.RESET - (next: 3fac1 a.BREAK)
3fab3: 98 02 00 00 01            ; XT=0298, flags=01
3fab8: 07 61 2e 52 45 53 45 54 00 ; 7, a.RESET
;
3fac1: d3 fa 03 00               ; a.BREAK - (next: 3fad3 a.GETCH)
3fac5: 8b 02 00 00 01            ; XT=028b, flags=01
3faca: 07 61 2e 42 52 45 41 4b 00 ; 7, a.BREAK
;
3fad3: e5 fa 03 00               ; a.GETCH - (next: 3fae5 a.OR)
3fad7: 7e 02 00 00 01            ; XT=027e, flags=01
3fadc: 07 61 2e 47 45 54 43 48 00 ; 7, a.GETCH
;
3fae5: f4 fa 03 00               ; a.OR - (next: 3faf4 a.AND)
3fae9: 71 02 00 00 01            ; XT=0271, flags=01
3faee: 04 61 2e 4f 52 00         ; 4, a.OR
;
3faf4: 04 fb 03 00               ; a.AND - (next: 3fb04 a.DEPTH)
3faf8: 64 02 00 00 01            ; XT=0264, flags=01
3fafd: 05 61 2e 41 4e 44 00      ; 5, a.AND
;
3fb04: 16 fb 03 00               ; a.DEPTH - (next: 3fb16 a.LOGLEVEL)
3fb08: 57 02 00 00 01            ; XT=0257, flags=01
3fb0d: 07 61 2e 44 45 50 54 48 00 ; 7, a.DEPTH
;
3fb16: 2b fb 03 00               ; a.LOGLEVEL - (next: 3fb2b a.PICK)
3fb1a: 4a 02 00 00 01            ; XT=024a, flags=01
3fb1f: 0a 61 2e 4c 4f 47 4c 45 56 45 4c 00 ; 10, a.LOGLEVEL
;
3fb2b: 3c fb 03 00               ; a.PICK - (next: 3fb3c a.RTOD)
3fb2f: 3d 02 00 00 01            ; XT=023d, flags=01
3fb34: 06 61 2e 50 49 43 4b 00   ; 6, a.PICK
;
3fb3c: 4d fb 03 00               ; a.RTOD - (next: 3fb4d a.DTOR)
3fb40: 30 02 00 00 01            ; XT=0230, flags=01
3fb45: 06 61 2e 52 54 4f 44 00   ; 6, a.RTOD
;
3fb4d: 5e fb 03 00               ; a.DTOR - (next: 3fb5e a.SLITERAL)
3fb51: 23 02 00 00 01            ; XT=0223, flags=01
3fb56: 06 61 2e 44 54 4f 52 00   ; 6, a.DTOR
;
3fb5e: 73 fb 03 00               ; a.SLITERAL - (next: 3fb73 a.FCLOSE)
3fb62: 16 02 00 00 01            ; XT=0216, flags=01
3fb67: 0a 61 2e 53 4c 49 54 45 52 41 4c 00 ; 10, a.SLITERAL
;
3fb73: 86 fb 03 00               ; a.FCLOSE - (next: 3fb86 a.FWRITE)
3fb77: 09 02 00 00 01            ; XT=0209, flags=01
3fb7c: 08 61 2e 46 43 4c 4f 53 45 00 ; 8, a.FCLOSE
;
3fb86: 99 fb 03 00               ; a.FWRITE - (next: 3fb99 a.FREADLINE)
3fb8a: fc 01 00 00 01            ; XT=01fc, flags=01
3fb8f: 08 61 2e 46 57 52 49 54 45 00 ; 8, a.FWRITE
;
3fb99: af fb 03 00               ; a.FREADLINE - (next: 3fbaf a.FREAD)
3fb9d: ef 01 00 00 01            ; XT=01ef, flags=01
3fba2: 0b 61 2e 46 52 45 41 44 4c 49 4e 45 00 ; 11, a.FREADLINE
;
3fbaf: c1 fb 03 00               ; a.FREAD - (next: 3fbc1 a.FOPEN)
3fbb3: e2 01 00 00 01            ; XT=01e2, flags=01
3fbb8: 07 61 2e 46 52 45 41 44 00 ; 7, a.FREAD
;
3fbc1: d3 fb 03 00               ; a.FOPEN - (next: 3fbd3 a.EMIT)
3fbc5: d5 01 00 00 01            ; XT=01d5, flags=01
3fbca: 07 61 2e 46 4f 50 45 4e 00 ; 7, a.FOPEN
;
3fbd3: e4 fb 03 00               ; a.EMIT - (next: 3fbe4 a.DICTP)
3fbd7: c8 01 00 00 01            ; XT=01c8, flags=01
3fbdc: 06 61 2e 45 4d 49 54 00   ; 6, a.EMIT
;
3fbe4: f6 fb 03 00               ; a.DICTP - (next: 3fbf6 a.GT)
3fbe8: bb 01 00 00 01            ; XT=01bb, flags=01
3fbed: 07 61 2e 44 49 43 54 50 00 ; 7, a.DICTP
;
3fbf6: 05 fc 03 00               ; a.GT - (next: 3fc05 a.EQ)
3fbfa: ae 01 00 00 01            ; XT=01ae, flags=01
3fbff: 04 61 2e 47 54 00         ; 4, a.GT
;
3fc05: 14 fc 03 00               ; a.EQ - (next: 3fc14 a.LT)
3fc09: a1 01 00 00 01            ; XT=01a1, flags=01
3fc0e: 04 61 2e 45 51 00         ; 4, a.EQ
;
3fc14: 23 fc 03 00               ; a.LT - (next: 3fc23 a.DIV)
3fc18: 94 01 00 00 01            ; XT=0194, flags=01
3fc1d: 04 61 2e 4c 54 00         ; 4, a.LT
;
3fc23: 33 fc 03 00               ; a.DIV - (next: 3fc33 a.MUL)
3fc27: 87 01 00 00 01            ; XT=0187, flags=01
3fc2c: 05 61 2e 44 49 56 00      ; 5, a.DIV
;
3fc33: 43 fc 03 00               ; a.MUL - (next: 3fc43 a.SUB)
3fc37: 7a 01 00 00 01            ; XT=017a, flags=01
3fc3c: 05 61 2e 4d 55 4c 00      ; 5, a.MUL
;
3fc43: 53 fc 03 00               ; a.SUB - (next: 3fc53 a.ADD)
3fc47: 6d 01 00 00 01            ; XT=016d, flags=01
3fc4c: 05 61 2e 53 55 42 00      ; 5, a.SUB
;
3fc53: 63 fc 03 00               ; a.ADD - (next: 3fc63 a.COMPAREI)
3fc57: 60 01 00 00 01            ; XT=0160, flags=01
3fc5c: 05 61 2e 41 44 44 00      ; 5, a.ADD
;
3fc63: 78 fc 03 00               ; a.COMPAREI - (next: 3fc78 a.COMPARE)
3fc67: 53 01 00 00 01            ; XT=0153, flags=01
3fc6c: 0a 61 2e 43 4f 4d 50 41 52 45 49 00 ; 10, a.COMPAREI
;
3fc78: 8c fc 03 00               ; a.COMPARE - (next: 3fc8c a.RET)
3fc7c: 46 01 00 00 01            ; XT=0146, flags=01
3fc81: 09 61 2e 43 4f 4d 50 41 52 45 00 ; 9, a.COMPARE
;
3fc8c: 9c fc 03 00               ; a.RET - (next: 3fc9c a.CALL)
3fc90: 39 01 00 00 01            ; XT=0139, flags=01
3fc95: 05 61 2e 52 45 54 00      ; 5, a.RET
;
3fc9c: ad fc 03 00               ; a.CALL - (next: 3fcad a.JMPNZ)
3fca0: 2c 01 00 00 01            ; XT=012c, flags=01
3fca5: 06 61 2e 43 41 4c 4c 00   ; 6, a.CALL
;
3fcad: bf fc 03 00               ; a.JMPNZ - (next: 3fcbf a.JMPZ)
3fcb1: 1f 01 00 00 01            ; XT=011f, flags=01
3fcb6: 07 61 2e 4a 4d 50 4e 5a 00 ; 7, a.JMPNZ
;
3fcbf: d0 fc 03 00               ; a.JMPZ - (next: 3fcd0 a.JMP)
3fcc3: 12 01 00 00 01            ; XT=0112, flags=01
3fcc8: 06 61 2e 4a 4d 50 5a 00   ; 6, a.JMPZ
;
3fcd0: e0 fc 03 00               ; a.JMP - (next: 3fce0 a.OVER)
3fcd4: 05 01 00 00 01            ; XT=0105, flags=01
3fcd9: 05 61 2e 4a 4d 50 00      ; 5, a.JMP
;
3fce0: f1 fc 03 00               ; a.OVER - (next: 3fcf1 a.DUP)
3fce4: f8 00 00 00 01            ; XT=00f8, flags=01
3fce9: 06 61 2e 4f 56 45 52 00   ; 6, a.OVER
;
3fcf1: 01 fd 03 00               ; a.DUP - (next: 3fd01 a.DROP)
3fcf5: eb 00 00 00 01            ; XT=00eb, flags=01
3fcfa: 05 61 2e 44 55 50 00      ; 5, a.DUP
;
3fd01: 12 fd 03 00               ; a.DROP - (next: 3fd12 a.SWAP)
3fd05: de 00 00 00 01            ; XT=00de, flags=01
3fd0a: 06 61 2e 44 52 4f 50 00   ; 6, a.DROP
;
3fd12: 23 fd 03 00               ; a.SWAP - (next: 3fd23 a.CSTORE)
3fd16: d1 00 00 00 01            ; XT=00d1, flags=01
3fd1b: 06 61 2e 53 57 41 50 00   ; 6, a.SWAP
;
3fd23: 36 fd 03 00               ; a.CSTORE - (next: 3fd36 a.CFETCH)
3fd27: c4 00 00 00 01            ; XT=00c4, flags=01
3fd2c: 08 61 2e 43 53 54 4f 52 45 00 ; 8, a.CSTORE
;
3fd36: 49 fd 03 00               ; a.CFETCH - (next: 3fd49 a.STORE)
3fd3a: b7 00 00 00 01            ; XT=00b7, flags=01
3fd3f: 08 61 2e 43 46 45 54 43 48 00 ; 8, a.CFETCH
;
3fd49: 5b fd 03 00               ; a.STORE - (next: 3fd5b a.FETCH)
3fd4d: aa 00 00 00 01            ; XT=00aa, flags=01
3fd52: 07 61 2e 53 54 4f 52 45 00 ; 7, a.STORE
;
3fd5b: 6d fd 03 00               ; a.FETCH - (next: 3fd6d a.CPUSH)
3fd5f: 9d 00 00 00 01            ; XT=009d, flags=01
3fd64: 07 61 2e 46 45 54 43 48 00 ; 7, a.FETCH
;
3fd6d: 7f fd 03 00               ; a.CPUSH - (next: 3fd7f a.PUSH)
3fd71: 90 00 00 00 01            ; XT=0090, flags=01
3fd76: 07 61 2e 43 50 55 53 48 00 ; 7, a.CPUSH
;
3fd7f: 90 fd 03 00               ; a.PUSH - (next: 3fd90 C,)
3fd83: 83 00 00 00 01            ; XT=0083, flags=01
3fd88: 06 61 2e 50 55 53 48 00   ; 6, a.PUSH
;
3fd90: 9d fd 03 00               ; C, - (next: 3fd9d STATE)
3fd94: 70 00 00 00 00            ; XT=0070, flags=00
3fd99: 02 43 2c 00               ; 2, C,
;
3fd9d: ad fd 03 00               ; STATE - (next: 3fdad INPUT-FP)
3fda1: 68 00 00 00 02            ; XT=0068, flags=02
3fda6: 05 53 54 41 54 45 00      ; 5, STATE
;
3fdad: c0 fd 03 00               ; INPUT-FP - (next: 3fdc0 (LAST))
3fdb1: 60 00 00 00 02            ; XT=0060, flags=02
3fdb6: 08 49 4e 50 55 54 2d 46 50 00 ; 8, INPUT-FP
;
3fdc0: d1 fd 03 00               ; (LAST) - (next: 3fdd1 DP)
3fdc4: 58 00 00 00 02            ; XT=0058, flags=02
3fdc9: 06 28 4c 41 53 54 29 00   ; 6, (LAST)
;
3fdd1: de fd 03 00               ; DP - (next: 3fdde CELL)
3fdd5: 50 00 00 00 02            ; XT=0050, flags=02
3fdda: 02 44 50 00               ; 2, DP
;
3fdde: ed fd 03 00               ; CELL - (next: 3fded BASE)
3fde2: 48 00 00 00 02            ; XT=0048, flags=02
3fde7: 04 43 45 4c 4c 00         ; 4, CELL
;
3fded: fc fd 03 00               ; BASE - (next: 3fdfc <end>)
3fdf1: 40 00 00 00 02            ; XT=0040, flags=02
3fdf6: 04 42 41 53 45 00         ; 4, BASE
;
3fdfc: 00 00 00 00               ; End.
