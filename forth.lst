; memory-size: 262144 bytes, (40000 hex)
; data-stack: 3fe00, grows up
; return-stack: 3fffc, grows down
;
0000: 08 d2 12 00 00             ; JMP main (12d2)
;
0005: 00 0a 04
0008: 00000000 00000000
0010: 000014e5 0003edc7 00000000 00000000
0020: 00000063 00000000 00000000 00000000
0030: 00000000 00000000 00000000 00000000
;
0040: 18 ed fd 03 00             ; DICTP BASE (3fded)
0045: 0e 06                      ; CLITERAL 6
0047: 0c                         ; RET
;
0048: 18 de fd 03 00             ; DICTP CELL (3fdde)
004d: 0e 04                      ; CLITERAL 4
004f: 0c                         ; RET
;
0050: 18 d1 fd 03 00             ; DICTP DP (3fdd1)
0055: 0e 10                      ; CLITERAL 16
0057: 0c                         ; RET
;
0058: 18 c0 fd 03 00             ; DICTP (LAST) (3fdc0)
005d: 0e 14                      ; CLITERAL 20
005f: 0c                         ; RET
;
0060: 18 ad fd 03 00             ; DICTP INPUT-FP (3fdad)
0065: 0e 1c                      ; CLITERAL 28
0067: 0c                         ; RET
;
0068: 18 9d fd 03 00             ; DICTP STATE (3fd9d)
006d: 0e 20                      ; CLITERAL 32
006f: 0c                         ; RET
;
0070: 18 90 fd 03 00             ; DICTP C, (3fd90)
0075: 0e 10                      ; CLITERAL 16
0077: 02                         ; FETCH
0078: 10                         ; CSTORE
0079: 0e 10                      ; CLITERAL 16
007b: 02                         ; FETCH
007c: 0e 01                      ; CLITERAL 1
007e: 11                         ; ADD
007f: 0e 10                      ; CLITERAL 16
0081: 03                         ; STORE
0082: 0c                         ; RET
;
0083: 18 7f fd 03 00             ; DICTP a.PUSH (3fd7f)
0088: 0e 01                      ; CLITERAL 1
008a: 0b 70 00 00 00             ; CALL C, (0070)
008f: 0c                         ; RET
;
0090: 18 6d fd 03 00             ; DICTP a.CPUSH (3fd6d)
0095: 0e 0e                      ; CLITERAL 14
0097: 0b 70 00 00 00             ; CALL C, (0070)
009c: 0c                         ; RET
;
009d: 18 5b fd 03 00             ; DICTP a.FETCH (3fd5b)
00a2: 0e 02                      ; CLITERAL 2
00a4: 0b 70 00 00 00             ; CALL C, (0070)
00a9: 0c                         ; RET
;
00aa: 18 49 fd 03 00             ; DICTP a.STORE (3fd49)
00af: 0e 03                      ; CLITERAL 3
00b1: 0b 70 00 00 00             ; CALL C, (0070)
00b6: 0c                         ; RET
;
00b7: 18 36 fd 03 00             ; DICTP a.CFETCH (3fd36)
00bc: 0e 0f                      ; CLITERAL 15
00be: 0b 70 00 00 00             ; CALL C, (0070)
00c3: 0c                         ; RET
;
00c4: 18 23 fd 03 00             ; DICTP a.CSTORE (3fd23)
00c9: 0e 10                      ; CLITERAL 16
00cb: 0b 70 00 00 00             ; CALL C, (0070)
00d0: 0c                         ; RET
;
00d1: 18 12 fd 03 00             ; DICTP a.SWAP (3fd12)
00d6: 0e 04                      ; CLITERAL 4
00d8: 0b 70 00 00 00             ; CALL C, (0070)
00dd: 0c                         ; RET
;
00de: 18 01 fd 03 00             ; DICTP a.DROP (3fd01)
00e3: 0e 05                      ; CLITERAL 5
00e5: 0b 70 00 00 00             ; CALL C, (0070)
00ea: 0c                         ; RET
;
00eb: 18 f1 fc 03 00             ; DICTP a.DUP (3fcf1)
00f0: 0e 06                      ; CLITERAL 6
00f2: 0b 70 00 00 00             ; CALL C, (0070)
00f7: 0c                         ; RET
;
00f8: 18 e0 fc 03 00             ; DICTP a.OVER (3fce0)
00fd: 0e 1a                      ; CLITERAL 26
00ff: 0b 70 00 00 00             ; CALL C, (0070)
0104: 0c                         ; RET
;
0105: 18 d0 fc 03 00             ; DICTP a.JMP (3fcd0)
010a: 0e 08                      ; CLITERAL 8
010c: 0b 70 00 00 00             ; CALL C, (0070)
0111: 0c                         ; RET
;
0112: 18 bf fc 03 00             ; DICTP a.JMPZ (3fcbf)
0117: 0e 09                      ; CLITERAL 9
0119: 0b 70 00 00 00             ; CALL C, (0070)
011e: 0c                         ; RET
;
011f: 18 ad fc 03 00             ; DICTP a.JMPNZ (3fcad)
0124: 0e 0a                      ; CLITERAL 10
0126: 0b 70 00 00 00             ; CALL C, (0070)
012b: 0c                         ; RET
;
012c: 18 9c fc 03 00             ; DICTP a.CALL (3fc9c)
0131: 0e 0b                      ; CLITERAL 11
0133: 0b 70 00 00 00             ; CALL C, (0070)
0138: 0c                         ; RET
;
0139: 18 8c fc 03 00             ; DICTP a.RET (3fc8c)
013e: 0e 0c                      ; CLITERAL 12
0140: 0b 70 00 00 00             ; CALL C, (0070)
0145: 0c                         ; RET
;
0146: 18 78 fc 03 00             ; DICTP a.COMPARE (3fc78)
014b: 0e 1b                      ; CLITERAL 27
014d: 0b 70 00 00 00             ; CALL C, (0070)
0152: 0c                         ; RET
;
0153: 18 63 fc 03 00             ; DICTP a.COMPAREI (3fc63)
0158: 0e 28                      ; CLITERAL 40
015a: 0b 70 00 00 00             ; CALL C, (0070)
015f: 0c                         ; RET
;
0160: 18 53 fc 03 00             ; DICTP a.ADD (3fc53)
0165: 0e 11                      ; CLITERAL 17
0167: 0b 70 00 00 00             ; CALL C, (0070)
016c: 0c                         ; RET
;
016d: 18 43 fc 03 00             ; DICTP a.SUB (3fc43)
0172: 0e 12                      ; CLITERAL 18
0174: 0b 70 00 00 00             ; CALL C, (0070)
0179: 0c                         ; RET
;
017a: 18 33 fc 03 00             ; DICTP a.MUL (3fc33)
017f: 0e 13                      ; CLITERAL 19
0181: 0b 70 00 00 00             ; CALL C, (0070)
0186: 0c                         ; RET
;
0187: 18 23 fc 03 00             ; DICTP a.DIV (3fc23)
018c: 0e 14                      ; CLITERAL 20
018e: 0b 70 00 00 00             ; CALL C, (0070)
0193: 0c                         ; RET
;
0194: 18 14 fc 03 00             ; DICTP a.LT (3fc14)
0199: 0e 15                      ; CLITERAL 21
019b: 0b 70 00 00 00             ; CALL C, (0070)
01a0: 0c                         ; RET
;
01a1: 18 05 fc 03 00             ; DICTP a.EQ (3fc05)
01a6: 0e 16                      ; CLITERAL 22
01a8: 0b 70 00 00 00             ; CALL C, (0070)
01ad: 0c                         ; RET
;
01ae: 18 f6 fb 03 00             ; DICTP a.GT (3fbf6)
01b3: 0e 17                      ; CLITERAL 23
01b5: 0b 70 00 00 00             ; CALL C, (0070)
01ba: 0c                         ; RET
;
01bb: 18 e4 fb 03 00             ; DICTP a.DICTP (3fbe4)
01c0: 0e 18                      ; CLITERAL 24
01c2: 0b 70 00 00 00             ; CALL C, (0070)
01c7: 0c                         ; RET
;
01c8: 18 d3 fb 03 00             ; DICTP a.EMIT (3fbd3)
01cd: 0e 19                      ; CLITERAL 25
01cf: 0b 70 00 00 00             ; CALL C, (0070)
01d4: 0c                         ; RET
;
01d5: 18 c1 fb 03 00             ; DICTP a.FOPEN (3fbc1)
01da: 0e 1c                      ; CLITERAL 28
01dc: 0b 70 00 00 00             ; CALL C, (0070)
01e1: 0c                         ; RET
;
01e2: 18 af fb 03 00             ; DICTP a.FREAD (3fbaf)
01e7: 0e 1d                      ; CLITERAL 29
01e9: 0b 70 00 00 00             ; CALL C, (0070)
01ee: 0c                         ; RET
;
01ef: 18 99 fb 03 00             ; DICTP a.FREADLINE (3fb99)
01f4: 0e 1e                      ; CLITERAL 30
01f6: 0b 70 00 00 00             ; CALL C, (0070)
01fb: 0c                         ; RET
;
01fc: 18 86 fb 03 00             ; DICTP a.FWRITE (3fb86)
0201: 0e 1f                      ; CLITERAL 31
0203: 0b 70 00 00 00             ; CALL C, (0070)
0208: 0c                         ; RET
;
0209: 18 73 fb 03 00             ; DICTP a.FCLOSE (3fb73)
020e: 0e 20                      ; CLITERAL 32
0210: 0b 70 00 00 00             ; CALL C, (0070)
0215: 0c                         ; RET
;
0216: 18 5e fb 03 00             ; DICTP a.SLITERAL (3fb5e)
021b: 0e 07                      ; CLITERAL 7
021d: 0b 70 00 00 00             ; CALL C, (0070)
0222: 0c                         ; RET
;
0223: 18 4d fb 03 00             ; DICTP a.DTOR (3fb4d)
0228: 0e 21                      ; CLITERAL 33
022a: 0b 70 00 00 00             ; CALL C, (0070)
022f: 0c                         ; RET
;
0230: 18 3c fb 03 00             ; DICTP a.RTOD (3fb3c)
0235: 0e 22                      ; CLITERAL 34
0237: 0b 70 00 00 00             ; CALL C, (0070)
023c: 0c                         ; RET
;
023d: 18 2b fb 03 00             ; DICTP a.PICK (3fb2b)
0242: 0e 25                      ; CLITERAL 37
0244: 0b 70 00 00 00             ; CALL C, (0070)
0249: 0c                         ; RET
;
024a: 18 16 fb 03 00             ; DICTP a.LOGLEVEL (3fb16)
024f: 0e 23                      ; CLITERAL 35
0251: 0b 70 00 00 00             ; CALL C, (0070)
0256: 0c                         ; RET
;
0257: 18 04 fb 03 00             ; DICTP a.DEPTH (3fb04)
025c: 0e 26                      ; CLITERAL 38
025e: 0b 70 00 00 00             ; CALL C, (0070)
0263: 0c                         ; RET
;
0264: 18 f4 fa 03 00             ; DICTP a.AND (3faf4)
0269: 0e 24                      ; CLITERAL 36
026b: 0b 70 00 00 00             ; CALL C, (0070)
0270: 0c                         ; RET
;
0271: 18 e5 fa 03 00             ; DICTP a.OR (3fae5)
0276: 0e 0d                      ; CLITERAL 13
0278: 0b 70 00 00 00             ; CALL C, (0070)
027d: 0c                         ; RET
;
027e: 18 d3 fa 03 00             ; DICTP a.GETCH (3fad3)
0283: 0e 27                      ; CLITERAL 39
0285: 0b 70 00 00 00             ; CALL C, (0070)
028a: 0c                         ; RET
;
028b: 18 bc fa 03 00             ; DICTP a.USTACKINIT (3fabc)
0290: 0e 29                      ; CLITERAL 41
0292: 0b 70 00 00 00             ; CALL C, (0070)
0297: 0c                         ; RET
;
0298: 18 aa fa 03 00             ; DICTP a.UPUSH (3faaa)
029d: 0e 2a                      ; CLITERAL 42
029f: 0b 70 00 00 00             ; CALL C, (0070)
02a4: 0c                         ; RET
;
02a5: 18 99 fa 03 00             ; DICTP a.UPOP (3fa99)
02aa: 0e 2b                      ; CLITERAL 43
02ac: 0b 70 00 00 00             ; CALL C, (0070)
02b1: 0c                         ; RET
;
02b2: 18 87 fa 03 00             ; DICTP a.BREAK (3fa87)
02b7: 0e fd                      ; CLITERAL 253
02b9: 0b 70 00 00 00             ; CALL C, (0070)
02be: 0c                         ; RET
;
02bf: 18 75 fa 03 00             ; DICTP a.RESET (3fa75)
02c4: 0e fe                      ; CLITERAL 254
02c6: 0b 70 00 00 00             ; CALL C, (0070)
02cb: 0c                         ; RET
;
02cc: 18 65 fa 03 00             ; DICTP a.BYE (3fa65)
02d1: 0e ff                      ; CLITERAL 255
02d3: 0b 70 00 00 00             ; CALL C, (0070)
02d8: 0c                         ; RET
;
02d9: 18 59 fa 03 00             ; DICTP @ (3fa59)
02de: 02                         ; FETCH
02df: 0c                         ; RET
;
02e0: 18 4d fa 03 00             ; DICTP ! (3fa4d)
02e5: 03                         ; STORE
02e6: 0c                         ; RET
;
02e7: 18 40 fa 03 00             ; DICTP C@ (3fa40)
02ec: 0f                         ; CFETCH
02ed: 0c                         ; RET
;
02ee: 18 33 fa 03 00             ; DICTP C! (3fa33)
02f3: 10                         ; CSTORE
02f4: 0c                         ; RET
;
02f5: 18 24 fa 03 00             ; DICTP SWAP (3fa24)
02fa: 04                         ; SWAP
02fb: 0c                         ; RET
;
02fc: 18 15 fa 03 00             ; DICTP DROP (3fa15)
0301: 05                         ; DROP
0302: 0c                         ; RET
;
0303: 18 07 fa 03 00             ; DICTP DUP (3fa07)
0308: 06                         ; DUP
0309: 0c                         ; RET
;
030a: 18 f8 f9 03 00             ; DICTP OVER (3f9f8)
030f: 1a                         ; OVER
0310: 0c                         ; RET
;
0311: 18 e6 f9 03 00             ; DICTP COMPARE (3f9e6)
0316: 1b                         ; COMPARE
0317: 0c                         ; RET
;
0318: 18 d3 f9 03 00             ; DICTP COMPAREI (3f9d3)
031d: 28                         ; COMPAREI
031e: 0c                         ; RET
;
031f: 18 c7 f9 03 00             ; DICTP + (3f9c7)
0324: 11                         ; ADD
0325: 0c                         ; RET
;
0326: 18 bb f9 03 00             ; DICTP - (3f9bb)
032b: 12                         ; SUB
032c: 0c                         ; RET
;
032d: 18 af f9 03 00             ; DICTP * (3f9af)
0332: 13                         ; MUL
0333: 0c                         ; RET
;
0334: 18 a3 f9 03 00             ; DICTP / (3f9a3)
0339: 14                         ; DIV
033a: 0c                         ; RET
;
033b: 18 97 f9 03 00             ; DICTP < (3f997)
0340: 15                         ; LT
0341: 0c                         ; RET
;
0342: 18 8b f9 03 00             ; DICTP = (3f98b)
0347: 16                         ; EQ
0348: 0c                         ; RET
;
0349: 18 7f f9 03 00             ; DICTP > (3f97f)
034e: 17                         ; GT
034f: 0c                         ; RET
;
0350: 18 70 f9 03 00             ; DICTP EMIT (3f970)
0355: 19                         ; EMIT
0356: 0c                         ; RET
;
0357: 18 60 f9 03 00             ; DICTP FOPEN (3f960)
035c: 1c                         ; FOPEN
035d: 0c                         ; RET
;
035e: 18 50 f9 03 00             ; DICTP FREAD (3f950)
0363: 1d                         ; FREAD
0364: 0c                         ; RET
;
0365: 18 3c f9 03 00             ; DICTP FREADLINE (3f93c)
036a: 1e                         ; FREADLINE
036b: 0c                         ; RET
;
036c: 18 2b f9 03 00             ; DICTP FWRITE (3f92b)
0371: 1f                         ; FWRITE
0372: 0c                         ; RET
;
0373: 18 1a f9 03 00             ; DICTP FCLOSE (3f91a)
0378: 20                         ; FCLOSE
0379: 0c                         ; RET
;
037a: 18 0d f9 03 00             ; DICTP >R (3f90d)
037f: 21                         ; DTOR
0380: 0c                         ; RET
;
0381: 18 00 f9 03 00             ; DICTP R> (3f900)
0386: 22                         ; RTOD
0387: 0c                         ; RET
;
0388: 18 f1 f8 03 00             ; DICTP PICK (3f8f1)
038d: 25                         ; PICK
038e: 0c                         ; RET
;
038f: 18 e1 f8 03 00             ; DICTP DEPTH (3f8e1)
0394: 26                         ; DEPTH
0395: 0c                         ; RET
;
0396: 18 d3 f8 03 00             ; DICTP AND (3f8d3)
039b: 24                         ; AND
039c: 0c                         ; RET
;
039d: 18 c6 f8 03 00             ; DICTP OR (3f8c6)
03a2: 0d                         ; OR
03a3: 0c                         ; RET
;
03a4: 18 b6 f8 03 00             ; DICTP GETCH (3f8b6)
03a9: 27                         ; GETCH
03aa: 0c                         ; RET
;
03ab: 18 a1 f8 03 00             ; DICTP USTACKINIT (3f8a1)
03b0: 29                         ; USTACKINIT
03b1: 0c                         ; RET
;
03b2: 18 8f f8 03 00             ; DICTP >USTACK (3f88f)
03b7: 2a                         ; UPUSH
03b8: 0c                         ; RET
;
03b9: 18 7d f8 03 00             ; DICTP USTACK> (3f87d)
03be: 2b                         ; UPOP
03bf: 0c                         ; RET
;
03c0: 18 6d f8 03 00             ; DICTP BREAK (3f86d)
03c5: fd                         ; BREAK
03c6: 0c                         ; RET
;
03c7: 18 5d f8 03 00             ; DICTP RESET (3f85d)
03cc: fe                         ; RESET
03cd: 0c                         ; RET
;
03ce: 18 4f f8 03 00             ; DICTP BYE (3f84f)
03d3: ff                         ; BYE
03d4: 0c                         ; RET
;
03d5: 18 3e f8 03 00             ; DICTP INLINE (3f83e)
03da: 0e 14                      ; CLITERAL 20
03dc: 02                         ; FETCH
03dd: 0e 02                      ; CLITERAL 2
03df: 0e 04                      ; CLITERAL 4
03e1: 13                         ; MUL
03e2: 11                         ; ADD
03e3: 06                         ; DUP
03e4: 0f                         ; CFETCH
03e5: 0e 02                      ; CLITERAL 2
03e7: 0d                         ; OR
03e8: 04                         ; SWAP
03e9: 10                         ; CSTORE
03ea: 0c                         ; RET
;
03eb: 18 2e f8 03 00             ; DICTP CELLS (3f82e)
03f0: 0e 04                      ; CLITERAL 4
03f2: 13                         ; MUL
03f3: 0c                         ; RET
;
03f4: 18 15 f8 03 00             ; DICTP FLAG_IMMEDIATE (3f815)
03f9: 0e 01                      ; CLITERAL 1
03fb: 0c                         ; RET
;
03fc: 18 ff f7 03 00             ; DICTP FLAG_INLINE (3f7ff)
0401: 0e 02                      ; CLITERAL 2
0403: 0c                         ; RET
;
0404: 18 eb f7 03 00             ; DICTP IMMEDIATE (3f7eb)
0409: 0e 14                      ; CLITERAL 20
040b: 02                         ; FETCH
040c: 0e 02                      ; CLITERAL 2
040e: 0e 04                      ; CLITERAL 4
0410: 13                         ; MUL
0411: 11                         ; ADD
0412: 06                         ; DUP
0413: 0f                         ; CFETCH
0414: 0e 01                      ; CLITERAL 1
0416: 0d                         ; OR
0417: 04                         ; SWAP
0418: 10                         ; CSTORE
0419: 0c                         ; RET
;
041a: 18 dc f7 03 00             ; DICTP LAST (3f7dc)
041f: 0e 14                      ; CLITERAL 20
0421: 02                         ; FETCH
0422: 0c                         ; RET
;
0423: 18 cd f7 03 00             ; DICTP HERE (3f7cd)
0428: 0e 10                      ; CLITERAL 16
042a: 02                         ; FETCH
042b: 0c                         ; RET
;
042c: 18 c1 f7 03 00             ; DICTP , (3f7c1)
0431: 0e 10                      ; CLITERAL 16
0433: 02                         ; FETCH
0434: 03                         ; STORE
0435: 0e 10                      ; CLITERAL 16
0437: 02                         ; FETCH
0438: 0e 04                      ; CLITERAL 4
043a: 11                         ; ADD
043b: 0e 10                      ; CLITERAL 16
043d: 03                         ; STORE
043e: 0c                         ; RET
;
043f: 18 ae f7 03 00             ; DICTP LOGLEVEL (3f7ae)
0444: 23                         ; LOGLEVEL
0445: 0c                         ; RET
;
0446: 18 9b f7 03 00             ; DICTP TRACE-ON (3f79b)
044b: 0e 02                      ; CLITERAL 2
044d: 23                         ; LOGLEVEL
044e: 0c                         ; RET
;
044f: 18 87 f7 03 00             ; DICTP TRACE-OFF (3f787)
0454: 0e 00                      ; CLITERAL 0
0456: 23                         ; LOGLEVEL
0457: 0c                         ; RET
;
0458: 18 74 f7 03 00             ; DICTP DEBUG-ON (3f774)
045d: 0e 01                      ; CLITERAL 1
045f: 23                         ; LOGLEVEL
0460: 0c                         ; RET
;
0461: 18 60 f7 03 00             ; DICTP DEBUG-OFF (3f760)
0466: 0e 00                      ; CLITERAL 0
0468: 23                         ; LOGLEVEL
0469: 0c                         ; RET
;
046a: 18 52 f7 03 00             ; DICTP HEX (3f752)
046f: 0e 10                      ; CLITERAL 16
0471: 0e 06                      ; CLITERAL 6
0473: 10                         ; CSTORE
0474: 0c                         ; RET
;
0475: 18 40 f7 03 00             ; DICTP DECIMAL (3f740)
047a: 0e 0a                      ; CLITERAL 10
047c: 0e 06                      ; CLITERAL 6
047e: 10                         ; CSTORE
047f: 0c                         ; RET
;
0480: 18 30 f7 03 00             ; DICTP OCTAL (3f730)
0485: 0e 08                      ; CLITERAL 8
0487: 0e 06                      ; CLITERAL 6
0489: 10                         ; CSTORE
048a: 0c                         ; RET
;
048b: 18 1f f7 03 00             ; DICTP BINARY (3f71f)
0490: 0e 02                      ; CLITERAL 2
0492: 0e 06                      ; CLITERAL 6
0494: 10                         ; CSTORE
0495: 0c                         ; RET
;
0496: 18 12 f7 03 00             ; DICTP ON (3f712)
049b: 0e 01                      ; CLITERAL 1
049d: 04                         ; SWAP
049e: 03                         ; STORE
049f: 0c                         ; RET
;
04a0: 18 04 f7 03 00             ; DICTP OFF (3f704)
04a5: 0e 00                      ; CLITERAL 0
04a7: 04                         ; SWAP
04a8: 03                         ; STORE
04a9: 0c                         ; RET
;
04aa: 18 f8 f6 03 00             ; DICTP [ (3f6f8)
04af: 0e 00                      ; CLITERAL 0
04b1: 0e 20                      ; CLITERAL 32
04b3: 03                         ; STORE
04b4: 0c                         ; RET
;
04b5: 18 ec f6 03 00             ; DICTP ] (3f6ec)
04ba: 0e 01                      ; CLITERAL 1
04bc: 0e 20                      ; CLITERAL 32
04be: 03                         ; STORE
04bf: 0c                         ; RET
;
04c0: 18 d7 f6 03 00             ; DICTP ?COMPILING (3f6d7)
04c5: 0e 20                      ; CLITERAL 32
04c7: 02                         ; FETCH
04c8: 0c                         ; RET
;
04c9: 18 c8 f6 03 00             ; DICTP THEN (3f6c8)
04ce: 0b c0 04 00 00             ; CALL ?COMPILING (04c0)
04d3: 09 dd 04 00 00             ; JMPZ 04dd
04d8: 0e 10                      ; CLITERAL 16
04da: 02                         ; FETCH
04db: 04                         ; SWAP
04dc: 03                         ; STORE
04dd: 0c                         ; RET
;
04de: 18 bb f6 03 00             ; DICTP IF (3f6bb)
04e3: 0b c0 04 00 00             ; CALL ?COMPILING (04c0)
04e8: 09 fe 04 00 00             ; JMPZ 04fe
04ed: 0e 09                      ; CLITERAL 9
04ef: 0b 70 00 00 00             ; CALL C, (0070)
04f4: 0e 10                      ; CLITERAL 16
04f6: 02                         ; FETCH
04f7: 0e 00                      ; CLITERAL 0
04f9: 0b 2c 04 00 00             ; CALL , (042c)
04fe: 0c                         ; RET
;
04ff: 18 ac f6 03 00             ; DICTP ELSE (3f6ac)
0504: 0b c0 04 00 00             ; CALL ?COMPILING (04c0)
0509: 09 25 05 00 00             ; JMPZ 0525
050e: 0e 08                      ; CLITERAL 8
0510: 0b 70 00 00 00             ; CALL C, (0070)
0515: 0e 10                      ; CLITERAL 16
0517: 02                         ; FETCH
0518: 04                         ; SWAP
0519: 0e 00                      ; CLITERAL 0
051b: 0b 2c 04 00 00             ; CALL , (042c)
0520: 0e 10                      ; CLITERAL 16
0522: 02                         ; FETCH
0523: 04                         ; SWAP
0524: 03                         ; STORE
0525: 0c                         ; RET
;
0526: 18 9e f6 03 00             ; DICTP >IN (3f69e)
052b: 01 31 05 00 00             ; LITERAL 1329 (531)
0530: 0c                         ; RET
0531: 00                         ; RESET
0532: 00                         ; RESET
0533: 00                         ; RESET
0534: 00                         ; RESET
0535: 0c                         ; RET
;
0536: 18 8e f6 03 00             ; DICTP isNeg (3f68e)
053b: 01 41 05 00 00             ; LITERAL 1345 (541)
0540: 0c                         ; RET
0541: 00                         ; RESET
0542: 00                         ; RESET
0543: 00                         ; RESET
0544: 00                         ; RESET
0545: 0c                         ; RET
;
0546: 18 7c f6 03 00             ; DICTP (MEM_K) (3f67c)
054b: 01 51 05 00 00             ; LITERAL 1361 (551)
0550: 0c                         ; RET
0551: 00                         ; RESET
0552: 01 00 00 0c 18             ; LITERAL 403439616 (180c0000)
0557: 6b                         ; RESET
0558: f6                         ; RESET
0559: 03                         ; STORE
055a: 00                         ; RESET
055b: 0b 46 05 00 00             ; CALL (MEM_K) (0546)
0560: 02                         ; FETCH
0561: 01 00 04 00 00             ; LITERAL 1024 (400)
0566: 13                         ; MUL
0567: 0c                         ; RET
;
0568: 18 5e f6 03 00             ; DICTP R@ (3f65e)
056d: 22                         ; RTOD
056e: 06                         ; DUP
056f: 21                         ; DTOR
0570: 0c                         ; RET
;
0571: 18 4e f6 03 00             ; DICTP RDROP (3f64e)
0576: 22                         ; RTOD
0577: 05                         ; DROP
0578: 0c                         ; RET
;
0579: 18 3f f6 03 00             ; DICTP 2DUP (3f63f)
057e: 1a                         ; OVER
057f: 1a                         ; OVER
0580: 0c                         ; RET
;
0581: 18 2f f6 03 00             ; DICTP 2DROP (3f62f)
0586: 05                         ; DROP
0587: 05                         ; DROP
0588: 0c                         ; RET
;
0589: 18 20 f6 03 00             ; DICTP TUCK (3f620)
058e: 04                         ; SWAP
058f: 1a                         ; OVER
0590: 0c                         ; RET
;
0591: 18 12 f6 03 00             ; DICTP NIP (3f612)
0596: 04                         ; SWAP
0597: 05                         ; DROP
0598: 0c                         ; RET
;
0599: 18 04 f6 03 00             ; DICTP ROT (3f604)
059e: 21                         ; DTOR
059f: 04                         ; SWAP
05a0: 22                         ; RTOD
05a1: 04                         ; SWAP
05a2: 0c                         ; RET
;
05a3: 18 f5 f5 03 00             ; DICTP -ROT (3f5f5)
05a8: 04                         ; SWAP
05a9: 21                         ; DTOR
05aa: 04                         ; SWAP
05ab: 22                         ; RTOD
05ac: 0c                         ; RET
;
05ad: 18 e8 f5 03 00             ; DICTP 1+ (3f5e8)
05b2: 0e 01                      ; CLITERAL 1
05b4: 11                         ; ADD
05b5: 0c                         ; RET
;
05b6: 18 db f5 03 00             ; DICTP 1- (3f5db)
05bb: 0e 01                      ; CLITERAL 1
05bd: 12                         ; SUB
05be: 0c                         ; RET
;
05bf: 18 ce f5 03 00             ; DICTP 2* (3f5ce)
05c4: 0e 02                      ; CLITERAL 2
05c6: 13                         ; MUL
05c7: 0c                         ; RET
;
05c8: 18 c1 f5 03 00             ; DICTP 2/ (3f5c1)
05cd: 0e 02                      ; CLITERAL 2
05cf: 14                         ; DIV
05d0: 0c                         ; RET
;
05d1: 18 b4 f5 03 00             ; DICTP += (3f5b4)
05d6: 1a                         ; OVER
05d7: 02                         ; FETCH
05d8: 11                         ; ADD
05d9: 04                         ; SWAP
05da: 03                         ; STORE
05db: 0c                         ; RET
;
05dc: 18 a7 f5 03 00             ; DICTP -= (3f5a7)
05e1: 1a                         ; OVER
05e2: 02                         ; FETCH
05e3: 04                         ; SWAP
05e4: 12                         ; SUB
05e5: 04                         ; SWAP
05e6: 03                         ; STORE
05e7: 0c                         ; RET
;
05e8: 18 9a f5 03 00             ; DICTP ++ (3f59a)
05ed: 0e 01                      ; CLITERAL 1
05ef: 0b d1 05 00 00             ; CALL += (05d1)
05f4: 0c                         ; RET
;
05f5: 18 8d f5 03 00             ; DICTP -- (3f58d)
05fa: 0e 01                      ; CLITERAL 1
05fc: 0b dc 05 00 00             ; CALL -= (05dc)
0601: 0c                         ; RET
;
0602: 18 7f f5 03 00             ; DICTP C++ (3f57f)
0607: 06                         ; DUP
0608: 0f                         ; CFETCH
0609: 0e 01                      ; CLITERAL 1
060b: 11                         ; ADD
060c: 04                         ; SWAP
060d: 10                         ; CSTORE
060e: 0c                         ; RET
;
060f: 18 71 f5 03 00             ; DICTP C-- (3f571)
0614: 06                         ; DUP
0615: 0f                         ; CFETCH
0616: 0e 01                      ; CLITERAL 1
0618: 12                         ; SUB
0619: 04                         ; SWAP
061a: 10                         ; CSTORE
061b: 0c                         ; RET
;
061c: 18 64 f5 03 00             ; DICTP +! (3f564)
0621: 04                         ; SWAP
0622: 1a                         ; OVER
0623: 02                         ; FETCH
0624: 11                         ; ADD
0625: 04                         ; SWAP
0626: 03                         ; STORE
0627: 0c                         ; RET
;
0628: 18 56 f5 03 00             ; DICTP C+! (3f556)
062d: 04                         ; SWAP
062e: 1a                         ; OVER
062f: 0f                         ; CFETCH
0630: 11                         ; ADD
0631: 04                         ; SWAP
0632: 10                         ; CSTORE
0633: 0c                         ; RET
;
0634: 18 49 f5 03 00             ; DICTP 0= (3f549)
0639: 0e 00                      ; CLITERAL 0
063b: 16                         ; EQ
063c: 0c                         ; RET
;
063d: 18 3c f5 03 00             ; DICTP <> (3f53c)
0642: 16                         ; EQ
0643: 0e 00                      ; CLITERAL 0
0645: 16                         ; EQ
0646: 0c                         ; RET
;
0647: 18 2f f5 03 00             ; DICTP <= (3f52f)
064c: 17                         ; GT
064d: 0e 00                      ; CLITERAL 0
064f: 16                         ; EQ
0650: 0c                         ; RET
;
0651: 18 22 f5 03 00             ; DICTP >= (3f522)
0656: 15                         ; LT
0657: 0e 00                      ; CLITERAL 0
0659: 16                         ; EQ
065a: 0c                         ; RET
;
065b: 18 13 f5 03 00             ; DICTP TRUE (3f513)
0660: 0e 01                      ; CLITERAL 1
0662: 0c                         ; RET
;
0663: 18 03 f5 03 00             ; DICTP FALSE (3f503)
0668: 0e 00                      ; CLITERAL 0
066a: 0c                         ; RET
;
066b: 18 f5 f4 03 00             ; DICTP NOT (3f4f5)
0670: 0e 00                      ; CLITERAL 0
0672: 16                         ; EQ
0673: 0c                         ; RET
;
0674: 18 e5 f4 03 00             ; DICTP LEAVE (3f4e5)
0679: 0b c0 04 00 00             ; CALL ?COMPILING (04c0)
067e: 09 8a 06 00 00             ; JMPZ 068a
0683: 0e 0c                      ; CLITERAL 12
0685: 0b 70 00 00 00             ; CALL C, (0070)
068a: 0c                         ; RET
;
068b: 18 d5 f4 03 00             ; DICTP BEGIN (3f4d5)
0690: 0b c0 04 00 00             ; CALL ?COMPILING (04c0)
0695: 09 9d 06 00 00             ; JMPZ 069d
069a: 0e 10                      ; CLITERAL 16
069c: 02                         ; FETCH
069d: 0c                         ; RET
;
069e: 18 c5 f4 03 00             ; DICTP AGAIN (3f4c5)
06a3: 0b c0 04 00 00             ; CALL ?COMPILING (04c0)
06a8: 09 b9 06 00 00             ; JMPZ 06b9
06ad: 0e 08                      ; CLITERAL 8
06af: 0b 70 00 00 00             ; CALL C, (0070)
06b4: 0b 2c 04 00 00             ; CALL , (042c)
06b9: 0c                         ; RET
;
06ba: 18 b5 f4 03 00             ; DICTP WHILE (3f4b5)
06bf: 0b c0 04 00 00             ; CALL ?COMPILING (04c0)
06c4: 09 d5 06 00 00             ; JMPZ 06d5
06c9: 0e 0a                      ; CLITERAL 10
06cb: 0b 70 00 00 00             ; CALL C, (0070)
06d0: 0b 2c 04 00 00             ; CALL , (042c)
06d5: 0c                         ; RET
;
06d6: 18 a5 f4 03 00             ; DICTP UNTIL (3f4a5)
06db: 0b c0 04 00 00             ; CALL ?COMPILING (04c0)
06e0: 09 f1 06 00 00             ; JMPZ 06f1
06e5: 0e 09                      ; CLITERAL 9
06e7: 0b 70 00 00 00             ; CALL C, (0070)
06ec: 0b 2c 04 00 00             ; CALL , (042c)
06f1: 0c                         ; RET
;
06f2: 18 95 f4 03 00             ; DICTP COUNT (3f495)
06f7: 06                         ; DUP
06f8: 0e 01                      ; CLITERAL 1
06fa: 11                         ; ADD
06fb: 04                         ; SWAP
06fc: 0f                         ; CFETCH
06fd: 0c                         ; RET
;
06fe: 18 86 f4 03 00             ; DICTP TYPE (3f486)
0703: 06                         ; DUP
0704: 0e 00                      ; CLITERAL 0
0706: 16                         ; EQ
0707: 09 0f 07 00 00             ; JMPZ 070f
070c: 05                         ; DROP
070d: 05                         ; DROP
070e: 0c                         ; RET
070f: 04                         ; SWAP
0710: 06                         ; DUP
0711: 0f                         ; CFETCH
0712: 19                         ; EMIT
0713: 0e 01                      ; CLITERAL 1
0715: 11                         ; ADD
0716: 04                         ; SWAP
0717: 0e 01                      ; CLITERAL 1
0719: 12                         ; SUB
071a: 08 03 07 00 00             ; JMP 0703
071f: 0c                         ; RET
;
0720: 18 79 f4 03 00             ; DICTP CT (3f479)
0725: 0b f2 06 00 00             ; CALL COUNT (06f2)
072a: 0b fe 06 00 00             ; CALL TYPE (06fe)
072f: 0c                         ; RET
;
0730: 18 6d f4 03 00             ; DICTP \ (3f46d)
0735: 0e 00                      ; CLITERAL 0
0737: 0b 26 05 00 00             ; CALL >IN (0526)
073c: 02                         ; FETCH
073d: 10                         ; CSTORE
073e: 0c                         ; RET
;
073f: 18 61 f4 03 00             ; DICTP ( (3f461)
0744: 0b 26 05 00 00             ; CALL >IN (0526)
0749: 02                         ; FETCH
074a: 0f                         ; CFETCH
074b: 06                         ; DUP
074c: 0e 00                      ; CLITERAL 0
074e: 16                         ; EQ
074f: 09 70 07 00 00             ; JMPZ 0770
0754: 07 13 6d 69 73 73 69 6e 67 20 63 6c 6f 73 69 6e 67 20 27 29 27 00 ; SLITERAL (0755) [missing closing ')']
076a: 0b 20 07 00 00             ; CALL CT (0720)
076f: fe                         ; RESET
0770: 0b 26 05 00 00             ; CALL >IN (0526)
0775: 0b e8 05 00 00             ; CALL ++ (05e8)
077a: 0e 29                      ; CLITERAL 41
077c: 16                         ; EQ
077d: 09 83 07 00 00             ; JMPZ 0783
0782: 0c                         ; RET
0783: 08 44 07 00 00             ; JMP 0744
0788: 0c                         ; RET
;
0789: 18 54 f4 03 00             ; DICTP BL (3f454)
078e: 0e 20                      ; CLITERAL 32
0790: 19                         ; EMIT
0791: 0c                         ; RET
;
0792: 18 45 f4 03 00             ; DICTP CRLF (3f445)
0797: 0e 0d                      ; CLITERAL 13
0799: 19                         ; EMIT
079a: 0e 0a                      ; CLITERAL 10
079c: 19                         ; EMIT
079d: 0c                         ; RET
;
079e: 18 38 f4 03 00             ; DICTP CR (3f438)
07a3: 0e 0d                      ; CLITERAL 13
07a5: 19                         ; EMIT
07a6: 0e 0a                      ; CLITERAL 10
07a8: 19                         ; EMIT
07a9: 0c                         ; RET
;
07aa: 18 26 f4 03 00             ; DICTP BETWEEN (3f426)
07af: 0e 02                      ; CLITERAL 2
07b1: 25                         ; PICK
07b2: 15                         ; LT
07b3: 09 bd 07 00 00             ; JMPZ 07bd
07b8: 05                         ; DROP
07b9: 05                         ; DROP
07ba: 0e 00                      ; CLITERAL 0
07bc: 0c                         ; RET
07bd: 15                         ; LT
07be: 0e 00                      ; CLITERAL 0
07c0: 16                         ; EQ
07c1: 0c                         ; RET
;
07c2: 18 16 f4 03 00             ; DICTP (tmp) (3f416)
07c7: 01 cd 07 00 00             ; LITERAL 1997 (7cd)
07cc: 0c                         ; RET
07cd: 00                         ; RESET
07ce: 00                         ; RESET
07cf: 00                         ; RESET
07d0: 00                         ; RESET
07d1: 0c                         ; RET
;
07d2: 18 03 f4 03 00             ; DICTP tmp-init (3f403)
07d7: 0e 14                      ; CLITERAL 20
07d9: 02                         ; FETCH
07da: 0b c2 07 00 00             ; CALL (tmp) (07c2)
07df: 03                         ; STORE
07e0: 0c                         ; RET
;
07e1: 18 f1 f3 03 00             ; DICTP tmp-cur (3f3f1)
07e6: 0b c2 07 00 00             ; CALL (tmp) (07c2)
07eb: 02                         ; FETCH
07ec: 0c                         ; RET
;
07ed: 18 dd f3 03 00             ; DICTP tmp-alloc (3f3dd)
07f2: 0b c2 07 00 00             ; CALL (tmp) (07c2)
07f7: 04                         ; SWAP
07f8: 1a                         ; OVER
07f9: 02                         ; FETCH
07fa: 04                         ; SWAP
07fb: 12                         ; SUB
07fc: 04                         ; SWAP
07fd: 03                         ; STORE
07fe: 0b e1 07 00 00             ; CALL tmp-cur (07e1)
0803: 0c                         ; RET
;
0804: 18 cf f3 03 00             ; DICTP PAD (3f3cf)
0809: 0b d2 07 00 00             ; CALL tmp-init (07d2)
080e: 0e c8                      ; CLITERAL 200
0810: 0b ed 07 00 00             ; CALL tmp-alloc (07ed)
0815: 0c                         ; RET
;
0816: 18 bc f3 03 00             ; DICTP getInput (3f3bc)
081b: 0b 04 08 00 00             ; CALL PAD (0804)
0820: 0e 80                      ; CLITERAL 128
0822: 0e 00                      ; CLITERAL 0
0824: 1e                         ; FREADLINE
0825: 05                         ; DROP
0826: 0b 04 08 00 00             ; CALL PAD (0804)
082b: 0c                         ; RET
;
082c: 18 ab f3 03 00             ; DICTP skipWS (3f3ab)
0831: 06                         ; DUP
0832: 0f                         ; CFETCH
0833: 06                         ; DUP
0834: 09 4f 08 00 00             ; JMPZ 084f
0839: 0e 20                      ; CLITERAL 32
083b: 17                         ; GT
083c: 09 47 08 00 00             ; JMPZ 0847
0841: 0c                         ; RET
0842: 08 4a 08 00 00             ; JMP 084a
0847: 0e 01                      ; CLITERAL 1
0849: 11                         ; ADD
084a: 08 51 08 00 00             ; JMP 0851
084f: 05                         ; DROP
0850: 0c                         ; RET
0851: 08 31 08 00 00             ; JMP 0831
0856: 0c                         ; RET
;
0857: 18 96 f3 03 00             ; DICTP getOneWord (3f396)
085c: 06                         ; DUP
085d: 21                         ; DTOR
085e: 21                         ; DTOR
085f: 22                         ; RTOD
0860: 06                         ; DUP
0861: 21                         ; DTOR
0862: 0f                         ; CFETCH
0863: 0e 20                      ; CLITERAL 32
0865: 17                         ; GT
0866: 09 75 08 00 00             ; JMPZ 0875
086b: 22                         ; RTOD
086c: 0e 01                      ; CLITERAL 1
086e: 11                         ; ADD
086f: 21                         ; DTOR
0870: 08 8d 08 00 00             ; JMP 088d
0875: 22                         ; RTOD
0876: 06                         ; DUP
0877: 21                         ; DTOR
0878: 0f                         ; CFETCH
0879: 09 89 08 00 00             ; JMPZ 0889
087e: 0e 00                      ; CLITERAL 0
0880: 22                         ; RTOD
0881: 06                         ; DUP
0882: 21                         ; DTOR
0883: 10                         ; CSTORE
0884: 22                         ; RTOD
0885: 0e 01                      ; CLITERAL 1
0887: 11                         ; ADD
0888: 21                         ; DTOR
0889: 22                         ; RTOD
088a: 22                         ; RTOD
088b: 04                         ; SWAP
088c: 0c                         ; RET
088d: 08 5f 08 00 00             ; JMP 085f
0892: 0c                         ; RET
;
0893: 18 82 f3 03 00             ; DICTP DICT>NEXT (3f382)
0898: 0c                         ; RET
;
0899: 18 70 f3 03 00             ; DICTP DICT>XT (3f370)
089e: 0e 04                      ; CLITERAL 4
08a0: 11                         ; ADD
08a1: 0c                         ; RET
;
08a2: 18 5b f3 03 00             ; DICTP DICT>FLAGS (3f35b)
08a7: 0e 02                      ; CLITERAL 2
08a9: 0e 04                      ; CLITERAL 4
08ab: 13                         ; MUL
08ac: 11                         ; ADD
08ad: 0c                         ; RET
;
08ae: 18 47 f3 03 00             ; DICTP DICT>NAME (3f347)
08b3: 0b a2 08 00 00             ; CALL DICT>FLAGS (08a2)
08b8: 0e 01                      ; CLITERAL 1
08ba: 11                         ; ADD
08bb: 0c                         ; RET
;
08bc: 18 33 f3 03 00             ; DICTP NEXT>DICT (3f333)
08c1: 0c                         ; RET
;
08c2: 18 21 f3 03 00             ; DICTP XT>DICT (3f321)
08c7: 0e 04                      ; CLITERAL 4
08c9: 12                         ; SUB
08ca: 0c                         ; RET
;
08cb: 18 0c f3 03 00             ; DICTP FLAGS>DICT (3f30c)
08d0: 0e 02                      ; CLITERAL 2
08d2: 0e 04                      ; CLITERAL 4
08d4: 13                         ; MUL
08d5: 12                         ; SUB
08d6: 0c                         ; RET
;
08d7: 18 f8 f2 03 00             ; DICTP NAME>DICT (3f2f8)
08dc: 0e 01                      ; CLITERAL 1
08de: 12                         ; SUB
08df: 0e 02                      ; CLITERAL 2
08e1: 0e 04                      ; CLITERAL 4
08e3: 13                         ; MUL
08e4: 12                         ; SUB
08e5: 0c                         ; RET
;
08e6: 18 e3 f2 03 00             ; DICTP DICT.GetXT (3f2e3)
08eb: 0b 99 08 00 00             ; CALL DICT>XT (0899)
08f0: 02                         ; FETCH
08f1: 0c                         ; RET
;
08f2: 18 cb f2 03 00             ; DICTP DICT.GetFLAGS (3f2cb)
08f7: 0b a2 08 00 00             ; CALL DICT>FLAGS (08a2)
08fc: 0f                         ; CFETCH
08fd: 0c                         ; RET
;
08fe: 18 b6 f2 03 00             ; DICTP DICTP>NAME (3f2b6)
0903: 0e 01                      ; CLITERAL 1
0905: 11                         ; ADD
0906: 02                         ; FETCH
0907: 0b ae 08 00 00             ; CALL DICT>NAME (08ae)
090c: 0c                         ; RET
;
090d: 18 a0 f2 03 00             ; DICTP XT.GetDICTP (3f2a0)
0912: 06                         ; DUP
0913: 0f                         ; CFETCH
0914: 0e 18                      ; CLITERAL 24
0916: 16                         ; EQ
0917: 09 25 09 00 00             ; JMPZ 0925
091c: 0e 01                      ; CLITERAL 1
091e: 11                         ; ADD
091f: 02                         ; FETCH
0920: 08 27 09 00 00             ; JMP 0927
0925: 05                         ; DROP
0926: fe                         ; RESET
0927: 0c                         ; RET
;
0928: 18 83 f2 03 00             ; DICTP FLAGS.ISIMMEDIATE? (3f283)
092d: 0e 01                      ; CLITERAL 1
092f: 24                         ; AND
0930: 0c                         ; RET
;
0931: 18 69 f2 03 00             ; DICTP FLAGS.ISINLINE? (3f269)
0936: 0e 02                      ; CLITERAL 2
0938: 24                         ; AND
0939: 0c                         ; RET
;
093a: 18 4d f2 03 00             ; DICTP DICT.GetIMMEDIATE (3f24d)
093f: 0b f2 08 00 00             ; CALL DICT.GetFLAGS (08f2)
0944: 0b 28 09 00 00             ; CALL FLAGS.ISIMMEDIATE? (0928)
0949: 0c                         ; RET
;
094a: 18 34 f2 03 00             ; DICTP DICT.GetINLINE (3f234)
094f: 0b f2 08 00 00             ; CALL DICT.GetFLAGS (08f2)
0954: 0b 31 09 00 00             ; CALL FLAGS.ISINLINE? (0931)
0959: 0c                         ; RET
;
095a: 18 1f f2 03 00             ; DICTP findInDict (3f21f)
095f: 0e 14                      ; CLITERAL 20
0961: 02                         ; FETCH
0962: 21                         ; DTOR
0963: 22                         ; RTOD
0964: 06                         ; DUP
0965: 21                         ; DTOR
0966: 06                         ; DUP
0967: 09 92 09 00 00             ; JMPZ 0992
096c: 0b ae 08 00 00             ; CALL DICT>NAME (08ae)
0971: 0e 01                      ; CLITERAL 1
0973: 11                         ; ADD
0974: 1a                         ; OVER
0975: 28                         ; COMPAREI
0976: 09 8d 09 00 00             ; JMPZ 098d
097b: 05                         ; DROP
097c: 22                         ; RTOD
097d: 06                         ; DUP
097e: 21                         ; DTOR
097f: 0b e6 08 00 00             ; CALL DICT.GetXT (08e6)
0984: 22                         ; RTOD
0985: 0b f2 08 00 00             ; CALL DICT.GetFLAGS (08f2)
098a: 0e 01                      ; CLITERAL 1
098c: 0c                         ; RET
098d: 08 9a 09 00 00             ; JMP 099a
0992: 05                         ; DROP
0993: 05                         ; DROP
0994: 22                         ; RTOD
0995: 0e 00                      ; CLITERAL 0
0997: 0e 00                      ; CLITERAL 0
0999: 0c                         ; RET
099a: 22                         ; RTOD
099b: 02                         ; FETCH
099c: 21                         ; DTOR
099d: 08 63 09 00 00             ; JMP 0963
09a2: 0c                         ; RET
;
09a3: 18 0e f2 03 00             ; DICTP isHEX? (3f20e)
09a8: 0e 06                      ; CLITERAL 6
09aa: 0f                         ; CFETCH
09ab: 0e 10                      ; CLITERAL 16
09ad: 16                         ; EQ
09ae: 0c                         ; RET
;
09af: 18 f9 f1 03 00             ; DICTP isNumChar? (3f1f9)
09b4: 06                         ; DUP
09b5: 0e 30                      ; CLITERAL 48
09b7: 0e 39                      ; CLITERAL 57
09b9: 0b aa 07 00 00             ; CALL BETWEEN (07aa)
09be: 09 c9 09 00 00             ; JMPZ 09c9
09c3: 0e 30                      ; CLITERAL 48
09c5: 12                         ; SUB
09c6: 0e 01                      ; CLITERAL 1
09c8: 0c                         ; RET
09c9: 0b a3 09 00 00             ; CALL isHEX? (09a3)
09ce: 09 fd 09 00 00             ; JMPZ 09fd
09d3: 06                         ; DUP
09d4: 0e 41                      ; CLITERAL 65
09d6: 0e 46                      ; CLITERAL 70
09d8: 0b aa 07 00 00             ; CALL BETWEEN (07aa)
09dd: 09 e8 09 00 00             ; JMPZ 09e8
09e2: 0e 37                      ; CLITERAL 55
09e4: 12                         ; SUB
09e5: 0e 01                      ; CLITERAL 1
09e7: 0c                         ; RET
09e8: 06                         ; DUP
09e9: 0e 61                      ; CLITERAL 97
09eb: 0e 66                      ; CLITERAL 102
09ed: 0b aa 07 00 00             ; CALL BETWEEN (07aa)
09f2: 09 fd 09 00 00             ; JMPZ 09fd
09f7: 0e 57                      ; CLITERAL 87
09f9: 12                         ; SUB
09fa: 0e 01                      ; CLITERAL 1
09fc: 0c                         ; RET
09fd: 0e 00                      ; CLITERAL 0
09ff: 0c                         ; RET
;
0a00: 18 e8 f1 03 00             ; DICTP NEGATE (3f1e8)
0a05: 0e 00                      ; CLITERAL 0
0a07: 04                         ; SWAP
0a08: 12                         ; SUB
0a09: 0c                         ; RET
;
0a0a: 18 da f1 03 00             ; DICTP ABS (3f1da)
0a0f: 06                         ; DUP
0a10: 0e 00                      ; CLITERAL 0
0a12: 15                         ; LT
0a13: 09 1d 0a 00 00             ; JMPZ 0a1d
0a18: 0b 00 0a 00 00             ; CALL NEGATE (0a00)
0a1d: 0c                         ; RET
;
0a1e: 18 c6 f1 03 00             ; DICTP isNumber? (3f1c6)
0a23: 06                         ; DUP
0a24: 0f                         ; CFETCH
0a25: 0e 2d                      ; CLITERAL 45
0a27: 16                         ; EQ
0a28: 06                         ; DUP
0a29: 0b 36 05 00 00             ; CALL isNeg (0536)
0a2e: 10                         ; CSTORE
0a2f: 09 37 0a 00 00             ; JMPZ 0a37
0a34: 0e 01                      ; CLITERAL 1
0a36: 11                         ; ADD
0a37: 0e 00                      ; CLITERAL 0
0a39: 21                         ; DTOR
0a3a: 06                         ; DUP
0a3b: 0f                         ; CFETCH
0a3c: 06                         ; DUP
0a3d: 0e 00                      ; CLITERAL 0
0a3f: 16                         ; EQ
0a40: 09 5b 0a 00 00             ; JMPZ 0a5b
0a45: 05                         ; DROP
0a46: 05                         ; DROP
0a47: 22                         ; RTOD
0a48: 0b 36 05 00 00             ; CALL isNeg (0536)
0a4d: 0f                         ; CFETCH
0a4e: 09 58 0a 00 00             ; JMPZ 0a58
0a53: 0b 00 0a 00 00             ; CALL NEGATE (0a00)
0a58: 0e 01                      ; CLITERAL 1
0a5a: 0c                         ; RET
0a5b: 0b af 09 00 00             ; CALL isNumChar? (09af)
0a60: 09 74 0a 00 00             ; JMPZ 0a74
0a65: 22                         ; RTOD
0a66: 0e 06                      ; CLITERAL 6
0a68: 0f                         ; CFETCH
0a69: 13                         ; MUL
0a6a: 11                         ; ADD
0a6b: 21                         ; DTOR
0a6c: 0e 01                      ; CLITERAL 1
0a6e: 11                         ; ADD
0a6f: 08 79 0a 00 00             ; JMP 0a79
0a74: 05                         ; DROP
0a75: 22                         ; RTOD
0a76: 0e 00                      ; CLITERAL 0
0a78: 0c                         ; RET
0a79: 08 3a 0a 00 00             ; JMP 0a3a
0a7e: 0c                         ; RET
;
0a7f: 18 b8 f1 03 00             ; DICTP MOD (3f1b8)
0a84: 1a                         ; OVER
0a85: 1a                         ; OVER
0a86: 14                         ; DIV
0a87: 13                         ; MUL
0a88: 12                         ; SUB
0a89: 0c                         ; RET
;
0a8a: 18 a9 f1 03 00             ; DICTP /MOD (3f1a9)
0a8f: 1a                         ; OVER
0a90: 1a                         ; OVER
0a91: 14                         ; DIV
0a92: 21                         ; DTOR
0a93: 22                         ; RTOD
0a94: 06                         ; DUP
0a95: 21                         ; DTOR
0a96: 13                         ; MUL
0a97: 12                         ; SUB
0a98: 22                         ; RTOD
0a99: 04                         ; SWAP
0a9a: 0c                         ; RET
;
0a9b: 18 9b f1 03 00             ; DICTP (.) (3f19b)
0aa0: 06                         ; DUP
0aa1: 0e 00                      ; CLITERAL 0
0aa3: 16                         ; EQ
0aa4: 09 ae 0a 00 00             ; JMPZ 0aae
0aa9: 05                         ; DROP
0aaa: 0e 30                      ; CLITERAL 48
0aac: 19                         ; EMIT
0aad: 0c                         ; RET
0aae: 06                         ; DUP
0aaf: 0e 00                      ; CLITERAL 0
0ab1: 15                         ; LT
0ab2: 09 c3 0a 00 00             ; JMPZ 0ac3
0ab7: 0b 00 0a 00 00             ; CALL NEGATE (0a00)
0abc: 0e 01                      ; CLITERAL 1
0abe: 08 c5 0a 00 00             ; JMP 0ac5
0ac3: 0e 00                      ; CLITERAL 0
0ac5: 21                         ; DTOR
0ac6: 0e 00                      ; CLITERAL 0
0ac8: 04                         ; SWAP
0ac9: 06                         ; DUP
0aca: 09 ec 0a 00 00             ; JMPZ 0aec
0acf: 0e 06                      ; CLITERAL 6
0ad1: 0f                         ; CFETCH
0ad2: 0b 8a 0a 00 00             ; CALL /MOD (0a8a)
0ad7: 0e 30                      ; CLITERAL 48
0ad9: 1a                         ; OVER
0ada: 0e 09                      ; CLITERAL 9
0adc: 17                         ; GT
0add: 09 e5 0a 00 00             ; JMPZ 0ae5
0ae2: 0e 07                      ; CLITERAL 7
0ae4: 11                         ; ADD
0ae5: 11                         ; ADD
0ae6: 04                         ; SWAP
0ae7: 08 09 0b 00 00             ; JMP 0b09
0aec: 05                         ; DROP
0aed: 22                         ; RTOD
0aee: 09 f6 0a 00 00             ; JMPZ 0af6
0af3: 0e 2d                      ; CLITERAL 45
0af5: 19                         ; EMIT
0af6: 06                         ; DUP
0af7: 09 02 0b 00 00             ; JMPZ 0b02
0afc: 19                         ; EMIT
0afd: 08 04 0b 00 00             ; JMP 0b04
0b02: 05                         ; DROP
0b03: 0c                         ; RET
0b04: 08 f6 0a 00 00             ; JMP 0af6
0b09: 08 c9 0a 00 00             ; JMP 0ac9
0b0e: 0c                         ; RET
;
0b0f: 18 8f f1 03 00             ; DICTP . (3f18f)
0b14: 0e 20                      ; CLITERAL 32
0b16: 19                         ; EMIT
0b17: 0b 9b 0a 00 00             ; CALL (.) (0a9b)
0b1c: 0c                         ; RET
;
0b1d: 18 80 f1 03 00             ; DICTP HEX. (3f180)
0b22: 0e 06                      ; CLITERAL 6
0b24: 0f                         ; CFETCH
0b25: 04                         ; SWAP
0b26: 0b 6a 04 00 00             ; CALL HEX (046a)
0b2b: 06                         ; DUP
0b2c: 0e 10                      ; CLITERAL 16
0b2e: 15                         ; LT
0b2f: 09 37 0b 00 00             ; JMPZ 0b37
0b34: 0e 30                      ; CLITERAL 48
0b36: 19                         ; EMIT
0b37: 0b 9b 0a 00 00             ; CALL (.) (0a9b)
0b3c: 0e 06                      ; CLITERAL 6
0b3e: 10                         ; CSTORE
0b3f: 0c                         ; RET
;
0b40: 18 6d f1 03 00             ; DICTP DECIMAL. (3f16d)
0b45: 0e 06                      ; CLITERAL 6
0b47: 0f                         ; CFETCH
0b48: 04                         ; SWAP
0b49: 0b 75 04 00 00             ; CALL DECIMAL (0475)
0b4e: 0b 9b 0a 00 00             ; CALL (.) (0a9b)
0b53: 0e 06                      ; CLITERAL 6
0b55: 10                         ; CSTORE
0b56: 0c                         ; RET
;
0b57: 18 5b f1 03 00             ; DICTP BINARY. (3f15b)
0b5c: 0e 06                      ; CLITERAL 6
0b5e: 0f                         ; CFETCH
0b5f: 04                         ; SWAP
0b60: 0b 8b 04 00 00             ; CALL BINARY (048b)
0b65: 0b 9b 0a 00 00             ; CALL (.) (0a9b)
0b6a: 0e 06                      ; CLITERAL 6
0b6c: 10                         ; CSTORE
0b6d: 0c                         ; RET
;
0b6e: 18 4d f1 03 00             ; DICTP MIN (3f14d)
0b73: 1a                         ; OVER
0b74: 1a                         ; OVER
0b75: 17                         ; GT
0b76: 09 7c 0b 00 00             ; JMPZ 0b7c
0b7b: 04                         ; SWAP
0b7c: 05                         ; DROP
0b7d: 0c                         ; RET
;
0b7e: 18 3f f1 03 00             ; DICTP MAX (3f13f)
0b83: 1a                         ; OVER
0b84: 1a                         ; OVER
0b85: 15                         ; LT
0b86: 09 8c 0b 00 00             ; JMPZ 0b8c
0b8b: 04                         ; SWAP
0b8c: 05                         ; DROP
0b8d: 0c                         ; RET
;
0b8e: 18 32 f1 03 00             ; DICTP .S (3f132)
0b93: 0e 20                      ; CLITERAL 32
0b95: 19                         ; EMIT
0b96: 26                         ; DEPTH
0b97: 0e 00                      ; CLITERAL 0
0b99: 15                         ; LT
0b9a: 09 bd 0b 00 00             ; JMPZ 0bbd
0b9f: 07 10 53 74 61 63 6b 20 75 6e 64 65 72 66 6c 6f 77 21 00 ; SLITERAL (0ba0) [Stack underflow!]
0bb2: 0b f2 06 00 00             ; CALL COUNT (06f2)
0bb7: 0b fe 06 00 00             ; CALL TYPE (06fe)
0bbc: fe                         ; RESET
0bbd: 26                         ; DEPTH
0bbe: 0e 00                      ; CLITERAL 0
0bc0: 16                         ; EQ
0bc1: 09 d0 0b 00 00             ; JMPZ 0bd0
0bc6: 0e 28                      ; CLITERAL 40
0bc8: 19                         ; EMIT
0bc9: 0e ed                      ; CLITERAL 237
0bcb: 19                         ; EMIT
0bcc: 0e 29                      ; CLITERAL 41
0bce: 19                         ; EMIT
0bcf: 0c                         ; RET
0bd0: 0e 28                      ; CLITERAL 40
0bd2: 19                         ; EMIT
0bd3: 26                         ; DEPTH
0bd4: 0e 01                      ; CLITERAL 1
0bd6: 12                         ; SUB
0bd7: 21                         ; DTOR
0bd8: 22                         ; RTOD
0bd9: 06                         ; DUP
0bda: 21                         ; DTOR
0bdb: 25                         ; PICK
0bdc: 0b 0f 0b 00 00             ; CALL . (0b0f)
0be1: 22                         ; RTOD
0be2: 06                         ; DUP
0be3: 21                         ; DTOR
0be4: 09 f3 0b 00 00             ; JMPZ 0bf3
0be9: 22                         ; RTOD
0bea: 0e 01                      ; CLITERAL 1
0bec: 12                         ; SUB
0bed: 21                         ; DTOR
0bee: 08 fc 0b 00 00             ; JMP 0bfc
0bf3: 22                         ; RTOD
0bf4: 05                         ; DROP
0bf5: 0e 20                      ; CLITERAL 32
0bf7: 19                         ; EMIT
0bf8: 0e 29                      ; CLITERAL 41
0bfa: 19                         ; EMIT
0bfb: 0c                         ; RET
0bfc: 08 d8 0b 00 00             ; JMP 0bd8
0c01: 0c                         ; RET
;
0c02: 18 1e f1 03 00             ; DICTP .(MEM_SZ) (3f11e)
0c07: 07 08 4d 65 6d 6f 72 79 3a 20 00 ; SLITERAL (0c08) [Memory: ]
0c12: 0b 20 07 00 00             ; CALL CT (0720)
0c17: 0b 56 05 00 00             ; CALL MEM_SZ (0556)
0c1c: 06                         ; DUP
0c1d: 0b 1d 0b 00 00             ; CALL HEX. (0b1d)
0c22: 07 02 20 28 00             ; SLITERAL (0c23) [ (]
0c27: 0b 20 07 00 00             ; CALL CT (0720)
0c2c: 0b 9b 0a 00 00             ; CALL (.) (0a9b)
0c31: 07 01 29 00                ; SLITERAL (0c32) [)]
0c35: 0b 20 07 00 00             ; CALL CT (0720)
0c3a: 0c                         ; RET
;
0c3b: 18 0c f1 03 00             ; DICTP .(HERE) (3f10c)
0c40: 07 06 48 45 52 45 3a 20 00 ; SLITERAL (0c41) [HERE: ]
0c49: 0b 20 07 00 00             ; CALL CT (0720)
0c4e: 0e 10                      ; CLITERAL 16
0c50: 02                         ; FETCH
0c51: 06                         ; DUP
0c52: 0b 1d 0b 00 00             ; CALL HEX. (0b1d)
0c57: 07 02 20 28 00             ; SLITERAL (0c58) [ (]
0c5c: 0b 20 07 00 00             ; CALL CT (0720)
0c61: 0b 9b 0a 00 00             ; CALL (.) (0a9b)
0c66: 07 01 29 00                ; SLITERAL (0c67) [)]
0c6a: 0b 20 07 00 00             ; CALL CT (0720)
0c6f: 0c                         ; RET
;
0c70: 18 fa f0 03 00             ; DICTP .(LAST) (3f0fa)
0c75: 07 06 4c 41 53 54 3a 20 00 ; SLITERAL (0c76) [LAST: ]
0c7e: 0b 20 07 00 00             ; CALL CT (0720)
0c83: 0e 14                      ; CLITERAL 20
0c85: 02                         ; FETCH
0c86: 06                         ; DUP
0c87: 0b 1d 0b 00 00             ; CALL HEX. (0b1d)
0c8c: 07 02 20 28 00             ; SLITERAL (0c8d) [ (]
0c91: 0b 20 07 00 00             ; CALL CT (0720)
0c96: 0b 9b 0a 00 00             ; CALL (.) (0a9b)
0c9b: 07 01 29 00                ; SLITERAL (0c9c) [)]
0c9f: 0b 20 07 00 00             ; CALL CT (0720)
0ca4: 0c                         ; RET
;
0ca5: 18 e4 f0 03 00             ; DICTP .WORD-SHORT (3f0e4)
0caa: 06                         ; DUP
0cab: 0b ae 08 00 00             ; CALL DICT>NAME (08ae)
0cb0: 0b 20 07 00 00             ; CALL CT (0720)
0cb5: 0e 20                      ; CLITERAL 32
0cb7: 19                         ; EMIT
0cb8: 02                         ; FETCH
0cb9: 0c                         ; RET
;
0cba: 18 d4 f0 03 00             ; DICTP WORDS (3f0d4)
0cbf: 0e 14                      ; CLITERAL 20
0cc1: 02                         ; FETCH
0cc2: 06                         ; DUP
0cc3: 02                         ; FETCH
0cc4: 0e 00                      ; CLITERAL 0
0cc6: 16                         ; EQ
0cc7: 09 d4 0c 00 00             ; JMPZ 0cd4
0ccc: 05                         ; DROP
0ccd: 0e 0d                      ; CLITERAL 13
0ccf: 19                         ; EMIT
0cd0: 0e 0a                      ; CLITERAL 10
0cd2: 19                         ; EMIT
0cd3: 0c                         ; RET
0cd4: 0b a5 0c 00 00             ; CALL .WORD-SHORT (0ca5)
0cd9: 08 c2 0c 00 00             ; JMP 0cc2
0cde: 0c                         ; RET
;
0cdf: 18 bf f0 03 00             ; DICTP .WORD-LONG (3f0bf)
0ce4: 06                         ; DUP
0ce5: 0b 1d 0b 00 00             ; CALL HEX. (0b1d)
0cea: 0e 3a                      ; CLITERAL 58
0cec: 19                         ; EMIT
0ced: 0e 20                      ; CLITERAL 32
0cef: 19                         ; EMIT
0cf0: 06                         ; DUP
0cf1: 0b ae 08 00 00             ; CALL DICT>NAME (08ae)
0cf6: 0b 20 07 00 00             ; CALL CT (0720)
0cfb: 0e 20                      ; CLITERAL 32
0cfd: 19                         ; EMIT
0cfe: 06                         ; DUP
0cff: 0b e6 08 00 00             ; CALL DICT.GetXT (08e6)
0d04: 0e 28                      ; CLITERAL 40
0d06: 19                         ; EMIT
0d07: 0b 1d 0b 00 00             ; CALL HEX. (0b1d)
0d0c: 0e 29                      ; CLITERAL 41
0d0e: 19                         ; EMIT
0d0f: 06                         ; DUP
0d10: 0b a2 08 00 00             ; CALL DICT>FLAGS (08a2)
0d15: 0f                         ; CFETCH
0d16: 06                         ; DUP
0d17: 07 09 2c 20 46 6c 61 67 73 3a 20 00 ; SLITERAL (0d18) [, Flags: ]
0d23: 0b 20 07 00 00             ; CALL CT (0720)
0d28: 0b 1d 0b 00 00             ; CALL HEX. (0b1d)
0d2d: 06                         ; DUP
0d2e: 0b 31 09 00 00             ; CALL FLAGS.ISINLINE? (0931)
0d33: 09 49 0d 00 00             ; JMPZ 0d49
0d38: 07 09 20 28 49 4e 4c 49 4e 45 29 00 ; SLITERAL (0d39) [ (INLINE)]
0d44: 0b 20 07 00 00             ; CALL CT (0720)
0d49: 0b 28 09 00 00             ; CALL FLAGS.ISIMMEDIATE? (0928)
0d4e: 09 67 0d 00 00             ; JMPZ 0d67
0d53: 07 0c 20 28 49 4d 4d 45 44 49 41 54 45 29 00 ; SLITERAL (0d54) [ (IMMEDIATE)]
0d62: 0b 20 07 00 00             ; CALL CT (0720)
0d67: 0e 0d                      ; CLITERAL 13
0d69: 19                         ; EMIT
0d6a: 0e 0a                      ; CLITERAL 10
0d6c: 19                         ; EMIT
0d6d: 02                         ; FETCH
0d6e: 0c                         ; RET
;
0d6f: 18 ae f0 03 00             ; DICTP WORDSV (3f0ae)
0d74: 0b 70 0c 00 00             ; CALL .(LAST) (0c70)
0d79: 0e 0d                      ; CLITERAL 13
0d7b: 19                         ; EMIT
0d7c: 0e 0a                      ; CLITERAL 10
0d7e: 19                         ; EMIT
0d7f: 0e 14                      ; CLITERAL 20
0d81: 02                         ; FETCH
0d82: 06                         ; DUP
0d83: 02                         ; FETCH
0d84: 0e 00                      ; CLITERAL 0
0d86: 16                         ; EQ
0d87: 09 94 0d 00 00             ; JMPZ 0d94
0d8c: 05                         ; DROP
0d8d: 0e 0d                      ; CLITERAL 13
0d8f: 19                         ; EMIT
0d90: 0e 0a                      ; CLITERAL 10
0d92: 19                         ; EMIT
0d93: 0c                         ; RET
0d94: 0b df 0c 00 00             ; CALL .WORD-LONG (0cdf)
0d99: 08 82 0d 00 00             ; JMP 0d82
0d9e: 0c                         ; RET
;
0d9f: 18 9a f0 03 00             ; DICTP NUM-WORDS (3f09a)
0da4: 0e 00                      ; CLITERAL 0
0da6: 21                         ; DTOR
0da7: 0e 14                      ; CLITERAL 20
0da9: 02                         ; FETCH
0daa: 06                         ; DUP
0dab: 02                         ; FETCH
0dac: 0e 00                      ; CLITERAL 0
0dae: 16                         ; EQ
0daf: 09 bd 0d 00 00             ; JMPZ 0dbd
0db4: 05                         ; DROP
0db5: 22                         ; RTOD
0db6: 0e 0d                      ; CLITERAL 13
0db8: 19                         ; EMIT
0db9: 0e 0a                      ; CLITERAL 10
0dbb: 19                         ; EMIT
0dbc: 0c                         ; RET
0dbd: 22                         ; RTOD
0dbe: 0e 01                      ; CLITERAL 1
0dc0: 11                         ; ADD
0dc1: 21                         ; DTOR
0dc2: 02                         ; FETCH
0dc3: 08 aa 0d 00 00             ; JMP 0daa
0dc8: 0c                         ; RET
;
0dc9: 18 89 f0 03 00             ; DICTP .lastx (3f089)
0dce: 0e 0d                      ; CLITERAL 13
0dd0: 19                         ; EMIT
0dd1: 0e 0a                      ; CLITERAL 10
0dd3: 19                         ; EMIT
0dd4: 0e 14                      ; CLITERAL 20
0dd6: 02                         ; FETCH
0dd7: 04                         ; SWAP
0dd8: 0e 00                      ; CLITERAL 0
0dda: 1a                         ; OVER
0ddb: 1a                         ; OVER
0ddc: 17                         ; GT
0ddd: 09 f7 0d 00 00             ; JMPZ 0df7
0de2: 21                         ; DTOR
0de3: 04                         ; SWAP
0de4: 22                         ; RTOD
0de5: 04                         ; SWAP
0de6: 0b df 0c 00 00             ; CALL .WORD-LONG (0cdf)
0deb: 04                         ; SWAP
0dec: 21                         ; DTOR
0ded: 04                         ; SWAP
0dee: 22                         ; RTOD
0def: 0e 01                      ; CLITERAL 1
0df1: 11                         ; ADD
0df2: 08 fb 0d 00 00             ; JMP 0dfb
0df7: 05                         ; DROP
0df8: 05                         ; DROP
0df9: 05                         ; DROP
0dfa: 0c                         ; RET
0dfb: 08 da 0d 00 00             ; JMP 0dda
0e00: 0c                         ; RET
;
0e01: 18 77 f0 03 00             ; DICTP EXECUTE (3f077)
0e06: 22                         ; RTOD
0e07: 05                         ; DROP
0e08: 21                         ; DTOR
0e09: 0c                         ; RET
;
0e0a: 18 64 f0 03 00             ; DICTP find.ret (3f064)
0e0f: 06                         ; DUP
0e10: 0f                         ; CFETCH
0e11: 0e 0c                      ; CLITERAL 12
0e13: 16                         ; EQ
0e14: 09 1a 0e 00 00             ; JMPZ 0e1a
0e19: 0c                         ; RET
0e1a: 0e 01                      ; CLITERAL 1
0e1c: 11                         ; ADD
0e1d: 08 0f 0e 00 00             ; JMP 0e0f
0e22: 0c                         ; RET
;
0e23: 18 51 f0 03 00             ; DICTP (inline) (3f051)
0e28: 1a                         ; OVER
0e29: 1a                         ; OVER
0e2a: 15                         ; LT
0e2b: 09 31 0e 00 00             ; JMPZ 0e31
0e30: 04                         ; SWAP
0e31: 06                         ; DUP
0e32: 0f                         ; CFETCH
0e33: 0b 70 00 00 00             ; CALL C, (0070)
0e38: 0e 01                      ; CLITERAL 1
0e3a: 11                         ; ADD
0e3b: 1a                         ; OVER
0e3c: 1a                         ; OVER
0e3d: 17                         ; GT
0e3e: 0a 31 0e 00 00             ; JMPNZ 0e31
0e43: 05                         ; DROP
0e44: 05                         ; DROP
0e45: 0c                         ; RET
;
0e46: 18 41 f0 03 00             ; DICTP DOES> (3f041)
0e4b: 22                         ; RTOD
0e4c: 06                         ; DUP
0e4d: 0b 0a 0e 00 00             ; CALL find.ret (0e0a)
0e52: 06                         ; DUP
0e53: 21                         ; DTOR
0e54: 0e 01                      ; CLITERAL 1
0e56: 11                         ; ADD
0e57: 0b 23 0e 00 00             ; CALL (inline) (0e23)
0e5c: 0c                         ; RET
;
0e5d: 18 2b f0 03 00             ; DICTP Copy.INLINE (3f02b)
0e62: 06                         ; DUP
0e63: 0f                         ; CFETCH
0e64: 0e 18                      ; CLITERAL 24
0e66: 16                         ; EQ
0e67: 09 72 0e 00 00             ; JMPZ 0e72
0e6c: 0e 01                      ; CLITERAL 1
0e6e: 11                         ; ADD
0e6f: 0e 04                      ; CLITERAL 4
0e71: 11                         ; ADD
0e72: 06                         ; DUP
0e73: 0b 0a 0e 00 00             ; CALL find.ret (0e0a)
0e78: 0b 23 0e 00 00             ; CALL (inline) (0e23)
0e7d: 0c                         ; RET
;
0e7e: 18 1a f0 03 00             ; DICTP strlen (3f01a)
0e83: 0e 00                      ; CLITERAL 0
0e85: 04                         ; SWAP
0e86: 04                         ; SWAP
0e87: 1a                         ; OVER
0e88: 0f                         ; CFETCH
0e89: 06                         ; DUP
0e8a: 09 99 0e 00 00             ; JMPZ 0e99
0e8f: 05                         ; DROP
0e90: 0e 01                      ; CLITERAL 1
0e92: 11                         ; ADD
0e93: 04                         ; SWAP
0e94: 0e 01                      ; CLITERAL 1
0e96: 11                         ; ADD
0e97: 0e 01                      ; CLITERAL 1
0e99: 0a 86 0e 00 00             ; JMPNZ 0e86
0e9e: 04                         ; SWAP
0e9f: 05                         ; DROP
0ea0: 0c                         ; RET
;
0ea1: 18 0a f0 03 00             ; DICTP cstr, (3f00a)
0ea6: 06                         ; DUP
0ea7: 0f                         ; CFETCH
0ea8: 1a                         ; OVER
0ea9: 11                         ; ADD
0eaa: 0e 01                      ; CLITERAL 1
0eac: 11                         ; ADD
0ead: 0e 01                      ; CLITERAL 1
0eaf: 11                         ; ADD
0eb0: 0b 23 0e 00 00             ; CALL (inline) (0e23)
0eb5: 0c                         ; RET
;
0eb6: 18 f6 ef 03 00             ; DICTP [COMPILE] (3eff6)
0ebb: 0b 31 09 00 00             ; CALL FLAGS.ISINLINE? (0931)
0ec0: 09 cf 0e 00 00             ; JMPZ 0ecf
0ec5: 0b 5d 0e 00 00             ; CALL Copy.INLINE (0e5d)
0eca: 08 db 0e 00 00             ; JMP 0edb
0ecf: 0e 0b                      ; CLITERAL 11
0ed1: 0b 70 00 00 00             ; CALL C, (0070)
0ed6: 0b 2c 04 00 00             ; CALL , (042c)
0edb: 0c                         ; RET
;
0edc: 18 e0 ef 03 00             ; DICTP executeWord (3efe0)
0ee1: 21                         ; DTOR
0ee2: 22                         ; RTOD
0ee3: 06                         ; DUP
0ee4: 21                         ; DTOR
0ee5: 0b 5a 09 00 00             ; CALL findInDict (095a)
0eea: 09 26 0f 00 00             ; JMPZ 0f26
0eef: 22                         ; RTOD
0ef0: 05                         ; DROP
0ef1: 0b c0 04 00 00             ; CALL ?COMPILING (04c0)
0ef6: 09 1b 0f 00 00             ; JMPZ 0f1b
0efb: 06                         ; DUP
0efc: 0b 28 09 00 00             ; CALL FLAGS.ISIMMEDIATE? (0928)
0f01: 09 11 0f 00 00             ; JMPZ 0f11
0f06: 05                         ; DROP
0f07: 0b 01 0e 00 00             ; CALL EXECUTE (0e01)
0f0c: 08 16 0f 00 00             ; JMP 0f16
0f11: 0b b6 0e 00 00             ; CALL [COMPILE] (0eb6)
0f16: 08 21 0f 00 00             ; JMP 0f21
0f1b: 05                         ; DROP
0f1c: 0b 01 0e 00 00             ; CALL EXECUTE (0e01)
0f21: 08 7e 0f 00 00             ; JMP 0f7e
0f26: 05                         ; DROP
0f27: 05                         ; DROP
0f28: 22                         ; RTOD
0f29: 06                         ; DUP
0f2a: 21                         ; DTOR
0f2b: 0b 1e 0a 00 00             ; CALL isNumber? (0a1e)
0f30: 09 70 0f 00 00             ; JMPZ 0f70
0f35: 0b c0 04 00 00             ; CALL ?COMPILING (04c0)
0f3a: 09 6b 0f 00 00             ; JMPZ 0f6b
0f3f: 06                         ; DUP
0f40: 0e 00                      ; CLITERAL 0
0f42: 0e ff                      ; CLITERAL 255
0f44: 0b aa 07 00 00             ; CALL BETWEEN (07aa)
0f49: 09 5f 0f 00 00             ; JMPZ 0f5f
0f4e: 0e 0e                      ; CLITERAL 14
0f50: 0b 70 00 00 00             ; CALL C, (0070)
0f55: 0b 70 00 00 00             ; CALL C, (0070)
0f5a: 08 6b 0f 00 00             ; JMP 0f6b
0f5f: 0e 01                      ; CLITERAL 1
0f61: 0b 70 00 00 00             ; CALL C, (0070)
0f66: 0b 2c 04 00 00             ; CALL , (042c)
0f6b: 08 7c 0f 00 00             ; JMP 0f7c
0f70: 05                         ; DROP
0f71: 07 02 3f 3f 00             ; SLITERAL (0f72) [??]
0f76: 0b 20 07 00 00             ; CALL CT (0720)
0f7b: fe                         ; RESET
0f7c: 22                         ; RTOD
0f7d: 05                         ; DROP
0f7e: 0c                         ; RET
;
0f7f: 18 c9 ef 03 00             ; DICTP executeInput (3efc9)
0f84: 0b 26 05 00 00             ; CALL >IN (0526)
0f89: 02                         ; FETCH
0f8a: 0b 2c 08 00 00             ; CALL skipWS (082c)
0f8f: 0b 26 05 00 00             ; CALL >IN (0526)
0f94: 03                         ; STORE
0f95: 0b 26 05 00 00             ; CALL >IN (0526)
0f9a: 02                         ; FETCH
0f9b: 0f                         ; CFETCH
0f9c: 09 bc 0f 00 00             ; JMPZ 0fbc
0fa1: 0b 26 05 00 00             ; CALL >IN (0526)
0fa6: 02                         ; FETCH
0fa7: 0b 57 08 00 00             ; CALL getOneWord (0857)
0fac: 0b 26 05 00 00             ; CALL >IN (0526)
0fb1: 03                         ; STORE
0fb2: 0b dc 0e 00 00             ; CALL executeWord (0edc)
0fb7: 08 bd 0f 00 00             ; JMP 0fbd
0fbc: 0c                         ; RET
0fbd: 08 84 0f 00 00             ; JMP 0f84
0fc2: 0c                         ; RET
;
0fc3: 18 bb ef 03 00             ; DICTP Pad (3efbb)
0fc8: 0e 14                      ; CLITERAL 20
0fca: 02                         ; FETCH
0fcb: 0e c8                      ; CLITERAL 200
0fcd: 12                         ; SUB
0fce: 06                         ; DUP
0fcf: 0e 10                      ; CLITERAL 16
0fd1: 02                         ; FETCH
0fd2: 15                         ; LT
0fd3: 09 ea 0f 00 00             ; JMPZ 0fea
0fd8: 07 0e 4f 75 74 20 6f 66 20 4d 65 6d 6f 72 79 21 00 ; SLITERAL (0fd9) [Out of Memory!]
0fe9: fe                         ; RESET
0fea: 0c                         ; RET
;
0feb: 18 a0 ef 03 00             ; DICTP LoadingFromFile? (3efa0)
0ff0: 0e 1c                      ; CLITERAL 28
0ff2: 02                         ; FETCH
0ff3: 0c                         ; RET
;
0ff4: 18 86 ef 03 00             ; DICTP getLineFromFile (3ef86)
0ff9: 0e c8                      ; CLITERAL 200
0ffb: 0e 1c                      ; CLITERAL 28
0ffd: 02                         ; FETCH
0ffe: 1e                         ; FREADLINE
0fff: 0e 00                      ; CLITERAL 0
1001: 16                         ; EQ
1002: 09 0e 10 00 00             ; JMPZ 100e
1007: 0e 1c                      ; CLITERAL 28
1009: 0b a0 04 00 00             ; CALL OFF (04a0)
100e: 0c                         ; RET
;
100f: 18 74 ef 03 00             ; DICTP getLine (3ef74)
1014: 0e 00                      ; CLITERAL 0
1016: 0b c3 0f 00 00             ; CALL Pad (0fc3)
101b: 06                         ; DUP
101c: 0e 01                      ; CLITERAL 1
101e: 11                         ; ADD
101f: 0b 26 05 00 00             ; CALL >IN (0526)
1024: 03                         ; STORE
1025: 10                         ; CSTORE
1026: 0b eb 0f 00 00             ; CALL LoadingFromFile? (0feb)
102b: 09 3b 10 00 00             ; JMPZ 103b
1030: 0b c3 0f 00 00             ; CALL Pad (0fc3)
1035: 0b f4 0f 00 00             ; CALL getLineFromFile (0ff4)
103a: 0c                         ; RET
103b: 0e 00                      ; CLITERAL 0
103d: 0b 26 05 00 00             ; CALL >IN (0526)
1042: 02                         ; FETCH
1043: 10                         ; CSTORE
1044: 27                         ; GETCH
1045: 06                         ; DUP
1046: 0e 0d                      ; CLITERAL 13
1048: 16                         ; EQ
1049: 09 58 10 00 00             ; JMPZ 1058
104e: 05                         ; DROP
104f: 0b c3 0f 00 00             ; CALL Pad (0fc3)
1054: 0e 20                      ; CLITERAL 32
1056: 19                         ; EMIT
1057: 0c                         ; RET
1058: 06                         ; DUP
1059: 0e 09                      ; CLITERAL 9
105b: 16                         ; EQ
105c: 09 64 10 00 00             ; JMPZ 1064
1061: 05                         ; DROP
1062: 0e 20                      ; CLITERAL 32
1064: 06                         ; DUP
1065: 0e 03                      ; CLITERAL 3
1067: 16                         ; EQ
1068: 09 6e 10 00 00             ; JMPZ 106e
106d: ff                         ; BYE
106e: 06                         ; DUP
106f: 0e 08                      ; CLITERAL 8
1071: 16                         ; EQ
1072: 09 aa 10 00 00             ; JMPZ 10aa
1077: 0b c3 0f 00 00             ; CALL Pad (0fc3)
107c: 0f                         ; CFETCH
107d: 0e 00                      ; CLITERAL 0
107f: 17                         ; GT
1080: 09 a4 10 00 00             ; JMPZ 10a4
1085: 0b c3 0f 00 00             ; CALL Pad (0fc3)
108a: 0b 0f 06 00 00             ; CALL C-- (060f)
108f: 0b 26 05 00 00             ; CALL >IN (0526)
1094: 0b f5 05 00 00             ; CALL -- (05f5)
1099: 06                         ; DUP
109a: 19                         ; EMIT
109b: 0e 20                      ; CLITERAL 32
109d: 19                         ; EMIT
109e: 19                         ; EMIT
109f: 08 a5 10 00 00             ; JMP 10a5
10a4: 05                         ; DROP
10a5: 08 dc 10 00 00             ; JMP 10dc
10aa: 06                         ; DUP
10ab: 0e 20                      ; CLITERAL 32
10ad: 0e 7f                      ; CLITERAL 127
10af: 0b aa 07 00 00             ; CALL BETWEEN (07aa)
10b4: 09 db 10 00 00             ; JMPZ 10db
10b9: 06                         ; DUP
10ba: 19                         ; EMIT
10bb: 0b 26 05 00 00             ; CALL >IN (0526)
10c0: 02                         ; FETCH
10c1: 10                         ; CSTORE
10c2: 0b 26 05 00 00             ; CALL >IN (0526)
10c7: 0b e8 05 00 00             ; CALL ++ (05e8)
10cc: 0b c3 0f 00 00             ; CALL Pad (0fc3)
10d1: 0b 02 06 00 00             ; CALL C++ (0602)
10d6: 08 dc 10 00 00             ; JMP 10dc
10db: 05                         ; DROP
10dc: 08 3b 10 00 00             ; JMP 103b
10e1: 0c                         ; RET
;
10e2: 18 61 ef 03 00             ; DICTP strcpy2c (3ef61)
10e7: 06                         ; DUP
10e8: 21                         ; DTOR
10e9: 0e 00                      ; CLITERAL 0
10eb: 1a                         ; OVER
10ec: 10                         ; CSTORE
10ed: 0e 01                      ; CLITERAL 1
10ef: 11                         ; ADD
10f0: 04                         ; SWAP
10f1: 06                         ; DUP
10f2: 0f                         ; CFETCH
10f3: 06                         ; DUP
10f4: 09 12 11 00 00             ; JMPZ 1112
10f9: 0e 02                      ; CLITERAL 2
10fb: 25                         ; PICK
10fc: 10                         ; CSTORE
10fd: 04                         ; SWAP
10fe: 0e 01                      ; CLITERAL 1
1100: 11                         ; ADD
1101: 04                         ; SWAP
1102: 0e 01                      ; CLITERAL 1
1104: 11                         ; ADD
1105: 22                         ; RTOD
1106: 06                         ; DUP
1107: 21                         ; DTOR
1108: 0b 02 06 00 00             ; CALL C++ (0602)
110d: 08 1b 11 00 00             ; JMP 111b
1112: 21                         ; DTOR
1113: 04                         ; SWAP
1114: 22                         ; RTOD
1115: 04                         ; SWAP
1116: 10                         ; CSTORE
1117: 05                         ; DROP
1118: 22                         ; RTOD
1119: 05                         ; DROP
111a: 0c                         ; RET
111b: 08 f1 10 00 00             ; JMP 10f1
1120: 0c                         ; RET
;
1121: 18 4b ef 03 00             ; DICTP Define-Word (3ef4b)
1126: 0e 14                      ; CLITERAL 20
1128: 02                         ; FETCH
1129: 1a                         ; OVER
112a: 0b 7e 0e 00 00             ; CALL strlen (0e7e)
112f: 0e 02                      ; CLITERAL 2
1131: 0e 04                      ; CLITERAL 4
1133: 13                         ; MUL
1134: 0e 03                      ; CLITERAL 3
1136: 11                         ; ADD
1137: 11                         ; ADD
1138: 12                         ; SUB
1139: 06                         ; DUP
113a: 21                         ; DTOR
113b: 21                         ; DTOR
113c: 0e 14                      ; CLITERAL 20
113e: 02                         ; FETCH
113f: 22                         ; RTOD
1140: 06                         ; DUP
1141: 21                         ; DTOR
1142: 03                         ; STORE
1143: 22                         ; RTOD
1144: 0e 04                      ; CLITERAL 4
1146: 11                         ; ADD
1147: 21                         ; DTOR
1148: 0e 10                      ; CLITERAL 16
114a: 02                         ; FETCH
114b: 22                         ; RTOD
114c: 06                         ; DUP
114d: 21                         ; DTOR
114e: 03                         ; STORE
114f: 22                         ; RTOD
1150: 0e 04                      ; CLITERAL 4
1152: 11                         ; ADD
1153: 21                         ; DTOR
1154: 0e 00                      ; CLITERAL 0
1156: 22                         ; RTOD
1157: 06                         ; DUP
1158: 21                         ; DTOR
1159: 10                         ; CSTORE
115a: 22                         ; RTOD
115b: 0e 01                      ; CLITERAL 1
115d: 11                         ; ADD
115e: 21                         ; DTOR
115f: 22                         ; RTOD
1160: 0b e2 10 00 00             ; CALL strcpy2c (10e2)
1165: 22                         ; RTOD
1166: 0e 14                      ; CLITERAL 20
1168: 03                         ; STORE
1169: 0c                         ; RET
;
116a: 18 35 ef 03 00             ; DICTP CREATE-NAME (3ef35)
116f: 0b 26 05 00 00             ; CALL >IN (0526)
1174: 02                         ; FETCH
1175: 0b 2c 08 00 00             ; CALL skipWS (082c)
117a: 0b 26 05 00 00             ; CALL >IN (0526)
117f: 03                         ; STORE
1180: 0b 26 05 00 00             ; CALL >IN (0526)
1185: 02                         ; FETCH
1186: 0f                         ; CFETCH
1187: 09 bf 11 00 00             ; JMPZ 11bf
118c: 0b 26 05 00 00             ; CALL >IN (0526)
1191: 02                         ; FETCH
1192: 0b 57 08 00 00             ; CALL getOneWord (0857)
1197: 0b 26 05 00 00             ; CALL >IN (0526)
119c: 03                         ; STORE
119d: 06                         ; DUP
119e: 0f                         ; CFETCH
119f: 09 bd 11 00 00             ; JMPZ 11bd
11a4: 0b 21 11 00 00             ; CALL Define-Word (1121)
11a9: 0e 18                      ; CLITERAL 24
11ab: 0b 70 00 00 00             ; CALL C, (0070)
11b0: 0e 14                      ; CLITERAL 20
11b2: 02                         ; FETCH
11b3: 0b 2c 04 00 00             ; CALL , (042c)
11b8: 08 bf 11 00 00             ; JMP 11bf
11bd: 05                         ; DROP
11be: fe                         ; RESET
11bf: 0c                         ; RET
;
11c0: 18 29 ef 03 00             ; DICTP : (3ef29)
11c5: 0b 6a 11 00 00             ; CALL CREATE-NAME (116a)
11ca: 0e 20                      ; CLITERAL 32
11cc: 0b 96 04 00 00             ; CALL ON (0496)
11d1: 0c                         ; RET
;
11d2: 18 17 ef 03 00             ; DICTP :NONAME (3ef17)
11d7: 0e 10                      ; CLITERAL 16
11d9: 02                         ; FETCH
11da: 0e 20                      ; CLITERAL 32
11dc: 0b 96 04 00 00             ; CALL ON (0496)
11e1: 0c                         ; RET
;
11e2: 18 0b ef 03 00             ; DICTP ; (3ef0b)
11e7: 0e 0c                      ; CLITERAL 12
11e9: 0b 70 00 00 00             ; CALL C, (0070)
11ee: 0e 20                      ; CLITERAL 32
11f0: 0b a0 04 00 00             ; CALL OFF (04a0)
11f5: 0c                         ; RET
;
11f6: 18 f6 ee 03 00             ; DICTP ForgetLast (3eef6)
11fb: 0e 14                      ; CLITERAL 20
11fd: 02                         ; FETCH
11fe: 0e 04                      ; CLITERAL 4
1200: 11                         ; ADD
1201: 02                         ; FETCH
1202: 0e 10                      ; CLITERAL 16
1204: 03                         ; STORE
1205: 0e 14                      ; CLITERAL 20
1207: 02                         ; FETCH
1208: 02                         ; FETCH
1209: 0e 14                      ; CLITERAL 20
120b: 03                         ; STORE
120c: 0c                         ; RET
;
120d: 18 e1 ee 03 00             ; DICTP resetState (3eee1)
1212: 0b c0 04 00 00             ; CALL ?COMPILING (04c0)
1217: 09 21 12 00 00             ; JMPZ 1221
121c: 0b f6 11 00 00             ; CALL ForgetLast (11f6)
1221: 0e 20                      ; CLITERAL 32
1223: 0b a0 04 00 00             ; CALL OFF (04a0)
1228: 0b 75 04 00 00             ; CALL DECIMAL (0475)
122d: 0c                         ; RET
;
122e: 18 d1 ee 03 00             ; DICTP ALLOT (3eed1)
1233: 0e 10                      ; CLITERAL 16
1235: 02                         ; FETCH
1236: 11                         ; ADD
1237: 0e 10                      ; CLITERAL 16
1239: 03                         ; STORE
123a: 0c                         ; RET
;
123b: 18 c5 ee 03 00             ; DICTP ? (3eec5)
1240: 02                         ; FETCH
1241: 0b 0f 0b 00 00             ; CALL . (0b0f)
1246: 0c                         ; RET
;
1247: 18 b8 ee 03 00             ; DICTP C? (3eeb8)
124c: 0f                         ; CFETCH
124d: 0b 0f 0b 00 00             ; CALL . (0b0f)
1252: 0c                         ; RET
;
1253: 18 a9 ee 03 00             ; DICTP FREE (3eea9)
1258: 0e 14                      ; CLITERAL 20
125a: 02                         ; FETCH
125b: 0e 10                      ; CLITERAL 16
125d: 02                         ; FETCH
125e: 12                         ; SUB
125f: 0c                         ; RET
;
1260: 18 99 ee 03 00             ; DICTP FREE? (3ee99)
1265: 0b 53 12 00 00             ; CALL FREE (1253)
126a: 0b 9b 0a 00 00             ; CALL (.) (0a9b)
126f: 07 0c 20 62 79 74 65 73 20 66 72 65 65 2e 00 ; SLITERAL (1270) [ bytes free.]
127e: 0b 20 07 00 00             ; CALL CT (0720)
1283: 0c                         ; RET
;
1284: 18 86 ee 03 00             ; DICTP mainLoop (3ee86)
1289: 0b 0d 12 00 00             ; CALL resetState (120d)
128e: 0b d2 07 00 00             ; CALL tmp-init (07d2)
1293: 0b c0 04 00 00             ; CALL ?COMPILING (04c0)
1298: 0e 00                      ; CLITERAL 0
129a: 16                         ; EQ
129b: 09 b0 12 00 00             ; JMPZ 12b0
12a0: 07 03 20 4f 4b 00          ; SLITERAL (12a1) [ OK]
12a6: 0b 20 07 00 00             ; CALL CT (0720)
12ab: 0b 8e 0b 00 00             ; CALL .S (0b8e)
12b0: 0e 0d                      ; CLITERAL 13
12b2: 19                         ; EMIT
12b3: 0e 0a                      ; CLITERAL 10
12b5: 19                         ; EMIT
12b6: 0b 0f 10 00 00             ; CALL getLine (100f)
12bb: 0e 01                      ; CLITERAL 1
12bd: 11                         ; ADD
12be: 0b 26 05 00 00             ; CALL >IN (0526)
12c3: 03                         ; STORE
12c4: 0b 7f 0f 00 00             ; CALL executeInput (0f7f)
12c9: 0e 20                      ; CLITERAL 32
12cb: 19                         ; EMIT
12cc: 08 8e 12 00 00             ; JMP 128e
12d1: 0c                         ; RET
;
12d2: 18 77 ee 03 00             ; DICTP main (3ee77)
12d7: 0e 20                      ; CLITERAL 32
12d9: 02                         ; FETCH
12da: 0e 63                      ; CLITERAL 99
12dc: 16                         ; EQ
12dd: 09 f7 12 00 00             ; JMPZ 12f7
12e2: 0e 20                      ; CLITERAL 32
12e4: 0b a0 04 00 00             ; CALL OFF (04a0)
12e9: 07 06 48 65 6c 6c 6f 2e 00 ; SLITERAL (12ea) [Hello.]
12f2: 0b 20 07 00 00             ; CALL CT (0720)
12f7: 0b 84 12 00 00             ; CALL mainLoop (1284)
12fc: 0c                         ; RET
;
12fd: 18 60 ee 03 00             ; DICTP file-getLine (3ee60)
1302: 0b c3 0f 00 00             ; CALL Pad (0fc3)
1307: 04                         ; SWAP
1308: 0e c8                      ; CLITERAL 200
130a: 04                         ; SWAP
130b: 1e                         ; FREADLINE
130c: 0b c3 0f 00 00             ; CALL Pad (0fc3)
1311: 04                         ; SWAP
1312: 0c                         ; RET
;
1313: 18 51 ee 03 00             ; DICTP load (3ee51)
1318: 0e 00                      ; CLITERAL 0
131a: 0e 00                      ; CLITERAL 0
131c: 1c                         ; FOPEN
131d: 0e 00                      ; CLITERAL 0
131f: 16                         ; EQ
1320: 09 3f 13 00 00             ; JMPZ 133f
1325: 07 11 43 61 6e 6e 6f 74 20 6f 70 65 6e 20 66 69 6c 65 2e 00 ; SLITERAL (1326) [Cannot open file.]
1339: 0b 20 07 00 00             ; CALL CT (0720)
133e: 0c                         ; RET
133f: 0e 1c                      ; CLITERAL 28
1341: 03                         ; STORE
1342: 0e 1c                      ; CLITERAL 28
1344: 02                         ; FETCH
1345: 0b fd 12 00 00             ; CALL file-getLine (12fd)
134a: 09 62 13 00 00             ; JMPZ 1362
134f: 0e 01                      ; CLITERAL 1
1351: 11                         ; ADD
1352: 0b 26 05 00 00             ; CALL >IN (0526)
1357: 03                         ; STORE
1358: 0b 7f 0f 00 00             ; CALL executeInput (0f7f)
135d: 08 6f 13 00 00             ; JMP 136f
1362: 05                         ; DROP
1363: 0e 1c                      ; CLITERAL 28
1365: 02                         ; FETCH
1366: 20                         ; FCLOSE
1367: 0e 1c                      ; CLITERAL 28
1369: 0b a0 04 00 00             ; CALL OFF (04a0)
136e: 0c                         ; RET
136f: 08 42 13 00 00             ; JMP 1342
1374: 0c                         ; RET
;
1375: 18 3d ee 03 00             ; DICTP STR.EMPTY (3ee3d)
137a: 0e 00                      ; CLITERAL 0
137c: 1a                         ; OVER
137d: 03                         ; STORE
137e: 0c                         ; RET
;
137f: 18 2b ee 03 00             ; DICTP STR.LEN (3ee2b)
1384: 06                         ; DUP
1385: 0f                         ; CFETCH
1386: 0c                         ; RET
;
1387: 18 18 ee 03 00             ; DICTP STR.CATC (3ee18)
138c: 1a                         ; OVER
138d: 06                         ; DUP
138e: 0b 02 06 00 00             ; CALL C++ (0602)
1393: 06                         ; DUP
1394: 0f                         ; CFETCH
1395: 11                         ; ADD
1396: 0e 00                      ; CLITERAL 0
1398: 1a                         ; OVER
1399: 0e 01                      ; CLITERAL 1
139b: 11                         ; ADD
139c: 10                         ; CSTORE
139d: 10                         ; CSTORE
139e: 0c                         ; RET
;
139f: 18 01 ee 03 00             ; DICTP STR.NULLTERM (3ee01)
13a4: 06                         ; DUP
13a5: 06                         ; DUP
13a6: 0f                         ; CFETCH
13a7: 11                         ; ADD
13a8: 0e 01                      ; CLITERAL 1
13aa: 11                         ; ADD
13ab: 0e 00                      ; CLITERAL 0
13ad: 04                         ; SWAP
13ae: 10                         ; CSTORE
13af: 0c                         ; RET
;
13b0: 18 f4 ed 03 00             ; DICTP I" (3edf4)
13b5: 0e 10                      ; CLITERAL 16
13b7: 02                         ; FETCH
13b8: 0e 64                      ; CLITERAL 100
13ba: 11                         ; ADD
13bb: 0e 00                      ; CLITERAL 0
13bd: 1a                         ; OVER
13be: 03                         ; STORE
13bf: 0b 26 05 00 00             ; CALL >IN (0526)
13c4: 02                         ; FETCH
13c5: 0f                         ; CFETCH
13c6: 06                         ; DUP
13c7: 0e 00                      ; CLITERAL 0
13c9: 16                         ; EQ
13ca: 09 eb 13 00 00             ; JMPZ 13eb
13cf: 07 10 6d 69 73 73 69 6e 67 20 63 6c 6f 73 69 6e 67 20 00 ; SLITERAL (13d0) [missing closing ]
13e2: 0b 20 07 00 00             ; CALL CT (0720)
13e7: 0e 22                      ; CLITERAL 34
13e9: 19                         ; EMIT
13ea: fe                         ; RESET
13eb: 0b 26 05 00 00             ; CALL >IN (0526)
13f0: 0b e8 05 00 00             ; CALL ++ (05e8)
13f5: 06                         ; DUP
13f6: 0e 22                      ; CLITERAL 34
13f8: 16                         ; EQ
13f9: 09 00 14 00 00             ; JMPZ 1400
13fe: 05                         ; DROP
13ff: 0c                         ; RET
1400: 0b 87 13 00 00             ; CALL STR.CATC (1387)
1405: 08 bf 13 00 00             ; JMP 13bf
140a: 0c                         ; RET
;
140b: 18 e8 ed 03 00             ; DICTP " (3ede8)
1410: 0b c0 04 00 00             ; CALL ?COMPILING (04c0)
1415: 0e 00                      ; CLITERAL 0
1417: 16                         ; EQ
1418: 09 23 14 00 00             ; JMPZ 1423
141d: 0b b0 13 00 00             ; CALL I" (13b0)
1422: 0c                         ; RET
1423: 0e 07                      ; CLITERAL 7
1425: 0b 70 00 00 00             ; CALL C, (0070)
142a: 0e 10                      ; CLITERAL 16
142c: 02                         ; FETCH
142d: 0e 00                      ; CLITERAL 0
142f: 0b 70 00 00 00             ; CALL C, (0070)
1434: 0b 26 05 00 00             ; CALL >IN (0526)
1439: 02                         ; FETCH
143a: 0f                         ; CFETCH
143b: 06                         ; DUP
143c: 0e 00                      ; CLITERAL 0
143e: 16                         ; EQ
143f: 09 6b 14 00 00             ; JMPZ 146b
1444: 05                         ; DROP
1445: 0e 01                      ; CLITERAL 1
1447: 12                         ; SUB
1448: 0e 10                      ; CLITERAL 16
144a: 03                         ; STORE
144b: 07 11 6d 69 73 73 69 6e 67 20 63 6c 6f 73 69 6e 67 20 27 00 ; SLITERAL (144c) [missing closing ']
145f: 0b 20 07 00 00             ; CALL CT (0720)
1464: 0e 22                      ; CLITERAL 34
1466: 19                         ; EMIT
1467: 0e 27                      ; CLITERAL 39
1469: 19                         ; EMIT
146a: fe                         ; RESET
146b: 0b 26 05 00 00             ; CALL >IN (0526)
1470: 0b e8 05 00 00             ; CALL ++ (05e8)
1475: 06                         ; DUP
1476: 0e 22                      ; CLITERAL 34
1478: 16                         ; EQ
1479: 09 91 14 00 00             ; JMPZ 1491
147e: 05                         ; DROP
147f: 0e 10                      ; CLITERAL 16
1481: 02                         ; FETCH
1482: 0e 00                      ; CLITERAL 0
1484: 0b 70 00 00 00             ; CALL C, (0070)
1489: 1a                         ; OVER
148a: 12                         ; SUB
148b: 0e 01                      ; CLITERAL 1
148d: 12                         ; SUB
148e: 04                         ; SWAP
148f: 10                         ; CSTORE
1490: 0c                         ; RET
1491: 0b 70 00 00 00             ; CALL C, (0070)
1496: 08 34 14 00 00             ; JMP 1434
149b: 0c                         ; RET
;
149c: 18 db ed 03 00             ; DICTP ll (3eddb)
14a1: 07 09 6c 6f 61 64 73 2e 34 74 68 00 ; SLITERAL (14a2) [loads.4th]
14ad: 0b 13 13 00 00             ; CALL load (1313)
14b2: 0c                         ; RET
;
14b3: 18 c7 ed 03 00             ; DICTP sys-stats (3edc7)
14b8: 0b 02 0c 00 00             ; CALL .(MEM_SZ) (0c02)
14bd: 0e 2c                      ; CLITERAL 44
14bf: 19                         ; EMIT
14c0: 0e 20                      ; CLITERAL 32
14c2: 19                         ; EMIT
14c3: 0b 3b 0c 00 00             ; CALL .(HERE) (0c3b)
14c8: 0e 2c                      ; CLITERAL 44
14ca: 19                         ; EMIT
14cb: 0e 20                      ; CLITERAL 32
14cd: 19                         ; EMIT
14ce: 0b 70 0c 00 00             ; CALL .(LAST) (0c70)
14d3: 0e 2c                      ; CLITERAL 44
14d5: 19                         ; EMIT
14d6: 0e 20                      ; CLITERAL 32
14d8: 19                         ; EMIT
14d9: 0b 60 12 00 00             ; CALL FREE? (1260)
14de: 0e 0d                      ; CLITERAL 13
14e0: 19                         ; EMIT
14e1: 0e 0a                      ; CLITERAL 10
14e3: 19                         ; EMIT
14e4: 0c                         ; RET
;
; End of code, Dictionary:
;
3edc7: db ed 03 00               ; sys-stats - (next: 3eddb ll)
3edcb: b3 14 00 00 00            ; XT=14b3, flags=00
3edd0: 09 73 79 73 2d 73 74 61 74 73 00 ; 9, sys-stats
;
3eddb: e8 ed 03 00               ; ll - (next: 3ede8 ")
3eddf: 9c 14 00 00 00            ; XT=149c, flags=00
3ede4: 02 6c 6c 00               ; 2, ll
;
3ede8: f4 ed 03 00               ; " - (next: 3edf4 I")
3edec: 0b 14 00 00 01            ; XT=140b, flags=01
3edf1: 01 22 00                  ; 1, "
;
3edf4: 01 ee 03 00               ; I" - (next: 3ee01 STR.NULLTERM)
3edf8: b0 13 00 00 00            ; XT=13b0, flags=00
3edfd: 02 49 22 00               ; 2, I"
;
3ee01: 18 ee 03 00               ; STR.NULLTERM - (next: 3ee18 STR.CATC)
3ee05: 9f 13 00 00 00            ; XT=139f, flags=00
3ee0a: 0c 53 54 52 2e 4e 55 4c 4c 54 45 52 4d 00 ; 12, STR.NULLTERM
;
3ee18: 2b ee 03 00               ; STR.CATC - (next: 3ee2b STR.LEN)
3ee1c: 87 13 00 00 00            ; XT=1387, flags=00
3ee21: 08 53 54 52 2e 43 41 54 43 00 ; 8, STR.CATC
;
3ee2b: 3d ee 03 00               ; STR.LEN - (next: 3ee3d STR.EMPTY)
3ee2f: 7f 13 00 00 02            ; XT=137f, flags=02
3ee34: 07 53 54 52 2e 4c 45 4e 00 ; 7, STR.LEN
;
3ee3d: 51 ee 03 00               ; STR.EMPTY - (next: 3ee51 load)
3ee41: 75 13 00 00 02            ; XT=1375, flags=02
3ee46: 09 53 54 52 2e 45 4d 50 54 59 00 ; 9, STR.EMPTY
;
3ee51: 60 ee 03 00               ; load - (next: 3ee60 file-getLine)
3ee55: 13 13 00 00 00            ; XT=1313, flags=00
3ee5a: 04 6c 6f 61 64 00         ; 4, load
;
3ee60: 77 ee 03 00               ; file-getLine - (next: 3ee77 main)
3ee64: fd 12 00 00 00            ; XT=12fd, flags=00
3ee69: 0c 66 69 6c 65 2d 67 65 74 4c 69 6e 65 00 ; 12, file-getLine
;
3ee77: 86 ee 03 00               ; main - (next: 3ee86 mainLoop)
3ee7b: d2 12 00 00 00            ; XT=12d2, flags=00
3ee80: 04 6d 61 69 6e 00         ; 4, main
;
3ee86: 99 ee 03 00               ; mainLoop - (next: 3ee99 FREE?)
3ee8a: 84 12 00 00 00            ; XT=1284, flags=00
3ee8f: 08 6d 61 69 6e 4c 6f 6f 70 00 ; 8, mainLoop
;
3ee99: a9 ee 03 00               ; FREE? - (next: 3eea9 FREE)
3ee9d: 60 12 00 00 00            ; XT=1260, flags=00
3eea2: 05 46 52 45 45 3f 00      ; 5, FREE?
;
3eea9: b8 ee 03 00               ; FREE - (next: 3eeb8 C?)
3eead: 53 12 00 00 00            ; XT=1253, flags=00
3eeb2: 04 46 52 45 45 00         ; 4, FREE
;
3eeb8: c5 ee 03 00               ; C? - (next: 3eec5 ?)
3eebc: 47 12 00 00 00            ; XT=1247, flags=00
3eec1: 02 43 3f 00               ; 2, C?
;
3eec5: d1 ee 03 00               ; ? - (next: 3eed1 ALLOT)
3eec9: 3b 12 00 00 00            ; XT=123b, flags=00
3eece: 01 3f 00                  ; 1, ?
;
3eed1: e1 ee 03 00               ; ALLOT - (next: 3eee1 resetState)
3eed5: 2e 12 00 00 00            ; XT=122e, flags=00
3eeda: 05 41 4c 4c 4f 54 00      ; 5, ALLOT
;
3eee1: f6 ee 03 00               ; resetState - (next: 3eef6 ForgetLast)
3eee5: 0d 12 00 00 00            ; XT=120d, flags=00
3eeea: 0a 72 65 73 65 74 53 74 61 74 65 00 ; 10, resetState
;
3eef6: 0b ef 03 00               ; ForgetLast - (next: 3ef0b ;)
3eefa: f6 11 00 00 00            ; XT=11f6, flags=00
3eeff: 0a 46 6f 72 67 65 74 4c 61 73 74 00 ; 10, ForgetLast
;
3ef0b: 17 ef 03 00               ; ; - (next: 3ef17 :NONAME)
3ef0f: e2 11 00 00 01            ; XT=11e2, flags=01
3ef14: 01 3b 00                  ; 1, ;
;
3ef17: 29 ef 03 00               ; :NONAME - (next: 3ef29 :)
3ef1b: d2 11 00 00 00            ; XT=11d2, flags=00
3ef20: 07 3a 4e 4f 4e 41 4d 45 00 ; 7, :NONAME
;
3ef29: 35 ef 03 00               ; : - (next: 3ef35 CREATE-NAME)
3ef2d: c0 11 00 00 00            ; XT=11c0, flags=00
3ef32: 01 3a 00                  ; 1, :
;
3ef35: 4b ef 03 00               ; CREATE-NAME - (next: 3ef4b Define-Word)
3ef39: 6a 11 00 00 00            ; XT=116a, flags=00
3ef3e: 0b 43 52 45 41 54 45 2d 4e 41 4d 45 00 ; 11, CREATE-NAME
;
3ef4b: 61 ef 03 00               ; Define-Word - (next: 3ef61 strcpy2c)
3ef4f: 21 11 00 00 00            ; XT=1121, flags=00
3ef54: 0b 44 65 66 69 6e 65 2d 57 6f 72 64 00 ; 11, Define-Word
;
3ef61: 74 ef 03 00               ; strcpy2c - (next: 3ef74 getLine)
3ef65: e2 10 00 00 00            ; XT=10e2, flags=00
3ef6a: 08 73 74 72 63 70 79 32 63 00 ; 8, strcpy2c
;
3ef74: 86 ef 03 00               ; getLine - (next: 3ef86 getLineFromFile)
3ef78: 0f 10 00 00 00            ; XT=100f, flags=00
3ef7d: 07 67 65 74 4c 69 6e 65 00 ; 7, getLine
;
3ef86: a0 ef 03 00               ; getLineFromFile - (next: 3efa0 LoadingFromFile?)
3ef8a: f4 0f 00 00 00            ; XT=0ff4, flags=00
3ef8f: 0f 67 65 74 4c 69 6e 65 46 72 6f 6d 46 69 6c 65 00 ; 15, getLineFromFile
;
3efa0: bb ef 03 00               ; LoadingFromFile? - (next: 3efbb Pad)
3efa4: eb 0f 00 00 00            ; XT=0feb, flags=00
3efa9: 10 4c 6f 61 64 69 6e 67 46 72 6f 6d 46 69 6c 65 3f 00 ; 16, LoadingFromFile?
;
3efbb: c9 ef 03 00               ; Pad - (next: 3efc9 executeInput)
3efbf: c3 0f 00 00 00            ; XT=0fc3, flags=00
3efc4: 03 50 61 64 00            ; 3, Pad
;
3efc9: e0 ef 03 00               ; executeInput - (next: 3efe0 executeWord)
3efcd: 7f 0f 00 00 00            ; XT=0f7f, flags=00
3efd2: 0c 65 78 65 63 75 74 65 49 6e 70 75 74 00 ; 12, executeInput
;
3efe0: f6 ef 03 00               ; executeWord - (next: 3eff6 [COMPILE])
3efe4: dc 0e 00 00 00            ; XT=0edc, flags=00
3efe9: 0b 65 78 65 63 75 74 65 57 6f 72 64 00 ; 11, executeWord
;
3eff6: 0a f0 03 00               ; [COMPILE] - (next: 3f00a cstr,)
3effa: b6 0e 00 00 00            ; XT=0eb6, flags=00
3efff: 09 5b 43 4f 4d 50 49 4c 45 5d 00 ; 9, [COMPILE]
;
3f00a: 1a f0 03 00               ; cstr, - (next: 3f01a strlen)
3f00e: a1 0e 00 00 00            ; XT=0ea1, flags=00
3f013: 05 63 73 74 72 2c 00      ; 5, cstr,
;
3f01a: 2b f0 03 00               ; strlen - (next: 3f02b Copy.INLINE)
3f01e: 7e 0e 00 00 00            ; XT=0e7e, flags=00
3f023: 06 73 74 72 6c 65 6e 00   ; 6, strlen
;
3f02b: 41 f0 03 00               ; Copy.INLINE - (next: 3f041 DOES>)
3f02f: 5d 0e 00 00 00            ; XT=0e5d, flags=00
3f034: 0b 43 6f 70 79 2e 49 4e 4c 49 4e 45 00 ; 11, Copy.INLINE
;
3f041: 51 f0 03 00               ; DOES> - (next: 3f051 (inline))
3f045: 46 0e 00 00 00            ; XT=0e46, flags=00
3f04a: 05 44 4f 45 53 3e 00      ; 5, DOES>
;
3f051: 64 f0 03 00               ; (inline) - (next: 3f064 find.ret)
3f055: 23 0e 00 00 00            ; XT=0e23, flags=00
3f05a: 08 28 69 6e 6c 69 6e 65 29 00 ; 8, (inline)
;
3f064: 77 f0 03 00               ; find.ret - (next: 3f077 EXECUTE)
3f068: 0a 0e 00 00 00            ; XT=0e0a, flags=00
3f06d: 08 66 69 6e 64 2e 72 65 74 00 ; 8, find.ret
;
3f077: 89 f0 03 00               ; EXECUTE - (next: 3f089 .lastx)
3f07b: 01 0e 00 00 00            ; XT=0e01, flags=00
3f080: 07 45 58 45 43 55 54 45 00 ; 7, EXECUTE
;
3f089: 9a f0 03 00               ; .lastx - (next: 3f09a NUM-WORDS)
3f08d: c9 0d 00 00 00            ; XT=0dc9, flags=00
3f092: 06 2e 6c 61 73 74 78 00   ; 6, .lastx
;
3f09a: ae f0 03 00               ; NUM-WORDS - (next: 3f0ae WORDSV)
3f09e: 9f 0d 00 00 00            ; XT=0d9f, flags=00
3f0a3: 09 4e 55 4d 2d 57 4f 52 44 53 00 ; 9, NUM-WORDS
;
3f0ae: bf f0 03 00               ; WORDSV - (next: 3f0bf .WORD-LONG)
3f0b2: 6f 0d 00 00 00            ; XT=0d6f, flags=00
3f0b7: 06 57 4f 52 44 53 56 00   ; 6, WORDSV
;
3f0bf: d4 f0 03 00               ; .WORD-LONG - (next: 3f0d4 WORDS)
3f0c3: df 0c 00 00 00            ; XT=0cdf, flags=00
3f0c8: 0a 2e 57 4f 52 44 2d 4c 4f 4e 47 00 ; 10, .WORD-LONG
;
3f0d4: e4 f0 03 00               ; WORDS - (next: 3f0e4 .WORD-SHORT)
3f0d8: ba 0c 00 00 00            ; XT=0cba, flags=00
3f0dd: 05 57 4f 52 44 53 00      ; 5, WORDS
;
3f0e4: fa f0 03 00               ; .WORD-SHORT - (next: 3f0fa .(LAST))
3f0e8: a5 0c 00 00 00            ; XT=0ca5, flags=00
3f0ed: 0b 2e 57 4f 52 44 2d 53 48 4f 52 54 00 ; 11, .WORD-SHORT
;
3f0fa: 0c f1 03 00               ; .(LAST) - (next: 3f10c .(HERE))
3f0fe: 70 0c 00 00 00            ; XT=0c70, flags=00
3f103: 07 2e 28 4c 41 53 54 29 00 ; 7, .(LAST)
;
3f10c: 1e f1 03 00               ; .(HERE) - (next: 3f11e .(MEM_SZ))
3f110: 3b 0c 00 00 00            ; XT=0c3b, flags=00
3f115: 07 2e 28 48 45 52 45 29 00 ; 7, .(HERE)
;
3f11e: 32 f1 03 00               ; .(MEM_SZ) - (next: 3f132 .S)
3f122: 02 0c 00 00 00            ; XT=0c02, flags=00
3f127: 09 2e 28 4d 45 4d 5f 53 5a 29 00 ; 9, .(MEM_SZ)
;
3f132: 3f f1 03 00               ; .S - (next: 3f13f MAX)
3f136: 8e 0b 00 00 00            ; XT=0b8e, flags=00
3f13b: 02 2e 53 00               ; 2, .S
;
3f13f: 4d f1 03 00               ; MAX - (next: 3f14d MIN)
3f143: 7e 0b 00 00 00            ; XT=0b7e, flags=00
3f148: 03 4d 41 58 00            ; 3, MAX
;
3f14d: 5b f1 03 00               ; MIN - (next: 3f15b BINARY.)
3f151: 6e 0b 00 00 00            ; XT=0b6e, flags=00
3f156: 03 4d 49 4e 00            ; 3, MIN
;
3f15b: 6d f1 03 00               ; BINARY. - (next: 3f16d DECIMAL.)
3f15f: 57 0b 00 00 00            ; XT=0b57, flags=00
3f164: 07 42 49 4e 41 52 59 2e 00 ; 7, BINARY.
;
3f16d: 80 f1 03 00               ; DECIMAL. - (next: 3f180 HEX.)
3f171: 40 0b 00 00 00            ; XT=0b40, flags=00
3f176: 08 44 45 43 49 4d 41 4c 2e 00 ; 8, DECIMAL.
;
3f180: 8f f1 03 00               ; HEX. - (next: 3f18f .)
3f184: 1d 0b 00 00 00            ; XT=0b1d, flags=00
3f189: 04 48 45 58 2e 00         ; 4, HEX.
;
3f18f: 9b f1 03 00               ; . - (next: 3f19b (.))
3f193: 0f 0b 00 00 00            ; XT=0b0f, flags=00
3f198: 01 2e 00                  ; 1, .
;
3f19b: a9 f1 03 00               ; (.) - (next: 3f1a9 /MOD)
3f19f: 9b 0a 00 00 00            ; XT=0a9b, flags=00
3f1a4: 03 28 2e 29 00            ; 3, (.)
;
3f1a9: b8 f1 03 00               ; /MOD - (next: 3f1b8 MOD)
3f1ad: 8a 0a 00 00 00            ; XT=0a8a, flags=00
3f1b2: 04 2f 4d 4f 44 00         ; 4, /MOD
;
3f1b8: c6 f1 03 00               ; MOD - (next: 3f1c6 isNumber?)
3f1bc: 7f 0a 00 00 00            ; XT=0a7f, flags=00
3f1c1: 03 4d 4f 44 00            ; 3, MOD
;
3f1c6: da f1 03 00               ; isNumber? - (next: 3f1da ABS)
3f1ca: 1e 0a 00 00 00            ; XT=0a1e, flags=00
3f1cf: 09 69 73 4e 75 6d 62 65 72 3f 00 ; 9, isNumber?
;
3f1da: e8 f1 03 00               ; ABS - (next: 3f1e8 NEGATE)
3f1de: 0a 0a 00 00 00            ; XT=0a0a, flags=00
3f1e3: 03 41 42 53 00            ; 3, ABS
;
3f1e8: f9 f1 03 00               ; NEGATE - (next: 3f1f9 isNumChar?)
3f1ec: 00 0a 00 00 00            ; XT=0a00, flags=00
3f1f1: 06 4e 45 47 41 54 45 00   ; 6, NEGATE
;
3f1f9: 0e f2 03 00               ; isNumChar? - (next: 3f20e isHEX?)
3f1fd: af 09 00 00 00            ; XT=09af, flags=00
3f202: 0a 69 73 4e 75 6d 43 68 61 72 3f 00 ; 10, isNumChar?
;
3f20e: 1f f2 03 00               ; isHEX? - (next: 3f21f findInDict)
3f212: a3 09 00 00 00            ; XT=09a3, flags=00
3f217: 06 69 73 48 45 58 3f 00   ; 6, isHEX?
;
3f21f: 34 f2 03 00               ; findInDict - (next: 3f234 DICT.GetINLINE)
3f223: 5a 09 00 00 00            ; XT=095a, flags=00
3f228: 0a 66 69 6e 64 49 6e 44 69 63 74 00 ; 10, findInDict
;
3f234: 4d f2 03 00               ; DICT.GetINLINE - (next: 3f24d DICT.GetIMMEDIATE)
3f238: 4a 09 00 00 00            ; XT=094a, flags=00
3f23d: 0e 44 49 43 54 2e 47 65 74 49 4e 4c 49 4e 45 00 ; 14, DICT.GetINLINE
;
3f24d: 69 f2 03 00               ; DICT.GetIMMEDIATE - (next: 3f269 FLAGS.ISINLINE?)
3f251: 3a 09 00 00 00            ; XT=093a, flags=00
3f256: 11 44 49 43 54 2e 47 65 74 49 4d 4d 45 44 49 41 54 45 00 ; 17, DICT.GetIMMEDIATE
;
3f269: 83 f2 03 00               ; FLAGS.ISINLINE? - (next: 3f283 FLAGS.ISIMMEDIATE?)
3f26d: 31 09 00 00 00            ; XT=0931, flags=00
3f272: 0f 46 4c 41 47 53 2e 49 53 49 4e 4c 49 4e 45 3f 00 ; 15, FLAGS.ISINLINE?
;
3f283: a0 f2 03 00               ; FLAGS.ISIMMEDIATE? - (next: 3f2a0 XT.GetDICTP)
3f287: 28 09 00 00 00            ; XT=0928, flags=00
3f28c: 12 46 4c 41 47 53 2e 49 53 49 4d 4d 45 44 49 41 54 45 3f 00 ; 18, FLAGS.ISIMMEDIATE?
;
3f2a0: b6 f2 03 00               ; XT.GetDICTP - (next: 3f2b6 DICTP>NAME)
3f2a4: 0d 09 00 00 00            ; XT=090d, flags=00
3f2a9: 0b 58 54 2e 47 65 74 44 49 43 54 50 00 ; 11, XT.GetDICTP
;
3f2b6: cb f2 03 00               ; DICTP>NAME - (next: 3f2cb DICT.GetFLAGS)
3f2ba: fe 08 00 00 00            ; XT=08fe, flags=00
3f2bf: 0a 44 49 43 54 50 3e 4e 41 4d 45 00 ; 10, DICTP>NAME
;
3f2cb: e3 f2 03 00               ; DICT.GetFLAGS - (next: 3f2e3 DICT.GetXT)
3f2cf: f2 08 00 00 00            ; XT=08f2, flags=00
3f2d4: 0d 44 49 43 54 2e 47 65 74 46 4c 41 47 53 00 ; 13, DICT.GetFLAGS
;
3f2e3: f8 f2 03 00               ; DICT.GetXT - (next: 3f2f8 NAME>DICT)
3f2e7: e6 08 00 00 00            ; XT=08e6, flags=00
3f2ec: 0a 44 49 43 54 2e 47 65 74 58 54 00 ; 10, DICT.GetXT
;
3f2f8: 0c f3 03 00               ; NAME>DICT - (next: 3f30c FLAGS>DICT)
3f2fc: d7 08 00 00 00            ; XT=08d7, flags=00
3f301: 09 4e 41 4d 45 3e 44 49 43 54 00 ; 9, NAME>DICT
;
3f30c: 21 f3 03 00               ; FLAGS>DICT - (next: 3f321 XT>DICT)
3f310: cb 08 00 00 00            ; XT=08cb, flags=00
3f315: 0a 46 4c 41 47 53 3e 44 49 43 54 00 ; 10, FLAGS>DICT
;
3f321: 33 f3 03 00               ; XT>DICT - (next: 3f333 NEXT>DICT)
3f325: c2 08 00 00 00            ; XT=08c2, flags=00
3f32a: 07 58 54 3e 44 49 43 54 00 ; 7, XT>DICT
;
3f333: 47 f3 03 00               ; NEXT>DICT - (next: 3f347 DICT>NAME)
3f337: bc 08 00 00 00            ; XT=08bc, flags=00
3f33c: 09 4e 45 58 54 3e 44 49 43 54 00 ; 9, NEXT>DICT
;
3f347: 5b f3 03 00               ; DICT>NAME - (next: 3f35b DICT>FLAGS)
3f34b: ae 08 00 00 00            ; XT=08ae, flags=00
3f350: 09 44 49 43 54 3e 4e 41 4d 45 00 ; 9, DICT>NAME
;
3f35b: 70 f3 03 00               ; DICT>FLAGS - (next: 3f370 DICT>XT)
3f35f: a2 08 00 00 00            ; XT=08a2, flags=00
3f364: 0a 44 49 43 54 3e 46 4c 41 47 53 00 ; 10, DICT>FLAGS
;
3f370: 82 f3 03 00               ; DICT>XT - (next: 3f382 DICT>NEXT)
3f374: 99 08 00 00 00            ; XT=0899, flags=00
3f379: 07 44 49 43 54 3e 58 54 00 ; 7, DICT>XT
;
3f382: 96 f3 03 00               ; DICT>NEXT - (next: 3f396 getOneWord)
3f386: 93 08 00 00 00            ; XT=0893, flags=00
3f38b: 09 44 49 43 54 3e 4e 45 58 54 00 ; 9, DICT>NEXT
;
3f396: ab f3 03 00               ; getOneWord - (next: 3f3ab skipWS)
3f39a: 57 08 00 00 00            ; XT=0857, flags=00
3f39f: 0a 67 65 74 4f 6e 65 57 6f 72 64 00 ; 10, getOneWord
;
3f3ab: bc f3 03 00               ; skipWS - (next: 3f3bc getInput)
3f3af: 2c 08 00 00 00            ; XT=082c, flags=00
3f3b4: 06 73 6b 69 70 57 53 00   ; 6, skipWS
;
3f3bc: cf f3 03 00               ; getInput - (next: 3f3cf PAD)
3f3c0: 16 08 00 00 00            ; XT=0816, flags=00
3f3c5: 08 67 65 74 49 6e 70 75 74 00 ; 8, getInput
;
3f3cf: dd f3 03 00               ; PAD - (next: 3f3dd tmp-alloc)
3f3d3: 04 08 00 00 00            ; XT=0804, flags=00
3f3d8: 03 50 41 44 00            ; 3, PAD
;
3f3dd: f1 f3 03 00               ; tmp-alloc - (next: 3f3f1 tmp-cur)
3f3e1: ed 07 00 00 00            ; XT=07ed, flags=00
3f3e6: 09 74 6d 70 2d 61 6c 6c 6f 63 00 ; 9, tmp-alloc
;
3f3f1: 03 f4 03 00               ; tmp-cur - (next: 3f403 tmp-init)
3f3f5: e1 07 00 00 00            ; XT=07e1, flags=00
3f3fa: 07 74 6d 70 2d 63 75 72 00 ; 7, tmp-cur
;
3f403: 16 f4 03 00               ; tmp-init - (next: 3f416 (tmp))
3f407: d2 07 00 00 00            ; XT=07d2, flags=00
3f40c: 08 74 6d 70 2d 69 6e 69 74 00 ; 8, tmp-init
;
3f416: 26 f4 03 00               ; (tmp) - (next: 3f426 BETWEEN)
3f41a: c2 07 00 00 00            ; XT=07c2, flags=00
3f41f: 05 28 74 6d 70 29 00      ; 5, (tmp)
;
3f426: 38 f4 03 00               ; BETWEEN - (next: 3f438 CR)
3f42a: aa 07 00 00 00            ; XT=07aa, flags=00
3f42f: 07 42 45 54 57 45 45 4e 00 ; 7, BETWEEN
;
3f438: 45 f4 03 00               ; CR - (next: 3f445 CRLF)
3f43c: 9e 07 00 00 02            ; XT=079e, flags=02
3f441: 02 43 52 00               ; 2, CR
;
3f445: 54 f4 03 00               ; CRLF - (next: 3f454 BL)
3f449: 92 07 00 00 02            ; XT=0792, flags=02
3f44e: 04 43 52 4c 46 00         ; 4, CRLF
;
3f454: 61 f4 03 00               ; BL - (next: 3f461 ()
3f458: 89 07 00 00 02            ; XT=0789, flags=02
3f45d: 02 42 4c 00               ; 2, BL
;
3f461: 6d f4 03 00               ; ( - (next: 3f46d \)
3f465: 3f 07 00 00 01            ; XT=073f, flags=01
3f46a: 01 28 00                  ; 1, (
;
3f46d: 79 f4 03 00               ; \ - (next: 3f479 CT)
3f471: 30 07 00 00 01            ; XT=0730, flags=01
3f476: 01 5c 00                  ; 1, \
;
3f479: 86 f4 03 00               ; CT - (next: 3f486 TYPE)
3f47d: 20 07 00 00 00            ; XT=0720, flags=00
3f482: 02 43 54 00               ; 2, CT
;
3f486: 95 f4 03 00               ; TYPE - (next: 3f495 COUNT)
3f48a: fe 06 00 00 00            ; XT=06fe, flags=00
3f48f: 04 54 59 50 45 00         ; 4, TYPE
;
3f495: a5 f4 03 00               ; COUNT - (next: 3f4a5 UNTIL)
3f499: f2 06 00 00 00            ; XT=06f2, flags=00
3f49e: 05 43 4f 55 4e 54 00      ; 5, COUNT
;
3f4a5: b5 f4 03 00               ; UNTIL - (next: 3f4b5 WHILE)
3f4a9: d6 06 00 00 01            ; XT=06d6, flags=01
3f4ae: 05 55 4e 54 49 4c 00      ; 5, UNTIL
;
3f4b5: c5 f4 03 00               ; WHILE - (next: 3f4c5 AGAIN)
3f4b9: ba 06 00 00 01            ; XT=06ba, flags=01
3f4be: 05 57 48 49 4c 45 00      ; 5, WHILE
;
3f4c5: d5 f4 03 00               ; AGAIN - (next: 3f4d5 BEGIN)
3f4c9: 9e 06 00 00 01            ; XT=069e, flags=01
3f4ce: 05 41 47 41 49 4e 00      ; 5, AGAIN
;
3f4d5: e5 f4 03 00               ; BEGIN - (next: 3f4e5 LEAVE)
3f4d9: 8b 06 00 00 01            ; XT=068b, flags=01
3f4de: 05 42 45 47 49 4e 00      ; 5, BEGIN
;
3f4e5: f5 f4 03 00               ; LEAVE - (next: 3f4f5 NOT)
3f4e9: 74 06 00 00 01            ; XT=0674, flags=01
3f4ee: 05 4c 45 41 56 45 00      ; 5, LEAVE
;
3f4f5: 03 f5 03 00               ; NOT - (next: 3f503 FALSE)
3f4f9: 6b 06 00 00 02            ; XT=066b, flags=02
3f4fe: 03 4e 4f 54 00            ; 3, NOT
;
3f503: 13 f5 03 00               ; FALSE - (next: 3f513 TRUE)
3f507: 63 06 00 00 02            ; XT=0663, flags=02
3f50c: 05 46 41 4c 53 45 00      ; 5, FALSE
;
3f513: 22 f5 03 00               ; TRUE - (next: 3f522 >=)
3f517: 5b 06 00 00 02            ; XT=065b, flags=02
3f51c: 04 54 52 55 45 00         ; 4, TRUE
;
3f522: 2f f5 03 00               ; >= - (next: 3f52f <=)
3f526: 51 06 00 00 02            ; XT=0651, flags=02
3f52b: 02 3e 3d 00               ; 2, >=
;
3f52f: 3c f5 03 00               ; <= - (next: 3f53c <>)
3f533: 47 06 00 00 02            ; XT=0647, flags=02
3f538: 02 3c 3d 00               ; 2, <=
;
3f53c: 49 f5 03 00               ; <> - (next: 3f549 0=)
3f540: 3d 06 00 00 02            ; XT=063d, flags=02
3f545: 02 3c 3e 00               ; 2, <>
;
3f549: 56 f5 03 00               ; 0= - (next: 3f556 C+!)
3f54d: 34 06 00 00 02            ; XT=0634, flags=02
3f552: 02 30 3d 00               ; 2, 0=
;
3f556: 64 f5 03 00               ; C+! - (next: 3f564 +!)
3f55a: 28 06 00 00 00            ; XT=0628, flags=00
3f55f: 03 43 2b 21 00            ; 3, C+!
;
3f564: 71 f5 03 00               ; +! - (next: 3f571 C--)
3f568: 1c 06 00 00 00            ; XT=061c, flags=00
3f56d: 02 2b 21 00               ; 2, +!
;
3f571: 7f f5 03 00               ; C-- - (next: 3f57f C++)
3f575: 0f 06 00 00 00            ; XT=060f, flags=00
3f57a: 03 43 2d 2d 00            ; 3, C--
;
3f57f: 8d f5 03 00               ; C++ - (next: 3f58d --)
3f583: 02 06 00 00 00            ; XT=0602, flags=00
3f588: 03 43 2b 2b 00            ; 3, C++
;
3f58d: 9a f5 03 00               ; -- - (next: 3f59a ++)
3f591: f5 05 00 00 00            ; XT=05f5, flags=00
3f596: 02 2d 2d 00               ; 2, --
;
3f59a: a7 f5 03 00               ; ++ - (next: 3f5a7 -=)
3f59e: e8 05 00 00 00            ; XT=05e8, flags=00
3f5a3: 02 2b 2b 00               ; 2, ++
;
3f5a7: b4 f5 03 00               ; -= - (next: 3f5b4 +=)
3f5ab: dc 05 00 00 00            ; XT=05dc, flags=00
3f5b0: 02 2d 3d 00               ; 2, -=
;
3f5b4: c1 f5 03 00               ; += - (next: 3f5c1 2/)
3f5b8: d1 05 00 00 00            ; XT=05d1, flags=00
3f5bd: 02 2b 3d 00               ; 2, +=
;
3f5c1: ce f5 03 00               ; 2/ - (next: 3f5ce 2*)
3f5c5: c8 05 00 00 02            ; XT=05c8, flags=02
3f5ca: 02 32 2f 00               ; 2, 2/
;
3f5ce: db f5 03 00               ; 2* - (next: 3f5db 1-)
3f5d2: bf 05 00 00 02            ; XT=05bf, flags=02
3f5d7: 02 32 2a 00               ; 2, 2*
;
3f5db: e8 f5 03 00               ; 1- - (next: 3f5e8 1+)
3f5df: b6 05 00 00 02            ; XT=05b6, flags=02
3f5e4: 02 31 2d 00               ; 2, 1-
;
3f5e8: f5 f5 03 00               ; 1+ - (next: 3f5f5 -ROT)
3f5ec: ad 05 00 00 02            ; XT=05ad, flags=02
3f5f1: 02 31 2b 00               ; 2, 1+
;
3f5f5: 04 f6 03 00               ; -ROT - (next: 3f604 ROT)
3f5f9: a3 05 00 00 02            ; XT=05a3, flags=02
3f5fe: 04 2d 52 4f 54 00         ; 4, -ROT
;
3f604: 12 f6 03 00               ; ROT - (next: 3f612 NIP)
3f608: 99 05 00 00 02            ; XT=0599, flags=02
3f60d: 03 52 4f 54 00            ; 3, ROT
;
3f612: 20 f6 03 00               ; NIP - (next: 3f620 TUCK)
3f616: 91 05 00 00 02            ; XT=0591, flags=02
3f61b: 03 4e 49 50 00            ; 3, NIP
;
3f620: 2f f6 03 00               ; TUCK - (next: 3f62f 2DROP)
3f624: 89 05 00 00 02            ; XT=0589, flags=02
3f629: 04 54 55 43 4b 00         ; 4, TUCK
;
3f62f: 3f f6 03 00               ; 2DROP - (next: 3f63f 2DUP)
3f633: 81 05 00 00 02            ; XT=0581, flags=02
3f638: 05 32 44 52 4f 50 00      ; 5, 2DROP
;
3f63f: 4e f6 03 00               ; 2DUP - (next: 3f64e RDROP)
3f643: 79 05 00 00 02            ; XT=0579, flags=02
3f648: 04 32 44 55 50 00         ; 4, 2DUP
;
3f64e: 5e f6 03 00               ; RDROP - (next: 3f65e R@)
3f652: 71 05 00 00 02            ; XT=0571, flags=02
3f657: 05 52 44 52 4f 50 00      ; 5, RDROP
;
3f65e: 6b f6 03 00               ; R@ - (next: 3f66b MEM_SZ)
3f662: 68 05 00 00 02            ; XT=0568, flags=02
3f667: 02 52 40 00               ; 2, R@
;
3f66b: 7c f6 03 00               ; MEM_SZ - (next: 3f67c (MEM_K))
3f66f: 56 05 00 00 00            ; XT=0556, flags=00
3f674: 06 4d 45 4d 5f 53 5a 00   ; 6, MEM_SZ
;
3f67c: 8e f6 03 00               ; (MEM_K) - (next: 3f68e isNeg)
3f680: 46 05 00 00 00            ; XT=0546, flags=00
3f685: 07 28 4d 45 4d 5f 4b 29 00 ; 7, (MEM_K)
;
3f68e: 9e f6 03 00               ; isNeg - (next: 3f69e >IN)
3f692: 36 05 00 00 00            ; XT=0536, flags=00
3f697: 05 69 73 4e 65 67 00      ; 5, isNeg
;
3f69e: ac f6 03 00               ; >IN - (next: 3f6ac ELSE)
3f6a2: 26 05 00 00 00            ; XT=0526, flags=00
3f6a7: 03 3e 49 4e 00            ; 3, >IN
;
3f6ac: bb f6 03 00               ; ELSE - (next: 3f6bb IF)
3f6b0: ff 04 00 00 01            ; XT=04ff, flags=01
3f6b5: 04 45 4c 53 45 00         ; 4, ELSE
;
3f6bb: c8 f6 03 00               ; IF - (next: 3f6c8 THEN)
3f6bf: de 04 00 00 01            ; XT=04de, flags=01
3f6c4: 02 49 46 00               ; 2, IF
;
3f6c8: d7 f6 03 00               ; THEN - (next: 3f6d7 ?COMPILING)
3f6cc: c9 04 00 00 01            ; XT=04c9, flags=01
3f6d1: 04 54 48 45 4e 00         ; 4, THEN
;
3f6d7: ec f6 03 00               ; ?COMPILING - (next: 3f6ec ])
3f6db: c0 04 00 00 00            ; XT=04c0, flags=00
3f6e0: 0a 3f 43 4f 4d 50 49 4c 49 4e 47 00 ; 10, ?COMPILING
;
3f6ec: f8 f6 03 00               ; ] - (next: 3f6f8 [)
3f6f0: b5 04 00 00 01            ; XT=04b5, flags=01
3f6f5: 01 5d 00                  ; 1, ]
;
3f6f8: 04 f7 03 00               ; [ - (next: 3f704 OFF)
3f6fc: aa 04 00 00 01            ; XT=04aa, flags=01
3f701: 01 5b 00                  ; 1, [
;
3f704: 12 f7 03 00               ; OFF - (next: 3f712 ON)
3f708: a0 04 00 00 00            ; XT=04a0, flags=00
3f70d: 03 4f 46 46 00            ; 3, OFF
;
3f712: 1f f7 03 00               ; ON - (next: 3f71f BINARY)
3f716: 96 04 00 00 00            ; XT=0496, flags=00
3f71b: 02 4f 4e 00               ; 2, ON
;
3f71f: 30 f7 03 00               ; BINARY - (next: 3f730 OCTAL)
3f723: 8b 04 00 00 00            ; XT=048b, flags=00
3f728: 06 42 49 4e 41 52 59 00   ; 6, BINARY
;
3f730: 40 f7 03 00               ; OCTAL - (next: 3f740 DECIMAL)
3f734: 80 04 00 00 00            ; XT=0480, flags=00
3f739: 05 4f 43 54 41 4c 00      ; 5, OCTAL
;
3f740: 52 f7 03 00               ; DECIMAL - (next: 3f752 HEX)
3f744: 75 04 00 00 00            ; XT=0475, flags=00
3f749: 07 44 45 43 49 4d 41 4c 00 ; 7, DECIMAL
;
3f752: 60 f7 03 00               ; HEX - (next: 3f760 DEBUG-OFF)
3f756: 6a 04 00 00 00            ; XT=046a, flags=00
3f75b: 03 48 45 58 00            ; 3, HEX
;
3f760: 74 f7 03 00               ; DEBUG-OFF - (next: 3f774 DEBUG-ON)
3f764: 61 04 00 00 00            ; XT=0461, flags=00
3f769: 09 44 45 42 55 47 2d 4f 46 46 00 ; 9, DEBUG-OFF
;
3f774: 87 f7 03 00               ; DEBUG-ON - (next: 3f787 TRACE-OFF)
3f778: 58 04 00 00 00            ; XT=0458, flags=00
3f77d: 08 44 45 42 55 47 2d 4f 4e 00 ; 8, DEBUG-ON
;
3f787: 9b f7 03 00               ; TRACE-OFF - (next: 3f79b TRACE-ON)
3f78b: 4f 04 00 00 00            ; XT=044f, flags=00
3f790: 09 54 52 41 43 45 2d 4f 46 46 00 ; 9, TRACE-OFF
;
3f79b: ae f7 03 00               ; TRACE-ON - (next: 3f7ae LOGLEVEL)
3f79f: 46 04 00 00 00            ; XT=0446, flags=00
3f7a4: 08 54 52 41 43 45 2d 4f 4e 00 ; 8, TRACE-ON
;
3f7ae: c1 f7 03 00               ; LOGLEVEL - (next: 3f7c1 ,)
3f7b2: 3f 04 00 00 02            ; XT=043f, flags=02
3f7b7: 08 4c 4f 47 4c 45 56 45 4c 00 ; 8, LOGLEVEL
;
3f7c1: cd f7 03 00               ; , - (next: 3f7cd HERE)
3f7c5: 2c 04 00 00 00            ; XT=042c, flags=00
3f7ca: 01 2c 00                  ; 1, ,
;
3f7cd: dc f7 03 00               ; HERE - (next: 3f7dc LAST)
3f7d1: 23 04 00 00 02            ; XT=0423, flags=02
3f7d6: 04 48 45 52 45 00         ; 4, HERE
;
3f7dc: eb f7 03 00               ; LAST - (next: 3f7eb IMMEDIATE)
3f7e0: 1a 04 00 00 02            ; XT=041a, flags=02
3f7e5: 04 4c 41 53 54 00         ; 4, LAST
;
3f7eb: ff f7 03 00               ; IMMEDIATE - (next: 3f7ff FLAG_INLINE)
3f7ef: 04 04 00 00 00            ; XT=0404, flags=00
3f7f4: 09 49 4d 4d 45 44 49 41 54 45 00 ; 9, IMMEDIATE
;
3f7ff: 15 f8 03 00               ; FLAG_INLINE - (next: 3f815 FLAG_IMMEDIATE)
3f803: fc 03 00 00 02            ; XT=03fc, flags=02
3f808: 0b 46 4c 41 47 5f 49 4e 4c 49 4e 45 00 ; 11, FLAG_INLINE
;
3f815: 2e f8 03 00               ; FLAG_IMMEDIATE - (next: 3f82e CELLS)
3f819: f4 03 00 00 02            ; XT=03f4, flags=02
3f81e: 0e 46 4c 41 47 5f 49 4d 4d 45 44 49 41 54 45 00 ; 14, FLAG_IMMEDIATE
;
3f82e: 3e f8 03 00               ; CELLS - (next: 3f83e INLINE)
3f832: eb 03 00 00 02            ; XT=03eb, flags=02
3f837: 05 43 45 4c 4c 53 00      ; 5, CELLS
;
3f83e: 4f f8 03 00               ; INLINE - (next: 3f84f BYE)
3f842: d5 03 00 00 00            ; XT=03d5, flags=00
3f847: 06 49 4e 4c 49 4e 45 00   ; 6, INLINE
;
3f84f: 5d f8 03 00               ; BYE - (next: 3f85d RESET)
3f853: ce 03 00 00 02            ; XT=03ce, flags=02
3f858: 03 42 59 45 00            ; 3, BYE
;
3f85d: 6d f8 03 00               ; RESET - (next: 3f86d BREAK)
3f861: c7 03 00 00 02            ; XT=03c7, flags=02
3f866: 05 52 45 53 45 54 00      ; 5, RESET
;
3f86d: 7d f8 03 00               ; BREAK - (next: 3f87d USTACK>)
3f871: c0 03 00 00 02            ; XT=03c0, flags=02
3f876: 05 42 52 45 41 4b 00      ; 5, BREAK
;
3f87d: 8f f8 03 00               ; USTACK> - (next: 3f88f >USTACK)
3f881: b9 03 00 00 02            ; XT=03b9, flags=02
3f886: 07 55 53 54 41 43 4b 3e 00 ; 7, USTACK>
;
3f88f: a1 f8 03 00               ; >USTACK - (next: 3f8a1 USTACKINIT)
3f893: b2 03 00 00 02            ; XT=03b2, flags=02
3f898: 07 3e 55 53 54 41 43 4b 00 ; 7, >USTACK
;
3f8a1: b6 f8 03 00               ; USTACKINIT - (next: 3f8b6 GETCH)
3f8a5: ab 03 00 00 02            ; XT=03ab, flags=02
3f8aa: 0a 55 53 54 41 43 4b 49 4e 49 54 00 ; 10, USTACKINIT
;
3f8b6: c6 f8 03 00               ; GETCH - (next: 3f8c6 OR)
3f8ba: a4 03 00 00 02            ; XT=03a4, flags=02
3f8bf: 05 47 45 54 43 48 00      ; 5, GETCH
;
3f8c6: d3 f8 03 00               ; OR - (next: 3f8d3 AND)
3f8ca: 9d 03 00 00 02            ; XT=039d, flags=02
3f8cf: 02 4f 52 00               ; 2, OR
;
3f8d3: e1 f8 03 00               ; AND - (next: 3f8e1 DEPTH)
3f8d7: 96 03 00 00 02            ; XT=0396, flags=02
3f8dc: 03 41 4e 44 00            ; 3, AND
;
3f8e1: f1 f8 03 00               ; DEPTH - (next: 3f8f1 PICK)
3f8e5: 8f 03 00 00 02            ; XT=038f, flags=02
3f8ea: 05 44 45 50 54 48 00      ; 5, DEPTH
;
3f8f1: 00 f9 03 00               ; PICK - (next: 3f900 R>)
3f8f5: 88 03 00 00 02            ; XT=0388, flags=02
3f8fa: 04 50 49 43 4b 00         ; 4, PICK
;
3f900: 0d f9 03 00               ; R> - (next: 3f90d >R)
3f904: 81 03 00 00 02            ; XT=0381, flags=02
3f909: 02 52 3e 00               ; 2, R>
;
3f90d: 1a f9 03 00               ; >R - (next: 3f91a FCLOSE)
3f911: 7a 03 00 00 02            ; XT=037a, flags=02
3f916: 02 3e 52 00               ; 2, >R
;
3f91a: 2b f9 03 00               ; FCLOSE - (next: 3f92b FWRITE)
3f91e: 73 03 00 00 02            ; XT=0373, flags=02
3f923: 06 46 43 4c 4f 53 45 00   ; 6, FCLOSE
;
3f92b: 3c f9 03 00               ; FWRITE - (next: 3f93c FREADLINE)
3f92f: 6c 03 00 00 02            ; XT=036c, flags=02
3f934: 06 46 57 52 49 54 45 00   ; 6, FWRITE
;
3f93c: 50 f9 03 00               ; FREADLINE - (next: 3f950 FREAD)
3f940: 65 03 00 00 02            ; XT=0365, flags=02
3f945: 09 46 52 45 41 44 4c 49 4e 45 00 ; 9, FREADLINE
;
3f950: 60 f9 03 00               ; FREAD - (next: 3f960 FOPEN)
3f954: 5e 03 00 00 02            ; XT=035e, flags=02
3f959: 05 46 52 45 41 44 00      ; 5, FREAD
;
3f960: 70 f9 03 00               ; FOPEN - (next: 3f970 EMIT)
3f964: 57 03 00 00 02            ; XT=0357, flags=02
3f969: 05 46 4f 50 45 4e 00      ; 5, FOPEN
;
3f970: 7f f9 03 00               ; EMIT - (next: 3f97f >)
3f974: 50 03 00 00 02            ; XT=0350, flags=02
3f979: 04 45 4d 49 54 00         ; 4, EMIT
;
3f97f: 8b f9 03 00               ; > - (next: 3f98b =)
3f983: 49 03 00 00 02            ; XT=0349, flags=02
3f988: 01 3e 00                  ; 1, >
;
3f98b: 97 f9 03 00               ; = - (next: 3f997 <)
3f98f: 42 03 00 00 02            ; XT=0342, flags=02
3f994: 01 3d 00                  ; 1, =
;
3f997: a3 f9 03 00               ; < - (next: 3f9a3 /)
3f99b: 3b 03 00 00 02            ; XT=033b, flags=02
3f9a0: 01 3c 00                  ; 1, <
;
3f9a3: af f9 03 00               ; / - (next: 3f9af *)
3f9a7: 34 03 00 00 02            ; XT=0334, flags=02
3f9ac: 01 2f 00                  ; 1, /
;
3f9af: bb f9 03 00               ; * - (next: 3f9bb -)
3f9b3: 2d 03 00 00 02            ; XT=032d, flags=02
3f9b8: 01 2a 00                  ; 1, *
;
3f9bb: c7 f9 03 00               ; - - (next: 3f9c7 +)
3f9bf: 26 03 00 00 02            ; XT=0326, flags=02
3f9c4: 01 2d 00                  ; 1, -
;
3f9c7: d3 f9 03 00               ; + - (next: 3f9d3 COMPAREI)
3f9cb: 1f 03 00 00 02            ; XT=031f, flags=02
3f9d0: 01 2b 00                  ; 1, +
;
3f9d3: e6 f9 03 00               ; COMPAREI - (next: 3f9e6 COMPARE)
3f9d7: 18 03 00 00 02            ; XT=0318, flags=02
3f9dc: 08 43 4f 4d 50 41 52 45 49 00 ; 8, COMPAREI
;
3f9e6: f8 f9 03 00               ; COMPARE - (next: 3f9f8 OVER)
3f9ea: 11 03 00 00 02            ; XT=0311, flags=02
3f9ef: 07 43 4f 4d 50 41 52 45 00 ; 7, COMPARE
;
3f9f8: 07 fa 03 00               ; OVER - (next: 3fa07 DUP)
3f9fc: 0a 03 00 00 02            ; XT=030a, flags=02
3fa01: 04 4f 56 45 52 00         ; 4, OVER
;
3fa07: 15 fa 03 00               ; DUP - (next: 3fa15 DROP)
3fa0b: 03 03 00 00 02            ; XT=0303, flags=02
3fa10: 03 44 55 50 00            ; 3, DUP
;
3fa15: 24 fa 03 00               ; DROP - (next: 3fa24 SWAP)
3fa19: fc 02 00 00 02            ; XT=02fc, flags=02
3fa1e: 04 44 52 4f 50 00         ; 4, DROP
;
3fa24: 33 fa 03 00               ; SWAP - (next: 3fa33 C!)
3fa28: f5 02 00 00 02            ; XT=02f5, flags=02
3fa2d: 04 53 57 41 50 00         ; 4, SWAP
;
3fa33: 40 fa 03 00               ; C! - (next: 3fa40 C@)
3fa37: ee 02 00 00 02            ; XT=02ee, flags=02
3fa3c: 02 43 21 00               ; 2, C!
;
3fa40: 4d fa 03 00               ; C@ - (next: 3fa4d !)
3fa44: e7 02 00 00 02            ; XT=02e7, flags=02
3fa49: 02 43 40 00               ; 2, C@
;
3fa4d: 59 fa 03 00               ; ! - (next: 3fa59 @)
3fa51: e0 02 00 00 02            ; XT=02e0, flags=02
3fa56: 01 21 00                  ; 1, !
;
3fa59: 65 fa 03 00               ; @ - (next: 3fa65 a.BYE)
3fa5d: d9 02 00 00 02            ; XT=02d9, flags=02
3fa62: 01 40 00                  ; 1, @
;
3fa65: 75 fa 03 00               ; a.BYE - (next: 3fa75 a.RESET)
3fa69: cc 02 00 00 01            ; XT=02cc, flags=01
3fa6e: 05 61 2e 42 59 45 00      ; 5, a.BYE
;
3fa75: 87 fa 03 00               ; a.RESET - (next: 3fa87 a.BREAK)
3fa79: bf 02 00 00 01            ; XT=02bf, flags=01
3fa7e: 07 61 2e 52 45 53 45 54 00 ; 7, a.RESET
;
3fa87: 99 fa 03 00               ; a.BREAK - (next: 3fa99 a.UPOP)
3fa8b: b2 02 00 00 01            ; XT=02b2, flags=01
3fa90: 07 61 2e 42 52 45 41 4b 00 ; 7, a.BREAK
;
3fa99: aa fa 03 00               ; a.UPOP - (next: 3faaa a.UPUSH)
3fa9d: a5 02 00 00 01            ; XT=02a5, flags=01
3faa2: 06 61 2e 55 50 4f 50 00   ; 6, a.UPOP
;
3faaa: bc fa 03 00               ; a.UPUSH - (next: 3fabc a.USTACKINIT)
3faae: 98 02 00 00 01            ; XT=0298, flags=01
3fab3: 07 61 2e 55 50 55 53 48 00 ; 7, a.UPUSH
;
3fabc: d3 fa 03 00               ; a.USTACKINIT - (next: 3fad3 a.GETCH)
3fac0: 8b 02 00 00 01            ; XT=028b, flags=01
3fac5: 0c 61 2e 55 53 54 41 43 4b 49 4e 49 54 00 ; 12, a.USTACKINIT
;
3fad3: e5 fa 03 00               ; a.GETCH - (next: 3fae5 a.OR)
3fad7: 7e 02 00 00 01            ; XT=027e, flags=01
3fadc: 07 61 2e 47 45 54 43 48 00 ; 7, a.GETCH
;
3fae5: f4 fa 03 00               ; a.OR - (next: 3faf4 a.AND)
3fae9: 71 02 00 00 01            ; XT=0271, flags=01
3faee: 04 61 2e 4f 52 00         ; 4, a.OR
;
3faf4: 04 fb 03 00               ; a.AND - (next: 3fb04 a.DEPTH)
3faf8: 64 02 00 00 01            ; XT=0264, flags=01
3fafd: 05 61 2e 41 4e 44 00      ; 5, a.AND
;
3fb04: 16 fb 03 00               ; a.DEPTH - (next: 3fb16 a.LOGLEVEL)
3fb08: 57 02 00 00 01            ; XT=0257, flags=01
3fb0d: 07 61 2e 44 45 50 54 48 00 ; 7, a.DEPTH
;
3fb16: 2b fb 03 00               ; a.LOGLEVEL - (next: 3fb2b a.PICK)
3fb1a: 4a 02 00 00 01            ; XT=024a, flags=01
3fb1f: 0a 61 2e 4c 4f 47 4c 45 56 45 4c 00 ; 10, a.LOGLEVEL
;
3fb2b: 3c fb 03 00               ; a.PICK - (next: 3fb3c a.RTOD)
3fb2f: 3d 02 00 00 01            ; XT=023d, flags=01
3fb34: 06 61 2e 50 49 43 4b 00   ; 6, a.PICK
;
3fb3c: 4d fb 03 00               ; a.RTOD - (next: 3fb4d a.DTOR)
3fb40: 30 02 00 00 01            ; XT=0230, flags=01
3fb45: 06 61 2e 52 54 4f 44 00   ; 6, a.RTOD
;
3fb4d: 5e fb 03 00               ; a.DTOR - (next: 3fb5e a.SLITERAL)
3fb51: 23 02 00 00 01            ; XT=0223, flags=01
3fb56: 06 61 2e 44 54 4f 52 00   ; 6, a.DTOR
;
3fb5e: 73 fb 03 00               ; a.SLITERAL - (next: 3fb73 a.FCLOSE)
3fb62: 16 02 00 00 01            ; XT=0216, flags=01
3fb67: 0a 61 2e 53 4c 49 54 45 52 41 4c 00 ; 10, a.SLITERAL
;
3fb73: 86 fb 03 00               ; a.FCLOSE - (next: 3fb86 a.FWRITE)
3fb77: 09 02 00 00 01            ; XT=0209, flags=01
3fb7c: 08 61 2e 46 43 4c 4f 53 45 00 ; 8, a.FCLOSE
;
3fb86: 99 fb 03 00               ; a.FWRITE - (next: 3fb99 a.FREADLINE)
3fb8a: fc 01 00 00 01            ; XT=01fc, flags=01
3fb8f: 08 61 2e 46 57 52 49 54 45 00 ; 8, a.FWRITE
;
3fb99: af fb 03 00               ; a.FREADLINE - (next: 3fbaf a.FREAD)
3fb9d: ef 01 00 00 01            ; XT=01ef, flags=01
3fba2: 0b 61 2e 46 52 45 41 44 4c 49 4e 45 00 ; 11, a.FREADLINE
;
3fbaf: c1 fb 03 00               ; a.FREAD - (next: 3fbc1 a.FOPEN)
3fbb3: e2 01 00 00 01            ; XT=01e2, flags=01
3fbb8: 07 61 2e 46 52 45 41 44 00 ; 7, a.FREAD
;
3fbc1: d3 fb 03 00               ; a.FOPEN - (next: 3fbd3 a.EMIT)
3fbc5: d5 01 00 00 01            ; XT=01d5, flags=01
3fbca: 07 61 2e 46 4f 50 45 4e 00 ; 7, a.FOPEN
;
3fbd3: e4 fb 03 00               ; a.EMIT - (next: 3fbe4 a.DICTP)
3fbd7: c8 01 00 00 01            ; XT=01c8, flags=01
3fbdc: 06 61 2e 45 4d 49 54 00   ; 6, a.EMIT
;
3fbe4: f6 fb 03 00               ; a.DICTP - (next: 3fbf6 a.GT)
3fbe8: bb 01 00 00 01            ; XT=01bb, flags=01
3fbed: 07 61 2e 44 49 43 54 50 00 ; 7, a.DICTP
;
3fbf6: 05 fc 03 00               ; a.GT - (next: 3fc05 a.EQ)
3fbfa: ae 01 00 00 01            ; XT=01ae, flags=01
3fbff: 04 61 2e 47 54 00         ; 4, a.GT
;
3fc05: 14 fc 03 00               ; a.EQ - (next: 3fc14 a.LT)
3fc09: a1 01 00 00 01            ; XT=01a1, flags=01
3fc0e: 04 61 2e 45 51 00         ; 4, a.EQ
;
3fc14: 23 fc 03 00               ; a.LT - (next: 3fc23 a.DIV)
3fc18: 94 01 00 00 01            ; XT=0194, flags=01
3fc1d: 04 61 2e 4c 54 00         ; 4, a.LT
;
3fc23: 33 fc 03 00               ; a.DIV - (next: 3fc33 a.MUL)
3fc27: 87 01 00 00 01            ; XT=0187, flags=01
3fc2c: 05 61 2e 44 49 56 00      ; 5, a.DIV
;
3fc33: 43 fc 03 00               ; a.MUL - (next: 3fc43 a.SUB)
3fc37: 7a 01 00 00 01            ; XT=017a, flags=01
3fc3c: 05 61 2e 4d 55 4c 00      ; 5, a.MUL
;
3fc43: 53 fc 03 00               ; a.SUB - (next: 3fc53 a.ADD)
3fc47: 6d 01 00 00 01            ; XT=016d, flags=01
3fc4c: 05 61 2e 53 55 42 00      ; 5, a.SUB
;
3fc53: 63 fc 03 00               ; a.ADD - (next: 3fc63 a.COMPAREI)
3fc57: 60 01 00 00 01            ; XT=0160, flags=01
3fc5c: 05 61 2e 41 44 44 00      ; 5, a.ADD
;
3fc63: 78 fc 03 00               ; a.COMPAREI - (next: 3fc78 a.COMPARE)
3fc67: 53 01 00 00 01            ; XT=0153, flags=01
3fc6c: 0a 61 2e 43 4f 4d 50 41 52 45 49 00 ; 10, a.COMPAREI
;
3fc78: 8c fc 03 00               ; a.COMPARE - (next: 3fc8c a.RET)
3fc7c: 46 01 00 00 01            ; XT=0146, flags=01
3fc81: 09 61 2e 43 4f 4d 50 41 52 45 00 ; 9, a.COMPARE
;
3fc8c: 9c fc 03 00               ; a.RET - (next: 3fc9c a.CALL)
3fc90: 39 01 00 00 01            ; XT=0139, flags=01
3fc95: 05 61 2e 52 45 54 00      ; 5, a.RET
;
3fc9c: ad fc 03 00               ; a.CALL - (next: 3fcad a.JMPNZ)
3fca0: 2c 01 00 00 01            ; XT=012c, flags=01
3fca5: 06 61 2e 43 41 4c 4c 00   ; 6, a.CALL
;
3fcad: bf fc 03 00               ; a.JMPNZ - (next: 3fcbf a.JMPZ)
3fcb1: 1f 01 00 00 01            ; XT=011f, flags=01
3fcb6: 07 61 2e 4a 4d 50 4e 5a 00 ; 7, a.JMPNZ
;
3fcbf: d0 fc 03 00               ; a.JMPZ - (next: 3fcd0 a.JMP)
3fcc3: 12 01 00 00 01            ; XT=0112, flags=01
3fcc8: 06 61 2e 4a 4d 50 5a 00   ; 6, a.JMPZ
;
3fcd0: e0 fc 03 00               ; a.JMP - (next: 3fce0 a.OVER)
3fcd4: 05 01 00 00 01            ; XT=0105, flags=01
3fcd9: 05 61 2e 4a 4d 50 00      ; 5, a.JMP
;
3fce0: f1 fc 03 00               ; a.OVER - (next: 3fcf1 a.DUP)
3fce4: f8 00 00 00 01            ; XT=00f8, flags=01
3fce9: 06 61 2e 4f 56 45 52 00   ; 6, a.OVER
;
3fcf1: 01 fd 03 00               ; a.DUP - (next: 3fd01 a.DROP)
3fcf5: eb 00 00 00 01            ; XT=00eb, flags=01
3fcfa: 05 61 2e 44 55 50 00      ; 5, a.DUP
;
3fd01: 12 fd 03 00               ; a.DROP - (next: 3fd12 a.SWAP)
3fd05: de 00 00 00 01            ; XT=00de, flags=01
3fd0a: 06 61 2e 44 52 4f 50 00   ; 6, a.DROP
;
3fd12: 23 fd 03 00               ; a.SWAP - (next: 3fd23 a.CSTORE)
3fd16: d1 00 00 00 01            ; XT=00d1, flags=01
3fd1b: 06 61 2e 53 57 41 50 00   ; 6, a.SWAP
;
3fd23: 36 fd 03 00               ; a.CSTORE - (next: 3fd36 a.CFETCH)
3fd27: c4 00 00 00 01            ; XT=00c4, flags=01
3fd2c: 08 61 2e 43 53 54 4f 52 45 00 ; 8, a.CSTORE
;
3fd36: 49 fd 03 00               ; a.CFETCH - (next: 3fd49 a.STORE)
3fd3a: b7 00 00 00 01            ; XT=00b7, flags=01
3fd3f: 08 61 2e 43 46 45 54 43 48 00 ; 8, a.CFETCH
;
3fd49: 5b fd 03 00               ; a.STORE - (next: 3fd5b a.FETCH)
3fd4d: aa 00 00 00 01            ; XT=00aa, flags=01
3fd52: 07 61 2e 53 54 4f 52 45 00 ; 7, a.STORE
;
3fd5b: 6d fd 03 00               ; a.FETCH - (next: 3fd6d a.CPUSH)
3fd5f: 9d 00 00 00 01            ; XT=009d, flags=01
3fd64: 07 61 2e 46 45 54 43 48 00 ; 7, a.FETCH
;
3fd6d: 7f fd 03 00               ; a.CPUSH - (next: 3fd7f a.PUSH)
3fd71: 90 00 00 00 01            ; XT=0090, flags=01
3fd76: 07 61 2e 43 50 55 53 48 00 ; 7, a.CPUSH
;
3fd7f: 90 fd 03 00               ; a.PUSH - (next: 3fd90 C,)
3fd83: 83 00 00 00 01            ; XT=0083, flags=01
3fd88: 06 61 2e 50 55 53 48 00   ; 6, a.PUSH
;
3fd90: 9d fd 03 00               ; C, - (next: 3fd9d STATE)
3fd94: 70 00 00 00 00            ; XT=0070, flags=00
3fd99: 02 43 2c 00               ; 2, C,
;
3fd9d: ad fd 03 00               ; STATE - (next: 3fdad INPUT-FP)
3fda1: 68 00 00 00 02            ; XT=0068, flags=02
3fda6: 05 53 54 41 54 45 00      ; 5, STATE
;
3fdad: c0 fd 03 00               ; INPUT-FP - (next: 3fdc0 (LAST))
3fdb1: 60 00 00 00 02            ; XT=0060, flags=02
3fdb6: 08 49 4e 50 55 54 2d 46 50 00 ; 8, INPUT-FP
;
3fdc0: d1 fd 03 00               ; (LAST) - (next: 3fdd1 DP)
3fdc4: 58 00 00 00 02            ; XT=0058, flags=02
3fdc9: 06 28 4c 41 53 54 29 00   ; 6, (LAST)
;
3fdd1: de fd 03 00               ; DP - (next: 3fdde CELL)
3fdd5: 50 00 00 00 02            ; XT=0050, flags=02
3fdda: 02 44 50 00               ; 2, DP
;
3fdde: ed fd 03 00               ; CELL - (next: 3fded BASE)
3fde2: 48 00 00 00 02            ; XT=0048, flags=02
3fde7: 04 43 45 4c 4c 00         ; 4, CELL
;
3fded: fc fd 03 00               ; BASE - (next: 3fdfc <end>)
3fdf1: 40 00 00 00 02            ; XT=0040, flags=02
3fdf6: 04 42 41 53 45 00         ; 4, BASE
;
3fdfc: 00 00 00 00               ; End.
