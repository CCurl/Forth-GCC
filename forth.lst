; memory-size: 65536 bytes, (10000 hex)
; data-stack: fe00, grows up
; return-stack: fffc, grows down
;
0000: 08 90 12 00 00             ; JMP main (1290)
;
0005: 00 00 00
0008: 00000004 00000000
0010: 00001578 0000ef0b 0000000a 00000000
0020: 00000000 00010000 00000000 00000000
0030: 00000000 00000000 00000000 00000000
;
0040: 18 eb fd 00 00             ; DICTP (HERE) (fdeb)
0045: 01 4b 00 00 00             ; LITERAL 75 (0x004b)
004a: 0c                         ; RET
004b: 78 15 00 00                ; dw 0x1578
;
004f: 18 da fd 00 00             ; DICTP (LAST) (fdda)
0054: 01 5a 00 00 00             ; LITERAL 90 (0x005a)
0059: 0c                         ; RET
005a: 0b ef 00 00                ; dw 0xef0b
;
005e: 18 cb fd 00 00             ; DICTP BASE (fdcb)
0063: 01 69 00 00 00             ; LITERAL 105 (0x0069)
0068: 0c                         ; RET
0069: 0a 00 00 00                ; dw 0x000a
;
006d: 18 bb fd 00 00             ; DICTP STATE (fdbb)
0072: 01 78 00 00 00             ; LITERAL 120 (0x0078)
0077: 0c                         ; RET
0078: 63 00 00 00                ; dw 0x0063
;
007c: 18 a8 fd 00 00             ; DICTP (MEM_SZ) (fda8)
0081: 01 87 00 00 00             ; LITERAL 135 (0x0087)
0086: 0c                         ; RET
0087: 00 00 01 00                ; dw 0x10000
;
008b: 18 9a fd 00 00             ; DICTP >IN (fd9a)
0090: 01 96 00 00 00             ; LITERAL 150 (0x0096)
0095: 0c                         ; RET
0096: 00 00 00 00                ; dw 0x0000
;
009a: 18 8a fd 00 00             ; DICTP (tmp) (fd8a)
009f: 01 a5 00 00 00             ; LITERAL 165 (0x00a5)
00a4: 0c                         ; RET
00a5: 00 00 00 00                ; dw 0x0000
;
00a9: 18 7b fd 00 00             ; DICTP #NEG (fd7b)
00ae: 01 b4 00 00 00             ; LITERAL 180 (0x00b4)
00b3: 0c                         ; RET
00b4: 00 00 00 00                ; dw 0x0000
;
00b8: 18 6c fd 00 00             ; DICTP #LEN (fd6c)
00bd: 01 c3 00 00 00             ; LITERAL 195 (0x00c3)
00c2: 0c                         ; RET
00c3: 05 00 00 00                ; dw 0x0005
;
00c7: 18 59 fd 00 00             ; DICTP INPUT-FP (fd59)
00cc: 01 d2 00 00 00             ; LITERAL 210 (0x00d2)
00d1: 0c                         ; RET
00d2: 00 00 00 00                ; dw 0x0000
;
00d6: 00                         ; RESET
00d7: 18 4a fd 00 00             ; DICTP CELL (fd4a)
00dc: 0e 04                      ; CLITERAL 4
00de: 0c                         ; RET
;
00df: 18 3b fd 00 00             ; DICTP HERE (fd3b)
00e4: 0b 40 00 00 00             ; CALL (HERE) (0040)
00e9: 02                         ; FETCH
00ea: 0c                         ; RET
;
00eb: 18 2c fd 00 00             ; DICTP LAST (fd2c)
00f0: 0b 4f 00 00 00             ; CALL (LAST) (004f)
00f5: 02                         ; FETCH
00f6: 0c                         ; RET
;
00f7: 18 1f fd 00 00             ; DICTP C, (fd1f)
00fc: 0b df 00 00 00             ; CALL HERE (00df)
0101: 10                         ; CSTORE
0102: 0b df 00 00 00             ; CALL HERE (00df)
0107: 0e 01                      ; CLITERAL 1
0109: 11                         ; ADD
010a: 0b 40 00 00 00             ; CALL (HERE) (0040)
010f: 03                         ; STORE
0110: 0c                         ; RET
;
0111: 18 13 fd 00 00             ; DICTP , (fd13)
0116: 0b df 00 00 00             ; CALL HERE (00df)
011b: 03                         ; STORE
011c: 0b df 00 00 00             ; CALL HERE (00df)
0121: 0b d7 00 00 00             ; CALL CELL (00d7)
0126: 11                         ; ADD
0127: 0b 40 00 00 00             ; CALL (HERE) (0040)
012c: 03                         ; STORE
012d: 0c                         ; RET
;
012e: 18 07 fd 00 00             ; DICTP [ (fd07)
0133: 0e 00                      ; CLITERAL 0
0135: 0b 6d 00 00 00             ; CALL STATE (006d)
013a: 03                         ; STORE
013b: 0c                         ; RET
;
013c: 18 fb fc 00 00             ; DICTP ] (fcfb)
0141: 0e 01                      ; CLITERAL 1
0143: 0b 6d 00 00 00             ; CALL STATE (006d)
0148: 03                         ; STORE
0149: 0c                         ; RET
;
014a: 18 e9 fc 00 00             ; DICTP LITERAL (fce9)
014f: 0e 01                      ; CLITERAL 1
0151: 0b f7 00 00 00             ; CALL C, (00f7)
0156: 0c                         ; RET
;
0157: 18 dd fc 00 00             ; DICTP @ (fcdd)
015c: 02                         ; FETCH
015d: 0c                         ; RET
;
015e: 18 d1 fc 00 00             ; DICTP ! (fcd1)
0163: 03                         ; STORE
0164: 0c                         ; RET
;
0165: 18 c2 fc 00 00             ; DICTP SWAP (fcc2)
016a: 04                         ; SWAP
016b: 0c                         ; RET
;
016c: 18 b3 fc 00 00             ; DICTP DROP (fcb3)
0171: 05                         ; DROP
0172: 0c                         ; RET
;
0173: 18 a5 fc 00 00             ; DICTP DUP (fca5)
0178: 06                         ; DUP
0179: 0c                         ; RET
;
017a: 18 92 fc 00 00             ; DICTP SLITERAL (fc92)
017f: 0e 07                      ; CLITERAL 7
0181: 0b f7 00 00 00             ; CALL C, (00f7)
0186: 0c                         ; RET
;
0187: 18 84 fc 00 00             ; DICTP JMP (fc84)
018c: 0e 08                      ; CLITERAL 8
018e: 0b f7 00 00 00             ; CALL C, (00f7)
0193: 0c                         ; RET
;
0194: 18 75 fc 00 00             ; DICTP JMPZ (fc75)
0199: 0e 09                      ; CLITERAL 9
019b: 0b f7 00 00 00             ; CALL C, (00f7)
01a0: 0c                         ; RET
;
01a1: 18 65 fc 00 00             ; DICTP JMPNZ (fc65)
01a6: 0e 0a                      ; CLITERAL 10
01a8: 0b f7 00 00 00             ; CALL C, (00f7)
01ad: 0c                         ; RET
;
01ae: 18 56 fc 00 00             ; DICTP CALL (fc56)
01b3: 0e 0b                      ; CLITERAL 11
01b5: 0b f7 00 00 00             ; CALL C, (00f7)
01ba: 0c                         ; RET
;
01bb: 18 48 fc 00 00             ; DICTP RET (fc48)
01c0: 0e 0c                      ; CLITERAL 12
01c2: 0b f7 00 00 00             ; CALL C, (00f7)
01c7: 0c                         ; RET
;
01c8: 18 3b fc 00 00             ; DICTP OR (fc3b)
01cd: 0d                         ; OR
01ce: 0c                         ; RET
;
01cf: 18 28 fc 00 00             ; DICTP CLITERAL (fc28)
01d4: 0e 0e                      ; CLITERAL 14
01d6: 0b f7 00 00 00             ; CALL C, (00f7)
01db: 0c                         ; RET
;
01dc: 18 1b fc 00 00             ; DICTP C@ (fc1b)
01e1: 0f                         ; CFETCH
01e2: 0c                         ; RET
;
01e3: 18 0e fc 00 00             ; DICTP C! (fc0e)
01e8: 10                         ; CSTORE
01e9: 0c                         ; RET
;
01ea: 18 02 fc 00 00             ; DICTP + (fc02)
01ef: 11                         ; ADD
01f0: 0c                         ; RET
;
01f1: 18 f6 fb 00 00             ; DICTP - (fbf6)
01f6: 12                         ; SUB
01f7: 0c                         ; RET
;
01f8: 18 ea fb 00 00             ; DICTP * (fbea)
01fd: 13                         ; MUL
01fe: 0c                         ; RET
;
01ff: 18 de fb 00 00             ; DICTP / (fbde)
0204: 14                         ; DIV
0205: 0c                         ; RET
;
0206: 18 d2 fb 00 00             ; DICTP < (fbd2)
020b: 15                         ; LT
020c: 0c                         ; RET
;
020d: 18 c6 fb 00 00             ; DICTP = (fbc6)
0212: 16                         ; EQ
0213: 0c                         ; RET
;
0214: 18 ba fb 00 00             ; DICTP > (fbba)
0219: 17                         ; GT
021a: 0c                         ; RET
;
021b: 18 aa fb 00 00             ; DICTP DICTP (fbaa)
0220: 0e 18                      ; CLITERAL 24
0222: 0b f7 00 00 00             ; CALL C, (00f7)
0227: 0c                         ; RET
;
0228: 18 9b fb 00 00             ; DICTP EMIT (fb9b)
022d: 19                         ; EMIT
022e: 0c                         ; RET
;
022f: 18 8c fb 00 00             ; DICTP OVER (fb8c)
0234: 1a                         ; OVER
0235: 0c                         ; RET
;
0236: 18 7a fb 00 00             ; DICTP COMPARE (fb7a)
023b: 1b                         ; COMPARE
023c: 0c                         ; RET
;
023d: 18 6a fb 00 00             ; DICTP FOPEN (fb6a)
0242: 1c                         ; FOPEN
0243: 0c                         ; RET
;
0244: 18 5a fb 00 00             ; DICTP FREAD (fb5a)
0249: 1d                         ; FREAD
024a: 0c                         ; RET
;
024b: 18 46 fb 00 00             ; DICTP FREADLINE (fb46)
0250: 1e                         ; FREADLINE
0251: 0c                         ; RET
;
0252: 18 35 fb 00 00             ; DICTP FWRITE (fb35)
0257: 1f                         ; FWRITE
0258: 0c                         ; RET
;
0259: 18 24 fb 00 00             ; DICTP FCLOSE (fb24)
025e: 20                         ; FCLOSE
025f: 0c                         ; RET
;
0260: 18 17 fb 00 00             ; DICTP >R (fb17)
0265: 21                         ; DTOR
0266: 0c                         ; RET
;
0267: 18 0a fb 00 00             ; DICTP R> (fb0a)
026c: 22                         ; RTOD
026d: 0c                         ; RET
;
026e: 18 f7 fa 00 00             ; DICTP LOGLEVEL (faf7)
0273: 23                         ; LOGLEVEL
0274: 0c                         ; RET
;
0275: 18 e9 fa 00 00             ; DICTP AND (fae9)
027a: 24                         ; AND
027b: 0c                         ; RET
;
027c: 18 da fa 00 00             ; DICTP PICK (fada)
0281: 25                         ; PICK
0282: 0c                         ; RET
;
0283: 18 ca fa 00 00             ; DICTP DEPTH (faca)
0288: 26                         ; DEPTH
0289: 0c                         ; RET
;
028a: 18 ba fa 00 00             ; DICTP GETCH (faba)
028f: 27                         ; GETCH
0290: 0c                         ; RET
;
0291: 18 a7 fa 00 00             ; DICTP COMPAREI (faa7)
0296: 28                         ; COMPAREI
0297: 0c                         ; RET
;
0298: 18 98 fa 00 00             ; DICTP /MOD (fa98)
029d: 29                         ; RESET
029e: 0c                         ; RET
;
029f: 18 87 fa 00 00             ; DICTP USPUSH (fa87)
02a4: 2a                         ; UPUSH
02a5: 0c                         ; RET
;
02a6: 18 77 fa 00 00             ; DICTP USPOP (fa77)
02ab: 2b                         ; UPOP
02ac: 0c                         ; RET
;
02ad: 18 69 fa 00 00             ; DICTP INC (fa69)
02b2: 2c                         ; INC
02b3: 0c                         ; RET
;
02b4: 18 58 fa 00 00             ; DICTP RDEPTH (fa58)
02b9: 2d                         ; RDEPTH
02ba: 0c                         ; RET
;
02bb: 18 4a fa 00 00             ; DICTP DEC (fa4a)
02c0: 2e                         ; DEC
02c1: 0c                         ; RET
;
02c2: 18 38 fa 00 00             ; DICTP GETTICK (fa38)
02c7: 2f                         ; GETTICK
02c8: 0c                         ; RET
;
02c9: 18 28 fa 00 00             ; DICTP BREAK (fa28)
02ce: fd                         ; BREAK
02cf: 0c                         ; RET
;
02d0: 18 18 fa 00 00             ; DICTP RESET (fa18)
02d5: fe                         ; RESET
02d6: 0c                         ; RET
;
02d7: 18 0a fa 00 00             ; DICTP BYE (fa0a)
02dc: ff                         ; BYE
02dd: 0c                         ; RET
;
02de: 18 f9 f9 00 00             ; DICTP INLINE (f9f9)
02e3: 0b eb 00 00 00             ; CALL LAST (00eb)
02e8: 0e 02                      ; CLITERAL 2
02ea: 0b d7 00 00 00             ; CALL CELL (00d7)
02ef: 13                         ; MUL
02f0: 11                         ; ADD
02f1: 06                         ; DUP
02f2: 0f                         ; CFETCH
02f3: 0e 02                      ; CLITERAL 2
02f5: 0d                         ; OR
02f6: 04                         ; SWAP
02f7: 10                         ; CSTORE
02f8: 0c                         ; RET
;
02f9: 18 e5 f9 00 00             ; DICTP IMMEDIATE (f9e5)
02fe: 0b eb 00 00 00             ; CALL LAST (00eb)
0303: 0e 02                      ; CLITERAL 2
0305: 0b d7 00 00 00             ; CALL CELL (00d7)
030a: 13                         ; MUL
030b: 11                         ; ADD
030c: 06                         ; DUP
030d: 0f                         ; CFETCH
030e: 0e 01                      ; CLITERAL 1
0310: 0d                         ; OR
0311: 04                         ; SWAP
0312: 10                         ; CSTORE
0313: 0c                         ; RET
;
0314: 18 d5 f9 00 00             ; DICTP CELLS (f9d5)
0319: 0b d7 00 00 00             ; CALL CELL (00d7)
031e: 13                         ; MUL
031f: 0c                         ; RET
;
0320: 18 bc f9 00 00             ; DICTP FLAG_IMMEDIATE (f9bc)
0325: 0e 01                      ; CLITERAL 1
0327: 0c                         ; RET
;
0328: 18 a6 f9 00 00             ; DICTP FLAG_INLINE (f9a6)
032d: 0e 02                      ; CLITERAL 2
032f: 0c                         ; RET
;
0330: 18 98 f9 00 00             ; DICTP HEX (f998)
0335: 0e 10                      ; CLITERAL 16
0337: 0b 5e 00 00 00             ; CALL BASE (005e)
033c: 03                         ; STORE
033d: 0c                         ; RET
;
033e: 18 86 f9 00 00             ; DICTP DECIMAL (f986)
0343: 0e 0a                      ; CLITERAL 10
0345: 0b 5e 00 00 00             ; CALL BASE (005e)
034a: 03                         ; STORE
034b: 0c                         ; RET
;
034c: 18 76 f9 00 00             ; DICTP OCTAL (f976)
0351: 0e 08                      ; CLITERAL 8
0353: 0b 5e 00 00 00             ; CALL BASE (005e)
0358: 03                         ; STORE
0359: 0c                         ; RET
;
035a: 18 65 f9 00 00             ; DICTP BINARY (f965)
035f: 0e 02                      ; CLITERAL 2
0361: 0b 5e 00 00 00             ; CALL BASE (005e)
0366: 03                         ; STORE
0367: 0c                         ; RET
;
0368: 18 58 f9 00 00             ; DICTP ON (f958)
036d: 0e 01                      ; CLITERAL 1
036f: 04                         ; SWAP
0370: 03                         ; STORE
0371: 0c                         ; RET
;
0372: 18 4a f9 00 00             ; DICTP OFF (f94a)
0377: 0e 00                      ; CLITERAL 0
0379: 04                         ; SWAP
037a: 03                         ; STORE
037b: 0c                         ; RET
;
037c: 18 35 f9 00 00             ; DICTP ?COMPILING (f935)
0381: 0b 6d 00 00 00             ; CALL STATE (006d)
0386: 02                         ; FETCH
0387: 0c                         ; RET
;
0388: 18 28 f9 00 00             ; DICTP IF (f928)
038d: 0b 7c 03 00 00             ; CALL ?COMPILING (037c)
0392: 09 a8 03 00 00             ; JMPZ 03a8
0397: 0b 94 01 00 00             ; CALL JMPZ (0194)
039c: 0b df 00 00 00             ; CALL HERE (00df)
03a1: 0e 00                      ; CLITERAL 0
03a3: 0b 11 01 00 00             ; CALL , (0111)
03a8: 0c                         ; RET
;
03a9: 18 19 f9 00 00             ; DICTP ELSE (f919)
03ae: 0b 7c 03 00 00             ; CALL ?COMPILING (037c)
03b3: 09 d1 03 00 00             ; JMPZ 03d1
03b8: 0b 87 01 00 00             ; CALL JMP (0187)
03bd: 0b df 00 00 00             ; CALL HERE (00df)
03c2: 04                         ; SWAP
03c3: 0e 00                      ; CLITERAL 0
03c5: 0b 11 01 00 00             ; CALL , (0111)
03ca: 0b df 00 00 00             ; CALL HERE (00df)
03cf: 04                         ; SWAP
03d0: 03                         ; STORE
03d1: 0c                         ; RET
;
03d2: 18 0a f9 00 00             ; DICTP THEN (f90a)
03d7: 0b 7c 03 00 00             ; CALL ?COMPILING (037c)
03dc: 09 e8 03 00 00             ; JMPZ 03e8
03e1: 0b df 00 00 00             ; CALL HERE (00df)
03e6: 04                         ; SWAP
03e7: 03                         ; STORE
03e8: 0c                         ; RET
;
03e9: 18 fa f8 00 00             ; DICTP BEGIN (f8fa)
03ee: 0b 7c 03 00 00             ; CALL ?COMPILING (037c)
03f3: 09 fd 03 00 00             ; JMPZ 03fd
03f8: 0b df 00 00 00             ; CALL HERE (00df)
03fd: 0c                         ; RET
;
03fe: 18 ea f8 00 00             ; DICTP AGAIN (f8ea)
0403: 0b 7c 03 00 00             ; CALL ?COMPILING (037c)
0408: 09 17 04 00 00             ; JMPZ 0417
040d: 0b 87 01 00 00             ; CALL JMP (0187)
0412: 0b 11 01 00 00             ; CALL , (0111)
0417: 0c                         ; RET
;
0418: 18 da f8 00 00             ; DICTP WHILE (f8da)
041d: 0b 7c 03 00 00             ; CALL ?COMPILING (037c)
0422: 09 31 04 00 00             ; JMPZ 0431
0427: 0b a1 01 00 00             ; CALL JMPNZ (01a1)
042c: 0b 11 01 00 00             ; CALL , (0111)
0431: 0c                         ; RET
;
0432: 18 ca f8 00 00             ; DICTP UNTIL (f8ca)
0437: 0b 7c 03 00 00             ; CALL ?COMPILING (037c)
043c: 09 4b 04 00 00             ; JMPZ 044b
0441: 0b 94 01 00 00             ; CALL JMPZ (0194)
0446: 0b 11 01 00 00             ; CALL , (0111)
044b: 0c                         ; RET
;
044c: 18 ba f8 00 00             ; DICTP LEAVE (f8ba)
0451: 0b 7c 03 00 00             ; CALL ?COMPILING (037c)
0456: 09 60 04 00 00             ; JMPZ 0460
045b: 0b bb 01 00 00             ; CALL RET (01bb)
0460: 0c                         ; RET
;
0461: 18 a9 f8 00 00             ; DICTP MEM_SZ (f8a9)
0466: 0b 7c 00 00 00             ; CALL (MEM_SZ) (007c)
046b: 02                         ; FETCH
046c: 0c                         ; RET
;
046d: 18 96 f8 00 00             ; DICTP TRACE-ON (f896)
0472: 0e 02                      ; CLITERAL 2
0474: 23                         ; LOGLEVEL
0475: 0c                         ; RET
;
0476: 18 82 f8 00 00             ; DICTP TRACE-OFF (f882)
047b: 0e 00                      ; CLITERAL 0
047d: 23                         ; LOGLEVEL
047e: 0c                         ; RET
;
047f: 18 6f f8 00 00             ; DICTP DEBUG-ON (f86f)
0484: 0e 01                      ; CLITERAL 1
0486: 23                         ; LOGLEVEL
0487: 0c                         ; RET
;
0488: 18 5b f8 00 00             ; DICTP DEBUG-OFF (f85b)
048d: 0e 00                      ; CLITERAL 0
048f: 23                         ; LOGLEVEL
0490: 0c                         ; RET
;
0491: 18 4e f8 00 00             ; DICTP R@ (f84e)
0496: 22                         ; RTOD
0497: 06                         ; DUP
0498: 21                         ; DTOR
0499: 0c                         ; RET
;
049a: 18 3e f8 00 00             ; DICTP RDROP (f83e)
049f: 22                         ; RTOD
04a0: 05                         ; DROP
04a1: 0c                         ; RET
;
04a2: 18 2f f8 00 00             ; DICTP 2DUP (f82f)
04a7: 1a                         ; OVER
04a8: 1a                         ; OVER
04a9: 0c                         ; RET
;
04aa: 18 1f f8 00 00             ; DICTP 2DROP (f81f)
04af: 05                         ; DROP
04b0: 05                         ; DROP
04b1: 0c                         ; RET
;
04b2: 18 10 f8 00 00             ; DICTP TUCK (f810)
04b7: 04                         ; SWAP
04b8: 1a                         ; OVER
04b9: 0c                         ; RET
;
04ba: 18 02 f8 00 00             ; DICTP NIP (f802)
04bf: 04                         ; SWAP
04c0: 05                         ; DROP
04c1: 0c                         ; RET
;
04c2: 18 f4 f7 00 00             ; DICTP ROT (f7f4)
04c7: 21                         ; DTOR
04c8: 04                         ; SWAP
04c9: 22                         ; RTOD
04ca: 04                         ; SWAP
04cb: 0c                         ; RET
;
04cc: 18 e5 f7 00 00             ; DICTP -ROT (f7e5)
04d1: 04                         ; SWAP
04d2: 21                         ; DTOR
04d3: 04                         ; SWAP
04d4: 22                         ; RTOD
04d5: 0c                         ; RET
;
04d6: 18 d9 f7 00 00             ; DICTP / (f7d9)
04db: 29                         ; RESET
04dc: 04                         ; SWAP
04dd: 05                         ; DROP
04de: 0c                         ; RET
;
04df: 18 cb f7 00 00             ; DICTP MOD (f7cb)
04e4: 29                         ; RESET
04e5: 05                         ; DROP
04e6: 0c                         ; RET
;
04e7: 18 be f7 00 00             ; DICTP 1+ (f7be)
04ec: 2c                         ; INC
04ed: 0c                         ; RET
;
04ee: 18 b1 f7 00 00             ; DICTP 1- (f7b1)
04f3: 2e                         ; DEC
04f4: 0c                         ; RET
;
04f5: 18 a4 f7 00 00             ; DICTP 2* (f7a4)
04fa: 0e 02                      ; CLITERAL 2
04fc: 13                         ; MUL
04fd: 0c                         ; RET
;
04fe: 18 97 f7 00 00             ; DICTP 2/ (f797)
0503: 0e 02                      ; CLITERAL 2
0505: 29                         ; RESET
0506: 04                         ; SWAP
0507: 05                         ; DROP
0508: 0c                         ; RET
;
0509: 18 8a f7 00 00             ; DICTP +! (f78a)
050e: 04                         ; SWAP
050f: 1a                         ; OVER
0510: 02                         ; FETCH
0511: 11                         ; ADD
0512: 04                         ; SWAP
0513: 03                         ; STORE
0514: 0c                         ; RET
;
0515: 18 7c f7 00 00             ; DICTP C+! (f77c)
051a: 04                         ; SWAP
051b: 1a                         ; OVER
051c: 0f                         ; CFETCH
051d: 11                         ; ADD
051e: 04                         ; SWAP
051f: 10                         ; CSTORE
0520: 0c                         ; RET
;
0521: 18 6f f7 00 00             ; DICTP += (f76f)
0526: 04                         ; SWAP
0527: 0b 09 05 00 00             ; CALL +! (0509)
052c: 0c                         ; RET
;
052d: 18 62 f7 00 00             ; DICTP -= (f762)
0532: 1a                         ; OVER
0533: 02                         ; FETCH
0534: 04                         ; SWAP
0535: 12                         ; SUB
0536: 04                         ; SWAP
0537: 03                         ; STORE
0538: 0c                         ; RET
;
0539: 18 55 f7 00 00             ; DICTP ++ (f755)
053e: 0e 01                      ; CLITERAL 1
0540: 0b 21 05 00 00             ; CALL += (0521)
0545: 0c                         ; RET
;
0546: 18 48 f7 00 00             ; DICTP -- (f748)
054b: 0e 01                      ; CLITERAL 1
054d: 0b 2d 05 00 00             ; CALL -= (052d)
0552: 0c                         ; RET
;
0553: 18 3a f7 00 00             ; DICTP C++ (f73a)
0558: 06                         ; DUP
0559: 0f                         ; CFETCH
055a: 2c                         ; INC
055b: 04                         ; SWAP
055c: 10                         ; CSTORE
055d: 0c                         ; RET
;
055e: 18 2c f7 00 00             ; DICTP C-- (f72c)
0563: 06                         ; DUP
0564: 0f                         ; CFETCH
0565: 2e                         ; DEC
0566: 04                         ; SWAP
0567: 10                         ; CSTORE
0568: 0c                         ; RET
;
0569: 18 1f f7 00 00             ; DICTP 0= (f71f)
056e: 0e 00                      ; CLITERAL 0
0570: 16                         ; EQ
0571: 0c                         ; RET
;
0572: 18 12 f7 00 00             ; DICTP <> (f712)
0577: 16                         ; EQ
0578: 0e 00                      ; CLITERAL 0
057a: 16                         ; EQ
057b: 0c                         ; RET
;
057c: 18 05 f7 00 00             ; DICTP <= (f705)
0581: 17                         ; GT
0582: 0e 00                      ; CLITERAL 0
0584: 16                         ; EQ
0585: 0c                         ; RET
;
0586: 18 f8 f6 00 00             ; DICTP >= (f6f8)
058b: 15                         ; LT
058c: 0e 00                      ; CLITERAL 0
058e: 16                         ; EQ
058f: 0c                         ; RET
;
0590: 18 e9 f6 00 00             ; DICTP TRUE (f6e9)
0595: 0e 01                      ; CLITERAL 1
0597: 0c                         ; RET
;
0598: 18 d9 f6 00 00             ; DICTP FALSE (f6d9)
059d: 0e 00                      ; CLITERAL 0
059f: 0c                         ; RET
;
05a0: 18 cb f6 00 00             ; DICTP NOT (f6cb)
05a5: 0e 00                      ; CLITERAL 0
05a7: 16                         ; EQ
05a8: 0c                         ; RET
;
05a9: 18 bb f6 00 00             ; DICTP COUNT (f6bb)
05ae: 06                         ; DUP
05af: 2c                         ; INC
05b0: 04                         ; SWAP
05b1: 0f                         ; CFETCH
05b2: 0c                         ; RET
;
05b3: 18 ac f6 00 00             ; DICTP TYPE (f6ac)
05b8: 1a                         ; OVER
05b9: 11                         ; ADD
05ba: 04                         ; SWAP
05bb: 1a                         ; OVER
05bc: 1a                         ; OVER
05bd: 17                         ; GT
05be: 0e 00                      ; CLITERAL 0
05c0: 16                         ; EQ
05c1: 09 c9 05 00 00             ; JMPZ 05c9
05c6: 05                         ; DROP
05c7: 05                         ; DROP
05c8: 0c                         ; RET
05c9: 06                         ; DUP
05ca: 0f                         ; CFETCH
05cb: 19                         ; EMIT
05cc: 2c                         ; INC
05cd: 08 bb 05 00 00             ; JMP 05bb
05d2: 0c                         ; RET
;
05d3: 18 9f f6 00 00             ; DICTP CT (f69f)
05d8: 0b a9 05 00 00             ; CALL COUNT (05a9)
05dd: 0b b3 05 00 00             ; CALL TYPE (05b3)
05e2: 0c                         ; RET
;
05e3: 18 93 f6 00 00             ; DICTP \ (f693)
05e8: 0e 00                      ; CLITERAL 0
05ea: 0b 8b 00 00 00             ; CALL >IN (008b)
05ef: 02                         ; FETCH
05f0: 10                         ; CSTORE
05f1: 0c                         ; RET
;
05f2: 18 87 f6 00 00             ; DICTP ( (f687)
05f7: 0b 8b 00 00 00             ; CALL >IN (008b)
05fc: 02                         ; FETCH
05fd: 0f                         ; CFETCH
05fe: 06                         ; DUP
05ff: 0e 00                      ; CLITERAL 0
0601: 16                         ; EQ
0602: 09 23 06 00 00             ; JMPZ 0623
0607: 07 13 6d 69 73 73 69 6e 67 20 63 6c 6f 73 69 6e 67 20 27 29 27 00 ; SLITERAL (0608) [missing closing ')']
061d: 0b d3 05 00 00             ; CALL CT (05d3)
0622: fe                         ; RESET
0623: 0b 8b 00 00 00             ; CALL >IN (008b)
0628: 0b 39 05 00 00             ; CALL ++ (0539)
062d: 0e 29                      ; CLITERAL 41
062f: 16                         ; EQ
0630: 09 36 06 00 00             ; JMPZ 0636
0635: 0c                         ; RET
0636: 08 f7 05 00 00             ; JMP 05f7
063b: 0c                         ; RET
;
063c: 18 7a f6 00 00             ; DICTP BL (f67a)
0641: 0e 20                      ; CLITERAL 32
0643: 19                         ; EMIT
0644: 0c                         ; RET
;
0645: 18 6b f6 00 00             ; DICTP CRLF (f66b)
064a: 0e 0d                      ; CLITERAL 13
064c: 19                         ; EMIT
064d: 0e 0a                      ; CLITERAL 10
064f: 19                         ; EMIT
0650: 0c                         ; RET
;
0651: 18 5e f6 00 00             ; DICTP CR (f65e)
0656: 0e 0d                      ; CLITERAL 13
0658: 19                         ; EMIT
0659: 0e 0a                      ; CLITERAL 10
065b: 19                         ; EMIT
065c: 0c                         ; RET
;
065d: 18 4c f6 00 00             ; DICTP BETWEEN (f64c)
0662: 0e 02                      ; CLITERAL 2
0664: 25                         ; PICK
0665: 15                         ; LT
0666: 09 70 06 00 00             ; JMPZ 0670
066b: 05                         ; DROP
066c: 05                         ; DROP
066d: 0e 00                      ; CLITERAL 0
066f: 0c                         ; RET
0670: 15                         ; LT
0671: 0e 00                      ; CLITERAL 0
0673: 16                         ; EQ
0674: 0c                         ; RET
;
0675: 18 39 f6 00 00             ; DICTP tmp-init (f639)
067a: 0b eb 00 00 00             ; CALL LAST (00eb)
067f: 0b 9a 00 00 00             ; CALL (tmp) (009a)
0684: 03                         ; STORE
0685: 0c                         ; RET
;
0686: 18 27 f6 00 00             ; DICTP tmp-cur (f627)
068b: 0b 9a 00 00 00             ; CALL (tmp) (009a)
0690: 02                         ; FETCH
0691: 0c                         ; RET
;
0692: 18 13 f6 00 00             ; DICTP tmp-alloc (f613)
0697: 0b 9a 00 00 00             ; CALL (tmp) (009a)
069c: 04                         ; SWAP
069d: 1a                         ; OVER
069e: 02                         ; FETCH
069f: 04                         ; SWAP
06a0: 12                         ; SUB
06a1: 04                         ; SWAP
06a2: 03                         ; STORE
06a3: 0b 86 06 00 00             ; CALL tmp-cur (0686)
06a8: 0c                         ; RET
;
06a9: 18 05 f6 00 00             ; DICTP PAD (f605)
06ae: 0b 75 06 00 00             ; CALL tmp-init (0675)
06b3: 0e c8                      ; CLITERAL 200
06b5: 0b 92 06 00 00             ; CALL tmp-alloc (0692)
06ba: 0c                         ; RET
;
06bb: 18 f2 f5 00 00             ; DICTP getInput (f5f2)
06c0: 0b a9 06 00 00             ; CALL PAD (06a9)
06c5: 0e 80                      ; CLITERAL 128
06c7: 0e 00                      ; CLITERAL 0
06c9: 1e                         ; FREADLINE
06ca: 05                         ; DROP
06cb: 0b a9 06 00 00             ; CALL PAD (06a9)
06d0: 0c                         ; RET
;
06d1: 18 e1 f5 00 00             ; DICTP skipWS (f5e1)
06d6: 06                         ; DUP
06d7: 0f                         ; CFETCH
06d8: 06                         ; DUP
06d9: 09 f2 06 00 00             ; JMPZ 06f2
06de: 0e 20                      ; CLITERAL 32
06e0: 17                         ; GT
06e1: 09 ec 06 00 00             ; JMPZ 06ec
06e6: 0c                         ; RET
06e7: 08 ed 06 00 00             ; JMP 06ed
06ec: 2c                         ; INC
06ed: 08 f4 06 00 00             ; JMP 06f4
06f2: 05                         ; DROP
06f3: 0c                         ; RET
06f4: 08 d6 06 00 00             ; JMP 06d6
06f9: 0c                         ; RET
;
06fa: 18 cc f5 00 00             ; DICTP getOneWord (f5cc)
06ff: 06                         ; DUP
0700: 21                         ; DTOR
0701: 21                         ; DTOR
0702: 22                         ; RTOD
0703: 06                         ; DUP
0704: 21                         ; DTOR
0705: 0f                         ; CFETCH
0706: 0e 20                      ; CLITERAL 32
0708: 17                         ; GT
0709: 09 16 07 00 00             ; JMPZ 0716
070e: 22                         ; RTOD
070f: 2c                         ; INC
0710: 21                         ; DTOR
0711: 08 2c 07 00 00             ; JMP 072c
0716: 22                         ; RTOD
0717: 06                         ; DUP
0718: 21                         ; DTOR
0719: 0f                         ; CFETCH
071a: 09 28 07 00 00             ; JMPZ 0728
071f: 0e 00                      ; CLITERAL 0
0721: 22                         ; RTOD
0722: 06                         ; DUP
0723: 21                         ; DTOR
0724: 10                         ; CSTORE
0725: 22                         ; RTOD
0726: 2c                         ; INC
0727: 21                         ; DTOR
0728: 22                         ; RTOD
0729: 22                         ; RTOD
072a: 04                         ; SWAP
072b: 0c                         ; RET
072c: 08 02 07 00 00             ; JMP 0702
0731: 0c                         ; RET
;
0732: 18 b8 f5 00 00             ; DICTP DICT>NEXT (f5b8)
0737: 0c                         ; RET
;
0738: 18 a6 f5 00 00             ; DICTP DICT>XT (f5a6)
073d: 0b d7 00 00 00             ; CALL CELL (00d7)
0742: 11                         ; ADD
0743: 0c                         ; RET
;
0744: 18 91 f5 00 00             ; DICTP DICT>FLAGS (f591)
0749: 0e 02                      ; CLITERAL 2
074b: 0b d7 00 00 00             ; CALL CELL (00d7)
0750: 13                         ; MUL
0751: 11                         ; ADD
0752: 0c                         ; RET
;
0753: 18 7d f5 00 00             ; DICTP DICT>NAME (f57d)
0758: 0b 44 07 00 00             ; CALL DICT>FLAGS (0744)
075d: 2c                         ; INC
075e: 0c                         ; RET
;
075f: 18 69 f5 00 00             ; DICTP NEXT>DICT (f569)
0764: 0c                         ; RET
;
0765: 18 57 f5 00 00             ; DICTP XT>DICT (f557)
076a: 0b d7 00 00 00             ; CALL CELL (00d7)
076f: 12                         ; SUB
0770: 0c                         ; RET
;
0771: 18 42 f5 00 00             ; DICTP FLAGS>DICT (f542)
0776: 0e 02                      ; CLITERAL 2
0778: 0b d7 00 00 00             ; CALL CELL (00d7)
077d: 13                         ; MUL
077e: 12                         ; SUB
077f: 0c                         ; RET
;
0780: 18 2e f5 00 00             ; DICTP NAME>DICT (f52e)
0785: 2e                         ; DEC
0786: 0e 02                      ; CLITERAL 2
0788: 0b d7 00 00 00             ; CALL CELL (00d7)
078d: 13                         ; MUL
078e: 12                         ; SUB
078f: 0c                         ; RET
;
0790: 18 19 f5 00 00             ; DICTP DICT.GetXT (f519)
0795: 0b 38 07 00 00             ; CALL DICT>XT (0738)
079a: 02                         ; FETCH
079b: 0c                         ; RET
;
079c: 18 01 f5 00 00             ; DICTP DICT.GetFLAGS (f501)
07a1: 0b 44 07 00 00             ; CALL DICT>FLAGS (0744)
07a6: 0f                         ; CFETCH
07a7: 0c                         ; RET
;
07a8: 18 ec f4 00 00             ; DICTP DICTP>NAME (f4ec)
07ad: 2c                         ; INC
07ae: 02                         ; FETCH
07af: 0b 53 07 00 00             ; CALL DICT>NAME (0753)
07b4: 0c                         ; RET
;
07b5: 18 d6 f4 00 00             ; DICTP XT.GetDICTP (f4d6)
07ba: 06                         ; DUP
07bb: 0f                         ; CFETCH
07bc: 0e 18                      ; CLITERAL 24
07be: 16                         ; EQ
07bf: 09 cb 07 00 00             ; JMPZ 07cb
07c4: 2c                         ; INC
07c5: 02                         ; FETCH
07c6: 08 cd 07 00 00             ; JMP 07cd
07cb: 05                         ; DROP
07cc: fe                         ; RESET
07cd: 0c                         ; RET
;
07ce: 18 b9 f4 00 00             ; DICTP FLAGS.ISIMMEDIATE? (f4b9)
07d3: 0e 01                      ; CLITERAL 1
07d5: 24                         ; AND
07d6: 0c                         ; RET
;
07d7: 18 9f f4 00 00             ; DICTP FLAGS.ISINLINE? (f49f)
07dc: 0e 02                      ; CLITERAL 2
07de: 24                         ; AND
07df: 0c                         ; RET
;
07e0: 18 83 f4 00 00             ; DICTP DICT.GetIMMEDIATE (f483)
07e5: 0b 9c 07 00 00             ; CALL DICT.GetFLAGS (079c)
07ea: 0b ce 07 00 00             ; CALL FLAGS.ISIMMEDIATE? (07ce)
07ef: 0c                         ; RET
;
07f0: 18 6a f4 00 00             ; DICTP DICT.GetINLINE (f46a)
07f5: 0b 9c 07 00 00             ; CALL DICT.GetFLAGS (079c)
07fa: 0b d7 07 00 00             ; CALL FLAGS.ISINLINE? (07d7)
07ff: 0c                         ; RET
;
0800: 18 55 f4 00 00             ; DICTP findInDict (f455)
0805: 0b eb 00 00 00             ; CALL LAST (00eb)
080a: 21                         ; DTOR
080b: 22                         ; RTOD
080c: 06                         ; DUP
080d: 21                         ; DTOR
080e: 06                         ; DUP
080f: 09 38 08 00 00             ; JMPZ 0838
0814: 0b 53 07 00 00             ; CALL DICT>NAME (0753)
0819: 2c                         ; INC
081a: 1a                         ; OVER
081b: 28                         ; COMPAREI
081c: 09 33 08 00 00             ; JMPZ 0833
0821: 05                         ; DROP
0822: 22                         ; RTOD
0823: 06                         ; DUP
0824: 21                         ; DTOR
0825: 0b 90 07 00 00             ; CALL DICT.GetXT (0790)
082a: 22                         ; RTOD
082b: 0b 9c 07 00 00             ; CALL DICT.GetFLAGS (079c)
0830: 0e 01                      ; CLITERAL 1
0832: 0c                         ; RET
0833: 08 40 08 00 00             ; JMP 0840
0838: 05                         ; DROP
0839: 05                         ; DROP
083a: 22                         ; RTOD
083b: 0e 00                      ; CLITERAL 0
083d: 0e 00                      ; CLITERAL 0
083f: 0c                         ; RET
0840: 22                         ; RTOD
0841: 02                         ; FETCH
0842: 21                         ; DTOR
0843: 08 0b 08 00 00             ; JMP 080b
0848: 0c                         ; RET
;
0849: 18 44 f4 00 00             ; DICTP isHEX? (f444)
084e: 0b 5e 00 00 00             ; CALL BASE (005e)
0853: 02                         ; FETCH
0854: 0e 10                      ; CLITERAL 16
0856: 16                         ; EQ
0857: 0c                         ; RET
;
0858: 18 2f f4 00 00             ; DICTP isNumChar? (f42f)
085d: 06                         ; DUP
085e: 0e 30                      ; CLITERAL 48
0860: 0e 39                      ; CLITERAL 57
0862: 0b 5d 06 00 00             ; CALL BETWEEN (065d)
0867: 09 72 08 00 00             ; JMPZ 0872
086c: 0e 30                      ; CLITERAL 48
086e: 12                         ; SUB
086f: 0e 01                      ; CLITERAL 1
0871: 0c                         ; RET
0872: 0b 49 08 00 00             ; CALL isHEX? (0849)
0877: 09 a6 08 00 00             ; JMPZ 08a6
087c: 06                         ; DUP
087d: 0e 41                      ; CLITERAL 65
087f: 0e 46                      ; CLITERAL 70
0881: 0b 5d 06 00 00             ; CALL BETWEEN (065d)
0886: 09 91 08 00 00             ; JMPZ 0891
088b: 0e 37                      ; CLITERAL 55
088d: 12                         ; SUB
088e: 0e 01                      ; CLITERAL 1
0890: 0c                         ; RET
0891: 06                         ; DUP
0892: 0e 61                      ; CLITERAL 97
0894: 0e 66                      ; CLITERAL 102
0896: 0b 5d 06 00 00             ; CALL BETWEEN (065d)
089b: 09 a6 08 00 00             ; JMPZ 08a6
08a0: 0e 57                      ; CLITERAL 87
08a2: 12                         ; SUB
08a3: 0e 01                      ; CLITERAL 1
08a5: 0c                         ; RET
08a6: 0e 00                      ; CLITERAL 0
08a8: 0c                         ; RET
;
08a9: 18 1e f4 00 00             ; DICTP NEGATE (f41e)
08ae: 0e 00                      ; CLITERAL 0
08b0: 04                         ; SWAP
08b1: 12                         ; SUB
08b2: 0c                         ; RET
;
08b3: 18 10 f4 00 00             ; DICTP ABS (f410)
08b8: 06                         ; DUP
08b9: 0e 00                      ; CLITERAL 0
08bb: 15                         ; LT
08bc: 09 c6 08 00 00             ; JMPZ 08c6
08c1: 0b a9 08 00 00             ; CALL NEGATE (08a9)
08c6: 0c                         ; RET
;
08c7: 18 fc f3 00 00             ; DICTP isNumber? (f3fc)
08cc: 06                         ; DUP
08cd: 0f                         ; CFETCH
08ce: 0e 2d                      ; CLITERAL 45
08d0: 16                         ; EQ
08d1: 06                         ; DUP
08d2: 0b a9 00 00 00             ; CALL #NEG (00a9)
08d7: 03                         ; STORE
08d8: 09 de 08 00 00             ; JMPZ 08de
08dd: 2c                         ; INC
08de: 0e 00                      ; CLITERAL 0
08e0: 21                         ; DTOR
08e1: 06                         ; DUP
08e2: 0f                         ; CFETCH
08e3: 06                         ; DUP
08e4: 0e 00                      ; CLITERAL 0
08e6: 16                         ; EQ
08e7: 09 02 09 00 00             ; JMPZ 0902
08ec: 05                         ; DROP
08ed: 05                         ; DROP
08ee: 22                         ; RTOD
08ef: 0b a9 00 00 00             ; CALL #NEG (00a9)
08f4: 02                         ; FETCH
08f5: 09 ff 08 00 00             ; JMPZ 08ff
08fa: 0b a9 08 00 00             ; CALL NEGATE (08a9)
08ff: 0e 01                      ; CLITERAL 1
0901: 0c                         ; RET
0902: 0b 58 08 00 00             ; CALL isNumChar? (0858)
0907: 09 1c 09 00 00             ; JMPZ 091c
090c: 22                         ; RTOD
090d: 0b 5e 00 00 00             ; CALL BASE (005e)
0912: 02                         ; FETCH
0913: 13                         ; MUL
0914: 11                         ; ADD
0915: 21                         ; DTOR
0916: 2c                         ; INC
0917: 08 21 09 00 00             ; JMP 0921
091c: 05                         ; DROP
091d: 22                         ; RTOD
091e: 0e 00                      ; CLITERAL 0
0920: 0c                         ; RET
0921: 08 e1 08 00 00             ; JMP 08e1
0926: 0c                         ; RET
;
0927: 18 ec f3 00 00             ; DICTP SPACE (f3ec)
092c: 0e 20                      ; CLITERAL 32
092e: 19                         ; EMIT
092f: 0c                         ; RET
;
0930: 18 df f3 00 00             ; DICTP <# (f3df)
0935: 0b a9 00 00 00             ; CALL #NEG (00a9)
093a: 0b 72 03 00 00             ; CALL OFF (0372)
093f: 0b b8 00 00 00             ; CALL #LEN (00b8)
0944: 0b 72 03 00 00             ; CALL OFF (0372)
0949: 06                         ; DUP
094a: 0e 00                      ; CLITERAL 0
094c: 15                         ; LT
094d: 09 61 09 00 00             ; JMPZ 0961
0952: 0b a9 08 00 00             ; CALL NEGATE (08a9)
0957: 0b a9 00 00 00             ; CALL #NEG (00a9)
095c: 0b 68 03 00 00             ; CALL ON (0368)
0961: 0e 00                      ; CLITERAL 0
0963: 04                         ; SWAP
0964: 0c                         ; RET
;
0965: 18 d3 f3 00 00             ; DICTP # (f3d3)
096a: 0b 5e 00 00 00             ; CALL BASE (005e)
096f: 02                         ; FETCH
0970: 29                         ; RESET
0971: 04                         ; SWAP
0972: 0e 30                      ; CLITERAL 48
0974: 11                         ; ADD
0975: 06                         ; DUP
0976: 0e 39                      ; CLITERAL 57
0978: 17                         ; GT
0979: 09 81 09 00 00             ; JMPZ 0981
097e: 0e 07                      ; CLITERAL 7
0980: 11                         ; ADD
0981: 0b b8 00 00 00             ; CALL #LEN (00b8)
0986: 0b 39 05 00 00             ; CALL ++ (0539)
098b: 04                         ; SWAP
098c: 0c                         ; RET
;
098d: 18 c6 f3 00 00             ; DICTP #S (f3c6)
0992: 0b 65 09 00 00             ; CALL # (0965)
0997: 06                         ; DUP
0998: 0e 00                      ; CLITERAL 0
099a: 16                         ; EQ
099b: 09 92 09 00 00             ; JMPZ 0992
09a0: 0c                         ; RET
;
09a1: 18 b9 f3 00 00             ; DICTP #> (f3b9)
09a6: 0c                         ; RET
;
09a7: 18 ab f3 00 00             ; DICTP #P- (f3ab)
09ac: 05                         ; DROP
09ad: 0b a9 00 00 00             ; CALL #NEG (00a9)
09b2: 02                         ; FETCH
09b3: 09 bb 09 00 00             ; JMPZ 09bb
09b8: 0e 2d                      ; CLITERAL 45
09ba: 19                         ; EMIT
09bb: 0c                         ; RET
;
09bc: 18 9e f3 00 00             ; DICTP #P (f39e)
09c1: 0b a7 09 00 00             ; CALL #P- (09a7)
09c6: 19                         ; EMIT
09c7: 06                         ; DUP
09c8: 0e 00                      ; CLITERAL 0
09ca: 16                         ; EQ
09cb: 09 c6 09 00 00             ; JMPZ 09c6
09d0: 05                         ; DROP
09d1: 0c                         ; RET
;
09d2: 18 90 f3 00 00             ; DICTP (.) (f390)
09d7: 0b 30 09 00 00             ; CALL <# (0930)
09dc: 0b 8d 09 00 00             ; CALL #S (098d)
09e1: 0b a1 09 00 00             ; CALL #> (09a1)
09e6: 0b bc 09 00 00             ; CALL #P (09bc)
09eb: 0c                         ; RET
;
09ec: 18 84 f3 00 00             ; DICTP . (f384)
09f1: 0b d2 09 00 00             ; CALL (.) (09d2)
09f6: 0b 27 09 00 00             ; CALL SPACE (0927)
09fb: 0c                         ; RET
;
09fc: 18 77 f3 00 00             ; DICTP .2 (f377)
0a01: 0b 30 09 00 00             ; CALL <# (0930)
0a06: 0b 65 09 00 00             ; CALL # (0965)
0a0b: 0b 65 09 00 00             ; CALL # (0965)
0a10: 0b a1 09 00 00             ; CALL #> (09a1)
0a15: 0b bc 09 00 00             ; CALL #P (09bc)
0a1a: 0c                         ; RET
;
0a1b: 18 6a f3 00 00             ; DICTP .3 (f36a)
0a20: 0b 30 09 00 00             ; CALL <# (0930)
0a25: 0b 65 09 00 00             ; CALL # (0965)
0a2a: 0b 65 09 00 00             ; CALL # (0965)
0a2f: 0b 65 09 00 00             ; CALL # (0965)
0a34: 0b a1 09 00 00             ; CALL #> (09a1)
0a39: 0b bc 09 00 00             ; CALL #P (09bc)
0a3e: 0c                         ; RET
;
0a3f: 18 5d f3 00 00             ; DICTP .4 (f35d)
0a44: 0b 30 09 00 00             ; CALL <# (0930)
0a49: 0b 65 09 00 00             ; CALL # (0965)
0a4e: 0b 65 09 00 00             ; CALL # (0965)
0a53: 0b 65 09 00 00             ; CALL # (0965)
0a58: 0b 65 09 00 00             ; CALL # (0965)
0a5d: 0b a1 09 00 00             ; CALL #> (09a1)
0a62: 0b bc 09 00 00             ; CALL #P (09bc)
0a67: 0c                         ; RET
;
0a68: 18 4e f3 00 00             ; DICTP HEX. (f34e)
0a6d: 0b 5e 00 00 00             ; CALL BASE (005e)
0a72: 02                         ; FETCH
0a73: 04                         ; SWAP
0a74: 0b 30 03 00 00             ; CALL HEX (0330)
0a79: 0b d2 09 00 00             ; CALL (.) (09d2)
0a7e: 0b 5e 00 00 00             ; CALL BASE (005e)
0a83: 03                         ; STORE
0a84: 0c                         ; RET
;
0a85: 18 3e f3 00 00             ; DICTP HEX.2 (f33e)
0a8a: 0b 5e 00 00 00             ; CALL BASE (005e)
0a8f: 02                         ; FETCH
0a90: 04                         ; SWAP
0a91: 0b 30 03 00 00             ; CALL HEX (0330)
0a96: 0b fc 09 00 00             ; CALL .2 (09fc)
0a9b: 0b 5e 00 00 00             ; CALL BASE (005e)
0aa0: 03                         ; STORE
0aa1: 0c                         ; RET
;
0aa2: 18 2e f3 00 00             ; DICTP HEX.4 (f32e)
0aa7: 0b 5e 00 00 00             ; CALL BASE (005e)
0aac: 02                         ; FETCH
0aad: 04                         ; SWAP
0aae: 0b 30 03 00 00             ; CALL HEX (0330)
0ab3: 0b 3f 0a 00 00             ; CALL .4 (0a3f)
0ab8: 0b 5e 00 00 00             ; CALL BASE (005e)
0abd: 03                         ; STORE
0abe: 0c                         ; RET
;
0abf: 18 1b f3 00 00             ; DICTP DECIMAL. (f31b)
0ac4: 0b 5e 00 00 00             ; CALL BASE (005e)
0ac9: 02                         ; FETCH
0aca: 04                         ; SWAP
0acb: 0b 3e 03 00 00             ; CALL DECIMAL (033e)
0ad0: 0b d2 09 00 00             ; CALL (.) (09d2)
0ad5: 0b 5e 00 00 00             ; CALL BASE (005e)
0ada: 03                         ; STORE
0adb: 0c                         ; RET
;
0adc: 18 07 f3 00 00             ; DICTP DECIMAL.3 (f307)
0ae1: 0b 5e 00 00 00             ; CALL BASE (005e)
0ae6: 02                         ; FETCH
0ae7: 04                         ; SWAP
0ae8: 0b 3e 03 00 00             ; CALL DECIMAL (033e)
0aed: 0b 1b 0a 00 00             ; CALL .3 (0a1b)
0af2: 0b 5e 00 00 00             ; CALL BASE (005e)
0af7: 03                         ; STORE
0af8: 0c                         ; RET
;
0af9: 18 f5 f2 00 00             ; DICTP BINARY. (f2f5)
0afe: 0b 5e 00 00 00             ; CALL BASE (005e)
0b03: 02                         ; FETCH
0b04: 04                         ; SWAP
0b05: 0b 5a 03 00 00             ; CALL BINARY (035a)
0b0a: 0b d2 09 00 00             ; CALL (.) (09d2)
0b0f: 0b 5e 00 00 00             ; CALL BASE (005e)
0b14: 03                         ; STORE
0b15: 0c                         ; RET
;
0b16: 18 e7 f2 00 00             ; DICTP MIN (f2e7)
0b1b: 1a                         ; OVER
0b1c: 1a                         ; OVER
0b1d: 17                         ; GT
0b1e: 09 24 0b 00 00             ; JMPZ 0b24
0b23: 04                         ; SWAP
0b24: 05                         ; DROP
0b25: 0c                         ; RET
;
0b26: 18 d9 f2 00 00             ; DICTP MAX (f2d9)
0b2b: 1a                         ; OVER
0b2c: 1a                         ; OVER
0b2d: 15                         ; LT
0b2e: 09 34 0b 00 00             ; JMPZ 0b34
0b33: 04                         ; SWAP
0b34: 05                         ; DROP
0b35: 0c                         ; RET
;
0b36: 18 cc f2 00 00             ; DICTP .S (f2cc)
0b3b: 0e 20                      ; CLITERAL 32
0b3d: 19                         ; EMIT
0b3e: 26                         ; DEPTH
0b3f: 0e 00                      ; CLITERAL 0
0b41: 15                         ; LT
0b42: 09 65 0b 00 00             ; JMPZ 0b65
0b47: 07 10 53 74 61 63 6b 20 75 6e 64 65 72 66 6c 6f 77 21 00 ; SLITERAL (0b48) [Stack underflow!]
0b5a: 0b a9 05 00 00             ; CALL COUNT (05a9)
0b5f: 0b b3 05 00 00             ; CALL TYPE (05b3)
0b64: fe                         ; RESET
0b65: 26                         ; DEPTH
0b66: 0e 00                      ; CLITERAL 0
0b68: 16                         ; EQ
0b69: 09 78 0b 00 00             ; JMPZ 0b78
0b6e: 0e 28                      ; CLITERAL 40
0b70: 19                         ; EMIT
0b71: 0e ed                      ; CLITERAL 237
0b73: 19                         ; EMIT
0b74: 0e 29                      ; CLITERAL 41
0b76: 19                         ; EMIT
0b77: 0c                         ; RET
0b78: 0e 28                      ; CLITERAL 40
0b7a: 19                         ; EMIT
0b7b: 0b 27 09 00 00             ; CALL SPACE (0927)
0b80: 26                         ; DEPTH
0b81: 2e                         ; DEC
0b82: 21                         ; DTOR
0b83: 22                         ; RTOD
0b84: 06                         ; DUP
0b85: 21                         ; DTOR
0b86: 25                         ; PICK
0b87: 0b ec 09 00 00             ; CALL . (09ec)
0b8c: 22                         ; RTOD
0b8d: 06                         ; DUP
0b8e: 21                         ; DTOR
0b8f: 09 9c 0b 00 00             ; JMPZ 0b9c
0b94: 22                         ; RTOD
0b95: 2e                         ; DEC
0b96: 21                         ; DTOR
0b97: 08 a2 0b 00 00             ; JMP 0ba2
0b9c: 22                         ; RTOD
0b9d: 05                         ; DROP
0b9e: 0e 29                      ; CLITERAL 41
0ba0: 19                         ; EMIT
0ba1: 0c                         ; RET
0ba2: 08 83 0b 00 00             ; JMP 0b83
0ba7: 0c                         ; RET
;
0ba8: 18 b8 f2 00 00             ; DICTP .(MEM_SZ) (f2b8)
0bad: 07 08 4d 65 6d 6f 72 79 3a 20 00 ; SLITERAL (0bae) [Memory: ]
0bb8: 0b d3 05 00 00             ; CALL CT (05d3)
0bbd: 0b 61 04 00 00             ; CALL MEM_SZ (0461)
0bc2: 06                         ; DUP
0bc3: 0b 68 0a 00 00             ; CALL HEX. (0a68)
0bc8: 07 02 20 28 00             ; SLITERAL (0bc9) [ (]
0bcd: 0b d3 05 00 00             ; CALL CT (05d3)
0bd2: 0b d2 09 00 00             ; CALL (.) (09d2)
0bd7: 07 01 29 00                ; SLITERAL (0bd8) [)]
0bdb: 0b d3 05 00 00             ; CALL CT (05d3)
0be0: 0c                         ; RET
;
0be1: 18 a6 f2 00 00             ; DICTP .(HERE) (f2a6)
0be6: 07 06 48 45 52 45 3a 20 00 ; SLITERAL (0be7) [HERE: ]
0bef: 0b d3 05 00 00             ; CALL CT (05d3)
0bf4: 0b df 00 00 00             ; CALL HERE (00df)
0bf9: 06                         ; DUP
0bfa: 0b 68 0a 00 00             ; CALL HEX. (0a68)
0bff: 07 02 20 28 00             ; SLITERAL (0c00) [ (]
0c04: 0b d3 05 00 00             ; CALL CT (05d3)
0c09: 0b d2 09 00 00             ; CALL (.) (09d2)
0c0e: 07 01 29 00                ; SLITERAL (0c0f) [)]
0c12: 0b d3 05 00 00             ; CALL CT (05d3)
0c17: 0c                         ; RET
;
0c18: 18 94 f2 00 00             ; DICTP .(LAST) (f294)
0c1d: 07 06 4c 41 53 54 3a 20 00 ; SLITERAL (0c1e) [LAST: ]
0c26: 0b d3 05 00 00             ; CALL CT (05d3)
0c2b: 0b eb 00 00 00             ; CALL LAST (00eb)
0c30: 06                         ; DUP
0c31: 0b 68 0a 00 00             ; CALL HEX. (0a68)
0c36: 07 02 20 28 00             ; SLITERAL (0c37) [ (]
0c3b: 0b d3 05 00 00             ; CALL CT (05d3)
0c40: 0b d2 09 00 00             ; CALL (.) (09d2)
0c45: 07 01 29 00                ; SLITERAL (0c46) [)]
0c49: 0b d3 05 00 00             ; CALL CT (05d3)
0c4e: 0c                         ; RET
;
0c4f: 18 7e f2 00 00             ; DICTP .WORD-SHORT (f27e)
0c54: 06                         ; DUP
0c55: 0b 53 07 00 00             ; CALL DICT>NAME (0753)
0c5a: 0b d3 05 00 00             ; CALL CT (05d3)
0c5f: 0e 20                      ; CLITERAL 32
0c61: 19                         ; EMIT
0c62: 02                         ; FETCH
0c63: 0c                         ; RET
;
0c64: 18 6e f2 00 00             ; DICTP WORDS (f26e)
0c69: 0b eb 00 00 00             ; CALL LAST (00eb)
0c6e: 06                         ; DUP
0c6f: 02                         ; FETCH
0c70: 0e 00                      ; CLITERAL 0
0c72: 16                         ; EQ
0c73: 09 80 0c 00 00             ; JMPZ 0c80
0c78: 05                         ; DROP
0c79: 0e 0d                      ; CLITERAL 13
0c7b: 19                         ; EMIT
0c7c: 0e 0a                      ; CLITERAL 10
0c7e: 19                         ; EMIT
0c7f: 0c                         ; RET
0c80: 0b 4f 0c 00 00             ; CALL .WORD-SHORT (0c4f)
0c85: 08 6e 0c 00 00             ; JMP 0c6e
0c8a: 0c                         ; RET
;
0c8b: 18 59 f2 00 00             ; DICTP .WORD-LONG (f259)
0c90: 06                         ; DUP
0c91: 0b 68 0a 00 00             ; CALL HEX. (0a68)
0c96: 0e 3a                      ; CLITERAL 58
0c98: 19                         ; EMIT
0c99: 0e 20                      ; CLITERAL 32
0c9b: 19                         ; EMIT
0c9c: 06                         ; DUP
0c9d: 0b 53 07 00 00             ; CALL DICT>NAME (0753)
0ca2: 0b d3 05 00 00             ; CALL CT (05d3)
0ca7: 0e 20                      ; CLITERAL 32
0ca9: 19                         ; EMIT
0caa: 06                         ; DUP
0cab: 0b 90 07 00 00             ; CALL DICT.GetXT (0790)
0cb0: 0e 28                      ; CLITERAL 40
0cb2: 19                         ; EMIT
0cb3: 0b a2 0a 00 00             ; CALL HEX.4 (0aa2)
0cb8: 0e 29                      ; CLITERAL 41
0cba: 19                         ; EMIT
0cbb: 06                         ; DUP
0cbc: 0b 44 07 00 00             ; CALL DICT>FLAGS (0744)
0cc1: 0f                         ; CFETCH
0cc2: 06                         ; DUP
0cc3: 07 09 2c 20 46 6c 61 67 73 3a 20 00 ; SLITERAL (0cc4) [, Flags: ]
0ccf: 0b d3 05 00 00             ; CALL CT (05d3)
0cd4: 0b 85 0a 00 00             ; CALL HEX.2 (0a85)
0cd9: 06                         ; DUP
0cda: 0b d7 07 00 00             ; CALL FLAGS.ISINLINE? (07d7)
0cdf: 09 f5 0c 00 00             ; JMPZ 0cf5
0ce4: 07 09 20 28 49 4e 4c 49 4e 45 29 00 ; SLITERAL (0ce5) [ (INLINE)]
0cf0: 0b d3 05 00 00             ; CALL CT (05d3)
0cf5: 0b ce 07 00 00             ; CALL FLAGS.ISIMMEDIATE? (07ce)
0cfa: 09 13 0d 00 00             ; JMPZ 0d13
0cff: 07 0c 20 28 49 4d 4d 45 44 49 41 54 45 29 00 ; SLITERAL (0d00) [ (IMMEDIATE)]
0d0e: 0b d3 05 00 00             ; CALL CT (05d3)
0d13: 0e 0d                      ; CLITERAL 13
0d15: 19                         ; EMIT
0d16: 0e 0a                      ; CLITERAL 10
0d18: 19                         ; EMIT
0d19: 02                         ; FETCH
0d1a: 0c                         ; RET
;
0d1b: 18 48 f2 00 00             ; DICTP WORDSV (f248)
0d20: 0b 18 0c 00 00             ; CALL .(LAST) (0c18)
0d25: 0e 0d                      ; CLITERAL 13
0d27: 19                         ; EMIT
0d28: 0e 0a                      ; CLITERAL 10
0d2a: 19                         ; EMIT
0d2b: 0b eb 00 00 00             ; CALL LAST (00eb)
0d30: 06                         ; DUP
0d31: 02                         ; FETCH
0d32: 0e 00                      ; CLITERAL 0
0d34: 16                         ; EQ
0d35: 09 42 0d 00 00             ; JMPZ 0d42
0d3a: 05                         ; DROP
0d3b: 0e 0d                      ; CLITERAL 13
0d3d: 19                         ; EMIT
0d3e: 0e 0a                      ; CLITERAL 10
0d40: 19                         ; EMIT
0d41: 0c                         ; RET
0d42: 0b 8b 0c 00 00             ; CALL .WORD-LONG (0c8b)
0d47: 08 30 0d 00 00             ; JMP 0d30
0d4c: 0c                         ; RET
;
0d4d: 18 34 f2 00 00             ; DICTP NUM-WORDS (f234)
0d52: 0e 00                      ; CLITERAL 0
0d54: 21                         ; DTOR
0d55: 0b eb 00 00 00             ; CALL LAST (00eb)
0d5a: 06                         ; DUP
0d5b: 02                         ; FETCH
0d5c: 0e 00                      ; CLITERAL 0
0d5e: 16                         ; EQ
0d5f: 09 6d 0d 00 00             ; JMPZ 0d6d
0d64: 05                         ; DROP
0d65: 22                         ; RTOD
0d66: 0e 0d                      ; CLITERAL 13
0d68: 19                         ; EMIT
0d69: 0e 0a                      ; CLITERAL 10
0d6b: 19                         ; EMIT
0d6c: 0c                         ; RET
0d6d: 22                         ; RTOD
0d6e: 2c                         ; INC
0d6f: 21                         ; DTOR
0d70: 02                         ; FETCH
0d71: 08 5a 0d 00 00             ; JMP 0d5a
0d76: 0c                         ; RET
;
0d77: 18 23 f2 00 00             ; DICTP .lastx (f223)
0d7c: 0e 0d                      ; CLITERAL 13
0d7e: 19                         ; EMIT
0d7f: 0e 0a                      ; CLITERAL 10
0d81: 19                         ; EMIT
0d82: 0b eb 00 00 00             ; CALL LAST (00eb)
0d87: 04                         ; SWAP
0d88: 04                         ; SWAP
0d89: 0b 8b 0c 00 00             ; CALL .WORD-LONG (0c8b)
0d8e: 04                         ; SWAP
0d8f: 2e                         ; DEC
0d90: 06                         ; DUP
0d91: 0a 88 0d 00 00             ; JMPNZ 0d88
0d96: 05                         ; DROP
0d97: 05                         ; DROP
0d98: 0c                         ; RET
;
0d99: 18 11 f2 00 00             ; DICTP EXECUTE (f211)
0d9e: 22                         ; RTOD
0d9f: 05                         ; DROP
0da0: 21                         ; DTOR
0da1: 0c                         ; RET
;
0da2: 18 fe f1 00 00             ; DICTP find.ret (f1fe)
0da7: 06                         ; DUP
0da8: 0f                         ; CFETCH
0da9: 0e 0c                      ; CLITERAL 12
0dab: 16                         ; EQ
0dac: 09 b2 0d 00 00             ; JMPZ 0db2
0db1: 0c                         ; RET
0db2: 2c                         ; INC
0db3: 08 a7 0d 00 00             ; JMP 0da7
0db8: 0c                         ; RET
;
0db9: 18 eb f1 00 00             ; DICTP (inline) (f1eb)
0dbe: 1a                         ; OVER
0dbf: 1a                         ; OVER
0dc0: 15                         ; LT
0dc1: 09 c7 0d 00 00             ; JMPZ 0dc7
0dc6: 04                         ; SWAP
0dc7: 06                         ; DUP
0dc8: 0f                         ; CFETCH
0dc9: 0b f7 00 00 00             ; CALL C, (00f7)
0dce: 2c                         ; INC
0dcf: 1a                         ; OVER
0dd0: 1a                         ; OVER
0dd1: 17                         ; GT
0dd2: 0a c7 0d 00 00             ; JMPNZ 0dc7
0dd7: 05                         ; DROP
0dd8: 05                         ; DROP
0dd9: 0c                         ; RET
;
0dda: 18 db f1 00 00             ; DICTP DOES> (f1db)
0ddf: 22                         ; RTOD
0de0: 06                         ; DUP
0de1: 0b a2 0d 00 00             ; CALL find.ret (0da2)
0de6: 06                         ; DUP
0de7: 21                         ; DTOR
0de8: 2c                         ; INC
0de9: 0b b9 0d 00 00             ; CALL (inline) (0db9)
0dee: 0c                         ; RET
;
0def: 18 c5 f1 00 00             ; DICTP Copy.INLINE (f1c5)
0df4: 06                         ; DUP
0df5: 0f                         ; CFETCH
0df6: 0e 18                      ; CLITERAL 24
0df8: 16                         ; EQ
0df9: 09 05 0e 00 00             ; JMPZ 0e05
0dfe: 2c                         ; INC
0dff: 0b d7 00 00 00             ; CALL CELL (00d7)
0e04: 11                         ; ADD
0e05: 06                         ; DUP
0e06: 0b a2 0d 00 00             ; CALL find.ret (0da2)
0e0b: 0b b9 0d 00 00             ; CALL (inline) (0db9)
0e10: 0c                         ; RET
;
0e11: 18 b4 f1 00 00             ; DICTP strlen (f1b4)
0e16: 0e 00                      ; CLITERAL 0
0e18: 04                         ; SWAP
0e19: 04                         ; SWAP
0e1a: 1a                         ; OVER
0e1b: 0f                         ; CFETCH
0e1c: 06                         ; DUP
0e1d: 09 28 0e 00 00             ; JMPZ 0e28
0e22: 05                         ; DROP
0e23: 2c                         ; INC
0e24: 04                         ; SWAP
0e25: 2c                         ; INC
0e26: 0e 01                      ; CLITERAL 1
0e28: 0a 19 0e 00 00             ; JMPNZ 0e19
0e2d: 04                         ; SWAP
0e2e: 05                         ; DROP
0e2f: 0c                         ; RET
;
0e30: 18 a4 f1 00 00             ; DICTP cstr, (f1a4)
0e35: 06                         ; DUP
0e36: 0f                         ; CFETCH
0e37: 1a                         ; OVER
0e38: 11                         ; ADD
0e39: 2c                         ; INC
0e3a: 2c                         ; INC
0e3b: 0b b9 0d 00 00             ; CALL (inline) (0db9)
0e40: 0c                         ; RET
;
0e41: 18 90 f1 00 00             ; DICTP [COMPILE] (f190)
0e46: 0b d7 07 00 00             ; CALL FLAGS.ISINLINE? (07d7)
0e4b: 09 5a 0e 00 00             ; JMPZ 0e5a
0e50: 0b ef 0d 00 00             ; CALL Copy.INLINE (0def)
0e55: 08 64 0e 00 00             ; JMP 0e64
0e5a: 0b ae 01 00 00             ; CALL CALL (01ae)
0e5f: 0b 11 01 00 00             ; CALL , (0111)
0e64: 0c                         ; RET
;
0e65: 18 7a f1 00 00             ; DICTP executeWord (f17a)
0e6a: 21                         ; DTOR
0e6b: 22                         ; RTOD
0e6c: 06                         ; DUP
0e6d: 21                         ; DTOR
0e6e: 0b 00 08 00 00             ; CALL findInDict (0800)
0e73: 09 af 0e 00 00             ; JMPZ 0eaf
0e78: 22                         ; RTOD
0e79: 05                         ; DROP
0e7a: 0b 7c 03 00 00             ; CALL ?COMPILING (037c)
0e7f: 09 a4 0e 00 00             ; JMPZ 0ea4
0e84: 06                         ; DUP
0e85: 0b ce 07 00 00             ; CALL FLAGS.ISIMMEDIATE? (07ce)
0e8a: 09 9a 0e 00 00             ; JMPZ 0e9a
0e8f: 05                         ; DROP
0e90: 0b 99 0d 00 00             ; CALL EXECUTE (0d99)
0e95: 08 9f 0e 00 00             ; JMP 0e9f
0e9a: 0b 41 0e 00 00             ; CALL [COMPILE] (0e41)
0e9f: 08 aa 0e 00 00             ; JMP 0eaa
0ea4: 05                         ; DROP
0ea5: 0b 99 0d 00 00             ; CALL EXECUTE (0d99)
0eaa: 08 05 0f 00 00             ; JMP 0f05
0eaf: 05                         ; DROP
0eb0: 05                         ; DROP
0eb1: 22                         ; RTOD
0eb2: 06                         ; DUP
0eb3: 21                         ; DTOR
0eb4: 0b c7 08 00 00             ; CALL isNumber? (08c7)
0eb9: 09 f7 0e 00 00             ; JMPZ 0ef7
0ebe: 0b 7c 03 00 00             ; CALL ?COMPILING (037c)
0ec3: 09 f2 0e 00 00             ; JMPZ 0ef2
0ec8: 06                         ; DUP
0ec9: 0e 00                      ; CLITERAL 0
0ecb: 0e ff                      ; CLITERAL 255
0ecd: 0b 5d 06 00 00             ; CALL BETWEEN (065d)
0ed2: 09 e8 0e 00 00             ; JMPZ 0ee8
0ed7: 0e 0e                      ; CLITERAL 14
0ed9: 0b f7 00 00 00             ; CALL C, (00f7)
0ede: 0b f7 00 00 00             ; CALL C, (00f7)
0ee3: 08 f2 0e 00 00             ; JMP 0ef2
0ee8: 0b 4a 01 00 00             ; CALL LITERAL (014a)
0eed: 0b 11 01 00 00             ; CALL , (0111)
0ef2: 08 03 0f 00 00             ; JMP 0f03
0ef7: 05                         ; DROP
0ef8: 07 02 3f 3f 00             ; SLITERAL (0ef9) [??]
0efd: 0b d3 05 00 00             ; CALL CT (05d3)
0f02: fe                         ; RESET
0f03: 22                         ; RTOD
0f04: 05                         ; DROP
0f05: 0c                         ; RET
;
0f06: 18 63 f1 00 00             ; DICTP executeInput (f163)
0f0b: 0b 8b 00 00 00             ; CALL >IN (008b)
0f10: 02                         ; FETCH
0f11: 0b d1 06 00 00             ; CALL skipWS (06d1)
0f16: 0b 8b 00 00 00             ; CALL >IN (008b)
0f1b: 03                         ; STORE
0f1c: 0b 8b 00 00 00             ; CALL >IN (008b)
0f21: 02                         ; FETCH
0f22: 0f                         ; CFETCH
0f23: 09 43 0f 00 00             ; JMPZ 0f43
0f28: 0b 8b 00 00 00             ; CALL >IN (008b)
0f2d: 02                         ; FETCH
0f2e: 0b fa 06 00 00             ; CALL getOneWord (06fa)
0f33: 0b 8b 00 00 00             ; CALL >IN (008b)
0f38: 03                         ; STORE
0f39: 0b 65 0e 00 00             ; CALL executeWord (0e65)
0f3e: 08 44 0f 00 00             ; JMP 0f44
0f43: 0c                         ; RET
0f44: 08 0b 0f 00 00             ; JMP 0f0b
0f49: 0c                         ; RET
;
0f4a: 18 55 f1 00 00             ; DICTP Pad (f155)
0f4f: 0b eb 00 00 00             ; CALL LAST (00eb)
0f54: 0e c8                      ; CLITERAL 200
0f56: 12                         ; SUB
0f57: 06                         ; DUP
0f58: 0b df 00 00 00             ; CALL HERE (00df)
0f5d: 15                         ; LT
0f5e: 09 75 0f 00 00             ; JMPZ 0f75
0f63: 07 0e 4f 75 74 20 6f 66 20 4d 65 6d 6f 72 79 21 00 ; SLITERAL (0f64) [Out of Memory!]
0f74: fe                         ; RESET
0f75: 0c                         ; RET
;
0f76: 18 3a f1 00 00             ; DICTP LoadingFromFile? (f13a)
0f7b: 0b c7 00 00 00             ; CALL INPUT-FP (00c7)
0f80: 02                         ; FETCH
0f81: 0c                         ; RET
;
0f82: 18 20 f1 00 00             ; DICTP getLineFromFile (f120)
0f87: 0e c8                      ; CLITERAL 200
0f89: 0b c7 00 00 00             ; CALL INPUT-FP (00c7)
0f8e: 02                         ; FETCH
0f8f: 1e                         ; FREADLINE
0f90: 0e 00                      ; CLITERAL 0
0f92: 16                         ; EQ
0f93: 09 a2 0f 00 00             ; JMPZ 0fa2
0f98: 0b c7 00 00 00             ; CALL INPUT-FP (00c7)
0f9d: 0b 72 03 00 00             ; CALL OFF (0372)
0fa2: 0c                         ; RET
;
0fa3: 18 0e f1 00 00             ; DICTP getLine (f10e)
0fa8: 0e 00                      ; CLITERAL 0
0faa: 0b 4a 0f 00 00             ; CALL Pad (0f4a)
0faf: 06                         ; DUP
0fb0: 2c                         ; INC
0fb1: 0b 8b 00 00 00             ; CALL >IN (008b)
0fb6: 03                         ; STORE
0fb7: 10                         ; CSTORE
0fb8: 0b 76 0f 00 00             ; CALL LoadingFromFile? (0f76)
0fbd: 09 cd 0f 00 00             ; JMPZ 0fcd
0fc2: 0b 4a 0f 00 00             ; CALL Pad (0f4a)
0fc7: 0b 82 0f 00 00             ; CALL getLineFromFile (0f82)
0fcc: 0c                         ; RET
0fcd: 0e 00                      ; CLITERAL 0
0fcf: 0b 8b 00 00 00             ; CALL >IN (008b)
0fd4: 02                         ; FETCH
0fd5: 10                         ; CSTORE
0fd6: 27                         ; GETCH
0fd7: 06                         ; DUP
0fd8: 0e 0d                      ; CLITERAL 13
0fda: 16                         ; EQ
0fdb: 09 ea 0f 00 00             ; JMPZ 0fea
0fe0: 05                         ; DROP
0fe1: 0b 4a 0f 00 00             ; CALL Pad (0f4a)
0fe6: 0e 20                      ; CLITERAL 32
0fe8: 19                         ; EMIT
0fe9: 0c                         ; RET
0fea: 06                         ; DUP
0feb: 0e 09                      ; CLITERAL 9
0fed: 16                         ; EQ
0fee: 09 f6 0f 00 00             ; JMPZ 0ff6
0ff3: 05                         ; DROP
0ff4: 0e 20                      ; CLITERAL 32
0ff6: 06                         ; DUP
0ff7: 0e 03                      ; CLITERAL 3
0ff9: 16                         ; EQ
0ffa: 09 00 10 00 00             ; JMPZ 1000
0fff: ff                         ; BYE
1000: 06                         ; DUP
1001: 0e 08                      ; CLITERAL 8
1003: 16                         ; EQ
1004: 09 3c 10 00 00             ; JMPZ 103c
1009: 0b 4a 0f 00 00             ; CALL Pad (0f4a)
100e: 0f                         ; CFETCH
100f: 0e 00                      ; CLITERAL 0
1011: 17                         ; GT
1012: 09 36 10 00 00             ; JMPZ 1036
1017: 0b 4a 0f 00 00             ; CALL Pad (0f4a)
101c: 0b 5e 05 00 00             ; CALL C-- (055e)
1021: 0b 8b 00 00 00             ; CALL >IN (008b)
1026: 0b 46 05 00 00             ; CALL -- (0546)
102b: 06                         ; DUP
102c: 19                         ; EMIT
102d: 0e 20                      ; CLITERAL 32
102f: 19                         ; EMIT
1030: 19                         ; EMIT
1031: 08 37 10 00 00             ; JMP 1037
1036: 05                         ; DROP
1037: 08 6e 10 00 00             ; JMP 106e
103c: 06                         ; DUP
103d: 0e 20                      ; CLITERAL 32
103f: 0e 7f                      ; CLITERAL 127
1041: 0b 5d 06 00 00             ; CALL BETWEEN (065d)
1046: 09 6d 10 00 00             ; JMPZ 106d
104b: 06                         ; DUP
104c: 19                         ; EMIT
104d: 0b 8b 00 00 00             ; CALL >IN (008b)
1052: 02                         ; FETCH
1053: 10                         ; CSTORE
1054: 0b 8b 00 00 00             ; CALL >IN (008b)
1059: 0b 39 05 00 00             ; CALL ++ (0539)
105e: 0b 4a 0f 00 00             ; CALL Pad (0f4a)
1063: 0b 53 05 00 00             ; CALL C++ (0553)
1068: 08 6e 10 00 00             ; JMP 106e
106d: 05                         ; DROP
106e: 08 cd 0f 00 00             ; JMP 0fcd
1073: 0c                         ; RET
;
1074: 18 fb f0 00 00             ; DICTP strcpy2c (f0fb)
1079: 06                         ; DUP
107a: 21                         ; DTOR
107b: 0e 00                      ; CLITERAL 0
107d: 1a                         ; OVER
107e: 10                         ; CSTORE
107f: 2c                         ; INC
1080: 04                         ; SWAP
1081: 06                         ; DUP
1082: 0f                         ; CFETCH
1083: 06                         ; DUP
1084: 09 9e 10 00 00             ; JMPZ 109e
1089: 0e 02                      ; CLITERAL 2
108b: 25                         ; PICK
108c: 10                         ; CSTORE
108d: 04                         ; SWAP
108e: 2c                         ; INC
108f: 04                         ; SWAP
1090: 2c                         ; INC
1091: 22                         ; RTOD
1092: 06                         ; DUP
1093: 21                         ; DTOR
1094: 0b 53 05 00 00             ; CALL C++ (0553)
1099: 08 a7 10 00 00             ; JMP 10a7
109e: 21                         ; DTOR
109f: 04                         ; SWAP
10a0: 22                         ; RTOD
10a1: 04                         ; SWAP
10a2: 10                         ; CSTORE
10a3: 05                         ; DROP
10a4: 22                         ; RTOD
10a5: 05                         ; DROP
10a6: 0c                         ; RET
10a7: 08 81 10 00 00             ; JMP 1081
10ac: 0c                         ; RET
;
10ad: 18 e5 f0 00 00             ; DICTP Define-Word (f0e5)
10b2: 0b eb 00 00 00             ; CALL LAST (00eb)
10b7: 1a                         ; OVER
10b8: 0b 11 0e 00 00             ; CALL strlen (0e11)
10bd: 0e 02                      ; CLITERAL 2
10bf: 0b d7 00 00 00             ; CALL CELL (00d7)
10c4: 13                         ; MUL
10c5: 0e 03                      ; CLITERAL 3
10c7: 11                         ; ADD
10c8: 11                         ; ADD
10c9: 12                         ; SUB
10ca: 06                         ; DUP
10cb: 21                         ; DTOR
10cc: 21                         ; DTOR
10cd: 0b eb 00 00 00             ; CALL LAST (00eb)
10d2: 22                         ; RTOD
10d3: 06                         ; DUP
10d4: 21                         ; DTOR
10d5: 03                         ; STORE
10d6: 22                         ; RTOD
10d7: 0b d7 00 00 00             ; CALL CELL (00d7)
10dc: 11                         ; ADD
10dd: 21                         ; DTOR
10de: 0b df 00 00 00             ; CALL HERE (00df)
10e3: 22                         ; RTOD
10e4: 06                         ; DUP
10e5: 21                         ; DTOR
10e6: 03                         ; STORE
10e7: 22                         ; RTOD
10e8: 0b d7 00 00 00             ; CALL CELL (00d7)
10ed: 11                         ; ADD
10ee: 21                         ; DTOR
10ef: 0e 00                      ; CLITERAL 0
10f1: 22                         ; RTOD
10f2: 06                         ; DUP
10f3: 21                         ; DTOR
10f4: 10                         ; CSTORE
10f5: 22                         ; RTOD
10f6: 2c                         ; INC
10f7: 21                         ; DTOR
10f8: 22                         ; RTOD
10f9: 0b 74 10 00 00             ; CALL strcpy2c (1074)
10fe: 22                         ; RTOD
10ff: 0b 4f 00 00 00             ; CALL (LAST) (004f)
1104: 03                         ; STORE
1105: 0c                         ; RET
;
1106: 18 cf f0 00 00             ; DICTP CREATE-NAME (f0cf)
110b: 0b 8b 00 00 00             ; CALL >IN (008b)
1110: 02                         ; FETCH
1111: 0b d1 06 00 00             ; CALL skipWS (06d1)
1116: 0b 8b 00 00 00             ; CALL >IN (008b)
111b: 03                         ; STORE
111c: 0b 8b 00 00 00             ; CALL >IN (008b)
1121: 02                         ; FETCH
1122: 0f                         ; CFETCH
1123: 09 5d 11 00 00             ; JMPZ 115d
1128: 0b 8b 00 00 00             ; CALL >IN (008b)
112d: 02                         ; FETCH
112e: 0b fa 06 00 00             ; CALL getOneWord (06fa)
1133: 0b 8b 00 00 00             ; CALL >IN (008b)
1138: 03                         ; STORE
1139: 06                         ; DUP
113a: 0f                         ; CFETCH
113b: 09 5b 11 00 00             ; JMPZ 115b
1140: 0b ad 10 00 00             ; CALL Define-Word (10ad)
1145: 0e 18                      ; CLITERAL 24
1147: 0b f7 00 00 00             ; CALL C, (00f7)
114c: 0b eb 00 00 00             ; CALL LAST (00eb)
1151: 0b 11 01 00 00             ; CALL , (0111)
1156: 08 5d 11 00 00             ; JMP 115d
115b: 05                         ; DROP
115c: fe                         ; RESET
115d: 0c                         ; RET
;
115e: 18 c3 f0 00 00             ; DICTP : (f0c3)
1163: 0b 06 11 00 00             ; CALL CREATE-NAME (1106)
1168: 0b 6d 00 00 00             ; CALL STATE (006d)
116d: 0b 68 03 00 00             ; CALL ON (0368)
1172: 0c                         ; RET
;
1173: 18 b1 f0 00 00             ; DICTP :NONAME (f0b1)
1178: 0b df 00 00 00             ; CALL HERE (00df)
117d: 0b 6d 00 00 00             ; CALL STATE (006d)
1182: 0b 68 03 00 00             ; CALL ON (0368)
1187: 0c                         ; RET
;
1188: 18 a5 f0 00 00             ; DICTP ; (f0a5)
118d: 0b bb 01 00 00             ; CALL RET (01bb)
1192: 0b 6d 00 00 00             ; CALL STATE (006d)
1197: 0b 72 03 00 00             ; CALL OFF (0372)
119c: 0c                         ; RET
;
119d: 18 90 f0 00 00             ; DICTP ForgetLast (f090)
11a2: 0b eb 00 00 00             ; CALL LAST (00eb)
11a7: 0b d7 00 00 00             ; CALL CELL (00d7)
11ac: 11                         ; ADD
11ad: 02                         ; FETCH
11ae: 0b 40 00 00 00             ; CALL (HERE) (0040)
11b3: 03                         ; STORE
11b4: 0b eb 00 00 00             ; CALL LAST (00eb)
11b9: 02                         ; FETCH
11ba: 0b 4f 00 00 00             ; CALL (LAST) (004f)
11bf: 03                         ; STORE
11c0: 0c                         ; RET
;
11c1: 18 7b f0 00 00             ; DICTP resetState (f07b)
11c6: 0b 7c 03 00 00             ; CALL ?COMPILING (037c)
11cb: 09 d5 11 00 00             ; JMPZ 11d5
11d0: 0b 9d 11 00 00             ; CALL ForgetLast (119d)
11d5: 0b 6d 00 00 00             ; CALL STATE (006d)
11da: 0b 72 03 00 00             ; CALL OFF (0372)
11df: 0b 3e 03 00 00             ; CALL DECIMAL (033e)
11e4: 0c                         ; RET
;
11e5: 18 6b f0 00 00             ; DICTP ALLOT (f06b)
11ea: 0b df 00 00 00             ; CALL HERE (00df)
11ef: 11                         ; ADD
11f0: 0b 40 00 00 00             ; CALL (HERE) (0040)
11f5: 03                         ; STORE
11f6: 0c                         ; RET
;
11f7: 18 5f f0 00 00             ; DICTP ? (f05f)
11fc: 02                         ; FETCH
11fd: 0b ec 09 00 00             ; CALL . (09ec)
1202: 0c                         ; RET
;
1203: 18 52 f0 00 00             ; DICTP C? (f052)
1208: 0f                         ; CFETCH
1209: 0b ec 09 00 00             ; CALL . (09ec)
120e: 0c                         ; RET
;
120f: 18 43 f0 00 00             ; DICTP FREE (f043)
1214: 0b eb 00 00 00             ; CALL LAST (00eb)
1219: 0b df 00 00 00             ; CALL HERE (00df)
121e: 12                         ; SUB
121f: 0c                         ; RET
;
1220: 18 33 f0 00 00             ; DICTP .FREE (f033)
1225: 0b 0f 12 00 00             ; CALL FREE (120f)
122a: 0b d2 09 00 00             ; CALL (.) (09d2)
122f: 07 0c 20 62 79 74 65 73 20 66 72 65 65 2e 00 ; SLITERAL (1230) [ bytes free.]
123e: 0b d3 05 00 00             ; CALL CT (05d3)
1243: 0c                         ; RET
;
1244: 18 20 f0 00 00             ; DICTP mainLoop (f020)
1249: 0b c1 11 00 00             ; CALL resetState (11c1)
124e: 0b 75 06 00 00             ; CALL tmp-init (0675)
1253: 0b 7c 03 00 00             ; CALL ?COMPILING (037c)
1258: 0e 00                      ; CLITERAL 0
125a: 16                         ; EQ
125b: 09 70 12 00 00             ; JMPZ 1270
1260: 07 03 20 4f 4b 00          ; SLITERAL (1261) [ OK]
1266: 0b d3 05 00 00             ; CALL CT (05d3)
126b: 0b 36 0b 00 00             ; CALL .S (0b36)
1270: 0e 0d                      ; CLITERAL 13
1272: 19                         ; EMIT
1273: 0e 0a                      ; CLITERAL 10
1275: 19                         ; EMIT
1276: 0b a3 0f 00 00             ; CALL getLine (0fa3)
127b: 2c                         ; INC
127c: 0b 8b 00 00 00             ; CALL >IN (008b)
1281: 03                         ; STORE
1282: 0b 06 0f 00 00             ; CALL executeInput (0f06)
1287: 0e 20                      ; CLITERAL 32
1289: 19                         ; EMIT
128a: 08 4e 12 00 00             ; JMP 124e
128f: 0c                         ; RET
;
1290: 18 11 f0 00 00             ; DICTP main (f011)
1295: 0b 6d 00 00 00             ; CALL STATE (006d)
129a: 02                         ; FETCH
129b: 0e 63                      ; CLITERAL 99
129d: 16                         ; EQ
129e: 09 bb 12 00 00             ; JMPZ 12bb
12a3: 0b 6d 00 00 00             ; CALL STATE (006d)
12a8: 0b 72 03 00 00             ; CALL OFF (0372)
12ad: 07 06 48 65 6c 6c 6f 2e 00 ; SLITERAL (12ae) [Hello.]
12b6: 0b d3 05 00 00             ; CALL CT (05d3)
12bb: 0b 44 12 00 00             ; CALL mainLoop (1244)
12c0: 0c                         ; RET
;
12c1: 18 fa ef 00 00             ; DICTP file-getLine (effa)
12c6: 0b 4a 0f 00 00             ; CALL Pad (0f4a)
12cb: 04                         ; SWAP
12cc: 0e c8                      ; CLITERAL 200
12ce: 04                         ; SWAP
12cf: 1e                         ; FREADLINE
12d0: 0b 4a 0f 00 00             ; CALL Pad (0f4a)
12d5: 04                         ; SWAP
12d6: 0c                         ; RET
;
12d7: 18 eb ef 00 00             ; DICTP load (efeb)
12dc: 0e 00                      ; CLITERAL 0
12de: 0e 00                      ; CLITERAL 0
12e0: 1c                         ; FOPEN
12e1: 0e 00                      ; CLITERAL 0
12e3: 16                         ; EQ
12e4: 09 03 13 00 00             ; JMPZ 1303
12e9: 07 11 43 61 6e 6e 6f 74 20 6f 70 65 6e 20 66 69 6c 65 2e 00 ; SLITERAL (12ea) [Cannot open file.]
12fd: 0b d3 05 00 00             ; CALL CT (05d3)
1302: 0c                         ; RET
1303: 0b c7 00 00 00             ; CALL INPUT-FP (00c7)
1308: 03                         ; STORE
1309: 0b c7 00 00 00             ; CALL INPUT-FP (00c7)
130e: 02                         ; FETCH
130f: 0b c1 12 00 00             ; CALL file-getLine (12c1)
1314: 09 2a 13 00 00             ; JMPZ 132a
1319: 2c                         ; INC
131a: 0b 8b 00 00 00             ; CALL >IN (008b)
131f: 03                         ; STORE
1320: 0b 06 0f 00 00             ; CALL executeInput (0f06)
1325: 08 3d 13 00 00             ; JMP 133d
132a: 05                         ; DROP
132b: 0b c7 00 00 00             ; CALL INPUT-FP (00c7)
1330: 02                         ; FETCH
1331: 20                         ; FCLOSE
1332: 0b c7 00 00 00             ; CALL INPUT-FP (00c7)
1337: 0b 72 03 00 00             ; CALL OFF (0372)
133c: 0c                         ; RET
133d: 08 09 13 00 00             ; JMP 1309
1342: 0c                         ; RET
;
1343: 18 d7 ef 00 00             ; DICTP STR.EMPTY (efd7)
1348: 0e 00                      ; CLITERAL 0
134a: 1a                         ; OVER
134b: 03                         ; STORE
134c: 0c                         ; RET
;
134d: 18 c5 ef 00 00             ; DICTP STR.LEN (efc5)
1352: 06                         ; DUP
1353: 0f                         ; CFETCH
1354: 0c                         ; RET
;
1355: 18 b2 ef 00 00             ; DICTP STR.CATC (efb2)
135a: 1a                         ; OVER
135b: 06                         ; DUP
135c: 0b 53 05 00 00             ; CALL C++ (0553)
1361: 06                         ; DUP
1362: 0f                         ; CFETCH
1363: 11                         ; ADD
1364: 0e 00                      ; CLITERAL 0
1366: 1a                         ; OVER
1367: 2c                         ; INC
1368: 10                         ; CSTORE
1369: 10                         ; CSTORE
136a: 0c                         ; RET
;
136b: 18 9b ef 00 00             ; DICTP STR.NULLTERM (ef9b)
1370: 06                         ; DUP
1371: 06                         ; DUP
1372: 0f                         ; CFETCH
1373: 11                         ; ADD
1374: 2c                         ; INC
1375: 0e 00                      ; CLITERAL 0
1377: 04                         ; SWAP
1378: 10                         ; CSTORE
1379: 0c                         ; RET
;
137a: 18 8e ef 00 00             ; DICTP I" (ef8e)
137f: 0b df 00 00 00             ; CALL HERE (00df)
1384: 0e 64                      ; CLITERAL 100
1386: 11                         ; ADD
1387: 0e 00                      ; CLITERAL 0
1389: 1a                         ; OVER
138a: 03                         ; STORE
138b: 0b 8b 00 00 00             ; CALL >IN (008b)
1390: 02                         ; FETCH
1391: 0f                         ; CFETCH
1392: 06                         ; DUP
1393: 0e 00                      ; CLITERAL 0
1395: 16                         ; EQ
1396: 09 b7 13 00 00             ; JMPZ 13b7
139b: 07 10 6d 69 73 73 69 6e 67 20 63 6c 6f 73 69 6e 67 20 00 ; SLITERAL (139c) [missing closing ]
13ae: 0b d3 05 00 00             ; CALL CT (05d3)
13b3: 0e 22                      ; CLITERAL 34
13b5: 19                         ; EMIT
13b6: fe                         ; RESET
13b7: 0b 8b 00 00 00             ; CALL >IN (008b)
13bc: 0b 39 05 00 00             ; CALL ++ (0539)
13c1: 06                         ; DUP
13c2: 0e 22                      ; CLITERAL 34
13c4: 16                         ; EQ
13c5: 09 cc 13 00 00             ; JMPZ 13cc
13ca: 05                         ; DROP
13cb: 0c                         ; RET
13cc: 0b 55 13 00 00             ; CALL STR.CATC (1355)
13d1: 08 8b 13 00 00             ; JMP 138b
13d6: 0c                         ; RET
;
13d7: 18 82 ef 00 00             ; DICTP " (ef82)
13dc: 0b 7c 03 00 00             ; CALL ?COMPILING (037c)
13e1: 0e 00                      ; CLITERAL 0
13e3: 16                         ; EQ
13e4: 09 ef 13 00 00             ; JMPZ 13ef
13e9: 0b 7a 13 00 00             ; CALL I" (137a)
13ee: 0c                         ; RET
13ef: 0b 7a 01 00 00             ; CALL SLITERAL (017a)
13f4: 0b df 00 00 00             ; CALL HERE (00df)
13f9: 0e 00                      ; CLITERAL 0
13fb: 0b f7 00 00 00             ; CALL C, (00f7)
1400: 0b 8b 00 00 00             ; CALL >IN (008b)
1405: 02                         ; FETCH
1406: 0f                         ; CFETCH
1407: 06                         ; DUP
1408: 0e 00                      ; CLITERAL 0
140a: 16                         ; EQ
140b: 09 38 14 00 00             ; JMPZ 1438
1410: 05                         ; DROP
1411: 2e                         ; DEC
1412: 0b 40 00 00 00             ; CALL (HERE) (0040)
1417: 03                         ; STORE
1418: 07 11 6d 69 73 73 69 6e 67 20 63 6c 6f 73 69 6e 67 20 27 00 ; SLITERAL (1419) [missing closing ']
142c: 0b d3 05 00 00             ; CALL CT (05d3)
1431: 0e 22                      ; CLITERAL 34
1433: 19                         ; EMIT
1434: 0e 27                      ; CLITERAL 39
1436: 19                         ; EMIT
1437: fe                         ; RESET
1438: 0b 8b 00 00 00             ; CALL >IN (008b)
143d: 0b 39 05 00 00             ; CALL ++ (0539)
1442: 06                         ; DUP
1443: 0e 22                      ; CLITERAL 34
1445: 16                         ; EQ
1446: 09 5e 14 00 00             ; JMPZ 145e
144b: 05                         ; DROP
144c: 0b df 00 00 00             ; CALL HERE (00df)
1451: 0e 00                      ; CLITERAL 0
1453: 0b f7 00 00 00             ; CALL C, (00f7)
1458: 1a                         ; OVER
1459: 12                         ; SUB
145a: 2e                         ; DEC
145b: 04                         ; SWAP
145c: 10                         ; CSTORE
145d: 0c                         ; RET
145e: 0b f7 00 00 00             ; CALL C, (00f7)
1463: 08 00 14 00 00             ; JMP 1400
1468: 0c                         ; RET
;
1469: 18 75 ef 00 00             ; DICTP ll (ef75)
146e: 07 09 6c 6f 61 64 73 2e 34 74 68 00 ; SLITERAL (146f) [loads.4th]
147a: 0b d7 12 00 00             ; CALL load (12d7)
147f: 0c                         ; RET
;
1480: 18 62 ef 00 00             ; DICTP sys-info (ef62)
1485: 0b a8 0b 00 00             ; CALL .(MEM_SZ) (0ba8)
148a: 0e 2c                      ; CLITERAL 44
148c: 19                         ; EMIT
148d: 0e 20                      ; CLITERAL 32
148f: 19                         ; EMIT
1490: 0b e1 0b 00 00             ; CALL .(HERE) (0be1)
1495: 0e 2c                      ; CLITERAL 44
1497: 19                         ; EMIT
1498: 0e 20                      ; CLITERAL 32
149a: 19                         ; EMIT
149b: 0b 18 0c 00 00             ; CALL .(LAST) (0c18)
14a0: 0e 2c                      ; CLITERAL 44
14a2: 19                         ; EMIT
14a3: 0e 20                      ; CLITERAL 32
14a5: 19                         ; EMIT
14a6: 0b 20 12 00 00             ; CALL .FREE (1220)
14ab: 0e 0d                      ; CLITERAL 13
14ad: 19                         ; EMIT
14ae: 0e 0a                      ; CLITERAL 10
14b0: 19                         ; EMIT
14b1: 0c                         ; RET
;
14b2: 18 4f ef 00 00             ; DICTP VARIABLE (ef4f)
14b7: 0b 06 11 00 00             ; CALL CREATE-NAME (1106)
14bc: 0b df 00 00 00             ; CALL HERE (00df)
14c1: 0e 02                      ; CLITERAL 2
14c3: 11                         ; ADD
14c4: 0b d7 00 00 00             ; CALL CELL (00d7)
14c9: 11                         ; ADD
14ca: 0b 4a 01 00 00             ; CALL LITERAL (014a)
14cf: 0b 11 01 00 00             ; CALL , (0111)
14d4: 0b bb 01 00 00             ; CALL RET (01bb)
14d9: 0e 00                      ; CLITERAL 0
14db: 0b 11 01 00 00             ; CALL , (0111)
14e0: 0c                         ; RET
;
14e1: 18 3d ef 00 00             ; DICTP countTo (ef3d)
14e6: 07 0c 63 6f 75 6e 74 69 6e 67 20 74 6f 20 00 ; SLITERAL (14e7) [counting to ]
14f5: 0b d3 05 00 00             ; CALL CT (05d3)
14fa: 06                         ; DUP
14fb: 0b ec 09 00 00             ; CALL . (09ec)
1500: 07 04 2e 2e 2e 20 00       ; SLITERAL (1501) [... ]
1507: 0b d3 05 00 00             ; CALL CT (05d3)
150c: 0e 01                      ; CLITERAL 1
150e: 1a                         ; OVER
150f: 1a                         ; OVER
1510: 15                         ; LT
1511: 09 19 15 00 00             ; JMPZ 1519
1516: 05                         ; DROP
1517: 05                         ; DROP
1518: 0c                         ; RET
1519: 2c                         ; INC
151a: 08 0e 15 00 00             ; JMP 150e
151f: 0c                         ; RET
;
1520: 18 26 ef 00 00             ; DICTP countTo-FAST (ef26)
1525: 07 0c 63 6f 75 6e 74 69 6e 67 20 74 6f 20 00 ; SLITERAL (1526) [counting to ]
1534: 0b d3 05 00 00             ; CALL CT (05d3)
1539: 06                         ; DUP
153a: 0b ec 09 00 00             ; CALL . (09ec)
153f: 07 04 2e 2e 2e 20 00       ; SLITERAL (1540) [... ]
1546: 0b d3 05 00 00             ; CALL CT (05d3)
154b: 2e                         ; DEC
154c: 06                         ; DUP
154d: 0a 4b 15 00 00             ; JMPNZ 154b
1552: 05                         ; DROP
1553: 0c                         ; RET
;
1554: 18 18 ef 00 00             ; DICTP mil (ef18)
1559: 01 e8 03 00 00             ; LITERAL 1000 (3e8)
155e: 06                         ; DUP
155f: 13                         ; MUL
1560: 13                         ; MUL
1561: 0c                         ; RET
;
1562: 18 0b ef 00 00             ; DICTP bb (ef0b)
1567: 0e 0d                      ; CLITERAL 13
1569: 19                         ; EMIT
156a: 0e 0a                      ; CLITERAL 10
156c: 19                         ; EMIT
156d: 0b 54 15 00 00             ; CALL mil (1554)
1572: 0b 20 15 00 00             ; CALL countTo-FAST (1520)
1577: 0c                         ; RET
;
; End of code, Dictionary:
;
ef0b: 18 ef 00 00                ; bb - (next: ef18 mil)
ef0f: 62 15 00 00 00             ; XT=1562, flags=00
ef14: 02 62 62 00                ; 2, bb
;
ef18: 26 ef 00 00                ; mil - (next: ef26 countTo-FAST)
ef1c: 54 15 00 00 00             ; XT=1554, flags=00
ef21: 03 6d 69 6c 00             ; 3, mil
;
ef26: 3d ef 00 00                ; countTo-FAST - (next: ef3d countTo)
ef2a: 20 15 00 00 00             ; XT=1520, flags=00
ef2f: 0c 63 6f 75 6e 74 54 6f 2d 46 41 53 54 00 ; 12, countTo-FAST
;
ef3d: 4f ef 00 00                ; countTo - (next: ef4f VARIABLE)
ef41: e1 14 00 00 00             ; XT=14e1, flags=00
ef46: 07 63 6f 75 6e 74 54 6f 00 ; 7, countTo
;
ef4f: 62 ef 00 00                ; VARIABLE - (next: ef62 sys-info)
ef53: b2 14 00 00 00             ; XT=14b2, flags=00
ef58: 08 56 41 52 49 41 42 4c 45 00 ; 8, VARIABLE
;
ef62: 75 ef 00 00                ; sys-info - (next: ef75 ll)
ef66: 80 14 00 00 00             ; XT=1480, flags=00
ef6b: 08 73 79 73 2d 69 6e 66 6f 00 ; 8, sys-info
;
ef75: 82 ef 00 00                ; ll - (next: ef82 ")
ef79: 69 14 00 00 00             ; XT=1469, flags=00
ef7e: 02 6c 6c 00                ; 2, ll
;
ef82: 8e ef 00 00                ; " - (next: ef8e I")
ef86: d7 13 00 00 01             ; XT=13d7, flags=01
ef8b: 01 22 00                   ; 1, "
;
ef8e: 9b ef 00 00                ; I" - (next: ef9b STR.NULLTERM)
ef92: 7a 13 00 00 00             ; XT=137a, flags=00
ef97: 02 49 22 00                ; 2, I"
;
ef9b: b2 ef 00 00                ; STR.NULLTERM - (next: efb2 STR.CATC)
ef9f: 6b 13 00 00 00             ; XT=136b, flags=00
efa4: 0c 53 54 52 2e 4e 55 4c 4c 54 45 52 4d 00 ; 12, STR.NULLTERM
;
efb2: c5 ef 00 00                ; STR.CATC - (next: efc5 STR.LEN)
efb6: 55 13 00 00 00             ; XT=1355, flags=00
efbb: 08 53 54 52 2e 43 41 54 43 00 ; 8, STR.CATC
;
efc5: d7 ef 00 00                ; STR.LEN - (next: efd7 STR.EMPTY)
efc9: 4d 13 00 00 02             ; XT=134d, flags=02
efce: 07 53 54 52 2e 4c 45 4e 00 ; 7, STR.LEN
;
efd7: eb ef 00 00                ; STR.EMPTY - (next: efeb load)
efdb: 43 13 00 00 02             ; XT=1343, flags=02
efe0: 09 53 54 52 2e 45 4d 50 54 59 00 ; 9, STR.EMPTY
;
efeb: fa ef 00 00                ; load - (next: effa file-getLine)
efef: d7 12 00 00 00             ; XT=12d7, flags=00
eff4: 04 6c 6f 61 64 00          ; 4, load
;
effa: 11 f0 00 00                ; file-getLine - (next: f011 main)
effe: c1 12 00 00 00             ; XT=12c1, flags=00
f003: 0c 66 69 6c 65 2d 67 65 74 4c 69 6e 65 00 ; 12, file-getLine
;
f011: 20 f0 00 00                ; main - (next: f020 mainLoop)
f015: 90 12 00 00 00             ; XT=1290, flags=00
f01a: 04 6d 61 69 6e 00          ; 4, main
;
f020: 33 f0 00 00                ; mainLoop - (next: f033 .FREE)
f024: 44 12 00 00 00             ; XT=1244, flags=00
f029: 08 6d 61 69 6e 4c 6f 6f 70 00 ; 8, mainLoop
;
f033: 43 f0 00 00                ; .FREE - (next: f043 FREE)
f037: 20 12 00 00 00             ; XT=1220, flags=00
f03c: 05 2e 46 52 45 45 00       ; 5, .FREE
;
f043: 52 f0 00 00                ; FREE - (next: f052 C?)
f047: 0f 12 00 00 00             ; XT=120f, flags=00
f04c: 04 46 52 45 45 00          ; 4, FREE
;
f052: 5f f0 00 00                ; C? - (next: f05f ?)
f056: 03 12 00 00 00             ; XT=1203, flags=00
f05b: 02 43 3f 00                ; 2, C?
;
f05f: 6b f0 00 00                ; ? - (next: f06b ALLOT)
f063: f7 11 00 00 00             ; XT=11f7, flags=00
f068: 01 3f 00                   ; 1, ?
;
f06b: 7b f0 00 00                ; ALLOT - (next: f07b resetState)
f06f: e5 11 00 00 00             ; XT=11e5, flags=00
f074: 05 41 4c 4c 4f 54 00       ; 5, ALLOT
;
f07b: 90 f0 00 00                ; resetState - (next: f090 ForgetLast)
f07f: c1 11 00 00 00             ; XT=11c1, flags=00
f084: 0a 72 65 73 65 74 53 74 61 74 65 00 ; 10, resetState
;
f090: a5 f0 00 00                ; ForgetLast - (next: f0a5 ;)
f094: 9d 11 00 00 00             ; XT=119d, flags=00
f099: 0a 46 6f 72 67 65 74 4c 61 73 74 00 ; 10, ForgetLast
;
f0a5: b1 f0 00 00                ; ; - (next: f0b1 :NONAME)
f0a9: 88 11 00 00 01             ; XT=1188, flags=01
f0ae: 01 3b 00                   ; 1, ;
;
f0b1: c3 f0 00 00                ; :NONAME - (next: f0c3 :)
f0b5: 73 11 00 00 00             ; XT=1173, flags=00
f0ba: 07 3a 4e 4f 4e 41 4d 45 00 ; 7, :NONAME
;
f0c3: cf f0 00 00                ; : - (next: f0cf CREATE-NAME)
f0c7: 5e 11 00 00 00             ; XT=115e, flags=00
f0cc: 01 3a 00                   ; 1, :
;
f0cf: e5 f0 00 00                ; CREATE-NAME - (next: f0e5 Define-Word)
f0d3: 06 11 00 00 00             ; XT=1106, flags=00
f0d8: 0b 43 52 45 41 54 45 2d 4e 41 4d 45 00 ; 11, CREATE-NAME
;
f0e5: fb f0 00 00                ; Define-Word - (next: f0fb strcpy2c)
f0e9: ad 10 00 00 00             ; XT=10ad, flags=00
f0ee: 0b 44 65 66 69 6e 65 2d 57 6f 72 64 00 ; 11, Define-Word
;
f0fb: 0e f1 00 00                ; strcpy2c - (next: f10e getLine)
f0ff: 74 10 00 00 00             ; XT=1074, flags=00
f104: 08 73 74 72 63 70 79 32 63 00 ; 8, strcpy2c
;
f10e: 20 f1 00 00                ; getLine - (next: f120 getLineFromFile)
f112: a3 0f 00 00 00             ; XT=0fa3, flags=00
f117: 07 67 65 74 4c 69 6e 65 00 ; 7, getLine
;
f120: 3a f1 00 00                ; getLineFromFile - (next: f13a LoadingFromFile?)
f124: 82 0f 00 00 00             ; XT=0f82, flags=00
f129: 0f 67 65 74 4c 69 6e 65 46 72 6f 6d 46 69 6c 65 00 ; 15, getLineFromFile
;
f13a: 55 f1 00 00                ; LoadingFromFile? - (next: f155 Pad)
f13e: 76 0f 00 00 00             ; XT=0f76, flags=00
f143: 10 4c 6f 61 64 69 6e 67 46 72 6f 6d 46 69 6c 65 3f 00 ; 16, LoadingFromFile?
;
f155: 63 f1 00 00                ; Pad - (next: f163 executeInput)
f159: 4a 0f 00 00 00             ; XT=0f4a, flags=00
f15e: 03 50 61 64 00             ; 3, Pad
;
f163: 7a f1 00 00                ; executeInput - (next: f17a executeWord)
f167: 06 0f 00 00 00             ; XT=0f06, flags=00
f16c: 0c 65 78 65 63 75 74 65 49 6e 70 75 74 00 ; 12, executeInput
;
f17a: 90 f1 00 00                ; executeWord - (next: f190 [COMPILE])
f17e: 65 0e 00 00 00             ; XT=0e65, flags=00
f183: 0b 65 78 65 63 75 74 65 57 6f 72 64 00 ; 11, executeWord
;
f190: a4 f1 00 00                ; [COMPILE] - (next: f1a4 cstr,)
f194: 41 0e 00 00 00             ; XT=0e41, flags=00
f199: 09 5b 43 4f 4d 50 49 4c 45 5d 00 ; 9, [COMPILE]
;
f1a4: b4 f1 00 00                ; cstr, - (next: f1b4 strlen)
f1a8: 30 0e 00 00 00             ; XT=0e30, flags=00
f1ad: 05 63 73 74 72 2c 00       ; 5, cstr,
;
f1b4: c5 f1 00 00                ; strlen - (next: f1c5 Copy.INLINE)
f1b8: 11 0e 00 00 00             ; XT=0e11, flags=00
f1bd: 06 73 74 72 6c 65 6e 00    ; 6, strlen
;
f1c5: db f1 00 00                ; Copy.INLINE - (next: f1db DOES>)
f1c9: ef 0d 00 00 00             ; XT=0def, flags=00
f1ce: 0b 43 6f 70 79 2e 49 4e 4c 49 4e 45 00 ; 11, Copy.INLINE
;
f1db: eb f1 00 00                ; DOES> - (next: f1eb (inline))
f1df: da 0d 00 00 00             ; XT=0dda, flags=00
f1e4: 05 44 4f 45 53 3e 00       ; 5, DOES>
;
f1eb: fe f1 00 00                ; (inline) - (next: f1fe find.ret)
f1ef: b9 0d 00 00 00             ; XT=0db9, flags=00
f1f4: 08 28 69 6e 6c 69 6e 65 29 00 ; 8, (inline)
;
f1fe: 11 f2 00 00                ; find.ret - (next: f211 EXECUTE)
f202: a2 0d 00 00 00             ; XT=0da2, flags=00
f207: 08 66 69 6e 64 2e 72 65 74 00 ; 8, find.ret
;
f211: 23 f2 00 00                ; EXECUTE - (next: f223 .lastx)
f215: 99 0d 00 00 00             ; XT=0d99, flags=00
f21a: 07 45 58 45 43 55 54 45 00 ; 7, EXECUTE
;
f223: 34 f2 00 00                ; .lastx - (next: f234 NUM-WORDS)
f227: 77 0d 00 00 00             ; XT=0d77, flags=00
f22c: 06 2e 6c 61 73 74 78 00    ; 6, .lastx
;
f234: 48 f2 00 00                ; NUM-WORDS - (next: f248 WORDSV)
f238: 4d 0d 00 00 00             ; XT=0d4d, flags=00
f23d: 09 4e 55 4d 2d 57 4f 52 44 53 00 ; 9, NUM-WORDS
;
f248: 59 f2 00 00                ; WORDSV - (next: f259 .WORD-LONG)
f24c: 1b 0d 00 00 00             ; XT=0d1b, flags=00
f251: 06 57 4f 52 44 53 56 00    ; 6, WORDSV
;
f259: 6e f2 00 00                ; .WORD-LONG - (next: f26e WORDS)
f25d: 8b 0c 00 00 00             ; XT=0c8b, flags=00
f262: 0a 2e 57 4f 52 44 2d 4c 4f 4e 47 00 ; 10, .WORD-LONG
;
f26e: 7e f2 00 00                ; WORDS - (next: f27e .WORD-SHORT)
f272: 64 0c 00 00 00             ; XT=0c64, flags=00
f277: 05 57 4f 52 44 53 00       ; 5, WORDS
;
f27e: 94 f2 00 00                ; .WORD-SHORT - (next: f294 .(LAST))
f282: 4f 0c 00 00 00             ; XT=0c4f, flags=00
f287: 0b 2e 57 4f 52 44 2d 53 48 4f 52 54 00 ; 11, .WORD-SHORT
;
f294: a6 f2 00 00                ; .(LAST) - (next: f2a6 .(HERE))
f298: 18 0c 00 00 00             ; XT=0c18, flags=00
f29d: 07 2e 28 4c 41 53 54 29 00 ; 7, .(LAST)
;
f2a6: b8 f2 00 00                ; .(HERE) - (next: f2b8 .(MEM_SZ))
f2aa: e1 0b 00 00 00             ; XT=0be1, flags=00
f2af: 07 2e 28 48 45 52 45 29 00 ; 7, .(HERE)
;
f2b8: cc f2 00 00                ; .(MEM_SZ) - (next: f2cc .S)
f2bc: a8 0b 00 00 00             ; XT=0ba8, flags=00
f2c1: 09 2e 28 4d 45 4d 5f 53 5a 29 00 ; 9, .(MEM_SZ)
;
f2cc: d9 f2 00 00                ; .S - (next: f2d9 MAX)
f2d0: 36 0b 00 00 00             ; XT=0b36, flags=00
f2d5: 02 2e 53 00                ; 2, .S
;
f2d9: e7 f2 00 00                ; MAX - (next: f2e7 MIN)
f2dd: 26 0b 00 00 00             ; XT=0b26, flags=00
f2e2: 03 4d 41 58 00             ; 3, MAX
;
f2e7: f5 f2 00 00                ; MIN - (next: f2f5 BINARY.)
f2eb: 16 0b 00 00 00             ; XT=0b16, flags=00
f2f0: 03 4d 49 4e 00             ; 3, MIN
;
f2f5: 07 f3 00 00                ; BINARY. - (next: f307 DECIMAL.3)
f2f9: f9 0a 00 00 00             ; XT=0af9, flags=00
f2fe: 07 42 49 4e 41 52 59 2e 00 ; 7, BINARY.
;
f307: 1b f3 00 00                ; DECIMAL.3 - (next: f31b DECIMAL.)
f30b: dc 0a 00 00 00             ; XT=0adc, flags=00
f310: 09 44 45 43 49 4d 41 4c 2e 33 00 ; 9, DECIMAL.3
;
f31b: 2e f3 00 00                ; DECIMAL. - (next: f32e HEX.4)
f31f: bf 0a 00 00 00             ; XT=0abf, flags=00
f324: 08 44 45 43 49 4d 41 4c 2e 00 ; 8, DECIMAL.
;
f32e: 3e f3 00 00                ; HEX.4 - (next: f33e HEX.2)
f332: a2 0a 00 00 00             ; XT=0aa2, flags=00
f337: 05 48 45 58 2e 34 00       ; 5, HEX.4
;
f33e: 4e f3 00 00                ; HEX.2 - (next: f34e HEX.)
f342: 85 0a 00 00 00             ; XT=0a85, flags=00
f347: 05 48 45 58 2e 32 00       ; 5, HEX.2
;
f34e: 5d f3 00 00                ; HEX. - (next: f35d .4)
f352: 68 0a 00 00 00             ; XT=0a68, flags=00
f357: 04 48 45 58 2e 00          ; 4, HEX.
;
f35d: 6a f3 00 00                ; .4 - (next: f36a .3)
f361: 3f 0a 00 00 00             ; XT=0a3f, flags=00
f366: 02 2e 34 00                ; 2, .4
;
f36a: 77 f3 00 00                ; .3 - (next: f377 .2)
f36e: 1b 0a 00 00 00             ; XT=0a1b, flags=00
f373: 02 2e 33 00                ; 2, .3
;
f377: 84 f3 00 00                ; .2 - (next: f384 .)
f37b: fc 09 00 00 00             ; XT=09fc, flags=00
f380: 02 2e 32 00                ; 2, .2
;
f384: 90 f3 00 00                ; . - (next: f390 (.))
f388: ec 09 00 00 00             ; XT=09ec, flags=00
f38d: 01 2e 00                   ; 1, .
;
f390: 9e f3 00 00                ; (.) - (next: f39e #P)
f394: d2 09 00 00 00             ; XT=09d2, flags=00
f399: 03 28 2e 29 00             ; 3, (.)
;
f39e: ab f3 00 00                ; #P - (next: f3ab #P-)
f3a2: bc 09 00 00 00             ; XT=09bc, flags=00
f3a7: 02 23 50 00                ; 2, #P
;
f3ab: b9 f3 00 00                ; #P- - (next: f3b9 #>)
f3af: a7 09 00 00 00             ; XT=09a7, flags=00
f3b4: 03 23 50 2d 00             ; 3, #P-
;
f3b9: c6 f3 00 00                ; #> - (next: f3c6 #S)
f3bd: a1 09 00 00 00             ; XT=09a1, flags=00
f3c2: 02 23 3e 00                ; 2, #>
;
f3c6: d3 f3 00 00                ; #S - (next: f3d3 #)
f3ca: 8d 09 00 00 00             ; XT=098d, flags=00
f3cf: 02 23 53 00                ; 2, #S
;
f3d3: df f3 00 00                ; # - (next: f3df <#)
f3d7: 65 09 00 00 00             ; XT=0965, flags=00
f3dc: 01 23 00                   ; 1, #
;
f3df: ec f3 00 00                ; <# - (next: f3ec SPACE)
f3e3: 30 09 00 00 00             ; XT=0930, flags=00
f3e8: 02 3c 23 00                ; 2, <#
;
f3ec: fc f3 00 00                ; SPACE - (next: f3fc isNumber?)
f3f0: 27 09 00 00 00             ; XT=0927, flags=00
f3f5: 05 53 50 41 43 45 00       ; 5, SPACE
;
f3fc: 10 f4 00 00                ; isNumber? - (next: f410 ABS)
f400: c7 08 00 00 00             ; XT=08c7, flags=00
f405: 09 69 73 4e 75 6d 62 65 72 3f 00 ; 9, isNumber?
;
f410: 1e f4 00 00                ; ABS - (next: f41e NEGATE)
f414: b3 08 00 00 00             ; XT=08b3, flags=00
f419: 03 41 42 53 00             ; 3, ABS
;
f41e: 2f f4 00 00                ; NEGATE - (next: f42f isNumChar?)
f422: a9 08 00 00 00             ; XT=08a9, flags=00
f427: 06 4e 45 47 41 54 45 00    ; 6, NEGATE
;
f42f: 44 f4 00 00                ; isNumChar? - (next: f444 isHEX?)
f433: 58 08 00 00 00             ; XT=0858, flags=00
f438: 0a 69 73 4e 75 6d 43 68 61 72 3f 00 ; 10, isNumChar?
;
f444: 55 f4 00 00                ; isHEX? - (next: f455 findInDict)
f448: 49 08 00 00 00             ; XT=0849, flags=00
f44d: 06 69 73 48 45 58 3f 00    ; 6, isHEX?
;
f455: 6a f4 00 00                ; findInDict - (next: f46a DICT.GetINLINE)
f459: 00 08 00 00 00             ; XT=0800, flags=00
f45e: 0a 66 69 6e 64 49 6e 44 69 63 74 00 ; 10, findInDict
;
f46a: 83 f4 00 00                ; DICT.GetINLINE - (next: f483 DICT.GetIMMEDIATE)
f46e: f0 07 00 00 00             ; XT=07f0, flags=00
f473: 0e 44 49 43 54 2e 47 65 74 49 4e 4c 49 4e 45 00 ; 14, DICT.GetINLINE
;
f483: 9f f4 00 00                ; DICT.GetIMMEDIATE - (next: f49f FLAGS.ISINLINE?)
f487: e0 07 00 00 00             ; XT=07e0, flags=00
f48c: 11 44 49 43 54 2e 47 65 74 49 4d 4d 45 44 49 41 54 45 00 ; 17, DICT.GetIMMEDIATE
;
f49f: b9 f4 00 00                ; FLAGS.ISINLINE? - (next: f4b9 FLAGS.ISIMMEDIATE?)
f4a3: d7 07 00 00 00             ; XT=07d7, flags=00
f4a8: 0f 46 4c 41 47 53 2e 49 53 49 4e 4c 49 4e 45 3f 00 ; 15, FLAGS.ISINLINE?
;
f4b9: d6 f4 00 00                ; FLAGS.ISIMMEDIATE? - (next: f4d6 XT.GetDICTP)
f4bd: ce 07 00 00 00             ; XT=07ce, flags=00
f4c2: 12 46 4c 41 47 53 2e 49 53 49 4d 4d 45 44 49 41 54 45 3f 00 ; 18, FLAGS.ISIMMEDIATE?
;
f4d6: ec f4 00 00                ; XT.GetDICTP - (next: f4ec DICTP>NAME)
f4da: b5 07 00 00 00             ; XT=07b5, flags=00
f4df: 0b 58 54 2e 47 65 74 44 49 43 54 50 00 ; 11, XT.GetDICTP
;
f4ec: 01 f5 00 00                ; DICTP>NAME - (next: f501 DICT.GetFLAGS)
f4f0: a8 07 00 00 00             ; XT=07a8, flags=00
f4f5: 0a 44 49 43 54 50 3e 4e 41 4d 45 00 ; 10, DICTP>NAME
;
f501: 19 f5 00 00                ; DICT.GetFLAGS - (next: f519 DICT.GetXT)
f505: 9c 07 00 00 00             ; XT=079c, flags=00
f50a: 0d 44 49 43 54 2e 47 65 74 46 4c 41 47 53 00 ; 13, DICT.GetFLAGS
;
f519: 2e f5 00 00                ; DICT.GetXT - (next: f52e NAME>DICT)
f51d: 90 07 00 00 00             ; XT=0790, flags=00
f522: 0a 44 49 43 54 2e 47 65 74 58 54 00 ; 10, DICT.GetXT
;
f52e: 42 f5 00 00                ; NAME>DICT - (next: f542 FLAGS>DICT)
f532: 80 07 00 00 00             ; XT=0780, flags=00
f537: 09 4e 41 4d 45 3e 44 49 43 54 00 ; 9, NAME>DICT
;
f542: 57 f5 00 00                ; FLAGS>DICT - (next: f557 XT>DICT)
f546: 71 07 00 00 00             ; XT=0771, flags=00
f54b: 0a 46 4c 41 47 53 3e 44 49 43 54 00 ; 10, FLAGS>DICT
;
f557: 69 f5 00 00                ; XT>DICT - (next: f569 NEXT>DICT)
f55b: 65 07 00 00 00             ; XT=0765, flags=00
f560: 07 58 54 3e 44 49 43 54 00 ; 7, XT>DICT
;
f569: 7d f5 00 00                ; NEXT>DICT - (next: f57d DICT>NAME)
f56d: 5f 07 00 00 00             ; XT=075f, flags=00
f572: 09 4e 45 58 54 3e 44 49 43 54 00 ; 9, NEXT>DICT
;
f57d: 91 f5 00 00                ; DICT>NAME - (next: f591 DICT>FLAGS)
f581: 53 07 00 00 00             ; XT=0753, flags=00
f586: 09 44 49 43 54 3e 4e 41 4d 45 00 ; 9, DICT>NAME
;
f591: a6 f5 00 00                ; DICT>FLAGS - (next: f5a6 DICT>XT)
f595: 44 07 00 00 00             ; XT=0744, flags=00
f59a: 0a 44 49 43 54 3e 46 4c 41 47 53 00 ; 10, DICT>FLAGS
;
f5a6: b8 f5 00 00                ; DICT>XT - (next: f5b8 DICT>NEXT)
f5aa: 38 07 00 00 00             ; XT=0738, flags=00
f5af: 07 44 49 43 54 3e 58 54 00 ; 7, DICT>XT
;
f5b8: cc f5 00 00                ; DICT>NEXT - (next: f5cc getOneWord)
f5bc: 32 07 00 00 00             ; XT=0732, flags=00
f5c1: 09 44 49 43 54 3e 4e 45 58 54 00 ; 9, DICT>NEXT
;
f5cc: e1 f5 00 00                ; getOneWord - (next: f5e1 skipWS)
f5d0: fa 06 00 00 00             ; XT=06fa, flags=00
f5d5: 0a 67 65 74 4f 6e 65 57 6f 72 64 00 ; 10, getOneWord
;
f5e1: f2 f5 00 00                ; skipWS - (next: f5f2 getInput)
f5e5: d1 06 00 00 00             ; XT=06d1, flags=00
f5ea: 06 73 6b 69 70 57 53 00    ; 6, skipWS
;
f5f2: 05 f6 00 00                ; getInput - (next: f605 PAD)
f5f6: bb 06 00 00 00             ; XT=06bb, flags=00
f5fb: 08 67 65 74 49 6e 70 75 74 00 ; 8, getInput
;
f605: 13 f6 00 00                ; PAD - (next: f613 tmp-alloc)
f609: a9 06 00 00 00             ; XT=06a9, flags=00
f60e: 03 50 41 44 00             ; 3, PAD
;
f613: 27 f6 00 00                ; tmp-alloc - (next: f627 tmp-cur)
f617: 92 06 00 00 00             ; XT=0692, flags=00
f61c: 09 74 6d 70 2d 61 6c 6c 6f 63 00 ; 9, tmp-alloc
;
f627: 39 f6 00 00                ; tmp-cur - (next: f639 tmp-init)
f62b: 86 06 00 00 00             ; XT=0686, flags=00
f630: 07 74 6d 70 2d 63 75 72 00 ; 7, tmp-cur
;
f639: 4c f6 00 00                ; tmp-init - (next: f64c BETWEEN)
f63d: 75 06 00 00 00             ; XT=0675, flags=00
f642: 08 74 6d 70 2d 69 6e 69 74 00 ; 8, tmp-init
;
f64c: 5e f6 00 00                ; BETWEEN - (next: f65e CR)
f650: 5d 06 00 00 00             ; XT=065d, flags=00
f655: 07 42 45 54 57 45 45 4e 00 ; 7, BETWEEN
;
f65e: 6b f6 00 00                ; CR - (next: f66b CRLF)
f662: 51 06 00 00 02             ; XT=0651, flags=02
f667: 02 43 52 00                ; 2, CR
;
f66b: 7a f6 00 00                ; CRLF - (next: f67a BL)
f66f: 45 06 00 00 02             ; XT=0645, flags=02
f674: 04 43 52 4c 46 00          ; 4, CRLF
;
f67a: 87 f6 00 00                ; BL - (next: f687 ()
f67e: 3c 06 00 00 02             ; XT=063c, flags=02
f683: 02 42 4c 00                ; 2, BL
;
f687: 93 f6 00 00                ; ( - (next: f693 \)
f68b: f2 05 00 00 01             ; XT=05f2, flags=01
f690: 01 28 00                   ; 1, (
;
f693: 9f f6 00 00                ; \ - (next: f69f CT)
f697: e3 05 00 00 01             ; XT=05e3, flags=01
f69c: 01 5c 00                   ; 1, \
;
f69f: ac f6 00 00                ; CT - (next: f6ac TYPE)
f6a3: d3 05 00 00 00             ; XT=05d3, flags=00
f6a8: 02 43 54 00                ; 2, CT
;
f6ac: bb f6 00 00                ; TYPE - (next: f6bb COUNT)
f6b0: b3 05 00 00 00             ; XT=05b3, flags=00
f6b5: 04 54 59 50 45 00          ; 4, TYPE
;
f6bb: cb f6 00 00                ; COUNT - (next: f6cb NOT)
f6bf: a9 05 00 00 00             ; XT=05a9, flags=00
f6c4: 05 43 4f 55 4e 54 00       ; 5, COUNT
;
f6cb: d9 f6 00 00                ; NOT - (next: f6d9 FALSE)
f6cf: a0 05 00 00 02             ; XT=05a0, flags=02
f6d4: 03 4e 4f 54 00             ; 3, NOT
;
f6d9: e9 f6 00 00                ; FALSE - (next: f6e9 TRUE)
f6dd: 98 05 00 00 02             ; XT=0598, flags=02
f6e2: 05 46 41 4c 53 45 00       ; 5, FALSE
;
f6e9: f8 f6 00 00                ; TRUE - (next: f6f8 >=)
f6ed: 90 05 00 00 02             ; XT=0590, flags=02
f6f2: 04 54 52 55 45 00          ; 4, TRUE
;
f6f8: 05 f7 00 00                ; >= - (next: f705 <=)
f6fc: 86 05 00 00 02             ; XT=0586, flags=02
f701: 02 3e 3d 00                ; 2, >=
;
f705: 12 f7 00 00                ; <= - (next: f712 <>)
f709: 7c 05 00 00 02             ; XT=057c, flags=02
f70e: 02 3c 3d 00                ; 2, <=
;
f712: 1f f7 00 00                ; <> - (next: f71f 0=)
f716: 72 05 00 00 02             ; XT=0572, flags=02
f71b: 02 3c 3e 00                ; 2, <>
;
f71f: 2c f7 00 00                ; 0= - (next: f72c C--)
f723: 69 05 00 00 02             ; XT=0569, flags=02
f728: 02 30 3d 00                ; 2, 0=
;
f72c: 3a f7 00 00                ; C-- - (next: f73a C++)
f730: 5e 05 00 00 00             ; XT=055e, flags=00
f735: 03 43 2d 2d 00             ; 3, C--
;
f73a: 48 f7 00 00                ; C++ - (next: f748 --)
f73e: 53 05 00 00 00             ; XT=0553, flags=00
f743: 03 43 2b 2b 00             ; 3, C++
;
f748: 55 f7 00 00                ; -- - (next: f755 ++)
f74c: 46 05 00 00 00             ; XT=0546, flags=00
f751: 02 2d 2d 00                ; 2, --
;
f755: 62 f7 00 00                ; ++ - (next: f762 -=)
f759: 39 05 00 00 00             ; XT=0539, flags=00
f75e: 02 2b 2b 00                ; 2, ++
;
f762: 6f f7 00 00                ; -= - (next: f76f +=)
f766: 2d 05 00 00 00             ; XT=052d, flags=00
f76b: 02 2d 3d 00                ; 2, -=
;
f76f: 7c f7 00 00                ; += - (next: f77c C+!)
f773: 21 05 00 00 00             ; XT=0521, flags=00
f778: 02 2b 3d 00                ; 2, +=
;
f77c: 8a f7 00 00                ; C+! - (next: f78a +!)
f780: 15 05 00 00 00             ; XT=0515, flags=00
f785: 03 43 2b 21 00             ; 3, C+!
;
f78a: 97 f7 00 00                ; +! - (next: f797 2/)
f78e: 09 05 00 00 00             ; XT=0509, flags=00
f793: 02 2b 21 00                ; 2, +!
;
f797: a4 f7 00 00                ; 2/ - (next: f7a4 2*)
f79b: fe 04 00 00 02             ; XT=04fe, flags=02
f7a0: 02 32 2f 00                ; 2, 2/
;
f7a4: b1 f7 00 00                ; 2* - (next: f7b1 1-)
f7a8: f5 04 00 00 02             ; XT=04f5, flags=02
f7ad: 02 32 2a 00                ; 2, 2*
;
f7b1: be f7 00 00                ; 1- - (next: f7be 1+)
f7b5: ee 04 00 00 02             ; XT=04ee, flags=02
f7ba: 02 31 2d 00                ; 2, 1-
;
f7be: cb f7 00 00                ; 1+ - (next: f7cb MOD)
f7c2: e7 04 00 00 02             ; XT=04e7, flags=02
f7c7: 02 31 2b 00                ; 2, 1+
;
f7cb: d9 f7 00 00                ; MOD - (next: f7d9 /)
f7cf: df 04 00 00 02             ; XT=04df, flags=02
f7d4: 03 4d 4f 44 00             ; 3, MOD
;
f7d9: e5 f7 00 00                ; / - (next: f7e5 -ROT)
f7dd: d6 04 00 00 02             ; XT=04d6, flags=02
f7e2: 01 2f 00                   ; 1, /
;
f7e5: f4 f7 00 00                ; -ROT - (next: f7f4 ROT)
f7e9: cc 04 00 00 02             ; XT=04cc, flags=02
f7ee: 04 2d 52 4f 54 00          ; 4, -ROT
;
f7f4: 02 f8 00 00                ; ROT - (next: f802 NIP)
f7f8: c2 04 00 00 02             ; XT=04c2, flags=02
f7fd: 03 52 4f 54 00             ; 3, ROT
;
f802: 10 f8 00 00                ; NIP - (next: f810 TUCK)
f806: ba 04 00 00 02             ; XT=04ba, flags=02
f80b: 03 4e 49 50 00             ; 3, NIP
;
f810: 1f f8 00 00                ; TUCK - (next: f81f 2DROP)
f814: b2 04 00 00 02             ; XT=04b2, flags=02
f819: 04 54 55 43 4b 00          ; 4, TUCK
;
f81f: 2f f8 00 00                ; 2DROP - (next: f82f 2DUP)
f823: aa 04 00 00 02             ; XT=04aa, flags=02
f828: 05 32 44 52 4f 50 00       ; 5, 2DROP
;
f82f: 3e f8 00 00                ; 2DUP - (next: f83e RDROP)
f833: a2 04 00 00 02             ; XT=04a2, flags=02
f838: 04 32 44 55 50 00          ; 4, 2DUP
;
f83e: 4e f8 00 00                ; RDROP - (next: f84e R@)
f842: 9a 04 00 00 02             ; XT=049a, flags=02
f847: 05 52 44 52 4f 50 00       ; 5, RDROP
;
f84e: 5b f8 00 00                ; R@ - (next: f85b DEBUG-OFF)
f852: 91 04 00 00 02             ; XT=0491, flags=02
f857: 02 52 40 00                ; 2, R@
;
f85b: 6f f8 00 00                ; DEBUG-OFF - (next: f86f DEBUG-ON)
f85f: 88 04 00 00 02             ; XT=0488, flags=02
f864: 09 44 45 42 55 47 2d 4f 46 46 00 ; 9, DEBUG-OFF
;
f86f: 82 f8 00 00                ; DEBUG-ON - (next: f882 TRACE-OFF)
f873: 7f 04 00 00 02             ; XT=047f, flags=02
f878: 08 44 45 42 55 47 2d 4f 4e 00 ; 8, DEBUG-ON
;
f882: 96 f8 00 00                ; TRACE-OFF - (next: f896 TRACE-ON)
f886: 76 04 00 00 02             ; XT=0476, flags=02
f88b: 09 54 52 41 43 45 2d 4f 46 46 00 ; 9, TRACE-OFF
;
f896: a9 f8 00 00                ; TRACE-ON - (next: f8a9 MEM_SZ)
f89a: 6d 04 00 00 02             ; XT=046d, flags=02
f89f: 08 54 52 41 43 45 2d 4f 4e 00 ; 8, TRACE-ON
;
f8a9: ba f8 00 00                ; MEM_SZ - (next: f8ba LEAVE)
f8ad: 61 04 00 00 00             ; XT=0461, flags=00
f8b2: 06 4d 45 4d 5f 53 5a 00    ; 6, MEM_SZ
;
f8ba: ca f8 00 00                ; LEAVE - (next: f8ca UNTIL)
f8be: 4c 04 00 00 01             ; XT=044c, flags=01
f8c3: 05 4c 45 41 56 45 00       ; 5, LEAVE
;
f8ca: da f8 00 00                ; UNTIL - (next: f8da WHILE)
f8ce: 32 04 00 00 01             ; XT=0432, flags=01
f8d3: 05 55 4e 54 49 4c 00       ; 5, UNTIL
;
f8da: ea f8 00 00                ; WHILE - (next: f8ea AGAIN)
f8de: 18 04 00 00 01             ; XT=0418, flags=01
f8e3: 05 57 48 49 4c 45 00       ; 5, WHILE
;
f8ea: fa f8 00 00                ; AGAIN - (next: f8fa BEGIN)
f8ee: fe 03 00 00 01             ; XT=03fe, flags=01
f8f3: 05 41 47 41 49 4e 00       ; 5, AGAIN
;
f8fa: 0a f9 00 00                ; BEGIN - (next: f90a THEN)
f8fe: e9 03 00 00 01             ; XT=03e9, flags=01
f903: 05 42 45 47 49 4e 00       ; 5, BEGIN
;
f90a: 19 f9 00 00                ; THEN - (next: f919 ELSE)
f90e: d2 03 00 00 01             ; XT=03d2, flags=01
f913: 04 54 48 45 4e 00          ; 4, THEN
;
f919: 28 f9 00 00                ; ELSE - (next: f928 IF)
f91d: a9 03 00 00 01             ; XT=03a9, flags=01
f922: 04 45 4c 53 45 00          ; 4, ELSE
;
f928: 35 f9 00 00                ; IF - (next: f935 ?COMPILING)
f92c: 88 03 00 00 01             ; XT=0388, flags=01
f931: 02 49 46 00                ; 2, IF
;
f935: 4a f9 00 00                ; ?COMPILING - (next: f94a OFF)
f939: 7c 03 00 00 00             ; XT=037c, flags=00
f93e: 0a 3f 43 4f 4d 50 49 4c 49 4e 47 00 ; 10, ?COMPILING
;
f94a: 58 f9 00 00                ; OFF - (next: f958 ON)
f94e: 72 03 00 00 00             ; XT=0372, flags=00
f953: 03 4f 46 46 00             ; 3, OFF
;
f958: 65 f9 00 00                ; ON - (next: f965 BINARY)
f95c: 68 03 00 00 00             ; XT=0368, flags=00
f961: 02 4f 4e 00                ; 2, ON
;
f965: 76 f9 00 00                ; BINARY - (next: f976 OCTAL)
f969: 5a 03 00 00 00             ; XT=035a, flags=00
f96e: 06 42 49 4e 41 52 59 00    ; 6, BINARY
;
f976: 86 f9 00 00                ; OCTAL - (next: f986 DECIMAL)
f97a: 4c 03 00 00 00             ; XT=034c, flags=00
f97f: 05 4f 43 54 41 4c 00       ; 5, OCTAL
;
f986: 98 f9 00 00                ; DECIMAL - (next: f998 HEX)
f98a: 3e 03 00 00 00             ; XT=033e, flags=00
f98f: 07 44 45 43 49 4d 41 4c 00 ; 7, DECIMAL
;
f998: a6 f9 00 00                ; HEX - (next: f9a6 FLAG_INLINE)
f99c: 30 03 00 00 00             ; XT=0330, flags=00
f9a1: 03 48 45 58 00             ; 3, HEX
;
f9a6: bc f9 00 00                ; FLAG_INLINE - (next: f9bc FLAG_IMMEDIATE)
f9aa: 28 03 00 00 02             ; XT=0328, flags=02
f9af: 0b 46 4c 41 47 5f 49 4e 4c 49 4e 45 00 ; 11, FLAG_INLINE
;
f9bc: d5 f9 00 00                ; FLAG_IMMEDIATE - (next: f9d5 CELLS)
f9c0: 20 03 00 00 02             ; XT=0320, flags=02
f9c5: 0e 46 4c 41 47 5f 49 4d 4d 45 44 49 41 54 45 00 ; 14, FLAG_IMMEDIATE
;
f9d5: e5 f9 00 00                ; CELLS - (next: f9e5 IMMEDIATE)
f9d9: 14 03 00 00 02             ; XT=0314, flags=02
f9de: 05 43 45 4c 4c 53 00       ; 5, CELLS
;
f9e5: f9 f9 00 00                ; IMMEDIATE - (next: f9f9 INLINE)
f9e9: f9 02 00 00 00             ; XT=02f9, flags=00
f9ee: 09 49 4d 4d 45 44 49 41 54 45 00 ; 9, IMMEDIATE
;
f9f9: 0a fa 00 00                ; INLINE - (next: fa0a BYE)
f9fd: de 02 00 00 00             ; XT=02de, flags=00
fa02: 06 49 4e 4c 49 4e 45 00    ; 6, INLINE
;
fa0a: 18 fa 00 00                ; BYE - (next: fa18 RESET)
fa0e: d7 02 00 00 02             ; XT=02d7, flags=02
fa13: 03 42 59 45 00             ; 3, BYE
;
fa18: 28 fa 00 00                ; RESET - (next: fa28 BREAK)
fa1c: d0 02 00 00 02             ; XT=02d0, flags=02
fa21: 05 52 45 53 45 54 00       ; 5, RESET
;
fa28: 38 fa 00 00                ; BREAK - (next: fa38 GETTICK)
fa2c: c9 02 00 00 02             ; XT=02c9, flags=02
fa31: 05 42 52 45 41 4b 00       ; 5, BREAK
;
fa38: 4a fa 00 00                ; GETTICK - (next: fa4a DEC)
fa3c: c2 02 00 00 02             ; XT=02c2, flags=02
fa41: 07 47 45 54 54 49 43 4b 00 ; 7, GETTICK
;
fa4a: 58 fa 00 00                ; DEC - (next: fa58 RDEPTH)
fa4e: bb 02 00 00 02             ; XT=02bb, flags=02
fa53: 03 44 45 43 00             ; 3, DEC
;
fa58: 69 fa 00 00                ; RDEPTH - (next: fa69 INC)
fa5c: b4 02 00 00 02             ; XT=02b4, flags=02
fa61: 06 52 44 45 50 54 48 00    ; 6, RDEPTH
;
fa69: 77 fa 00 00                ; INC - (next: fa77 USPOP)
fa6d: ad 02 00 00 02             ; XT=02ad, flags=02
fa72: 03 49 4e 43 00             ; 3, INC
;
fa77: 87 fa 00 00                ; USPOP - (next: fa87 USPUSH)
fa7b: a6 02 00 00 02             ; XT=02a6, flags=02
fa80: 05 55 53 50 4f 50 00       ; 5, USPOP
;
fa87: 98 fa 00 00                ; USPUSH - (next: fa98 /MOD)
fa8b: 9f 02 00 00 02             ; XT=029f, flags=02
fa90: 06 55 53 50 55 53 48 00    ; 6, USPUSH
;
fa98: a7 fa 00 00                ; /MOD - (next: faa7 COMPAREI)
fa9c: 98 02 00 00 02             ; XT=0298, flags=02
faa1: 04 2f 4d 4f 44 00          ; 4, /MOD
;
faa7: ba fa 00 00                ; COMPAREI - (next: faba GETCH)
faab: 91 02 00 00 02             ; XT=0291, flags=02
fab0: 08 43 4f 4d 50 41 52 45 49 00 ; 8, COMPAREI
;
faba: ca fa 00 00                ; GETCH - (next: faca DEPTH)
fabe: 8a 02 00 00 02             ; XT=028a, flags=02
fac3: 05 47 45 54 43 48 00       ; 5, GETCH
;
faca: da fa 00 00                ; DEPTH - (next: fada PICK)
face: 83 02 00 00 02             ; XT=0283, flags=02
fad3: 05 44 45 50 54 48 00       ; 5, DEPTH
;
fada: e9 fa 00 00                ; PICK - (next: fae9 AND)
fade: 7c 02 00 00 02             ; XT=027c, flags=02
fae3: 04 50 49 43 4b 00          ; 4, PICK
;
fae9: f7 fa 00 00                ; AND - (next: faf7 LOGLEVEL)
faed: 75 02 00 00 02             ; XT=0275, flags=02
faf2: 03 41 4e 44 00             ; 3, AND
;
faf7: 0a fb 00 00                ; LOGLEVEL - (next: fb0a R>)
fafb: 6e 02 00 00 02             ; XT=026e, flags=02
fb00: 08 4c 4f 47 4c 45 56 45 4c 00 ; 8, LOGLEVEL
;
fb0a: 17 fb 00 00                ; R> - (next: fb17 >R)
fb0e: 67 02 00 00 02             ; XT=0267, flags=02
fb13: 02 52 3e 00                ; 2, R>
;
fb17: 24 fb 00 00                ; >R - (next: fb24 FCLOSE)
fb1b: 60 02 00 00 02             ; XT=0260, flags=02
fb20: 02 3e 52 00                ; 2, >R
;
fb24: 35 fb 00 00                ; FCLOSE - (next: fb35 FWRITE)
fb28: 59 02 00 00 02             ; XT=0259, flags=02
fb2d: 06 46 43 4c 4f 53 45 00    ; 6, FCLOSE
;
fb35: 46 fb 00 00                ; FWRITE - (next: fb46 FREADLINE)
fb39: 52 02 00 00 02             ; XT=0252, flags=02
fb3e: 06 46 57 52 49 54 45 00    ; 6, FWRITE
;
fb46: 5a fb 00 00                ; FREADLINE - (next: fb5a FREAD)
fb4a: 4b 02 00 00 02             ; XT=024b, flags=02
fb4f: 09 46 52 45 41 44 4c 49 4e 45 00 ; 9, FREADLINE
;
fb5a: 6a fb 00 00                ; FREAD - (next: fb6a FOPEN)
fb5e: 44 02 00 00 02             ; XT=0244, flags=02
fb63: 05 46 52 45 41 44 00       ; 5, FREAD
;
fb6a: 7a fb 00 00                ; FOPEN - (next: fb7a COMPARE)
fb6e: 3d 02 00 00 02             ; XT=023d, flags=02
fb73: 05 46 4f 50 45 4e 00       ; 5, FOPEN
;
fb7a: 8c fb 00 00                ; COMPARE - (next: fb8c OVER)
fb7e: 36 02 00 00 02             ; XT=0236, flags=02
fb83: 07 43 4f 4d 50 41 52 45 00 ; 7, COMPARE
;
fb8c: 9b fb 00 00                ; OVER - (next: fb9b EMIT)
fb90: 2f 02 00 00 02             ; XT=022f, flags=02
fb95: 04 4f 56 45 52 00          ; 4, OVER
;
fb9b: aa fb 00 00                ; EMIT - (next: fbaa DICTP)
fb9f: 28 02 00 00 02             ; XT=0228, flags=02
fba4: 04 45 4d 49 54 00          ; 4, EMIT
;
fbaa: ba fb 00 00                ; DICTP - (next: fbba >)
fbae: 1b 02 00 00 02             ; XT=021b, flags=02
fbb3: 05 44 49 43 54 50 00       ; 5, DICTP
;
fbba: c6 fb 00 00                ; > - (next: fbc6 =)
fbbe: 14 02 00 00 02             ; XT=0214, flags=02
fbc3: 01 3e 00                   ; 1, >
;
fbc6: d2 fb 00 00                ; = - (next: fbd2 <)
fbca: 0d 02 00 00 02             ; XT=020d, flags=02
fbcf: 01 3d 00                   ; 1, =
;
fbd2: de fb 00 00                ; < - (next: fbde /)
fbd6: 06 02 00 00 02             ; XT=0206, flags=02
fbdb: 01 3c 00                   ; 1, <
;
fbde: ea fb 00 00                ; / - (next: fbea *)
fbe2: ff 01 00 00 02             ; XT=01ff, flags=02
fbe7: 01 2f 00                   ; 1, /
;
fbea: f6 fb 00 00                ; * - (next: fbf6 -)
fbee: f8 01 00 00 02             ; XT=01f8, flags=02
fbf3: 01 2a 00                   ; 1, *
;
fbf6: 02 fc 00 00                ; - - (next: fc02 +)
fbfa: f1 01 00 00 02             ; XT=01f1, flags=02
fbff: 01 2d 00                   ; 1, -
;
fc02: 0e fc 00 00                ; + - (next: fc0e C!)
fc06: ea 01 00 00 02             ; XT=01ea, flags=02
fc0b: 01 2b 00                   ; 1, +
;
fc0e: 1b fc 00 00                ; C! - (next: fc1b C@)
fc12: e3 01 00 00 02             ; XT=01e3, flags=02
fc17: 02 43 21 00                ; 2, C!
;
fc1b: 28 fc 00 00                ; C@ - (next: fc28 CLITERAL)
fc1f: dc 01 00 00 02             ; XT=01dc, flags=02
fc24: 02 43 40 00                ; 2, C@
;
fc28: 3b fc 00 00                ; CLITERAL - (next: fc3b OR)
fc2c: cf 01 00 00 02             ; XT=01cf, flags=02
fc31: 08 43 4c 49 54 45 52 41 4c 00 ; 8, CLITERAL
;
fc3b: 48 fc 00 00                ; OR - (next: fc48 RET)
fc3f: c8 01 00 00 02             ; XT=01c8, flags=02
fc44: 02 4f 52 00                ; 2, OR
;
fc48: 56 fc 00 00                ; RET - (next: fc56 CALL)
fc4c: bb 01 00 00 00             ; XT=01bb, flags=00
fc51: 03 52 45 54 00             ; 3, RET
;
fc56: 65 fc 00 00                ; CALL - (next: fc65 JMPNZ)
fc5a: ae 01 00 00 00             ; XT=01ae, flags=00
fc5f: 04 43 41 4c 4c 00          ; 4, CALL
;
fc65: 75 fc 00 00                ; JMPNZ - (next: fc75 JMPZ)
fc69: a1 01 00 00 00             ; XT=01a1, flags=00
fc6e: 05 4a 4d 50 4e 5a 00       ; 5, JMPNZ
;
fc75: 84 fc 00 00                ; JMPZ - (next: fc84 JMP)
fc79: 94 01 00 00 00             ; XT=0194, flags=00
fc7e: 04 4a 4d 50 5a 00          ; 4, JMPZ
;
fc84: 92 fc 00 00                ; JMP - (next: fc92 SLITERAL)
fc88: 87 01 00 00 00             ; XT=0187, flags=00
fc8d: 03 4a 4d 50 00             ; 3, JMP
;
fc92: a5 fc 00 00                ; SLITERAL - (next: fca5 DUP)
fc96: 7a 01 00 00 00             ; XT=017a, flags=00
fc9b: 08 53 4c 49 54 45 52 41 4c 00 ; 8, SLITERAL
;
fca5: b3 fc 00 00                ; DUP - (next: fcb3 DROP)
fca9: 73 01 00 00 02             ; XT=0173, flags=02
fcae: 03 44 55 50 00             ; 3, DUP
;
fcb3: c2 fc 00 00                ; DROP - (next: fcc2 SWAP)
fcb7: 6c 01 00 00 02             ; XT=016c, flags=02
fcbc: 04 44 52 4f 50 00          ; 4, DROP
;
fcc2: d1 fc 00 00                ; SWAP - (next: fcd1 !)
fcc6: 65 01 00 00 02             ; XT=0165, flags=02
fccb: 04 53 57 41 50 00          ; 4, SWAP
;
fcd1: dd fc 00 00                ; ! - (next: fcdd @)
fcd5: 5e 01 00 00 02             ; XT=015e, flags=02
fcda: 01 21 00                   ; 1, !
;
fcdd: e9 fc 00 00                ; @ - (next: fce9 LITERAL)
fce1: 57 01 00 00 02             ; XT=0157, flags=02
fce6: 01 40 00                   ; 1, @
;
fce9: fb fc 00 00                ; LITERAL - (next: fcfb ])
fced: 4a 01 00 00 00             ; XT=014a, flags=00
fcf2: 07 4c 49 54 45 52 41 4c 00 ; 7, LITERAL
;
fcfb: 07 fd 00 00                ; ] - (next: fd07 [)
fcff: 3c 01 00 00 01             ; XT=013c, flags=01
fd04: 01 5d 00                   ; 1, ]
;
fd07: 13 fd 00 00                ; [ - (next: fd13 ,)
fd0b: 2e 01 00 00 01             ; XT=012e, flags=01
fd10: 01 5b 00                   ; 1, [
;
fd13: 1f fd 00 00                ; , - (next: fd1f C,)
fd17: 11 01 00 00 00             ; XT=0111, flags=00
fd1c: 01 2c 00                   ; 1, ,
;
fd1f: 2c fd 00 00                ; C, - (next: fd2c LAST)
fd23: f7 00 00 00 00             ; XT=00f7, flags=00
fd28: 02 43 2c 00                ; 2, C,
;
fd2c: 3b fd 00 00                ; LAST - (next: fd3b HERE)
fd30: eb 00 00 00 00             ; XT=00eb, flags=00
fd35: 04 4c 41 53 54 00          ; 4, LAST
;
fd3b: 4a fd 00 00                ; HERE - (next: fd4a CELL)
fd3f: df 00 00 00 00             ; XT=00df, flags=00
fd44: 04 48 45 52 45 00          ; 4, HERE
;
fd4a: 59 fd 00 00                ; CELL - (next: fd59 INPUT-FP)
fd4e: d7 00 00 00 00             ; XT=00d7, flags=00
fd53: 04 43 45 4c 4c 00          ; 4, CELL
;
fd59: 6c fd 00 00                ; INPUT-FP - (next: fd6c #LEN)
fd5d: c7 00 00 00 00             ; XT=00c7, flags=00
fd62: 08 49 4e 50 55 54 2d 46 50 00 ; 8, INPUT-FP
;
fd6c: 7b fd 00 00                ; #LEN - (next: fd7b #NEG)
fd70: b8 00 00 00 00             ; XT=00b8, flags=00
fd75: 04 23 4c 45 4e 00          ; 4, #LEN
;
fd7b: 8a fd 00 00                ; #NEG - (next: fd8a (tmp))
fd7f: a9 00 00 00 00             ; XT=00a9, flags=00
fd84: 04 23 4e 45 47 00          ; 4, #NEG
;
fd8a: 9a fd 00 00                ; (tmp) - (next: fd9a >IN)
fd8e: 9a 00 00 00 00             ; XT=009a, flags=00
fd93: 05 28 74 6d 70 29 00       ; 5, (tmp)
;
fd9a: a8 fd 00 00                ; >IN - (next: fda8 (MEM_SZ))
fd9e: 8b 00 00 00 00             ; XT=008b, flags=00
fda3: 03 3e 49 4e 00             ; 3, >IN
;
fda8: bb fd 00 00                ; (MEM_SZ) - (next: fdbb STATE)
fdac: 7c 00 00 00 00             ; XT=007c, flags=00
fdb1: 08 28 4d 45 4d 5f 53 5a 29 00 ; 8, (MEM_SZ)
;
fdbb: cb fd 00 00                ; STATE - (next: fdcb BASE)
fdbf: 6d 00 00 00 00             ; XT=006d, flags=00
fdc4: 05 53 54 41 54 45 00       ; 5, STATE
;
fdcb: da fd 00 00                ; BASE - (next: fdda (LAST))
fdcf: 5e 00 00 00 00             ; XT=005e, flags=00
fdd4: 04 42 41 53 45 00          ; 4, BASE
;
fdda: eb fd 00 00                ; (LAST) - (next: fdeb (HERE))
fdde: 4f 00 00 00 00             ; XT=004f, flags=00
fde3: 06 28 4c 41 53 54 29 00    ; 6, (LAST)
;
fdeb: fc fd 00 00                ; (HERE) - (next: fdfc <end>)
fdef: 40 00 00 00 00             ; XT=0040, flags=00
fdf4: 06 28 48 45 52 45 29 00    ; 6, (HERE)
;
fdfc: 00 00 00 00                ; End.
