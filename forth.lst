; memory-size: 65536 bytes, (10000 hex)
; data-stack: fe00, grows up
; return-stack: fffc, grows down
;
0000: 08 8a 12 00 00             ; JMP main (128a)
;
0005: 00 00 00
0008: 00000004 00000000
0010: 000014d8 0000ef3c 0000000a 00000000
0020: 00000000 00010000 00000000 00000000
0030: 00000000 00000000 00000000 00000000
;
0040: 18 eb fd 00 00             ; DICTP (HERE) (fdeb)
0045: 01 4b 00 00 00             ; LITERAL 75 (0x004b)
004a: 0c                         ; RET
004b: d8 14 00 00                ; dw 0x14d8
;
004f: 18 da fd 00 00             ; DICTP (LAST) (fdda)
0054: 01 5a 00 00 00             ; LITERAL 90 (0x005a)
0059: 0c                         ; RET
005a: 3c ef 00 00                ; dw 0xef3c
;
005e: 18 cb fd 00 00             ; DICTP BASE (fdcb)
0063: 01 69 00 00 00             ; LITERAL 105 (0x0069)
0068: 0c                         ; RET
0069: 0a 00 00 00                ; dw 0x000a
;
006d: 18 bb fd 00 00             ; DICTP STATE (fdbb)
0072: 01 78 00 00 00             ; LITERAL 120 (0x0078)
0077: 0c                         ; RET
0078: 63 00 00 00                ; dw 0x0063
;
007c: 18 a8 fd 00 00             ; DICTP (MEM_SZ) (fda8)
0081: 01 87 00 00 00             ; LITERAL 135 (0x0087)
0086: 0c                         ; RET
0087: 00 00 01 00                ; dw 0x10000
;
008b: 18 9a fd 00 00             ; DICTP >IN (fd9a)
0090: 01 96 00 00 00             ; LITERAL 150 (0x0096)
0095: 0c                         ; RET
0096: 00 00 00 00                ; dw 0x0000
;
009a: 18 8a fd 00 00             ; DICTP (tmp) (fd8a)
009f: 01 a5 00 00 00             ; LITERAL 165 (0x00a5)
00a4: 0c                         ; RET
00a5: 00 00 00 00                ; dw 0x0000
;
00a9: 18 7b fd 00 00             ; DICTP #NEG (fd7b)
00ae: 01 b4 00 00 00             ; LITERAL 180 (0x00b4)
00b3: 0c                         ; RET
00b4: 00 00 00 00                ; dw 0x0000
;
00b8: 18 6c fd 00 00             ; DICTP #LEN (fd6c)
00bd: 01 c3 00 00 00             ; LITERAL 195 (0x00c3)
00c2: 0c                         ; RET
00c3: 05 00 00 00                ; dw 0x0005
;
00c7: 18 59 fd 00 00             ; DICTP INPUT-FP (fd59)
00cc: 01 d2 00 00 00             ; LITERAL 210 (0x00d2)
00d1: 0c                         ; RET
00d2: 00 00 00 00                ; dw 0x0000
;
00d6: 18 4c fd 00 00             ; DICTP T1 (fd4c)
00db: 01 e1 00 00 00             ; LITERAL 225 (0x00e1)
00e0: 0c                         ; RET
00e1: 00 00 00 00                ; dw 0x0000
;
00e5: 18 3f fd 00 00             ; DICTP T2 (fd3f)
00ea: 01 f0 00 00 00             ; LITERAL 240 (0x00f0)
00ef: 0c                         ; RET
00f0: 00 00 00 00                ; dw 0x0000
;
00f4: 18 32 fd 00 00             ; DICTP T3 (fd32)
00f9: 01 ff 00 00 00             ; LITERAL 255 (0x00ff)
00fe: 0c                         ; RET
00ff: 00 00 00 00                ; dw 0x0000
;
0103: fc                         ; NOP
0104: 18 23 fd 00 00             ; DICTP CELL (fd23)
0109: 0e 04                      ; CLITERAL 4
010b: 0c                         ; RET
;
010c: 18 14 fd 00 00             ; DICTP HERE (fd14)
0111: 0b 40 00 00 00             ; CALL (HERE) (0040)
0116: 02                         ; FETCH
0117: 0c                         ; RET
;
0118: 18 05 fd 00 00             ; DICTP LAST (fd05)
011d: 0b 4f 00 00 00             ; CALL (LAST) (004f)
0122: 02                         ; FETCH
0123: 0c                         ; RET
;
0124: 18 f8 fc 00 00             ; DICTP C, (fcf8)
0129: 0b 0c 01 00 00             ; CALL HERE (010c)
012e: 10                         ; CSTORE
012f: 0b 0c 01 00 00             ; CALL HERE (010c)
0134: 2c                         ; INC
0135: 0b 40 00 00 00             ; CALL (HERE) (0040)
013a: 03                         ; STORE
013b: 0c                         ; RET
;
013c: 18 ec fc 00 00             ; DICTP , (fcec)
0141: 0b 0c 01 00 00             ; CALL HERE (010c)
0146: 03                         ; STORE
0147: 0b 0c 01 00 00             ; CALL HERE (010c)
014c: 0e 04                      ; CLITERAL 4
014e: 11                         ; ADD
014f: 0b 40 00 00 00             ; CALL (HERE) (0040)
0154: 03                         ; STORE
0155: 0c                         ; RET
;
0156: 18 e0 fc 00 00             ; DICTP [ (fce0)
015b: 0e 00                      ; CLITERAL 0
015d: 0b 6d 00 00 00             ; CALL STATE (006d)
0162: 03                         ; STORE
0163: 0c                         ; RET
;
0164: 18 d4 fc 00 00             ; DICTP ] (fcd4)
0169: 0e 01                      ; CLITERAL 1
016b: 0b 6d 00 00 00             ; CALL STATE (006d)
0170: 03                         ; STORE
0171: 0c                         ; RET
;
0172: 18 c2 fc 00 00             ; DICTP LITERAL (fcc2)
0177: 0e 01                      ; CLITERAL 1
0179: 0b 24 01 00 00             ; CALL C, (0124)
017e: 0c                         ; RET
;
017f: 18 b6 fc 00 00             ; DICTP @ (fcb6)
0184: 02                         ; FETCH
0185: 0c                         ; RET
;
0186: 18 aa fc 00 00             ; DICTP ! (fcaa)
018b: 03                         ; STORE
018c: 0c                         ; RET
;
018d: 18 9b fc 00 00             ; DICTP SWAP (fc9b)
0192: 04                         ; SWAP
0193: 0c                         ; RET
;
0194: 18 8c fc 00 00             ; DICTP DROP (fc8c)
0199: 05                         ; DROP
019a: 0c                         ; RET
;
019b: 18 7e fc 00 00             ; DICTP DUP (fc7e)
01a0: 06                         ; DUP
01a1: 0c                         ; RET
;
01a2: 18 6b fc 00 00             ; DICTP SLITERAL (fc6b)
01a7: 0e 07                      ; CLITERAL 7
01a9: 0b 24 01 00 00             ; CALL C, (0124)
01ae: 0c                         ; RET
;
01af: 18 5d fc 00 00             ; DICTP JMP (fc5d)
01b4: 0e 08                      ; CLITERAL 8
01b6: 0b 24 01 00 00             ; CALL C, (0124)
01bb: 0c                         ; RET
;
01bc: 18 4e fc 00 00             ; DICTP JMPZ (fc4e)
01c1: 0e 09                      ; CLITERAL 9
01c3: 0b 24 01 00 00             ; CALL C, (0124)
01c8: 0c                         ; RET
;
01c9: 18 3e fc 00 00             ; DICTP JMPNZ (fc3e)
01ce: 0e 0a                      ; CLITERAL 10
01d0: 0b 24 01 00 00             ; CALL C, (0124)
01d5: 0c                         ; RET
;
01d6: 18 2f fc 00 00             ; DICTP CALL (fc2f)
01db: 0e 0b                      ; CLITERAL 11
01dd: 0b 24 01 00 00             ; CALL C, (0124)
01e2: 0c                         ; RET
;
01e3: 18 21 fc 00 00             ; DICTP RET (fc21)
01e8: 0e 0c                      ; CLITERAL 12
01ea: 0b 24 01 00 00             ; CALL C, (0124)
01ef: 0c                         ; RET
;
01f0: 18 14 fc 00 00             ; DICTP OR (fc14)
01f5: 0d                         ; OR
01f6: 0c                         ; RET
;
01f7: 18 01 fc 00 00             ; DICTP CLITERAL (fc01)
01fc: 0e 0e                      ; CLITERAL 14
01fe: 0b 24 01 00 00             ; CALL C, (0124)
0203: 0c                         ; RET
;
0204: 18 f4 fb 00 00             ; DICTP C@ (fbf4)
0209: 0f                         ; CFETCH
020a: 0c                         ; RET
;
020b: 18 e7 fb 00 00             ; DICTP C! (fbe7)
0210: 10                         ; CSTORE
0211: 0c                         ; RET
;
0212: 18 db fb 00 00             ; DICTP + (fbdb)
0217: 11                         ; ADD
0218: 0c                         ; RET
;
0219: 18 cf fb 00 00             ; DICTP - (fbcf)
021e: 12                         ; SUB
021f: 0c                         ; RET
;
0220: 18 c3 fb 00 00             ; DICTP * (fbc3)
0225: 13                         ; MUL
0226: 0c                         ; RET
;
0227: 18 b7 fb 00 00             ; DICTP / (fbb7)
022c: 14                         ; DIV
022d: 0c                         ; RET
;
022e: 18 ab fb 00 00             ; DICTP < (fbab)
0233: 15                         ; LT
0234: 0c                         ; RET
;
0235: 18 9f fb 00 00             ; DICTP = (fb9f)
023a: 16                         ; EQ
023b: 0c                         ; RET
;
023c: 18 93 fb 00 00             ; DICTP > (fb93)
0241: 17                         ; GT
0242: 0c                         ; RET
;
0243: 18 83 fb 00 00             ; DICTP DICTP (fb83)
0248: 0e 18                      ; CLITERAL 24
024a: 0b 24 01 00 00             ; CALL C, (0124)
024f: 0c                         ; RET
;
0250: 18 74 fb 00 00             ; DICTP EMIT (fb74)
0255: 19                         ; EMIT
0256: 0c                         ; RET
;
0257: 18 65 fb 00 00             ; DICTP OVER (fb65)
025c: 1a                         ; OVER
025d: 0c                         ; RET
;
025e: 18 53 fb 00 00             ; DICTP COMPARE (fb53)
0263: 1b                         ; COMPARE
0264: 0c                         ; RET
;
0265: 18 43 fb 00 00             ; DICTP FOPEN (fb43)
026a: 1c                         ; FOPEN
026b: 0c                         ; RET
;
026c: 18 33 fb 00 00             ; DICTP FREAD (fb33)
0271: 1d                         ; FREAD
0272: 0c                         ; RET
;
0273: 18 1f fb 00 00             ; DICTP FREADLINE (fb1f)
0278: 1e                         ; FREADLINE
0279: 0c                         ; RET
;
027a: 18 0e fb 00 00             ; DICTP FWRITE (fb0e)
027f: 1f                         ; FWRITE
0280: 0c                         ; RET
;
0281: 18 fd fa 00 00             ; DICTP FCLOSE (fafd)
0286: 20                         ; FCLOSE
0287: 0c                         ; RET
;
0288: 18 f0 fa 00 00             ; DICTP >R (faf0)
028d: 21                         ; DTOR
028e: 0c                         ; RET
;
028f: 18 e3 fa 00 00             ; DICTP R> (fae3)
0294: 22                         ; RTOD
0295: 0c                         ; RET
;
0296: 18 d0 fa 00 00             ; DICTP LOGLEVEL (fad0)
029b: 23                         ; LOGLEVEL
029c: 0c                         ; RET
;
029d: 18 c2 fa 00 00             ; DICTP AND (fac2)
02a2: 24                         ; AND
02a3: 0c                         ; RET
;
02a4: 18 b3 fa 00 00             ; DICTP PICK (fab3)
02a9: 25                         ; PICK
02aa: 0c                         ; RET
;
02ab: 18 a3 fa 00 00             ; DICTP DEPTH (faa3)
02b0: 26                         ; DEPTH
02b1: 0c                         ; RET
;
02b2: 18 93 fa 00 00             ; DICTP GETCH (fa93)
02b7: 27                         ; GETCH
02b8: 0c                         ; RET
;
02b9: 18 80 fa 00 00             ; DICTP COMPAREI (fa80)
02be: 28                         ; COMPAREI
02bf: 0c                         ; RET
;
02c0: 18 71 fa 00 00             ; DICTP /MOD (fa71)
02c5: 29                         ; RESET
02c6: 0c                         ; RET
;
02c7: 18 63 fa 00 00             ; DICTP INC (fa63)
02cc: 2c                         ; INC
02cd: 0c                         ; RET
;
02ce: 18 52 fa 00 00             ; DICTP RDEPTH (fa52)
02d3: 2d                         ; RDEPTH
02d4: 0c                         ; RET
;
02d5: 18 44 fa 00 00             ; DICTP DEC (fa44)
02da: 2e                         ; DEC
02db: 0c                         ; RET
;
02dc: 18 32 fa 00 00             ; DICTP GETTICK (fa32)
02e1: 2f                         ; GETTICK
02e2: 0c                         ; RET
;
02e3: 18 24 fa 00 00             ; DICTP NOP (fa24)
02e8: fc                         ; NOP
02e9: 0c                         ; RET
;
02ea: 18 14 fa 00 00             ; DICTP BREAK (fa14)
02ef: fd                         ; BREAK
02f0: 0c                         ; RET
;
02f1: 18 04 fa 00 00             ; DICTP RESET (fa04)
02f6: fe                         ; RESET
02f7: 0c                         ; RET
;
02f8: 18 f6 f9 00 00             ; DICTP BYE (f9f6)
02fd: ff                         ; BYE
02fe: 0c                         ; RET
;
02ff: 18 e5 f9 00 00             ; DICTP INLINE (f9e5)
0304: 0b 18 01 00 00             ; CALL LAST (0118)
0309: 0e 02                      ; CLITERAL 2
030b: 0e 04                      ; CLITERAL 4
030d: 13                         ; MUL
030e: 11                         ; ADD
030f: 06                         ; DUP
0310: 0f                         ; CFETCH
0311: 0e 02                      ; CLITERAL 2
0313: 0d                         ; OR
0314: 04                         ; SWAP
0315: 10                         ; CSTORE
0316: 0c                         ; RET
;
0317: 18 d1 f9 00 00             ; DICTP IMMEDIATE (f9d1)
031c: 0b 18 01 00 00             ; CALL LAST (0118)
0321: 0e 02                      ; CLITERAL 2
0323: 0e 04                      ; CLITERAL 4
0325: 13                         ; MUL
0326: 11                         ; ADD
0327: 06                         ; DUP
0328: 0f                         ; CFETCH
0329: 0e 01                      ; CLITERAL 1
032b: 0d                         ; OR
032c: 04                         ; SWAP
032d: 10                         ; CSTORE
032e: 0c                         ; RET
;
032f: 18 c1 f9 00 00             ; DICTP CELLS (f9c1)
0334: 0e 04                      ; CLITERAL 4
0336: 13                         ; MUL
0337: 0c                         ; RET
;
0338: 18 a8 f9 00 00             ; DICTP FLAG_IMMEDIATE (f9a8)
033d: 0e 01                      ; CLITERAL 1
033f: 0c                         ; RET
;
0340: 18 92 f9 00 00             ; DICTP FLAG_INLINE (f992)
0345: 0e 02                      ; CLITERAL 2
0347: 0c                         ; RET
;
0348: 18 84 f9 00 00             ; DICTP HEX (f984)
034d: 0e 10                      ; CLITERAL 16
034f: 0b 5e 00 00 00             ; CALL BASE (005e)
0354: 03                         ; STORE
0355: 0c                         ; RET
;
0356: 18 72 f9 00 00             ; DICTP DECIMAL (f972)
035b: 0e 0a                      ; CLITERAL 10
035d: 0b 5e 00 00 00             ; CALL BASE (005e)
0362: 03                         ; STORE
0363: 0c                         ; RET
;
0364: 18 62 f9 00 00             ; DICTP OCTAL (f962)
0369: 0e 08                      ; CLITERAL 8
036b: 0b 5e 00 00 00             ; CALL BASE (005e)
0370: 03                         ; STORE
0371: 0c                         ; RET
;
0372: 18 51 f9 00 00             ; DICTP BINARY (f951)
0377: 0e 02                      ; CLITERAL 2
0379: 0b 5e 00 00 00             ; CALL BASE (005e)
037e: 03                         ; STORE
037f: 0c                         ; RET
;
0380: 18 44 f9 00 00             ; DICTP ON (f944)
0385: 0e 01                      ; CLITERAL 1
0387: 04                         ; SWAP
0388: 03                         ; STORE
0389: 0c                         ; RET
;
038a: 18 36 f9 00 00             ; DICTP OFF (f936)
038f: 0e 00                      ; CLITERAL 0
0391: 04                         ; SWAP
0392: 03                         ; STORE
0393: 0c                         ; RET
;
0394: 18 21 f9 00 00             ; DICTP ?COMPILING (f921)
0399: 0b 6d 00 00 00             ; CALL STATE (006d)
039e: 02                         ; FETCH
039f: 0c                         ; RET
;
03a0: 18 14 f9 00 00             ; DICTP IF (f914)
03a5: 0b 94 03 00 00             ; CALL ?COMPILING (0394)
03aa: 09 c0 03 00 00             ; JMPZ 03c0
03af: 0b bc 01 00 00             ; CALL JMPZ (01bc)
03b4: 0b 0c 01 00 00             ; CALL HERE (010c)
03b9: 0e 00                      ; CLITERAL 0
03bb: 0b 3c 01 00 00             ; CALL , (013c)
03c0: 0c                         ; RET
;
03c1: 18 05 f9 00 00             ; DICTP ELSE (f905)
03c6: 0b 94 03 00 00             ; CALL ?COMPILING (0394)
03cb: 09 e9 03 00 00             ; JMPZ 03e9
03d0: 0b af 01 00 00             ; CALL JMP (01af)
03d5: 0b 0c 01 00 00             ; CALL HERE (010c)
03da: 04                         ; SWAP
03db: 0e 00                      ; CLITERAL 0
03dd: 0b 3c 01 00 00             ; CALL , (013c)
03e2: 0b 0c 01 00 00             ; CALL HERE (010c)
03e7: 04                         ; SWAP
03e8: 03                         ; STORE
03e9: 0c                         ; RET
;
03ea: 18 f6 f8 00 00             ; DICTP THEN (f8f6)
03ef: 0b 94 03 00 00             ; CALL ?COMPILING (0394)
03f4: 09 00 04 00 00             ; JMPZ 0400
03f9: 0b 0c 01 00 00             ; CALL HERE (010c)
03fe: 04                         ; SWAP
03ff: 03                         ; STORE
0400: 0c                         ; RET
;
0401: 18 e6 f8 00 00             ; DICTP BEGIN (f8e6)
0406: 0b 94 03 00 00             ; CALL ?COMPILING (0394)
040b: 09 15 04 00 00             ; JMPZ 0415
0410: 0b 0c 01 00 00             ; CALL HERE (010c)
0415: 0c                         ; RET
;
0416: 18 d6 f8 00 00             ; DICTP AGAIN (f8d6)
041b: 0b 94 03 00 00             ; CALL ?COMPILING (0394)
0420: 09 2f 04 00 00             ; JMPZ 042f
0425: 0b af 01 00 00             ; CALL JMP (01af)
042a: 0b 3c 01 00 00             ; CALL , (013c)
042f: 0c                         ; RET
;
0430: 18 c6 f8 00 00             ; DICTP WHILE (f8c6)
0435: 0b 94 03 00 00             ; CALL ?COMPILING (0394)
043a: 09 49 04 00 00             ; JMPZ 0449
043f: 0b c9 01 00 00             ; CALL JMPNZ (01c9)
0444: 0b 3c 01 00 00             ; CALL , (013c)
0449: 0c                         ; RET
;
044a: 18 b6 f8 00 00             ; DICTP UNTIL (f8b6)
044f: 0b 94 03 00 00             ; CALL ?COMPILING (0394)
0454: 09 63 04 00 00             ; JMPZ 0463
0459: 0b bc 01 00 00             ; CALL JMPZ (01bc)
045e: 0b 3c 01 00 00             ; CALL , (013c)
0463: 0c                         ; RET
;
0464: 18 a6 f8 00 00             ; DICTP LEAVE (f8a6)
0469: 0b 94 03 00 00             ; CALL ?COMPILING (0394)
046e: 09 78 04 00 00             ; JMPZ 0478
0473: 0b e3 01 00 00             ; CALL RET (01e3)
0478: 0c                         ; RET
;
0479: 18 95 f8 00 00             ; DICTP MEM_SZ (f895)
047e: 0b 7c 00 00 00             ; CALL (MEM_SZ) (007c)
0483: 02                         ; FETCH
0484: 0c                         ; RET
;
0485: 18 82 f8 00 00             ; DICTP TRACE-ON (f882)
048a: 0e 02                      ; CLITERAL 2
048c: 23                         ; LOGLEVEL
048d: 0c                         ; RET
;
048e: 18 6e f8 00 00             ; DICTP TRACE-OFF (f86e)
0493: 0e 00                      ; CLITERAL 0
0495: 23                         ; LOGLEVEL
0496: 0c                         ; RET
;
0497: 18 5b f8 00 00             ; DICTP DEBUG-ON (f85b)
049c: 0e 01                      ; CLITERAL 1
049e: 23                         ; LOGLEVEL
049f: 0c                         ; RET
;
04a0: 18 47 f8 00 00             ; DICTP DEBUG-OFF (f847)
04a5: 0e 00                      ; CLITERAL 0
04a7: 23                         ; LOGLEVEL
04a8: 0c                         ; RET
;
04a9: 18 3a f8 00 00             ; DICTP R@ (f83a)
04ae: 22                         ; RTOD
04af: 06                         ; DUP
04b0: 21                         ; DTOR
04b1: 0c                         ; RET
;
04b2: 18 2a f8 00 00             ; DICTP RDROP (f82a)
04b7: 22                         ; RTOD
04b8: 05                         ; DROP
04b9: 0c                         ; RET
;
04ba: 18 1b f8 00 00             ; DICTP 2DUP (f81b)
04bf: 1a                         ; OVER
04c0: 1a                         ; OVER
04c1: 0c                         ; RET
;
04c2: 18 0b f8 00 00             ; DICTP 2DROP (f80b)
04c7: 05                         ; DROP
04c8: 05                         ; DROP
04c9: 0c                         ; RET
;
04ca: 18 fc f7 00 00             ; DICTP TUCK (f7fc)
04cf: 04                         ; SWAP
04d0: 1a                         ; OVER
04d1: 0c                         ; RET
;
04d2: 18 ee f7 00 00             ; DICTP NIP (f7ee)
04d7: 04                         ; SWAP
04d8: 05                         ; DROP
04d9: 0c                         ; RET
;
04da: 18 e0 f7 00 00             ; DICTP ROT (f7e0)
04df: 21                         ; DTOR
04e0: 04                         ; SWAP
04e1: 22                         ; RTOD
04e2: 04                         ; SWAP
04e3: 0c                         ; RET
;
04e4: 18 d1 f7 00 00             ; DICTP -ROT (f7d1)
04e9: 04                         ; SWAP
04ea: 21                         ; DTOR
04eb: 04                         ; SWAP
04ec: 22                         ; RTOD
04ed: 0c                         ; RET
;
04ee: 18 c5 f7 00 00             ; DICTP / (f7c5)
04f3: 29                         ; RESET
04f4: 04                         ; SWAP
04f5: 05                         ; DROP
04f6: 0c                         ; RET
;
04f7: 18 b7 f7 00 00             ; DICTP MOD (f7b7)
04fc: 29                         ; RESET
04fd: 05                         ; DROP
04fe: 0c                         ; RET
;
04ff: 18 aa f7 00 00             ; DICTP 1+ (f7aa)
0504: 2c                         ; INC
0505: 0c                         ; RET
;
0506: 18 9d f7 00 00             ; DICTP 1- (f79d)
050b: 2e                         ; DEC
050c: 0c                         ; RET
;
050d: 18 90 f7 00 00             ; DICTP 2* (f790)
0512: 0e 02                      ; CLITERAL 2
0514: 13                         ; MUL
0515: 0c                         ; RET
;
0516: 18 83 f7 00 00             ; DICTP 2/ (f783)
051b: 0e 02                      ; CLITERAL 2
051d: 29                         ; RESET
051e: 04                         ; SWAP
051f: 05                         ; DROP
0520: 0c                         ; RET
;
0521: 18 76 f7 00 00             ; DICTP += (f776)
0526: 1a                         ; OVER
0527: 02                         ; FETCH
0528: 11                         ; ADD
0529: 04                         ; SWAP
052a: 03                         ; STORE
052b: 0c                         ; RET
;
052c: 18 69 f7 00 00             ; DICTP -= (f769)
0531: 1a                         ; OVER
0532: 02                         ; FETCH
0533: 04                         ; SWAP
0534: 12                         ; SUB
0535: 04                         ; SWAP
0536: 03                         ; STORE
0537: 0c                         ; RET
;
0538: 18 5c f7 00 00             ; DICTP +! (f75c)
053d: 04                         ; SWAP
053e: 0b 21 05 00 00             ; CALL += (0521)
0543: 0c                         ; RET
;
0544: 18 4f f7 00 00             ; DICTP -! (f74f)
0549: 04                         ; SWAP
054a: 0b 2c 05 00 00             ; CALL -= (052c)
054f: 0c                         ; RET
;
0550: 18 42 f7 00 00             ; DICTP ++ (f742)
0555: 0e 01                      ; CLITERAL 1
0557: 0b 21 05 00 00             ; CALL += (0521)
055c: 0c                         ; RET
;
055d: 18 35 f7 00 00             ; DICTP -- (f735)
0562: 0e 01                      ; CLITERAL 1
0564: 0b 2c 05 00 00             ; CALL -= (052c)
0569: 0c                         ; RET
;
056a: 18 27 f7 00 00             ; DICTP C++ (f727)
056f: 06                         ; DUP
0570: 0f                         ; CFETCH
0571: 2c                         ; INC
0572: 04                         ; SWAP
0573: 10                         ; CSTORE
0574: 0c                         ; RET
;
0575: 18 19 f7 00 00             ; DICTP C-- (f719)
057a: 06                         ; DUP
057b: 0f                         ; CFETCH
057c: 2e                         ; DEC
057d: 04                         ; SWAP
057e: 10                         ; CSTORE
057f: 0c                         ; RET
;
0580: 18 0c f7 00 00             ; DICTP 0= (f70c)
0585: 0e 00                      ; CLITERAL 0
0587: 16                         ; EQ
0588: 0c                         ; RET
;
0589: 18 ff f6 00 00             ; DICTP <> (f6ff)
058e: 16                         ; EQ
058f: 0e 00                      ; CLITERAL 0
0591: 16                         ; EQ
0592: 0c                         ; RET
;
0593: 18 f2 f6 00 00             ; DICTP <= (f6f2)
0598: 17                         ; GT
0599: 0e 00                      ; CLITERAL 0
059b: 16                         ; EQ
059c: 0c                         ; RET
;
059d: 18 e5 f6 00 00             ; DICTP >= (f6e5)
05a2: 15                         ; LT
05a3: 0e 00                      ; CLITERAL 0
05a5: 16                         ; EQ
05a6: 0c                         ; RET
;
05a7: 18 d6 f6 00 00             ; DICTP TRUE (f6d6)
05ac: 01 ff ff ff ff             ; LITERAL -1 (ffffffff)
05b1: 0c                         ; RET
;
05b2: 18 c6 f6 00 00             ; DICTP FALSE (f6c6)
05b7: 0e 00                      ; CLITERAL 0
05b9: 0c                         ; RET
;
05ba: 18 b8 f6 00 00             ; DICTP NOT (f6b8)
05bf: 0e 00                      ; CLITERAL 0
05c1: 16                         ; EQ
05c2: 0c                         ; RET
;
05c3: 18 a8 f6 00 00             ; DICTP COUNT (f6a8)
05c8: 06                         ; DUP
05c9: 2c                         ; INC
05ca: 04                         ; SWAP
05cb: 0f                         ; CFETCH
05cc: 0c                         ; RET
;
05cd: 18 99 f6 00 00             ; DICTP TYPE (f699)
05d2: 06                         ; DUP
05d3: 0e 00                      ; CLITERAL 0
05d5: 16                         ; EQ
05d6: 09 de 05 00 00             ; JMPZ 05de
05db: 05                         ; DROP
05dc: 05                         ; DROP
05dd: 0c                         ; RET
05de: 04                         ; SWAP
05df: 06                         ; DUP
05e0: 0f                         ; CFETCH
05e1: 19                         ; EMIT
05e2: 2c                         ; INC
05e3: 04                         ; SWAP
05e4: 2e                         ; DEC
05e5: 08 d2 05 00 00             ; JMP 05d2
05ea: 0c                         ; RET
;
05eb: 18 8c f6 00 00             ; DICTP CT (f68c)
05f0: 0b c3 05 00 00             ; CALL COUNT (05c3)
05f5: 0b cd 05 00 00             ; CALL TYPE (05cd)
05fa: 0c                         ; RET
;
05fb: 18 80 f6 00 00             ; DICTP \ (f680)
0600: 0e 00                      ; CLITERAL 0
0602: 0b 8b 00 00 00             ; CALL >IN (008b)
0607: 02                         ; FETCH
0608: 10                         ; CSTORE
0609: 0c                         ; RET
;
060a: 18 74 f6 00 00             ; DICTP ( (f674)
060f: 0b 8b 00 00 00             ; CALL >IN (008b)
0614: 02                         ; FETCH
0615: 0f                         ; CFETCH
0616: 06                         ; DUP
0617: 0e 00                      ; CLITERAL 0
0619: 16                         ; EQ
061a: 09 3b 06 00 00             ; JMPZ 063b
061f: 07 13 6d 69 73 73 69 6e 67 20 63 6c 6f 73 69 6e 67 20 27 29 27 00 ; SLITERAL (0620) [missing closing ')']
0635: 0b eb 05 00 00             ; CALL CT (05eb)
063a: fe                         ; RESET
063b: 0b 8b 00 00 00             ; CALL >IN (008b)
0640: 0b 50 05 00 00             ; CALL ++ (0550)
0645: 0e 29                      ; CLITERAL 41
0647: 16                         ; EQ
0648: 09 4e 06 00 00             ; JMPZ 064e
064d: 0c                         ; RET
064e: 08 0f 06 00 00             ; JMP 060f
0653: 0c                         ; RET
;
0654: 18 67 f6 00 00             ; DICTP BL (f667)
0659: 0e 20                      ; CLITERAL 32
065b: 19                         ; EMIT
065c: 0c                         ; RET
;
065d: 18 58 f6 00 00             ; DICTP CRLF (f658)
0662: 0e 0d                      ; CLITERAL 13
0664: 19                         ; EMIT
0665: 0e 0a                      ; CLITERAL 10
0667: 19                         ; EMIT
0668: 0c                         ; RET
;
0669: 18 4b f6 00 00             ; DICTP CR (f64b)
066e: 0e 0d                      ; CLITERAL 13
0670: 19                         ; EMIT
0671: 0e 0a                      ; CLITERAL 10
0673: 19                         ; EMIT
0674: 0c                         ; RET
;
0675: 18 39 f6 00 00             ; DICTP BETWEEN (f639)
067a: 0e 02                      ; CLITERAL 2
067c: 25                         ; PICK
067d: 15                         ; LT
067e: 09 88 06 00 00             ; JMPZ 0688
0683: 05                         ; DROP
0684: 05                         ; DROP
0685: 0e 00                      ; CLITERAL 0
0687: 0c                         ; RET
0688: 15                         ; LT
0689: 0e 00                      ; CLITERAL 0
068b: 16                         ; EQ
068c: 0c                         ; RET
;
068d: 18 26 f6 00 00             ; DICTP tmp-init (f626)
0692: 0b 18 01 00 00             ; CALL LAST (0118)
0697: 0b 9a 00 00 00             ; CALL (tmp) (009a)
069c: 03                         ; STORE
069d: 0c                         ; RET
;
069e: 18 14 f6 00 00             ; DICTP tmp-cur (f614)
06a3: 0b 9a 00 00 00             ; CALL (tmp) (009a)
06a8: 02                         ; FETCH
06a9: 0c                         ; RET
;
06aa: 18 00 f6 00 00             ; DICTP tmp-alloc (f600)
06af: 0b 9a 00 00 00             ; CALL (tmp) (009a)
06b4: 04                         ; SWAP
06b5: 1a                         ; OVER
06b6: 02                         ; FETCH
06b7: 04                         ; SWAP
06b8: 12                         ; SUB
06b9: 04                         ; SWAP
06ba: 03                         ; STORE
06bb: 0b 9e 06 00 00             ; CALL tmp-cur (069e)
06c0: 0c                         ; RET
;
06c1: 18 f2 f5 00 00             ; DICTP PAD (f5f2)
06c6: 0b 8d 06 00 00             ; CALL tmp-init (068d)
06cb: 0e c8                      ; CLITERAL 200
06cd: 0b aa 06 00 00             ; CALL tmp-alloc (06aa)
06d2: 0c                         ; RET
;
06d3: 18 df f5 00 00             ; DICTP getInput (f5df)
06d8: 0b c1 06 00 00             ; CALL PAD (06c1)
06dd: 0e 80                      ; CLITERAL 128
06df: 0e 00                      ; CLITERAL 0
06e1: 1e                         ; FREADLINE
06e2: 05                         ; DROP
06e3: 0b c1 06 00 00             ; CALL PAD (06c1)
06e8: 0c                         ; RET
;
06e9: 18 ce f5 00 00             ; DICTP skipWS (f5ce)
06ee: 06                         ; DUP
06ef: 0f                         ; CFETCH
06f0: 06                         ; DUP
06f1: 09 0a 07 00 00             ; JMPZ 070a
06f6: 0e 20                      ; CLITERAL 32
06f8: 17                         ; GT
06f9: 09 04 07 00 00             ; JMPZ 0704
06fe: 0c                         ; RET
06ff: 08 05 07 00 00             ; JMP 0705
0704: 2c                         ; INC
0705: 08 0c 07 00 00             ; JMP 070c
070a: 05                         ; DROP
070b: 0c                         ; RET
070c: 08 ee 06 00 00             ; JMP 06ee
0711: 0c                         ; RET
;
0712: 18 b9 f5 00 00             ; DICTP getOneWord (f5b9)
0717: 06                         ; DUP
0718: 21                         ; DTOR
0719: 21                         ; DTOR
071a: 22                         ; RTOD
071b: 06                         ; DUP
071c: 21                         ; DTOR
071d: 0f                         ; CFETCH
071e: 0e 20                      ; CLITERAL 32
0720: 17                         ; GT
0721: 09 2e 07 00 00             ; JMPZ 072e
0726: 22                         ; RTOD
0727: 2c                         ; INC
0728: 21                         ; DTOR
0729: 08 44 07 00 00             ; JMP 0744
072e: 22                         ; RTOD
072f: 06                         ; DUP
0730: 21                         ; DTOR
0731: 0f                         ; CFETCH
0732: 09 40 07 00 00             ; JMPZ 0740
0737: 0e 00                      ; CLITERAL 0
0739: 22                         ; RTOD
073a: 06                         ; DUP
073b: 21                         ; DTOR
073c: 10                         ; CSTORE
073d: 22                         ; RTOD
073e: 2c                         ; INC
073f: 21                         ; DTOR
0740: 22                         ; RTOD
0741: 22                         ; RTOD
0742: 04                         ; SWAP
0743: 0c                         ; RET
0744: 08 1a 07 00 00             ; JMP 071a
0749: 0c                         ; RET
;
074a: 18 a5 f5 00 00             ; DICTP DICT>NEXT (f5a5)
074f: 0c                         ; RET
;
0750: 18 93 f5 00 00             ; DICTP DICT>XT (f593)
0755: 0e 04                      ; CLITERAL 4
0757: 11                         ; ADD
0758: 0c                         ; RET
;
0759: 18 7e f5 00 00             ; DICTP DICT>FLAGS (f57e)
075e: 0e 02                      ; CLITERAL 2
0760: 0e 04                      ; CLITERAL 4
0762: 13                         ; MUL
0763: 11                         ; ADD
0764: 0c                         ; RET
;
0765: 18 6a f5 00 00             ; DICTP DICT>NAME (f56a)
076a: 0b 59 07 00 00             ; CALL DICT>FLAGS (0759)
076f: 2c                         ; INC
0770: 0c                         ; RET
;
0771: 18 56 f5 00 00             ; DICTP NEXT>DICT (f556)
0776: 0c                         ; RET
;
0777: 18 44 f5 00 00             ; DICTP XT>DICT (f544)
077c: 0e 04                      ; CLITERAL 4
077e: 12                         ; SUB
077f: 0c                         ; RET
;
0780: 18 2f f5 00 00             ; DICTP FLAGS>DICT (f52f)
0785: 0e 02                      ; CLITERAL 2
0787: 0e 04                      ; CLITERAL 4
0789: 13                         ; MUL
078a: 12                         ; SUB
078b: 0c                         ; RET
;
078c: 18 1b f5 00 00             ; DICTP NAME>DICT (f51b)
0791: 2e                         ; DEC
0792: 0e 02                      ; CLITERAL 2
0794: 0e 04                      ; CLITERAL 4
0796: 13                         ; MUL
0797: 12                         ; SUB
0798: 0c                         ; RET
;
0799: 18 06 f5 00 00             ; DICTP DICT.GetXT (f506)
079e: 0b 50 07 00 00             ; CALL DICT>XT (0750)
07a3: 02                         ; FETCH
07a4: 0c                         ; RET
;
07a5: 18 ee f4 00 00             ; DICTP DICT.GetFLAGS (f4ee)
07aa: 0b 59 07 00 00             ; CALL DICT>FLAGS (0759)
07af: 0f                         ; CFETCH
07b0: 0c                         ; RET
;
07b1: 18 d9 f4 00 00             ; DICTP DICTP>NAME (f4d9)
07b6: 2c                         ; INC
07b7: 02                         ; FETCH
07b8: 0b 65 07 00 00             ; CALL DICT>NAME (0765)
07bd: 0c                         ; RET
;
07be: 18 c3 f4 00 00             ; DICTP XT.GetDICTP (f4c3)
07c3: 06                         ; DUP
07c4: 0f                         ; CFETCH
07c5: 0e 18                      ; CLITERAL 24
07c7: 16                         ; EQ
07c8: 09 d4 07 00 00             ; JMPZ 07d4
07cd: 2c                         ; INC
07ce: 02                         ; FETCH
07cf: 08 d6 07 00 00             ; JMP 07d6
07d4: 05                         ; DROP
07d5: fe                         ; RESET
07d6: 0c                         ; RET
;
07d7: 18 a6 f4 00 00             ; DICTP FLAGS.ISIMMEDIATE? (f4a6)
07dc: 0e 01                      ; CLITERAL 1
07de: 24                         ; AND
07df: 0c                         ; RET
;
07e0: 18 8c f4 00 00             ; DICTP FLAGS.ISINLINE? (f48c)
07e5: 0e 02                      ; CLITERAL 2
07e7: 24                         ; AND
07e8: 0c                         ; RET
;
07e9: 18 70 f4 00 00             ; DICTP DICT.GetIMMEDIATE (f470)
07ee: 0b a5 07 00 00             ; CALL DICT.GetFLAGS (07a5)
07f3: 0b d7 07 00 00             ; CALL FLAGS.ISIMMEDIATE? (07d7)
07f8: 0c                         ; RET
;
07f9: 18 57 f4 00 00             ; DICTP DICT.GetINLINE (f457)
07fe: 0b a5 07 00 00             ; CALL DICT.GetFLAGS (07a5)
0803: 0b e0 07 00 00             ; CALL FLAGS.ISINLINE? (07e0)
0808: 0c                         ; RET
;
0809: 18 42 f4 00 00             ; DICTP findInDict (f442)
080e: 0b 18 01 00 00             ; CALL LAST (0118)
0813: 21                         ; DTOR
0814: 22                         ; RTOD
0815: 06                         ; DUP
0816: 21                         ; DTOR
0817: 06                         ; DUP
0818: 09 41 08 00 00             ; JMPZ 0841
081d: 0b 65 07 00 00             ; CALL DICT>NAME (0765)
0822: 2c                         ; INC
0823: 1a                         ; OVER
0824: 28                         ; COMPAREI
0825: 09 3c 08 00 00             ; JMPZ 083c
082a: 05                         ; DROP
082b: 22                         ; RTOD
082c: 06                         ; DUP
082d: 21                         ; DTOR
082e: 0b 99 07 00 00             ; CALL DICT.GetXT (0799)
0833: 22                         ; RTOD
0834: 0b a5 07 00 00             ; CALL DICT.GetFLAGS (07a5)
0839: 0e 01                      ; CLITERAL 1
083b: 0c                         ; RET
083c: 08 49 08 00 00             ; JMP 0849
0841: 05                         ; DROP
0842: 05                         ; DROP
0843: 22                         ; RTOD
0844: 0e 00                      ; CLITERAL 0
0846: 0e 00                      ; CLITERAL 0
0848: 0c                         ; RET
0849: 22                         ; RTOD
084a: 02                         ; FETCH
084b: 21                         ; DTOR
084c: 08 14 08 00 00             ; JMP 0814
0851: 0c                         ; RET
;
0852: 18 31 f4 00 00             ; DICTP isHEX? (f431)
0857: 0b 5e 00 00 00             ; CALL BASE (005e)
085c: 02                         ; FETCH
085d: 0e 10                      ; CLITERAL 16
085f: 16                         ; EQ
0860: 0c                         ; RET
;
0861: 18 1c f4 00 00             ; DICTP isNumChar? (f41c)
0866: 06                         ; DUP
0867: 0e 30                      ; CLITERAL 48
0869: 0e 39                      ; CLITERAL 57
086b: 0b 75 06 00 00             ; CALL BETWEEN (0675)
0870: 09 7b 08 00 00             ; JMPZ 087b
0875: 0e 30                      ; CLITERAL 48
0877: 12                         ; SUB
0878: 0e 01                      ; CLITERAL 1
087a: 0c                         ; RET
087b: 0b 52 08 00 00             ; CALL isHEX? (0852)
0880: 09 af 08 00 00             ; JMPZ 08af
0885: 06                         ; DUP
0886: 0e 41                      ; CLITERAL 65
0888: 0e 46                      ; CLITERAL 70
088a: 0b 75 06 00 00             ; CALL BETWEEN (0675)
088f: 09 9a 08 00 00             ; JMPZ 089a
0894: 0e 37                      ; CLITERAL 55
0896: 12                         ; SUB
0897: 0e 01                      ; CLITERAL 1
0899: 0c                         ; RET
089a: 06                         ; DUP
089b: 0e 61                      ; CLITERAL 97
089d: 0e 66                      ; CLITERAL 102
089f: 0b 75 06 00 00             ; CALL BETWEEN (0675)
08a4: 09 af 08 00 00             ; JMPZ 08af
08a9: 0e 57                      ; CLITERAL 87
08ab: 12                         ; SUB
08ac: 0e 01                      ; CLITERAL 1
08ae: 0c                         ; RET
08af: 0e 00                      ; CLITERAL 0
08b1: 0c                         ; RET
;
08b2: 18 0b f4 00 00             ; DICTP NEGATE (f40b)
08b7: 0e 00                      ; CLITERAL 0
08b9: 04                         ; SWAP
08ba: 12                         ; SUB
08bb: 0c                         ; RET
;
08bc: 18 fd f3 00 00             ; DICTP ABS (f3fd)
08c1: 06                         ; DUP
08c2: 0e 00                      ; CLITERAL 0
08c4: 15                         ; LT
08c5: 09 cf 08 00 00             ; JMPZ 08cf
08ca: 0b b2 08 00 00             ; CALL NEGATE (08b2)
08cf: 0c                         ; RET
;
08d0: 18 e9 f3 00 00             ; DICTP isNumber? (f3e9)
08d5: 06                         ; DUP
08d6: 0f                         ; CFETCH
08d7: 0e 2d                      ; CLITERAL 45
08d9: 16                         ; EQ
08da: 06                         ; DUP
08db: 0b a9 00 00 00             ; CALL #NEG (00a9)
08e0: 03                         ; STORE
08e1: 09 e7 08 00 00             ; JMPZ 08e7
08e6: 2c                         ; INC
08e7: 0e 00                      ; CLITERAL 0
08e9: 21                         ; DTOR
08ea: 06                         ; DUP
08eb: 0f                         ; CFETCH
08ec: 06                         ; DUP
08ed: 0e 00                      ; CLITERAL 0
08ef: 16                         ; EQ
08f0: 09 0b 09 00 00             ; JMPZ 090b
08f5: 05                         ; DROP
08f6: 05                         ; DROP
08f7: 22                         ; RTOD
08f8: 0b a9 00 00 00             ; CALL #NEG (00a9)
08fd: 02                         ; FETCH
08fe: 09 08 09 00 00             ; JMPZ 0908
0903: 0b b2 08 00 00             ; CALL NEGATE (08b2)
0908: 0e 01                      ; CLITERAL 1
090a: 0c                         ; RET
090b: 0b 61 08 00 00             ; CALL isNumChar? (0861)
0910: 09 25 09 00 00             ; JMPZ 0925
0915: 22                         ; RTOD
0916: 0b 5e 00 00 00             ; CALL BASE (005e)
091b: 02                         ; FETCH
091c: 13                         ; MUL
091d: 11                         ; ADD
091e: 21                         ; DTOR
091f: 2c                         ; INC
0920: 08 2a 09 00 00             ; JMP 092a
0925: 05                         ; DROP
0926: 22                         ; RTOD
0927: 0e 00                      ; CLITERAL 0
0929: 0c                         ; RET
092a: 08 ea 08 00 00             ; JMP 08ea
092f: 0c                         ; RET
;
0930: 18 d9 f3 00 00             ; DICTP SPACE (f3d9)
0935: 0e 20                      ; CLITERAL 32
0937: 19                         ; EMIT
0938: 0c                         ; RET
;
0939: 18 cc f3 00 00             ; DICTP <# (f3cc)
093e: 0b a9 00 00 00             ; CALL #NEG (00a9)
0943: 0b 8a 03 00 00             ; CALL OFF (038a)
0948: 0b b8 00 00 00             ; CALL #LEN (00b8)
094d: 0b 8a 03 00 00             ; CALL OFF (038a)
0952: 06                         ; DUP
0953: 0e 00                      ; CLITERAL 0
0955: 15                         ; LT
0956: 09 6a 09 00 00             ; JMPZ 096a
095b: 0b b2 08 00 00             ; CALL NEGATE (08b2)
0960: 0b a9 00 00 00             ; CALL #NEG (00a9)
0965: 0b 80 03 00 00             ; CALL ON (0380)
096a: 0e 00                      ; CLITERAL 0
096c: 04                         ; SWAP
096d: 0c                         ; RET
;
096e: 18 c0 f3 00 00             ; DICTP # (f3c0)
0973: 0b 5e 00 00 00             ; CALL BASE (005e)
0978: 02                         ; FETCH
0979: 29                         ; RESET
097a: 04                         ; SWAP
097b: 0e 30                      ; CLITERAL 48
097d: 11                         ; ADD
097e: 06                         ; DUP
097f: 0e 39                      ; CLITERAL 57
0981: 17                         ; GT
0982: 09 8a 09 00 00             ; JMPZ 098a
0987: 0e 07                      ; CLITERAL 7
0989: 11                         ; ADD
098a: 0b b8 00 00 00             ; CALL #LEN (00b8)
098f: 0b 50 05 00 00             ; CALL ++ (0550)
0994: 04                         ; SWAP
0995: 0c                         ; RET
;
0996: 18 b3 f3 00 00             ; DICTP #S (f3b3)
099b: 0b 6e 09 00 00             ; CALL # (096e)
09a0: 06                         ; DUP
09a1: 0e 00                      ; CLITERAL 0
09a3: 16                         ; EQ
09a4: 09 9b 09 00 00             ; JMPZ 099b
09a9: 0c                         ; RET
;
09aa: 18 a6 f3 00 00             ; DICTP #> (f3a6)
09af: 0c                         ; RET
;
09b0: 18 98 f3 00 00             ; DICTP #P- (f398)
09b5: 05                         ; DROP
09b6: 0b a9 00 00 00             ; CALL #NEG (00a9)
09bb: 02                         ; FETCH
09bc: 09 c4 09 00 00             ; JMPZ 09c4
09c1: 0e 2d                      ; CLITERAL 45
09c3: 19                         ; EMIT
09c4: 0c                         ; RET
;
09c5: 18 8b f3 00 00             ; DICTP #P (f38b)
09ca: 0b b0 09 00 00             ; CALL #P- (09b0)
09cf: 19                         ; EMIT
09d0: 06                         ; DUP
09d1: 0e 00                      ; CLITERAL 0
09d3: 16                         ; EQ
09d4: 09 cf 09 00 00             ; JMPZ 09cf
09d9: 05                         ; DROP
09da: 0c                         ; RET
;
09db: 18 7d f3 00 00             ; DICTP (.) (f37d)
09e0: 0b 39 09 00 00             ; CALL <# (0939)
09e5: 0b 96 09 00 00             ; CALL #S (0996)
09ea: 0b aa 09 00 00             ; CALL #> (09aa)
09ef: 0b c5 09 00 00             ; CALL #P (09c5)
09f4: 0c                         ; RET
;
09f5: 18 71 f3 00 00             ; DICTP . (f371)
09fa: 0b db 09 00 00             ; CALL (.) (09db)
09ff: 0b 30 09 00 00             ; CALL SPACE (0930)
0a04: 0c                         ; RET
;
0a05: 18 64 f3 00 00             ; DICTP .2 (f364)
0a0a: 0b 39 09 00 00             ; CALL <# (0939)
0a0f: 0b 6e 09 00 00             ; CALL # (096e)
0a14: 0b 6e 09 00 00             ; CALL # (096e)
0a19: 0b aa 09 00 00             ; CALL #> (09aa)
0a1e: 0b c5 09 00 00             ; CALL #P (09c5)
0a23: 0c                         ; RET
;
0a24: 18 57 f3 00 00             ; DICTP .3 (f357)
0a29: 0b 39 09 00 00             ; CALL <# (0939)
0a2e: 0b 6e 09 00 00             ; CALL # (096e)
0a33: 0b 6e 09 00 00             ; CALL # (096e)
0a38: 0b 6e 09 00 00             ; CALL # (096e)
0a3d: 0b aa 09 00 00             ; CALL #> (09aa)
0a42: 0b c5 09 00 00             ; CALL #P (09c5)
0a47: 0c                         ; RET
;
0a48: 18 4a f3 00 00             ; DICTP .4 (f34a)
0a4d: 0b 39 09 00 00             ; CALL <# (0939)
0a52: 0b 6e 09 00 00             ; CALL # (096e)
0a57: 0b 6e 09 00 00             ; CALL # (096e)
0a5c: 0b 6e 09 00 00             ; CALL # (096e)
0a61: 0b 6e 09 00 00             ; CALL # (096e)
0a66: 0b aa 09 00 00             ; CALL #> (09aa)
0a6b: 0b c5 09 00 00             ; CALL #P (09c5)
0a70: 0c                         ; RET
;
0a71: 18 3b f3 00 00             ; DICTP HEX. (f33b)
0a76: 0b 5e 00 00 00             ; CALL BASE (005e)
0a7b: 02                         ; FETCH
0a7c: 04                         ; SWAP
0a7d: 0b 48 03 00 00             ; CALL HEX (0348)
0a82: 0b db 09 00 00             ; CALL (.) (09db)
0a87: 0b 5e 00 00 00             ; CALL BASE (005e)
0a8c: 03                         ; STORE
0a8d: 0c                         ; RET
;
0a8e: 18 2b f3 00 00             ; DICTP HEX.2 (f32b)
0a93: 0b 5e 00 00 00             ; CALL BASE (005e)
0a98: 02                         ; FETCH
0a99: 04                         ; SWAP
0a9a: 0b 48 03 00 00             ; CALL HEX (0348)
0a9f: 0b 05 0a 00 00             ; CALL .2 (0a05)
0aa4: 0b 5e 00 00 00             ; CALL BASE (005e)
0aa9: 03                         ; STORE
0aaa: 0c                         ; RET
;
0aab: 18 1b f3 00 00             ; DICTP HEX.4 (f31b)
0ab0: 0b 5e 00 00 00             ; CALL BASE (005e)
0ab5: 02                         ; FETCH
0ab6: 04                         ; SWAP
0ab7: 0b 48 03 00 00             ; CALL HEX (0348)
0abc: 0b 48 0a 00 00             ; CALL .4 (0a48)
0ac1: 0b 5e 00 00 00             ; CALL BASE (005e)
0ac6: 03                         ; STORE
0ac7: 0c                         ; RET
;
0ac8: 18 08 f3 00 00             ; DICTP DECIMAL. (f308)
0acd: 0b 5e 00 00 00             ; CALL BASE (005e)
0ad2: 02                         ; FETCH
0ad3: 04                         ; SWAP
0ad4: 0b 56 03 00 00             ; CALL DECIMAL (0356)
0ad9: 0b db 09 00 00             ; CALL (.) (09db)
0ade: 0b 5e 00 00 00             ; CALL BASE (005e)
0ae3: 03                         ; STORE
0ae4: 0c                         ; RET
;
0ae5: 18 f4 f2 00 00             ; DICTP DECIMAL.3 (f2f4)
0aea: 0b 5e 00 00 00             ; CALL BASE (005e)
0aef: 02                         ; FETCH
0af0: 04                         ; SWAP
0af1: 0b 56 03 00 00             ; CALL DECIMAL (0356)
0af6: 0b 24 0a 00 00             ; CALL .3 (0a24)
0afb: 0b 5e 00 00 00             ; CALL BASE (005e)
0b00: 03                         ; STORE
0b01: 0c                         ; RET
;
0b02: 18 e2 f2 00 00             ; DICTP BINARY. (f2e2)
0b07: 0b 5e 00 00 00             ; CALL BASE (005e)
0b0c: 02                         ; FETCH
0b0d: 04                         ; SWAP
0b0e: 0b 72 03 00 00             ; CALL BINARY (0372)
0b13: 0b db 09 00 00             ; CALL (.) (09db)
0b18: 0b 5e 00 00 00             ; CALL BASE (005e)
0b1d: 03                         ; STORE
0b1e: 0c                         ; RET
;
0b1f: 18 d4 f2 00 00             ; DICTP MIN (f2d4)
0b24: 1a                         ; OVER
0b25: 1a                         ; OVER
0b26: 17                         ; GT
0b27: 09 2d 0b 00 00             ; JMPZ 0b2d
0b2c: 04                         ; SWAP
0b2d: 05                         ; DROP
0b2e: 0c                         ; RET
;
0b2f: 18 c6 f2 00 00             ; DICTP MAX (f2c6)
0b34: 1a                         ; OVER
0b35: 1a                         ; OVER
0b36: 15                         ; LT
0b37: 09 3d 0b 00 00             ; JMPZ 0b3d
0b3c: 04                         ; SWAP
0b3d: 05                         ; DROP
0b3e: 0c                         ; RET
;
0b3f: 18 b9 f2 00 00             ; DICTP .S (f2b9)
0b44: 0e 20                      ; CLITERAL 32
0b46: 19                         ; EMIT
0b47: 26                         ; DEPTH
0b48: 0e 00                      ; CLITERAL 0
0b4a: 15                         ; LT
0b4b: 09 6e 0b 00 00             ; JMPZ 0b6e
0b50: 07 10 53 74 61 63 6b 20 75 6e 64 65 72 66 6c 6f 77 21 00 ; SLITERAL (0b51) [Stack underflow!]
0b63: 0b c3 05 00 00             ; CALL COUNT (05c3)
0b68: 0b cd 05 00 00             ; CALL TYPE (05cd)
0b6d: fe                         ; RESET
0b6e: 26                         ; DEPTH
0b6f: 0e 00                      ; CLITERAL 0
0b71: 16                         ; EQ
0b72: 09 81 0b 00 00             ; JMPZ 0b81
0b77: 0e 28                      ; CLITERAL 40
0b79: 19                         ; EMIT
0b7a: 0e ed                      ; CLITERAL 237
0b7c: 19                         ; EMIT
0b7d: 0e 29                      ; CLITERAL 41
0b7f: 19                         ; EMIT
0b80: 0c                         ; RET
0b81: 0e 28                      ; CLITERAL 40
0b83: 19                         ; EMIT
0b84: 0b 30 09 00 00             ; CALL SPACE (0930)
0b89: 26                         ; DEPTH
0b8a: 2e                         ; DEC
0b8b: 21                         ; DTOR
0b8c: 22                         ; RTOD
0b8d: 06                         ; DUP
0b8e: 21                         ; DTOR
0b8f: 25                         ; PICK
0b90: 0b f5 09 00 00             ; CALL . (09f5)
0b95: 22                         ; RTOD
0b96: 06                         ; DUP
0b97: 21                         ; DTOR
0b98: 09 a5 0b 00 00             ; JMPZ 0ba5
0b9d: 22                         ; RTOD
0b9e: 2e                         ; DEC
0b9f: 21                         ; DTOR
0ba0: 08 ab 0b 00 00             ; JMP 0bab
0ba5: 22                         ; RTOD
0ba6: 05                         ; DROP
0ba7: 0e 29                      ; CLITERAL 41
0ba9: 19                         ; EMIT
0baa: 0c                         ; RET
0bab: 08 8c 0b 00 00             ; JMP 0b8c
0bb0: 0c                         ; RET
;
0bb1: 18 a5 f2 00 00             ; DICTP .(MEM_SZ) (f2a5)
0bb6: 07 08 4d 65 6d 6f 72 79 3a 20 00 ; SLITERAL (0bb7) [Memory: ]
0bc1: 0b eb 05 00 00             ; CALL CT (05eb)
0bc6: 0b 79 04 00 00             ; CALL MEM_SZ (0479)
0bcb: 06                         ; DUP
0bcc: 0b 71 0a 00 00             ; CALL HEX. (0a71)
0bd1: 07 02 20 28 00             ; SLITERAL (0bd2) [ (]
0bd6: 0b eb 05 00 00             ; CALL CT (05eb)
0bdb: 0b db 09 00 00             ; CALL (.) (09db)
0be0: 07 01 29 00                ; SLITERAL (0be1) [)]
0be4: 0b eb 05 00 00             ; CALL CT (05eb)
0be9: 0c                         ; RET
;
0bea: 18 93 f2 00 00             ; DICTP .(HERE) (f293)
0bef: 07 06 48 45 52 45 3a 20 00 ; SLITERAL (0bf0) [HERE: ]
0bf8: 0b eb 05 00 00             ; CALL CT (05eb)
0bfd: 0b 0c 01 00 00             ; CALL HERE (010c)
0c02: 06                         ; DUP
0c03: 0b 71 0a 00 00             ; CALL HEX. (0a71)
0c08: 07 02 20 28 00             ; SLITERAL (0c09) [ (]
0c0d: 0b eb 05 00 00             ; CALL CT (05eb)
0c12: 0b db 09 00 00             ; CALL (.) (09db)
0c17: 07 01 29 00                ; SLITERAL (0c18) [)]
0c1b: 0b eb 05 00 00             ; CALL CT (05eb)
0c20: 0c                         ; RET
;
0c21: 18 81 f2 00 00             ; DICTP .(LAST) (f281)
0c26: 07 06 4c 41 53 54 3a 20 00 ; SLITERAL (0c27) [LAST: ]
0c2f: 0b eb 05 00 00             ; CALL CT (05eb)
0c34: 0b 18 01 00 00             ; CALL LAST (0118)
0c39: 06                         ; DUP
0c3a: 0b 71 0a 00 00             ; CALL HEX. (0a71)
0c3f: 07 02 20 28 00             ; SLITERAL (0c40) [ (]
0c44: 0b eb 05 00 00             ; CALL CT (05eb)
0c49: 0b db 09 00 00             ; CALL (.) (09db)
0c4e: 07 01 29 00                ; SLITERAL (0c4f) [)]
0c52: 0b eb 05 00 00             ; CALL CT (05eb)
0c57: 0c                         ; RET
;
0c58: 18 6b f2 00 00             ; DICTP .WORD-SHORT (f26b)
0c5d: 06                         ; DUP
0c5e: 0b 65 07 00 00             ; CALL DICT>NAME (0765)
0c63: 0b eb 05 00 00             ; CALL CT (05eb)
0c68: 0e 20                      ; CLITERAL 32
0c6a: 19                         ; EMIT
0c6b: 02                         ; FETCH
0c6c: 0c                         ; RET
;
0c6d: 18 5b f2 00 00             ; DICTP WORDS (f25b)
0c72: 0b 18 01 00 00             ; CALL LAST (0118)
0c77: 06                         ; DUP
0c78: 02                         ; FETCH
0c79: 0e 00                      ; CLITERAL 0
0c7b: 16                         ; EQ
0c7c: 09 89 0c 00 00             ; JMPZ 0c89
0c81: 05                         ; DROP
0c82: 0e 0d                      ; CLITERAL 13
0c84: 19                         ; EMIT
0c85: 0e 0a                      ; CLITERAL 10
0c87: 19                         ; EMIT
0c88: 0c                         ; RET
0c89: 0b 58 0c 00 00             ; CALL .WORD-SHORT (0c58)
0c8e: 08 77 0c 00 00             ; JMP 0c77
0c93: 0c                         ; RET
;
0c94: 18 46 f2 00 00             ; DICTP .WORD-LONG (f246)
0c99: 06                         ; DUP
0c9a: 0b 71 0a 00 00             ; CALL HEX. (0a71)
0c9f: 0e 3a                      ; CLITERAL 58
0ca1: 19                         ; EMIT
0ca2: 0e 20                      ; CLITERAL 32
0ca4: 19                         ; EMIT
0ca5: 06                         ; DUP
0ca6: 0b 65 07 00 00             ; CALL DICT>NAME (0765)
0cab: 0b eb 05 00 00             ; CALL CT (05eb)
0cb0: 0e 20                      ; CLITERAL 32
0cb2: 19                         ; EMIT
0cb3: 06                         ; DUP
0cb4: 0b 99 07 00 00             ; CALL DICT.GetXT (0799)
0cb9: 0e 28                      ; CLITERAL 40
0cbb: 19                         ; EMIT
0cbc: 0b ab 0a 00 00             ; CALL HEX.4 (0aab)
0cc1: 0e 29                      ; CLITERAL 41
0cc3: 19                         ; EMIT
0cc4: 06                         ; DUP
0cc5: 0b 59 07 00 00             ; CALL DICT>FLAGS (0759)
0cca: 0f                         ; CFETCH
0ccb: 06                         ; DUP
0ccc: 07 09 2c 20 46 6c 61 67 73 3a 20 00 ; SLITERAL (0ccd) [, Flags: ]
0cd8: 0b eb 05 00 00             ; CALL CT (05eb)
0cdd: 0b 8e 0a 00 00             ; CALL HEX.2 (0a8e)
0ce2: 06                         ; DUP
0ce3: 0b e0 07 00 00             ; CALL FLAGS.ISINLINE? (07e0)
0ce8: 09 fe 0c 00 00             ; JMPZ 0cfe
0ced: 07 09 20 28 49 4e 4c 49 4e 45 29 00 ; SLITERAL (0cee) [ (INLINE)]
0cf9: 0b eb 05 00 00             ; CALL CT (05eb)
0cfe: 0b d7 07 00 00             ; CALL FLAGS.ISIMMEDIATE? (07d7)
0d03: 09 1c 0d 00 00             ; JMPZ 0d1c
0d08: 07 0c 20 28 49 4d 4d 45 44 49 41 54 45 29 00 ; SLITERAL (0d09) [ (IMMEDIATE)]
0d17: 0b eb 05 00 00             ; CALL CT (05eb)
0d1c: 0e 0d                      ; CLITERAL 13
0d1e: 19                         ; EMIT
0d1f: 0e 0a                      ; CLITERAL 10
0d21: 19                         ; EMIT
0d22: 02                         ; FETCH
0d23: 0c                         ; RET
;
0d24: 18 35 f2 00 00             ; DICTP WORDSV (f235)
0d29: 0b 21 0c 00 00             ; CALL .(LAST) (0c21)
0d2e: 0e 0d                      ; CLITERAL 13
0d30: 19                         ; EMIT
0d31: 0e 0a                      ; CLITERAL 10
0d33: 19                         ; EMIT
0d34: 0b 18 01 00 00             ; CALL LAST (0118)
0d39: 06                         ; DUP
0d3a: 02                         ; FETCH
0d3b: 0e 00                      ; CLITERAL 0
0d3d: 16                         ; EQ
0d3e: 09 4b 0d 00 00             ; JMPZ 0d4b
0d43: 05                         ; DROP
0d44: 0e 0d                      ; CLITERAL 13
0d46: 19                         ; EMIT
0d47: 0e 0a                      ; CLITERAL 10
0d49: 19                         ; EMIT
0d4a: 0c                         ; RET
0d4b: 0b 94 0c 00 00             ; CALL .WORD-LONG (0c94)
0d50: 08 39 0d 00 00             ; JMP 0d39
0d55: 0c                         ; RET
;
0d56: 18 21 f2 00 00             ; DICTP NUM-WORDS (f221)
0d5b: 0e 00                      ; CLITERAL 0
0d5d: 21                         ; DTOR
0d5e: 0b 18 01 00 00             ; CALL LAST (0118)
0d63: 06                         ; DUP
0d64: 02                         ; FETCH
0d65: 0e 00                      ; CLITERAL 0
0d67: 16                         ; EQ
0d68: 09 76 0d 00 00             ; JMPZ 0d76
0d6d: 05                         ; DROP
0d6e: 22                         ; RTOD
0d6f: 0e 0d                      ; CLITERAL 13
0d71: 19                         ; EMIT
0d72: 0e 0a                      ; CLITERAL 10
0d74: 19                         ; EMIT
0d75: 0c                         ; RET
0d76: 22                         ; RTOD
0d77: 2c                         ; INC
0d78: 21                         ; DTOR
0d79: 02                         ; FETCH
0d7a: 08 63 0d 00 00             ; JMP 0d63
0d7f: 0c                         ; RET
;
0d80: 18 10 f2 00 00             ; DICTP .lastx (f210)
0d85: 0e 0d                      ; CLITERAL 13
0d87: 19                         ; EMIT
0d88: 0e 0a                      ; CLITERAL 10
0d8a: 19                         ; EMIT
0d8b: 0b 18 01 00 00             ; CALL LAST (0118)
0d90: 04                         ; SWAP
0d91: 04                         ; SWAP
0d92: 0b 94 0c 00 00             ; CALL .WORD-LONG (0c94)
0d97: 04                         ; SWAP
0d98: 2e                         ; DEC
0d99: 06                         ; DUP
0d9a: 0a 91 0d 00 00             ; JMPNZ 0d91
0d9f: 05                         ; DROP
0da0: 05                         ; DROP
0da1: 0c                         ; RET
;
0da2: 18 fe f1 00 00             ; DICTP EXECUTE (f1fe)
0da7: 22                         ; RTOD
0da8: 05                         ; DROP
0da9: 21                         ; DTOR
0daa: 0c                         ; RET
;
0dab: 18 eb f1 00 00             ; DICTP find.ret (f1eb)
0db0: 06                         ; DUP
0db1: 0f                         ; CFETCH
0db2: 0e 0c                      ; CLITERAL 12
0db4: 16                         ; EQ
0db5: 09 bb 0d 00 00             ; JMPZ 0dbb
0dba: 0c                         ; RET
0dbb: 2c                         ; INC
0dbc: 08 b0 0d 00 00             ; JMP 0db0
0dc1: 0c                         ; RET
;
0dc2: 18 d8 f1 00 00             ; DICTP (inline) (f1d8)
0dc7: 1a                         ; OVER
0dc8: 1a                         ; OVER
0dc9: 15                         ; LT
0dca: 09 d0 0d 00 00             ; JMPZ 0dd0
0dcf: 04                         ; SWAP
0dd0: 06                         ; DUP
0dd1: 0f                         ; CFETCH
0dd2: 0b 24 01 00 00             ; CALL C, (0124)
0dd7: 2c                         ; INC
0dd8: 1a                         ; OVER
0dd9: 1a                         ; OVER
0dda: 17                         ; GT
0ddb: 0a d0 0d 00 00             ; JMPNZ 0dd0
0de0: 05                         ; DROP
0de1: 05                         ; DROP
0de2: 0c                         ; RET
;
0de3: 18 c8 f1 00 00             ; DICTP DOES> (f1c8)
0de8: 22                         ; RTOD
0de9: 06                         ; DUP
0dea: 0b ab 0d 00 00             ; CALL find.ret (0dab)
0def: 06                         ; DUP
0df0: 21                         ; DTOR
0df1: 2c                         ; INC
0df2: 0b c2 0d 00 00             ; CALL (inline) (0dc2)
0df7: 0c                         ; RET
;
0df8: 18 b2 f1 00 00             ; DICTP Copy.INLINE (f1b2)
0dfd: 06                         ; DUP
0dfe: 0f                         ; CFETCH
0dff: 0e 18                      ; CLITERAL 24
0e01: 16                         ; EQ
0e02: 09 0b 0e 00 00             ; JMPZ 0e0b
0e07: 2c                         ; INC
0e08: 0e 04                      ; CLITERAL 4
0e0a: 11                         ; ADD
0e0b: 06                         ; DUP
0e0c: 0b ab 0d 00 00             ; CALL find.ret (0dab)
0e11: 0b c2 0d 00 00             ; CALL (inline) (0dc2)
0e16: 0c                         ; RET
;
0e17: 18 a1 f1 00 00             ; DICTP strlen (f1a1)
0e1c: 0e 00                      ; CLITERAL 0
0e1e: 04                         ; SWAP
0e1f: 04                         ; SWAP
0e20: 1a                         ; OVER
0e21: 0f                         ; CFETCH
0e22: 06                         ; DUP
0e23: 09 2e 0e 00 00             ; JMPZ 0e2e
0e28: 05                         ; DROP
0e29: 2c                         ; INC
0e2a: 04                         ; SWAP
0e2b: 2c                         ; INC
0e2c: 0e 01                      ; CLITERAL 1
0e2e: 0a 1f 0e 00 00             ; JMPNZ 0e1f
0e33: 04                         ; SWAP
0e34: 05                         ; DROP
0e35: 0c                         ; RET
;
0e36: 18 91 f1 00 00             ; DICTP cstr, (f191)
0e3b: 06                         ; DUP
0e3c: 0f                         ; CFETCH
0e3d: 1a                         ; OVER
0e3e: 11                         ; ADD
0e3f: 2c                         ; INC
0e40: 2c                         ; INC
0e41: 0b c2 0d 00 00             ; CALL (inline) (0dc2)
0e46: 0c                         ; RET
;
0e47: 18 7d f1 00 00             ; DICTP [COMPILE] (f17d)
0e4c: 0b e0 07 00 00             ; CALL FLAGS.ISINLINE? (07e0)
0e51: 09 60 0e 00 00             ; JMPZ 0e60
0e56: 0b f8 0d 00 00             ; CALL Copy.INLINE (0df8)
0e5b: 08 6a 0e 00 00             ; JMP 0e6a
0e60: 0b d6 01 00 00             ; CALL CALL (01d6)
0e65: 0b 3c 01 00 00             ; CALL , (013c)
0e6a: 0c                         ; RET
;
0e6b: 18 67 f1 00 00             ; DICTP executeWord (f167)
0e70: 21                         ; DTOR
0e71: 22                         ; RTOD
0e72: 06                         ; DUP
0e73: 21                         ; DTOR
0e74: 0b 09 08 00 00             ; CALL findInDict (0809)
0e79: 09 b5 0e 00 00             ; JMPZ 0eb5
0e7e: 22                         ; RTOD
0e7f: 05                         ; DROP
0e80: 0b 94 03 00 00             ; CALL ?COMPILING (0394)
0e85: 09 aa 0e 00 00             ; JMPZ 0eaa
0e8a: 06                         ; DUP
0e8b: 0b d7 07 00 00             ; CALL FLAGS.ISIMMEDIATE? (07d7)
0e90: 09 a0 0e 00 00             ; JMPZ 0ea0
0e95: 05                         ; DROP
0e96: 0b a2 0d 00 00             ; CALL EXECUTE (0da2)
0e9b: 08 a5 0e 00 00             ; JMP 0ea5
0ea0: 0b 47 0e 00 00             ; CALL [COMPILE] (0e47)
0ea5: 08 b0 0e 00 00             ; JMP 0eb0
0eaa: 05                         ; DROP
0eab: 0b a2 0d 00 00             ; CALL EXECUTE (0da2)
0eb0: 08 0b 0f 00 00             ; JMP 0f0b
0eb5: 05                         ; DROP
0eb6: 05                         ; DROP
0eb7: 22                         ; RTOD
0eb8: 06                         ; DUP
0eb9: 21                         ; DTOR
0eba: 0b d0 08 00 00             ; CALL isNumber? (08d0)
0ebf: 09 fd 0e 00 00             ; JMPZ 0efd
0ec4: 0b 94 03 00 00             ; CALL ?COMPILING (0394)
0ec9: 09 f8 0e 00 00             ; JMPZ 0ef8
0ece: 06                         ; DUP
0ecf: 0e 00                      ; CLITERAL 0
0ed1: 0e ff                      ; CLITERAL 255
0ed3: 0b 75 06 00 00             ; CALL BETWEEN (0675)
0ed8: 09 ee 0e 00 00             ; JMPZ 0eee
0edd: 0e 0e                      ; CLITERAL 14
0edf: 0b 24 01 00 00             ; CALL C, (0124)
0ee4: 0b 24 01 00 00             ; CALL C, (0124)
0ee9: 08 f8 0e 00 00             ; JMP 0ef8
0eee: 0b 72 01 00 00             ; CALL LITERAL (0172)
0ef3: 0b 3c 01 00 00             ; CALL , (013c)
0ef8: 08 09 0f 00 00             ; JMP 0f09
0efd: 05                         ; DROP
0efe: 07 02 3f 3f 00             ; SLITERAL (0eff) [??]
0f03: 0b eb 05 00 00             ; CALL CT (05eb)
0f08: fe                         ; RESET
0f09: 22                         ; RTOD
0f0a: 05                         ; DROP
0f0b: 0c                         ; RET
;
0f0c: 18 50 f1 00 00             ; DICTP executeInput (f150)
0f11: 0b 8b 00 00 00             ; CALL >IN (008b)
0f16: 02                         ; FETCH
0f17: 0b e9 06 00 00             ; CALL skipWS (06e9)
0f1c: 0b 8b 00 00 00             ; CALL >IN (008b)
0f21: 03                         ; STORE
0f22: 0b 8b 00 00 00             ; CALL >IN (008b)
0f27: 02                         ; FETCH
0f28: 0f                         ; CFETCH
0f29: 09 49 0f 00 00             ; JMPZ 0f49
0f2e: 0b 8b 00 00 00             ; CALL >IN (008b)
0f33: 02                         ; FETCH
0f34: 0b 12 07 00 00             ; CALL getOneWord (0712)
0f39: 0b 8b 00 00 00             ; CALL >IN (008b)
0f3e: 03                         ; STORE
0f3f: 0b 6b 0e 00 00             ; CALL executeWord (0e6b)
0f44: 08 4a 0f 00 00             ; JMP 0f4a
0f49: 0c                         ; RET
0f4a: 08 11 0f 00 00             ; JMP 0f11
0f4f: 0c                         ; RET
;
0f50: 18 42 f1 00 00             ; DICTP Pad (f142)
0f55: 0b 18 01 00 00             ; CALL LAST (0118)
0f5a: 0e c8                      ; CLITERAL 200
0f5c: 12                         ; SUB
0f5d: 06                         ; DUP
0f5e: 0b 0c 01 00 00             ; CALL HERE (010c)
0f63: 15                         ; LT
0f64: 09 7b 0f 00 00             ; JMPZ 0f7b
0f69: 07 0e 4f 75 74 20 6f 66 20 4d 65 6d 6f 72 79 21 00 ; SLITERAL (0f6a) [Out of Memory!]
0f7a: fe                         ; RESET
0f7b: 0c                         ; RET
;
0f7c: 18 27 f1 00 00             ; DICTP LoadingFromFile? (f127)
0f81: 0b c7 00 00 00             ; CALL INPUT-FP (00c7)
0f86: 02                         ; FETCH
0f87: 0c                         ; RET
;
0f88: 18 0d f1 00 00             ; DICTP getLineFromFile (f10d)
0f8d: 0e c8                      ; CLITERAL 200
0f8f: 0b c7 00 00 00             ; CALL INPUT-FP (00c7)
0f94: 02                         ; FETCH
0f95: 1e                         ; FREADLINE
0f96: 0e 00                      ; CLITERAL 0
0f98: 16                         ; EQ
0f99: 09 a8 0f 00 00             ; JMPZ 0fa8
0f9e: 0b c7 00 00 00             ; CALL INPUT-FP (00c7)
0fa3: 0b 8a 03 00 00             ; CALL OFF (038a)
0fa8: 0c                         ; RET
;
0fa9: 18 fb f0 00 00             ; DICTP getLine (f0fb)
0fae: 0e 00                      ; CLITERAL 0
0fb0: 0b 50 0f 00 00             ; CALL Pad (0f50)
0fb5: 06                         ; DUP
0fb6: 2c                         ; INC
0fb7: 0b 8b 00 00 00             ; CALL >IN (008b)
0fbc: 03                         ; STORE
0fbd: 10                         ; CSTORE
0fbe: 0b 7c 0f 00 00             ; CALL LoadingFromFile? (0f7c)
0fc3: 09 d3 0f 00 00             ; JMPZ 0fd3
0fc8: 0b 50 0f 00 00             ; CALL Pad (0f50)
0fcd: 0b 88 0f 00 00             ; CALL getLineFromFile (0f88)
0fd2: 0c                         ; RET
0fd3: 0e 00                      ; CLITERAL 0
0fd5: 0b 8b 00 00 00             ; CALL >IN (008b)
0fda: 02                         ; FETCH
0fdb: 10                         ; CSTORE
0fdc: 27                         ; GETCH
0fdd: 06                         ; DUP
0fde: 0e 0d                      ; CLITERAL 13
0fe0: 16                         ; EQ
0fe1: 09 f0 0f 00 00             ; JMPZ 0ff0
0fe6: 05                         ; DROP
0fe7: 0b 50 0f 00 00             ; CALL Pad (0f50)
0fec: 0e 20                      ; CLITERAL 32
0fee: 19                         ; EMIT
0fef: 0c                         ; RET
0ff0: 06                         ; DUP
0ff1: 0e 09                      ; CLITERAL 9
0ff3: 16                         ; EQ
0ff4: 09 fc 0f 00 00             ; JMPZ 0ffc
0ff9: 05                         ; DROP
0ffa: 0e 20                      ; CLITERAL 32
0ffc: 06                         ; DUP
0ffd: 0e 03                      ; CLITERAL 3
0fff: 16                         ; EQ
1000: 09 06 10 00 00             ; JMPZ 1006
1005: ff                         ; BYE
1006: 06                         ; DUP
1007: 0e 08                      ; CLITERAL 8
1009: 16                         ; EQ
100a: 09 42 10 00 00             ; JMPZ 1042
100f: 0b 50 0f 00 00             ; CALL Pad (0f50)
1014: 0f                         ; CFETCH
1015: 0e 00                      ; CLITERAL 0
1017: 17                         ; GT
1018: 09 3c 10 00 00             ; JMPZ 103c
101d: 0b 50 0f 00 00             ; CALL Pad (0f50)
1022: 0b 75 05 00 00             ; CALL C-- (0575)
1027: 0b 8b 00 00 00             ; CALL >IN (008b)
102c: 0b 5d 05 00 00             ; CALL -- (055d)
1031: 06                         ; DUP
1032: 19                         ; EMIT
1033: 0e 20                      ; CLITERAL 32
1035: 19                         ; EMIT
1036: 19                         ; EMIT
1037: 08 3d 10 00 00             ; JMP 103d
103c: 05                         ; DROP
103d: 08 74 10 00 00             ; JMP 1074
1042: 06                         ; DUP
1043: 0e 20                      ; CLITERAL 32
1045: 0e 7f                      ; CLITERAL 127
1047: 0b 75 06 00 00             ; CALL BETWEEN (0675)
104c: 09 73 10 00 00             ; JMPZ 1073
1051: 06                         ; DUP
1052: 19                         ; EMIT
1053: 0b 8b 00 00 00             ; CALL >IN (008b)
1058: 02                         ; FETCH
1059: 10                         ; CSTORE
105a: 0b 8b 00 00 00             ; CALL >IN (008b)
105f: 0b 50 05 00 00             ; CALL ++ (0550)
1064: 0b 50 0f 00 00             ; CALL Pad (0f50)
1069: 0b 6a 05 00 00             ; CALL C++ (056a)
106e: 08 74 10 00 00             ; JMP 1074
1073: 05                         ; DROP
1074: 08 d3 0f 00 00             ; JMP 0fd3
1079: 0c                         ; RET
;
107a: 18 e8 f0 00 00             ; DICTP strcpy2c (f0e8)
107f: 06                         ; DUP
1080: 21                         ; DTOR
1081: 0e 00                      ; CLITERAL 0
1083: 1a                         ; OVER
1084: 10                         ; CSTORE
1085: 2c                         ; INC
1086: 04                         ; SWAP
1087: 06                         ; DUP
1088: 0f                         ; CFETCH
1089: 06                         ; DUP
108a: 09 a4 10 00 00             ; JMPZ 10a4
108f: 0e 02                      ; CLITERAL 2
1091: 25                         ; PICK
1092: 10                         ; CSTORE
1093: 04                         ; SWAP
1094: 2c                         ; INC
1095: 04                         ; SWAP
1096: 2c                         ; INC
1097: 22                         ; RTOD
1098: 06                         ; DUP
1099: 21                         ; DTOR
109a: 0b 6a 05 00 00             ; CALL C++ (056a)
109f: 08 ad 10 00 00             ; JMP 10ad
10a4: 21                         ; DTOR
10a5: 04                         ; SWAP
10a6: 22                         ; RTOD
10a7: 04                         ; SWAP
10a8: 10                         ; CSTORE
10a9: 05                         ; DROP
10aa: 22                         ; RTOD
10ab: 05                         ; DROP
10ac: 0c                         ; RET
10ad: 08 87 10 00 00             ; JMP 1087
10b2: 0c                         ; RET
;
10b3: 18 d2 f0 00 00             ; DICTP Define-Word (f0d2)
10b8: 0b 18 01 00 00             ; CALL LAST (0118)
10bd: 1a                         ; OVER
10be: 0b 17 0e 00 00             ; CALL strlen (0e17)
10c3: 0e 02                      ; CLITERAL 2
10c5: 0e 04                      ; CLITERAL 4
10c7: 13                         ; MUL
10c8: 0e 03                      ; CLITERAL 3
10ca: 11                         ; ADD
10cb: 11                         ; ADD
10cc: 12                         ; SUB
10cd: 06                         ; DUP
10ce: 21                         ; DTOR
10cf: 21                         ; DTOR
10d0: 0b 18 01 00 00             ; CALL LAST (0118)
10d5: 22                         ; RTOD
10d6: 06                         ; DUP
10d7: 21                         ; DTOR
10d8: 03                         ; STORE
10d9: 22                         ; RTOD
10da: 0e 04                      ; CLITERAL 4
10dc: 11                         ; ADD
10dd: 21                         ; DTOR
10de: 0b 0c 01 00 00             ; CALL HERE (010c)
10e3: 22                         ; RTOD
10e4: 06                         ; DUP
10e5: 21                         ; DTOR
10e6: 03                         ; STORE
10e7: 22                         ; RTOD
10e8: 0e 04                      ; CLITERAL 4
10ea: 11                         ; ADD
10eb: 21                         ; DTOR
10ec: 0e 00                      ; CLITERAL 0
10ee: 22                         ; RTOD
10ef: 06                         ; DUP
10f0: 21                         ; DTOR
10f1: 10                         ; CSTORE
10f2: 22                         ; RTOD
10f3: 2c                         ; INC
10f4: 21                         ; DTOR
10f5: 22                         ; RTOD
10f6: 0b 7a 10 00 00             ; CALL strcpy2c (107a)
10fb: 22                         ; RTOD
10fc: 0b 4f 00 00 00             ; CALL (LAST) (004f)
1101: 03                         ; STORE
1102: 0c                         ; RET
;
1103: 18 bc f0 00 00             ; DICTP CREATE-NAME (f0bc)
1108: 0b 8b 00 00 00             ; CALL >IN (008b)
110d: 02                         ; FETCH
110e: 0b e9 06 00 00             ; CALL skipWS (06e9)
1113: 0b 8b 00 00 00             ; CALL >IN (008b)
1118: 03                         ; STORE
1119: 0b 8b 00 00 00             ; CALL >IN (008b)
111e: 02                         ; FETCH
111f: 0f                         ; CFETCH
1120: 09 5a 11 00 00             ; JMPZ 115a
1125: 0b 8b 00 00 00             ; CALL >IN (008b)
112a: 02                         ; FETCH
112b: 0b 12 07 00 00             ; CALL getOneWord (0712)
1130: 0b 8b 00 00 00             ; CALL >IN (008b)
1135: 03                         ; STORE
1136: 06                         ; DUP
1137: 0f                         ; CFETCH
1138: 09 58 11 00 00             ; JMPZ 1158
113d: 0b b3 10 00 00             ; CALL Define-Word (10b3)
1142: 0e 18                      ; CLITERAL 24
1144: 0b 24 01 00 00             ; CALL C, (0124)
1149: 0b 18 01 00 00             ; CALL LAST (0118)
114e: 0b 3c 01 00 00             ; CALL , (013c)
1153: 08 5a 11 00 00             ; JMP 115a
1158: 05                         ; DROP
1159: fe                         ; RESET
115a: 0c                         ; RET
;
115b: 18 b0 f0 00 00             ; DICTP : (f0b0)
1160: 0b 03 11 00 00             ; CALL CREATE-NAME (1103)
1165: 0b 6d 00 00 00             ; CALL STATE (006d)
116a: 0b 80 03 00 00             ; CALL ON (0380)
116f: 0c                         ; RET
;
1170: 18 9e f0 00 00             ; DICTP :NONAME (f09e)
1175: 0b 0c 01 00 00             ; CALL HERE (010c)
117a: 0b 6d 00 00 00             ; CALL STATE (006d)
117f: 0b 80 03 00 00             ; CALL ON (0380)
1184: 0c                         ; RET
;
1185: 18 92 f0 00 00             ; DICTP ; (f092)
118a: 0b e3 01 00 00             ; CALL RET (01e3)
118f: 0b 6d 00 00 00             ; CALL STATE (006d)
1194: 0b 8a 03 00 00             ; CALL OFF (038a)
1199: 0c                         ; RET
;
119a: 18 7d f0 00 00             ; DICTP ForgetLast (f07d)
119f: 0b 18 01 00 00             ; CALL LAST (0118)
11a4: 0e 04                      ; CLITERAL 4
11a6: 11                         ; ADD
11a7: 02                         ; FETCH
11a8: 0b 40 00 00 00             ; CALL (HERE) (0040)
11ad: 03                         ; STORE
11ae: 0b 18 01 00 00             ; CALL LAST (0118)
11b3: 02                         ; FETCH
11b4: 0b 4f 00 00 00             ; CALL (LAST) (004f)
11b9: 03                         ; STORE
11ba: 0c                         ; RET
;
11bb: 18 68 f0 00 00             ; DICTP resetState (f068)
11c0: 0b 94 03 00 00             ; CALL ?COMPILING (0394)
11c5: 09 cf 11 00 00             ; JMPZ 11cf
11ca: 0b 9a 11 00 00             ; CALL ForgetLast (119a)
11cf: 0b 6d 00 00 00             ; CALL STATE (006d)
11d4: 0b 8a 03 00 00             ; CALL OFF (038a)
11d9: 0b 56 03 00 00             ; CALL DECIMAL (0356)
11de: 0c                         ; RET
;
11df: 18 58 f0 00 00             ; DICTP ALLOT (f058)
11e4: 0b 0c 01 00 00             ; CALL HERE (010c)
11e9: 11                         ; ADD
11ea: 0b 40 00 00 00             ; CALL (HERE) (0040)
11ef: 03                         ; STORE
11f0: 0c                         ; RET
;
11f1: 18 4c f0 00 00             ; DICTP ? (f04c)
11f6: 02                         ; FETCH
11f7: 0b f5 09 00 00             ; CALL . (09f5)
11fc: 0c                         ; RET
;
11fd: 18 3f f0 00 00             ; DICTP C? (f03f)
1202: 0f                         ; CFETCH
1203: 0b f5 09 00 00             ; CALL . (09f5)
1208: 0c                         ; RET
;
1209: 18 30 f0 00 00             ; DICTP FREE (f030)
120e: 0b 18 01 00 00             ; CALL LAST (0118)
1213: 0b 0c 01 00 00             ; CALL HERE (010c)
1218: 12                         ; SUB
1219: 0c                         ; RET
;
121a: 18 20 f0 00 00             ; DICTP .FREE (f020)
121f: 0b 09 12 00 00             ; CALL FREE (1209)
1224: 0b db 09 00 00             ; CALL (.) (09db)
1229: 07 0c 20 62 79 74 65 73 20 66 72 65 65 2e 00 ; SLITERAL (122a) [ bytes free.]
1238: 0b eb 05 00 00             ; CALL CT (05eb)
123d: 0c                         ; RET
;
123e: 18 0d f0 00 00             ; DICTP mainLoop (f00d)
1243: 0b bb 11 00 00             ; CALL resetState (11bb)
1248: 0b 8d 06 00 00             ; CALL tmp-init (068d)
124d: 0b 94 03 00 00             ; CALL ?COMPILING (0394)
1252: 0e 00                      ; CLITERAL 0
1254: 16                         ; EQ
1255: 09 6a 12 00 00             ; JMPZ 126a
125a: 07 03 20 4f 4b 00          ; SLITERAL (125b) [ OK]
1260: 0b eb 05 00 00             ; CALL CT (05eb)
1265: 0b 3f 0b 00 00             ; CALL .S (0b3f)
126a: 0e 0d                      ; CLITERAL 13
126c: 19                         ; EMIT
126d: 0e 0a                      ; CLITERAL 10
126f: 19                         ; EMIT
1270: 0b a9 0f 00 00             ; CALL getLine (0fa9)
1275: 2c                         ; INC
1276: 0b 8b 00 00 00             ; CALL >IN (008b)
127b: 03                         ; STORE
127c: 0b 0c 0f 00 00             ; CALL executeInput (0f0c)
1281: 0e 20                      ; CLITERAL 32
1283: 19                         ; EMIT
1284: 08 48 12 00 00             ; JMP 1248
1289: 0c                         ; RET
;
128a: 18 fe ef 00 00             ; DICTP main (effe)
128f: 0b 6d 00 00 00             ; CALL STATE (006d)
1294: 02                         ; FETCH
1295: 0e 63                      ; CLITERAL 99
1297: 16                         ; EQ
1298: 09 b5 12 00 00             ; JMPZ 12b5
129d: 0b 6d 00 00 00             ; CALL STATE (006d)
12a2: 0b 8a 03 00 00             ; CALL OFF (038a)
12a7: 07 06 48 65 6c 6c 6f 2e 00 ; SLITERAL (12a8) [Hello.]
12b0: 0b eb 05 00 00             ; CALL CT (05eb)
12b5: 0b 3e 12 00 00             ; CALL mainLoop (123e)
12ba: 0c                         ; RET
;
12bb: 18 e7 ef 00 00             ; DICTP file-getLine (efe7)
12c0: 0b 50 0f 00 00             ; CALL Pad (0f50)
12c5: 04                         ; SWAP
12c6: 0e c8                      ; CLITERAL 200
12c8: 04                         ; SWAP
12c9: 1e                         ; FREADLINE
12ca: 0b 50 0f 00 00             ; CALL Pad (0f50)
12cf: 04                         ; SWAP
12d0: 0c                         ; RET
;
12d1: 18 d8 ef 00 00             ; DICTP load (efd8)
12d6: 0e 00                      ; CLITERAL 0
12d8: 0e 00                      ; CLITERAL 0
12da: 1c                         ; FOPEN
12db: 0e 00                      ; CLITERAL 0
12dd: 16                         ; EQ
12de: 09 fd 12 00 00             ; JMPZ 12fd
12e3: 07 11 43 61 6e 6e 6f 74 20 6f 70 65 6e 20 66 69 6c 65 2e 00 ; SLITERAL (12e4) [Cannot open file.]
12f7: 0b eb 05 00 00             ; CALL CT (05eb)
12fc: 0c                         ; RET
12fd: 0b c7 00 00 00             ; CALL INPUT-FP (00c7)
1302: 03                         ; STORE
1303: 0b c7 00 00 00             ; CALL INPUT-FP (00c7)
1308: 02                         ; FETCH
1309: 0b bb 12 00 00             ; CALL file-getLine (12bb)
130e: 09 24 13 00 00             ; JMPZ 1324
1313: 2c                         ; INC
1314: 0b 8b 00 00 00             ; CALL >IN (008b)
1319: 03                         ; STORE
131a: 0b 0c 0f 00 00             ; CALL executeInput (0f0c)
131f: 08 37 13 00 00             ; JMP 1337
1324: 05                         ; DROP
1325: 0b c7 00 00 00             ; CALL INPUT-FP (00c7)
132a: 02                         ; FETCH
132b: 20                         ; FCLOSE
132c: 0b c7 00 00 00             ; CALL INPUT-FP (00c7)
1331: 0b 8a 03 00 00             ; CALL OFF (038a)
1336: 0c                         ; RET
1337: 08 03 13 00 00             ; JMP 1303
133c: 0c                         ; RET
;
133d: 18 c4 ef 00 00             ; DICTP STR.EMPTY (efc4)
1342: 0e 00                      ; CLITERAL 0
1344: 1a                         ; OVER
1345: 03                         ; STORE
1346: 0c                         ; RET
;
1347: 18 b2 ef 00 00             ; DICTP STR.LEN (efb2)
134c: 06                         ; DUP
134d: 0f                         ; CFETCH
134e: 0c                         ; RET
;
134f: 18 9f ef 00 00             ; DICTP STR.CATC (ef9f)
1354: 1a                         ; OVER
1355: 06                         ; DUP
1356: 0b 6a 05 00 00             ; CALL C++ (056a)
135b: 06                         ; DUP
135c: 0f                         ; CFETCH
135d: 11                         ; ADD
135e: 0e 00                      ; CLITERAL 0
1360: 1a                         ; OVER
1361: 2c                         ; INC
1362: 10                         ; CSTORE
1363: 10                         ; CSTORE
1364: 0c                         ; RET
;
1365: 18 88 ef 00 00             ; DICTP STR.NULLTERM (ef88)
136a: 06                         ; DUP
136b: 06                         ; DUP
136c: 0f                         ; CFETCH
136d: 11                         ; ADD
136e: 2c                         ; INC
136f: 0e 00                      ; CLITERAL 0
1371: 04                         ; SWAP
1372: 10                         ; CSTORE
1373: 0c                         ; RET
;
1374: 18 7b ef 00 00             ; DICTP I" (ef7b)
1379: 0b 0c 01 00 00             ; CALL HERE (010c)
137e: 0e 64                      ; CLITERAL 100
1380: 11                         ; ADD
1381: 0e 00                      ; CLITERAL 0
1383: 1a                         ; OVER
1384: 03                         ; STORE
1385: 0b 8b 00 00 00             ; CALL >IN (008b)
138a: 02                         ; FETCH
138b: 0f                         ; CFETCH
138c: 06                         ; DUP
138d: 0e 00                      ; CLITERAL 0
138f: 16                         ; EQ
1390: 09 b1 13 00 00             ; JMPZ 13b1
1395: 07 10 6d 69 73 73 69 6e 67 20 63 6c 6f 73 69 6e 67 20 00 ; SLITERAL (1396) [missing closing ]
13a8: 0b eb 05 00 00             ; CALL CT (05eb)
13ad: 0e 22                      ; CLITERAL 34
13af: 19                         ; EMIT
13b0: fe                         ; RESET
13b1: 0b 8b 00 00 00             ; CALL >IN (008b)
13b6: 0b 50 05 00 00             ; CALL ++ (0550)
13bb: 06                         ; DUP
13bc: 0e 22                      ; CLITERAL 34
13be: 16                         ; EQ
13bf: 09 c6 13 00 00             ; JMPZ 13c6
13c4: 05                         ; DROP
13c5: 0c                         ; RET
13c6: 0b 4f 13 00 00             ; CALL STR.CATC (134f)
13cb: 08 85 13 00 00             ; JMP 1385
13d0: 0c                         ; RET
;
13d1: 18 6f ef 00 00             ; DICTP " (ef6f)
13d6: 0b 94 03 00 00             ; CALL ?COMPILING (0394)
13db: 0e 00                      ; CLITERAL 0
13dd: 16                         ; EQ
13de: 09 e9 13 00 00             ; JMPZ 13e9
13e3: 0b 74 13 00 00             ; CALL I" (1374)
13e8: 0c                         ; RET
13e9: 0b a2 01 00 00             ; CALL SLITERAL (01a2)
13ee: 0b 0c 01 00 00             ; CALL HERE (010c)
13f3: 0e 00                      ; CLITERAL 0
13f5: 0b 24 01 00 00             ; CALL C, (0124)
13fa: 0b 8b 00 00 00             ; CALL >IN (008b)
13ff: 02                         ; FETCH
1400: 0f                         ; CFETCH
1401: 06                         ; DUP
1402: 0e 00                      ; CLITERAL 0
1404: 16                         ; EQ
1405: 09 32 14 00 00             ; JMPZ 1432
140a: 05                         ; DROP
140b: 2e                         ; DEC
140c: 0b 40 00 00 00             ; CALL (HERE) (0040)
1411: 03                         ; STORE
1412: 07 11 6d 69 73 73 69 6e 67 20 63 6c 6f 73 69 6e 67 20 27 00 ; SLITERAL (1413) [missing closing ']
1426: 0b eb 05 00 00             ; CALL CT (05eb)
142b: 0e 22                      ; CLITERAL 34
142d: 19                         ; EMIT
142e: 0e 27                      ; CLITERAL 39
1430: 19                         ; EMIT
1431: fe                         ; RESET
1432: 0b 8b 00 00 00             ; CALL >IN (008b)
1437: 0b 50 05 00 00             ; CALL ++ (0550)
143c: 06                         ; DUP
143d: 0e 22                      ; CLITERAL 34
143f: 16                         ; EQ
1440: 09 58 14 00 00             ; JMPZ 1458
1445: 05                         ; DROP
1446: 0b 0c 01 00 00             ; CALL HERE (010c)
144b: 0e 00                      ; CLITERAL 0
144d: 0b 24 01 00 00             ; CALL C, (0124)
1452: 1a                         ; OVER
1453: 12                         ; SUB
1454: 2e                         ; DEC
1455: 04                         ; SWAP
1456: 10                         ; CSTORE
1457: 0c                         ; RET
1458: 0b 24 01 00 00             ; CALL C, (0124)
145d: 08 fa 13 00 00             ; JMP 13fa
1462: 0c                         ; RET
;
1463: 18 62 ef 00 00             ; DICTP ll (ef62)
1468: 07 09 6c 6f 61 64 73 2e 34 74 68 00 ; SLITERAL (1469) [loads.4th]
1474: 0b d1 12 00 00             ; CALL load (12d1)
1479: 0c                         ; RET
;
147a: 18 4f ef 00 00             ; DICTP sys-info (ef4f)
147f: 0b b1 0b 00 00             ; CALL .(MEM_SZ) (0bb1)
1484: 0e 2c                      ; CLITERAL 44
1486: 19                         ; EMIT
1487: 0e 20                      ; CLITERAL 32
1489: 19                         ; EMIT
148a: 0b ea 0b 00 00             ; CALL .(HERE) (0bea)
148f: 0e 2c                      ; CLITERAL 44
1491: 19                         ; EMIT
1492: 0e 20                      ; CLITERAL 32
1494: 19                         ; EMIT
1495: 0b 21 0c 00 00             ; CALL .(LAST) (0c21)
149a: 0e 2c                      ; CLITERAL 44
149c: 19                         ; EMIT
149d: 0e 20                      ; CLITERAL 32
149f: 19                         ; EMIT
14a0: 0b 1a 12 00 00             ; CALL .FREE (121a)
14a5: 0e 0d                      ; CLITERAL 13
14a7: 19                         ; EMIT
14a8: 0e 0a                      ; CLITERAL 10
14aa: 19                         ; EMIT
14ab: 0c                         ; RET
;
14ac: 18 3c ef 00 00             ; DICTP VARIABLE (ef3c)
14b1: 0b 03 11 00 00             ; CALL CREATE-NAME (1103)
14b6: 0b 0c 01 00 00             ; CALL HERE (010c)
14bb: 0e 02                      ; CLITERAL 2
14bd: 11                         ; ADD
14be: 0e 04                      ; CLITERAL 4
14c0: 11                         ; ADD
14c1: 0b 72 01 00 00             ; CALL LITERAL (0172)
14c6: 0b 3c 01 00 00             ; CALL , (013c)
14cb: 0b e3 01 00 00             ; CALL RET (01e3)
14d0: 0e 00                      ; CLITERAL 0
14d2: 0b 3c 01 00 00             ; CALL , (013c)
14d7: 0c                         ; RET
;
; End of code, Dictionary:
;
ef3c: 4f ef 00 00                ; VARIABLE - (next: ef4f sys-info)
ef40: ac 14 00 00 00             ; XT=14ac, flags=00
ef45: 08 56 41 52 49 41 42 4c 45 00 ; 8, VARIABLE
;
ef4f: 62 ef 00 00                ; sys-info - (next: ef62 ll)
ef53: 7a 14 00 00 00             ; XT=147a, flags=00
ef58: 08 73 79 73 2d 69 6e 66 6f 00 ; 8, sys-info
;
ef62: 6f ef 00 00                ; ll - (next: ef6f ")
ef66: 63 14 00 00 00             ; XT=1463, flags=00
ef6b: 02 6c 6c 00                ; 2, ll
;
ef6f: 7b ef 00 00                ; " - (next: ef7b I")
ef73: d1 13 00 00 01             ; XT=13d1, flags=01
ef78: 01 22 00                   ; 1, "
;
ef7b: 88 ef 00 00                ; I" - (next: ef88 STR.NULLTERM)
ef7f: 74 13 00 00 00             ; XT=1374, flags=00
ef84: 02 49 22 00                ; 2, I"
;
ef88: 9f ef 00 00                ; STR.NULLTERM - (next: ef9f STR.CATC)
ef8c: 65 13 00 00 00             ; XT=1365, flags=00
ef91: 0c 53 54 52 2e 4e 55 4c 4c 54 45 52 4d 00 ; 12, STR.NULLTERM
;
ef9f: b2 ef 00 00                ; STR.CATC - (next: efb2 STR.LEN)
efa3: 4f 13 00 00 00             ; XT=134f, flags=00
efa8: 08 53 54 52 2e 43 41 54 43 00 ; 8, STR.CATC
;
efb2: c4 ef 00 00                ; STR.LEN - (next: efc4 STR.EMPTY)
efb6: 47 13 00 00 02             ; XT=1347, flags=02
efbb: 07 53 54 52 2e 4c 45 4e 00 ; 7, STR.LEN
;
efc4: d8 ef 00 00                ; STR.EMPTY - (next: efd8 load)
efc8: 3d 13 00 00 02             ; XT=133d, flags=02
efcd: 09 53 54 52 2e 45 4d 50 54 59 00 ; 9, STR.EMPTY
;
efd8: e7 ef 00 00                ; load - (next: efe7 file-getLine)
efdc: d1 12 00 00 00             ; XT=12d1, flags=00
efe1: 04 6c 6f 61 64 00          ; 4, load
;
efe7: fe ef 00 00                ; file-getLine - (next: effe main)
efeb: bb 12 00 00 00             ; XT=12bb, flags=00
eff0: 0c 66 69 6c 65 2d 67 65 74 4c 69 6e 65 00 ; 12, file-getLine
;
effe: 0d f0 00 00                ; main - (next: f00d mainLoop)
f002: 8a 12 00 00 00             ; XT=128a, flags=00
f007: 04 6d 61 69 6e 00          ; 4, main
;
f00d: 20 f0 00 00                ; mainLoop - (next: f020 .FREE)
f011: 3e 12 00 00 00             ; XT=123e, flags=00
f016: 08 6d 61 69 6e 4c 6f 6f 70 00 ; 8, mainLoop
;
f020: 30 f0 00 00                ; .FREE - (next: f030 FREE)
f024: 1a 12 00 00 00             ; XT=121a, flags=00
f029: 05 2e 46 52 45 45 00       ; 5, .FREE
;
f030: 3f f0 00 00                ; FREE - (next: f03f C?)
f034: 09 12 00 00 00             ; XT=1209, flags=00
f039: 04 46 52 45 45 00          ; 4, FREE
;
f03f: 4c f0 00 00                ; C? - (next: f04c ?)
f043: fd 11 00 00 00             ; XT=11fd, flags=00
f048: 02 43 3f 00                ; 2, C?
;
f04c: 58 f0 00 00                ; ? - (next: f058 ALLOT)
f050: f1 11 00 00 00             ; XT=11f1, flags=00
f055: 01 3f 00                   ; 1, ?
;
f058: 68 f0 00 00                ; ALLOT - (next: f068 resetState)
f05c: df 11 00 00 00             ; XT=11df, flags=00
f061: 05 41 4c 4c 4f 54 00       ; 5, ALLOT
;
f068: 7d f0 00 00                ; resetState - (next: f07d ForgetLast)
f06c: bb 11 00 00 00             ; XT=11bb, flags=00
f071: 0a 72 65 73 65 74 53 74 61 74 65 00 ; 10, resetState
;
f07d: 92 f0 00 00                ; ForgetLast - (next: f092 ;)
f081: 9a 11 00 00 00             ; XT=119a, flags=00
f086: 0a 46 6f 72 67 65 74 4c 61 73 74 00 ; 10, ForgetLast
;
f092: 9e f0 00 00                ; ; - (next: f09e :NONAME)
f096: 85 11 00 00 01             ; XT=1185, flags=01
f09b: 01 3b 00                   ; 1, ;
;
f09e: b0 f0 00 00                ; :NONAME - (next: f0b0 :)
f0a2: 70 11 00 00 00             ; XT=1170, flags=00
f0a7: 07 3a 4e 4f 4e 41 4d 45 00 ; 7, :NONAME
;
f0b0: bc f0 00 00                ; : - (next: f0bc CREATE-NAME)
f0b4: 5b 11 00 00 00             ; XT=115b, flags=00
f0b9: 01 3a 00                   ; 1, :
;
f0bc: d2 f0 00 00                ; CREATE-NAME - (next: f0d2 Define-Word)
f0c0: 03 11 00 00 00             ; XT=1103, flags=00
f0c5: 0b 43 52 45 41 54 45 2d 4e 41 4d 45 00 ; 11, CREATE-NAME
;
f0d2: e8 f0 00 00                ; Define-Word - (next: f0e8 strcpy2c)
f0d6: b3 10 00 00 00             ; XT=10b3, flags=00
f0db: 0b 44 65 66 69 6e 65 2d 57 6f 72 64 00 ; 11, Define-Word
;
f0e8: fb f0 00 00                ; strcpy2c - (next: f0fb getLine)
f0ec: 7a 10 00 00 00             ; XT=107a, flags=00
f0f1: 08 73 74 72 63 70 79 32 63 00 ; 8, strcpy2c
;
f0fb: 0d f1 00 00                ; getLine - (next: f10d getLineFromFile)
f0ff: a9 0f 00 00 00             ; XT=0fa9, flags=00
f104: 07 67 65 74 4c 69 6e 65 00 ; 7, getLine
;
f10d: 27 f1 00 00                ; getLineFromFile - (next: f127 LoadingFromFile?)
f111: 88 0f 00 00 00             ; XT=0f88, flags=00
f116: 0f 67 65 74 4c 69 6e 65 46 72 6f 6d 46 69 6c 65 00 ; 15, getLineFromFile
;
f127: 42 f1 00 00                ; LoadingFromFile? - (next: f142 Pad)
f12b: 7c 0f 00 00 00             ; XT=0f7c, flags=00
f130: 10 4c 6f 61 64 69 6e 67 46 72 6f 6d 46 69 6c 65 3f 00 ; 16, LoadingFromFile?
;
f142: 50 f1 00 00                ; Pad - (next: f150 executeInput)
f146: 50 0f 00 00 00             ; XT=0f50, flags=00
f14b: 03 50 61 64 00             ; 3, Pad
;
f150: 67 f1 00 00                ; executeInput - (next: f167 executeWord)
f154: 0c 0f 00 00 00             ; XT=0f0c, flags=00
f159: 0c 65 78 65 63 75 74 65 49 6e 70 75 74 00 ; 12, executeInput
;
f167: 7d f1 00 00                ; executeWord - (next: f17d [COMPILE])
f16b: 6b 0e 00 00 00             ; XT=0e6b, flags=00
f170: 0b 65 78 65 63 75 74 65 57 6f 72 64 00 ; 11, executeWord
;
f17d: 91 f1 00 00                ; [COMPILE] - (next: f191 cstr,)
f181: 47 0e 00 00 00             ; XT=0e47, flags=00
f186: 09 5b 43 4f 4d 50 49 4c 45 5d 00 ; 9, [COMPILE]
;
f191: a1 f1 00 00                ; cstr, - (next: f1a1 strlen)
f195: 36 0e 00 00 00             ; XT=0e36, flags=00
f19a: 05 63 73 74 72 2c 00       ; 5, cstr,
;
f1a1: b2 f1 00 00                ; strlen - (next: f1b2 Copy.INLINE)
f1a5: 17 0e 00 00 00             ; XT=0e17, flags=00
f1aa: 06 73 74 72 6c 65 6e 00    ; 6, strlen
;
f1b2: c8 f1 00 00                ; Copy.INLINE - (next: f1c8 DOES>)
f1b6: f8 0d 00 00 00             ; XT=0df8, flags=00
f1bb: 0b 43 6f 70 79 2e 49 4e 4c 49 4e 45 00 ; 11, Copy.INLINE
;
f1c8: d8 f1 00 00                ; DOES> - (next: f1d8 (inline))
f1cc: e3 0d 00 00 00             ; XT=0de3, flags=00
f1d1: 05 44 4f 45 53 3e 00       ; 5, DOES>
;
f1d8: eb f1 00 00                ; (inline) - (next: f1eb find.ret)
f1dc: c2 0d 00 00 00             ; XT=0dc2, flags=00
f1e1: 08 28 69 6e 6c 69 6e 65 29 00 ; 8, (inline)
;
f1eb: fe f1 00 00                ; find.ret - (next: f1fe EXECUTE)
f1ef: ab 0d 00 00 00             ; XT=0dab, flags=00
f1f4: 08 66 69 6e 64 2e 72 65 74 00 ; 8, find.ret
;
f1fe: 10 f2 00 00                ; EXECUTE - (next: f210 .lastx)
f202: a2 0d 00 00 00             ; XT=0da2, flags=00
f207: 07 45 58 45 43 55 54 45 00 ; 7, EXECUTE
;
f210: 21 f2 00 00                ; .lastx - (next: f221 NUM-WORDS)
f214: 80 0d 00 00 00             ; XT=0d80, flags=00
f219: 06 2e 6c 61 73 74 78 00    ; 6, .lastx
;
f221: 35 f2 00 00                ; NUM-WORDS - (next: f235 WORDSV)
f225: 56 0d 00 00 00             ; XT=0d56, flags=00
f22a: 09 4e 55 4d 2d 57 4f 52 44 53 00 ; 9, NUM-WORDS
;
f235: 46 f2 00 00                ; WORDSV - (next: f246 .WORD-LONG)
f239: 24 0d 00 00 00             ; XT=0d24, flags=00
f23e: 06 57 4f 52 44 53 56 00    ; 6, WORDSV
;
f246: 5b f2 00 00                ; .WORD-LONG - (next: f25b WORDS)
f24a: 94 0c 00 00 00             ; XT=0c94, flags=00
f24f: 0a 2e 57 4f 52 44 2d 4c 4f 4e 47 00 ; 10, .WORD-LONG
;
f25b: 6b f2 00 00                ; WORDS - (next: f26b .WORD-SHORT)
f25f: 6d 0c 00 00 00             ; XT=0c6d, flags=00
f264: 05 57 4f 52 44 53 00       ; 5, WORDS
;
f26b: 81 f2 00 00                ; .WORD-SHORT - (next: f281 .(LAST))
f26f: 58 0c 00 00 00             ; XT=0c58, flags=00
f274: 0b 2e 57 4f 52 44 2d 53 48 4f 52 54 00 ; 11, .WORD-SHORT
;
f281: 93 f2 00 00                ; .(LAST) - (next: f293 .(HERE))
f285: 21 0c 00 00 00             ; XT=0c21, flags=00
f28a: 07 2e 28 4c 41 53 54 29 00 ; 7, .(LAST)
;
f293: a5 f2 00 00                ; .(HERE) - (next: f2a5 .(MEM_SZ))
f297: ea 0b 00 00 00             ; XT=0bea, flags=00
f29c: 07 2e 28 48 45 52 45 29 00 ; 7, .(HERE)
;
f2a5: b9 f2 00 00                ; .(MEM_SZ) - (next: f2b9 .S)
f2a9: b1 0b 00 00 00             ; XT=0bb1, flags=00
f2ae: 09 2e 28 4d 45 4d 5f 53 5a 29 00 ; 9, .(MEM_SZ)
;
f2b9: c6 f2 00 00                ; .S - (next: f2c6 MAX)
f2bd: 3f 0b 00 00 00             ; XT=0b3f, flags=00
f2c2: 02 2e 53 00                ; 2, .S
;
f2c6: d4 f2 00 00                ; MAX - (next: f2d4 MIN)
f2ca: 2f 0b 00 00 00             ; XT=0b2f, flags=00
f2cf: 03 4d 41 58 00             ; 3, MAX
;
f2d4: e2 f2 00 00                ; MIN - (next: f2e2 BINARY.)
f2d8: 1f 0b 00 00 00             ; XT=0b1f, flags=00
f2dd: 03 4d 49 4e 00             ; 3, MIN
;
f2e2: f4 f2 00 00                ; BINARY. - (next: f2f4 DECIMAL.3)
f2e6: 02 0b 00 00 00             ; XT=0b02, flags=00
f2eb: 07 42 49 4e 41 52 59 2e 00 ; 7, BINARY.
;
f2f4: 08 f3 00 00                ; DECIMAL.3 - (next: f308 DECIMAL.)
f2f8: e5 0a 00 00 00             ; XT=0ae5, flags=00
f2fd: 09 44 45 43 49 4d 41 4c 2e 33 00 ; 9, DECIMAL.3
;
f308: 1b f3 00 00                ; DECIMAL. - (next: f31b HEX.4)
f30c: c8 0a 00 00 00             ; XT=0ac8, flags=00
f311: 08 44 45 43 49 4d 41 4c 2e 00 ; 8, DECIMAL.
;
f31b: 2b f3 00 00                ; HEX.4 - (next: f32b HEX.2)
f31f: ab 0a 00 00 00             ; XT=0aab, flags=00
f324: 05 48 45 58 2e 34 00       ; 5, HEX.4
;
f32b: 3b f3 00 00                ; HEX.2 - (next: f33b HEX.)
f32f: 8e 0a 00 00 00             ; XT=0a8e, flags=00
f334: 05 48 45 58 2e 32 00       ; 5, HEX.2
;
f33b: 4a f3 00 00                ; HEX. - (next: f34a .4)
f33f: 71 0a 00 00 00             ; XT=0a71, flags=00
f344: 04 48 45 58 2e 00          ; 4, HEX.
;
f34a: 57 f3 00 00                ; .4 - (next: f357 .3)
f34e: 48 0a 00 00 00             ; XT=0a48, flags=00
f353: 02 2e 34 00                ; 2, .4
;
f357: 64 f3 00 00                ; .3 - (next: f364 .2)
f35b: 24 0a 00 00 00             ; XT=0a24, flags=00
f360: 02 2e 33 00                ; 2, .3
;
f364: 71 f3 00 00                ; .2 - (next: f371 .)
f368: 05 0a 00 00 00             ; XT=0a05, flags=00
f36d: 02 2e 32 00                ; 2, .2
;
f371: 7d f3 00 00                ; . - (next: f37d (.))
f375: f5 09 00 00 00             ; XT=09f5, flags=00
f37a: 01 2e 00                   ; 1, .
;
f37d: 8b f3 00 00                ; (.) - (next: f38b #P)
f381: db 09 00 00 00             ; XT=09db, flags=00
f386: 03 28 2e 29 00             ; 3, (.)
;
f38b: 98 f3 00 00                ; #P - (next: f398 #P-)
f38f: c5 09 00 00 00             ; XT=09c5, flags=00
f394: 02 23 50 00                ; 2, #P
;
f398: a6 f3 00 00                ; #P- - (next: f3a6 #>)
f39c: b0 09 00 00 00             ; XT=09b0, flags=00
f3a1: 03 23 50 2d 00             ; 3, #P-
;
f3a6: b3 f3 00 00                ; #> - (next: f3b3 #S)
f3aa: aa 09 00 00 00             ; XT=09aa, flags=00
f3af: 02 23 3e 00                ; 2, #>
;
f3b3: c0 f3 00 00                ; #S - (next: f3c0 #)
f3b7: 96 09 00 00 00             ; XT=0996, flags=00
f3bc: 02 23 53 00                ; 2, #S
;
f3c0: cc f3 00 00                ; # - (next: f3cc <#)
f3c4: 6e 09 00 00 00             ; XT=096e, flags=00
f3c9: 01 23 00                   ; 1, #
;
f3cc: d9 f3 00 00                ; <# - (next: f3d9 SPACE)
f3d0: 39 09 00 00 00             ; XT=0939, flags=00
f3d5: 02 3c 23 00                ; 2, <#
;
f3d9: e9 f3 00 00                ; SPACE - (next: f3e9 isNumber?)
f3dd: 30 09 00 00 00             ; XT=0930, flags=00
f3e2: 05 53 50 41 43 45 00       ; 5, SPACE
;
f3e9: fd f3 00 00                ; isNumber? - (next: f3fd ABS)
f3ed: d0 08 00 00 00             ; XT=08d0, flags=00
f3f2: 09 69 73 4e 75 6d 62 65 72 3f 00 ; 9, isNumber?
;
f3fd: 0b f4 00 00                ; ABS - (next: f40b NEGATE)
f401: bc 08 00 00 00             ; XT=08bc, flags=00
f406: 03 41 42 53 00             ; 3, ABS
;
f40b: 1c f4 00 00                ; NEGATE - (next: f41c isNumChar?)
f40f: b2 08 00 00 00             ; XT=08b2, flags=00
f414: 06 4e 45 47 41 54 45 00    ; 6, NEGATE
;
f41c: 31 f4 00 00                ; isNumChar? - (next: f431 isHEX?)
f420: 61 08 00 00 00             ; XT=0861, flags=00
f425: 0a 69 73 4e 75 6d 43 68 61 72 3f 00 ; 10, isNumChar?
;
f431: 42 f4 00 00                ; isHEX? - (next: f442 findInDict)
f435: 52 08 00 00 00             ; XT=0852, flags=00
f43a: 06 69 73 48 45 58 3f 00    ; 6, isHEX?
;
f442: 57 f4 00 00                ; findInDict - (next: f457 DICT.GetINLINE)
f446: 09 08 00 00 00             ; XT=0809, flags=00
f44b: 0a 66 69 6e 64 49 6e 44 69 63 74 00 ; 10, findInDict
;
f457: 70 f4 00 00                ; DICT.GetINLINE - (next: f470 DICT.GetIMMEDIATE)
f45b: f9 07 00 00 00             ; XT=07f9, flags=00
f460: 0e 44 49 43 54 2e 47 65 74 49 4e 4c 49 4e 45 00 ; 14, DICT.GetINLINE
;
f470: 8c f4 00 00                ; DICT.GetIMMEDIATE - (next: f48c FLAGS.ISINLINE?)
f474: e9 07 00 00 00             ; XT=07e9, flags=00
f479: 11 44 49 43 54 2e 47 65 74 49 4d 4d 45 44 49 41 54 45 00 ; 17, DICT.GetIMMEDIATE
;
f48c: a6 f4 00 00                ; FLAGS.ISINLINE? - (next: f4a6 FLAGS.ISIMMEDIATE?)
f490: e0 07 00 00 00             ; XT=07e0, flags=00
f495: 0f 46 4c 41 47 53 2e 49 53 49 4e 4c 49 4e 45 3f 00 ; 15, FLAGS.ISINLINE?
;
f4a6: c3 f4 00 00                ; FLAGS.ISIMMEDIATE? - (next: f4c3 XT.GetDICTP)
f4aa: d7 07 00 00 00             ; XT=07d7, flags=00
f4af: 12 46 4c 41 47 53 2e 49 53 49 4d 4d 45 44 49 41 54 45 3f 00 ; 18, FLAGS.ISIMMEDIATE?
;
f4c3: d9 f4 00 00                ; XT.GetDICTP - (next: f4d9 DICTP>NAME)
f4c7: be 07 00 00 00             ; XT=07be, flags=00
f4cc: 0b 58 54 2e 47 65 74 44 49 43 54 50 00 ; 11, XT.GetDICTP
;
f4d9: ee f4 00 00                ; DICTP>NAME - (next: f4ee DICT.GetFLAGS)
f4dd: b1 07 00 00 00             ; XT=07b1, flags=00
f4e2: 0a 44 49 43 54 50 3e 4e 41 4d 45 00 ; 10, DICTP>NAME
;
f4ee: 06 f5 00 00                ; DICT.GetFLAGS - (next: f506 DICT.GetXT)
f4f2: a5 07 00 00 00             ; XT=07a5, flags=00
f4f7: 0d 44 49 43 54 2e 47 65 74 46 4c 41 47 53 00 ; 13, DICT.GetFLAGS
;
f506: 1b f5 00 00                ; DICT.GetXT - (next: f51b NAME>DICT)
f50a: 99 07 00 00 00             ; XT=0799, flags=00
f50f: 0a 44 49 43 54 2e 47 65 74 58 54 00 ; 10, DICT.GetXT
;
f51b: 2f f5 00 00                ; NAME>DICT - (next: f52f FLAGS>DICT)
f51f: 8c 07 00 00 00             ; XT=078c, flags=00
f524: 09 4e 41 4d 45 3e 44 49 43 54 00 ; 9, NAME>DICT
;
f52f: 44 f5 00 00                ; FLAGS>DICT - (next: f544 XT>DICT)
f533: 80 07 00 00 00             ; XT=0780, flags=00
f538: 0a 46 4c 41 47 53 3e 44 49 43 54 00 ; 10, FLAGS>DICT
;
f544: 56 f5 00 00                ; XT>DICT - (next: f556 NEXT>DICT)
f548: 77 07 00 00 00             ; XT=0777, flags=00
f54d: 07 58 54 3e 44 49 43 54 00 ; 7, XT>DICT
;
f556: 6a f5 00 00                ; NEXT>DICT - (next: f56a DICT>NAME)
f55a: 71 07 00 00 00             ; XT=0771, flags=00
f55f: 09 4e 45 58 54 3e 44 49 43 54 00 ; 9, NEXT>DICT
;
f56a: 7e f5 00 00                ; DICT>NAME - (next: f57e DICT>FLAGS)
f56e: 65 07 00 00 00             ; XT=0765, flags=00
f573: 09 44 49 43 54 3e 4e 41 4d 45 00 ; 9, DICT>NAME
;
f57e: 93 f5 00 00                ; DICT>FLAGS - (next: f593 DICT>XT)
f582: 59 07 00 00 00             ; XT=0759, flags=00
f587: 0a 44 49 43 54 3e 46 4c 41 47 53 00 ; 10, DICT>FLAGS
;
f593: a5 f5 00 00                ; DICT>XT - (next: f5a5 DICT>NEXT)
f597: 50 07 00 00 00             ; XT=0750, flags=00
f59c: 07 44 49 43 54 3e 58 54 00 ; 7, DICT>XT
;
f5a5: b9 f5 00 00                ; DICT>NEXT - (next: f5b9 getOneWord)
f5a9: 4a 07 00 00 00             ; XT=074a, flags=00
f5ae: 09 44 49 43 54 3e 4e 45 58 54 00 ; 9, DICT>NEXT
;
f5b9: ce f5 00 00                ; getOneWord - (next: f5ce skipWS)
f5bd: 12 07 00 00 00             ; XT=0712, flags=00
f5c2: 0a 67 65 74 4f 6e 65 57 6f 72 64 00 ; 10, getOneWord
;
f5ce: df f5 00 00                ; skipWS - (next: f5df getInput)
f5d2: e9 06 00 00 00             ; XT=06e9, flags=00
f5d7: 06 73 6b 69 70 57 53 00    ; 6, skipWS
;
f5df: f2 f5 00 00                ; getInput - (next: f5f2 PAD)
f5e3: d3 06 00 00 00             ; XT=06d3, flags=00
f5e8: 08 67 65 74 49 6e 70 75 74 00 ; 8, getInput
;
f5f2: 00 f6 00 00                ; PAD - (next: f600 tmp-alloc)
f5f6: c1 06 00 00 00             ; XT=06c1, flags=00
f5fb: 03 50 41 44 00             ; 3, PAD
;
f600: 14 f6 00 00                ; tmp-alloc - (next: f614 tmp-cur)
f604: aa 06 00 00 00             ; XT=06aa, flags=00
f609: 09 74 6d 70 2d 61 6c 6c 6f 63 00 ; 9, tmp-alloc
;
f614: 26 f6 00 00                ; tmp-cur - (next: f626 tmp-init)
f618: 9e 06 00 00 00             ; XT=069e, flags=00
f61d: 07 74 6d 70 2d 63 75 72 00 ; 7, tmp-cur
;
f626: 39 f6 00 00                ; tmp-init - (next: f639 BETWEEN)
f62a: 8d 06 00 00 00             ; XT=068d, flags=00
f62f: 08 74 6d 70 2d 69 6e 69 74 00 ; 8, tmp-init
;
f639: 4b f6 00 00                ; BETWEEN - (next: f64b CR)
f63d: 75 06 00 00 00             ; XT=0675, flags=00
f642: 07 42 45 54 57 45 45 4e 00 ; 7, BETWEEN
;
f64b: 58 f6 00 00                ; CR - (next: f658 CRLF)
f64f: 69 06 00 00 02             ; XT=0669, flags=02
f654: 02 43 52 00                ; 2, CR
;
f658: 67 f6 00 00                ; CRLF - (next: f667 BL)
f65c: 5d 06 00 00 02             ; XT=065d, flags=02
f661: 04 43 52 4c 46 00          ; 4, CRLF
;
f667: 74 f6 00 00                ; BL - (next: f674 ()
f66b: 54 06 00 00 02             ; XT=0654, flags=02
f670: 02 42 4c 00                ; 2, BL
;
f674: 80 f6 00 00                ; ( - (next: f680 \)
f678: 0a 06 00 00 01             ; XT=060a, flags=01
f67d: 01 28 00                   ; 1, (
;
f680: 8c f6 00 00                ; \ - (next: f68c CT)
f684: fb 05 00 00 01             ; XT=05fb, flags=01
f689: 01 5c 00                   ; 1, \
;
f68c: 99 f6 00 00                ; CT - (next: f699 TYPE)
f690: eb 05 00 00 00             ; XT=05eb, flags=00
f695: 02 43 54 00                ; 2, CT
;
f699: a8 f6 00 00                ; TYPE - (next: f6a8 COUNT)
f69d: cd 05 00 00 00             ; XT=05cd, flags=00
f6a2: 04 54 59 50 45 00          ; 4, TYPE
;
f6a8: b8 f6 00 00                ; COUNT - (next: f6b8 NOT)
f6ac: c3 05 00 00 00             ; XT=05c3, flags=00
f6b1: 05 43 4f 55 4e 54 00       ; 5, COUNT
;
f6b8: c6 f6 00 00                ; NOT - (next: f6c6 FALSE)
f6bc: ba 05 00 00 02             ; XT=05ba, flags=02
f6c1: 03 4e 4f 54 00             ; 3, NOT
;
f6c6: d6 f6 00 00                ; FALSE - (next: f6d6 TRUE)
f6ca: b2 05 00 00 02             ; XT=05b2, flags=02
f6cf: 05 46 41 4c 53 45 00       ; 5, FALSE
;
f6d6: e5 f6 00 00                ; TRUE - (next: f6e5 >=)
f6da: a7 05 00 00 02             ; XT=05a7, flags=02
f6df: 04 54 52 55 45 00          ; 4, TRUE
;
f6e5: f2 f6 00 00                ; >= - (next: f6f2 <=)
f6e9: 9d 05 00 00 02             ; XT=059d, flags=02
f6ee: 02 3e 3d 00                ; 2, >=
;
f6f2: ff f6 00 00                ; <= - (next: f6ff <>)
f6f6: 93 05 00 00 02             ; XT=0593, flags=02
f6fb: 02 3c 3d 00                ; 2, <=
;
f6ff: 0c f7 00 00                ; <> - (next: f70c 0=)
f703: 89 05 00 00 02             ; XT=0589, flags=02
f708: 02 3c 3e 00                ; 2, <>
;
f70c: 19 f7 00 00                ; 0= - (next: f719 C--)
f710: 80 05 00 00 02             ; XT=0580, flags=02
f715: 02 30 3d 00                ; 2, 0=
;
f719: 27 f7 00 00                ; C-- - (next: f727 C++)
f71d: 75 05 00 00 00             ; XT=0575, flags=00
f722: 03 43 2d 2d 00             ; 3, C--
;
f727: 35 f7 00 00                ; C++ - (next: f735 --)
f72b: 6a 05 00 00 00             ; XT=056a, flags=00
f730: 03 43 2b 2b 00             ; 3, C++
;
f735: 42 f7 00 00                ; -- - (next: f742 ++)
f739: 5d 05 00 00 00             ; XT=055d, flags=00
f73e: 02 2d 2d 00                ; 2, --
;
f742: 4f f7 00 00                ; ++ - (next: f74f -!)
f746: 50 05 00 00 00             ; XT=0550, flags=00
f74b: 02 2b 2b 00                ; 2, ++
;
f74f: 5c f7 00 00                ; -! - (next: f75c +!)
f753: 44 05 00 00 00             ; XT=0544, flags=00
f758: 02 2d 21 00                ; 2, -!
;
f75c: 69 f7 00 00                ; +! - (next: f769 -=)
f760: 38 05 00 00 00             ; XT=0538, flags=00
f765: 02 2b 21 00                ; 2, +!
;
f769: 76 f7 00 00                ; -= - (next: f776 +=)
f76d: 2c 05 00 00 00             ; XT=052c, flags=00
f772: 02 2d 3d 00                ; 2, -=
;
f776: 83 f7 00 00                ; += - (next: f783 2/)
f77a: 21 05 00 00 00             ; XT=0521, flags=00
f77f: 02 2b 3d 00                ; 2, +=
;
f783: 90 f7 00 00                ; 2/ - (next: f790 2*)
f787: 16 05 00 00 02             ; XT=0516, flags=02
f78c: 02 32 2f 00                ; 2, 2/
;
f790: 9d f7 00 00                ; 2* - (next: f79d 1-)
f794: 0d 05 00 00 02             ; XT=050d, flags=02
f799: 02 32 2a 00                ; 2, 2*
;
f79d: aa f7 00 00                ; 1- - (next: f7aa 1+)
f7a1: 06 05 00 00 02             ; XT=0506, flags=02
f7a6: 02 31 2d 00                ; 2, 1-
;
f7aa: b7 f7 00 00                ; 1+ - (next: f7b7 MOD)
f7ae: ff 04 00 00 02             ; XT=04ff, flags=02
f7b3: 02 31 2b 00                ; 2, 1+
;
f7b7: c5 f7 00 00                ; MOD - (next: f7c5 /)
f7bb: f7 04 00 00 02             ; XT=04f7, flags=02
f7c0: 03 4d 4f 44 00             ; 3, MOD
;
f7c5: d1 f7 00 00                ; / - (next: f7d1 -ROT)
f7c9: ee 04 00 00 02             ; XT=04ee, flags=02
f7ce: 01 2f 00                   ; 1, /
;
f7d1: e0 f7 00 00                ; -ROT - (next: f7e0 ROT)
f7d5: e4 04 00 00 02             ; XT=04e4, flags=02
f7da: 04 2d 52 4f 54 00          ; 4, -ROT
;
f7e0: ee f7 00 00                ; ROT - (next: f7ee NIP)
f7e4: da 04 00 00 02             ; XT=04da, flags=02
f7e9: 03 52 4f 54 00             ; 3, ROT
;
f7ee: fc f7 00 00                ; NIP - (next: f7fc TUCK)
f7f2: d2 04 00 00 02             ; XT=04d2, flags=02
f7f7: 03 4e 49 50 00             ; 3, NIP
;
f7fc: 0b f8 00 00                ; TUCK - (next: f80b 2DROP)
f800: ca 04 00 00 02             ; XT=04ca, flags=02
f805: 04 54 55 43 4b 00          ; 4, TUCK
;
f80b: 1b f8 00 00                ; 2DROP - (next: f81b 2DUP)
f80f: c2 04 00 00 02             ; XT=04c2, flags=02
f814: 05 32 44 52 4f 50 00       ; 5, 2DROP
;
f81b: 2a f8 00 00                ; 2DUP - (next: f82a RDROP)
f81f: ba 04 00 00 02             ; XT=04ba, flags=02
f824: 04 32 44 55 50 00          ; 4, 2DUP
;
f82a: 3a f8 00 00                ; RDROP - (next: f83a R@)
f82e: b2 04 00 00 02             ; XT=04b2, flags=02
f833: 05 52 44 52 4f 50 00       ; 5, RDROP
;
f83a: 47 f8 00 00                ; R@ - (next: f847 DEBUG-OFF)
f83e: a9 04 00 00 02             ; XT=04a9, flags=02
f843: 02 52 40 00                ; 2, R@
;
f847: 5b f8 00 00                ; DEBUG-OFF - (next: f85b DEBUG-ON)
f84b: a0 04 00 00 02             ; XT=04a0, flags=02
f850: 09 44 45 42 55 47 2d 4f 46 46 00 ; 9, DEBUG-OFF
;
f85b: 6e f8 00 00                ; DEBUG-ON - (next: f86e TRACE-OFF)
f85f: 97 04 00 00 02             ; XT=0497, flags=02
f864: 08 44 45 42 55 47 2d 4f 4e 00 ; 8, DEBUG-ON
;
f86e: 82 f8 00 00                ; TRACE-OFF - (next: f882 TRACE-ON)
f872: 8e 04 00 00 02             ; XT=048e, flags=02
f877: 09 54 52 41 43 45 2d 4f 46 46 00 ; 9, TRACE-OFF
;
f882: 95 f8 00 00                ; TRACE-ON - (next: f895 MEM_SZ)
f886: 85 04 00 00 02             ; XT=0485, flags=02
f88b: 08 54 52 41 43 45 2d 4f 4e 00 ; 8, TRACE-ON
;
f895: a6 f8 00 00                ; MEM_SZ - (next: f8a6 LEAVE)
f899: 79 04 00 00 00             ; XT=0479, flags=00
f89e: 06 4d 45 4d 5f 53 5a 00    ; 6, MEM_SZ
;
f8a6: b6 f8 00 00                ; LEAVE - (next: f8b6 UNTIL)
f8aa: 64 04 00 00 01             ; XT=0464, flags=01
f8af: 05 4c 45 41 56 45 00       ; 5, LEAVE
;
f8b6: c6 f8 00 00                ; UNTIL - (next: f8c6 WHILE)
f8ba: 4a 04 00 00 01             ; XT=044a, flags=01
f8bf: 05 55 4e 54 49 4c 00       ; 5, UNTIL
;
f8c6: d6 f8 00 00                ; WHILE - (next: f8d6 AGAIN)
f8ca: 30 04 00 00 01             ; XT=0430, flags=01
f8cf: 05 57 48 49 4c 45 00       ; 5, WHILE
;
f8d6: e6 f8 00 00                ; AGAIN - (next: f8e6 BEGIN)
f8da: 16 04 00 00 01             ; XT=0416, flags=01
f8df: 05 41 47 41 49 4e 00       ; 5, AGAIN
;
f8e6: f6 f8 00 00                ; BEGIN - (next: f8f6 THEN)
f8ea: 01 04 00 00 01             ; XT=0401, flags=01
f8ef: 05 42 45 47 49 4e 00       ; 5, BEGIN
;
f8f6: 05 f9 00 00                ; THEN - (next: f905 ELSE)
f8fa: ea 03 00 00 01             ; XT=03ea, flags=01
f8ff: 04 54 48 45 4e 00          ; 4, THEN
;
f905: 14 f9 00 00                ; ELSE - (next: f914 IF)
f909: c1 03 00 00 01             ; XT=03c1, flags=01
f90e: 04 45 4c 53 45 00          ; 4, ELSE
;
f914: 21 f9 00 00                ; IF - (next: f921 ?COMPILING)
f918: a0 03 00 00 01             ; XT=03a0, flags=01
f91d: 02 49 46 00                ; 2, IF
;
f921: 36 f9 00 00                ; ?COMPILING - (next: f936 OFF)
f925: 94 03 00 00 00             ; XT=0394, flags=00
f92a: 0a 3f 43 4f 4d 50 49 4c 49 4e 47 00 ; 10, ?COMPILING
;
f936: 44 f9 00 00                ; OFF - (next: f944 ON)
f93a: 8a 03 00 00 00             ; XT=038a, flags=00
f93f: 03 4f 46 46 00             ; 3, OFF
;
f944: 51 f9 00 00                ; ON - (next: f951 BINARY)
f948: 80 03 00 00 00             ; XT=0380, flags=00
f94d: 02 4f 4e 00                ; 2, ON
;
f951: 62 f9 00 00                ; BINARY - (next: f962 OCTAL)
f955: 72 03 00 00 00             ; XT=0372, flags=00
f95a: 06 42 49 4e 41 52 59 00    ; 6, BINARY
;
f962: 72 f9 00 00                ; OCTAL - (next: f972 DECIMAL)
f966: 64 03 00 00 00             ; XT=0364, flags=00
f96b: 05 4f 43 54 41 4c 00       ; 5, OCTAL
;
f972: 84 f9 00 00                ; DECIMAL - (next: f984 HEX)
f976: 56 03 00 00 00             ; XT=0356, flags=00
f97b: 07 44 45 43 49 4d 41 4c 00 ; 7, DECIMAL
;
f984: 92 f9 00 00                ; HEX - (next: f992 FLAG_INLINE)
f988: 48 03 00 00 00             ; XT=0348, flags=00
f98d: 03 48 45 58 00             ; 3, HEX
;
f992: a8 f9 00 00                ; FLAG_INLINE - (next: f9a8 FLAG_IMMEDIATE)
f996: 40 03 00 00 02             ; XT=0340, flags=02
f99b: 0b 46 4c 41 47 5f 49 4e 4c 49 4e 45 00 ; 11, FLAG_INLINE
;
f9a8: c1 f9 00 00                ; FLAG_IMMEDIATE - (next: f9c1 CELLS)
f9ac: 38 03 00 00 02             ; XT=0338, flags=02
f9b1: 0e 46 4c 41 47 5f 49 4d 4d 45 44 49 41 54 45 00 ; 14, FLAG_IMMEDIATE
;
f9c1: d1 f9 00 00                ; CELLS - (next: f9d1 IMMEDIATE)
f9c5: 2f 03 00 00 02             ; XT=032f, flags=02
f9ca: 05 43 45 4c 4c 53 00       ; 5, CELLS
;
f9d1: e5 f9 00 00                ; IMMEDIATE - (next: f9e5 INLINE)
f9d5: 17 03 00 00 00             ; XT=0317, flags=00
f9da: 09 49 4d 4d 45 44 49 41 54 45 00 ; 9, IMMEDIATE
;
f9e5: f6 f9 00 00                ; INLINE - (next: f9f6 BYE)
f9e9: ff 02 00 00 00             ; XT=02ff, flags=00
f9ee: 06 49 4e 4c 49 4e 45 00    ; 6, INLINE
;
f9f6: 04 fa 00 00                ; BYE - (next: fa04 RESET)
f9fa: f8 02 00 00 02             ; XT=02f8, flags=02
f9ff: 03 42 59 45 00             ; 3, BYE
;
fa04: 14 fa 00 00                ; RESET - (next: fa14 BREAK)
fa08: f1 02 00 00 02             ; XT=02f1, flags=02
fa0d: 05 52 45 53 45 54 00       ; 5, RESET
;
fa14: 24 fa 00 00                ; BREAK - (next: fa24 NOP)
fa18: ea 02 00 00 02             ; XT=02ea, flags=02
fa1d: 05 42 52 45 41 4b 00       ; 5, BREAK
;
fa24: 32 fa 00 00                ; NOP - (next: fa32 GETTICK)
fa28: e3 02 00 00 02             ; XT=02e3, flags=02
fa2d: 03 4e 4f 50 00             ; 3, NOP
;
fa32: 44 fa 00 00                ; GETTICK - (next: fa44 DEC)
fa36: dc 02 00 00 02             ; XT=02dc, flags=02
fa3b: 07 47 45 54 54 49 43 4b 00 ; 7, GETTICK
;
fa44: 52 fa 00 00                ; DEC - (next: fa52 RDEPTH)
fa48: d5 02 00 00 02             ; XT=02d5, flags=02
fa4d: 03 44 45 43 00             ; 3, DEC
;
fa52: 63 fa 00 00                ; RDEPTH - (next: fa63 INC)
fa56: ce 02 00 00 02             ; XT=02ce, flags=02
fa5b: 06 52 44 45 50 54 48 00    ; 6, RDEPTH
;
fa63: 71 fa 00 00                ; INC - (next: fa71 /MOD)
fa67: c7 02 00 00 02             ; XT=02c7, flags=02
fa6c: 03 49 4e 43 00             ; 3, INC
;
fa71: 80 fa 00 00                ; /MOD - (next: fa80 COMPAREI)
fa75: c0 02 00 00 02             ; XT=02c0, flags=02
fa7a: 04 2f 4d 4f 44 00          ; 4, /MOD
;
fa80: 93 fa 00 00                ; COMPAREI - (next: fa93 GETCH)
fa84: b9 02 00 00 02             ; XT=02b9, flags=02
fa89: 08 43 4f 4d 50 41 52 45 49 00 ; 8, COMPAREI
;
fa93: a3 fa 00 00                ; GETCH - (next: faa3 DEPTH)
fa97: b2 02 00 00 02             ; XT=02b2, flags=02
fa9c: 05 47 45 54 43 48 00       ; 5, GETCH
;
faa3: b3 fa 00 00                ; DEPTH - (next: fab3 PICK)
faa7: ab 02 00 00 02             ; XT=02ab, flags=02
faac: 05 44 45 50 54 48 00       ; 5, DEPTH
;
fab3: c2 fa 00 00                ; PICK - (next: fac2 AND)
fab7: a4 02 00 00 02             ; XT=02a4, flags=02
fabc: 04 50 49 43 4b 00          ; 4, PICK
;
fac2: d0 fa 00 00                ; AND - (next: fad0 LOGLEVEL)
fac6: 9d 02 00 00 02             ; XT=029d, flags=02
facb: 03 41 4e 44 00             ; 3, AND
;
fad0: e3 fa 00 00                ; LOGLEVEL - (next: fae3 R>)
fad4: 96 02 00 00 02             ; XT=0296, flags=02
fad9: 08 4c 4f 47 4c 45 56 45 4c 00 ; 8, LOGLEVEL
;
fae3: f0 fa 00 00                ; R> - (next: faf0 >R)
fae7: 8f 02 00 00 02             ; XT=028f, flags=02
faec: 02 52 3e 00                ; 2, R>
;
faf0: fd fa 00 00                ; >R - (next: fafd FCLOSE)
faf4: 88 02 00 00 02             ; XT=0288, flags=02
faf9: 02 3e 52 00                ; 2, >R
;
fafd: 0e fb 00 00                ; FCLOSE - (next: fb0e FWRITE)
fb01: 81 02 00 00 02             ; XT=0281, flags=02
fb06: 06 46 43 4c 4f 53 45 00    ; 6, FCLOSE
;
fb0e: 1f fb 00 00                ; FWRITE - (next: fb1f FREADLINE)
fb12: 7a 02 00 00 02             ; XT=027a, flags=02
fb17: 06 46 57 52 49 54 45 00    ; 6, FWRITE
;
fb1f: 33 fb 00 00                ; FREADLINE - (next: fb33 FREAD)
fb23: 73 02 00 00 02             ; XT=0273, flags=02
fb28: 09 46 52 45 41 44 4c 49 4e 45 00 ; 9, FREADLINE
;
fb33: 43 fb 00 00                ; FREAD - (next: fb43 FOPEN)
fb37: 6c 02 00 00 02             ; XT=026c, flags=02
fb3c: 05 46 52 45 41 44 00       ; 5, FREAD
;
fb43: 53 fb 00 00                ; FOPEN - (next: fb53 COMPARE)
fb47: 65 02 00 00 02             ; XT=0265, flags=02
fb4c: 05 46 4f 50 45 4e 00       ; 5, FOPEN
;
fb53: 65 fb 00 00                ; COMPARE - (next: fb65 OVER)
fb57: 5e 02 00 00 02             ; XT=025e, flags=02
fb5c: 07 43 4f 4d 50 41 52 45 00 ; 7, COMPARE
;
fb65: 74 fb 00 00                ; OVER - (next: fb74 EMIT)
fb69: 57 02 00 00 02             ; XT=0257, flags=02
fb6e: 04 4f 56 45 52 00          ; 4, OVER
;
fb74: 83 fb 00 00                ; EMIT - (next: fb83 DICTP)
fb78: 50 02 00 00 02             ; XT=0250, flags=02
fb7d: 04 45 4d 49 54 00          ; 4, EMIT
;
fb83: 93 fb 00 00                ; DICTP - (next: fb93 >)
fb87: 43 02 00 00 02             ; XT=0243, flags=02
fb8c: 05 44 49 43 54 50 00       ; 5, DICTP
;
fb93: 9f fb 00 00                ; > - (next: fb9f =)
fb97: 3c 02 00 00 02             ; XT=023c, flags=02
fb9c: 01 3e 00                   ; 1, >
;
fb9f: ab fb 00 00                ; = - (next: fbab <)
fba3: 35 02 00 00 02             ; XT=0235, flags=02
fba8: 01 3d 00                   ; 1, =
;
fbab: b7 fb 00 00                ; < - (next: fbb7 /)
fbaf: 2e 02 00 00 02             ; XT=022e, flags=02
fbb4: 01 3c 00                   ; 1, <
;
fbb7: c3 fb 00 00                ; / - (next: fbc3 *)
fbbb: 27 02 00 00 02             ; XT=0227, flags=02
fbc0: 01 2f 00                   ; 1, /
;
fbc3: cf fb 00 00                ; * - (next: fbcf -)
fbc7: 20 02 00 00 02             ; XT=0220, flags=02
fbcc: 01 2a 00                   ; 1, *
;
fbcf: db fb 00 00                ; - - (next: fbdb +)
fbd3: 19 02 00 00 02             ; XT=0219, flags=02
fbd8: 01 2d 00                   ; 1, -
;
fbdb: e7 fb 00 00                ; + - (next: fbe7 C!)
fbdf: 12 02 00 00 02             ; XT=0212, flags=02
fbe4: 01 2b 00                   ; 1, +
;
fbe7: f4 fb 00 00                ; C! - (next: fbf4 C@)
fbeb: 0b 02 00 00 02             ; XT=020b, flags=02
fbf0: 02 43 21 00                ; 2, C!
;
fbf4: 01 fc 00 00                ; C@ - (next: fc01 CLITERAL)
fbf8: 04 02 00 00 02             ; XT=0204, flags=02
fbfd: 02 43 40 00                ; 2, C@
;
fc01: 14 fc 00 00                ; CLITERAL - (next: fc14 OR)
fc05: f7 01 00 00 02             ; XT=01f7, flags=02
fc0a: 08 43 4c 49 54 45 52 41 4c 00 ; 8, CLITERAL
;
fc14: 21 fc 00 00                ; OR - (next: fc21 RET)
fc18: f0 01 00 00 02             ; XT=01f0, flags=02
fc1d: 02 4f 52 00                ; 2, OR
;
fc21: 2f fc 00 00                ; RET - (next: fc2f CALL)
fc25: e3 01 00 00 00             ; XT=01e3, flags=00
fc2a: 03 52 45 54 00             ; 3, RET
;
fc2f: 3e fc 00 00                ; CALL - (next: fc3e JMPNZ)
fc33: d6 01 00 00 00             ; XT=01d6, flags=00
fc38: 04 43 41 4c 4c 00          ; 4, CALL
;
fc3e: 4e fc 00 00                ; JMPNZ - (next: fc4e JMPZ)
fc42: c9 01 00 00 00             ; XT=01c9, flags=00
fc47: 05 4a 4d 50 4e 5a 00       ; 5, JMPNZ
;
fc4e: 5d fc 00 00                ; JMPZ - (next: fc5d JMP)
fc52: bc 01 00 00 00             ; XT=01bc, flags=00
fc57: 04 4a 4d 50 5a 00          ; 4, JMPZ
;
fc5d: 6b fc 00 00                ; JMP - (next: fc6b SLITERAL)
fc61: af 01 00 00 00             ; XT=01af, flags=00
fc66: 03 4a 4d 50 00             ; 3, JMP
;
fc6b: 7e fc 00 00                ; SLITERAL - (next: fc7e DUP)
fc6f: a2 01 00 00 00             ; XT=01a2, flags=00
fc74: 08 53 4c 49 54 45 52 41 4c 00 ; 8, SLITERAL
;
fc7e: 8c fc 00 00                ; DUP - (next: fc8c DROP)
fc82: 9b 01 00 00 02             ; XT=019b, flags=02
fc87: 03 44 55 50 00             ; 3, DUP
;
fc8c: 9b fc 00 00                ; DROP - (next: fc9b SWAP)
fc90: 94 01 00 00 02             ; XT=0194, flags=02
fc95: 04 44 52 4f 50 00          ; 4, DROP
;
fc9b: aa fc 00 00                ; SWAP - (next: fcaa !)
fc9f: 8d 01 00 00 02             ; XT=018d, flags=02
fca4: 04 53 57 41 50 00          ; 4, SWAP
;
fcaa: b6 fc 00 00                ; ! - (next: fcb6 @)
fcae: 86 01 00 00 02             ; XT=0186, flags=02
fcb3: 01 21 00                   ; 1, !
;
fcb6: c2 fc 00 00                ; @ - (next: fcc2 LITERAL)
fcba: 7f 01 00 00 02             ; XT=017f, flags=02
fcbf: 01 40 00                   ; 1, @
;
fcc2: d4 fc 00 00                ; LITERAL - (next: fcd4 ])
fcc6: 72 01 00 00 00             ; XT=0172, flags=00
fccb: 07 4c 49 54 45 52 41 4c 00 ; 7, LITERAL
;
fcd4: e0 fc 00 00                ; ] - (next: fce0 [)
fcd8: 64 01 00 00 01             ; XT=0164, flags=01
fcdd: 01 5d 00                   ; 1, ]
;
fce0: ec fc 00 00                ; [ - (next: fcec ,)
fce4: 56 01 00 00 01             ; XT=0156, flags=01
fce9: 01 5b 00                   ; 1, [
;
fcec: f8 fc 00 00                ; , - (next: fcf8 C,)
fcf0: 3c 01 00 00 00             ; XT=013c, flags=00
fcf5: 01 2c 00                   ; 1, ,
;
fcf8: 05 fd 00 00                ; C, - (next: fd05 LAST)
fcfc: 24 01 00 00 00             ; XT=0124, flags=00
fd01: 02 43 2c 00                ; 2, C,
;
fd05: 14 fd 00 00                ; LAST - (next: fd14 HERE)
fd09: 18 01 00 00 00             ; XT=0118, flags=00
fd0e: 04 4c 41 53 54 00          ; 4, LAST
;
fd14: 23 fd 00 00                ; HERE - (next: fd23 CELL)
fd18: 0c 01 00 00 00             ; XT=010c, flags=00
fd1d: 04 48 45 52 45 00          ; 4, HERE
;
fd23: 32 fd 00 00                ; CELL - (next: fd32 T3)
fd27: 04 01 00 00 02             ; XT=0104, flags=02
fd2c: 04 43 45 4c 4c 00          ; 4, CELL
;
fd32: 3f fd 00 00                ; T3 - (next: fd3f T2)
fd36: f4 00 00 00 00             ; XT=00f4, flags=00
fd3b: 02 54 33 00                ; 2, T3
;
fd3f: 4c fd 00 00                ; T2 - (next: fd4c T1)
fd43: e5 00 00 00 00             ; XT=00e5, flags=00
fd48: 02 54 32 00                ; 2, T2
;
fd4c: 59 fd 00 00                ; T1 - (next: fd59 INPUT-FP)
fd50: d6 00 00 00 00             ; XT=00d6, flags=00
fd55: 02 54 31 00                ; 2, T1
;
fd59: 6c fd 00 00                ; INPUT-FP - (next: fd6c #LEN)
fd5d: c7 00 00 00 00             ; XT=00c7, flags=00
fd62: 08 49 4e 50 55 54 2d 46 50 00 ; 8, INPUT-FP
;
fd6c: 7b fd 00 00                ; #LEN - (next: fd7b #NEG)
fd70: b8 00 00 00 00             ; XT=00b8, flags=00
fd75: 04 23 4c 45 4e 00          ; 4, #LEN
;
fd7b: 8a fd 00 00                ; #NEG - (next: fd8a (tmp))
fd7f: a9 00 00 00 00             ; XT=00a9, flags=00
fd84: 04 23 4e 45 47 00          ; 4, #NEG
;
fd8a: 9a fd 00 00                ; (tmp) - (next: fd9a >IN)
fd8e: 9a 00 00 00 00             ; XT=009a, flags=00
fd93: 05 28 74 6d 70 29 00       ; 5, (tmp)
;
fd9a: a8 fd 00 00                ; >IN - (next: fda8 (MEM_SZ))
fd9e: 8b 00 00 00 00             ; XT=008b, flags=00
fda3: 03 3e 49 4e 00             ; 3, >IN
;
fda8: bb fd 00 00                ; (MEM_SZ) - (next: fdbb STATE)
fdac: 7c 00 00 00 00             ; XT=007c, flags=00
fdb1: 08 28 4d 45 4d 5f 53 5a 29 00 ; 8, (MEM_SZ)
;
fdbb: cb fd 00 00                ; STATE - (next: fdcb BASE)
fdbf: 6d 00 00 00 00             ; XT=006d, flags=00
fdc4: 05 53 54 41 54 45 00       ; 5, STATE
;
fdcb: da fd 00 00                ; BASE - (next: fdda (LAST))
fdcf: 5e 00 00 00 00             ; XT=005e, flags=00
fdd4: 04 42 41 53 45 00          ; 4, BASE
;
fdda: eb fd 00 00                ; (LAST) - (next: fdeb (HERE))
fdde: 4f 00 00 00 00             ; XT=004f, flags=00
fde3: 06 28 4c 41 53 54 29 00    ; 6, (LAST)
;
fdeb: fc fd 00 00                ; (HERE) - (next: fdfc <end>)
fdef: 40 00 00 00 00             ; XT=0040, flags=00
fdf4: 06 28 48 45 52 45 29 00    ; 6, (HERE)
;
fdfc: 00 00 00 00                ; End.
