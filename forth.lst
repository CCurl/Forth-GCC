; memory-size: 65536 bytes, (10000 hex)
; data-stack: fe00, grows up
; return-stack: fffc, grows down
;
0000: 08 01 11 00 00             ; JMP main (1101)
;
0005: 00 0a 04
0008: 00000000 00000000
0010: 0000135a 0000efa8 00000000 00000000
0020: 00000063 00010000 00000000 00000000
0030: 00000000 00000000 00000000 00000000
;
0040: 18 ed fd 00 00             ; DICTP BASE (fded)
0045: 0e 06                      ; CLITERAL 6
0047: 0c                         ; RET
;
0048: 18 de fd 00 00             ; DICTP CELL (fdde)
004d: 0e 04                      ; CLITERAL 4
004f: 0c                         ; RET
;
0050: 18 cd fd 00 00             ; DICTP (HERE) (fdcd)
0055: 0e 10                      ; CLITERAL 16
0057: 0c                         ; RET
;
0058: 18 bc fd 00 00             ; DICTP (LAST) (fdbc)
005d: 0e 14                      ; CLITERAL 20
005f: 0c                         ; RET
;
0060: 18 a9 fd 00 00             ; DICTP INPUT-FP (fda9)
0065: 0e 1c                      ; CLITERAL 28
0067: 0c                         ; RET
;
0068: 18 99 fd 00 00             ; DICTP STATE (fd99)
006d: 0e 20                      ; CLITERAL 32
006f: 0c                         ; RET
;
0070: 18 8c fd 00 00             ; DICTP C, (fd8c)
0075: 0e 10                      ; CLITERAL 16
0077: 02                         ; FETCH
0078: 10                         ; CSTORE
0079: 0e 10                      ; CLITERAL 16
007b: 02                         ; FETCH
007c: 2c                         ; INC
007d: 0e 10                      ; CLITERAL 16
007f: 03                         ; STORE
0080: 0c                         ; RET
;
0081: 18 80 fd 00 00             ; DICTP , (fd80)
0086: 0e 10                      ; CLITERAL 16
0088: 02                         ; FETCH
0089: 03                         ; STORE
008a: 0e 10                      ; CLITERAL 16
008c: 02                         ; FETCH
008d: 0e 04                      ; CLITERAL 4
008f: 11                         ; ADD
0090: 0e 10                      ; CLITERAL 16
0092: 03                         ; STORE
0093: 0c                         ; RET
;
0094: 18 74 fd 00 00             ; DICTP [ (fd74)
0099: 0e 00                      ; CLITERAL 0
009b: 0e 20                      ; CLITERAL 32
009d: 03                         ; STORE
009e: 0c                         ; RET
;
009f: 18 68 fd 00 00             ; DICTP ] (fd68)
00a4: 0e 01                      ; CLITERAL 1
00a6: 0e 20                      ; CLITERAL 32
00a8: 03                         ; STORE
00a9: 0c                         ; RET
;
00aa: 18 56 fd 00 00             ; DICTP LITERAL (fd56)
00af: 0e 01                      ; CLITERAL 1
00b1: 0b 70 00 00 00             ; CALL C, (0070)
00b6: 0c                         ; RET
;
00b7: 18 4a fd 00 00             ; DICTP @ (fd4a)
00bc: 02                         ; FETCH
00bd: 0c                         ; RET
;
00be: 18 3e fd 00 00             ; DICTP ! (fd3e)
00c3: 03                         ; STORE
00c4: 0c                         ; RET
;
00c5: 18 2f fd 00 00             ; DICTP SWAP (fd2f)
00ca: 04                         ; SWAP
00cb: 0c                         ; RET
;
00cc: 18 20 fd 00 00             ; DICTP DROP (fd20)
00d1: 05                         ; DROP
00d2: 0c                         ; RET
;
00d3: 18 12 fd 00 00             ; DICTP DUP (fd12)
00d8: 06                         ; DUP
00d9: 0c                         ; RET
;
00da: 18 ff fc 00 00             ; DICTP SLITERAL (fcff)
00df: 0e 07                      ; CLITERAL 7
00e1: 0b 70 00 00 00             ; CALL C, (0070)
00e6: 0c                         ; RET
;
00e7: 18 f1 fc 00 00             ; DICTP JMP (fcf1)
00ec: 0e 08                      ; CLITERAL 8
00ee: 0b 70 00 00 00             ; CALL C, (0070)
00f3: 0c                         ; RET
;
00f4: 18 e2 fc 00 00             ; DICTP JMPZ (fce2)
00f9: 0e 09                      ; CLITERAL 9
00fb: 0b 70 00 00 00             ; CALL C, (0070)
0100: 0c                         ; RET
;
0101: 18 d2 fc 00 00             ; DICTP JMPNZ (fcd2)
0106: 0e 0a                      ; CLITERAL 10
0108: 0b 70 00 00 00             ; CALL C, (0070)
010d: 0c                         ; RET
;
010e: 18 c3 fc 00 00             ; DICTP CALL (fcc3)
0113: 0e 0b                      ; CLITERAL 11
0115: 0b 70 00 00 00             ; CALL C, (0070)
011a: 0c                         ; RET
;
011b: 18 b5 fc 00 00             ; DICTP RET (fcb5)
0120: 0e 0c                      ; CLITERAL 12
0122: 0b 70 00 00 00             ; CALL C, (0070)
0127: 0c                         ; RET
;
0128: 18 a8 fc 00 00             ; DICTP OR (fca8)
012d: 0d                         ; OR
012e: 0c                         ; RET
;
012f: 18 95 fc 00 00             ; DICTP CLITERAL (fc95)
0134: 0e 0e                      ; CLITERAL 14
0136: 0b 70 00 00 00             ; CALL C, (0070)
013b: 0c                         ; RET
;
013c: 18 88 fc 00 00             ; DICTP C@ (fc88)
0141: 0f                         ; CFETCH
0142: 0c                         ; RET
;
0143: 18 7b fc 00 00             ; DICTP C! (fc7b)
0148: 10                         ; CSTORE
0149: 0c                         ; RET
;
014a: 18 6f fc 00 00             ; DICTP + (fc6f)
014f: 11                         ; ADD
0150: 0c                         ; RET
;
0151: 18 63 fc 00 00             ; DICTP - (fc63)
0156: 12                         ; SUB
0157: 0c                         ; RET
;
0158: 18 57 fc 00 00             ; DICTP * (fc57)
015d: 13                         ; MUL
015e: 0c                         ; RET
;
015f: 18 4b fc 00 00             ; DICTP / (fc4b)
0164: 14                         ; DIV
0165: 0c                         ; RET
;
0166: 18 3f fc 00 00             ; DICTP < (fc3f)
016b: 15                         ; LT
016c: 0c                         ; RET
;
016d: 18 33 fc 00 00             ; DICTP = (fc33)
0172: 16                         ; EQ
0173: 0c                         ; RET
;
0174: 18 27 fc 00 00             ; DICTP > (fc27)
0179: 17                         ; GT
017a: 0c                         ; RET
;
017b: 18 17 fc 00 00             ; DICTP DICTP (fc17)
0180: 0e 18                      ; CLITERAL 24
0182: 0b 70 00 00 00             ; CALL C, (0070)
0187: 0c                         ; RET
;
0188: 18 08 fc 00 00             ; DICTP EMIT (fc08)
018d: 19                         ; EMIT
018e: 0c                         ; RET
;
018f: 18 f9 fb 00 00             ; DICTP OVER (fbf9)
0194: 1a                         ; OVER
0195: 0c                         ; RET
;
0196: 18 e7 fb 00 00             ; DICTP COMPARE (fbe7)
019b: 1b                         ; COMPARE
019c: 0c                         ; RET
;
019d: 18 d7 fb 00 00             ; DICTP FOPEN (fbd7)
01a2: 1c                         ; FOPEN
01a3: 0c                         ; RET
;
01a4: 18 c7 fb 00 00             ; DICTP FREAD (fbc7)
01a9: 1d                         ; FREAD
01aa: 0c                         ; RET
;
01ab: 18 b3 fb 00 00             ; DICTP FREADLINE (fbb3)
01b0: 1e                         ; FREADLINE
01b1: 0c                         ; RET
;
01b2: 18 a2 fb 00 00             ; DICTP FWRITE (fba2)
01b7: 1f                         ; FWRITE
01b8: 0c                         ; RET
;
01b9: 18 91 fb 00 00             ; DICTP FCLOSE (fb91)
01be: 20                         ; FCLOSE
01bf: 0c                         ; RET
;
01c0: 18 84 fb 00 00             ; DICTP >R (fb84)
01c5: 21                         ; DTOR
01c6: 0c                         ; RET
;
01c7: 18 77 fb 00 00             ; DICTP R> (fb77)
01cc: 22                         ; RTOD
01cd: 0c                         ; RET
;
01ce: 18 64 fb 00 00             ; DICTP LOGLEVEL (fb64)
01d3: 23                         ; LOGLEVEL
01d4: 0c                         ; RET
;
01d5: 18 56 fb 00 00             ; DICTP AND (fb56)
01da: 24                         ; AND
01db: 0c                         ; RET
;
01dc: 18 47 fb 00 00             ; DICTP PICK (fb47)
01e1: 25                         ; PICK
01e2: 0c                         ; RET
;
01e3: 18 37 fb 00 00             ; DICTP DEPTH (fb37)
01e8: 26                         ; DEPTH
01e9: 0c                         ; RET
;
01ea: 18 27 fb 00 00             ; DICTP GETCH (fb27)
01ef: 27                         ; GETCH
01f0: 0c                         ; RET
;
01f1: 18 14 fb 00 00             ; DICTP COMPAREI (fb14)
01f6: 28                         ; COMPAREI
01f7: 0c                         ; RET
;
01f8: 18 03 fb 00 00             ; DICTP USINIT (fb03)
01fd: 29                         ; USTACKINIT
01fe: 0c                         ; RET
;
01ff: 18 f2 fa 00 00             ; DICTP USPUSH (faf2)
0204: 2a                         ; UPUSH
0205: 0c                         ; RET
;
0206: 18 e2 fa 00 00             ; DICTP USPOP (fae2)
020b: 2b                         ; UPOP
020c: 0c                         ; RET
;
020d: 18 d4 fa 00 00             ; DICTP INC (fad4)
0212: 2c                         ; INC
0213: 0c                         ; RET
;
0214: 18 c3 fa 00 00             ; DICTP RDEPTH (fac3)
0219: 2d                         ; RDEPTH
021a: 0c                         ; RET
;
021b: 18 b5 fa 00 00             ; DICTP DEC (fab5)
0220: 2e                         ; DEC
0221: 0c                         ; RET
;
0222: 18 a3 fa 00 00             ; DICTP GETTICK (faa3)
0227: 2f                         ; GETTICK
0228: 0c                         ; RET
;
0229: 18 93 fa 00 00             ; DICTP BREAK (fa93)
022e: fd                         ; BREAK
022f: 0c                         ; RET
;
0230: 18 83 fa 00 00             ; DICTP RESET (fa83)
0235: fe                         ; RESET
0236: 0c                         ; RET
;
0237: 18 75 fa 00 00             ; DICTP BYE (fa75)
023c: ff                         ; BYE
023d: 0c                         ; RET
;
023e: 18 64 fa 00 00             ; DICTP INLINE (fa64)
0243: 0e 14                      ; CLITERAL 20
0245: 02                         ; FETCH
0246: 0e 02                      ; CLITERAL 2
0248: 0e 04                      ; CLITERAL 4
024a: 13                         ; MUL
024b: 11                         ; ADD
024c: 06                         ; DUP
024d: 0f                         ; CFETCH
024e: 0e 02                      ; CLITERAL 2
0250: 0d                         ; OR
0251: 04                         ; SWAP
0252: 10                         ; CSTORE
0253: 0c                         ; RET
;
0254: 18 50 fa 00 00             ; DICTP IMMEDIATE (fa50)
0259: 0e 14                      ; CLITERAL 20
025b: 02                         ; FETCH
025c: 0e 02                      ; CLITERAL 2
025e: 0e 04                      ; CLITERAL 4
0260: 13                         ; MUL
0261: 11                         ; ADD
0262: 06                         ; DUP
0263: 0f                         ; CFETCH
0264: 0e 01                      ; CLITERAL 1
0266: 0d                         ; OR
0267: 04                         ; SWAP
0268: 10                         ; CSTORE
0269: 0c                         ; RET
;
026a: 18 40 fa 00 00             ; DICTP CELLS (fa40)
026f: 0e 04                      ; CLITERAL 4
0271: 13                         ; MUL
0272: 0c                         ; RET
;
0273: 18 27 fa 00 00             ; DICTP FLAG_IMMEDIATE (fa27)
0278: 0e 01                      ; CLITERAL 1
027a: 0c                         ; RET
;
027b: 18 11 fa 00 00             ; DICTP FLAG_INLINE (fa11)
0280: 0e 02                      ; CLITERAL 2
0282: 0c                         ; RET
;
0283: 18 02 fa 00 00             ; DICTP LAST (fa02)
0288: 0e 14                      ; CLITERAL 20
028a: 02                         ; FETCH
028b: 0c                         ; RET
;
028c: 18 f3 f9 00 00             ; DICTP HERE (f9f3)
0291: 0e 10                      ; CLITERAL 16
0293: 02                         ; FETCH
0294: 0c                         ; RET
;
0295: 18 e7 f9 00 00             ; DICTP , (f9e7)
029a: 0e 10                      ; CLITERAL 16
029c: 02                         ; FETCH
029d: 03                         ; STORE
029e: 0e 10                      ; CLITERAL 16
02a0: 02                         ; FETCH
02a1: 0e 04                      ; CLITERAL 4
02a3: 11                         ; ADD
02a4: 0e 10                      ; CLITERAL 16
02a6: 03                         ; STORE
02a7: 0c                         ; RET
;
02a8: 18 da f9 00 00             ; DICTP C, (f9da)
02ad: 0e 10                      ; CLITERAL 16
02af: 02                         ; FETCH
02b0: 10                         ; CSTORE
02b1: 0e 10                      ; CLITERAL 16
02b3: 02                         ; FETCH
02b4: 0e 01                      ; CLITERAL 1
02b6: 11                         ; ADD
02b7: 0e 10                      ; CLITERAL 16
02b9: 03                         ; STORE
02ba: 0c                         ; RET
;
02bb: 18 cc f9 00 00             ; DICTP HEX (f9cc)
02c0: 0e 10                      ; CLITERAL 16
02c2: 0e 06                      ; CLITERAL 6
02c4: 10                         ; CSTORE
02c5: 0c                         ; RET
;
02c6: 18 ba f9 00 00             ; DICTP DECIMAL (f9ba)
02cb: 0e 0a                      ; CLITERAL 10
02cd: 0e 06                      ; CLITERAL 6
02cf: 10                         ; CSTORE
02d0: 0c                         ; RET
;
02d1: 18 aa f9 00 00             ; DICTP OCTAL (f9aa)
02d6: 0e 08                      ; CLITERAL 8
02d8: 0e 06                      ; CLITERAL 6
02da: 10                         ; CSTORE
02db: 0c                         ; RET
;
02dc: 18 99 f9 00 00             ; DICTP BINARY (f999)
02e1: 0e 02                      ; CLITERAL 2
02e3: 0e 06                      ; CLITERAL 6
02e5: 10                         ; CSTORE
02e6: 0c                         ; RET
;
02e7: 18 8c f9 00 00             ; DICTP ON (f98c)
02ec: 0e 01                      ; CLITERAL 1
02ee: 04                         ; SWAP
02ef: 03                         ; STORE
02f0: 0c                         ; RET
;
02f1: 18 7e f9 00 00             ; DICTP OFF (f97e)
02f6: 0e 00                      ; CLITERAL 0
02f8: 04                         ; SWAP
02f9: 03                         ; STORE
02fa: 0c                         ; RET
;
02fb: 18 69 f9 00 00             ; DICTP ?COMPILING (f969)
0300: 0e 20                      ; CLITERAL 32
0302: 02                         ; FETCH
0303: 0c                         ; RET
;
0304: 18 5c f9 00 00             ; DICTP IF (f95c)
0309: 0b fb 02 00 00             ; CALL ?COMPILING (02fb)
030e: 09 22 03 00 00             ; JMPZ 0322
0313: 0b f4 00 00 00             ; CALL JMPZ (00f4)
0318: 0e 10                      ; CLITERAL 16
031a: 02                         ; FETCH
031b: 0e 00                      ; CLITERAL 0
031d: 0b 95 02 00 00             ; CALL , (0295)
0322: 0c                         ; RET
;
0323: 18 4d f9 00 00             ; DICTP ELSE (f94d)
0328: 0b fb 02 00 00             ; CALL ?COMPILING (02fb)
032d: 09 47 03 00 00             ; JMPZ 0347
0332: 0b e7 00 00 00             ; CALL JMP (00e7)
0337: 0e 10                      ; CLITERAL 16
0339: 02                         ; FETCH
033a: 04                         ; SWAP
033b: 0e 00                      ; CLITERAL 0
033d: 0b 95 02 00 00             ; CALL , (0295)
0342: 0e 10                      ; CLITERAL 16
0344: 02                         ; FETCH
0345: 04                         ; SWAP
0346: 03                         ; STORE
0347: 0c                         ; RET
;
0348: 18 3e f9 00 00             ; DICTP THEN (f93e)
034d: 0b fb 02 00 00             ; CALL ?COMPILING (02fb)
0352: 09 5c 03 00 00             ; JMPZ 035c
0357: 0e 10                      ; CLITERAL 16
0359: 02                         ; FETCH
035a: 04                         ; SWAP
035b: 03                         ; STORE
035c: 0c                         ; RET
;
035d: 18 2e f9 00 00             ; DICTP BEGIN (f92e)
0362: 0b fb 02 00 00             ; CALL ?COMPILING (02fb)
0367: 09 6f 03 00 00             ; JMPZ 036f
036c: 0e 10                      ; CLITERAL 16
036e: 02                         ; FETCH
036f: 0c                         ; RET
;
0370: 18 1e f9 00 00             ; DICTP AGAIN (f91e)
0375: 0b fb 02 00 00             ; CALL ?COMPILING (02fb)
037a: 09 89 03 00 00             ; JMPZ 0389
037f: 0b e7 00 00 00             ; CALL JMP (00e7)
0384: 0b 95 02 00 00             ; CALL , (0295)
0389: 0c                         ; RET
;
038a: 18 0e f9 00 00             ; DICTP WHILE (f90e)
038f: 0b fb 02 00 00             ; CALL ?COMPILING (02fb)
0394: 09 a3 03 00 00             ; JMPZ 03a3
0399: 0b 01 01 00 00             ; CALL JMPNZ (0101)
039e: 0b 95 02 00 00             ; CALL , (0295)
03a3: 0c                         ; RET
;
03a4: 18 fe f8 00 00             ; DICTP UNTIL (f8fe)
03a9: 0b fb 02 00 00             ; CALL ?COMPILING (02fb)
03ae: 09 bd 03 00 00             ; JMPZ 03bd
03b3: 0b f4 00 00 00             ; CALL JMPZ (00f4)
03b8: 0b 95 02 00 00             ; CALL , (0295)
03bd: 0c                         ; RET
;
03be: 18 ee f8 00 00             ; DICTP LEAVE (f8ee)
03c3: 0b fb 02 00 00             ; CALL ?COMPILING (02fb)
03c8: 09 d2 03 00 00             ; JMPZ 03d2
03cd: 0b 1b 01 00 00             ; CALL RET (011b)
03d2: 0c                         ; RET
;
03d3: 18 e0 f8 00 00             ; DICTP >IN (f8e0)
03d8: 01 de 03 00 00             ; LITERAL 990 (3de)
03dd: 0c                         ; RET
03de: 00                         ; RESET
03df: 00                         ; RESET
03e0: 00                         ; RESET
03e1: 00                         ; RESET
03e2: 0c                         ; RET
;
03e3: 18 d0 f8 00 00             ; DICTP isNeg (f8d0)
03e8: 01 ee 03 00 00             ; LITERAL 1006 (3ee)
03ed: 0c                         ; RET
03ee: 00                         ; RESET
03ef: 00                         ; RESET
03f0: 00                         ; RESET
03f1: 00                         ; RESET
03f2: 0c                         ; RET
;
03f3: 18 bf f8 00 00             ; DICTP MEM_SZ (f8bf)
03f8: 0e 24                      ; CLITERAL 36
03fa: 02                         ; FETCH
03fb: 0c                         ; RET
;
03fc: 18 ac f8 00 00             ; DICTP TRACE-ON (f8ac)
0401: 0e 02                      ; CLITERAL 2
0403: 23                         ; LOGLEVEL
0404: 0c                         ; RET
;
0405: 18 98 f8 00 00             ; DICTP TRACE-OFF (f898)
040a: 0e 00                      ; CLITERAL 0
040c: 23                         ; LOGLEVEL
040d: 0c                         ; RET
;
040e: 18 85 f8 00 00             ; DICTP DEBUG-ON (f885)
0413: 0e 01                      ; CLITERAL 1
0415: 23                         ; LOGLEVEL
0416: 0c                         ; RET
;
0417: 18 71 f8 00 00             ; DICTP DEBUG-OFF (f871)
041c: 0e 00                      ; CLITERAL 0
041e: 23                         ; LOGLEVEL
041f: 0c                         ; RET
;
0420: 18 64 f8 00 00             ; DICTP R@ (f864)
0425: 22                         ; RTOD
0426: 06                         ; DUP
0427: 21                         ; DTOR
0428: 0c                         ; RET
;
0429: 18 54 f8 00 00             ; DICTP RDROP (f854)
042e: 22                         ; RTOD
042f: 05                         ; DROP
0430: 0c                         ; RET
;
0431: 18 45 f8 00 00             ; DICTP 2DUP (f845)
0436: 1a                         ; OVER
0437: 1a                         ; OVER
0438: 0c                         ; RET
;
0439: 18 35 f8 00 00             ; DICTP 2DROP (f835)
043e: 05                         ; DROP
043f: 05                         ; DROP
0440: 0c                         ; RET
;
0441: 18 26 f8 00 00             ; DICTP TUCK (f826)
0446: 04                         ; SWAP
0447: 1a                         ; OVER
0448: 0c                         ; RET
;
0449: 18 18 f8 00 00             ; DICTP NIP (f818)
044e: 04                         ; SWAP
044f: 05                         ; DROP
0450: 0c                         ; RET
;
0451: 18 0a f8 00 00             ; DICTP ROT (f80a)
0456: 21                         ; DTOR
0457: 04                         ; SWAP
0458: 22                         ; RTOD
0459: 04                         ; SWAP
045a: 0c                         ; RET
;
045b: 18 fb f7 00 00             ; DICTP -ROT (f7fb)
0460: 04                         ; SWAP
0461: 21                         ; DTOR
0462: 04                         ; SWAP
0463: 22                         ; RTOD
0464: 0c                         ; RET
;
0465: 18 ee f7 00 00             ; DICTP 1+ (f7ee)
046a: 2c                         ; INC
046b: 0c                         ; RET
;
046c: 18 e1 f7 00 00             ; DICTP 1- (f7e1)
0471: 2e                         ; DEC
0472: 0c                         ; RET
;
0473: 18 d4 f7 00 00             ; DICTP 2* (f7d4)
0478: 0e 02                      ; CLITERAL 2
047a: 13                         ; MUL
047b: 0c                         ; RET
;
047c: 18 c7 f7 00 00             ; DICTP 2/ (f7c7)
0481: 0e 02                      ; CLITERAL 2
0483: 14                         ; DIV
0484: 0c                         ; RET
;
0485: 18 ba f7 00 00             ; DICTP += (f7ba)
048a: 1a                         ; OVER
048b: 02                         ; FETCH
048c: 11                         ; ADD
048d: 04                         ; SWAP
048e: 03                         ; STORE
048f: 0c                         ; RET
;
0490: 18 ad f7 00 00             ; DICTP -= (f7ad)
0495: 1a                         ; OVER
0496: 02                         ; FETCH
0497: 04                         ; SWAP
0498: 12                         ; SUB
0499: 04                         ; SWAP
049a: 03                         ; STORE
049b: 0c                         ; RET
;
049c: 18 a0 f7 00 00             ; DICTP ++ (f7a0)
04a1: 0e 01                      ; CLITERAL 1
04a3: 0b 85 04 00 00             ; CALL += (0485)
04a8: 0c                         ; RET
;
04a9: 18 93 f7 00 00             ; DICTP -- (f793)
04ae: 0e 01                      ; CLITERAL 1
04b0: 0b 90 04 00 00             ; CALL -= (0490)
04b5: 0c                         ; RET
;
04b6: 18 85 f7 00 00             ; DICTP C++ (f785)
04bb: 06                         ; DUP
04bc: 0f                         ; CFETCH
04bd: 2c                         ; INC
04be: 04                         ; SWAP
04bf: 10                         ; CSTORE
04c0: 0c                         ; RET
;
04c1: 18 77 f7 00 00             ; DICTP C-- (f777)
04c6: 06                         ; DUP
04c7: 0f                         ; CFETCH
04c8: 2e                         ; DEC
04c9: 04                         ; SWAP
04ca: 10                         ; CSTORE
04cb: 0c                         ; RET
;
04cc: 18 6a f7 00 00             ; DICTP +! (f76a)
04d1: 04                         ; SWAP
04d2: 1a                         ; OVER
04d3: 02                         ; FETCH
04d4: 11                         ; ADD
04d5: 04                         ; SWAP
04d6: 03                         ; STORE
04d7: 0c                         ; RET
;
04d8: 18 5c f7 00 00             ; DICTP C+! (f75c)
04dd: 04                         ; SWAP
04de: 1a                         ; OVER
04df: 0f                         ; CFETCH
04e0: 11                         ; ADD
04e1: 04                         ; SWAP
04e2: 10                         ; CSTORE
04e3: 0c                         ; RET
;
04e4: 18 4f f7 00 00             ; DICTP 0= (f74f)
04e9: 0e 00                      ; CLITERAL 0
04eb: 16                         ; EQ
04ec: 0c                         ; RET
;
04ed: 18 42 f7 00 00             ; DICTP <> (f742)
04f2: 16                         ; EQ
04f3: 0e 00                      ; CLITERAL 0
04f5: 16                         ; EQ
04f6: 0c                         ; RET
;
04f7: 18 35 f7 00 00             ; DICTP <= (f735)
04fc: 17                         ; GT
04fd: 0e 00                      ; CLITERAL 0
04ff: 16                         ; EQ
0500: 0c                         ; RET
;
0501: 18 28 f7 00 00             ; DICTP >= (f728)
0506: 15                         ; LT
0507: 0e 00                      ; CLITERAL 0
0509: 16                         ; EQ
050a: 0c                         ; RET
;
050b: 18 19 f7 00 00             ; DICTP TRUE (f719)
0510: 0e 01                      ; CLITERAL 1
0512: 0c                         ; RET
;
0513: 18 09 f7 00 00             ; DICTP FALSE (f709)
0518: 0e 00                      ; CLITERAL 0
051a: 0c                         ; RET
;
051b: 18 fb f6 00 00             ; DICTP NOT (f6fb)
0520: 0e 00                      ; CLITERAL 0
0522: 16                         ; EQ
0523: 0c                         ; RET
;
0524: 18 eb f6 00 00             ; DICTP COUNT (f6eb)
0529: 06                         ; DUP
052a: 2c                         ; INC
052b: 04                         ; SWAP
052c: 0f                         ; CFETCH
052d: 0c                         ; RET
;
052e: 18 dc f6 00 00             ; DICTP TYPE (f6dc)
0533: 1a                         ; OVER
0534: 11                         ; ADD
0535: 04                         ; SWAP
0536: 1a                         ; OVER
0537: 1a                         ; OVER
0538: 17                         ; GT
0539: 0e 00                      ; CLITERAL 0
053b: 16                         ; EQ
053c: 09 44 05 00 00             ; JMPZ 0544
0541: 05                         ; DROP
0542: 05                         ; DROP
0543: 0c                         ; RET
0544: 06                         ; DUP
0545: 0f                         ; CFETCH
0546: 19                         ; EMIT
0547: 2c                         ; INC
0548: 08 36 05 00 00             ; JMP 0536
054d: 0c                         ; RET
;
054e: 18 cf f6 00 00             ; DICTP CT (f6cf)
0553: 0b 24 05 00 00             ; CALL COUNT (0524)
0558: 0b 2e 05 00 00             ; CALL TYPE (052e)
055d: 0c                         ; RET
;
055e: 18 c3 f6 00 00             ; DICTP \ (f6c3)
0563: 0e 00                      ; CLITERAL 0
0565: 0b d3 03 00 00             ; CALL >IN (03d3)
056a: 02                         ; FETCH
056b: 10                         ; CSTORE
056c: 0c                         ; RET
;
056d: 18 b7 f6 00 00             ; DICTP ( (f6b7)
0572: 0b d3 03 00 00             ; CALL >IN (03d3)
0577: 02                         ; FETCH
0578: 0f                         ; CFETCH
0579: 06                         ; DUP
057a: 0e 00                      ; CLITERAL 0
057c: 16                         ; EQ
057d: 09 9e 05 00 00             ; JMPZ 059e
0582: 07 13 6d 69 73 73 69 6e 67 20 63 6c 6f 73 69 6e 67 20 27 29 27 00 ; SLITERAL (0583) [missing closing ')']
0598: 0b 4e 05 00 00             ; CALL CT (054e)
059d: fe                         ; RESET
059e: 0b d3 03 00 00             ; CALL >IN (03d3)
05a3: 0b 9c 04 00 00             ; CALL ++ (049c)
05a8: 0e 29                      ; CLITERAL 41
05aa: 16                         ; EQ
05ab: 09 b1 05 00 00             ; JMPZ 05b1
05b0: 0c                         ; RET
05b1: 08 72 05 00 00             ; JMP 0572
05b6: 0c                         ; RET
;
05b7: 18 aa f6 00 00             ; DICTP BL (f6aa)
05bc: 0e 20                      ; CLITERAL 32
05be: 19                         ; EMIT
05bf: 0c                         ; RET
;
05c0: 18 9b f6 00 00             ; DICTP CRLF (f69b)
05c5: 0e 0d                      ; CLITERAL 13
05c7: 19                         ; EMIT
05c8: 0e 0a                      ; CLITERAL 10
05ca: 19                         ; EMIT
05cb: 0c                         ; RET
;
05cc: 18 8e f6 00 00             ; DICTP CR (f68e)
05d1: 0e 0d                      ; CLITERAL 13
05d3: 19                         ; EMIT
05d4: 0e 0a                      ; CLITERAL 10
05d6: 19                         ; EMIT
05d7: 0c                         ; RET
;
05d8: 18 7c f6 00 00             ; DICTP BETWEEN (f67c)
05dd: 0e 02                      ; CLITERAL 2
05df: 25                         ; PICK
05e0: 15                         ; LT
05e1: 09 eb 05 00 00             ; JMPZ 05eb
05e6: 05                         ; DROP
05e7: 05                         ; DROP
05e8: 0e 00                      ; CLITERAL 0
05ea: 0c                         ; RET
05eb: 15                         ; LT
05ec: 0e 00                      ; CLITERAL 0
05ee: 16                         ; EQ
05ef: 0c                         ; RET
;
05f0: 18 6c f6 00 00             ; DICTP (tmp) (f66c)
05f5: 01 fb 05 00 00             ; LITERAL 1531 (5fb)
05fa: 0c                         ; RET
05fb: 00                         ; RESET
05fc: 00                         ; RESET
05fd: 00                         ; RESET
05fe: 00                         ; RESET
05ff: 0c                         ; RET
;
0600: 18 59 f6 00 00             ; DICTP tmp-init (f659)
0605: 0e 14                      ; CLITERAL 20
0607: 02                         ; FETCH
0608: 0b f0 05 00 00             ; CALL (tmp) (05f0)
060d: 03                         ; STORE
060e: 0c                         ; RET
;
060f: 18 47 f6 00 00             ; DICTP tmp-cur (f647)
0614: 0b f0 05 00 00             ; CALL (tmp) (05f0)
0619: 02                         ; FETCH
061a: 0c                         ; RET
;
061b: 18 33 f6 00 00             ; DICTP tmp-alloc (f633)
0620: 0b f0 05 00 00             ; CALL (tmp) (05f0)
0625: 04                         ; SWAP
0626: 1a                         ; OVER
0627: 02                         ; FETCH
0628: 04                         ; SWAP
0629: 12                         ; SUB
062a: 04                         ; SWAP
062b: 03                         ; STORE
062c: 0b 0f 06 00 00             ; CALL tmp-cur (060f)
0631: 0c                         ; RET
;
0632: 18 25 f6 00 00             ; DICTP PAD (f625)
0637: 0b 00 06 00 00             ; CALL tmp-init (0600)
063c: 0e c8                      ; CLITERAL 200
063e: 0b 1b 06 00 00             ; CALL tmp-alloc (061b)
0643: 0c                         ; RET
;
0644: 18 12 f6 00 00             ; DICTP getInput (f612)
0649: 0b 32 06 00 00             ; CALL PAD (0632)
064e: 0e 80                      ; CLITERAL 128
0650: 0e 00                      ; CLITERAL 0
0652: 1e                         ; FREADLINE
0653: 05                         ; DROP
0654: 0b 32 06 00 00             ; CALL PAD (0632)
0659: 0c                         ; RET
;
065a: 18 01 f6 00 00             ; DICTP skipWS (f601)
065f: 06                         ; DUP
0660: 0f                         ; CFETCH
0661: 06                         ; DUP
0662: 09 7b 06 00 00             ; JMPZ 067b
0667: 0e 20                      ; CLITERAL 32
0669: 17                         ; GT
066a: 09 75 06 00 00             ; JMPZ 0675
066f: 0c                         ; RET
0670: 08 76 06 00 00             ; JMP 0676
0675: 2c                         ; INC
0676: 08 7d 06 00 00             ; JMP 067d
067b: 05                         ; DROP
067c: 0c                         ; RET
067d: 08 5f 06 00 00             ; JMP 065f
0682: 0c                         ; RET
;
0683: 18 ec f5 00 00             ; DICTP getOneWord (f5ec)
0688: 06                         ; DUP
0689: 21                         ; DTOR
068a: 21                         ; DTOR
068b: 22                         ; RTOD
068c: 06                         ; DUP
068d: 21                         ; DTOR
068e: 0f                         ; CFETCH
068f: 0e 20                      ; CLITERAL 32
0691: 17                         ; GT
0692: 09 9f 06 00 00             ; JMPZ 069f
0697: 22                         ; RTOD
0698: 2c                         ; INC
0699: 21                         ; DTOR
069a: 08 b5 06 00 00             ; JMP 06b5
069f: 22                         ; RTOD
06a0: 06                         ; DUP
06a1: 21                         ; DTOR
06a2: 0f                         ; CFETCH
06a3: 09 b1 06 00 00             ; JMPZ 06b1
06a8: 0e 00                      ; CLITERAL 0
06aa: 22                         ; RTOD
06ab: 06                         ; DUP
06ac: 21                         ; DTOR
06ad: 10                         ; CSTORE
06ae: 22                         ; RTOD
06af: 2c                         ; INC
06b0: 21                         ; DTOR
06b1: 22                         ; RTOD
06b2: 22                         ; RTOD
06b3: 04                         ; SWAP
06b4: 0c                         ; RET
06b5: 08 8b 06 00 00             ; JMP 068b
06ba: 0c                         ; RET
;
06bb: 18 d8 f5 00 00             ; DICTP DICT>NEXT (f5d8)
06c0: 0c                         ; RET
;
06c1: 18 c6 f5 00 00             ; DICTP DICT>XT (f5c6)
06c6: 0e 04                      ; CLITERAL 4
06c8: 11                         ; ADD
06c9: 0c                         ; RET
;
06ca: 18 b1 f5 00 00             ; DICTP DICT>FLAGS (f5b1)
06cf: 0e 02                      ; CLITERAL 2
06d1: 0e 04                      ; CLITERAL 4
06d3: 13                         ; MUL
06d4: 11                         ; ADD
06d5: 0c                         ; RET
;
06d6: 18 9d f5 00 00             ; DICTP DICT>NAME (f59d)
06db: 0b ca 06 00 00             ; CALL DICT>FLAGS (06ca)
06e0: 2c                         ; INC
06e1: 0c                         ; RET
;
06e2: 18 89 f5 00 00             ; DICTP NEXT>DICT (f589)
06e7: 0c                         ; RET
;
06e8: 18 77 f5 00 00             ; DICTP XT>DICT (f577)
06ed: 0e 04                      ; CLITERAL 4
06ef: 12                         ; SUB
06f0: 0c                         ; RET
;
06f1: 18 62 f5 00 00             ; DICTP FLAGS>DICT (f562)
06f6: 0e 02                      ; CLITERAL 2
06f8: 0e 04                      ; CLITERAL 4
06fa: 13                         ; MUL
06fb: 12                         ; SUB
06fc: 0c                         ; RET
;
06fd: 18 4e f5 00 00             ; DICTP NAME>DICT (f54e)
0702: 2e                         ; DEC
0703: 0e 02                      ; CLITERAL 2
0705: 0e 04                      ; CLITERAL 4
0707: 13                         ; MUL
0708: 12                         ; SUB
0709: 0c                         ; RET
;
070a: 18 39 f5 00 00             ; DICTP DICT.GetXT (f539)
070f: 0b c1 06 00 00             ; CALL DICT>XT (06c1)
0714: 02                         ; FETCH
0715: 0c                         ; RET
;
0716: 18 21 f5 00 00             ; DICTP DICT.GetFLAGS (f521)
071b: 0b ca 06 00 00             ; CALL DICT>FLAGS (06ca)
0720: 0f                         ; CFETCH
0721: 0c                         ; RET
;
0722: 18 0c f5 00 00             ; DICTP DICTP>NAME (f50c)
0727: 2c                         ; INC
0728: 02                         ; FETCH
0729: 0b d6 06 00 00             ; CALL DICT>NAME (06d6)
072e: 0c                         ; RET
;
072f: 18 f6 f4 00 00             ; DICTP XT.GetDICTP (f4f6)
0734: 06                         ; DUP
0735: 0f                         ; CFETCH
0736: 0e 18                      ; CLITERAL 24
0738: 16                         ; EQ
0739: 09 45 07 00 00             ; JMPZ 0745
073e: 2c                         ; INC
073f: 02                         ; FETCH
0740: 08 47 07 00 00             ; JMP 0747
0745: 05                         ; DROP
0746: fe                         ; RESET
0747: 0c                         ; RET
;
0748: 18 d9 f4 00 00             ; DICTP FLAGS.ISIMMEDIATE? (f4d9)
074d: 0e 01                      ; CLITERAL 1
074f: 24                         ; AND
0750: 0c                         ; RET
;
0751: 18 bf f4 00 00             ; DICTP FLAGS.ISINLINE? (f4bf)
0756: 0e 02                      ; CLITERAL 2
0758: 24                         ; AND
0759: 0c                         ; RET
;
075a: 18 a3 f4 00 00             ; DICTP DICT.GetIMMEDIATE (f4a3)
075f: 0b 16 07 00 00             ; CALL DICT.GetFLAGS (0716)
0764: 0b 48 07 00 00             ; CALL FLAGS.ISIMMEDIATE? (0748)
0769: 0c                         ; RET
;
076a: 18 8a f4 00 00             ; DICTP DICT.GetINLINE (f48a)
076f: 0b 16 07 00 00             ; CALL DICT.GetFLAGS (0716)
0774: 0b 51 07 00 00             ; CALL FLAGS.ISINLINE? (0751)
0779: 0c                         ; RET
;
077a: 18 75 f4 00 00             ; DICTP findInDict (f475)
077f: 0e 14                      ; CLITERAL 20
0781: 02                         ; FETCH
0782: 21                         ; DTOR
0783: 22                         ; RTOD
0784: 06                         ; DUP
0785: 21                         ; DTOR
0786: 06                         ; DUP
0787: 09 b0 07 00 00             ; JMPZ 07b0
078c: 0b d6 06 00 00             ; CALL DICT>NAME (06d6)
0791: 2c                         ; INC
0792: 1a                         ; OVER
0793: 28                         ; COMPAREI
0794: 09 ab 07 00 00             ; JMPZ 07ab
0799: 05                         ; DROP
079a: 22                         ; RTOD
079b: 06                         ; DUP
079c: 21                         ; DTOR
079d: 0b 0a 07 00 00             ; CALL DICT.GetXT (070a)
07a2: 22                         ; RTOD
07a3: 0b 16 07 00 00             ; CALL DICT.GetFLAGS (0716)
07a8: 0e 01                      ; CLITERAL 1
07aa: 0c                         ; RET
07ab: 08 b8 07 00 00             ; JMP 07b8
07b0: 05                         ; DROP
07b1: 05                         ; DROP
07b2: 22                         ; RTOD
07b3: 0e 00                      ; CLITERAL 0
07b5: 0e 00                      ; CLITERAL 0
07b7: 0c                         ; RET
07b8: 22                         ; RTOD
07b9: 02                         ; FETCH
07ba: 21                         ; DTOR
07bb: 08 83 07 00 00             ; JMP 0783
07c0: 0c                         ; RET
;
07c1: 18 64 f4 00 00             ; DICTP isHEX? (f464)
07c6: 0e 06                      ; CLITERAL 6
07c8: 0f                         ; CFETCH
07c9: 0e 10                      ; CLITERAL 16
07cb: 16                         ; EQ
07cc: 0c                         ; RET
;
07cd: 18 4f f4 00 00             ; DICTP isNumChar? (f44f)
07d2: 06                         ; DUP
07d3: 0e 30                      ; CLITERAL 48
07d5: 0e 39                      ; CLITERAL 57
07d7: 0b d8 05 00 00             ; CALL BETWEEN (05d8)
07dc: 09 e7 07 00 00             ; JMPZ 07e7
07e1: 0e 30                      ; CLITERAL 48
07e3: 12                         ; SUB
07e4: 0e 01                      ; CLITERAL 1
07e6: 0c                         ; RET
07e7: 0b c1 07 00 00             ; CALL isHEX? (07c1)
07ec: 09 1b 08 00 00             ; JMPZ 081b
07f1: 06                         ; DUP
07f2: 0e 41                      ; CLITERAL 65
07f4: 0e 46                      ; CLITERAL 70
07f6: 0b d8 05 00 00             ; CALL BETWEEN (05d8)
07fb: 09 06 08 00 00             ; JMPZ 0806
0800: 0e 37                      ; CLITERAL 55
0802: 12                         ; SUB
0803: 0e 01                      ; CLITERAL 1
0805: 0c                         ; RET
0806: 06                         ; DUP
0807: 0e 61                      ; CLITERAL 97
0809: 0e 66                      ; CLITERAL 102
080b: 0b d8 05 00 00             ; CALL BETWEEN (05d8)
0810: 09 1b 08 00 00             ; JMPZ 081b
0815: 0e 57                      ; CLITERAL 87
0817: 12                         ; SUB
0818: 0e 01                      ; CLITERAL 1
081a: 0c                         ; RET
081b: 0e 00                      ; CLITERAL 0
081d: 0c                         ; RET
;
081e: 18 3e f4 00 00             ; DICTP NEGATE (f43e)
0823: 0e 00                      ; CLITERAL 0
0825: 04                         ; SWAP
0826: 12                         ; SUB
0827: 0c                         ; RET
;
0828: 18 30 f4 00 00             ; DICTP ABS (f430)
082d: 06                         ; DUP
082e: 0e 00                      ; CLITERAL 0
0830: 15                         ; LT
0831: 09 3b 08 00 00             ; JMPZ 083b
0836: 0b 1e 08 00 00             ; CALL NEGATE (081e)
083b: 0c                         ; RET
;
083c: 18 1c f4 00 00             ; DICTP isNumber? (f41c)
0841: 06                         ; DUP
0842: 0f                         ; CFETCH
0843: 0e 2d                      ; CLITERAL 45
0845: 16                         ; EQ
0846: 06                         ; DUP
0847: 0b e3 03 00 00             ; CALL isNeg (03e3)
084c: 10                         ; CSTORE
084d: 09 53 08 00 00             ; JMPZ 0853
0852: 2c                         ; INC
0853: 0e 00                      ; CLITERAL 0
0855: 21                         ; DTOR
0856: 06                         ; DUP
0857: 0f                         ; CFETCH
0858: 06                         ; DUP
0859: 0e 00                      ; CLITERAL 0
085b: 16                         ; EQ
085c: 09 77 08 00 00             ; JMPZ 0877
0861: 05                         ; DROP
0862: 05                         ; DROP
0863: 22                         ; RTOD
0864: 0b e3 03 00 00             ; CALL isNeg (03e3)
0869: 0f                         ; CFETCH
086a: 09 74 08 00 00             ; JMPZ 0874
086f: 0b 1e 08 00 00             ; CALL NEGATE (081e)
0874: 0e 01                      ; CLITERAL 1
0876: 0c                         ; RET
0877: 0b cd 07 00 00             ; CALL isNumChar? (07cd)
087c: 09 8e 08 00 00             ; JMPZ 088e
0881: 22                         ; RTOD
0882: 0e 06                      ; CLITERAL 6
0884: 0f                         ; CFETCH
0885: 13                         ; MUL
0886: 11                         ; ADD
0887: 21                         ; DTOR
0888: 2c                         ; INC
0889: 08 93 08 00 00             ; JMP 0893
088e: 05                         ; DROP
088f: 22                         ; RTOD
0890: 0e 00                      ; CLITERAL 0
0892: 0c                         ; RET
0893: 08 56 08 00 00             ; JMP 0856
0898: 0c                         ; RET
;
0899: 18 0e f4 00 00             ; DICTP MOD (f40e)
089e: 1a                         ; OVER
089f: 1a                         ; OVER
08a0: 14                         ; DIV
08a1: 13                         ; MUL
08a2: 12                         ; SUB
08a3: 0c                         ; RET
;
08a4: 18 ff f3 00 00             ; DICTP /MOD (f3ff)
08a9: 1a                         ; OVER
08aa: 1a                         ; OVER
08ab: 14                         ; DIV
08ac: 06                         ; DUP
08ad: 21                         ; DTOR
08ae: 13                         ; MUL
08af: 12                         ; SUB
08b0: 22                         ; RTOD
08b1: 0c                         ; RET
;
08b2: 18 ef f3 00 00             ; DICTP SPACE (f3ef)
08b7: 0e 20                      ; CLITERAL 32
08b9: 19                         ; EMIT
08ba: 0c                         ; RET
;
08bb: 18 df f3 00 00             ; DICTP isNeg (f3df)
08c0: 01 c6 08 00 00             ; LITERAL 2246 (8c6)
08c5: 0c                         ; RET
08c6: 00                         ; RESET
08c7: 00                         ; RESET
08c8: 00                         ; RESET
08c9: 00                         ; RESET
08ca: 0c                         ; RET
;
08cb: 18 ce f3 00 00             ; DICTP .isNeg (f3ce)
08d0: 0b bb 08 00 00             ; CALL isNeg (08bb)
08d5: 02                         ; FETCH
08d6: 09 de 08 00 00             ; JMPZ 08de
08db: 0e 2d                      ; CLITERAL 45
08dd: 19                         ; EMIT
08de: 0c                         ; RET
;
08df: 18 c1 f3 00 00             ; DICTP <# (f3c1)
08e4: 0e 00                      ; CLITERAL 0
08e6: 04                         ; SWAP
08e7: 06                         ; DUP
08e8: 0e 00                      ; CLITERAL 0
08ea: 15                         ; LT
08eb: 09 fc 08 00 00             ; JMPZ 08fc
08f0: 0b 1e 08 00 00             ; CALL NEGATE (081e)
08f5: 0e 01                      ; CLITERAL 1
08f7: 08 fe 08 00 00             ; JMP 08fe
08fc: 0e 00                      ; CLITERAL 0
08fe: 0b bb 08 00 00             ; CALL isNeg (08bb)
0903: 03                         ; STORE
0904: 0c                         ; RET
;
0905: 18 b5 f3 00 00             ; DICTP # (f3b5)
090a: 0e 06                      ; CLITERAL 6
090c: 0f                         ; CFETCH
090d: 0b a4 08 00 00             ; CALL /MOD (08a4)
0912: 04                         ; SWAP
0913: 0e 30                      ; CLITERAL 48
0915: 11                         ; ADD
0916: 06                         ; DUP
0917: 0e 39                      ; CLITERAL 57
0919: 17                         ; GT
091a: 09 22 09 00 00             ; JMPZ 0922
091f: 0e 07                      ; CLITERAL 7
0921: 11                         ; ADD
0922: 04                         ; SWAP
0923: 0c                         ; RET
;
0924: 18 a8 f3 00 00             ; DICTP #S (f3a8)
0929: 0b 05 09 00 00             ; CALL # (0905)
092e: 06                         ; DUP
092f: 0e 00                      ; CLITERAL 0
0931: 16                         ; EQ
0932: 09 29 09 00 00             ; JMPZ 0929
0937: 0c                         ; RET
;
0938: 18 9b f3 00 00             ; DICTP #> (f39b)
093d: 0c                         ; RET
;
093e: 18 8d f3 00 00             ; DICTP (.) (f38d)
0943: 0b df 08 00 00             ; CALL <# (08df)
0948: 0b 24 09 00 00             ; CALL #S (0924)
094d: 0b 38 09 00 00             ; CALL #> (0938)
0952: 05                         ; DROP
0953: 0b cb 08 00 00             ; CALL .isNeg (08cb)
0958: 19                         ; EMIT
0959: 06                         ; DUP
095a: 0e 00                      ; CLITERAL 0
095c: 16                         ; EQ
095d: 09 58 09 00 00             ; JMPZ 0958
0962: 05                         ; DROP
0963: 0c                         ; RET
;
0964: 18 81 f3 00 00             ; DICTP . (f381)
0969: 0b 3e 09 00 00             ; CALL (.) (093e)
096e: 0b b2 08 00 00             ; CALL SPACE (08b2)
0973: 0c                         ; RET
;
0974: 18 72 f3 00 00             ; DICTP HEX. (f372)
0979: 0e 06                      ; CLITERAL 6
097b: 0f                         ; CFETCH
097c: 04                         ; SWAP
097d: 0b bb 02 00 00             ; CALL HEX (02bb)
0982: 06                         ; DUP
0983: 0e 10                      ; CLITERAL 16
0985: 15                         ; LT
0986: 09 8e 09 00 00             ; JMPZ 098e
098b: 0e 30                      ; CLITERAL 48
098d: 19                         ; EMIT
098e: 0b 3e 09 00 00             ; CALL (.) (093e)
0993: 0e 06                      ; CLITERAL 6
0995: 10                         ; CSTORE
0996: 0c                         ; RET
;
0997: 18 5f f3 00 00             ; DICTP DECIMAL. (f35f)
099c: 0e 06                      ; CLITERAL 6
099e: 0f                         ; CFETCH
099f: 04                         ; SWAP
09a0: 0b c6 02 00 00             ; CALL DECIMAL (02c6)
09a5: 0b 3e 09 00 00             ; CALL (.) (093e)
09aa: 0e 06                      ; CLITERAL 6
09ac: 10                         ; CSTORE
09ad: 0c                         ; RET
;
09ae: 18 4d f3 00 00             ; DICTP BINARY. (f34d)
09b3: 0e 06                      ; CLITERAL 6
09b5: 0f                         ; CFETCH
09b6: 04                         ; SWAP
09b7: 0b dc 02 00 00             ; CALL BINARY (02dc)
09bc: 0b 3e 09 00 00             ; CALL (.) (093e)
09c1: 0e 06                      ; CLITERAL 6
09c3: 10                         ; CSTORE
09c4: 0c                         ; RET
;
09c5: 18 3f f3 00 00             ; DICTP MIN (f33f)
09ca: 1a                         ; OVER
09cb: 1a                         ; OVER
09cc: 17                         ; GT
09cd: 09 d3 09 00 00             ; JMPZ 09d3
09d2: 04                         ; SWAP
09d3: 05                         ; DROP
09d4: 0c                         ; RET
;
09d5: 18 31 f3 00 00             ; DICTP MAX (f331)
09da: 1a                         ; OVER
09db: 1a                         ; OVER
09dc: 15                         ; LT
09dd: 09 e3 09 00 00             ; JMPZ 09e3
09e2: 04                         ; SWAP
09e3: 05                         ; DROP
09e4: 0c                         ; RET
;
09e5: 18 24 f3 00 00             ; DICTP .S (f324)
09ea: 0e 20                      ; CLITERAL 32
09ec: 19                         ; EMIT
09ed: 26                         ; DEPTH
09ee: 0e 00                      ; CLITERAL 0
09f0: 15                         ; LT
09f1: 09 14 0a 00 00             ; JMPZ 0a14
09f6: 07 10 53 74 61 63 6b 20 75 6e 64 65 72 66 6c 6f 77 21 00 ; SLITERAL (09f7) [Stack underflow!]
0a09: 0b 24 05 00 00             ; CALL COUNT (0524)
0a0e: 0b 2e 05 00 00             ; CALL TYPE (052e)
0a13: fe                         ; RESET
0a14: 26                         ; DEPTH
0a15: 0e 00                      ; CLITERAL 0
0a17: 16                         ; EQ
0a18: 09 27 0a 00 00             ; JMPZ 0a27
0a1d: 0e 28                      ; CLITERAL 40
0a1f: 19                         ; EMIT
0a20: 0e ed                      ; CLITERAL 237
0a22: 19                         ; EMIT
0a23: 0e 29                      ; CLITERAL 41
0a25: 19                         ; EMIT
0a26: 0c                         ; RET
0a27: 0e 28                      ; CLITERAL 40
0a29: 19                         ; EMIT
0a2a: 0b b2 08 00 00             ; CALL SPACE (08b2)
0a2f: 26                         ; DEPTH
0a30: 2e                         ; DEC
0a31: 21                         ; DTOR
0a32: 22                         ; RTOD
0a33: 06                         ; DUP
0a34: 21                         ; DTOR
0a35: 25                         ; PICK
0a36: 0b 64 09 00 00             ; CALL . (0964)
0a3b: 22                         ; RTOD
0a3c: 06                         ; DUP
0a3d: 21                         ; DTOR
0a3e: 09 4b 0a 00 00             ; JMPZ 0a4b
0a43: 22                         ; RTOD
0a44: 2e                         ; DEC
0a45: 21                         ; DTOR
0a46: 08 51 0a 00 00             ; JMP 0a51
0a4b: 22                         ; RTOD
0a4c: 05                         ; DROP
0a4d: 0e 29                      ; CLITERAL 41
0a4f: 19                         ; EMIT
0a50: 0c                         ; RET
0a51: 08 32 0a 00 00             ; JMP 0a32
0a56: 0c                         ; RET
;
0a57: 18 10 f3 00 00             ; DICTP .(MEM_SZ) (f310)
0a5c: 07 08 4d 65 6d 6f 72 79 3a 20 00 ; SLITERAL (0a5d) [Memory: ]
0a67: 0b 4e 05 00 00             ; CALL CT (054e)
0a6c: 0b f3 03 00 00             ; CALL MEM_SZ (03f3)
0a71: 06                         ; DUP
0a72: 0b 74 09 00 00             ; CALL HEX. (0974)
0a77: 07 02 20 28 00             ; SLITERAL (0a78) [ (]
0a7c: 0b 4e 05 00 00             ; CALL CT (054e)
0a81: 0b 3e 09 00 00             ; CALL (.) (093e)
0a86: 07 01 29 00                ; SLITERAL (0a87) [)]
0a8a: 0b 4e 05 00 00             ; CALL CT (054e)
0a8f: 0c                         ; RET
;
0a90: 18 fe f2 00 00             ; DICTP .(HERE) (f2fe)
0a95: 07 06 48 45 52 45 3a 20 00 ; SLITERAL (0a96) [HERE: ]
0a9e: 0b 4e 05 00 00             ; CALL CT (054e)
0aa3: 0e 10                      ; CLITERAL 16
0aa5: 02                         ; FETCH
0aa6: 06                         ; DUP
0aa7: 0b 74 09 00 00             ; CALL HEX. (0974)
0aac: 07 02 20 28 00             ; SLITERAL (0aad) [ (]
0ab1: 0b 4e 05 00 00             ; CALL CT (054e)
0ab6: 0b 3e 09 00 00             ; CALL (.) (093e)
0abb: 07 01 29 00                ; SLITERAL (0abc) [)]
0abf: 0b 4e 05 00 00             ; CALL CT (054e)
0ac4: 0c                         ; RET
;
0ac5: 18 ec f2 00 00             ; DICTP .(LAST) (f2ec)
0aca: 07 06 4c 41 53 54 3a 20 00 ; SLITERAL (0acb) [LAST: ]
0ad3: 0b 4e 05 00 00             ; CALL CT (054e)
0ad8: 0e 14                      ; CLITERAL 20
0ada: 02                         ; FETCH
0adb: 06                         ; DUP
0adc: 0b 74 09 00 00             ; CALL HEX. (0974)
0ae1: 07 02 20 28 00             ; SLITERAL (0ae2) [ (]
0ae6: 0b 4e 05 00 00             ; CALL CT (054e)
0aeb: 0b 3e 09 00 00             ; CALL (.) (093e)
0af0: 07 01 29 00                ; SLITERAL (0af1) [)]
0af4: 0b 4e 05 00 00             ; CALL CT (054e)
0af9: 0c                         ; RET
;
0afa: 18 d6 f2 00 00             ; DICTP .WORD-SHORT (f2d6)
0aff: 06                         ; DUP
0b00: 0b d6 06 00 00             ; CALL DICT>NAME (06d6)
0b05: 0b 4e 05 00 00             ; CALL CT (054e)
0b0a: 0e 20                      ; CLITERAL 32
0b0c: 19                         ; EMIT
0b0d: 02                         ; FETCH
0b0e: 0c                         ; RET
;
0b0f: 18 c6 f2 00 00             ; DICTP WORDS (f2c6)
0b14: 0e 14                      ; CLITERAL 20
0b16: 02                         ; FETCH
0b17: 06                         ; DUP
0b18: 02                         ; FETCH
0b19: 0e 00                      ; CLITERAL 0
0b1b: 16                         ; EQ
0b1c: 09 29 0b 00 00             ; JMPZ 0b29
0b21: 05                         ; DROP
0b22: 0e 0d                      ; CLITERAL 13
0b24: 19                         ; EMIT
0b25: 0e 0a                      ; CLITERAL 10
0b27: 19                         ; EMIT
0b28: 0c                         ; RET
0b29: 0b fa 0a 00 00             ; CALL .WORD-SHORT (0afa)
0b2e: 08 17 0b 00 00             ; JMP 0b17
0b33: 0c                         ; RET
;
0b34: 18 b1 f2 00 00             ; DICTP .WORD-LONG (f2b1)
0b39: 06                         ; DUP
0b3a: 0b 74 09 00 00             ; CALL HEX. (0974)
0b3f: 0e 3a                      ; CLITERAL 58
0b41: 19                         ; EMIT
0b42: 0e 20                      ; CLITERAL 32
0b44: 19                         ; EMIT
0b45: 06                         ; DUP
0b46: 0b d6 06 00 00             ; CALL DICT>NAME (06d6)
0b4b: 0b 4e 05 00 00             ; CALL CT (054e)
0b50: 0e 20                      ; CLITERAL 32
0b52: 19                         ; EMIT
0b53: 06                         ; DUP
0b54: 0b 0a 07 00 00             ; CALL DICT.GetXT (070a)
0b59: 0e 28                      ; CLITERAL 40
0b5b: 19                         ; EMIT
0b5c: 0b 74 09 00 00             ; CALL HEX. (0974)
0b61: 0e 29                      ; CLITERAL 41
0b63: 19                         ; EMIT
0b64: 06                         ; DUP
0b65: 0b ca 06 00 00             ; CALL DICT>FLAGS (06ca)
0b6a: 0f                         ; CFETCH
0b6b: 06                         ; DUP
0b6c: 07 09 2c 20 46 6c 61 67 73 3a 20 00 ; SLITERAL (0b6d) [, Flags: ]
0b78: 0b 4e 05 00 00             ; CALL CT (054e)
0b7d: 0b 74 09 00 00             ; CALL HEX. (0974)
0b82: 06                         ; DUP
0b83: 0b 51 07 00 00             ; CALL FLAGS.ISINLINE? (0751)
0b88: 09 9e 0b 00 00             ; JMPZ 0b9e
0b8d: 07 09 20 28 49 4e 4c 49 4e 45 29 00 ; SLITERAL (0b8e) [ (INLINE)]
0b99: 0b 4e 05 00 00             ; CALL CT (054e)
0b9e: 0b 48 07 00 00             ; CALL FLAGS.ISIMMEDIATE? (0748)
0ba3: 09 bc 0b 00 00             ; JMPZ 0bbc
0ba8: 07 0c 20 28 49 4d 4d 45 44 49 41 54 45 29 00 ; SLITERAL (0ba9) [ (IMMEDIATE)]
0bb7: 0b 4e 05 00 00             ; CALL CT (054e)
0bbc: 0e 0d                      ; CLITERAL 13
0bbe: 19                         ; EMIT
0bbf: 0e 0a                      ; CLITERAL 10
0bc1: 19                         ; EMIT
0bc2: 02                         ; FETCH
0bc3: 0c                         ; RET
;
0bc4: 18 a0 f2 00 00             ; DICTP WORDSV (f2a0)
0bc9: 0b c5 0a 00 00             ; CALL .(LAST) (0ac5)
0bce: 0e 0d                      ; CLITERAL 13
0bd0: 19                         ; EMIT
0bd1: 0e 0a                      ; CLITERAL 10
0bd3: 19                         ; EMIT
0bd4: 0e 14                      ; CLITERAL 20
0bd6: 02                         ; FETCH
0bd7: 06                         ; DUP
0bd8: 02                         ; FETCH
0bd9: 0e 00                      ; CLITERAL 0
0bdb: 16                         ; EQ
0bdc: 09 e9 0b 00 00             ; JMPZ 0be9
0be1: 05                         ; DROP
0be2: 0e 0d                      ; CLITERAL 13
0be4: 19                         ; EMIT
0be5: 0e 0a                      ; CLITERAL 10
0be7: 19                         ; EMIT
0be8: 0c                         ; RET
0be9: 0b 34 0b 00 00             ; CALL .WORD-LONG (0b34)
0bee: 08 d7 0b 00 00             ; JMP 0bd7
0bf3: 0c                         ; RET
;
0bf4: 18 8c f2 00 00             ; DICTP NUM-WORDS (f28c)
0bf9: 0e 00                      ; CLITERAL 0
0bfb: 21                         ; DTOR
0bfc: 0e 14                      ; CLITERAL 20
0bfe: 02                         ; FETCH
0bff: 06                         ; DUP
0c00: 02                         ; FETCH
0c01: 0e 00                      ; CLITERAL 0
0c03: 16                         ; EQ
0c04: 09 12 0c 00 00             ; JMPZ 0c12
0c09: 05                         ; DROP
0c0a: 22                         ; RTOD
0c0b: 0e 0d                      ; CLITERAL 13
0c0d: 19                         ; EMIT
0c0e: 0e 0a                      ; CLITERAL 10
0c10: 19                         ; EMIT
0c11: 0c                         ; RET
0c12: 22                         ; RTOD
0c13: 2c                         ; INC
0c14: 21                         ; DTOR
0c15: 02                         ; FETCH
0c16: 08 ff 0b 00 00             ; JMP 0bff
0c1b: 0c                         ; RET
;
0c1c: 18 7b f2 00 00             ; DICTP .lastx (f27b)
0c21: 0e 0d                      ; CLITERAL 13
0c23: 19                         ; EMIT
0c24: 0e 0a                      ; CLITERAL 10
0c26: 19                         ; EMIT
0c27: 0e 14                      ; CLITERAL 20
0c29: 02                         ; FETCH
0c2a: 04                         ; SWAP
0c2b: 0e 00                      ; CLITERAL 0
0c2d: 1a                         ; OVER
0c2e: 1a                         ; OVER
0c2f: 17                         ; GT
0c30: 09 48 0c 00 00             ; JMPZ 0c48
0c35: 21                         ; DTOR
0c36: 04                         ; SWAP
0c37: 22                         ; RTOD
0c38: 04                         ; SWAP
0c39: 0b 34 0b 00 00             ; CALL .WORD-LONG (0b34)
0c3e: 04                         ; SWAP
0c3f: 21                         ; DTOR
0c40: 04                         ; SWAP
0c41: 22                         ; RTOD
0c42: 2c                         ; INC
0c43: 08 4c 0c 00 00             ; JMP 0c4c
0c48: 05                         ; DROP
0c49: 05                         ; DROP
0c4a: 05                         ; DROP
0c4b: 0c                         ; RET
0c4c: 08 2d 0c 00 00             ; JMP 0c2d
0c51: 0c                         ; RET
;
0c52: 18 69 f2 00 00             ; DICTP EXECUTE (f269)
0c57: 22                         ; RTOD
0c58: 05                         ; DROP
0c59: 21                         ; DTOR
0c5a: 0c                         ; RET
;
0c5b: 18 56 f2 00 00             ; DICTP find.ret (f256)
0c60: 06                         ; DUP
0c61: 0f                         ; CFETCH
0c62: 0e 0c                      ; CLITERAL 12
0c64: 16                         ; EQ
0c65: 09 6b 0c 00 00             ; JMPZ 0c6b
0c6a: 0c                         ; RET
0c6b: 2c                         ; INC
0c6c: 08 60 0c 00 00             ; JMP 0c60
0c71: 0c                         ; RET
;
0c72: 18 43 f2 00 00             ; DICTP (inline) (f243)
0c77: 1a                         ; OVER
0c78: 1a                         ; OVER
0c79: 15                         ; LT
0c7a: 09 80 0c 00 00             ; JMPZ 0c80
0c7f: 04                         ; SWAP
0c80: 06                         ; DUP
0c81: 0f                         ; CFETCH
0c82: 0b a8 02 00 00             ; CALL C, (02a8)
0c87: 2c                         ; INC
0c88: 1a                         ; OVER
0c89: 1a                         ; OVER
0c8a: 17                         ; GT
0c8b: 0a 80 0c 00 00             ; JMPNZ 0c80
0c90: 05                         ; DROP
0c91: 05                         ; DROP
0c92: 0c                         ; RET
;
0c93: 18 33 f2 00 00             ; DICTP DOES> (f233)
0c98: 22                         ; RTOD
0c99: 06                         ; DUP
0c9a: 0b 5b 0c 00 00             ; CALL find.ret (0c5b)
0c9f: 06                         ; DUP
0ca0: 21                         ; DTOR
0ca1: 2c                         ; INC
0ca2: 0b 72 0c 00 00             ; CALL (inline) (0c72)
0ca7: 0c                         ; RET
;
0ca8: 18 1d f2 00 00             ; DICTP Copy.INLINE (f21d)
0cad: 06                         ; DUP
0cae: 0f                         ; CFETCH
0caf: 0e 18                      ; CLITERAL 24
0cb1: 16                         ; EQ
0cb2: 09 bb 0c 00 00             ; JMPZ 0cbb
0cb7: 2c                         ; INC
0cb8: 0e 04                      ; CLITERAL 4
0cba: 11                         ; ADD
0cbb: 06                         ; DUP
0cbc: 0b 5b 0c 00 00             ; CALL find.ret (0c5b)
0cc1: 0b 72 0c 00 00             ; CALL (inline) (0c72)
0cc6: 0c                         ; RET
;
0cc7: 18 0c f2 00 00             ; DICTP strlen (f20c)
0ccc: 0e 00                      ; CLITERAL 0
0cce: 04                         ; SWAP
0ccf: 04                         ; SWAP
0cd0: 1a                         ; OVER
0cd1: 0f                         ; CFETCH
0cd2: 06                         ; DUP
0cd3: 09 de 0c 00 00             ; JMPZ 0cde
0cd8: 05                         ; DROP
0cd9: 2c                         ; INC
0cda: 04                         ; SWAP
0cdb: 2c                         ; INC
0cdc: 0e 01                      ; CLITERAL 1
0cde: 0a cf 0c 00 00             ; JMPNZ 0ccf
0ce3: 04                         ; SWAP
0ce4: 05                         ; DROP
0ce5: 0c                         ; RET
;
0ce6: 18 fc f1 00 00             ; DICTP cstr, (f1fc)
0ceb: 06                         ; DUP
0cec: 0f                         ; CFETCH
0ced: 1a                         ; OVER
0cee: 11                         ; ADD
0cef: 2c                         ; INC
0cf0: 2c                         ; INC
0cf1: 0b 72 0c 00 00             ; CALL (inline) (0c72)
0cf6: 0c                         ; RET
;
0cf7: 18 e8 f1 00 00             ; DICTP [COMPILE] (f1e8)
0cfc: 0b 51 07 00 00             ; CALL FLAGS.ISINLINE? (0751)
0d01: 09 10 0d 00 00             ; JMPZ 0d10
0d06: 0b a8 0c 00 00             ; CALL Copy.INLINE (0ca8)
0d0b: 08 1a 0d 00 00             ; JMP 0d1a
0d10: 0b 0e 01 00 00             ; CALL CALL (010e)
0d15: 0b 95 02 00 00             ; CALL , (0295)
0d1a: 0c                         ; RET
;
0d1b: 18 d2 f1 00 00             ; DICTP executeWord (f1d2)
0d20: 21                         ; DTOR
0d21: 22                         ; RTOD
0d22: 06                         ; DUP
0d23: 21                         ; DTOR
0d24: 0b 7a 07 00 00             ; CALL findInDict (077a)
0d29: 09 65 0d 00 00             ; JMPZ 0d65
0d2e: 22                         ; RTOD
0d2f: 05                         ; DROP
0d30: 0b fb 02 00 00             ; CALL ?COMPILING (02fb)
0d35: 09 5a 0d 00 00             ; JMPZ 0d5a
0d3a: 06                         ; DUP
0d3b: 0b 48 07 00 00             ; CALL FLAGS.ISIMMEDIATE? (0748)
0d40: 09 50 0d 00 00             ; JMPZ 0d50
0d45: 05                         ; DROP
0d46: 0b 52 0c 00 00             ; CALL EXECUTE (0c52)
0d4b: 08 55 0d 00 00             ; JMP 0d55
0d50: 0b f7 0c 00 00             ; CALL [COMPILE] (0cf7)
0d55: 08 60 0d 00 00             ; JMP 0d60
0d5a: 05                         ; DROP
0d5b: 0b 52 0c 00 00             ; CALL EXECUTE (0c52)
0d60: 08 bb 0d 00 00             ; JMP 0dbb
0d65: 05                         ; DROP
0d66: 05                         ; DROP
0d67: 22                         ; RTOD
0d68: 06                         ; DUP
0d69: 21                         ; DTOR
0d6a: 0b 3c 08 00 00             ; CALL isNumber? (083c)
0d6f: 09 ad 0d 00 00             ; JMPZ 0dad
0d74: 0b fb 02 00 00             ; CALL ?COMPILING (02fb)
0d79: 09 a8 0d 00 00             ; JMPZ 0da8
0d7e: 06                         ; DUP
0d7f: 0e 00                      ; CLITERAL 0
0d81: 0e ff                      ; CLITERAL 255
0d83: 0b d8 05 00 00             ; CALL BETWEEN (05d8)
0d88: 09 9e 0d 00 00             ; JMPZ 0d9e
0d8d: 0e 0e                      ; CLITERAL 14
0d8f: 0b 70 00 00 00             ; CALL C, (0070)
0d94: 0b a8 02 00 00             ; CALL C, (02a8)
0d99: 08 a8 0d 00 00             ; JMP 0da8
0d9e: 0b aa 00 00 00             ; CALL LITERAL (00aa)
0da3: 0b 95 02 00 00             ; CALL , (0295)
0da8: 08 b9 0d 00 00             ; JMP 0db9
0dad: 05                         ; DROP
0dae: 07 02 3f 3f 00             ; SLITERAL (0daf) [??]
0db3: 0b 4e 05 00 00             ; CALL CT (054e)
0db8: fe                         ; RESET
0db9: 22                         ; RTOD
0dba: 05                         ; DROP
0dbb: 0c                         ; RET
;
0dbc: 18 bb f1 00 00             ; DICTP executeInput (f1bb)
0dc1: 0b d3 03 00 00             ; CALL >IN (03d3)
0dc6: 02                         ; FETCH
0dc7: 0b 5a 06 00 00             ; CALL skipWS (065a)
0dcc: 0b d3 03 00 00             ; CALL >IN (03d3)
0dd1: 03                         ; STORE
0dd2: 0b d3 03 00 00             ; CALL >IN (03d3)
0dd7: 02                         ; FETCH
0dd8: 0f                         ; CFETCH
0dd9: 09 f9 0d 00 00             ; JMPZ 0df9
0dde: 0b d3 03 00 00             ; CALL >IN (03d3)
0de3: 02                         ; FETCH
0de4: 0b 83 06 00 00             ; CALL getOneWord (0683)
0de9: 0b d3 03 00 00             ; CALL >IN (03d3)
0dee: 03                         ; STORE
0def: 0b 1b 0d 00 00             ; CALL executeWord (0d1b)
0df4: 08 fa 0d 00 00             ; JMP 0dfa
0df9: 0c                         ; RET
0dfa: 08 c1 0d 00 00             ; JMP 0dc1
0dff: 0c                         ; RET
;
0e00: 18 ad f1 00 00             ; DICTP Pad (f1ad)
0e05: 0e 14                      ; CLITERAL 20
0e07: 02                         ; FETCH
0e08: 0e c8                      ; CLITERAL 200
0e0a: 12                         ; SUB
0e0b: 06                         ; DUP
0e0c: 0e 10                      ; CLITERAL 16
0e0e: 02                         ; FETCH
0e0f: 15                         ; LT
0e10: 09 27 0e 00 00             ; JMPZ 0e27
0e15: 07 0e 4f 75 74 20 6f 66 20 4d 65 6d 6f 72 79 21 00 ; SLITERAL (0e16) [Out of Memory!]
0e26: fe                         ; RESET
0e27: 0c                         ; RET
;
0e28: 18 92 f1 00 00             ; DICTP LoadingFromFile? (f192)
0e2d: 0e 1c                      ; CLITERAL 28
0e2f: 02                         ; FETCH
0e30: 0c                         ; RET
;
0e31: 18 78 f1 00 00             ; DICTP getLineFromFile (f178)
0e36: 0e c8                      ; CLITERAL 200
0e38: 0e 1c                      ; CLITERAL 28
0e3a: 02                         ; FETCH
0e3b: 1e                         ; FREADLINE
0e3c: 0e 00                      ; CLITERAL 0
0e3e: 16                         ; EQ
0e3f: 09 4b 0e 00 00             ; JMPZ 0e4b
0e44: 0e 1c                      ; CLITERAL 28
0e46: 0b f1 02 00 00             ; CALL OFF (02f1)
0e4b: 0c                         ; RET
;
0e4c: 18 66 f1 00 00             ; DICTP getLine (f166)
0e51: 0e 00                      ; CLITERAL 0
0e53: 0b 00 0e 00 00             ; CALL Pad (0e00)
0e58: 06                         ; DUP
0e59: 2c                         ; INC
0e5a: 0b d3 03 00 00             ; CALL >IN (03d3)
0e5f: 03                         ; STORE
0e60: 10                         ; CSTORE
0e61: 0b 28 0e 00 00             ; CALL LoadingFromFile? (0e28)
0e66: 09 76 0e 00 00             ; JMPZ 0e76
0e6b: 0b 00 0e 00 00             ; CALL Pad (0e00)
0e70: 0b 31 0e 00 00             ; CALL getLineFromFile (0e31)
0e75: 0c                         ; RET
0e76: 0e 00                      ; CLITERAL 0
0e78: 0b d3 03 00 00             ; CALL >IN (03d3)
0e7d: 02                         ; FETCH
0e7e: 10                         ; CSTORE
0e7f: 27                         ; GETCH
0e80: 06                         ; DUP
0e81: 0e 0d                      ; CLITERAL 13
0e83: 16                         ; EQ
0e84: 09 93 0e 00 00             ; JMPZ 0e93
0e89: 05                         ; DROP
0e8a: 0b 00 0e 00 00             ; CALL Pad (0e00)
0e8f: 0e 20                      ; CLITERAL 32
0e91: 19                         ; EMIT
0e92: 0c                         ; RET
0e93: 06                         ; DUP
0e94: 0e 09                      ; CLITERAL 9
0e96: 16                         ; EQ
0e97: 09 9f 0e 00 00             ; JMPZ 0e9f
0e9c: 05                         ; DROP
0e9d: 0e 20                      ; CLITERAL 32
0e9f: 06                         ; DUP
0ea0: 0e 03                      ; CLITERAL 3
0ea2: 16                         ; EQ
0ea3: 09 a9 0e 00 00             ; JMPZ 0ea9
0ea8: ff                         ; BYE
0ea9: 06                         ; DUP
0eaa: 0e 08                      ; CLITERAL 8
0eac: 16                         ; EQ
0ead: 09 e5 0e 00 00             ; JMPZ 0ee5
0eb2: 0b 00 0e 00 00             ; CALL Pad (0e00)
0eb7: 0f                         ; CFETCH
0eb8: 0e 00                      ; CLITERAL 0
0eba: 17                         ; GT
0ebb: 09 df 0e 00 00             ; JMPZ 0edf
0ec0: 0b 00 0e 00 00             ; CALL Pad (0e00)
0ec5: 0b c1 04 00 00             ; CALL C-- (04c1)
0eca: 0b d3 03 00 00             ; CALL >IN (03d3)
0ecf: 0b a9 04 00 00             ; CALL -- (04a9)
0ed4: 06                         ; DUP
0ed5: 19                         ; EMIT
0ed6: 0e 20                      ; CLITERAL 32
0ed8: 19                         ; EMIT
0ed9: 19                         ; EMIT
0eda: 08 e0 0e 00 00             ; JMP 0ee0
0edf: 05                         ; DROP
0ee0: 08 17 0f 00 00             ; JMP 0f17
0ee5: 06                         ; DUP
0ee6: 0e 20                      ; CLITERAL 32
0ee8: 0e 7f                      ; CLITERAL 127
0eea: 0b d8 05 00 00             ; CALL BETWEEN (05d8)
0eef: 09 16 0f 00 00             ; JMPZ 0f16
0ef4: 06                         ; DUP
0ef5: 19                         ; EMIT
0ef6: 0b d3 03 00 00             ; CALL >IN (03d3)
0efb: 02                         ; FETCH
0efc: 10                         ; CSTORE
0efd: 0b d3 03 00 00             ; CALL >IN (03d3)
0f02: 0b 9c 04 00 00             ; CALL ++ (049c)
0f07: 0b 00 0e 00 00             ; CALL Pad (0e00)
0f0c: 0b b6 04 00 00             ; CALL C++ (04b6)
0f11: 08 17 0f 00 00             ; JMP 0f17
0f16: 05                         ; DROP
0f17: 08 76 0e 00 00             ; JMP 0e76
0f1c: 0c                         ; RET
;
0f1d: 18 53 f1 00 00             ; DICTP strcpy2c (f153)
0f22: 06                         ; DUP
0f23: 21                         ; DTOR
0f24: 0e 00                      ; CLITERAL 0
0f26: 1a                         ; OVER
0f27: 10                         ; CSTORE
0f28: 2c                         ; INC
0f29: 04                         ; SWAP
0f2a: 06                         ; DUP
0f2b: 0f                         ; CFETCH
0f2c: 06                         ; DUP
0f2d: 09 47 0f 00 00             ; JMPZ 0f47
0f32: 0e 02                      ; CLITERAL 2
0f34: 25                         ; PICK
0f35: 10                         ; CSTORE
0f36: 04                         ; SWAP
0f37: 2c                         ; INC
0f38: 04                         ; SWAP
0f39: 2c                         ; INC
0f3a: 22                         ; RTOD
0f3b: 06                         ; DUP
0f3c: 21                         ; DTOR
0f3d: 0b b6 04 00 00             ; CALL C++ (04b6)
0f42: 08 50 0f 00 00             ; JMP 0f50
0f47: 21                         ; DTOR
0f48: 04                         ; SWAP
0f49: 22                         ; RTOD
0f4a: 04                         ; SWAP
0f4b: 10                         ; CSTORE
0f4c: 05                         ; DROP
0f4d: 22                         ; RTOD
0f4e: 05                         ; DROP
0f4f: 0c                         ; RET
0f50: 08 2a 0f 00 00             ; JMP 0f2a
0f55: 0c                         ; RET
;
0f56: 18 3d f1 00 00             ; DICTP Define-Word (f13d)
0f5b: 0e 14                      ; CLITERAL 20
0f5d: 02                         ; FETCH
0f5e: 1a                         ; OVER
0f5f: 0b c7 0c 00 00             ; CALL strlen (0cc7)
0f64: 0e 02                      ; CLITERAL 2
0f66: 0e 04                      ; CLITERAL 4
0f68: 13                         ; MUL
0f69: 0e 03                      ; CLITERAL 3
0f6b: 11                         ; ADD
0f6c: 11                         ; ADD
0f6d: 12                         ; SUB
0f6e: 06                         ; DUP
0f6f: 21                         ; DTOR
0f70: 21                         ; DTOR
0f71: 0e 14                      ; CLITERAL 20
0f73: 02                         ; FETCH
0f74: 22                         ; RTOD
0f75: 06                         ; DUP
0f76: 21                         ; DTOR
0f77: 03                         ; STORE
0f78: 22                         ; RTOD
0f79: 0e 04                      ; CLITERAL 4
0f7b: 11                         ; ADD
0f7c: 21                         ; DTOR
0f7d: 0e 10                      ; CLITERAL 16
0f7f: 02                         ; FETCH
0f80: 22                         ; RTOD
0f81: 06                         ; DUP
0f82: 21                         ; DTOR
0f83: 03                         ; STORE
0f84: 22                         ; RTOD
0f85: 0e 04                      ; CLITERAL 4
0f87: 11                         ; ADD
0f88: 21                         ; DTOR
0f89: 0e 00                      ; CLITERAL 0
0f8b: 22                         ; RTOD
0f8c: 06                         ; DUP
0f8d: 21                         ; DTOR
0f8e: 10                         ; CSTORE
0f8f: 22                         ; RTOD
0f90: 2c                         ; INC
0f91: 21                         ; DTOR
0f92: 22                         ; RTOD
0f93: 0b 1d 0f 00 00             ; CALL strcpy2c (0f1d)
0f98: 22                         ; RTOD
0f99: 0e 14                      ; CLITERAL 20
0f9b: 03                         ; STORE
0f9c: 0c                         ; RET
;
0f9d: 18 27 f1 00 00             ; DICTP CREATE-NAME (f127)
0fa2: 0b d3 03 00 00             ; CALL >IN (03d3)
0fa7: 02                         ; FETCH
0fa8: 0b 5a 06 00 00             ; CALL skipWS (065a)
0fad: 0b d3 03 00 00             ; CALL >IN (03d3)
0fb2: 03                         ; STORE
0fb3: 0b d3 03 00 00             ; CALL >IN (03d3)
0fb8: 02                         ; FETCH
0fb9: 0f                         ; CFETCH
0fba: 09 f2 0f 00 00             ; JMPZ 0ff2
0fbf: 0b d3 03 00 00             ; CALL >IN (03d3)
0fc4: 02                         ; FETCH
0fc5: 0b 83 06 00 00             ; CALL getOneWord (0683)
0fca: 0b d3 03 00 00             ; CALL >IN (03d3)
0fcf: 03                         ; STORE
0fd0: 06                         ; DUP
0fd1: 0f                         ; CFETCH
0fd2: 09 f0 0f 00 00             ; JMPZ 0ff0
0fd7: 0b 56 0f 00 00             ; CALL Define-Word (0f56)
0fdc: 0e 18                      ; CLITERAL 24
0fde: 0b 70 00 00 00             ; CALL C, (0070)
0fe3: 0e 14                      ; CLITERAL 20
0fe5: 02                         ; FETCH
0fe6: 0b 95 02 00 00             ; CALL , (0295)
0feb: 08 f2 0f 00 00             ; JMP 0ff2
0ff0: 05                         ; DROP
0ff1: fe                         ; RESET
0ff2: 0c                         ; RET
;
0ff3: 18 1b f1 00 00             ; DICTP : (f11b)
0ff8: 0b 9d 0f 00 00             ; CALL CREATE-NAME (0f9d)
0ffd: 0e 20                      ; CLITERAL 32
0fff: 0b e7 02 00 00             ; CALL ON (02e7)
1004: 0c                         ; RET
;
1005: 18 09 f1 00 00             ; DICTP :NONAME (f109)
100a: 0e 10                      ; CLITERAL 16
100c: 02                         ; FETCH
100d: 0e 20                      ; CLITERAL 32
100f: 0b e7 02 00 00             ; CALL ON (02e7)
1014: 0c                         ; RET
;
1015: 18 fd f0 00 00             ; DICTP ; (f0fd)
101a: 0b 1b 01 00 00             ; CALL RET (011b)
101f: 0e 20                      ; CLITERAL 32
1021: 0b f1 02 00 00             ; CALL OFF (02f1)
1026: 0c                         ; RET
;
1027: 18 e8 f0 00 00             ; DICTP ForgetLast (f0e8)
102c: 0e 14                      ; CLITERAL 20
102e: 02                         ; FETCH
102f: 0e 04                      ; CLITERAL 4
1031: 11                         ; ADD
1032: 02                         ; FETCH
1033: 0e 10                      ; CLITERAL 16
1035: 03                         ; STORE
1036: 0e 14                      ; CLITERAL 20
1038: 02                         ; FETCH
1039: 02                         ; FETCH
103a: 0e 14                      ; CLITERAL 20
103c: 03                         ; STORE
103d: 0c                         ; RET
;
103e: 18 d3 f0 00 00             ; DICTP resetState (f0d3)
1043: 0b fb 02 00 00             ; CALL ?COMPILING (02fb)
1048: 09 52 10 00 00             ; JMPZ 1052
104d: 0b 27 10 00 00             ; CALL ForgetLast (1027)
1052: 0e 20                      ; CLITERAL 32
1054: 0b f1 02 00 00             ; CALL OFF (02f1)
1059: 0b c6 02 00 00             ; CALL DECIMAL (02c6)
105e: 0c                         ; RET
;
105f: 18 c3 f0 00 00             ; DICTP ALLOT (f0c3)
1064: 0e 10                      ; CLITERAL 16
1066: 02                         ; FETCH
1067: 11                         ; ADD
1068: 0e 10                      ; CLITERAL 16
106a: 03                         ; STORE
106b: 0c                         ; RET
;
106c: 18 b7 f0 00 00             ; DICTP ? (f0b7)
1071: 02                         ; FETCH
1072: 0b 64 09 00 00             ; CALL . (0964)
1077: 0c                         ; RET
;
1078: 18 aa f0 00 00             ; DICTP C? (f0aa)
107d: 0f                         ; CFETCH
107e: 0b 64 09 00 00             ; CALL . (0964)
1083: 0c                         ; RET
;
1084: 18 9b f0 00 00             ; DICTP FREE (f09b)
1089: 0e 14                      ; CLITERAL 20
108b: 02                         ; FETCH
108c: 0e 10                      ; CLITERAL 16
108e: 02                         ; FETCH
108f: 12                         ; SUB
1090: 0c                         ; RET
;
1091: 18 8b f0 00 00             ; DICTP .FREE (f08b)
1096: 0b 84 10 00 00             ; CALL FREE (1084)
109b: 0b 3e 09 00 00             ; CALL (.) (093e)
10a0: 07 0c 20 62 79 74 65 73 20 66 72 65 65 2e 00 ; SLITERAL (10a1) [ bytes free.]
10af: 0b 4e 05 00 00             ; CALL CT (054e)
10b4: 0c                         ; RET
;
10b5: 18 78 f0 00 00             ; DICTP mainLoop (f078)
10ba: 0b 3e 10 00 00             ; CALL resetState (103e)
10bf: 0b 00 06 00 00             ; CALL tmp-init (0600)
10c4: 0b fb 02 00 00             ; CALL ?COMPILING (02fb)
10c9: 0e 00                      ; CLITERAL 0
10cb: 16                         ; EQ
10cc: 09 e1 10 00 00             ; JMPZ 10e1
10d1: 07 03 20 4f 4b 00          ; SLITERAL (10d2) [ OK]
10d7: 0b 4e 05 00 00             ; CALL CT (054e)
10dc: 0b e5 09 00 00             ; CALL .S (09e5)
10e1: 0e 0d                      ; CLITERAL 13
10e3: 19                         ; EMIT
10e4: 0e 0a                      ; CLITERAL 10
10e6: 19                         ; EMIT
10e7: 0b 4c 0e 00 00             ; CALL getLine (0e4c)
10ec: 2c                         ; INC
10ed: 0b d3 03 00 00             ; CALL >IN (03d3)
10f2: 03                         ; STORE
10f3: 0b bc 0d 00 00             ; CALL executeInput (0dbc)
10f8: 0e 20                      ; CLITERAL 32
10fa: 19                         ; EMIT
10fb: 08 bf 10 00 00             ; JMP 10bf
1100: 0c                         ; RET
;
1101: 18 69 f0 00 00             ; DICTP main (f069)
1106: 0e 20                      ; CLITERAL 32
1108: 02                         ; FETCH
1109: 0e 63                      ; CLITERAL 99
110b: 16                         ; EQ
110c: 09 26 11 00 00             ; JMPZ 1126
1111: 0e 20                      ; CLITERAL 32
1113: 0b f1 02 00 00             ; CALL OFF (02f1)
1118: 07 06 48 65 6c 6c 6f 2e 00 ; SLITERAL (1119) [Hello.]
1121: 0b 4e 05 00 00             ; CALL CT (054e)
1126: 0b b5 10 00 00             ; CALL mainLoop (10b5)
112b: 0c                         ; RET
;
112c: 18 52 f0 00 00             ; DICTP file-getLine (f052)
1131: 0b 00 0e 00 00             ; CALL Pad (0e00)
1136: 04                         ; SWAP
1137: 0e c8                      ; CLITERAL 200
1139: 04                         ; SWAP
113a: 1e                         ; FREADLINE
113b: 0b 00 0e 00 00             ; CALL Pad (0e00)
1140: 04                         ; SWAP
1141: 0c                         ; RET
;
1142: 18 43 f0 00 00             ; DICTP load (f043)
1147: 0e 00                      ; CLITERAL 0
1149: 0e 00                      ; CLITERAL 0
114b: 1c                         ; FOPEN
114c: 0e 00                      ; CLITERAL 0
114e: 16                         ; EQ
114f: 09 6e 11 00 00             ; JMPZ 116e
1154: 07 11 43 61 6e 6e 6f 74 20 6f 70 65 6e 20 66 69 6c 65 2e 00 ; SLITERAL (1155) [Cannot open file.]
1168: 0b 4e 05 00 00             ; CALL CT (054e)
116d: 0c                         ; RET
116e: 0e 1c                      ; CLITERAL 28
1170: 03                         ; STORE
1171: 0e 1c                      ; CLITERAL 28
1173: 02                         ; FETCH
1174: 0b 2c 11 00 00             ; CALL file-getLine (112c)
1179: 09 8f 11 00 00             ; JMPZ 118f
117e: 2c                         ; INC
117f: 0b d3 03 00 00             ; CALL >IN (03d3)
1184: 03                         ; STORE
1185: 0b bc 0d 00 00             ; CALL executeInput (0dbc)
118a: 08 9c 11 00 00             ; JMP 119c
118f: 05                         ; DROP
1190: 0e 1c                      ; CLITERAL 28
1192: 02                         ; FETCH
1193: 20                         ; FCLOSE
1194: 0e 1c                      ; CLITERAL 28
1196: 0b f1 02 00 00             ; CALL OFF (02f1)
119b: 0c                         ; RET
119c: 08 71 11 00 00             ; JMP 1171
11a1: 0c                         ; RET
;
11a2: 18 2f f0 00 00             ; DICTP STR.EMPTY (f02f)
11a7: 0e 00                      ; CLITERAL 0
11a9: 1a                         ; OVER
11aa: 03                         ; STORE
11ab: 0c                         ; RET
;
11ac: 18 1d f0 00 00             ; DICTP STR.LEN (f01d)
11b1: 06                         ; DUP
11b2: 0f                         ; CFETCH
11b3: 0c                         ; RET
;
11b4: 18 0a f0 00 00             ; DICTP STR.CATC (f00a)
11b9: 1a                         ; OVER
11ba: 06                         ; DUP
11bb: 0b b6 04 00 00             ; CALL C++ (04b6)
11c0: 06                         ; DUP
11c1: 0f                         ; CFETCH
11c2: 11                         ; ADD
11c3: 0e 00                      ; CLITERAL 0
11c5: 1a                         ; OVER
11c6: 2c                         ; INC
11c7: 10                         ; CSTORE
11c8: 10                         ; CSTORE
11c9: 0c                         ; RET
;
11ca: 18 f3 ef 00 00             ; DICTP STR.NULLTERM (eff3)
11cf: 06                         ; DUP
11d0: 06                         ; DUP
11d1: 0f                         ; CFETCH
11d2: 11                         ; ADD
11d3: 2c                         ; INC
11d4: 0e 00                      ; CLITERAL 0
11d6: 04                         ; SWAP
11d7: 10                         ; CSTORE
11d8: 0c                         ; RET
;
11d9: 18 e6 ef 00 00             ; DICTP I" (efe6)
11de: 0e 10                      ; CLITERAL 16
11e0: 02                         ; FETCH
11e1: 0e 64                      ; CLITERAL 100
11e3: 11                         ; ADD
11e4: 0e 00                      ; CLITERAL 0
11e6: 1a                         ; OVER
11e7: 03                         ; STORE
11e8: 0b d3 03 00 00             ; CALL >IN (03d3)
11ed: 02                         ; FETCH
11ee: 0f                         ; CFETCH
11ef: 06                         ; DUP
11f0: 0e 00                      ; CLITERAL 0
11f2: 16                         ; EQ
11f3: 09 14 12 00 00             ; JMPZ 1214
11f8: 07 10 6d 69 73 73 69 6e 67 20 63 6c 6f 73 69 6e 67 20 00 ; SLITERAL (11f9) [missing closing ]
120b: 0b 4e 05 00 00             ; CALL CT (054e)
1210: 0e 22                      ; CLITERAL 34
1212: 19                         ; EMIT
1213: fe                         ; RESET
1214: 0b d3 03 00 00             ; CALL >IN (03d3)
1219: 0b 9c 04 00 00             ; CALL ++ (049c)
121e: 06                         ; DUP
121f: 0e 22                      ; CLITERAL 34
1221: 16                         ; EQ
1222: 09 29 12 00 00             ; JMPZ 1229
1227: 05                         ; DROP
1228: 0c                         ; RET
1229: 0b b4 11 00 00             ; CALL STR.CATC (11b4)
122e: 08 e8 11 00 00             ; JMP 11e8
1233: 0c                         ; RET
;
1234: 18 da ef 00 00             ; DICTP " (efda)
1239: 0b fb 02 00 00             ; CALL ?COMPILING (02fb)
123e: 0e 00                      ; CLITERAL 0
1240: 16                         ; EQ
1241: 09 4c 12 00 00             ; JMPZ 124c
1246: 0b d9 11 00 00             ; CALL I" (11d9)
124b: 0c                         ; RET
124c: 0b da 00 00 00             ; CALL SLITERAL (00da)
1251: 0e 10                      ; CLITERAL 16
1253: 02                         ; FETCH
1254: 0e 00                      ; CLITERAL 0
1256: 0b a8 02 00 00             ; CALL C, (02a8)
125b: 0b d3 03 00 00             ; CALL >IN (03d3)
1260: 02                         ; FETCH
1261: 0f                         ; CFETCH
1262: 06                         ; DUP
1263: 0e 00                      ; CLITERAL 0
1265: 16                         ; EQ
1266: 09 90 12 00 00             ; JMPZ 1290
126b: 05                         ; DROP
126c: 2e                         ; DEC
126d: 0e 10                      ; CLITERAL 16
126f: 03                         ; STORE
1270: 07 11 6d 69 73 73 69 6e 67 20 63 6c 6f 73 69 6e 67 20 27 00 ; SLITERAL (1271) [missing closing ']
1284: 0b 4e 05 00 00             ; CALL CT (054e)
1289: 0e 22                      ; CLITERAL 34
128b: 19                         ; EMIT
128c: 0e 27                      ; CLITERAL 39
128e: 19                         ; EMIT
128f: fe                         ; RESET
1290: 0b d3 03 00 00             ; CALL >IN (03d3)
1295: 0b 9c 04 00 00             ; CALL ++ (049c)
129a: 06                         ; DUP
129b: 0e 22                      ; CLITERAL 34
129d: 16                         ; EQ
129e: 09 b4 12 00 00             ; JMPZ 12b4
12a3: 05                         ; DROP
12a4: 0e 10                      ; CLITERAL 16
12a6: 02                         ; FETCH
12a7: 0e 00                      ; CLITERAL 0
12a9: 0b a8 02 00 00             ; CALL C, (02a8)
12ae: 1a                         ; OVER
12af: 12                         ; SUB
12b0: 2e                         ; DEC
12b1: 04                         ; SWAP
12b2: 10                         ; CSTORE
12b3: 0c                         ; RET
12b4: 0b a8 02 00 00             ; CALL C, (02a8)
12b9: 08 5b 12 00 00             ; JMP 125b
12be: 0c                         ; RET
;
12bf: 18 cd ef 00 00             ; DICTP ll (efcd)
12c4: 07 09 6c 6f 61 64 73 2e 34 74 68 00 ; SLITERAL (12c5) [loads.4th]
12d0: 0b 42 11 00 00             ; CALL load (1142)
12d5: 0c                         ; RET
;
12d6: 18 ba ef 00 00             ; DICTP sys-info (efba)
12db: 0b 57 0a 00 00             ; CALL .(MEM_SZ) (0a57)
12e0: 0e 2c                      ; CLITERAL 44
12e2: 19                         ; EMIT
12e3: 0e 20                      ; CLITERAL 32
12e5: 19                         ; EMIT
12e6: 0b 90 0a 00 00             ; CALL .(HERE) (0a90)
12eb: 0e 2c                      ; CLITERAL 44
12ed: 19                         ; EMIT
12ee: 0e 20                      ; CLITERAL 32
12f0: 19                         ; EMIT
12f1: 0b c5 0a 00 00             ; CALL .(LAST) (0ac5)
12f6: 0e 2c                      ; CLITERAL 44
12f8: 19                         ; EMIT
12f9: 0e 20                      ; CLITERAL 32
12fb: 19                         ; EMIT
12fc: 0b 91 10 00 00             ; CALL .FREE (1091)
1301: 0e 0d                      ; CLITERAL 13
1303: 19                         ; EMIT
1304: 0e 0a                      ; CLITERAL 10
1306: 19                         ; EMIT
1307: 0c                         ; RET
;
1308: 18 a8 ef 00 00             ; DICTP countTo (efa8)
130d: 07 0b 63 6f 75 6e 74 69 6e 67 20 74 6f 00 ; SLITERAL (130e) [counting to]
131b: 0b 4e 05 00 00             ; CALL CT (054e)
1320: 06                         ; DUP
1321: 0b 64 09 00 00             ; CALL . (0964)
1326: 07 04 20 2e 2e 2e 00       ; SLITERAL (1327) [ ...]
132d: 0b 4e 05 00 00             ; CALL CT (054e)
1332: 0e 01                      ; CLITERAL 1
1334: 1a                         ; OVER
1335: 1a                         ; OVER
1336: 15                         ; LT
1337: 09 53 13 00 00             ; JMPZ 1353
133c: 07 06 20 64 6f 6e 65 2e 00 ; SLITERAL (133d) [ done.]
1345: 0b 4e 05 00 00             ; CALL CT (054e)
134a: 0e 0d                      ; CLITERAL 13
134c: 19                         ; EMIT
134d: 0e 0a                      ; CLITERAL 10
134f: 19                         ; EMIT
1350: 05                         ; DROP
1351: 05                         ; DROP
1352: 0c                         ; RET
1353: 2c                         ; INC
1354: 08 34 13 00 00             ; JMP 1334
1359: 0c                         ; RET
;
; End of code, Dictionary:
;
efa8: ba ef 00 00                ; countTo - (next: efba sys-info)
efac: 08 13 00 00 00             ; XT=1308, flags=00
efb1: 07 63 6f 75 6e 74 54 6f 00 ; 7, countTo
;
efba: cd ef 00 00                ; sys-info - (next: efcd ll)
efbe: d6 12 00 00 00             ; XT=12d6, flags=00
efc3: 08 73 79 73 2d 69 6e 66 6f 00 ; 8, sys-info
;
efcd: da ef 00 00                ; ll - (next: efda ")
efd1: bf 12 00 00 00             ; XT=12bf, flags=00
efd6: 02 6c 6c 00                ; 2, ll
;
efda: e6 ef 00 00                ; " - (next: efe6 I")
efde: 34 12 00 00 01             ; XT=1234, flags=01
efe3: 01 22 00                   ; 1, "
;
efe6: f3 ef 00 00                ; I" - (next: eff3 STR.NULLTERM)
efea: d9 11 00 00 00             ; XT=11d9, flags=00
efef: 02 49 22 00                ; 2, I"
;
eff3: 0a f0 00 00                ; STR.NULLTERM - (next: f00a STR.CATC)
eff7: ca 11 00 00 00             ; XT=11ca, flags=00
effc: 0c 53 54 52 2e 4e 55 4c 4c 54 45 52 4d 00 ; 12, STR.NULLTERM
;
f00a: 1d f0 00 00                ; STR.CATC - (next: f01d STR.LEN)
f00e: b4 11 00 00 00             ; XT=11b4, flags=00
f013: 08 53 54 52 2e 43 41 54 43 00 ; 8, STR.CATC
;
f01d: 2f f0 00 00                ; STR.LEN - (next: f02f STR.EMPTY)
f021: ac 11 00 00 02             ; XT=11ac, flags=02
f026: 07 53 54 52 2e 4c 45 4e 00 ; 7, STR.LEN
;
f02f: 43 f0 00 00                ; STR.EMPTY - (next: f043 load)
f033: a2 11 00 00 02             ; XT=11a2, flags=02
f038: 09 53 54 52 2e 45 4d 50 54 59 00 ; 9, STR.EMPTY
;
f043: 52 f0 00 00                ; load - (next: f052 file-getLine)
f047: 42 11 00 00 00             ; XT=1142, flags=00
f04c: 04 6c 6f 61 64 00          ; 4, load
;
f052: 69 f0 00 00                ; file-getLine - (next: f069 main)
f056: 2c 11 00 00 00             ; XT=112c, flags=00
f05b: 0c 66 69 6c 65 2d 67 65 74 4c 69 6e 65 00 ; 12, file-getLine
;
f069: 78 f0 00 00                ; main - (next: f078 mainLoop)
f06d: 01 11 00 00 00             ; XT=1101, flags=00
f072: 04 6d 61 69 6e 00          ; 4, main
;
f078: 8b f0 00 00                ; mainLoop - (next: f08b .FREE)
f07c: b5 10 00 00 00             ; XT=10b5, flags=00
f081: 08 6d 61 69 6e 4c 6f 6f 70 00 ; 8, mainLoop
;
f08b: 9b f0 00 00                ; .FREE - (next: f09b FREE)
f08f: 91 10 00 00 00             ; XT=1091, flags=00
f094: 05 2e 46 52 45 45 00       ; 5, .FREE
;
f09b: aa f0 00 00                ; FREE - (next: f0aa C?)
f09f: 84 10 00 00 00             ; XT=1084, flags=00
f0a4: 04 46 52 45 45 00          ; 4, FREE
;
f0aa: b7 f0 00 00                ; C? - (next: f0b7 ?)
f0ae: 78 10 00 00 00             ; XT=1078, flags=00
f0b3: 02 43 3f 00                ; 2, C?
;
f0b7: c3 f0 00 00                ; ? - (next: f0c3 ALLOT)
f0bb: 6c 10 00 00 00             ; XT=106c, flags=00
f0c0: 01 3f 00                   ; 1, ?
;
f0c3: d3 f0 00 00                ; ALLOT - (next: f0d3 resetState)
f0c7: 5f 10 00 00 00             ; XT=105f, flags=00
f0cc: 05 41 4c 4c 4f 54 00       ; 5, ALLOT
;
f0d3: e8 f0 00 00                ; resetState - (next: f0e8 ForgetLast)
f0d7: 3e 10 00 00 00             ; XT=103e, flags=00
f0dc: 0a 72 65 73 65 74 53 74 61 74 65 00 ; 10, resetState
;
f0e8: fd f0 00 00                ; ForgetLast - (next: f0fd ;)
f0ec: 27 10 00 00 00             ; XT=1027, flags=00
f0f1: 0a 46 6f 72 67 65 74 4c 61 73 74 00 ; 10, ForgetLast
;
f0fd: 09 f1 00 00                ; ; - (next: f109 :NONAME)
f101: 15 10 00 00 01             ; XT=1015, flags=01
f106: 01 3b 00                   ; 1, ;
;
f109: 1b f1 00 00                ; :NONAME - (next: f11b :)
f10d: 05 10 00 00 00             ; XT=1005, flags=00
f112: 07 3a 4e 4f 4e 41 4d 45 00 ; 7, :NONAME
;
f11b: 27 f1 00 00                ; : - (next: f127 CREATE-NAME)
f11f: f3 0f 00 00 00             ; XT=0ff3, flags=00
f124: 01 3a 00                   ; 1, :
;
f127: 3d f1 00 00                ; CREATE-NAME - (next: f13d Define-Word)
f12b: 9d 0f 00 00 00             ; XT=0f9d, flags=00
f130: 0b 43 52 45 41 54 45 2d 4e 41 4d 45 00 ; 11, CREATE-NAME
;
f13d: 53 f1 00 00                ; Define-Word - (next: f153 strcpy2c)
f141: 56 0f 00 00 00             ; XT=0f56, flags=00
f146: 0b 44 65 66 69 6e 65 2d 57 6f 72 64 00 ; 11, Define-Word
;
f153: 66 f1 00 00                ; strcpy2c - (next: f166 getLine)
f157: 1d 0f 00 00 00             ; XT=0f1d, flags=00
f15c: 08 73 74 72 63 70 79 32 63 00 ; 8, strcpy2c
;
f166: 78 f1 00 00                ; getLine - (next: f178 getLineFromFile)
f16a: 4c 0e 00 00 00             ; XT=0e4c, flags=00
f16f: 07 67 65 74 4c 69 6e 65 00 ; 7, getLine
;
f178: 92 f1 00 00                ; getLineFromFile - (next: f192 LoadingFromFile?)
f17c: 31 0e 00 00 00             ; XT=0e31, flags=00
f181: 0f 67 65 74 4c 69 6e 65 46 72 6f 6d 46 69 6c 65 00 ; 15, getLineFromFile
;
f192: ad f1 00 00                ; LoadingFromFile? - (next: f1ad Pad)
f196: 28 0e 00 00 00             ; XT=0e28, flags=00
f19b: 10 4c 6f 61 64 69 6e 67 46 72 6f 6d 46 69 6c 65 3f 00 ; 16, LoadingFromFile?
;
f1ad: bb f1 00 00                ; Pad - (next: f1bb executeInput)
f1b1: 00 0e 00 00 00             ; XT=0e00, flags=00
f1b6: 03 50 61 64 00             ; 3, Pad
;
f1bb: d2 f1 00 00                ; executeInput - (next: f1d2 executeWord)
f1bf: bc 0d 00 00 00             ; XT=0dbc, flags=00
f1c4: 0c 65 78 65 63 75 74 65 49 6e 70 75 74 00 ; 12, executeInput
;
f1d2: e8 f1 00 00                ; executeWord - (next: f1e8 [COMPILE])
f1d6: 1b 0d 00 00 00             ; XT=0d1b, flags=00
f1db: 0b 65 78 65 63 75 74 65 57 6f 72 64 00 ; 11, executeWord
;
f1e8: fc f1 00 00                ; [COMPILE] - (next: f1fc cstr,)
f1ec: f7 0c 00 00 00             ; XT=0cf7, flags=00
f1f1: 09 5b 43 4f 4d 50 49 4c 45 5d 00 ; 9, [COMPILE]
;
f1fc: 0c f2 00 00                ; cstr, - (next: f20c strlen)
f200: e6 0c 00 00 00             ; XT=0ce6, flags=00
f205: 05 63 73 74 72 2c 00       ; 5, cstr,
;
f20c: 1d f2 00 00                ; strlen - (next: f21d Copy.INLINE)
f210: c7 0c 00 00 00             ; XT=0cc7, flags=00
f215: 06 73 74 72 6c 65 6e 00    ; 6, strlen
;
f21d: 33 f2 00 00                ; Copy.INLINE - (next: f233 DOES>)
f221: a8 0c 00 00 00             ; XT=0ca8, flags=00
f226: 0b 43 6f 70 79 2e 49 4e 4c 49 4e 45 00 ; 11, Copy.INLINE
;
f233: 43 f2 00 00                ; DOES> - (next: f243 (inline))
f237: 93 0c 00 00 00             ; XT=0c93, flags=00
f23c: 05 44 4f 45 53 3e 00       ; 5, DOES>
;
f243: 56 f2 00 00                ; (inline) - (next: f256 find.ret)
f247: 72 0c 00 00 00             ; XT=0c72, flags=00
f24c: 08 28 69 6e 6c 69 6e 65 29 00 ; 8, (inline)
;
f256: 69 f2 00 00                ; find.ret - (next: f269 EXECUTE)
f25a: 5b 0c 00 00 00             ; XT=0c5b, flags=00
f25f: 08 66 69 6e 64 2e 72 65 74 00 ; 8, find.ret
;
f269: 7b f2 00 00                ; EXECUTE - (next: f27b .lastx)
f26d: 52 0c 00 00 00             ; XT=0c52, flags=00
f272: 07 45 58 45 43 55 54 45 00 ; 7, EXECUTE
;
f27b: 8c f2 00 00                ; .lastx - (next: f28c NUM-WORDS)
f27f: 1c 0c 00 00 00             ; XT=0c1c, flags=00
f284: 06 2e 6c 61 73 74 78 00    ; 6, .lastx
;
f28c: a0 f2 00 00                ; NUM-WORDS - (next: f2a0 WORDSV)
f290: f4 0b 00 00 00             ; XT=0bf4, flags=00
f295: 09 4e 55 4d 2d 57 4f 52 44 53 00 ; 9, NUM-WORDS
;
f2a0: b1 f2 00 00                ; WORDSV - (next: f2b1 .WORD-LONG)
f2a4: c4 0b 00 00 00             ; XT=0bc4, flags=00
f2a9: 06 57 4f 52 44 53 56 00    ; 6, WORDSV
;
f2b1: c6 f2 00 00                ; .WORD-LONG - (next: f2c6 WORDS)
f2b5: 34 0b 00 00 00             ; XT=0b34, flags=00
f2ba: 0a 2e 57 4f 52 44 2d 4c 4f 4e 47 00 ; 10, .WORD-LONG
;
f2c6: d6 f2 00 00                ; WORDS - (next: f2d6 .WORD-SHORT)
f2ca: 0f 0b 00 00 00             ; XT=0b0f, flags=00
f2cf: 05 57 4f 52 44 53 00       ; 5, WORDS
;
f2d6: ec f2 00 00                ; .WORD-SHORT - (next: f2ec .(LAST))
f2da: fa 0a 00 00 00             ; XT=0afa, flags=00
f2df: 0b 2e 57 4f 52 44 2d 53 48 4f 52 54 00 ; 11, .WORD-SHORT
;
f2ec: fe f2 00 00                ; .(LAST) - (next: f2fe .(HERE))
f2f0: c5 0a 00 00 00             ; XT=0ac5, flags=00
f2f5: 07 2e 28 4c 41 53 54 29 00 ; 7, .(LAST)
;
f2fe: 10 f3 00 00                ; .(HERE) - (next: f310 .(MEM_SZ))
f302: 90 0a 00 00 00             ; XT=0a90, flags=00
f307: 07 2e 28 48 45 52 45 29 00 ; 7, .(HERE)
;
f310: 24 f3 00 00                ; .(MEM_SZ) - (next: f324 .S)
f314: 57 0a 00 00 00             ; XT=0a57, flags=00
f319: 09 2e 28 4d 45 4d 5f 53 5a 29 00 ; 9, .(MEM_SZ)
;
f324: 31 f3 00 00                ; .S - (next: f331 MAX)
f328: e5 09 00 00 00             ; XT=09e5, flags=00
f32d: 02 2e 53 00                ; 2, .S
;
f331: 3f f3 00 00                ; MAX - (next: f33f MIN)
f335: d5 09 00 00 00             ; XT=09d5, flags=00
f33a: 03 4d 41 58 00             ; 3, MAX
;
f33f: 4d f3 00 00                ; MIN - (next: f34d BINARY.)
f343: c5 09 00 00 00             ; XT=09c5, flags=00
f348: 03 4d 49 4e 00             ; 3, MIN
;
f34d: 5f f3 00 00                ; BINARY. - (next: f35f DECIMAL.)
f351: ae 09 00 00 00             ; XT=09ae, flags=00
f356: 07 42 49 4e 41 52 59 2e 00 ; 7, BINARY.
;
f35f: 72 f3 00 00                ; DECIMAL. - (next: f372 HEX.)
f363: 97 09 00 00 00             ; XT=0997, flags=00
f368: 08 44 45 43 49 4d 41 4c 2e 00 ; 8, DECIMAL.
;
f372: 81 f3 00 00                ; HEX. - (next: f381 .)
f376: 74 09 00 00 00             ; XT=0974, flags=00
f37b: 04 48 45 58 2e 00          ; 4, HEX.
;
f381: 8d f3 00 00                ; . - (next: f38d (.))
f385: 64 09 00 00 00             ; XT=0964, flags=00
f38a: 01 2e 00                   ; 1, .
;
f38d: 9b f3 00 00                ; (.) - (next: f39b #>)
f391: 3e 09 00 00 00             ; XT=093e, flags=00
f396: 03 28 2e 29 00             ; 3, (.)
;
f39b: a8 f3 00 00                ; #> - (next: f3a8 #S)
f39f: 38 09 00 00 00             ; XT=0938, flags=00
f3a4: 02 23 3e 00                ; 2, #>
;
f3a8: b5 f3 00 00                ; #S - (next: f3b5 #)
f3ac: 24 09 00 00 00             ; XT=0924, flags=00
f3b1: 02 23 53 00                ; 2, #S
;
f3b5: c1 f3 00 00                ; # - (next: f3c1 <#)
f3b9: 05 09 00 00 00             ; XT=0905, flags=00
f3be: 01 23 00                   ; 1, #
;
f3c1: ce f3 00 00                ; <# - (next: f3ce .isNeg)
f3c5: df 08 00 00 00             ; XT=08df, flags=00
f3ca: 02 3c 23 00                ; 2, <#
;
f3ce: df f3 00 00                ; .isNeg - (next: f3df isNeg)
f3d2: cb 08 00 00 00             ; XT=08cb, flags=00
f3d7: 06 2e 69 73 4e 65 67 00    ; 6, .isNeg
;
f3df: ef f3 00 00                ; isNeg - (next: f3ef SPACE)
f3e3: bb 08 00 00 00             ; XT=08bb, flags=00
f3e8: 05 69 73 4e 65 67 00       ; 5, isNeg
;
f3ef: ff f3 00 00                ; SPACE - (next: f3ff /MOD)
f3f3: b2 08 00 00 00             ; XT=08b2, flags=00
f3f8: 05 53 50 41 43 45 00       ; 5, SPACE
;
f3ff: 0e f4 00 00                ; /MOD - (next: f40e MOD)
f403: a4 08 00 00 00             ; XT=08a4, flags=00
f408: 04 2f 4d 4f 44 00          ; 4, /MOD
;
f40e: 1c f4 00 00                ; MOD - (next: f41c isNumber?)
f412: 99 08 00 00 00             ; XT=0899, flags=00
f417: 03 4d 4f 44 00             ; 3, MOD
;
f41c: 30 f4 00 00                ; isNumber? - (next: f430 ABS)
f420: 3c 08 00 00 00             ; XT=083c, flags=00
f425: 09 69 73 4e 75 6d 62 65 72 3f 00 ; 9, isNumber?
;
f430: 3e f4 00 00                ; ABS - (next: f43e NEGATE)
f434: 28 08 00 00 00             ; XT=0828, flags=00
f439: 03 41 42 53 00             ; 3, ABS
;
f43e: 4f f4 00 00                ; NEGATE - (next: f44f isNumChar?)
f442: 1e 08 00 00 00             ; XT=081e, flags=00
f447: 06 4e 45 47 41 54 45 00    ; 6, NEGATE
;
f44f: 64 f4 00 00                ; isNumChar? - (next: f464 isHEX?)
f453: cd 07 00 00 00             ; XT=07cd, flags=00
f458: 0a 69 73 4e 75 6d 43 68 61 72 3f 00 ; 10, isNumChar?
;
f464: 75 f4 00 00                ; isHEX? - (next: f475 findInDict)
f468: c1 07 00 00 00             ; XT=07c1, flags=00
f46d: 06 69 73 48 45 58 3f 00    ; 6, isHEX?
;
f475: 8a f4 00 00                ; findInDict - (next: f48a DICT.GetINLINE)
f479: 7a 07 00 00 00             ; XT=077a, flags=00
f47e: 0a 66 69 6e 64 49 6e 44 69 63 74 00 ; 10, findInDict
;
f48a: a3 f4 00 00                ; DICT.GetINLINE - (next: f4a3 DICT.GetIMMEDIATE)
f48e: 6a 07 00 00 00             ; XT=076a, flags=00
f493: 0e 44 49 43 54 2e 47 65 74 49 4e 4c 49 4e 45 00 ; 14, DICT.GetINLINE
;
f4a3: bf f4 00 00                ; DICT.GetIMMEDIATE - (next: f4bf FLAGS.ISINLINE?)
f4a7: 5a 07 00 00 00             ; XT=075a, flags=00
f4ac: 11 44 49 43 54 2e 47 65 74 49 4d 4d 45 44 49 41 54 45 00 ; 17, DICT.GetIMMEDIATE
;
f4bf: d9 f4 00 00                ; FLAGS.ISINLINE? - (next: f4d9 FLAGS.ISIMMEDIATE?)
f4c3: 51 07 00 00 00             ; XT=0751, flags=00
f4c8: 0f 46 4c 41 47 53 2e 49 53 49 4e 4c 49 4e 45 3f 00 ; 15, FLAGS.ISINLINE?
;
f4d9: f6 f4 00 00                ; FLAGS.ISIMMEDIATE? - (next: f4f6 XT.GetDICTP)
f4dd: 48 07 00 00 00             ; XT=0748, flags=00
f4e2: 12 46 4c 41 47 53 2e 49 53 49 4d 4d 45 44 49 41 54 45 3f 00 ; 18, FLAGS.ISIMMEDIATE?
;
f4f6: 0c f5 00 00                ; XT.GetDICTP - (next: f50c DICTP>NAME)
f4fa: 2f 07 00 00 00             ; XT=072f, flags=00
f4ff: 0b 58 54 2e 47 65 74 44 49 43 54 50 00 ; 11, XT.GetDICTP
;
f50c: 21 f5 00 00                ; DICTP>NAME - (next: f521 DICT.GetFLAGS)
f510: 22 07 00 00 00             ; XT=0722, flags=00
f515: 0a 44 49 43 54 50 3e 4e 41 4d 45 00 ; 10, DICTP>NAME
;
f521: 39 f5 00 00                ; DICT.GetFLAGS - (next: f539 DICT.GetXT)
f525: 16 07 00 00 00             ; XT=0716, flags=00
f52a: 0d 44 49 43 54 2e 47 65 74 46 4c 41 47 53 00 ; 13, DICT.GetFLAGS
;
f539: 4e f5 00 00                ; DICT.GetXT - (next: f54e NAME>DICT)
f53d: 0a 07 00 00 00             ; XT=070a, flags=00
f542: 0a 44 49 43 54 2e 47 65 74 58 54 00 ; 10, DICT.GetXT
;
f54e: 62 f5 00 00                ; NAME>DICT - (next: f562 FLAGS>DICT)
f552: fd 06 00 00 00             ; XT=06fd, flags=00
f557: 09 4e 41 4d 45 3e 44 49 43 54 00 ; 9, NAME>DICT
;
f562: 77 f5 00 00                ; FLAGS>DICT - (next: f577 XT>DICT)
f566: f1 06 00 00 00             ; XT=06f1, flags=00
f56b: 0a 46 4c 41 47 53 3e 44 49 43 54 00 ; 10, FLAGS>DICT
;
f577: 89 f5 00 00                ; XT>DICT - (next: f589 NEXT>DICT)
f57b: e8 06 00 00 00             ; XT=06e8, flags=00
f580: 07 58 54 3e 44 49 43 54 00 ; 7, XT>DICT
;
f589: 9d f5 00 00                ; NEXT>DICT - (next: f59d DICT>NAME)
f58d: e2 06 00 00 00             ; XT=06e2, flags=00
f592: 09 4e 45 58 54 3e 44 49 43 54 00 ; 9, NEXT>DICT
;
f59d: b1 f5 00 00                ; DICT>NAME - (next: f5b1 DICT>FLAGS)
f5a1: d6 06 00 00 00             ; XT=06d6, flags=00
f5a6: 09 44 49 43 54 3e 4e 41 4d 45 00 ; 9, DICT>NAME
;
f5b1: c6 f5 00 00                ; DICT>FLAGS - (next: f5c6 DICT>XT)
f5b5: ca 06 00 00 00             ; XT=06ca, flags=00
f5ba: 0a 44 49 43 54 3e 46 4c 41 47 53 00 ; 10, DICT>FLAGS
;
f5c6: d8 f5 00 00                ; DICT>XT - (next: f5d8 DICT>NEXT)
f5ca: c1 06 00 00 00             ; XT=06c1, flags=00
f5cf: 07 44 49 43 54 3e 58 54 00 ; 7, DICT>XT
;
f5d8: ec f5 00 00                ; DICT>NEXT - (next: f5ec getOneWord)
f5dc: bb 06 00 00 00             ; XT=06bb, flags=00
f5e1: 09 44 49 43 54 3e 4e 45 58 54 00 ; 9, DICT>NEXT
;
f5ec: 01 f6 00 00                ; getOneWord - (next: f601 skipWS)
f5f0: 83 06 00 00 00             ; XT=0683, flags=00
f5f5: 0a 67 65 74 4f 6e 65 57 6f 72 64 00 ; 10, getOneWord
;
f601: 12 f6 00 00                ; skipWS - (next: f612 getInput)
f605: 5a 06 00 00 00             ; XT=065a, flags=00
f60a: 06 73 6b 69 70 57 53 00    ; 6, skipWS
;
f612: 25 f6 00 00                ; getInput - (next: f625 PAD)
f616: 44 06 00 00 00             ; XT=0644, flags=00
f61b: 08 67 65 74 49 6e 70 75 74 00 ; 8, getInput
;
f625: 33 f6 00 00                ; PAD - (next: f633 tmp-alloc)
f629: 32 06 00 00 00             ; XT=0632, flags=00
f62e: 03 50 41 44 00             ; 3, PAD
;
f633: 47 f6 00 00                ; tmp-alloc - (next: f647 tmp-cur)
f637: 1b 06 00 00 00             ; XT=061b, flags=00
f63c: 09 74 6d 70 2d 61 6c 6c 6f 63 00 ; 9, tmp-alloc
;
f647: 59 f6 00 00                ; tmp-cur - (next: f659 tmp-init)
f64b: 0f 06 00 00 00             ; XT=060f, flags=00
f650: 07 74 6d 70 2d 63 75 72 00 ; 7, tmp-cur
;
f659: 6c f6 00 00                ; tmp-init - (next: f66c (tmp))
f65d: 00 06 00 00 00             ; XT=0600, flags=00
f662: 08 74 6d 70 2d 69 6e 69 74 00 ; 8, tmp-init
;
f66c: 7c f6 00 00                ; (tmp) - (next: f67c BETWEEN)
f670: f0 05 00 00 00             ; XT=05f0, flags=00
f675: 05 28 74 6d 70 29 00       ; 5, (tmp)
;
f67c: 8e f6 00 00                ; BETWEEN - (next: f68e CR)
f680: d8 05 00 00 00             ; XT=05d8, flags=00
f685: 07 42 45 54 57 45 45 4e 00 ; 7, BETWEEN
;
f68e: 9b f6 00 00                ; CR - (next: f69b CRLF)
f692: cc 05 00 00 02             ; XT=05cc, flags=02
f697: 02 43 52 00                ; 2, CR
;
f69b: aa f6 00 00                ; CRLF - (next: f6aa BL)
f69f: c0 05 00 00 02             ; XT=05c0, flags=02
f6a4: 04 43 52 4c 46 00          ; 4, CRLF
;
f6aa: b7 f6 00 00                ; BL - (next: f6b7 ()
f6ae: b7 05 00 00 02             ; XT=05b7, flags=02
f6b3: 02 42 4c 00                ; 2, BL
;
f6b7: c3 f6 00 00                ; ( - (next: f6c3 \)
f6bb: 6d 05 00 00 01             ; XT=056d, flags=01
f6c0: 01 28 00                   ; 1, (
;
f6c3: cf f6 00 00                ; \ - (next: f6cf CT)
f6c7: 5e 05 00 00 01             ; XT=055e, flags=01
f6cc: 01 5c 00                   ; 1, \
;
f6cf: dc f6 00 00                ; CT - (next: f6dc TYPE)
f6d3: 4e 05 00 00 00             ; XT=054e, flags=00
f6d8: 02 43 54 00                ; 2, CT
;
f6dc: eb f6 00 00                ; TYPE - (next: f6eb COUNT)
f6e0: 2e 05 00 00 00             ; XT=052e, flags=00
f6e5: 04 54 59 50 45 00          ; 4, TYPE
;
f6eb: fb f6 00 00                ; COUNT - (next: f6fb NOT)
f6ef: 24 05 00 00 00             ; XT=0524, flags=00
f6f4: 05 43 4f 55 4e 54 00       ; 5, COUNT
;
f6fb: 09 f7 00 00                ; NOT - (next: f709 FALSE)
f6ff: 1b 05 00 00 02             ; XT=051b, flags=02
f704: 03 4e 4f 54 00             ; 3, NOT
;
f709: 19 f7 00 00                ; FALSE - (next: f719 TRUE)
f70d: 13 05 00 00 02             ; XT=0513, flags=02
f712: 05 46 41 4c 53 45 00       ; 5, FALSE
;
f719: 28 f7 00 00                ; TRUE - (next: f728 >=)
f71d: 0b 05 00 00 02             ; XT=050b, flags=02
f722: 04 54 52 55 45 00          ; 4, TRUE
;
f728: 35 f7 00 00                ; >= - (next: f735 <=)
f72c: 01 05 00 00 02             ; XT=0501, flags=02
f731: 02 3e 3d 00                ; 2, >=
;
f735: 42 f7 00 00                ; <= - (next: f742 <>)
f739: f7 04 00 00 02             ; XT=04f7, flags=02
f73e: 02 3c 3d 00                ; 2, <=
;
f742: 4f f7 00 00                ; <> - (next: f74f 0=)
f746: ed 04 00 00 02             ; XT=04ed, flags=02
f74b: 02 3c 3e 00                ; 2, <>
;
f74f: 5c f7 00 00                ; 0= - (next: f75c C+!)
f753: e4 04 00 00 02             ; XT=04e4, flags=02
f758: 02 30 3d 00                ; 2, 0=
;
f75c: 6a f7 00 00                ; C+! - (next: f76a +!)
f760: d8 04 00 00 00             ; XT=04d8, flags=00
f765: 03 43 2b 21 00             ; 3, C+!
;
f76a: 77 f7 00 00                ; +! - (next: f777 C--)
f76e: cc 04 00 00 00             ; XT=04cc, flags=00
f773: 02 2b 21 00                ; 2, +!
;
f777: 85 f7 00 00                ; C-- - (next: f785 C++)
f77b: c1 04 00 00 00             ; XT=04c1, flags=00
f780: 03 43 2d 2d 00             ; 3, C--
;
f785: 93 f7 00 00                ; C++ - (next: f793 --)
f789: b6 04 00 00 00             ; XT=04b6, flags=00
f78e: 03 43 2b 2b 00             ; 3, C++
;
f793: a0 f7 00 00                ; -- - (next: f7a0 ++)
f797: a9 04 00 00 00             ; XT=04a9, flags=00
f79c: 02 2d 2d 00                ; 2, --
;
f7a0: ad f7 00 00                ; ++ - (next: f7ad -=)
f7a4: 9c 04 00 00 00             ; XT=049c, flags=00
f7a9: 02 2b 2b 00                ; 2, ++
;
f7ad: ba f7 00 00                ; -= - (next: f7ba +=)
f7b1: 90 04 00 00 00             ; XT=0490, flags=00
f7b6: 02 2d 3d 00                ; 2, -=
;
f7ba: c7 f7 00 00                ; += - (next: f7c7 2/)
f7be: 85 04 00 00 00             ; XT=0485, flags=00
f7c3: 02 2b 3d 00                ; 2, +=
;
f7c7: d4 f7 00 00                ; 2/ - (next: f7d4 2*)
f7cb: 7c 04 00 00 02             ; XT=047c, flags=02
f7d0: 02 32 2f 00                ; 2, 2/
;
f7d4: e1 f7 00 00                ; 2* - (next: f7e1 1-)
f7d8: 73 04 00 00 02             ; XT=0473, flags=02
f7dd: 02 32 2a 00                ; 2, 2*
;
f7e1: ee f7 00 00                ; 1- - (next: f7ee 1+)
f7e5: 6c 04 00 00 02             ; XT=046c, flags=02
f7ea: 02 31 2d 00                ; 2, 1-
;
f7ee: fb f7 00 00                ; 1+ - (next: f7fb -ROT)
f7f2: 65 04 00 00 02             ; XT=0465, flags=02
f7f7: 02 31 2b 00                ; 2, 1+
;
f7fb: 0a f8 00 00                ; -ROT - (next: f80a ROT)
f7ff: 5b 04 00 00 02             ; XT=045b, flags=02
f804: 04 2d 52 4f 54 00          ; 4, -ROT
;
f80a: 18 f8 00 00                ; ROT - (next: f818 NIP)
f80e: 51 04 00 00 02             ; XT=0451, flags=02
f813: 03 52 4f 54 00             ; 3, ROT
;
f818: 26 f8 00 00                ; NIP - (next: f826 TUCK)
f81c: 49 04 00 00 02             ; XT=0449, flags=02
f821: 03 4e 49 50 00             ; 3, NIP
;
f826: 35 f8 00 00                ; TUCK - (next: f835 2DROP)
f82a: 41 04 00 00 02             ; XT=0441, flags=02
f82f: 04 54 55 43 4b 00          ; 4, TUCK
;
f835: 45 f8 00 00                ; 2DROP - (next: f845 2DUP)
f839: 39 04 00 00 02             ; XT=0439, flags=02
f83e: 05 32 44 52 4f 50 00       ; 5, 2DROP
;
f845: 54 f8 00 00                ; 2DUP - (next: f854 RDROP)
f849: 31 04 00 00 02             ; XT=0431, flags=02
f84e: 04 32 44 55 50 00          ; 4, 2DUP
;
f854: 64 f8 00 00                ; RDROP - (next: f864 R@)
f858: 29 04 00 00 02             ; XT=0429, flags=02
f85d: 05 52 44 52 4f 50 00       ; 5, RDROP
;
f864: 71 f8 00 00                ; R@ - (next: f871 DEBUG-OFF)
f868: 20 04 00 00 02             ; XT=0420, flags=02
f86d: 02 52 40 00                ; 2, R@
;
f871: 85 f8 00 00                ; DEBUG-OFF - (next: f885 DEBUG-ON)
f875: 17 04 00 00 02             ; XT=0417, flags=02
f87a: 09 44 45 42 55 47 2d 4f 46 46 00 ; 9, DEBUG-OFF
;
f885: 98 f8 00 00                ; DEBUG-ON - (next: f898 TRACE-OFF)
f889: 0e 04 00 00 02             ; XT=040e, flags=02
f88e: 08 44 45 42 55 47 2d 4f 4e 00 ; 8, DEBUG-ON
;
f898: ac f8 00 00                ; TRACE-OFF - (next: f8ac TRACE-ON)
f89c: 05 04 00 00 02             ; XT=0405, flags=02
f8a1: 09 54 52 41 43 45 2d 4f 46 46 00 ; 9, TRACE-OFF
;
f8ac: bf f8 00 00                ; TRACE-ON - (next: f8bf MEM_SZ)
f8b0: fc 03 00 00 02             ; XT=03fc, flags=02
f8b5: 08 54 52 41 43 45 2d 4f 4e 00 ; 8, TRACE-ON
;
f8bf: d0 f8 00 00                ; MEM_SZ - (next: f8d0 isNeg)
f8c3: f3 03 00 00 00             ; XT=03f3, flags=00
f8c8: 06 4d 45 4d 5f 53 5a 00    ; 6, MEM_SZ
;
f8d0: e0 f8 00 00                ; isNeg - (next: f8e0 >IN)
f8d4: e3 03 00 00 00             ; XT=03e3, flags=00
f8d9: 05 69 73 4e 65 67 00       ; 5, isNeg
;
f8e0: ee f8 00 00                ; >IN - (next: f8ee LEAVE)
f8e4: d3 03 00 00 00             ; XT=03d3, flags=00
f8e9: 03 3e 49 4e 00             ; 3, >IN
;
f8ee: fe f8 00 00                ; LEAVE - (next: f8fe UNTIL)
f8f2: be 03 00 00 01             ; XT=03be, flags=01
f8f7: 05 4c 45 41 56 45 00       ; 5, LEAVE
;
f8fe: 0e f9 00 00                ; UNTIL - (next: f90e WHILE)
f902: a4 03 00 00 01             ; XT=03a4, flags=01
f907: 05 55 4e 54 49 4c 00       ; 5, UNTIL
;
f90e: 1e f9 00 00                ; WHILE - (next: f91e AGAIN)
f912: 8a 03 00 00 01             ; XT=038a, flags=01
f917: 05 57 48 49 4c 45 00       ; 5, WHILE
;
f91e: 2e f9 00 00                ; AGAIN - (next: f92e BEGIN)
f922: 70 03 00 00 01             ; XT=0370, flags=01
f927: 05 41 47 41 49 4e 00       ; 5, AGAIN
;
f92e: 3e f9 00 00                ; BEGIN - (next: f93e THEN)
f932: 5d 03 00 00 01             ; XT=035d, flags=01
f937: 05 42 45 47 49 4e 00       ; 5, BEGIN
;
f93e: 4d f9 00 00                ; THEN - (next: f94d ELSE)
f942: 48 03 00 00 01             ; XT=0348, flags=01
f947: 04 54 48 45 4e 00          ; 4, THEN
;
f94d: 5c f9 00 00                ; ELSE - (next: f95c IF)
f951: 23 03 00 00 01             ; XT=0323, flags=01
f956: 04 45 4c 53 45 00          ; 4, ELSE
;
f95c: 69 f9 00 00                ; IF - (next: f969 ?COMPILING)
f960: 04 03 00 00 01             ; XT=0304, flags=01
f965: 02 49 46 00                ; 2, IF
;
f969: 7e f9 00 00                ; ?COMPILING - (next: f97e OFF)
f96d: fb 02 00 00 00             ; XT=02fb, flags=00
f972: 0a 3f 43 4f 4d 50 49 4c 49 4e 47 00 ; 10, ?COMPILING
;
f97e: 8c f9 00 00                ; OFF - (next: f98c ON)
f982: f1 02 00 00 00             ; XT=02f1, flags=00
f987: 03 4f 46 46 00             ; 3, OFF
;
f98c: 99 f9 00 00                ; ON - (next: f999 BINARY)
f990: e7 02 00 00 00             ; XT=02e7, flags=00
f995: 02 4f 4e 00                ; 2, ON
;
f999: aa f9 00 00                ; BINARY - (next: f9aa OCTAL)
f99d: dc 02 00 00 00             ; XT=02dc, flags=00
f9a2: 06 42 49 4e 41 52 59 00    ; 6, BINARY
;
f9aa: ba f9 00 00                ; OCTAL - (next: f9ba DECIMAL)
f9ae: d1 02 00 00 00             ; XT=02d1, flags=00
f9b3: 05 4f 43 54 41 4c 00       ; 5, OCTAL
;
f9ba: cc f9 00 00                ; DECIMAL - (next: f9cc HEX)
f9be: c6 02 00 00 00             ; XT=02c6, flags=00
f9c3: 07 44 45 43 49 4d 41 4c 00 ; 7, DECIMAL
;
f9cc: da f9 00 00                ; HEX - (next: f9da C,)
f9d0: bb 02 00 00 00             ; XT=02bb, flags=00
f9d5: 03 48 45 58 00             ; 3, HEX
;
f9da: e7 f9 00 00                ; C, - (next: f9e7 ,)
f9de: a8 02 00 00 00             ; XT=02a8, flags=00
f9e3: 02 43 2c 00                ; 2, C,
;
f9e7: f3 f9 00 00                ; , - (next: f9f3 HERE)
f9eb: 95 02 00 00 00             ; XT=0295, flags=00
f9f0: 01 2c 00                   ; 1, ,
;
f9f3: 02 fa 00 00                ; HERE - (next: fa02 LAST)
f9f7: 8c 02 00 00 02             ; XT=028c, flags=02
f9fc: 04 48 45 52 45 00          ; 4, HERE
;
fa02: 11 fa 00 00                ; LAST - (next: fa11 FLAG_INLINE)
fa06: 83 02 00 00 02             ; XT=0283, flags=02
fa0b: 04 4c 41 53 54 00          ; 4, LAST
;
fa11: 27 fa 00 00                ; FLAG_INLINE - (next: fa27 FLAG_IMMEDIATE)
fa15: 7b 02 00 00 02             ; XT=027b, flags=02
fa1a: 0b 46 4c 41 47 5f 49 4e 4c 49 4e 45 00 ; 11, FLAG_INLINE
;
fa27: 40 fa 00 00                ; FLAG_IMMEDIATE - (next: fa40 CELLS)
fa2b: 73 02 00 00 02             ; XT=0273, flags=02
fa30: 0e 46 4c 41 47 5f 49 4d 4d 45 44 49 41 54 45 00 ; 14, FLAG_IMMEDIATE
;
fa40: 50 fa 00 00                ; CELLS - (next: fa50 IMMEDIATE)
fa44: 6a 02 00 00 02             ; XT=026a, flags=02
fa49: 05 43 45 4c 4c 53 00       ; 5, CELLS
;
fa50: 64 fa 00 00                ; IMMEDIATE - (next: fa64 INLINE)
fa54: 54 02 00 00 00             ; XT=0254, flags=00
fa59: 09 49 4d 4d 45 44 49 41 54 45 00 ; 9, IMMEDIATE
;
fa64: 75 fa 00 00                ; INLINE - (next: fa75 BYE)
fa68: 3e 02 00 00 00             ; XT=023e, flags=00
fa6d: 06 49 4e 4c 49 4e 45 00    ; 6, INLINE
;
fa75: 83 fa 00 00                ; BYE - (next: fa83 RESET)
fa79: 37 02 00 00 02             ; XT=0237, flags=02
fa7e: 03 42 59 45 00             ; 3, BYE
;
fa83: 93 fa 00 00                ; RESET - (next: fa93 BREAK)
fa87: 30 02 00 00 02             ; XT=0230, flags=02
fa8c: 05 52 45 53 45 54 00       ; 5, RESET
;
fa93: a3 fa 00 00                ; BREAK - (next: faa3 GETTICK)
fa97: 29 02 00 00 02             ; XT=0229, flags=02
fa9c: 05 42 52 45 41 4b 00       ; 5, BREAK
;
faa3: b5 fa 00 00                ; GETTICK - (next: fab5 DEC)
faa7: 22 02 00 00 02             ; XT=0222, flags=02
faac: 07 47 45 54 54 49 43 4b 00 ; 7, GETTICK
;
fab5: c3 fa 00 00                ; DEC - (next: fac3 RDEPTH)
fab9: 1b 02 00 00 02             ; XT=021b, flags=02
fabe: 03 44 45 43 00             ; 3, DEC
;
fac3: d4 fa 00 00                ; RDEPTH - (next: fad4 INC)
fac7: 14 02 00 00 02             ; XT=0214, flags=02
facc: 06 52 44 45 50 54 48 00    ; 6, RDEPTH
;
fad4: e2 fa 00 00                ; INC - (next: fae2 USPOP)
fad8: 0d 02 00 00 02             ; XT=020d, flags=02
fadd: 03 49 4e 43 00             ; 3, INC
;
fae2: f2 fa 00 00                ; USPOP - (next: faf2 USPUSH)
fae6: 06 02 00 00 02             ; XT=0206, flags=02
faeb: 05 55 53 50 4f 50 00       ; 5, USPOP
;
faf2: 03 fb 00 00                ; USPUSH - (next: fb03 USINIT)
faf6: ff 01 00 00 02             ; XT=01ff, flags=02
fafb: 06 55 53 50 55 53 48 00    ; 6, USPUSH
;
fb03: 14 fb 00 00                ; USINIT - (next: fb14 COMPAREI)
fb07: f8 01 00 00 02             ; XT=01f8, flags=02
fb0c: 06 55 53 49 4e 49 54 00    ; 6, USINIT
;
fb14: 27 fb 00 00                ; COMPAREI - (next: fb27 GETCH)
fb18: f1 01 00 00 02             ; XT=01f1, flags=02
fb1d: 08 43 4f 4d 50 41 52 45 49 00 ; 8, COMPAREI
;
fb27: 37 fb 00 00                ; GETCH - (next: fb37 DEPTH)
fb2b: ea 01 00 00 02             ; XT=01ea, flags=02
fb30: 05 47 45 54 43 48 00       ; 5, GETCH
;
fb37: 47 fb 00 00                ; DEPTH - (next: fb47 PICK)
fb3b: e3 01 00 00 02             ; XT=01e3, flags=02
fb40: 05 44 45 50 54 48 00       ; 5, DEPTH
;
fb47: 56 fb 00 00                ; PICK - (next: fb56 AND)
fb4b: dc 01 00 00 02             ; XT=01dc, flags=02
fb50: 04 50 49 43 4b 00          ; 4, PICK
;
fb56: 64 fb 00 00                ; AND - (next: fb64 LOGLEVEL)
fb5a: d5 01 00 00 02             ; XT=01d5, flags=02
fb5f: 03 41 4e 44 00             ; 3, AND
;
fb64: 77 fb 00 00                ; LOGLEVEL - (next: fb77 R>)
fb68: ce 01 00 00 02             ; XT=01ce, flags=02
fb6d: 08 4c 4f 47 4c 45 56 45 4c 00 ; 8, LOGLEVEL
;
fb77: 84 fb 00 00                ; R> - (next: fb84 >R)
fb7b: c7 01 00 00 02             ; XT=01c7, flags=02
fb80: 02 52 3e 00                ; 2, R>
;
fb84: 91 fb 00 00                ; >R - (next: fb91 FCLOSE)
fb88: c0 01 00 00 02             ; XT=01c0, flags=02
fb8d: 02 3e 52 00                ; 2, >R
;
fb91: a2 fb 00 00                ; FCLOSE - (next: fba2 FWRITE)
fb95: b9 01 00 00 02             ; XT=01b9, flags=02
fb9a: 06 46 43 4c 4f 53 45 00    ; 6, FCLOSE
;
fba2: b3 fb 00 00                ; FWRITE - (next: fbb3 FREADLINE)
fba6: b2 01 00 00 02             ; XT=01b2, flags=02
fbab: 06 46 57 52 49 54 45 00    ; 6, FWRITE
;
fbb3: c7 fb 00 00                ; FREADLINE - (next: fbc7 FREAD)
fbb7: ab 01 00 00 02             ; XT=01ab, flags=02
fbbc: 09 46 52 45 41 44 4c 49 4e 45 00 ; 9, FREADLINE
;
fbc7: d7 fb 00 00                ; FREAD - (next: fbd7 FOPEN)
fbcb: a4 01 00 00 02             ; XT=01a4, flags=02
fbd0: 05 46 52 45 41 44 00       ; 5, FREAD
;
fbd7: e7 fb 00 00                ; FOPEN - (next: fbe7 COMPARE)
fbdb: 9d 01 00 00 02             ; XT=019d, flags=02
fbe0: 05 46 4f 50 45 4e 00       ; 5, FOPEN
;
fbe7: f9 fb 00 00                ; COMPARE - (next: fbf9 OVER)
fbeb: 96 01 00 00 02             ; XT=0196, flags=02
fbf0: 07 43 4f 4d 50 41 52 45 00 ; 7, COMPARE
;
fbf9: 08 fc 00 00                ; OVER - (next: fc08 EMIT)
fbfd: 8f 01 00 00 02             ; XT=018f, flags=02
fc02: 04 4f 56 45 52 00          ; 4, OVER
;
fc08: 17 fc 00 00                ; EMIT - (next: fc17 DICTP)
fc0c: 88 01 00 00 02             ; XT=0188, flags=02
fc11: 04 45 4d 49 54 00          ; 4, EMIT
;
fc17: 27 fc 00 00                ; DICTP - (next: fc27 >)
fc1b: 7b 01 00 00 02             ; XT=017b, flags=02
fc20: 05 44 49 43 54 50 00       ; 5, DICTP
;
fc27: 33 fc 00 00                ; > - (next: fc33 =)
fc2b: 74 01 00 00 02             ; XT=0174, flags=02
fc30: 01 3e 00                   ; 1, >
;
fc33: 3f fc 00 00                ; = - (next: fc3f <)
fc37: 6d 01 00 00 02             ; XT=016d, flags=02
fc3c: 01 3d 00                   ; 1, =
;
fc3f: 4b fc 00 00                ; < - (next: fc4b /)
fc43: 66 01 00 00 02             ; XT=0166, flags=02
fc48: 01 3c 00                   ; 1, <
;
fc4b: 57 fc 00 00                ; / - (next: fc57 *)
fc4f: 5f 01 00 00 02             ; XT=015f, flags=02
fc54: 01 2f 00                   ; 1, /
;
fc57: 63 fc 00 00                ; * - (next: fc63 -)
fc5b: 58 01 00 00 02             ; XT=0158, flags=02
fc60: 01 2a 00                   ; 1, *
;
fc63: 6f fc 00 00                ; - - (next: fc6f +)
fc67: 51 01 00 00 02             ; XT=0151, flags=02
fc6c: 01 2d 00                   ; 1, -
;
fc6f: 7b fc 00 00                ; + - (next: fc7b C!)
fc73: 4a 01 00 00 02             ; XT=014a, flags=02
fc78: 01 2b 00                   ; 1, +
;
fc7b: 88 fc 00 00                ; C! - (next: fc88 C@)
fc7f: 43 01 00 00 02             ; XT=0143, flags=02
fc84: 02 43 21 00                ; 2, C!
;
fc88: 95 fc 00 00                ; C@ - (next: fc95 CLITERAL)
fc8c: 3c 01 00 00 02             ; XT=013c, flags=02
fc91: 02 43 40 00                ; 2, C@
;
fc95: a8 fc 00 00                ; CLITERAL - (next: fca8 OR)
fc99: 2f 01 00 00 02             ; XT=012f, flags=02
fc9e: 08 43 4c 49 54 45 52 41 4c 00 ; 8, CLITERAL
;
fca8: b5 fc 00 00                ; OR - (next: fcb5 RET)
fcac: 28 01 00 00 02             ; XT=0128, flags=02
fcb1: 02 4f 52 00                ; 2, OR
;
fcb5: c3 fc 00 00                ; RET - (next: fcc3 CALL)
fcb9: 1b 01 00 00 00             ; XT=011b, flags=00
fcbe: 03 52 45 54 00             ; 3, RET
;
fcc3: d2 fc 00 00                ; CALL - (next: fcd2 JMPNZ)
fcc7: 0e 01 00 00 00             ; XT=010e, flags=00
fccc: 04 43 41 4c 4c 00          ; 4, CALL
;
fcd2: e2 fc 00 00                ; JMPNZ - (next: fce2 JMPZ)
fcd6: 01 01 00 00 00             ; XT=0101, flags=00
fcdb: 05 4a 4d 50 4e 5a 00       ; 5, JMPNZ
;
fce2: f1 fc 00 00                ; JMPZ - (next: fcf1 JMP)
fce6: f4 00 00 00 00             ; XT=00f4, flags=00
fceb: 04 4a 4d 50 5a 00          ; 4, JMPZ
;
fcf1: ff fc 00 00                ; JMP - (next: fcff SLITERAL)
fcf5: e7 00 00 00 00             ; XT=00e7, flags=00
fcfa: 03 4a 4d 50 00             ; 3, JMP
;
fcff: 12 fd 00 00                ; SLITERAL - (next: fd12 DUP)
fd03: da 00 00 00 00             ; XT=00da, flags=00
fd08: 08 53 4c 49 54 45 52 41 4c 00 ; 8, SLITERAL
;
fd12: 20 fd 00 00                ; DUP - (next: fd20 DROP)
fd16: d3 00 00 00 02             ; XT=00d3, flags=02
fd1b: 03 44 55 50 00             ; 3, DUP
;
fd20: 2f fd 00 00                ; DROP - (next: fd2f SWAP)
fd24: cc 00 00 00 02             ; XT=00cc, flags=02
fd29: 04 44 52 4f 50 00          ; 4, DROP
;
fd2f: 3e fd 00 00                ; SWAP - (next: fd3e !)
fd33: c5 00 00 00 02             ; XT=00c5, flags=02
fd38: 04 53 57 41 50 00          ; 4, SWAP
;
fd3e: 4a fd 00 00                ; ! - (next: fd4a @)
fd42: be 00 00 00 02             ; XT=00be, flags=02
fd47: 01 21 00                   ; 1, !
;
fd4a: 56 fd 00 00                ; @ - (next: fd56 LITERAL)
fd4e: b7 00 00 00 02             ; XT=00b7, flags=02
fd53: 01 40 00                   ; 1, @
;
fd56: 68 fd 00 00                ; LITERAL - (next: fd68 ])
fd5a: aa 00 00 00 00             ; XT=00aa, flags=00
fd5f: 07 4c 49 54 45 52 41 4c 00 ; 7, LITERAL
;
fd68: 74 fd 00 00                ; ] - (next: fd74 [)
fd6c: 9f 00 00 00 01             ; XT=009f, flags=01
fd71: 01 5d 00                   ; 1, ]
;
fd74: 80 fd 00 00                ; [ - (next: fd80 ,)
fd78: 94 00 00 00 01             ; XT=0094, flags=01
fd7d: 01 5b 00                   ; 1, [
;
fd80: 8c fd 00 00                ; , - (next: fd8c C,)
fd84: 81 00 00 00 00             ; XT=0081, flags=00
fd89: 01 2c 00                   ; 1, ,
;
fd8c: 99 fd 00 00                ; C, - (next: fd99 STATE)
fd90: 70 00 00 00 00             ; XT=0070, flags=00
fd95: 02 43 2c 00                ; 2, C,
;
fd99: a9 fd 00 00                ; STATE - (next: fda9 INPUT-FP)
fd9d: 68 00 00 00 02             ; XT=0068, flags=02
fda2: 05 53 54 41 54 45 00       ; 5, STATE
;
fda9: bc fd 00 00                ; INPUT-FP - (next: fdbc (LAST))
fdad: 60 00 00 00 02             ; XT=0060, flags=02
fdb2: 08 49 4e 50 55 54 2d 46 50 00 ; 8, INPUT-FP
;
fdbc: cd fd 00 00                ; (LAST) - (next: fdcd (HERE))
fdc0: 58 00 00 00 02             ; XT=0058, flags=02
fdc5: 06 28 4c 41 53 54 29 00    ; 6, (LAST)
;
fdcd: de fd 00 00                ; (HERE) - (next: fdde CELL)
fdd1: 50 00 00 00 02             ; XT=0050, flags=02
fdd6: 06 28 48 45 52 45 29 00    ; 6, (HERE)
;
fdde: ed fd 00 00                ; CELL - (next: fded BASE)
fde2: 48 00 00 00 02             ; XT=0048, flags=02
fde7: 04 43 45 4c 4c 00          ; 4, CELL
;
fded: fc fd 00 00                ; BASE - (next: fdfc <end>)
fdf1: 40 00 00 00 02             ; XT=0040, flags=02
fdf6: 04 42 41 53 45 00          ; 4, BASE
;
fdfc: 00 00 00 00                ; End.
