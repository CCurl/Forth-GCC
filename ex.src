\ -----------------------------------------------------------------------------------------------
\ This is an example stand-alone forth program.
\ The program starts a word named "main".
\ If "main" is not found, it starts with the last word defined.
\ -----------------------------------------------------------------------------------------------

: 2DUP OVER OVER ;
: CR 13 EMIT 10 EMIT ; : BL 32 EMIT ;
: COUNT DUP 1 + SWAP C@ ;
: TYPE 
	OVER + SWAP
	.BEGIN
		2DUP > 0 = .IF DROP DROP .LEAVE .THEN
		DUP C@ EMIT 1 +
	.AGAIN ;

: CT COUNT TYPE ;

: /MOD 2DUP / DUP >R * - R> SWAP ; 		\ ( num1 num2 -- num3 mod )

: (.)			\ ( num -- )
	DUP 0 = .IF DROP 48 EMIT .LEAVE .THEN
	DUP 0 < .IF 0 SWAP - 1 .ELSE 0 .THEN >R

	0 SWAP
	.BEGIN
		DUP .IF
			BASE C@ /MOD 
			\ DUP 48 + EMIT
			48 OVER 9 > .IF 7 + .THEN
			+ SWAP
		.ELSE
			\ spit out the string
			DROP
			R> .IF 45 EMIT .THEN
			.BEGIN DUP .IF EMIT .ELSE DROP .LEAVE .THEN .AGAIN
		.THEN
	.AGAIN ;

: DECIMAL 10 BASE C! ; : HEX 16 BASE C! ;

HEX
: H. BASE C@ SWAP HEX DUP 10 < .IF 30 EMIT .THEN (.) BASE C! ; 
: D. BASE C@ SWAP DECIMAL (.) BASE C! ;
DECIMAL

: . BL (.) ;

\ **********************************************************************************
: ascii
	2DUP < .IF
		SWAP
	.THEN
	SWAP OVER
	.BEGIN
	2DUP < .IF
		DROP DROP DROP .LEAVE
	.THEN
	>R >R
	DUP H. BL DUP D. BL DUP EMIT CR 1 +
	R> R>
	1 +
	.AGAIN ;

: .w DUP D. BL DUP 2 CELL * + 1 + CT BL @ ;

: WORDS (LAST) @ 
	.BEGIN
		DUP @ 0 = .IF DROP .LEAVE .THEN
		.w
	.AGAIN ;

: count-to
    S" counting to " CT DUP D. S"  ..." CT
    1
    .BEGIN 
        2DUP < 
        .IF
            S"  DONE." CT
            DROP DROP .LEAVE
        .THEN 
        1 + 
    .AGAIN ;

: go S" Hello, world!" COUNT TYPE 
	CR 33 55 ascii CR
	WORDS
	CR 1000 1000 * 25 * count-to CR
	36 @ S" VM size is " CT D. S"  bytes, " CT
	DP @ D. S"  bytes used, " CT
	(LAST) @ DP @ - D. S"  bytes free" CT
	S" ." CT
	BYE ;
